// Solution for LeetCode problem 301 - Remove Invalid Parentheses
// This solution avoids union types and `match`.

fun isValid(s: string): bool {
  var count = 0
  var i = 0
  while i < len(s) {
    let c = s[i]
    if c == "(" {
      count = count + 1
    } else if c == ")" {
      if count == 0 {
        return false
      }
      count = count - 1
    }
    i = i + 1
  }
  return count == 0
}

fun removeInvalidParentheses(s: string): list<string> {
  var result: list<string> = []
  var visited: map<string, bool> = {}
  var queue: list<string> = [s]
  visited[s] = true
  var found = false

  while len(queue) > 0 {
    let cur = queue[0]
    queue = queue[1:len(queue)]
    if isValid(cur) {
      result = result + [cur]
      found = true
    }
    if found {
      continue
    }
    var i = 0
    while i < len(cur) {
      let ch = cur[i]
      if ch != "(" && ch != ")" {
        i = i + 1
        continue
      }
      let next = cur[0:i] + cur[i+1:len(cur)]
      if !(next in visited) {
        queue = queue + [next]
        visited[next] = true
      }
      i = i + 1
    }
  }

  if len(result) == 0 {
    return [""]
  }
  return result
}

// Test cases from LeetCode

test "example 1" {
  expect removeInvalidParentheses("()())()") == ["(())()","()()()"]
}

test "example 2" {
  expect removeInvalidParentheses("(a)())()") == ["(a())()","(a)()()"]
}

test "example 3" {
  expect removeInvalidParentheses(")(") == [""]
}

// Additional edge cases

test "already valid" {
  expect removeInvalidParentheses("(a)(b)") == ["(a)(b)"]
}

test "empty" {
  expect removeInvalidParentheses("") == [""]
}

/*
Common Mochi language errors and how to fix them:
1. Forgetting to declare a mutable variable with 'var'.
   count = 0            // ❌ produces undefined variable error
   var count = 0        // ✅ declare mutable variables with 'var'
2. Using '=' instead of '==' in a comparison.
   if ch = '(' { ... }  // ❌ assignment
   if ch == '(' { ... } // ✅ equality check
3. Trying Python-style queue methods like queue.append(x).
   queue.append(x)      // ❌ not Mochi
   queue = queue + [x]  // ✅ use list concatenation
*/
