// Solution for LeetCode problem 136 - Single Number

fun singleNumber(nums: list<int>): int {
  var counts: map<int, int> = {}
  for n in nums {
    if n in counts {
      counts[n] = counts[n] + 1
    } else {
      counts[n] = 1
    }
  }
  for n in nums {
    if counts[n] == 1 {
      return n
    }
  }
  return 0
}

// Test cases from the LeetCode problem statement

test "example 1" {
  expect singleNumber([2,2,1]) == 1
}

test "example 2" {
  expect singleNumber([4,1,2,1,2]) == 4
}

test "example 3" {
  expect singleNumber([1]) == 1
}

// Additional edge case

test "with negatives" {
  expect singleNumber([4,-1,2,-1,2]) == 4
}

/*
Common Mochi language errors and how to fix them:
1. Writing `=` instead of `==` in conditionals.
2. Updating a variable declared with `let` (use `var` for mutation).
3. Forgetting to check `n in counts` before accessing `counts[n]`.
*/
