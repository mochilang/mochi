fun increasingTriplet(nums: list<int>): bool {
  var first = 2147483647
  var second = 2147483647
  for n in nums {
    if n <= first {
      first = n
    } else if n <= second {
      second = n
    } else {
      return true
    }
  }
  return false
}

test "example 1" {
  expect increasingTriplet([1,2,3,4,5]) == true
}

test "example 2" {
  expect increasingTriplet([5,4,3,2,1]) == false
}

test "example 3" {
  expect increasingTriplet([2,1,5,0,4,6]) == true
}

test "duplicate numbers" {
  expect increasingTriplet([2,2,2,2,2]) == false
}

// Common Mochi language mistakes and fixes:
// 1. Using '=' instead of '==' for comparisons:
//      if n = 0 { }
//    Use '==' to compare values:
//      if n == 0 { }
// 2. Reassigning an immutable binding:
//      let x = 1
//      x = 2  // error
//    Declare mutable values with 'var' when they need to change.
// 3. Forgetting to return a value from all branches:
//      fun foo(x: int): int {
//        if x > 0 { return x }
//      }
//    Ensure every code path ends with 'return'.
