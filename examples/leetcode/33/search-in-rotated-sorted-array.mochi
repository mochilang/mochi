fun search(nums: list<int>, target: int): int {
  var left = 0
  var right = len(nums) - 1
  while left <= right {
    let mid = (left + right) / 2
    if nums[mid] == target {
      return mid
    }
    if nums[left] <= nums[mid] {
      if nums[left] <= target && target < nums[mid] {
        right = mid - 1
      } else {
        left = mid + 1
      }
    } else {
      if nums[mid] < target && target <= nums[right] {
        left = mid + 1
      } else {
        right = mid - 1
      }
    }
  }
  return -1
}

// Test cases from LeetCode

test "example 1" {
  expect search([4,5,6,7,0,1,2], 0) == 4
}

test "example 2" {
  expect search([4,5,6,7,0,1,2], 3) == -1
}

test "example 3" {
  expect search([1], 0) == -1
}

// Additional edge cases

test "single element found" {
  expect search([1], 1) == 0
}

test "two elements" {
  expect search([3,1], 1) == 1
}
