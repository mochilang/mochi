fun containsDuplicate(nums: list<int>): bool {
  // Maps can be used as sets. Each key records a value we've seen.
  var seen: map<int, bool> = {}
  for n in nums {
    if n in seen {
      return true
    }
    seen[n] = true
  }
  return false
}

// Test cases from LeetCode

test "example 1" {
  expect containsDuplicate([1,2,3,1]) == true
}

test "example 2" {
  expect containsDuplicate([1,2,3,4]) == false
}

test "example 3" {
  expect containsDuplicate([1,1,1,3,3,4,3,2,4,2]) == true
}

/*
Common Mochi language errors and fixes:
1. Using '=' instead of '==' for comparison results in a compile error.
   // if n = 1 { ... }   ❌
   // if n == 1 { ... }  ✅
2. Reassigning a 'let' value is not allowed. Use 'var' for mutable variables.
   // let seen = {}
   // seen.add(1)  ❌ cannot modify immutable 'let'
   // var seen: set<int> = {}  ✅
3. Python style loops like 'for i in range(n)' are unsupported.
   // for i in range(len(nums)) { ... }  ❌
   // for i in 0..len(nums) { ... }      ✅
*/
