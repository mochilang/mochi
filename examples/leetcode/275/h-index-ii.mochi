fun hIndex(citations: list<int>): int {
  let n = len(citations)
  var left = 0
  var right = n - 1
  var result = 0
  while left <= right {
    let mid = left + (right - left) / 2
    let h = n - mid
    if citations[mid] >= h {
      result = h
      right = mid - 1
    } else {
      left = mid + 1
    }
  }
  return result
}

test "example 1" {
  expect hIndex([0,1,3,5,6]) == 3
}

test "all zeros" {
  expect hIndex([0,0,0]) == 0
}

test "mixed" {
  expect hIndex([0,0,4,4]) == 2
}

/*
Common Mochi language errors and how to fix them:
1. Using '=' instead of '==' in conditions assigns a value rather than compares.
   Always write 'if a == b { ... }'.
2. Forgetting 'var' for mutable variables causes 'cannot reassign immutable'
   errors. Declare 'var left = 0' when the value will change.
3. Off-by-one mistakes when computing the candidate h-index. Remember that
   'h = n - mid' for a sorted citations array.
*/
