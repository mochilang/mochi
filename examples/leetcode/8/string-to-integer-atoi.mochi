fun digit(ch: string): int {
  if ch == "0" { return 0 }
  if ch == "1" { return 1 }
  if ch == "2" { return 2 }
  if ch == "3" { return 3 }
  if ch == "4" { return 4 }
  if ch == "5" { return 5 }
  if ch == "6" { return 6 }
  if ch == "7" { return 7 }
  if ch == "8" { return 8 }
  if ch == "9" { return 9 }
  return -1
}

fun myAtoi(s: string): int {
  var i = 0
  let n = len(s)
  while i < n && s[i] == " "[0] {
    i = i + 1
  }
  var sign = 1
  if i < n && (s[i] == "+"[0] || s[i] == "-"[0]) {
    if s[i] == "-"[0] {
      sign = -1
    }
    i = i + 1
  }
  var result = 0
  while i < n {
    let ch = s[i:i+1]
    let d = digit(ch)
    if d < 0 {
      break
    }
    result = result * 10 + d
    i = i + 1
  }
  result = result * sign
  if result > 2147483647 {
    return 2147483647
  }
  if result < (-2147483648) {
    return -2147483648
  }
  return result
}

test "example 1" {
  expect myAtoi("42") == 42
}

test "example 2" {
  expect myAtoi("   -42") == (-42)
}

test "example 3" {
  expect myAtoi("4193 with words") == 4193
}

test "example 4" {
  expect myAtoi("words and 987") == 0
}

test "example 5" {
  expect myAtoi("-91283472332") == (-2147483648)
}
