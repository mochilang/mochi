fun findMin(nums: list<int>): int {
  var left = 0
  var right = len(nums) - 1
  while left < right {
    let mid = left + (right - left) / 2
    if nums[mid] > nums[right] {
      left = mid + 1
    } else if nums[mid] < nums[right] {
      right = mid
    } else {
      right = right - 1
    }
  }
  return nums[left]
}

// Test cases from LeetCode

test "example 1" {
  expect findMin([1,3,5]) == 1
}

test "example 2" {
  expect findMin([2,2,2,0,1]) == 0
}

// Additional tests

test "already sorted" {
  expect findMin([1,2,3,4]) == 1
}

test "rotated with duplicates" {
  expect findMin([3,4,5,1,2,2]) == 1
}

// Common Mochi language errors and fixes:
// 1. Forgetting 'let' or 'var' when declaring variables.
//    Wrong: left = 0
//    Fix  : var left = 0
// 2. Using '=' instead of '==' in conditions.
//    Wrong: if nums[mid] = nums[right] { }
//    Fix  : use '==' for comparison.
// 3. Missing a return statement at the end of a function.
//    Always return the result with 'return nums[left]'.
