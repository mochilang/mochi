// Solution for LeetCode problem 150 - Evaluate Reverse Polish Notation

fun parseInt(s: string): int {
  var i = 0
  var sign = 1
  if len(s) > 0 && (s[0] == "-" || s[0] == "+") {
    if s[0] == "-" {
      sign = -1
    }
    i = 1
  }
  let digits = {
    "0": 0,
    "1": 1,
    "2": 2,
    "3": 3,
    "4": 4,
    "5": 5,
    "6": 6,
    "7": 7,
    "8": 8,
    "9": 9,
  }
  var result = 0
  while i < len(s) {
    let ch = s[i]
    result = result * 10 + digits[ch]
    i = i + 1
  }
  return result * sign
}

fun evalRPN(tokens: list<string>): int {
  var stack: list<int> = []
  for tok in tokens {
    if tok == "+" || tok == "-" || tok == "*" || tok == "/" {
      let b = stack[len(stack) - 1]
      stack = stack[0:len(stack)-1]
      let a = stack[len(stack) - 1]
      stack = stack[0:len(stack)-1]
      if tok == "+" {
        stack = stack + [a + b]
      } else if tok == "-" {
        stack = stack + [a - b]
      } else if tok == "*" {
        stack = stack + [a * b]
      } else {
        stack = stack + [a / b]
      }
    } else {
      let val = parseInt(tok)
      stack = stack + [val]
    }
  }
  return stack[len(stack) - 1]
}

// Test cases from LeetCode

test "example 1" {
  expect evalRPN(["2","1","+","3","*"]) == 9
}

test "example 2" {
  expect evalRPN(["4","13","5","/","+"]) == 6
}

test "example 3" {
  expect evalRPN(["10","6","9","3","+","-11","*","/","*","17","+","5","+"]) == 22
}

test "single number" {
  expect evalRPN(["42"]) == 42
}

/*
Common Mochi language errors and how to fix them:
1. Trying Python-style list methods:
     stack.append(x)     // ❌ not Mochi
   Use concatenation:
     stack = stack + [x]
2. Forgetting to convert the token to an int:
     stack = stack + [tok]  // ❌ type mismatch
   Convert first:
     stack = stack + [parseInt(tok)]
3. Using '=' instead of '==' when checking the operator:
     if tok = "+" { }  // ❌ assignment
   Use '==' for comparison:
     if tok == "+" { }
*/
