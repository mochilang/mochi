fun firstMissingPositive(nums: list<int>): int {
  // Approach: place numbers into a set then find the smallest missing
  var seen: set<int> = {}
  for n in nums {
    if n > 0 {
      seen.add(n)
    }
  }
  var i = 1
  while true {
    if !(i in seen) {
      return i
    }
    i = i + 1
  }
}

// Tests from LeetCode

test "example 1" {
  expect firstMissingPositive([1,2,0]) == 3
}

test "example 2" {
  expect firstMissingPositive([3,4,-1,1]) == 2
}

test "example 3" {
  expect firstMissingPositive([7,8,9,11,12]) == 1
}

// Common Mochi language mistakes:
// 1. Using `=` instead of `==` for equality. Mochi uses `==` for comparison.
// 2. Off-by-one errors in ranges. `0..n` iterates to `n-1`.
// 3. Forgetting `var` for mutable variables; `let` bindings are immutable.
// This file corrects those mistakes in the implementation above.
