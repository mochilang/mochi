// LeetCode #397: Integer Replacement
// Below are some common Mochi language errors and how to fix them.
//
// Error 1: Using '=' instead of '==' in a condition.
// if n = 1 { return 0 }
// Fix:
// if n == 1 { return 0 }
//
// Error 2: Declaring a variable with 'let' when it needs mutation.
// let count = 0
// count = count + 1  // ❌ cannot reassign
// Fix:
// var count = 0
// count = count + 1
//
// Error 3: Forgetting to update the loop variable leads to an infinite loop.
// while n != 1 { }  // ❌ n never changes
// Fix:
// update 'n' inside the loop each iteration.

fun integerReplacement(n: int): int {
  var steps = 0
  var x = n
  while x != 1 {
    if x % 2 == 0 {
      x = x / 2
    } else {
      if x == 3 {
        x = 2
      } else {
        let mod4 = x % 4
        if mod4 == 1 {
          x = x - 1
        } else {
          x = x + 1
        }
      }
    }
    steps = steps + 1
  }
  return steps
}

// Test cases from LeetCode

test "example 1" {
  expect integerReplacement(8) == 3
}

test "example 2" {
  expect integerReplacement(7) == 4
}

test "example 3" {
  expect integerReplacement(4) == 2
}

// Additional edge cases

test "one" {
  expect integerReplacement(1) == 0
}

test "three" {
  expect integerReplacement(3) == 2
}
