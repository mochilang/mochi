# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def readFrom(src: str, n: int) -> str:
	pos = 0
	def read4(buf: list[str]) -> int:
		nonlocal pos
		count = 0
		i = 0
		while ((i < 4) and (pos < len(src))):
			buf[i] = src[pos]
			i = (i + 1)
			pos = (pos + 1)
			count = (count + 1)
		return count
	buf4 = ["", "", "", ""]
	result = ""
	total = 0
	while (total < n):
		count = read4(buf4)
		i = 0
		while ((i < count) and (total < n)):
			result = (result + buf4[i])
			total = (total + 1)
			i = (i + 1)
		if (count < 4):
			break
	return result

def read_less_than_file():
	assert (readFrom("leetcode", 5) == "leetc")

def read_exact():
	assert (readFrom("mochi", 5) == "mochi")

def read_beyond_end():
	assert (readFrom("hi", 5) == "hi")

def main():
	read_less_than_file()
	read_exact()
	read_beyond_end()

if __name__ == "__main__":
	main()
