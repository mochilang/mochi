package main

func expect(cond bool) {
	if !cond { panic("expect failed") }
}

func robLinear(nums []int, start int, end int) int {
	var prev1 int = 0
	_ = prev1
	var prev2 int = 0
	_ = prev2
	var i int = start
	_ = i
	for (i <= end) {
		var pick int = (nums[i] + prev2)
		var curr int = pick
		_ = curr
		if (prev1 > curr) {
			curr = prev1
		}
		prev2 = prev1
		prev1 = curr
		i = (i + 1)
	}
	return prev1
}

func rob(nums []int) int {
	var n int = len(nums)
	if (n == 0) {
		return 0
	}
	if (n == 1) {
		return nums[0]
	}
	var option1 int = robLinear(nums, 0, (n - 2))
	var option2 int = robLinear(nums, 1, (n - 1))
	if (option1 > option2) {
		return option1
	}
	return option2
}

func example_1() {
	expect((rob([]int{2, 3, 2}) == 3))
}

func example_2() {
	expect((rob([]int{1, 2, 3, 1}) == 4))
}

func example_3() {
	expect((rob([]int{1, 2, 3}) == 3))
}

func single() {
	expect((rob([]int{5}) == 5))
}

func empty() {
	expect((rob([]int{}) == 0))
}

func main() {
	example_1()
	example_2()
	example_3()
	single()
	empty()
}

