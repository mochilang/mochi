# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def generateTriangle(numRows: int) -> list[list[int]]:
	if (numRows <= 0):
		return []
	result = [[1]]
	i = 1
	while (i < numRows):
		prev = result[(i - 1)]
		row = [1]
		j = 1
		while (j < len(prev)):
			row = (row + [(prev[(j - 1)] + prev[j])])
			j = (j + 1)
		row = (row + [1])
		result = (result + [row])
		i = (i + 1)
	return result

def example_1():
	assert (generateTriangle(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]])

def example_2():
	assert (generateTriangle(1) == [[1]])

def zero_rows():
	assert (generateTriangle(0) == [])

def main():
	example_1()
	example_2()
	zero_rows()

if __name__ == "__main__":
	main()
