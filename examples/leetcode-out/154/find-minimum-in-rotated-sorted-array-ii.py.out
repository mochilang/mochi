# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def findMin(nums: list[int]) -> int:
	left = 0
	right = (len(nums) - 1)
	while (left < right):
		mid = (left + (((right - left)) // 2))
		if (nums[mid] > nums[right]):
			left = (mid + 1)
		elif (nums[mid] < nums[right]):
			right = mid
		else:
			right = (right - 1)
	return nums[left]

def example_1():
	assert (findMin([1, 3, 5]) == 1)

def example_2():
	assert (findMin([2, 2, 2, 0, 1]) == 0)

def already_sorted():
	assert (findMin([1, 2, 3, 4]) == 1)

def rotated_with_duplicates():
	assert (findMin([3, 4, 5, 1, 2, 2]) == 1)

def main():
	example_1()
	example_2()
	already_sorted()
	rotated_with_duplicates()

if __name__ == "__main__":
	main()
