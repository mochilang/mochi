# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def isPerfectSquare(num: int) -> bool:
	if (num < 1):
		return False
	left = 1
	right = num
	while (left <= right):
		mid = (((left + right)) // 2)
		square = (mid * mid)
		if (square == num):
			return True
		elif (square < num):
			left = (mid + 1)
		else:
			right = (mid - 1)
	return False

def example_1():
	assert (isPerfectSquare(16) == True)

def example_2():
	assert (isPerfectSquare(14) == False)

def one():
	assert (isPerfectSquare(1) == True)

def large_non_square():
	assert (isPerfectSquare(2147483647) == False)

def main():
	example_1()
	example_2()
	one()
	large_non_square()

if __name__ == "__main__":
	main()
