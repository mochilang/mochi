// Generated by Mochi TypeScript compiler

function numSquares(n: number) : number {
	if ((n <= 0)) {
		return 0
	}
	let dp: Array<any> = []
	let i: number = 0
	while ((i <= n)) {
		dp = dp.concat([i])
		i = (i + 1)
	}
	i = 1
	while ((i <= n)) {
		let j: number = 1
		dp[i] = i
		while (((j * j) <= i)) {
			let candidate: any = (dp[(i - (j * j))] + 1)
			if ((candidate < dp[i])) {
				dp[i] = candidate
			}
			j = (j + 1)
		}
		i = (i + 1)
	}
	return dp[n]
}

function example_1(): void {
	if (!((numSquares(12) == 3))) { throw new Error('expect failed') }
}

function example_2(): void {
	if (!((numSquares(13) == 2))) { throw new Error('expect failed') }
}

function example_3(): void {
	if (!((numSquares(1) == 1))) { throw new Error('expect failed') }
}

function main(): void {
	example_1()
	example_2()
	example_3()
}
main()

