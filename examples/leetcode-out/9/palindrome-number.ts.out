// Generated by Mochi TypeScript compiler

function isPalindrome(x: number) : boolean {
	if ((x < 0)) {
		return false
	}
	let s: string = String(x)
	let n: number = s.length
	for (let i: number = 0; i < Math.trunc(n / 2); i++) {
		if ((s[i] != s[((n - 1) - i)])) {
			return false
		}
	}
	return true
}

function example_1(): void {
	if (!((isPalindrome(121) == true))) { throw new Error('expect failed') }
}

function example_2(): void {
	if (!((isPalindrome((-121)) == false))) { throw new Error('expect failed') }
}

function example_3(): void {
	if (!((isPalindrome(10) == false))) { throw new Error('expect failed') }
}

function zero(): void {
	if (!((isPalindrome(0) == true))) { throw new Error('expect failed') }
}

function main(): void {
	example_1()
	example_2()
	example_3()
	zero()
}
main()

