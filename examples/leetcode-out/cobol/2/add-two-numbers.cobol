>>SOURCE FORMAT FREE
IDENTIFICATION DIVISION.
PROGRAM-ID. MAIN.
DATA DIVISION.
WORKING-STORAGE SECTION.
01 L1 OCCURS 7 TIMES PIC 9.
01 L2 OCCURS 4 TIMES PIC 9.
01 LEN1 PIC 9.
01 LEN2 PIC 9.
01 I PIC 9.
01 J PIC 9.
01 CARRY PIC 9.
01 XVAL PIC 9.
01 YVAL PIC 9.
01 SUMV PIC 99.
01 DIGITV PIC 9.
01 RLEN PIC 9.
01 RESULT OCCURS 8 TIMES PIC 9.
PROCEDURE DIVISION.
    MOVE 2 TO L1(1)
    MOVE 4 TO L1(2)
    MOVE 3 TO L1(3)
    MOVE 5 TO L2(1)
    MOVE 6 TO L2(2)
    MOVE 4 TO L2(3)
    MOVE 3 TO LEN1
    MOVE 3 TO LEN2
    MOVE 0 TO I
    MOVE 0 TO J
    MOVE 0 TO CARRY
    MOVE 0 TO RLEN
    PERFORM UNTIL I >= LEN1 AND J >= LEN2 AND CARRY = 0
    MOVE 0 TO XVAL
    IF I < LEN1
        MOVE L1(I + 1) TO XVAL
        ADD 1 TO I
    END-IF
    MOVE 0 TO YVAL
    IF J < LEN2
        MOVE L2(J + 1) TO YVAL
        ADD 1 TO J
    END-IF
    COMPUTE SUMV = XVAL + YVAL + CARRY
    COMPUTE CARRY = SUMV / 10
    COMPUTE DIGITV = SUMV - (CARRY * 10)
    ADD 1 TO RLEN
    MOVE DIGITV TO RESULT(RLEN)
END-PERFORM
    IF RLEN NOT = 3
    DISPLAY "expect failed"
    STOP RUN
END-IF
    IF RESULT(1) NOT = 7
    DISPLAY "expect failed"
    STOP RUN
END-IF
    IF RESULT(2) NOT = 0
    DISPLAY "expect failed"
    STOP RUN
END-IF
    IF RESULT(3) NOT = 8
    DISPLAY "expect failed"
    STOP RUN
END-IF
    MOVE 0 TO L1(1)
    MOVE 0 TO L2(1)
    MOVE 1 TO LEN1
    MOVE 1 TO LEN2
    MOVE 0 TO I
    MOVE 0 TO J
    MOVE 0 TO CARRY
    MOVE 0 TO RLEN
    PERFORM UNTIL I >= LEN1 AND J >= LEN2 AND CARRY = 0
    MOVE 0 TO XVAL
    IF I < LEN1
        MOVE L1(I + 1) TO XVAL
        ADD 1 TO I
    END-IF
    MOVE 0 TO YVAL
    IF J < LEN2
        MOVE L2(J + 1) TO YVAL
        ADD 1 TO J
    END-IF
    COMPUTE SUMV = XVAL + YVAL + CARRY
    COMPUTE CARRY = SUMV / 10
    COMPUTE DIGITV = SUMV - (CARRY * 10)
    ADD 1 TO RLEN
    MOVE DIGITV TO RESULT(RLEN)
END-PERFORM
    IF RLEN NOT = 1
    DISPLAY "expect failed"
    STOP RUN
END-IF
    IF RESULT(1) NOT = 0
    DISPLAY "expect failed"
    STOP RUN
END-IF
    MOVE 9 TO L1(1)
    MOVE 9 TO L1(2)
    MOVE 9 TO L1(3)
    MOVE 9 TO L1(4)
    MOVE 9 TO L1(5)
    MOVE 9 TO L1(6)
    MOVE 9 TO L1(7)
    MOVE 9 TO L2(1)
    MOVE 9 TO L2(2)
    MOVE 9 TO L2(3)
    MOVE 9 TO L2(4)
    MOVE 7 TO LEN1
    MOVE 4 TO LEN2
    MOVE 0 TO I
    MOVE 0 TO J
    MOVE 0 TO CARRY
    MOVE 0 TO RLEN
    PERFORM UNTIL I >= LEN1 AND J >= LEN2 AND CARRY = 0
    MOVE 0 TO XVAL
    IF I < LEN1
        MOVE L1(I + 1) TO XVAL
        ADD 1 TO I
    END-IF
    MOVE 0 TO YVAL
    IF J < LEN2
        MOVE L2(J + 1) TO YVAL
        ADD 1 TO J
    END-IF
    COMPUTE SUMV = XVAL + YVAL + CARRY
    COMPUTE CARRY = SUMV / 10
    COMPUTE DIGITV = SUMV - (CARRY * 10)
    ADD 1 TO RLEN
    MOVE DIGITV TO RESULT(RLEN)
END-PERFORM
    IF RLEN NOT = 8
    DISPLAY "expect failed"
    STOP RUN
END-IF
    IF RESULT(1) NOT = 8
    DISPLAY "expect failed"
    STOP RUN
END-IF
    IF RESULT(2) NOT = 9
    DISPLAY "expect failed"
    STOP RUN
END-IF
    IF RESULT(3) NOT = 9
    DISPLAY "expect failed"
    STOP RUN
END-IF
    IF RESULT(4) NOT = 9
    DISPLAY "expect failed"
    STOP RUN
END-IF
    IF RESULT(5) NOT = 0
    DISPLAY "expect failed"
    STOP RUN
END-IF
    IF RESULT(6) NOT = 0
    DISPLAY "expect failed"
    STOP RUN
END-IF
    IF RESULT(7) NOT = 0
    DISPLAY "expect failed"
    STOP RUN
END-IF
    IF RESULT(8) NOT = 1
    DISPLAY "expect failed"
    STOP RUN
END-IF
    STOP RUN.
