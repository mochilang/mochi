# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def jump(nums: list[int]) -> int:
	n = len(nums)
	jumps = 0
	end = 0
	farthest = 0
	for i in range(0, n):
		if (i > farthest):
			return (-1)
		if ((i + nums[i]) > farthest):
			farthest = (i + nums[i])
		if ((i == end) and (i != (n - 1))):
			jumps = (jumps + 1)
			end = farthest
	return jumps

def example_1():
	assert (jump([2, 3, 1, 1, 4]) == 2)

def example_2():
	assert (jump([2, 3, 0, 1, 4]) == 2)

def single_element():
	assert (jump([0]) == 0)

def two_elements():
	assert (jump([1, 2]) == 1)

def main():
	example_1()
	example_2()
	single_element()
	two_elements()

if __name__ == "__main__":
	main()
