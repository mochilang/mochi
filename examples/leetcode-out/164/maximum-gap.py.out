# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def maximumGap(nums: list[int]) -> int:
	n = len(nums)
	if (n < 2):
		return 0
	_sorted = [ x for x in sorted([ x for x in nums ], key=lambda x: x) ]
	maxGap = 0
	for i in range(1, n):
		gap = (_sorted[i] - _sorted[(i - 1)])
		if (gap > maxGap):
			maxGap = gap
	return maxGap

def example_1():
	assert (maximumGap([3, 6, 9, 1]) == 3)

def example_2():
	assert (maximumGap([10]) == 0)

def sorted_input():
	assert (maximumGap([1, 2, 3, 4]) == 1)

def duplicates():
	assert (maximumGap([1, 1, 1, 1]) == 0)

def main():
	example_1()
	example_2()
	sorted_input()
	duplicates()

if __name__ == "__main__":
	main()
