# Generated by Mochi Python compiler
from __future__ import annotations

import dataclasses
import typing

def departmentHighestSalary(employees: list[Employee], departments: list[Department]) -> list[Result]:
	maxSalary = {}
	for e in employees:
		current = 0
		if (e.departmentId in maxSalary):
			current = maxSalary[e.departmentId]
		if (e.salary > current):
			maxSalary[e.departmentId] = e.salary
	results = []
	for d in departments:
		if (d.id in maxSalary):
			highest = maxSalary[d.id]
			for e in employees:
				if ((e.departmentId == d.id) and (e.salary == highest)):
					results = (results + [Result(Department=d.name, Employee=e.name, Salary=e.salary)])
	return results

@dataclasses.dataclass
class Department:
	id: int
	name: str

@dataclasses.dataclass
class Employee:
	id: int
	name: str
	salary: int
	departmentId: int

@dataclasses.dataclass
class Result:
	Department: str
	Employee: str
	Salary: int

departments = [Department(id=1, name="IT"), Department(id=2, name="Sales")]
employees = [Employee(id=1, name="Joe", salary=70000, departmentId=1), Employee(id=2, name="Henry", salary=80000, departmentId=2), Employee(id=3, name="Sam", salary=60000, departmentId=2), Employee(id=4, name="Max", salary=90000, departmentId=1)]

def highest_salary():
	expected = [Result(Department="IT", Employee="Max", Salary=90000), Result(Department="Sales", Employee="Henry", Salary=80000)]
	assert (str(departmentHighestSalary(employees, departments)) == str(expected))

def main():
	departments = [Department(id=1, name="IT"), Department(id=2, name="Sales")]
	employees = [Employee(id=1, name="Joe", salary=70000, departmentId=1), Employee(id=2, name="Henry", salary=80000, departmentId=2), Employee(id=3, name="Sam", salary=60000, departmentId=2), Employee(id=4, name="Max", salary=90000, departmentId=1)]
	highest_salary()

if __name__ == "__main__":
	main()
