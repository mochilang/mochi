package main

import (
	"fmt"
)

func characterReplacement(s string, k int) int {
	var letters []string = []string{"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"}
	var n int = len(s)
	var best int = 0
	_ = best
	for i := 0; i < n; i++ {
		for j := (i + 1); j < (n + 1); j++ {
			var length int = (j - i)
			if (length <= best) {
				continue
			}
			var sub string = string([]rune(s)[i:j])
			for _, ch := range letters {
				var diff int = 0
				_ = diff
				for idx := 0; idx < len(sub); idx++ {
					var c string = _indexString(sub, idx)
					if (c != ch) {
						diff = (diff + 1)
						if (diff > k) {
							break
						}
					}
				}
				if (diff <= k) {
					best = length
					break
				}
			}
		}
	}
	return best
}

func main() {
	fmt.Println(characterReplacement("ABAB", 2))
	fmt.Println(characterReplacement("AABABBA", 1))
}

func _indexString(s string, i int) string {
    runes := []rune(s)
    if i < 0 {
        i += len(runes)
    }
    if i < 0 || i >= len(runes) {
        panic("index out of range")
    }
    return string(runes[i])
}

