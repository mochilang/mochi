# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def addBinary(a: str, b: str) -> str:
	digits = {"0": 0, "1": 1}
	i = len(a)
	j = len(b)
	carry = 0
	out = ""
	while (((i > 0) or (j > 0)) or (carry > 0)):
		x = 0
		if (i > 0):
			i = (i - 1)
			x = digits[a[i]]
		y = 0
		if (j > 0):
			j = (j - 1)
			y = digits[b[j]]
		sum = ((x + y) + carry)
		carry = (sum // 2)
		bit = (sum % 2)
		out = (str(bit) + out)
	return out

def example_1():
	assert (addBinary("11", "1") == "100")

def example_2():
	assert (addBinary("1010", "1011") == "10101")

def zero():
	assert (addBinary("0", "0") == "0")

def different_lengths():
	assert (addBinary("1", "111") == "1000")

def main():
	example_1()
	example_2()
	zero()
	different_lengths()

if __name__ == "__main__":
	main()
