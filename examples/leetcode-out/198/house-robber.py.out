# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def rob(nums: list[int]) -> int:
	n = len(nums)
	if (n == 0):
		return 0
	if (n == 1):
		return nums[0]
	prev2 = nums[0]
	prev1 = nums[0]
	if (nums[1] > prev1):
		prev1 = nums[1]
	i = 2
	while (i < n):
		take = (prev2 + nums[i])
		best = prev1
		if (take > best):
			best = take
		prev2 = prev1
		prev1 = best
		i = (i + 1)
	return prev1

def example_1():
	assert (rob([1, 2, 3, 1]) == 4)

def example_2():
	assert (rob([2, 7, 9, 3, 1]) == 12)

def empty():
	assert (rob([]) == 0)

def single_house():
	assert (rob([5]) == 5)

def two_houses():
	assert (rob([2, 1]) == 2)

def main():
	example_1()
	example_2()
	empty()
	single_house()
	two_houses()

if __name__ == "__main__":
	main()
