# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def isOneEditDistance(s: str, t: str) -> bool:
	m = len(s)
	n = len(t)
	if (m > n):
		return isOneEditDistance(t, s)
	if ((n - m) > 1):
		return False
	i = 0
	while (i < m):
		if (s[i] != t[i]):
			if (m == n):
				return (s[(i + 1):m] == t[(i + 1):n])
			return (s[i:m] == t[(i + 1):n])
		i = (i + 1)
	return ((n - m) == 1)

def example_1():
	assert (isOneEditDistance("ab", "acb") == True)

def example_2():
	assert (isOneEditDistance("cab", "ad") == False)

def example_3():
	assert (isOneEditDistance("1203", "1213") == True)

def identical():
	assert (isOneEditDistance("a", "a") == False)

def insert_at_end():
	assert (isOneEditDistance("abc", "abcc") == True)

def main():
	example_1()
	example_2()
	example_3()
	identical()
	insert_at_end()

if __name__ == "__main__":
	main()
