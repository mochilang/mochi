# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def sortColors(nums: list[int]) -> list[int]:
	low = 0
	mid = 0
	high = (len(nums) - 1)
	while (mid <= high):
		if (nums[mid] == 0):
			temp = nums[low]
			nums[low] = nums[mid]
			nums[mid] = temp
			low = (low + 1)
			mid = (mid + 1)
		elif (nums[mid] == 1):
			mid = (mid + 1)
		else:
			temp = nums[mid]
			nums[mid] = nums[high]
			nums[high] = temp
			high = (high - 1)
	return nums

def example_1():
	assert (sortColors([2, 0, 2, 1, 1, 0]) == [0, 0, 1, 1, 2, 2])

def example_2():
	assert (sortColors([2, 0, 1]) == [0, 1, 2])

def single_zero():
	assert (sortColors([0]) == [0])

def single_one():
	assert (sortColors([1]) == [1])

def single_two():
	assert (sortColors([2]) == [2])

def main():
	example_1()
	example_2()
	single_zero()
	single_one()
	single_two()

if __name__ == "__main__":
	main()
