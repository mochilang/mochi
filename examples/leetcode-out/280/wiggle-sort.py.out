# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def wiggleSort(nums: list[int]) -> list[int]:
	i = 1
	while (i < len(nums)):
		if ((i % 2) == 1):
			if (nums[i] < nums[(i - 1)]):
				temp = nums[i]
				nums[i] = nums[(i - 1)]
				nums[(i - 1)] = temp
		else:
			if (nums[i] > nums[(i - 1)]):
				temp = nums[i]
				nums[i] = nums[(i - 1)]
				nums[(i - 1)] = temp
		i = (i + 1)
	return nums

def example_1():
	assert (wiggleSort([3, 5, 2, 1, 6, 4]) == [3, 5, 1, 6, 2, 4])

def example_2():
	assert (wiggleSort([6, 6, 5, 6, 3, 8]) == [6, 6, 5, 6, 3, 8])

def already_wiggle():
	assert (wiggleSort([1, 3, 2, 4]) == [1, 3, 2, 4])

def two_elements():
	assert (wiggleSort([2, 1]) == [1, 2])

def main():
	example_1()
	example_2()
	already_wiggle()
	two_elements()

if __name__ == "__main__":
	main()
