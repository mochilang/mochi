# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def totalNQueens(n: int) -> int:
	cols = []
	i = 0
	while (i < n):
		cols = (cols + [False])
		i = (i + 1)
	diag1 = []
	i = 0
	while (i < ((2 * n))):
		diag1 = (diag1 + [False])
		i = (i + 1)
	diag2 = []
	i = 0
	while (i < ((2 * n))):
		diag2 = (diag2 + [False])
		i = (i + 1)
	count = 0
	def backtrack(row: int) -> None:
		nonlocal cols
		nonlocal diag1
		nonlocal diag2
		nonlocal count
		if (row == n):
			count = (count + 1)
		else:
			for col in range(0, n):
				d1 = ((row - col) + n)
				d2 = (row + col)
				if ((cols[col] or diag1[d1]) or diag2[d2]):
					continue
				cols[col] = True
				diag1[d1] = True
				diag2[d2] = True
				backtrack((row + 1))
				cols[col] = False
				diag1[d1] = False
				diag2[d2] = False
	backtrack(0)
	return count

def example_1():
	assert (totalNQueens(1) == 1)

def example_2():
	assert (totalNQueens(4) == 2)

def example_3():
	assert (totalNQueens(5) == 10)

def main():
	example_1()
	example_2()
	example_3()

if __name__ == "__main__":
	main()
