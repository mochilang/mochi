# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def minSubArrayLen(target: int, nums: list[int]) -> int:
	n = len(nums)
	left = 0
	sum = 0
	best = (n + 1)
	right = 0
	while (right < n):
		sum = (sum + nums[right])
		right = (right + 1)
		while (sum >= target):
			length = (right - left)
			if (length < best):
				best = length
			sum = (sum - nums[left])
			left = (left + 1)
	if (best == (n + 1)):
		return 0
	return best

def example_1():
	assert (minSubArrayLen(7, [2, 3, 1, 2, 4, 3]) == 2)

def example_2():
	assert (minSubArrayLen(4, [1, 4, 4]) == 1)

def example_3():
	assert (minSubArrayLen(11, [1, 1, 1, 1, 1, 1, 1, 1]) == 0)

def entire_array():
	assert (minSubArrayLen(15, [5, 1, 3, 5, 10, 7, 4, 9, 2, 8]) == 2)

def main():
	example_1()
	example_2()
	example_3()
	entire_array()

if __name__ == "__main__":
	main()
