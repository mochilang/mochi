# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def validUtf8(data: list[int]) -> bool:
	i = 0
	n = len(data)
	while (i < n):
		b = data[i]
		count = 0
		if (b < 128):
			count = 1
		elif ((b >= 192) and (b < 224)):
			count = 2
		elif ((b >= 224) and (b < 240)):
			count = 3
		elif ((b >= 240) and (b < 248)):
			count = 4
		else:
			return False
		if ((i + count) > n):
			return False
		j = 1
		while (j < count):
			c = data[(i + j)]
			if ((c < 128) or (c >= 192)):
				return False
			j = (j + 1)
		i = (i + count)
	return True

def example_1():
	assert (validUtf8([197, 130, 1]) == True)

def example_2():
	assert (validUtf8([235, 140, 4]) == False)

def single_byte():
	assert (validUtf8([0]) == True)

def invalid_length():
	assert (validUtf8([237]) == False)

def starts_with_continuation():
	assert (validUtf8([145]) == False)

def main():
	example_1()
	example_2()
	single_byte()
	invalid_length()
	starts_with_continuation()

if __name__ == "__main__":
	main()
