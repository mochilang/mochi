# Generated by Mochi Python compiler
from __future__ import annotations

import dataclasses
import typing

def newSnakeGame(width: int, height: int, food: list[list[int]]) -> SnakeGame:
	start = [0, 0]
	return SnakeGame(width=width, height=height, food=food, index=0, body=[start], occupied={((str(start[0]) + ",") + str(start[1])): True})

def move(game: SnakeGame, dir: str) -> MoveResult:
	head = game.body[(len(game.body) - 1)]
	r = head[0]
	c = head[1]
	if (dir == "U"):
		r = (r - 1)
	elif (dir == "D"):
		r = (r + 1)
	elif (dir == "L"):
		c = (c - 1)
	elif (dir == "R"):
		c = (c + 1)
	else:
		return MoveResult(game=game, score=(-1))
	if ((((r < 0) or (r >= game.height)) or (c < 0)) or (c >= game.width)):
		return MoveResult(game=game, score=(-1))
	newBody = game.body
	newOcc = game.occupied
	newIndex = game.index
	eat = (((newIndex < len(game.food)) and (game.food[newIndex][0] == r)) and (game.food[newIndex][1] == c))
	if (not eat):
		tail = newBody[0]
		tk = ((str(tail[0]) + ",") + str(tail[1]))
		newBody = newBody[1:len(newBody)]
		newOcc[tk] = False
	else:
		newIndex = (newIndex + 1)
	key = ((str(r) + ",") + str(c))
	if (key in newOcc):
		if (newOcc[key] == True):
			return MoveResult(game=game, score=(-1))
	newBody = (newBody + [[r, c]])
	newOcc[key] = True
	newGame = SnakeGame(width=game.width, height=game.height, food=game.food, index=newIndex, body=newBody, occupied=newOcc)
	return MoveResult(game=newGame, score=newIndex)

@dataclasses.dataclass
class SnakeGame:
	width: int
	height: int
	food: list[list[int]]
	index: int
	body: list[list[int]]
	occupied: dict[str, bool]

@dataclasses.dataclass
class MoveResult:
	game: SnakeGame
	score: int

def example():
	g = newSnakeGame(3, 2, [[1, 2], [0, 1]])
	r1 = move(g, "R")
	g = r1.game
	assert (r1.score == 0)
	r2 = move(g, "D")
	g = r2.game
	assert (r2.score == 0)
	r3 = move(g, "R")
	g = r3.game
	assert (r3.score == 1)
	r4 = move(g, "U")
	g = r4.game
	assert (r4.score == 1)
	r5 = move(g, "L")
	g = r5.game
	assert (r5.score == 2)
	r6 = move(g, "U")
	g = r6.game
	assert (r6.score == ((0 - 1)))

def main():
	example()

if __name__ == "__main__":
	main()
