# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def plusOne(digits: list[int]) -> list[int]:
	carry = 1
	i = (len(digits) - 1)
	result = digits
	while ((i >= 0) and (carry > 0)):
		sum = (result[i] + carry)
		result[i] = (sum % 10)
		carry = (sum // 10)
		i = (i - 1)
	if (carry > 0):
		return ([carry] + result)
	return result

def example_1():
	assert (plusOne([1, 2, 3]) == [1, 2, 4])

def example_2():
	assert (plusOne([4, 3, 2, 1]) == [4, 3, 2, 2])

def example_3():
	assert (plusOne([9]) == [1, 0])

def carry_through_all_digits():
	assert (plusOne([9, 9, 9]) == [1, 0, 0, 0])

def zero():
	assert (plusOne([0]) == [1])

def main():
	example_1()
	example_2()
	example_3()
	carry_through_all_digits()
	zero()

if __name__ == "__main__":
	main()
