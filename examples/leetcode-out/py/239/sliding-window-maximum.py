# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def maxSlidingWindow(nums: list[int], k: int) -> list[int]:
	n = len(nums)
	if (n == 0):
		return []
	result = []
	deque = []
	i = 0
	while (i < n):
		while (len(deque) > 0):
			last = deque[(len(deque) - 1)]
			if (nums[last] < nums[i]):
				deque = deque[0:(len(deque) - 1)]
			else:
				break
		deque = (deque + [i])
		if (len(deque) > 0):
			if (deque[0] <= (i - k)):
				deque = deque[1:len(deque)]
		if ((i + 1) >= k):
			result = (result + [nums[deque[0]]])
		i = (i + 1)
	return result

def example_1():
	assert (maxSlidingWindow([1, 3, (-1), (-3), 5, 3, 6, 7], 3) == [3, 3, 5, 5, 6, 7])

def example_2():
	assert (maxSlidingWindow([1], 1) == [1])

def k_equals_array_length():
	assert (maxSlidingWindow([2, 1], 2) == [2])

def all_decreasing():
	assert (maxSlidingWindow([9, 8, 7, 6, 5], 2) == [9, 8, 7, 6])

def window_size_1():
	assert (maxSlidingWindow([4, 2], 1) == [4, 2])

def main():
	example_1()
	example_2()
	k_equals_array_length()
	all_decreasing()
	window_size_1()

if __name__ == "__main__":
	main()
