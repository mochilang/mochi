# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def findNthDigit(n: int) -> int:
	remaining = n
	digits = 1
	count = 9
	start = 1
	while (remaining > (digits * count)):
		remaining = (remaining - (digits * count))
		digits = (digits + 1)
		count = (count * 10)
		start = (start * 10)
	num = (start + (((remaining - 1)) // digits))
	index = (((remaining - 1)) % digits)
	s = str(num)
	values = {"0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9}
	ch = s[index]
	return values[ch]

def example_1():
	assert (findNthDigit(3) == 3)

def example_2():
	assert (findNthDigit(11) == 0)

def example_3():
	assert (findNthDigit(12) == 1)

def end_of_two_digits():
	assert (findNthDigit(189) == 9)

def start_of_three_digits():
	assert (findNthDigit(190) == 1)

def middle_of_three_digits():
	assert (findNthDigit(191) == 0)

def third_of_three_digits():
	assert (findNthDigit(192) == 0)

def main():
	example_1()
	example_2()
	example_3()
	end_of_two_digits()
	start_of_three_digits()
	middle_of_three_digits()
	third_of_three_digits()

if __name__ == "__main__":
	main()
