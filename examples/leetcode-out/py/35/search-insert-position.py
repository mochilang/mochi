# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def searchInsert(nums: list[int], target: int) -> int:
	left = 0
	right = len(nums)
	while (left < right):
		mid = (((left + right)) // 2)
		value = nums[mid]
		if (value < target):
			left = (mid + 1)
		else:
			right = mid
	return left

def example_1():
	assert (searchInsert([1, 3, 5, 6], 5) == 2)

def example_2():
	assert (searchInsert([1, 3, 5, 6], 2) == 1)

def example_3():
	assert (searchInsert([1, 3, 5, 6], 7) == 4)

def example_4():
	assert (searchInsert([1, 3, 5, 6], 0) == 0)

def single_element_greater():
	assert (searchInsert([2], 1) == 0)

def single_element_smaller():
	assert (searchInsert([2], 3) == 1)

def main():
	example_1()
	example_2()
	example_3()
	example_4()
	single_element_greater()
	single_element_smaller()

if __name__ == "__main__":
	main()
