# Generated by Mochi Python compiler
from __future__ import annotations

import dataclasses
import typing

def deleteDuplicateEmails(users: list[User]) -> list[User]:
	byEmail = {}
	for u in users:
		if (u.email in byEmail):
			existing = byEmail[u.email]
			if (u.id < existing.id):
				byEmail[u.email] = u
		else:
			byEmail[u.email] = u
	result = []
	for key in byEmail:
		result = (result + [byEmail[key]])
	_sorted = [ x for x in sorted([ x for x in result ], key=lambda x: x.id) ]
	return _sorted

@dataclasses.dataclass
class User:
	id: int
	email: str

users = [User(id=1, email="a@b.com"), User(id=2, email="c@d.com"), User(id=3, email="a@b.com")]
expected = [User(id=1, email="a@b.com"), User(id=2, email="c@d.com")]

def remove_duplicates():
	assert (str(deleteDuplicateEmails(users)) == str(expected))

def main():
	users = [User(id=1, email="a@b.com"), User(id=2, email="c@d.com"), User(id=3, email="a@b.com")]
	expected = [User(id=1, email="a@b.com"), User(id=2, email="c@d.com")]
	remove_duplicates()

if __name__ == "__main__":
	main()
