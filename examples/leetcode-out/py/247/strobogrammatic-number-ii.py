# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def findStrobogrammatic(n: int) -> list[str]:
	def build(_len: int, total: int) -> list[str]:
		if (_len == 0):
			return [""]
		if (_len == 1):
			return ["0", "1", "8"]
		mids = build((_len - 2), total)
		result = []
		for s in mids:
			if (_len != total):
				result = (result + [(("0" + s) + "0")])
			result = (result + [(("1" + s) + "1")])
			result = (result + [(("6" + s) + "9")])
			result = (result + [(("8" + s) + "8")])
			result = (result + [(("9" + s) + "6")])
		return result
	return build(n, n)

def n___1():
	assert (findStrobogrammatic(1) == ["0", "1", "8"])

def n___2():
	assert (findStrobogrammatic(2) == ["11", "69", "88", "96"])

def n___3():
	assert (findStrobogrammatic(3) == ["101", "609", "808", "906", "111", "619", "818", "916", "181", "689", "888", "986"])

def main():
	n___1()
	n___2()
	n___3()

if __name__ == "__main__":
	main()
