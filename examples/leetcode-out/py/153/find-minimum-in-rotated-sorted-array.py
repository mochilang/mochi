# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def findMin(nums: list[int]) -> int:
	left = 0
	right = (len(nums) - 1)
	while (left < right):
		mid = (left + (((right - left)) // 2))
		if (nums[mid] > nums[right]):
			left = (mid + 1)
		else:
			right = mid
	return nums[left]

def example_1():
	assert (findMin([3, 4, 5, 1, 2]) == 1)

def example_2():
	assert (findMin([4, 5, 6, 7, 0, 1, 2]) == 0)

def example_3():
	assert (findMin([11, 13, 15, 17]) == 11)

def single_element():
	assert (findMin([5]) == 5)

def two_elements():
	assert (findMin([2, 1]) == 1)

def main():
	example_1()
	example_2()
	example_3()
	single_element()
	two_elements()

if __name__ == "__main__":
	main()
