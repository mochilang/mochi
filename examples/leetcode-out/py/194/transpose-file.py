# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def transpose(rows: list[list[int]]) -> list[list[int]]:
	if (len(rows) == 0):
		return []
	row_count = len(rows)
	col_count = len(rows[0])
	result = []
	c = 0
	while (c < col_count):
		new_row = []
		r = 0
		while (r < row_count):
			new_row = (new_row + [rows[r][c]])
			r = (r + 1)
		result = (result + [new_row])
		c = (c + 1)
	return result

def square_matrix():
	assert (transpose([[1, 2, 3], [4, 5, 6], [7, 8, 9]]) == [[1, 4, 7], [2, 5, 8], [3, 6, 9]])

def rectangular_matrix():
	assert (transpose([[1, 2], [3, 4], [5, 6]]) == [[1, 3, 5], [2, 4, 6]])

def main():
	square_matrix()
	rectangular_matrix()

if __name__ == "__main__":
	main()
