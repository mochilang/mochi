# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def maxProfit(prices: list[int]) -> int:
	n = len(prices)
	if (n == 0):
		return 0
	buy1 = (0 - prices[0])
	sell1 = 0
	buy2 = (0 - prices[0])
	sell2 = 0
	i = 1
	while (i < n):
		price = prices[i]
		b1 = (0 - price)
		if (b1 > buy1):
			buy1 = b1
		s1 = (buy1 + price)
		if (s1 > sell1):
			sell1 = s1
		b2 = (sell1 - price)
		if (b2 > buy2):
			buy2 = b2
		s2 = (buy2 + price)
		if (s2 > sell2):
			sell2 = s2
		i = (i + 1)
	return sell2

def example_1():
	assert (maxProfit([3, 3, 5, 0, 0, 3, 1, 4]) == 6)

def example_2():
	assert (maxProfit([1, 2, 3, 4, 5]) == 4)

def example_3():
	assert (maxProfit([7, 6, 4, 3, 1]) == 0)

def single_price():
	assert (maxProfit([5]) == 0)

def main():
	example_1()
	example_2()
	example_3()
	single_price()

if __name__ == "__main__":
	main()
