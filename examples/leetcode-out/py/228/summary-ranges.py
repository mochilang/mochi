# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def summaryRanges(nums: list[int]) -> list[str]:
	result = []
	if (len(nums) == 0):
		return result
	start = nums[0]
	prev = nums[0]
	i = 1
	while (i < len(nums)):
		n = nums[i]
		if (n == (prev + 1)):
			prev = n
		else:
			if (start == prev):
				result = (result + [str(start)])
			else:
				result = (result + [((str(start) + "->") + str(prev))])
			start = n
			prev = n
		i = (i + 1)
	if (start == prev):
		result = (result + [str(start)])
	else:
		result = (result + [((str(start) + "->") + str(prev))])
	return result

def example_1():
	assert (summaryRanges([0, 1, 2, 4, 5, 7]) == ["0->2", "4->5", "7"])

def example_2():
	assert (summaryRanges([0, 2, 3, 4, 6, 8, 9]) == ["0", "2->4", "6", "8->9"])

def single_element():
	assert (summaryRanges([5]) == ["5"])

def empty():
	assert (summaryRanges([]) == [])

def main():
	example_1()
	example_2()
	single_element()
	empty()

if __name__ == "__main__":
	main()
