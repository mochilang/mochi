# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def parseInt(s: str) -> int:
	result = 0
	i = 0
	digits = {"0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9}
	while (i < len(s)):
		result = ((result * 10) + digits[s[i]])
		i = (i + 1)
	return result

def encode(strs: list[str]) -> str:
	result = ""
	i = 0
	while (i < len(strs)):
		s = strs[i]
		result = (((result + str(len(s))) + "#") + s)
		i = (i + 1)
	return result

def decode(s: str) -> list[str]:
	result = []
	i = 0
	while (i < len(s)):
		j = i
		while (s[j] != "#"):
			j = (j + 1)
		lenStr = s[i:j]
		n = parseInt(lenStr)
		word = s[(j + 1):((j + 1) + n)]
		result = (result + [word])
		i = ((j + 1) + n)
	return result

def round_trip():
	strs = ["lint", "code", "love", "you"]
	assert (decode(encode(strs)) == strs)

def empty_list():
	strs = []
	assert (decode(encode(strs)) == strs)

def main():
	round_trip()
	empty_list()

if __name__ == "__main__":
	main()
