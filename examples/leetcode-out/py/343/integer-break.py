# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def max(a: int, b: int) -> int:
	if (a > b):
		return a
	return b

def integerBreak(n: int) -> int:
	if (n <= 2):
		return 1
	dp = []
	i = 0
	while (i <= n):
		dp = (dp + [0])
		i = (i + 1)
	dp[1] = 1
	dp[2] = 1
	i = 3
	while (i <= n):
		j = 1
		best = 0
		while (j < i):
			direct = (j * ((i - j)))
			broken = (j * dp[(i - j)])
			candidate = max(direct, broken)
			if (candidate > best):
				best = candidate
			j = (j + 1)
		dp[i] = best
		i = (i + 1)
	return dp[n]

def example_1():
	assert (integerBreak(2) == 1)

def example_2():
	assert (integerBreak(10) == 36)

def n_equals_3():
	assert (integerBreak(3) == 2)

def n_equals_4():
	assert (integerBreak(4) == 4)

def main():
	example_1()
	example_2()
	n_equals_3()
	n_equals_4()

if __name__ == "__main__":
	main()
