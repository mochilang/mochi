# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def minimumTotal(triangle: list[list[int]]) -> int:
	n = len(triangle)
	if (n == 0):
		return 0
	dp = triangle[(n - 1)]
	i = (n - 2)
	while (i >= 0):
		j = 0
		while (j <= i):
			left = dp[j]
			right = dp[(j + 1)]
			if (left < right):
				dp[j] = (triangle[i][j] + left)
			else:
				dp[j] = (triangle[i][j] + right)
			j = (j + 1)
		i = (i - 1)
	return dp[0]

def example_1():
	assert (minimumTotal([[2], [3, 4], [6, 5, 7], [4, 1, 8, 3]]) == 11)

def example_2():
	assert (minimumTotal([[(-10)]]) == ((-10)))

def single_level():
	assert (minimumTotal([[1]]) == 1)

def main():
	example_1()
	example_2()
	single_level()

if __name__ == "__main__":
	main()
