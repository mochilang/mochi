# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def insert(intervals: list[list[int]], newInterval: list[int]) -> list[list[int]]:
	result = []
	inserted = False
	start = newInterval[0]
	end = newInterval[1]
	for interval in intervals:
		currStart = interval[0]
		currEnd = interval[1]
		if (currEnd < start):
			result = (result + [interval])
		elif (currStart > end):
			if (not inserted):
				result = (result + [[start, end]])
				inserted = True
			result = (result + [interval])
		else:
			if (currStart < start):
				start = currStart
			if (currEnd > end):
				end = currEnd
	if (not inserted):
		result = (result + [[start, end]])
	return result

def example_1():
	assert (insert([[1, 3], [6, 9]], [2, 5]) == [[1, 5], [6, 9]])

def example_2():
	assert (insert([[1, 2], [3, 5], [6, 7], [8, 10], [12, 16]], [4, 8]) == [[1, 2], [3, 10], [12, 16]])

def empty_list():
	assert (insert([], [5, 7]) == [[5, 7]])

def contained_interval():
	assert (insert([[1, 5]], [2, 3]) == [[1, 5]])

def main():
	example_1()
	example_2()
	empty_list()
	contained_interval()

if __name__ == "__main__":
	main()
