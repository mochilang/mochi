# Generated by Mochi Python compiler
from __future__ import annotations

import dataclasses
import typing

def topThreeSalaries(employees: list[Employee], departments: list[Department]) -> list[Result]:
	results = []
	for dept in departments:
		salaries = []
		for emp in employees:
			if (emp.departmentId == dept.id):
				found = False
				for s in salaries:
					if (s == emp.salary):
						found = True
						break
				if (not found):
					salaries = (salaries + [emp.salary])
		i1 = 0
		while (i1 < len(salaries)):
			j = (i1 + 1)
			while (j < len(salaries)):
				if (salaries[j] > salaries[i1]):
					t = salaries[i1]
					salaries[i1] = salaries[j]
					salaries[j] = t
				j = (j + 1)
			i1 = (i1 + 1)
		i = 0
		while ((i < len(salaries)) and (i < 3)):
			sal = salaries[i]
			for emp in employees:
				if ((emp.departmentId == dept.id) and (emp.salary == sal)):
					results = (results + [Result(Department=dept.name, Employee=emp.name, Salary=sal)])
			i = (i + 1)
	return results

@dataclasses.dataclass
class Employee:
	id: int
	name: str
	salary: int
	departmentId: int

@dataclasses.dataclass
class Department:
	id: int
	name: str

@dataclasses.dataclass
class Result:
	Department: str
	Employee: str
	Salary: int

employees = [Employee(id=1, name="Joe", salary=85000, departmentId=1), Employee(id=2, name="Henry", salary=80000, departmentId=2), Employee(id=3, name="Sam", salary=60000, departmentId=2), Employee(id=4, name="Max", salary=90000, departmentId=1), Employee(id=5, name="Janet", salary=69000, departmentId=1), Employee(id=6, name="Randy", salary=85000, departmentId=1), Employee(id=7, name="Will", salary=70000, departmentId=1)]
departments = [Department(id=1, name="IT"), Department(id=2, name="Sales")]

def top_three_salaries():
	res = topThreeSalaries(employees, departments)
	names = []
	for r in res:
		names = (names + [r.Employee])
	assert (str(names) == str(["Max", "Joe", "Randy", "Will", "Henry", "Sam"]))

def main():
	employees = [Employee(id=1, name="Joe", salary=85000, departmentId=1), Employee(id=2, name="Henry", salary=80000, departmentId=2), Employee(id=3, name="Sam", salary=60000, departmentId=2), Employee(id=4, name="Max", salary=90000, departmentId=1), Employee(id=5, name="Janet", salary=69000, departmentId=1), Employee(id=6, name="Randy", salary=85000, departmentId=1), Employee(id=7, name="Will", salary=70000, departmentId=1)]
	departments = [Department(id=1, name="IT"), Department(id=2, name="Sales")]
	top_three_salaries()

if __name__ == "__main__":
	main()
