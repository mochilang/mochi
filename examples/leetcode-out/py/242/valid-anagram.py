# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def isAnagram(s: str, t: str) -> bool:
	if (len(s) != len(t)):
		return False
	counts = {}
	i = 0
	while (i < len(s)):
		ch = s[i]
		if (ch in counts):
			counts[ch] = (counts[ch] + 1)
		else:
			counts[ch] = 1
		i = (i + 1)
	i = 0
	while (i < len(t)):
		ch = t[i]
		if (ch in counts):
			counts[ch] = (counts[ch] - 1)
		else:
			return False
		i = (i + 1)
	for key in counts:
		if (counts[key] != 0):
			return False
	return True

def example_1():
	assert (isAnagram("anagram", "nagaram") == True)

def example_2():
	assert (isAnagram("rat", "car") == False)

def empty_strings():
	assert (isAnagram("", "") == True)

def different_lengths():
	assert (isAnagram("a", "ab") == False)

def main():
	example_1()
	example_2()
	empty_strings()
	different_lengths()

if __name__ == "__main__":
	main()
