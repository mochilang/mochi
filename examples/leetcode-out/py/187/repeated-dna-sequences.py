# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def findRepeatedDnaSequences(s: str) -> list[str]:
	n = len(s)
	if (n < 10):
		return []
	seen = {}
	result = []
	i = 0
	while ((i + 10) <= n):
		sub = s[i:(i + 10)]
		count = 0
		if (sub in seen):
			count = seen[sub]
		count = (count + 1)
		seen[sub] = count
		if (count == 2):
			result = (result + [sub])
		i = (i + 1)
	return result

def example_1():
	assert (findRepeatedDnaSequences("AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT") == ["AAAAACCCCC", "CCCCCAAAAA"])

def example_2():
	assert (findRepeatedDnaSequences("AAAAAAAAAAAAA") == ["AAAAAAAAAA"])

def no_repeats():
	assert (findRepeatedDnaSequences("ACGTACGTAC") == [])

def short_string():
	assert (findRepeatedDnaSequences("AAAAA") == [])

def main():
	example_1()
	example_2()
	no_repeats()
	short_string()

if __name__ == "__main__":
	main()
