# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def getIntersectionNode(_next: list[int], headA: int, headB: int) -> int:
	a = headA
	b = headB
	while (a != b):
		if (a == ((-1))):
			a = headB
		else:
			a = _next[a]
		if (b == ((-1))):
			b = headA
		else:
			b = _next[b]
	return a

def example_1():
	_next = [1, 2, 3, 4, (-1), 6, 7, 2]
	assert (getIntersectionNode(_next, 0, 5) == 2)

def example_2():
	_next = [1, 2, 3, 4, (-1), 3]
	assert (getIntersectionNode(_next, 0, 5) == 3)

def example_3():
	_next = [1, 2, (-1), 4, (-1)]
	assert (getIntersectionNode(_next, 0, 3) == ((-1)))

def same_head():
	_next = [1, 2, 3, (-1)]
	assert (getIntersectionNode(_next, 0, 0) == 0)

def one_empty():
	_next = [1, (-1)]
	assert (getIntersectionNode(_next, 0, (-1)) == ((-1)))

def main():
	example_1()
	example_2()
	example_3()
	same_head()
	one_empty()

if __name__ == "__main__":
	main()
