# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def containsNearbyDuplicate(nums: list[int], k: int) -> bool:
	index = {}
	i = 0
	while (i < len(nums)):
		num = nums[i]
		if (num in index):
			j = index[num]
			if ((i - j) <= k):
				return True
		index[num] = i
		i = (i + 1)
	return False

def example_1():
	assert (containsNearbyDuplicate([1, 2, 3, 1], 3) == True)

def example_2():
	assert (containsNearbyDuplicate([1, 0, 1, 1], 1) == True)

def example_3():
	assert (containsNearbyDuplicate([1, 2, 3, 1, 2, 3], 2) == False)

def no_duplicates():
	assert (containsNearbyDuplicate([1, 2, 3, 4, 5], 3) == False)

def duplicate_at_distance_k():
	assert (containsNearbyDuplicate([1, 2, 3, 1], 2) == False)

def duplicate_with_k_zero():
	assert (containsNearbyDuplicate([1, 1], 0) == False)

def main():
	example_1()
	example_2()
	example_3()
	no_duplicates()
	duplicate_at_distance_k()
	duplicate_with_k_zero()

if __name__ == "__main__":
	main()
