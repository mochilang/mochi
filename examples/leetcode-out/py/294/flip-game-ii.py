# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def canWin(s: str) -> bool:
	memo = {}
	def helper(cur: str) -> bool:
		nonlocal memo
		if (cur in memo):
			return memo[cur]
		i = 0
		while ((i + 1) < len(cur)):
			if ((cur[i] == "+") and (cur[(i + 1)] == "+")):
				_next = ((cur[0:i] + "--") + cur[(i + 2):len(cur)])
				if (not helper(_next)):
					memo[cur] = True
					return True
			i = (i + 1)
		memo[cur] = False
		return False
	return helper(s)

def example_1():
	assert (canWin("++++") == True)

def example_2():
	assert (canWin("+") == False)

def five_plus():
	assert (canWin("+++++") == False)

def mixed():
	assert (canWin("+-++") == True)

def main():
	example_1()
	example_2()
	five_plus()
	mixed()

if __name__ == "__main__":
	main()
