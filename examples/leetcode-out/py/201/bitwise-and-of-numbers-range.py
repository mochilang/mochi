# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def rangeBitwiseAnd(left: int, right: int) -> int:
	l = left
	r = right
	shift = 0
	while (l < r):
		l = (l // 2)
		r = (r // 2)
		shift = (shift + 1)
	factor = 1
	for _ in range(0, shift):
		factor = (factor * 2)
	return (l * factor)

def example_1():
	assert (rangeBitwiseAnd(5, 7) == 4)

def example_2():
	assert (rangeBitwiseAnd(0, 0) == 0)

def example_3():
	assert (rangeBitwiseAnd(1, 2147483647) == 0)

def single_number():
	assert (rangeBitwiseAnd(13, 13) == 13)

def power_of_two():
	assert (rangeBitwiseAnd(8, 15) == 8)

def main():
	example_1()
	example_2()
	example_3()
	single_number()
	power_of_two()

if __name__ == "__main__":
	main()
