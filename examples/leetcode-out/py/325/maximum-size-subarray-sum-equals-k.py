# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def maxSubArrayLen(nums: list[int], k: int) -> int:
	prefix = 0
	firstIndex = {}
	firstIndex[0] = (-1)
	best = 0
	i = 0
	while (i < len(nums)):
		prefix = (prefix + nums[i])
		target = (prefix - k)
		if (target in firstIndex):
			start = firstIndex[target]
			length = (i - start)
			if (length > best):
				best = length
		if (not ((prefix in firstIndex))):
			firstIndex[prefix] = i
		i = (i + 1)
	return best

def example_1():
	assert (maxSubArrayLen([1, (-1), 5, (-2), 3], 3) == 4)

def example_2():
	assert (maxSubArrayLen([(-2), (-1), 2, 1], 1) == 2)

def no_subarray():
	assert (maxSubArrayLen([1, 2, 3], 7) == 0)

def entire_array():
	assert (maxSubArrayLen([1, 2, 3], 6) == 3)

def single_negative():
	assert (maxSubArrayLen([(-1)], (-1)) == 1)

def main():
	example_1()
	example_2()
	no_subarray()
	entire_array()
	single_negative()

if __name__ == "__main__":
	main()
