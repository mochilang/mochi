# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def merge(nums1: list[int], m: int, nums2: list[int], n: int) -> list[int]:
	i = (m - 1)
	j = (n - 1)
	k = ((m + n) - 1)
	while (j >= 0):
		if ((i >= 0) and (nums1[i] > nums2[j])):
			nums1[k] = nums1[i]
			i = (i - 1)
		else:
			nums1[k] = nums2[j]
			j = (j - 1)
		k = (k - 1)
	return nums1

def example_1():
	assert (merge([1, 2, 3, 0, 0, 0], 3, [2, 5, 6], 3) == [1, 2, 2, 3, 5, 6])

def example_2():
	assert (merge([1], 1, [], 0) == [1])

def example_3():
	assert (merge([0], 0, [1], 1) == [1])

def main():
	example_1()
	example_2()
	example_3()

if __name__ == "__main__":
	main()
