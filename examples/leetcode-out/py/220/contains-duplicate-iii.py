# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def abs(x: int) -> int:
	if (x < 0):
		return (-x)
	else:
		return x

def containsNearbyAlmostDuplicate(nums: list[int], indexDiff: int, valueDiff: int) -> bool:
	if ((indexDiff <= 0) or (valueDiff < 0)):
		return False
	i = 0
	while (i < len(nums)):
		j = (i - 1)
		left = 0
		if ((i - indexDiff) > 0):
			left = (i - indexDiff)
		j = (i - 1)
		while (j >= left):
			if (abs((nums[i] - nums[j])) <= valueDiff):
				return True
			j = (j - 1)
		i = (i + 1)
	return False

def example_1():
	assert (containsNearbyAlmostDuplicate([1, 2, 3, 1], 3, 0) == True)

def example_2():
	assert (containsNearbyAlmostDuplicate([1, 0, 1, 1], 1, 2) == True)

def example_3():
	assert (containsNearbyAlmostDuplicate([1, 5, 9, 1, 5, 9], 2, 3) == False)

def negative_numbers():
	assert (containsNearbyAlmostDuplicate([(-3), (-1), (-4), (-2)], 2, 1) == True)

def no_pairs():
	assert (containsNearbyAlmostDuplicate([1, 2, 3, 4], 1, 0) == False)

def main():
	example_1()
	example_2()
	example_3()
	negative_numbers()
	no_pairs()

if __name__ == "__main__":
	main()
