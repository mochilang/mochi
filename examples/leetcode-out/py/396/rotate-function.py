# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def maxRotateFunction(nums: list[int]) -> int:
	n = len(nums)
	if (n == 0):
		return 0
	total = 0
	f = 0
	i = 0
	while (i < n):
		val = nums[i]
		total = (total + val)
		f = (f + (i * val))
		i = (i + 1)
	best = f
	k = 1
	while (k < n):
		f = ((f + total) - (n * nums[(n - k)]))
		if (f > best):
			best = f
		k = (k + 1)
	return best

def example():
	assert (maxRotateFunction([4, 3, 2, 6]) == 26)

def single():
	assert (maxRotateFunction([100]) == 0)

def negatives():
	assert (maxRotateFunction([(-1), (-2), (-3), (-4)]) == ((-12)))

def main():
	example()
	single()
	negatives()

if __name__ == "__main__":
	main()
