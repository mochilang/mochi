# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def getModifiedArray(n: int, updates: list[list[int]]) -> list[int]:
	diff = []
	i = 0
	while (i < n):
		diff = (diff + [0])
		i = (i + 1)
	m = len(updates)
	j = 0
	while (j < m):
		u = updates[j]
		start = u[0]
		end = u[1]
		inc = u[2]
		diff[start] = (diff[start] + inc)
		if ((end + 1) < n):
			diff[(end + 1)] = (diff[(end + 1)] - inc)
		j = (j + 1)
	result = []
	sum = 0
	k = 0
	while (k < n):
		sum = (sum + diff[k])
		result = (result + [sum])
		k = (k + 1)
	return result

updates1 = [[1, 3, 2], [2, 4, 3], [0, 2, (-2)]]
res1 = getModifiedArray(5, updates1)

def example_1():
	assert (res1[0] == ((-2)))
	assert (res1[1] == 0)
	assert (res1[2] == 3)
	assert (res1[3] == 5)
	assert (res1[4] == 3)

def no_updates():
	assert (res2[0] == 0)
	assert (res2[1] == 0)
	assert (res2[2] == 0)

def main():
	updates1 = [[1, 3, 2], [2, 4, 3], [0, 2, (-2)]]
	res1 = getModifiedArray(5, updates1)
	res2 = getModifiedArray(3, [])
	example_1()
	no_updates()

if __name__ == "__main__":
	main()
