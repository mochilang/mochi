# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def wordBreak(s: str, wordDict: list[str]) -> bool:
	_dict = {}
	for w in wordDict:
		_dict[w] = True
	n = len(s)
	dp = []
	i = 0
	while (i <= n):
		dp = (dp + [False])
		i = (i + 1)
	dp[0] = True
	idx = 1
	while (idx <= n):
		j = 0
		while (j < idx):
			if dp[j]:
				part = s[j:idx]
				if (part in _dict):
					dp[idx] = True
					break
			j = (j + 1)
		idx = (idx + 1)
	return dp[n]

def example_1():
	assert (wordBreak("leetcode", ["leet", "code"]) == True)

def example_2():
	assert (wordBreak("applepenapple", ["apple", "pen"]) == True)

def example_3():
	assert (wordBreak("catsandog", ["cats", "dog", "sand", "and", "cat"]) == False)

def main():
	example_1()
	example_2()
	example_3()

if __name__ == "__main__":
	main()
