# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def numDistinct(s: str, t: str) -> int:
	m = len(s)
	n = len(t)
	dp = []
	i = 0
	while (i <= m):
		row = []
		j = 0
		while (j <= n):
			row = (row + [0])
			j = (j + 1)
		dp = (dp + [row])
		i = (i + 1)
	i = 0
	while (i <= m):
		dp[i][0] = 1
		i = (i + 1)
	i = 1
	while (i <= m):
		j = 1
		while (j <= n):
			dp[i][j] = dp[(i - 1)][j]
			if (s[(i - 1)] == t[(j - 1)]):
				dp[i][j] = (dp[i][j] + dp[(i - 1)][(j - 1)])
			j = (j + 1)
		i = (i + 1)
	return dp[m][n]

def example_1():
	assert (numDistinct("rabbbit", "rabbit") == 3)

def example_2():
	assert (numDistinct("babgbag", "bag") == 5)

def empty_target():
	assert (numDistinct("abc", "") == 1)

def no_subsequence():
	assert (numDistinct("abc", "abcd") == 0)

def main():
	example_1()
	example_2()
	empty_target()
	no_subsequence()

if __name__ == "__main__":
	main()
