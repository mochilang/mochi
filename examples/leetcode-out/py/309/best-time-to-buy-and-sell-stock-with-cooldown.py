# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def maxProfit(prices: list[int]) -> int:
	n = len(prices)
	if (n == 0):
		return 0
	hold = (-prices[0])
	sold = 0
	rest = 0
	i = 1
	while (i < n):
		prevHold = hold
		prevSold = sold
		prevRest = rest
		buy = (prevRest - prices[i])
		if (buy > prevHold):
			hold = buy
		else:
			hold = prevHold
		sold = (prevHold + prices[i])
		if (prevSold > prevRest):
			rest = prevSold
		else:
			rest = prevRest
		i = (i + 1)
	if (sold > rest):
		return sold
	return rest

def example_1():
	assert (maxProfit([1, 2, 3, 0, 2]) == 3)

def cooldown():
	assert (maxProfit([2, 1, 4]) == 3)

def single_day():
	assert (maxProfit([5]) == 0)

def main():
	example_1()
	cooldown()
	single_day()

if __name__ == "__main__":
	main()
