# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def rotate(nums: list[int], k: int) -> list[int]:
	n = len(nums)
	if (n == 0):
		return nums
	r = (k % n)
	if (r == 0):
		return nums
	return (nums[(n - r):len(nums)] + nums[0:(n - r)])

def example_1():
	assert (rotate([1, 2, 3, 4, 5, 6, 7], 3) == [5, 6, 7, 1, 2, 3, 4])

def example_2():
	assert (rotate([(-1), (-100), 3, 99], 2) == [3, 99, (-1), (-100)])

def k_greater_than_length():
	assert (rotate([1, 2], 5) == [2, 1])

def main():
	example_1()
	example_2()
	k_greater_than_length()

if __name__ == "__main__":
	main()
