# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def isSubsequence(s: str, t: str) -> bool:
	n = len(s)
	m = len(t)
	i = 0
	j = 0
	while ((i < n) and (j < m)):
		if (s[i] == t[j]):
			i = (i + 1)
		j = (j + 1)
	return (i == n)

def example_1():
	assert (isSubsequence("abc", "ahbgdc") == True)

def example_2():
	assert (isSubsequence("axc", "ahbgdc") == False)

def empty_s():
	assert (isSubsequence("", "ahbgdc") == True)

def empty_t():
	assert (isSubsequence("a", "") == False)

def both_empty():
	assert (isSubsequence("", "") == True)

def main():
	example_1()
	example_2()
	empty_s()
	empty_t()
	both_empty()

if __name__ == "__main__":
	main()
