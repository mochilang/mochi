# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def kSmallestPairs(nums1: list[int], nums2: list[int], k: int) -> list[list[int]]:
	pairs = []
	for a in nums1:
		for b in nums2:
			pairs = (pairs + [[a, b]])
	_sorted = [ p for p in sorted([ p for p in pairs ], key=lambda p: (p[0] + p[1])) ]
	if (k < len(_sorted)):
		return _sorted[0:k]
	return _sorted

def example_1():
	assert (kSmallestPairs([1, 7, 11], [2, 4, 6], 3) == [[1, 2], [1, 4], [1, 6]])

def example_2():
	assert (kSmallestPairs([1, 1, 2], [1, 2, 3], 2) == [[1, 1], [1, 1]])

def example_3():
	assert (kSmallestPairs([1, 2], [3], 3) == [[1, 3], [2, 3]])

def main():
	example_1()
	example_2()
	example_3()

if __name__ == "__main__":
	main()
