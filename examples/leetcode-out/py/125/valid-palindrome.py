# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def isAlphaNum(ch: str) -> bool:
	if (("0" <= ch) and (ch <= "9")):
		return True
	if (("a" <= ch) and (ch <= "z")):
		return True
	if (("A" <= ch) and (ch <= "Z")):
		return True
	return False

def toLower(ch: str) -> str:
	map = {"A": "a", "B": "b", "C": "c", "D": "d", "E": "e", "F": "f", "G": "g", "H": "h", "I": "i", "J": "j", "K": "k", "L": "l", "M": "m", "N": "n", "O": "o", "P": "p", "Q": "q", "R": "r", "S": "s", "T": "t", "U": "u", "V": "v", "W": "w", "X": "x", "Y": "y", "Z": "z"}
	if (ch in map):
		return map[ch]
	return ch

def isPalindrome(s: str) -> bool:
	filtered = []
	for ch in s:
		if isAlphaNum(ch):
			filtered = (filtered + [toLower(ch)])
	n = len(filtered)
	for i in range(0, (n // 2)):
		if (filtered[i] != filtered[((n - 1) - i)]):
			return False
	return True

def example_1():
	assert (isPalindrome("A man, a plan, a canal: Panama") == True)

def example_2():
	assert (isPalindrome("race a car") == False)

def example_3():
	assert (isPalindrome(" ") == True)

def main():
	example_1()
	example_2()
	example_3()

if __name__ == "__main__":
	main()
