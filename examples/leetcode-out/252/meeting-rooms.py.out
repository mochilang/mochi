# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def canAttendMeetings(intervals: list[list[int]]) -> bool:
	_sorted = [ iv for iv in sorted([ iv for iv in intervals ], key=lambda iv: iv[0]) ]
	prevEnd = (-2147483648)
	for iv in _sorted:
		start = iv[0]
		end = iv[1]
		if (start < prevEnd):
			return False
		prevEnd = end
	return True

def example_1():
	assert (canAttendMeetings([[0, 30], [5, 10], [15, 20]]) == False)

def example_2():
	assert (canAttendMeetings([[7, 10], [2, 4]]) == True)

def empty():
	assert (canAttendMeetings([]) == True)

def single_interval():
	assert (canAttendMeetings([[1, 2]]) == True)

def zero_length():
	assert (canAttendMeetings([[1, 1], [2, 2]]) == True)

def overlap_at_end():
	assert (canAttendMeetings([[1, 4], [4, 5]]) == True)

def main():
	example_1()
	example_2()
	empty()
	single_interval()
	zero_length()
	overlap_at_end()

if __name__ == "__main__":
	main()
