// Generated by Mochi C# compiler
using System;
using System.Collections.Generic;

public class Program {
	static long maxArea(long[] height) {
		long left = 0L;
		long right = (height.Length - 1L);
		long maxArea = 0L;
		while ((left < right)) {
			var width = (right - left);
			long h = 0L;
			if ((height[left] < height[right])) {
				h = height[left];
			} else {
				h = height[right];
			}
			var area = (h * width);
			if ((area > maxArea)) {
				maxArea = area;
			}
			if ((height[left] < height[right])) {
				left = (left + 1L);
			} else {
				right = (right - 1L);
			}
		}
		return maxArea;
	}
	
	static void test_example_1() {
		if (!((maxArea(new [] { 1L, 8L, 6L, 2L, 5L, 4L, 8L, 3L, 7L }) == 49L))) throw new Exception("expect failed");
	}
	
	static void test_example_2() {
		if (!((maxArea(new [] { 1L, 1L }) == 1L))) throw new Exception("expect failed");
	}
	
	static void test_decreasing_heights() {
		if (!((maxArea(new [] { 4L, 3L, 2L, 1L, 4L }) == 16L))) throw new Exception("expect failed");
	}
	
	static void test_short_array() {
		if (!((maxArea(new [] { 1L, 2L, 1L }) == 2L))) throw new Exception("expect failed");
	}
	
	public static void Main() {
		test_example_1();
		test_example_2();
		test_decreasing_heights();
		test_short_array();
	}
}
