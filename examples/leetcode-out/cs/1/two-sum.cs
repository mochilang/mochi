// Generated by Mochi C# compiler
using System;
using System.Collections.Generic;
using System.IO;
using System.Net.Http;
using System.Text;
using System.Web;

public class Program {
    static long[] twoSum(long[] nums, long target) {
        long n = nums.Length;
        for (var i = 0L; i < n; i++) {
            for (var j = (i + 1L); j < n; j++) {
                if (((_indexList(nums, i) + _indexList(nums, j)) == target)) {
                    return new dynamic[] { i, j };
                }
            }
        }
        return new long[] { (-1L), (-1L) };
    }
    
    public static void Main() {
        long[] result = twoSum(new long[] { 2L, 7L, 11L, 15L }, 9L);
        Console.WriteLine(_indexList(result, 0L));
        Console.WriteLine(_indexList(result, 1L));
    }
    static dynamic _indexList(dynamic l, long i) {
        var list = l as System.Collections.IList;
        if (list == null) throw new Exception("index() expects list");
        if (i < 0) i += list.Count;
        if (i < 0 || i >= list.Count) throw new Exception("index out of range");
        return list[(int)i];
    }
    
}
