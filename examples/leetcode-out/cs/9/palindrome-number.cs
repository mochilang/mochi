// Generated by Mochi C# compiler
using System;
using System.Collections.Generic;

public class Program {
	static bool isPalindrome(long x) {
		if ((x < 0L)) {
			return false;
		}
		var s = Convert.ToString(x);
		var n = s.Length;
		for (var i = 0L; i < (n / 2L); i++) {
			if ((_indexString(s, i) != _indexString(s, ((n - 1L) - i)))) {
				return false;
			}
		}
		return true;
	}
	
	static void test_example_1() {
		if (!((isPalindrome(121L) == true))) throw new Exception("expect failed");
	}
	
	static void test_example_2() {
		if (!((isPalindrome((-121L)) == false))) throw new Exception("expect failed");
	}
	
	static void test_example_3() {
		if (!((isPalindrome(10L) == false))) throw new Exception("expect failed");
	}
	
	static void test_zero() {
		if (!((isPalindrome(0L) == true))) throw new Exception("expect failed");
	}
	
	public static void Main() {
		test_example_1();
		test_example_2();
		test_example_3();
		test_zero();
	}
	static string _indexString(string s, long i) {
		if (i < 0) i += s.Length;
		if (i < 0 || i >= s.Length) throw new Exception("index out of range");
		return s[(int)i].ToString();
	}
	
}
