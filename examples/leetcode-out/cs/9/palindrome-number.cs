// Generated by Mochi C# compiler
using System;
using System.Collections.Generic;
using System.IO;
using System.Net.Http;
using System.Text;
using System.Web;

public class Program {
    static bool isPalindrome(long x) {
        if ((x < 0L)) {
            return false;
        }
        string s = Convert.ToString(x);
        long n = s.Length;
        for (var i = 0L; i < (n / 2L); i++) {
            if ((_indexString(s, i) != _indexString(s, ((n - 1L) - i)))) {
                return false;
            }
        }
        return true;
    }
    
    static void test_example_1() {
        expect((isPalindrome(121L) == true));
    }
    
    static void test_example_2() {
        expect((isPalindrome((-121L)) == false));
    }
    
    static void test_example_3() {
        expect((isPalindrome(10L) == false));
    }
    
    static void test_zero() {
        expect((isPalindrome(0L) == true));
    }
    
    public static void Main() {
        test_example_1();
        test_example_2();
        test_example_3();
        test_zero();
    }
    static string _indexString(string s, long i) {
        if (i < 0) i += s.Length;
        if (i < 0 || i >= s.Length) throw new Exception("index out of range");
        return s[(int)i].ToString();
    }
    
    static void expect(bool cond) {
        if (!cond) throw new Exception("expect failed");
    }
    
}
