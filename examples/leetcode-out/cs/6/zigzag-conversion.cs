// Generated by Mochi C# compiler
using System;
using System.Collections.Generic;
using System.Linq;

public class Program {
	static string convert(string s, long numRows) {
		if (((numRows <= 1L) || (numRows >= s.Length))) {
			return s;
		}
		var rows = new dynamic[] { };
		var i = 0L;
		while ((i < numRows)) {
			rows = rows.Concat(new [] { "" }).ToArray();
			i = (i + 1L);
		}
		var curr = 0L;
		var step = 1L;
		foreach (var ch in s) {
			rows[curr] = (rows[curr] + ch);
			if ((curr == 0L)) {
				step = 1L;
			} else if ((curr == (numRows - 1L))) {
				step = (-1L);
			}
			curr = (curr + step);
		}
		var result = "";
		foreach (var row in rows) {
			result = (result + row);
		}
		return result;
	}
	
	static void test_example_1() {
		if (!((convert("PAYPALISHIRING", 3L) == "PAHNAPLSIIGYIR"))) throw new Exception("expect failed");
	}
	
	static void test_example_2() {
		if (!((convert("PAYPALISHIRING", 4L) == "PINALSIGYAHRPI"))) throw new Exception("expect failed");
	}
	
	static void test_single_row() {
		if (!((convert("A", 1L) == "A"))) throw new Exception("expect failed");
	}
	
	public static void Main() {
		test_example_1();
		test_example_2();
		test_single_row();
	}
}
