// Generated by Mochi C# compiler
using System;
using System.Collections.Generic;

public class Program {
	static long strStr(string haystack, string needle) {
		long n = haystack.Length;
		long m = needle.Length;
		if ((m == 0L)) {
			return 0L;
		}
		if ((m > n)) {
			return (-1L);
		}
		for (var i = 0L; i < ((n - m) + 1L); i++) {
			long j = 0L;
			while ((j < m)) {
				if ((_indexString(haystack, (i + j)) != _indexString(needle, j))) {
					break;
				}
				j = (j + 1L);
			}
			if ((j == m)) {
				return i;
			}
		}
		return (-1L);
	}
	
	static void test_example_1() {
		if (!((strStr("sadbutsad", "sad") == 0L))) throw new Exception("expect failed");
	}
	
	static void test_example_2() {
		if (!((strStr("leetcode", "leeto") == ((-1L))))) throw new Exception("expect failed");
	}
	
	static void test_empty_needle() {
		if (!((strStr("abc", "") == 0L))) throw new Exception("expect failed");
	}
	
	static void test_needle_at_end() {
		if (!((strStr("hello", "lo") == 3L))) throw new Exception("expect failed");
	}
	
	public static void Main() {
		test_example_1();
		test_example_2();
		test_empty_needle();
		test_needle_at_end();
	}
	static string _indexString(string s, long i) {
		if (i < 0) i += s.Length;
		if (i < 0 || i >= s.Length) throw new Exception("index out of range");
		return s[(int)i].ToString();
	}
	
}
