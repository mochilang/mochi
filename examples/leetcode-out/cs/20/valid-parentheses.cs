// Generated by Mochi C# compiler
using System;
using System.Collections.Generic;
using System.Linq;

public class Program {
	static bool isValid(string s) {
		var stack = new dynamic[] { };
		long n = s.Length;
		for (var i = 0L; i < n; i++) {
			var c = _indexString(s, i);
			if ((c == "(")) {
				stack = stack.Concat(new [] { ")" }).ToArray();
			} else if ((c == "[")) {
				stack = (stack + new [] { "]" });
			} else if ((c == "{")) {
				stack = (stack + new [] { "}" });
			} else {
				if ((stack.Length == 0L)) {
					return false;
				}
				var top = stack[(stack.Length - 1L)];
				if ((top != c)) {
					return false;
				}
				stack = ((stack).GetRange((int)(0L), (int)((stack.Length - 1L)-0L)));
			}
		}
		return (stack.Length == 0L);
	}
	
	static void test_example_1() {
		if (!((isValid("()") == true))) throw new Exception("expect failed");
	}
	
	static void test_example_2() {
		if (!((isValid("()[]{}") == true))) throw new Exception("expect failed");
	}
	
	static void test_example_3() {
		if (!((isValid("(]") == false))) throw new Exception("expect failed");
	}
	
	static void test_example_4() {
		if (!((isValid("([)]") == false))) throw new Exception("expect failed");
	}
	
	static void test_example_5() {
		if (!((isValid("{[]}") == true))) throw new Exception("expect failed");
	}
	
	static void test_empty_string() {
		if (!((isValid("") == true))) throw new Exception("expect failed");
	}
	
	static void test_single_closing() {
		if (!((isValid("]") == false))) throw new Exception("expect failed");
	}
	
	static void test_unmatched_open() {
		if (!((isValid("((") == false))) throw new Exception("expect failed");
	}
	
	public static void Main() {
		test_example_1();
		test_example_2();
		test_example_3();
		test_example_4();
		test_example_5();
		test_empty_string();
		test_single_closing();
		test_unmatched_open();
	}
	static string _indexString(string s, long i) {
		if (i < 0) i += s.Length;
		if (i < 0 || i >= s.Length) throw new Exception("index out of range");
		return s[(int)i].ToString();
	}
	
}
