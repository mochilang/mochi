// Generated by Mochi C# compiler
using System;
using System.Collections.Generic;

public class Program {
	static long removeElement(long[] nums, long val) {
		long k = 0L;
		long i = 0L;
		while ((i < nums.Length)) {
			if ((nums[i] != val)) {
				nums[k] = nums[i];
				k = (k + 1L);
			}
			i = (i + 1L);
		}
		return k;
	}
	
	static void test_example_1() {
		long[] nums = new [] { 3L, 2L, 2L, 3L };
		long k = removeElement(nums, 3L);
		if (!((k == 2L))) throw new Exception("expect failed");
		if (!((((nums).GetRange((int)(0L), (int)(k-0L))) == new [] { 2L, 2L }))) throw new Exception("expect failed");
	}
	
	static void test_example_2() {
		long[] nums = new [] { 0L, 1L, 2L, 2L, 3L, 0L, 4L, 2L };
		long k = removeElement(nums, 2L);
		if (!((k == 5L))) throw new Exception("expect failed");
		if (!((((nums).GetRange((int)(0L), (int)(k-0L))) == new [] { 0L, 1L, 3L, 0L, 4L }))) throw new Exception("expect failed");
	}
	
	static void test_no_removal() {
		long[] nums = new [] { 1L, 2L, 3L };
		long k = removeElement(nums, 4L);
		if (!((k == 3L))) throw new Exception("expect failed");
		if (!((((nums).GetRange((int)(0L), (int)(k-0L))) == new [] { 1L, 2L, 3L }))) throw new Exception("expect failed");
	}
	
	public static void Main() {
		test_example_1();
		test_example_2();
		test_no_removal();
	}
}
