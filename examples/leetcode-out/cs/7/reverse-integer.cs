// Generated by Mochi C# compiler
using System;
using System.Collections.Generic;
using System.IO;
using System.Net.Http;
using System.Text;
using System.Web;

public class Program {
    static long reverse(long x) {
        long sign = 1L;
        var n = x;
        if ((n < 0L)) {
            sign = (-1L);
            n = (-n);
        }
        long rev = 0L;
        while ((n != 0L)) {
            var digit = (n % 10L);
            rev = ((rev * 10L) + digit);
            n = (n / 10L);
        }
        rev = (rev * sign);
        if (((rev < (((-2147483647L) - 1L))) || (rev > 2147483647L))) {
            return 0L;
        }
        return rev;
    }
    
    static void test_example_1() {
        expect((reverse(123L) == 321L));
    }
    
    static void test_example_2() {
        expect((reverse((-123L)) == ((-321L))));
    }
    
    static void test_example_3() {
        expect((reverse(120L) == 21L));
    }
    
    static void test_overflow() {
        expect((reverse(1534236469L) == 0L));
    }
    
    public static void Main() {
        test_example_1();
        test_example_2();
        test_example_3();
        test_overflow();
    }
    static void expect(bool cond) {
        if (!cond) throw new Exception("expect failed");
    }
    
}
