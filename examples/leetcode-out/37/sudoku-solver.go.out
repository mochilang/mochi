package main

func expect(cond bool) {
	if !cond { panic("expect failed") }
}

func solveSudoku(board [][]string) [][]string {
	dfs(0, 0)
	return board
}

func solve() {
	expect((solvedBoard == solved))
}

func main() {
	var board [][]string = [][]string{[]string{"5", "3", ".", ".", "7", ".", ".", ".", "."}, []string{"6", ".", ".", "1", "9", "5", ".", ".", "."}, []string{".", "9", "8", ".", ".", ".", ".", "6", "."}, []string{"8", ".", ".", ".", "6", ".", ".", ".", "3"}, []string{"4", ".", ".", "8", ".", "3", ".", ".", "1"}, []string{"7", ".", ".", ".", "2", ".", ".", ".", "6"}, []string{".", "6", ".", ".", ".", ".", "2", "8", "."}, []string{".", ".", ".", "4", "1", "9", ".", ".", "5"}, []string{".", ".", ".", ".", "8", ".", ".", "7", "9"}}
	var solvedBoard [][]string = solveSudoku(board)
	var solved [][]string = [][]string{[]string{"5", "3", "4", "6", "7", "8", "9", "1", "2"}, []string{"6", "7", "2", "1", "9", "5", "3", "4", "8"}, []string{"1", "9", "8", "3", "4", "2", "5", "6", "7"}, []string{"8", "5", "9", "7", "6", "1", "4", "2", "3"}, []string{"4", "2", "6", "8", "5", "3", "7", "9", "1"}, []string{"7", "1", "3", "9", "2", "4", "8", "5", "6"}, []string{"9", "6", "1", "5", "3", "7", "2", "8", "4"}, []string{"2", "8", "7", "4", "1", "9", "6", "3", "5"}, []string{"3", "4", "5", "2", "8", "6", "1", "7", "9"}}
	solve()
}

