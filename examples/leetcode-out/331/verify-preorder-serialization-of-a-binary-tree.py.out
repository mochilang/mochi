# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def splitComma(s: str) -> list[str]:
	parts = []
	current = ""
	i = 0
	while (i < len(s)):
		c = s[i]
		if (c == ","):
			parts = (parts + [current])
			current = ""
		else:
			current = (current + c)
		i = (i + 1)
	parts = (parts + [current])
	return parts

def isValidSerialization(preorder: str) -> bool:
	nodes = splitComma(preorder)
	slots = 1
	i = 0
	while (i < len(nodes)):
		slots = (slots - 1)
		if (slots < 0):
			return False
		if (nodes[i] != "#"):
			slots = (slots + 2)
		i = (i + 1)
	return (slots == 0)

def example_1():
	assert (isValidSerialization("9,3,4,#,#,1,#,#,2,#,6,#,#") == True)

def example_2():
	assert (isValidSerialization("1,#") == False)

def example_3():
	assert (isValidSerialization("9,#,#,1") == False)

def empty_tree():
	assert (isValidSerialization("#") == True)

def main():
	example_1()
	example_2()
	example_3()
	empty_tree()

if __name__ == "__main__":
	main()
