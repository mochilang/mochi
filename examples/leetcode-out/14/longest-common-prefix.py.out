# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def longestCommonPrefix(strs: list[str]) -> str:
	if (len(strs) == 0):
		return ""
	prefix = strs[0]
	for i in range(1, len(strs)):
		j = 0
		current = strs[i]
		while ((j < len(prefix)) and (j < len(current))):
			if (prefix[j] != current[j]):
				break
			j = (j + 1)
		prefix = prefix[0:j]
		if (prefix == ""):
			break
	return prefix

def example_1():
	assert (longestCommonPrefix(["flower", "flow", "flight"]) == "fl")

def example_2():
	assert (longestCommonPrefix(["dog", "racecar", "car"]) == "")

def single_string():
	assert (longestCommonPrefix(["single"]) == "single")

def no_common_prefix():
	assert (longestCommonPrefix(["a", "b", "c"]) == "")

def main():
	example_1()
	example_2()
	single_string()
	no_common_prefix()

if __name__ == "__main__":
	main()
