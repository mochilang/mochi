package main

func expect(cond bool) {
	if !cond { panic("expect failed") }
}

func kthCharacter(k int) string {
	var word string = "a"
	_ = word
	var letters string = "abcdefghijklmnopqrstuvwxyz"
	var nextChar = func(ch string) string {
		for i := 0; i < 26; i++ {
			if (_indexString(letters, i) == ch) {
				if (i == (26 - 1)) {
					return "a"
				}
				return _indexString(letters, (i + 1))
			}
		}
		return ch
}
	for (len(word) < k) {
		var extra string = ""
		_ = extra
		for _, r := range []rune(word) {
			ch := string(r)
			extra = extra + nextChar(ch)
		}
		word = word + extra
	}
	return _indexString(word, (k - 1))
}

func example_1() {
	expect((kthCharacter(5) == "b"))
}

func example_2() {
	expect((kthCharacter(10) == "c"))
}

func k___1() {
	expect((kthCharacter(1) == "a"))
}

func k___50() {
	expect((kthCharacter(50) == "d"))
}

func main() {
	example_1()
	example_2()
	k___1()
	k___50()
}

func _indexString(s string, i int) string {
    runes := []rune(s)
    if i < 0 {
        i += len(runes)
    }
    if i < 0 || i >= len(runes) {
        panic("index out of range")
    }
    return string(runes[i])
}

