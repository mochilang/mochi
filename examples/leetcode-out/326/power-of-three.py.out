# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def isPowerOfThree(n: int) -> bool:
	if (n <= 0):
		return False
	value = n
	while ((value % 3) == 0):
		value = (value // 3)
	return (value == 1)

def example_1():
	assert (isPowerOfThree(27) == True)

def example_2():
	assert (isPowerOfThree(0) == False)

def example_3():
	assert (isPowerOfThree(9) == True)

def one_is_power():
	assert (isPowerOfThree(1) == True)

def negative():
	assert (isPowerOfThree((-3)) == False)

def not_power():
	assert (isPowerOfThree(45) == False)

def main():
	example_1()
	example_2()
	example_3()
	one_is_power()
	negative()
	not_power()

if __name__ == "__main__":
	main()
