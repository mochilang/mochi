# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def mergeKLists(lists: list[list[int]]) -> list[int]:
	k = len(lists)
	indices = []
	i = 0
	while (i < k):
		indices = (indices + [0])
		i = (i + 1)
	result = []
	while True:
		best = 0
		bestList = (-1)
		found = False
		j = 0
		while (j < k):
			idx = indices[j]
			if (idx < len(lists[j])):
				val = lists[j][idx]
				if ((not found) or (val < best)):
					best = val
					bestList = j
					found = True
			j = (j + 1)
		if (not found):
			break
		result = (result + [best])
		indices[bestList] = (indices[bestList] + 1)
	return result

def example_1():
	assert (mergeKLists([[1, 4, 5], [1, 3, 4], [2, 6]]) == [1, 1, 2, 3, 4, 4, 5, 6])

def example_2():
	assert (mergeKLists([]) == [])

def example_3():
	assert (mergeKLists([[]]) == [])

def main():
	example_1()
	example_2()
	example_3()

if __name__ == "__main__":
	main()
