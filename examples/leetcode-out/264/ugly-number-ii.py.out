# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def min3(a: int, b: int, c: int) -> int:
	m = a
	if (b < m):
		m = b
	if (c < m):
		m = c
	return m

def nthUglyNumber(n: int) -> int:
	i2 = 0
	i3 = 0
	i5 = 0
	uglies = [1]
	count = 1
	while (count < n):
		next2 = (uglies[i2] * 2)
		next3 = (uglies[i3] * 3)
		next5 = (uglies[i5] * 5)
		nextUgly = min3(next2, next3, next5)
		uglies = (uglies + [nextUgly])
		if (nextUgly == next2):
			i2 = (i2 + 1)
		if (nextUgly == next3):
			i3 = (i3 + 1)
		if (nextUgly == next5):
			i5 = (i5 + 1)
		count = (count + 1)
	return uglies[(n - 1)]

def example_1():
	assert (nthUglyNumber(10) == 12)

def example_2():
	assert (nthUglyNumber(1) == 1)

def example_3():
	assert (nthUglyNumber(3) == 3)

def larger_n():
	assert (nthUglyNumber(15) == 24)

def main():
	example_1()
	example_2()
	example_3()
	larger_n()

if __name__ == "__main__":
	main()
