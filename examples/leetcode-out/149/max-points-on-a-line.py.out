# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def maxPoints(points: list[list[int]]) -> int:
	n = len(points)
	if (n <= 2):
		return n
	answer = 0
	i = 0
	while (i < n):
		slopes = {}
		duplicates = 1
		j = (i + 1)
		while (j < n):
			dx = (points[j][0] - points[i][0])
			dy = (points[j][1] - points[i][1])
			if ((dx == 0) and (dy == 0)):
				duplicates = (duplicates + 1)
			else:
				g = gcd(dx, dy)
				sx = (dx // g)
				sy = (dy // g)
				if (sx == 0):
					sy = 1
				elif (sx < 0):
					sx = (-sx)
					sy = (-sy)
				key = ((str(sx) + "/") + str(sy))
				if (key in slopes):
					slopes[key] = (slopes[key] + 1)
				else:
					slopes[key] = 1
			j = (j + 1)
		localMax = 0
		for key in slopes:
			count = slopes[key]
			if (count > localMax):
				localMax = count
		if ((localMax + duplicates) > answer):
			answer = (localMax + duplicates)
		i = (i + 1)
	return answer

def abs(x: int) -> int:
	if (x < 0):
		return (-x)
	return x

def gcd(a: int, b: int) -> int:
	x = abs(a)
	y = abs(b)
	while (y != 0):
		temp = (x % y)
		x = y
		y = temp
	return x

def example_1():
	assert (maxPoints([[1, 1], [2, 2], [3, 3]]) == 3)

def example_2():
	assert (maxPoints([[1, 1], [3, 2], [5, 3], [4, 1], [2, 3], [1, 4]]) == 4)

def single_point():
	assert (maxPoints([[0, 0]]) == 1)

def main():
	example_1()
	example_2()
	single_point()

if __name__ == "__main__":
	main()
