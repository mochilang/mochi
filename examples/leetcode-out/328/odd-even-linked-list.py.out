# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def oddEvenList(nums: list[int]) -> list[int]:
	odd = []
	even = []
	i = 0
	n = len(nums)
	while (i < n):
		if (((i % 2)) == 0):
			odd = (odd + [nums[i]])
		else:
			even = (even + [nums[i]])
		i = (i + 1)
	return (odd + even)

def example_1():
	assert (oddEvenList([1, 2, 3, 4, 5]) == [1, 3, 5, 2, 4])

def example_2():
	assert (oddEvenList([2, 1, 3, 5, 6, 4, 7]) == [2, 3, 6, 7, 1, 5, 4])

def single_element():
	assert (oddEvenList([1]) == [1])

def empty_list():
	assert (oddEvenList([]) == [])

def main():
	example_1()
	example_2()
	single_element()
	empty_list()

if __name__ == "__main__":
	main()
