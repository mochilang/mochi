# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def grayCode(n: int) -> list[int]:
	result = [0]
	power = 1
	i = 0
	while (i < n):
		j = (len(result) - 1)
		while (j >= 0):
			result = (result + [(result[j] + power)])
			j = (j - 1)
		power = (power * 2)
		i = (i + 1)
	return result

def example_1():
	assert (grayCode(2) == [0, 1, 3, 2])

def example_2():
	assert (grayCode(1) == [0, 1])

def zero_bits():
	assert (grayCode(0) == [0])

def three_bits():
	assert (grayCode(3) == [0, 1, 3, 2, 6, 7, 5, 4])

def main():
	example_1()
	example_2()
	zero_bits()
	three_bits()

if __name__ == "__main__":
	main()
