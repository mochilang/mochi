# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def maxKilledEnemies(grid: list[list[str]]) -> int:
	m = len(grid)
	if (m == 0):
		return 0
	n = len(grid[0])
	result = 0
	colHits = []
	i = 0
	while (i < n):
		colHits = (colHits + [0])
		i = (i + 1)
	rowHits = 0
	r = 0
	while (r < m):
		c = 0
		while (c < n):
			if ((c == 0) or (grid[r][(c - 1)] == "W")):
				rowHits = 0
				k = c
				while (k < n):
					if (grid[r][k] == "W"):
						break
					if (grid[r][k] == "E"):
						rowHits = (rowHits + 1)
					k = (k + 1)
			if ((r == 0) or (grid[(r - 1)][c] == "W")):
				colHits[c] = 0
				k = r
				while (k < m):
					if (grid[k][c] == "W"):
						break
					if (grid[k][c] == "E"):
						colHits[c] = (colHits[c] + 1)
					k = (k + 1)
			if (grid[r][c] == "0"):
				total = (rowHits + colHits[c])
				if (total > result):
					result = total
			c = (c + 1)
		r = (r + 1)
	return result

def example_1():
	grid = [["0", "E", "0", "0"], ["E", "0", "W", "E"], ["0", "E", "0", "0"]]
	assert (maxKilledEnemies(grid) == 3)

def empty_grid():
	assert (maxKilledEnemies([]) == 0)

def all_walls():
	assert (maxKilledEnemies([["W", "W"], ["W", "W"]]) == 0)

def main():
	example_1()
	empty_grid()
	all_walls()

if __name__ == "__main__":
	main()
