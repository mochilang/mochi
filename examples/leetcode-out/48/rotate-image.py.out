# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def rotate(matrix: list[list[int]]) -> list[list[int]]:
	n = len(matrix)
	i = 0
	while (i < n):
		j = i
		while (j < n):
			temp = matrix[i][j]
			matrix[i][j] = matrix[j][i]
			matrix[j][i] = temp
			j = (j + 1)
		i = (i + 1)
	i = 0
	while (i < n):
		left = 0
		right = (n - 1)
		while (left < right):
			tmp = matrix[i][left]
			matrix[i][left] = matrix[i][right]
			matrix[i][right] = tmp
			left = (left + 1)
			right = (right - 1)
		i = (i + 1)
	return matrix

def example_1():
	m = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
	rotate(m)
	assert (m == [[7, 4, 1], [8, 5, 2], [9, 6, 3]])

def example_2():
	m = [[5, 1, 9, 11], [2, 4, 8, 10], [13, 3, 6, 7], [15, 14, 12, 16]]
	rotate(m)
	assert (m == [[15, 13, 2, 5], [14, 3, 4, 1], [12, 6, 8, 9], [16, 7, 10, 11]])

def single_element():
	m = [[1]]
	rotate(m)
	assert (m == [[1]])

def main():
	example_1()
	example_2()
	single_element()

if __name__ == "__main__":
	main()
