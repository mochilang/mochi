# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def findConsecutive(nums: list[int]) -> list[int]:
	n = len(nums)
	result = []
	i = 0
	while ((i + 2) < n):
		if ((nums[i] == nums[(i + 1)]) and (nums[(i + 1)] == nums[(i + 2)])):
			if (len(result) == 0):
				result = (result + [nums[i]])
			elif (result[(len(result) - 1)] != nums[i]):
				result = (result + [nums[i]])
		i = (i + 1)
	return result

def example():
	assert (str(findConsecutive([1, 1, 1, 2, 2, 2, 3])) == str([1, 2]))

def no_triples():
	assert (str(findConsecutive([1, 2, 3, 4])) == str([]))

def long_sequence():
	assert (str(findConsecutive([4, 4, 4, 4, 4])) == str([4]))

def main():
	example()
	no_triples()
	long_sequence()

if __name__ == "__main__":
	main()
