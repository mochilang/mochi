# Generated by Mochi Elixir compiler
defmodule Main do
	def swapPairs(nums) do
		try do
			i = 0
			_ = i
			result = []
			_ = result
			t1 = fn t1, i, result ->
				try do
					if (i < length(nums)) do
						if ((i + 1) < length(nums)) do
							result = result ++ [Enum.at(nums, (i + 1)), Enum.at(nums, i)]
						else
							result = result ++ [Enum.at(nums, i)]
						end
						i = (i + 2)
						t1.(t1, i, result)
					else
						{:ok, i, result}
					end
				catch :break ->
					{:ok, i, result}
				end
			end
			{_, i, result} = t1.(t1, i, result)
			_ = i
			_ = result
			throw {:return, result}
		catch {:return, v} -> v end
	end
	
	def main do
	end
	end
Main.main()
