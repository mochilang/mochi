# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def strStr(haystack: str, needle: str) -> int:
	n = len(haystack)
	m = len(needle)
	if (m == 0):
		return 0
	if (m > n):
		return (-1)
	for i in range(0, ((n - m) + 1)):
		j = 0
		while (j < m):
			if (haystack[(i + j)] != needle[j]):
				break
			j = (j + 1)
		if (j == m):
			return i
	return (-1)

def example_1():
	assert (strStr("sadbutsad", "sad") == 0)

def example_2():
	assert (strStr("leetcode", "leeto") == ((-1)))

def empty_needle():
	assert (strStr("abc", "") == 0)

def needle_at_end():
	assert (strStr("hello", "lo") == 3)

def main():
	example_1()
	example_2()
	empty_needle()
	needle_at_end()

if __name__ == "__main__":
	main()
