# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def robLinear(nums: list[int], start: int, end: int) -> int:
	prev1 = 0
	prev2 = 0
	i = start
	while (i <= end):
		pick = (nums[i] + prev2)
		curr = pick
		if (prev1 > curr):
			curr = prev1
		prev2 = prev1
		prev1 = curr
		i = (i + 1)
	return prev1

def rob(nums: list[int]) -> int:
	n = len(nums)
	if (n == 0):
		return 0
	if (n == 1):
		return nums[0]
	option1 = robLinear(nums, 0, (n - 2))
	option2 = robLinear(nums, 1, (n - 1))
	if (option1 > option2):
		return option1
	return option2

def example_1():
	assert (rob([2, 3, 2]) == 3)

def example_2():
	assert (rob([1, 2, 3, 1]) == 4)

def example_3():
	assert (rob([1, 2, 3]) == 3)

def single():
	assert (rob([5]) == 5)

def empty():
	assert (rob([]) == 0)

def main():
	example_1()
	example_2()
	example_3()
	single()
	empty()

if __name__ == "__main__":
	main()
