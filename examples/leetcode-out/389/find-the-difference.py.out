# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def findTheDifference(s: str, t: str) -> str:
	counts = {}
	i = 0
	while (i < len(s)):
		ch = s[i]
		if (ch in counts):
			counts[ch] = (counts[ch] + 1)
		else:
			counts[ch] = 1
		i = (i + 1)
	i = 0
	while (i < len(t)):
		ch = t[i]
		if (ch in counts):
			counts[ch] = (counts[ch] - 1)
		else:
			counts[ch] = (-1)
		i = (i + 1)
	for key in counts:
		if (counts[key] != 0):
			return key
	return ""

def example_1():
	assert (findTheDifference("abcd", "abcde") == "e")

def example_2():
	assert (findTheDifference("", "y") == "y")

def extra_repeated():
	assert (findTheDifference("aabb", "aabbb") == "b")

def extra_at_beginning():
	assert (findTheDifference("ae", "aea") == "a")

def main():
	example_1()
	example_2()
	extra_repeated()
	extra_at_beginning()

if __name__ == "__main__":
	main()
