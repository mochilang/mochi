# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def candy(ratings: list[int]) -> int:
	n = len(ratings)
	if (n == 0):
		return 0
	candies = []
	i = 0
	while (i < n):
		candies = (candies + [1])
		i = (i + 1)
	i = 1
	while (i < n):
		if (ratings[i] > ratings[(i - 1)]):
			candies[i] = (candies[(i - 1)] + 1)
		i = (i + 1)
	j = (n - 2)
	while (j >= 0):
		if ((ratings[j] > ratings[(j + 1)]) and (candies[j] <= candies[(j + 1)])):
			candies[j] = (candies[(j + 1)] + 1)
		j = (j - 1)
	total = 0
	for c in candies:
		total = (total + c)
	return total

def example_1():
	assert (candy([1, 0, 2]) == 5)

def example_2():
	assert (candy([1, 2, 2]) == 4)

def all_equal():
	assert (candy([1, 1, 1]) == 3)

def descending():
	assert (candy([5, 4, 3, 2, 1]) == 15)

def main():
	example_1()
	example_2()
	all_equal()
	descending()

if __name__ == "__main__":
	main()
