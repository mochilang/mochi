# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def hIndex(citations: list[int]) -> int:
	_sorted = [ c for c in sorted([ c for c in citations ], key=lambda c: (-c)) ]
	h = 0
	i = 0
	while (i < len(_sorted)):
		if (_sorted[i] >= (i + 1)):
			h = (i + 1)
		i = (i + 1)
	return h

def example_1():
	assert (hIndex([3, 0, 6, 1, 5]) == 3)

def example_2():
	assert (hIndex([1, 3, 1]) == 1)

def all_zeros():
	assert (hIndex([0, 0, 0]) == 0)

def all_high():
	assert (hIndex([10, 8, 5, 4, 3]) == 4)

def empty():
	assert (hIndex([]) == 0)

def main():
	example_1()
	example_2()
	all_zeros()
	all_high()
	empty()

if __name__ == "__main__":
	main()
