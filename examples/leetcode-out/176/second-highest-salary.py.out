# Generated by Mochi Python compiler
from __future__ import annotations

import dataclasses
import typing

def secondHighestSalary(employees: list[Employee]) -> int:
	if (len(employees) < 2):
		return 0
	firstEmp = employees[0]
	first = firstEmp.salary
	second = first
	i = 1
	while (i < len(employees)):
		emp = employees[i]
		s = emp.salary
		if (s > first):
			second = first
			first = s
		elif ((s != first) and (((second == first) or (s > second)))):
			second = s
		i = (i + 1)
	if (second == first):
		return 0
	return second

@dataclasses.dataclass
class Employee:
	id: int
	salary: int

employees = [Employee(id=1, salary=100), Employee(id=2, salary=200), Employee(id=3, salary=300), Employee(id=4, salary=200)]

def example():
	assert (secondHighestSalary(employees) == 200)

def no_second_salary():
	assert (secondHighestSalary([Employee(id=1, salary=100)]) == 0)

def duplicates():
	_list = [Employee(id=1, salary=100), Employee(id=2, salary=100), Employee(id=3, salary=100)]
	assert (secondHighestSalary(_list) == 0)

def main():
	employees = [Employee(id=1, salary=100), Employee(id=2, salary=200), Employee(id=3, salary=300), Employee(id=4, salary=200)]
	example()
	no_second_salary()
	duplicates()

if __name__ == "__main__":
	main()
