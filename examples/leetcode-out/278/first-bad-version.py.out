# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def firstBadVersion(n: int, isBadVersion: typing.Callable) -> int:
	low = 1
	high = n
	while (low < high):
		mid = (((low + high)) // 2)
		if isBadVersion(mid):
			high = mid
		else:
			low = (mid + 1)
	return low

def example_1():
	first = 4
	bad = (lambda v: (v >= first))
	assert (firstBadVersion(5, bad) == 4)

def example_2():
	first = 1
	bad = (lambda v: (v >= first))
	assert (firstBadVersion(1, bad) == 1)

def larger_n():
	first = 123
	bad = (lambda v: (v >= first))
	assert (firstBadVersion(200, bad) == 123)

def main():
	example_1()
	example_2()
	larger_n()

if __name__ == "__main__":
	main()
