# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def canCompleteCircuit(gas: list[int], cost: list[int]) -> int:
	n = len(gas)
	total = 0
	tank = 0
	start = 0
	i = 0
	while (i < n):
		total = ((total + gas[i]) - cost[i])
		tank = ((tank + gas[i]) - cost[i])
		if (tank < 0):
			start = (i + 1)
			tank = 0
		i = (i + 1)
	if (total >= 0):
		return start
	return (-1)

def example_1():
	assert (canCompleteCircuit([1, 2, 3, 4, 5], [3, 4, 5, 1, 2]) == 3)

def example_2():
	assert (canCompleteCircuit([2, 3, 4], [3, 4, 3]) == ((-1)))

def single_station():
	assert (canCompleteCircuit([5], [4]) == 0)

def main():
	example_1()
	example_2()
	single_station()

if __name__ == "__main__":
	main()
