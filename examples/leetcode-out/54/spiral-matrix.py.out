# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def spiralOrder(matrix: list[list[int]]) -> list[int]:
	rows = len(matrix)
	if (rows == 0):
		return []
	cols = len(matrix[0])
	top = 0
	bottom = (rows - 1)
	left = 0
	right = (cols - 1)
	result = []
	while ((top <= bottom) and (left <= right)):
		j = left
		while (j <= right):
			result = (result + [matrix[top][j]])
			j = (j + 1)
		top = (top + 1)
		j = top
		while (j <= bottom):
			result = (result + [matrix[j][right]])
			j = (j + 1)
		right = (right - 1)
		if (top <= bottom):
			j = right
			while (j >= left):
				result = (result + [matrix[bottom][j]])
				j = (j - 1)
			bottom = (bottom - 1)
		if (left <= right):
			j = bottom
			while (j >= top):
				result = (result + [matrix[j][left]])
				j = (j - 1)
			left = (left + 1)
	return result

def example_1():
	m = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
	assert (spiralOrder(m) == [1, 2, 3, 6, 9, 8, 7, 4, 5])

def example_2():
	m = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]]
	assert (spiralOrder(m) == [1, 2, 3, 4, 8, 12, 11, 10, 9, 5, 6, 7])

def single_row():
	m = [[1, 2, 3]]
	assert (spiralOrder(m) == [1, 2, 3])

def single_column():
	m = [[1], [2], [3]]
	assert (spiralOrder(m) == [1, 2, 3])

def empty():
	assert (spiralOrder([]) == [])

def main():
	example_1()
	example_2()
	single_row()
	single_column()
	empty()

if __name__ == "__main__":
	main()
