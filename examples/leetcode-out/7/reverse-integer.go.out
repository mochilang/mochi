package main

func expect(cond bool) {
	if !cond { panic("expect failed") }
}

func reverse(x int) int {
	var sign int = 1
	_ = sign
	var n int = x
	_ = n
	if (n < 0) {
		sign = -1
		n = -n
	}
	var rev int = 0
	_ = rev
	for (n != 0) {
		var digit int = (n % 10)
		rev = ((rev * 10) + digit)
		n = (n / 10)
	}
	rev = (rev * sign)
	if ((rev < ((-2147483647 - 1))) || (rev > 2147483647)) {
		return 0
	}
	return rev
}

func example_1() {
	expect((reverse(123) == 321))
}

func example_2() {
	expect((reverse(-123) == (-321)))
}

func example_3() {
	expect((reverse(120) == 21))
}

func overflow() {
	expect((reverse(1534236469) == 0))
}

func main() {
	example_1()
	example_2()
	example_3()
	overflow()
}

