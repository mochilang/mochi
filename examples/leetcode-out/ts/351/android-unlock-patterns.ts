// Generated by Mochi TypeScript compiler

function numberOfPatterns(m: number, n: number): number {
  let jump: Array<Array<number>> = [];
  (globalThis as any).jump = jump;
  let i: number = 0;
  (globalThis as any).i = i;
  while ((i < 10)) {
    let row: Array<number> = [];
    (globalThis as any).row = row;
    let j: number = 0;
    (globalThis as any).j = j;
    while ((j < 10)) {
      row = row.concat([0]);
      j = j + 1;
    }
    jump = jump.concat([row]);
    i = i + 1;
  }
  jump[1][3] = 2;
  jump[3][1] = 2;
  jump[1][7] = 4;
  jump[7][1] = 4;
  jump[3][9] = 6;
  jump[9][3] = 6;
  jump[7][9] = 8;
  jump[9][7] = 8;
  jump[1][9] = 5;
  jump[9][1] = 5;
  jump[3][7] = 5;
  jump[7][3] = 5;
  jump[4][6] = 5;
  jump[6][4] = 5;
  jump[2][8] = 5;
  jump[8][2] = 5;
  let visited: Array<boolean> = [];
  (globalThis as any).visited = visited;
  i = 0;
  while ((i < 10)) {
    visited = visited.concat([false]);
    i = i + 1;
  }
  function dfs(num: number, remain: number): number {
    if ((remain == 0)) {
      return 1;
    }
    visited[num] = true;
    let count: number = 0;
    (globalThis as any).count = count;
    for (let next: number = 1; next < 10; next++) {
      if ((!visited[next])) {
        let mid: number = jump[num][next];
        (globalThis as any).mid = mid;
        if (((mid == 0) || visited[mid])) {
          count = count + dfs(next, remain - 1);
        }
      }
    }
    visited[num] = false;
    return count;
  }
  let total: number = 0;
  (globalThis as any).total = total;
  let len: number = m;
  (globalThis as any).len = len;
  while ((len <= n)) {
    for (let start: number = 1; start < 10; start++) {
      total = total + dfs(start, len - 1);
    }
    len = len + 1;
  }
  return total;
}

function test_example_1(): void {
  if (!(numberOfPatterns(1, 1) == 9)) throw new Error("expect failed");
}

function test_example_2(): void {
  if (!(numberOfPatterns(1, 2) == 65)) throw new Error("expect failed");
}

function test_example_3(): void {
  if (!(numberOfPatterns(2, 2) == 56)) throw new Error("expect failed");
}

function main(): void {
  test_example_1();
  test_example_2();
  test_example_3();
}
main();
