// Generated by Mochi TypeScript compiler

function hammingWeight(n: number): number {
  let count: number = 0;
  let num: number = n;
  while (num > 0) {
    if (num % 2 == 1) {
      count = count + 1;
    }
    num = Math.trunc(num / 2);
  }
  return count;
}

function example_1(): void {
  if (!(hammingWeight(11) == 3)) {
    throw new Error("expect failed");
  }
}

function example_2(): void {
  if (!(hammingWeight(128) == 1)) {
    throw new Error("expect failed");
  }
}

function example_3(): void {
  if (!(hammingWeight(4294967293) == 31)) {
    throw new Error("expect failed");
  }
}

function zero(): void {
  if (!(hammingWeight(0) == 0)) {
    throw new Error("expect failed");
  }
}

function all_ones(): void {
  if (!(hammingWeight(4294967295) == 32)) {
    throw new Error("expect failed");
  }
}

function main(): void {
  example_1();
  example_2();
  example_3();
  zero();
  all_ones();
}
main();
