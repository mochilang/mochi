// Generated by Mochi TypeScript compiler

function isPowerOfTwo(n: number): boolean {
  if (n <= 0) {
    return false;
  }
  let num: number = n;
  while (num > 1) {
    if (num % 2 != 0) {
      return false;
    }
    num = Math.trunc(num / 2);
  }
  return true;
}

function example_1(): void {
  if (!(isPowerOfTwo(1) == true)) {
    throw new Error("expect failed");
  }
}

function example_2(): void {
  if (!(isPowerOfTwo(16) == true)) {
    throw new Error("expect failed");
  }
}

function example_3(): void {
  if (!(isPowerOfTwo(3) == false)) {
    throw new Error("expect failed");
  }
}

function zero(): void {
  if (!(isPowerOfTwo(0) == false)) {
    throw new Error("expect failed");
  }
}

function negative(): void {
  if (!(isPowerOfTwo(-2) == false)) {
    throw new Error("expect failed");
  }
}

function main(): void {
  example_1();
  example_2();
  example_3();
  zero();
  negative();
}
main();
