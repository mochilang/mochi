// Generated by Mochi TypeScript compiler

function canCompleteCircuit(gas: Array<number>, cost: Array<number>): number {
  let n: number = gas.length;
  let total: number = 0;
  let tank: number = 0;
  let start: number = 0;
  let i: number = 0;
  while (i < n) {
    total = total + gas[i] - cost[i];
    tank = tank + gas[i] - cost[i];
    if (tank < 0) {
      start = i + 1;
      tank = 0;
    }
    i = i + 1;
  }
  if (total >= 0) {
    return start;
  }
  return -1;
}

function example_1(): void {
  if (!(canCompleteCircuit([1, 2, 3, 4, 5], [3, 4, 5, 1, 2]) == 3)) {
    throw new Error("expect failed");
  }
}

function example_2(): void {
  if (!(canCompleteCircuit([2, 3, 4], [3, 4, 3]) == -1)) {
    throw new Error("expect failed");
  }
}

function single_station(): void {
  if (!(canCompleteCircuit([5], [4]) == 0)) {
    throw new Error("expect failed");
  }
}

function main(): void {
  example_1();
  example_2();
  single_station();
}
main();
