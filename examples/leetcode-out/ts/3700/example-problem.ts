// Generated by Mochi TypeScript compiler

function sumUnique(nums: Array<number>): number {
  let freq: Record<number, number> = {};
  (globalThis as any).freq = freq;
  let result: number = 0;
  (globalThis as any).result = result;
  for (const n of nums) {
    if (Object.prototype.hasOwnProperty.call(freq, String(n))) {
      freq[n] = freq[n] + 1;
      if ((freq[n] == 2)) {
        result = result - n;
      }
    } else {
      freq[n] = 1;
      result = result + n;
    }
  }
  return result;
}

function main(): void {
  console.log(sumUnique([
    1,
    2,
    3,
    2,
  ]));
  console.log(sumUnique([
    1,
    1,
    1,
    1,
    1,
  ]));
}
main();
