// Generated by Mochi TypeScript compiler

function combinationSum4(nums: Array<number>, target: number): number {
  let dp: Array<number> = [1];
  (globalThis as any).dp = dp;
  let t: number = 1;
  (globalThis as any).t = t;
  while ((t <= target)) {
    let count: number = 0;
    (globalThis as any).count = count;
    for (const num of nums) {
      if ((num <= t)) {
        count = count + dp[t - num];
      }
    }
    dp = dp.concat([count]);
    t = t + 1;
  }
  return dp[target];
}

function test_example_1(): void {
  if (
    !(combinationSum4([
      1,
      2,
      3,
    ], 4) == 7)
  ) throw new Error("expect failed");
}

function test_example_2(): void {
  if (!(combinationSum4([9], 3) == 0)) throw new Error("expect failed");
}

function main(): void {
  test_example_1();
  test_example_2();
}
main();
