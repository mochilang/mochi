// Generated by Mochi TypeScript compiler

function convertBelow1000(n: number) : string {
	let ones: Array<string> = ["", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine"]
	let teens: Array<string> = ["Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"]
	let tens: Array<string> = ["", "", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"]
	let words: string = ""
	let num: number = n
	if ((num >= 100)) {
		let hundred: number = Math.trunc(num / 100)
		words = words + ones[hundred] + " Hundred"
		num = (num % 100)
		if ((num > 0)) {
			words = words + " "
		}
	}
	if ((num >= 20)) {
		let t: number = Math.trunc(num / 10)
		words = words + tens[t]
		num = (num % 10)
		if ((num > 0)) {
			words = words + " " + ones[num]
		}
	} else 	if ((num >= 10)) {
		words = words + teens[(num - 10)]
	} else 	if ((num > 0)) {
		words = words + ones[num]
	}
	return words
}

function numberToWords(num: number) : string {
	if ((num == 0)) {
		return "Zero"
	}
	let groups: Array<string> = ["", "Thousand", "Million", "Billion"]
	let parts: Array<string> = []
	let n: number = num
	let i: number = 0
	while ((n > 0)) {
		let chunk: number = (n % 1000)
		if ((chunk > 0)) {
			let chunkWords: string = convertBelow1000(chunk)
			let part: string = chunkWords
			if ((groups[i] != "")) {
				part = part + " " + groups[i]
			}
			parts = [part].concat(parts)
		}
		n = Math.trunc(n / 1000)
		i = (i + 1)
	}
	let result: string = ""
	let j: number = 0
	while ((j < parts.length)) {
		result = result + parts[j]
		if ((j < (parts.length - 1))) {
			result = result + " "
		}
		j = (j + 1)
	}
	return result
}

function example_1(): void {
	if (!((numberToWords(123) == "One Hundred Twenty Three"))) { throw new Error('expect failed') }
}

function example_2(): void {
	if (!((numberToWords(12345) == "Twelve Thousand Three Hundred Forty Five"))) { throw new Error('expect failed') }
}

function example_3(): void {
	if (!((numberToWords(1234567) == "One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven"))) { throw new Error('expect failed') }
}

function zero(): void {
	if (!((numberToWords(0) == "Zero"))) { throw new Error('expect failed') }
}

function million_and_tens(): void {
	if (!((numberToWords(1000010) == "One Million Ten"))) { throw new Error('expect failed') }
}

function main(): void {
	example_1()
	example_2()
	example_3()
	zero()
	million_and_tens()
}
main()

