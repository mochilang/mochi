// Generated by Mochi TypeScript compiler

function maxProfit(prices: Array<number>) : number {
	if ((prices.length == 0)) {
		return 0
	}
	let minPrice: number = prices[0]
	let maxProfit: number = 0
	let i: number = 1
	while ((i < prices.length)) {
		let price: number = prices[i]
		if ((price < minPrice)) {
			minPrice = price
		} else {
			let profit: number = (price - minPrice)
			if ((profit > maxProfit)) {
				maxProfit = profit
			}
		}
		i = (i + 1)
	}
	return maxProfit
}

function example_1(): void {
	if (!((maxProfit([7, 1, 5, 3, 6, 4]) == 5))) { throw new Error('expect failed') }
}

function example_2(): void {
	if (!((maxProfit([7, 6, 4, 3, 1]) == 0))) { throw new Error('expect failed') }
}

function single_price(): void {
	if (!((maxProfit([5]) == 0))) { throw new Error('expect failed') }
}

function main(): void {
	example_1()
	example_2()
	single_price()
}
main()

