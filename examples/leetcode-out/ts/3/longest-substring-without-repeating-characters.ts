// Generated by Mochi TypeScript compiler

function lengthOfLongestSubstring(s: string): number {
  let n: number = s.length;
  let start: number = 0;
  let best: number = 0;
  let i: number = 0;
  while (i < n) {
    let j: number = start;
    while (j < i) {
      if (s[j] == s[i]) {
        start = j + 1;
        break;
      }
      j = j + 1;
    }
    let length: number = i - start + 1;
    if (length > best) {
      best = length;
    }
    i = i + 1;
  }
  return best;
}

function example_1(): void {
  if (!(lengthOfLongestSubstring("abcabcbb") == 3)) {
    throw new Error("expect failed");
  }
}

function example_2(): void {
  if (!(lengthOfLongestSubstring("bbbbb") == 1)) {
    throw new Error("expect failed");
  }
}

function example_3(): void {
  if (!(lengthOfLongestSubstring("pwwkew") == 3)) {
    throw new Error("expect failed");
  }
}

function empty_string(): void {
  if (!(lengthOfLongestSubstring("") == 0)) {
    throw new Error("expect failed");
  }
}

function main(): void {
  example_1();
  example_2();
  example_3();
  empty_string();
}
main();
