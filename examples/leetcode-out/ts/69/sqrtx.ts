// Generated by Mochi TypeScript compiler

function mySqrt(x: number): number {
  if (x < 2) {
    return x;
  }
  let left: number = 1;
  let right: number = Math.trunc(x / 2);
  let ans: number = 0;
  while (left <= right) {
    let mid: number = left + Math.trunc((right - left) / 2);
    let sq: number = mid * mid;
    if (sq == x) {
      return mid;
    } else if (sq < x) {
      left = mid + 1;
      ans = mid;
    } else {
      right = mid - 1;
    }
  }
  return ans;
}

function example_1(): void {
  if (!(mySqrt(4) == 2)) {
    throw new Error("expect failed");
  }
}

function example_2(): void {
  if (!(mySqrt(8) == 2)) {
    throw new Error("expect failed");
  }
}

function zero(): void {
  if (!(mySqrt(0) == 0)) {
    throw new Error("expect failed");
  }
}

function large(): void {
  if (!(mySqrt(2147395599) == 46339)) {
    throw new Error("expect failed");
  }
}

function main(): void {
  example_1();
  example_2();
  zero();
  large();
}
main();
