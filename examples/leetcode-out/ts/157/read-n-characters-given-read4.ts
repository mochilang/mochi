// Generated by Mochi TypeScript compiler

function readFrom(src: string, n: number) : string {
	let pos: number = 0
	function read4(buf: Array<string>) : number {
		let count: number = 0
		let i: number = 0
		while (((i < 4) && (pos < src.length))) {
			buf[i] = src[pos]
			i = (i + 1)
			pos = (pos + 1)
			count = (count + 1)
		}
		return count
	}
	let buf4: Array<string> = ["", "", "", ""]
	let result: string = ""
	let total: number = 0
	while ((total < n)) {
		let count: number = read4(buf4)
		let i: number = 0
		while (((i < count) && (total < n))) {
			result = result + buf4[i]
			total = (total + 1)
			i = (i + 1)
		}
		if ((count < 4)) {
			break
		}
	}
	return result
}

function read_less_than_file(): void {
	if (!((readFrom("leetcode", 5) == "leetc"))) { throw new Error('expect failed') }
}

function read_exact(): void {
	if (!((readFrom("mochi", 5) == "mochi"))) { throw new Error('expect failed') }
}

function read_beyond_end(): void {
	if (!((readFrom("hi", 5) == "hi"))) { throw new Error('expect failed') }
}

function main(): void {
	read_less_than_file()
	read_exact()
	read_beyond_end()
}
main()

