// Generated by Mochi TypeScript compiler

type Person = {
  personId: number;
  firstName: string;
  lastName: string;
};

type Address = {
  addressId: number;
  personId: number;
  city: string;
  state: string;
};

type Result = {
  firstName: string;
  lastName: string;
  city: string;
  state: string;
};

function combineTables(
  persons: Array<Person>,
  addresses: Array<Address>,
): Array<Result> {
  let results: Array<Result> = [];
  (globalThis as any).results = results;
  for (const p of persons) {
    let found: boolean = false;
    (globalThis as any).found = found;
    for (const a of addresses) {
      if ((a.personId == p.personId)) {
        results = results.concat([
          {
            firstName: p.firstName,
            lastName: p.lastName,
            city: a.city,
            state: a.state,
          },
        ]);
        found = true;
        break;
      }
    }
    if ((!found)) {
      results = results.concat([
        {
          firstName: p.firstName,
          lastName: p.lastName,
          city: "",
          state: "",
        },
      ]);
    }
  }
  return results;
}

function test_combine_tables(): void {
  let expected: Array<Result> = [
    {
      firstName: "Wang",
      lastName: "Allen",
      city: "",
      state: "",
    },
    {
      firstName: "Alice",
      lastName: "Bob",
      city: "New York City",
      state: "New York",
    },
    {
      firstName: "Bob",
      lastName: "Brown",
      city: "Leetcode",
      state: "California",
    },
  ];
  (globalThis as any).expected = expected;
  if (!(String(combineTables(person, address)) == String(expected))) {
    throw new Error("expect failed");
  }
}

function main(): void {
  let person: Array<Person> = [
    {
      personId: 1,
      firstName: "Wang",
      lastName: "Allen",
    },
    {
      personId: 2,
      firstName: "Alice",
      lastName: "Bob",
    },
    {
      personId: 3,
      firstName: "Bob",
      lastName: "Brown",
    },
  ];
  (globalThis as any).person = person;
  let address: Array<Address> = [
    {
      addressId: 1,
      personId: 2,
      city: "New York City",
      state: "New York",
    },
    {
      addressId: 2,
      personId: 3,
      city: "Leetcode",
      state: "California",
    },
  ];
  (globalThis as any).address = address;
  test_combine_tables();
}
main();
