// Generated by Mochi TypeScript compiler

function isSubsequence(s: string, t: string): boolean {
  let n: number = s.length;
  let m: number = t.length;
  let i: number = 0;
  let j: number = 0;
  while (i < n && j < m) {
    if (s[i] == t[j]) {
      i = i + 1;
    }
    j = j + 1;
  }
  return i == n;
}

function example_1(): void {
  if (!(isSubsequence("abc", "ahbgdc") == true)) {
    throw new Error("expect failed");
  }
}

function example_2(): void {
  if (!(isSubsequence("axc", "ahbgdc") == false)) {
    throw new Error("expect failed");
  }
}

function empty_s(): void {
  if (!(isSubsequence("", "ahbgdc") == true)) {
    throw new Error("expect failed");
  }
}

function empty_t(): void {
  if (!(isSubsequence("a", "") == false)) {
    throw new Error("expect failed");
  }
}

function both_empty(): void {
  if (!(isSubsequence("", "") == true)) {
    throw new Error("expect failed");
  }
}

function main(): void {
  example_1();
  example_2();
  empty_s();
  empty_t();
  both_empty();
}
main();
