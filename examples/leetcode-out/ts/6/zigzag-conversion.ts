// Generated by Mochi TypeScript compiler

function convert(s: string, numRows: number) : string {
	if (((numRows <= 1) || (numRows >= s.length))) {
		return s
	}
	let rows: Array<any> = []
	let i: number = 0
	while ((i < numRows)) {
		rows = rows.concat([""])
		i = (i + 1)
	}
	let curr: number = 0
	let step: number = 1
	for (const ch of s) {
		rows[curr] = (rows[curr] + ch)
		if ((curr == 0)) {
			step = 1
		} else 		if ((curr == (numRows - 1))) {
			step = (-1)
		}
		curr = (curr + step)
	}
	let result: string = ""
	for (const row of rows) {
		result = (result + row)
	}
	return result
}

function example_1(): void {
	if (!((convert("PAYPALISHIRING", 3) == "PAHNAPLSIIGYIR"))) { throw new Error('expect failed') }
}

function example_2(): void {
	if (!((convert("PAYPALISHIRING", 4) == "PINALSIGYAHRPI"))) { throw new Error('expect failed') }
}

function single_row(): void {
	if (!((convert("A", 1) == "A"))) { throw new Error('expect failed') }
}

function main(): void {
	example_1()
	example_2()
	single_row()
}
main()

