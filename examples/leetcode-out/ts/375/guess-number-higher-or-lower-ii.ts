// Generated by Mochi TypeScript compiler

function max(a: number, b: number): number {
  if ((a > b)) {
    return a;
  }
  return b;
}

function getMoneyAmount(n: number): number {
  let dp: Array<Array<number>> = [];
  (globalThis as any).dp = dp;
  let i: number = 0;
  (globalThis as any).i = i;
  while ((i <= n)) {
    let row: Array<number> = [];
    (globalThis as any).row = row;
    let j: number = 0;
    (globalThis as any).j = j;
    while ((j <= n)) {
      row = row.concat([0]);
      j = j + 1;
    }
    dp = dp.concat([row]);
    i = i + 1;
  }
  let len: number = 2;
  (globalThis as any).len = len;
  while ((len <= n)) {
    let start: number = 1;
    (globalThis as any).start = start;
    while ((start <= ((n - len) + 1))) {
      let end: number = (start + len) - 1;
      (globalThis as any).end = end;
      let best: number = n * n;
      (globalThis as any).best = best;
      let guess: number = start;
      (globalThis as any).guess = guess;
      while ((guess <= end)) {
        let left: number = 0;
        (globalThis as any).left = left;
        if (((guess - 1) >= start)) {
          left = dp[start][guess - 1];
        }
        let right: number = 0;
        (globalThis as any).right = right;
        if (((guess + 1) <= end)) {
          right = dp[guess + 1][end];
        }
        let cost: number = guess;
        (globalThis as any).cost = cost;
        if ((left > right)) {
          cost = cost + left;
        } else {
          cost = cost + right;
        }
        if ((cost < best)) {
          best = cost;
        }
        guess = guess + 1;
      }
      dp[start][end] = best;
      start = start + 1;
    }
    len = len + 1;
  }
  return dp[1][n];
}

function test_example_1(): void {
  if (!(getMoneyAmount(10) == 16)) throw new Error("expect failed");
}

function test_example_2(): void {
  if (!(getMoneyAmount(1) == 0)) throw new Error("expect failed");
}

function test_example_3(): void {
  if (!(getMoneyAmount(2) == 1)) throw new Error("expect failed");
}

function test_n_equals_3(): void {
  if (!(getMoneyAmount(3) == 2)) throw new Error("expect failed");
}

function main(): void {
  test_example_1();
  test_example_2();
  test_example_3();
  test_n_equals_3();
}
main();
