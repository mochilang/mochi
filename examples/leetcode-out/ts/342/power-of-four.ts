// Generated by Mochi TypeScript compiler

function isPowerOfFour(n: number): boolean {
  if ((n <= 0)) {
    return false;
  }
  let x: number = n;
  (globalThis as any).x = x;
  while (((x % 4) == 0)) {
    x = Math.trunc(x / 4);
  }
  return (x == 1);
}

function test_example_1(): void {
  if (!(isPowerOfFour(16) == true)) throw new Error("expect failed");
}

function test_example_2(): void {
  if (!(isPowerOfFour(5) == false)) throw new Error("expect failed");
}

function test_power_of_two_but_not_four(): void {
  if (!(isPowerOfFour(8) == false)) throw new Error("expect failed");
}

function test_largest_power_of_four_within_32_bit(): void {
  if (!(isPowerOfFour(1073741824) == true)) throw new Error("expect failed");
}

function main(): void {
  test_example_1();
  test_example_2();
  test_power_of_two_but_not_four();
  test_largest_power_of_four_within_32_bit();
}
main();
