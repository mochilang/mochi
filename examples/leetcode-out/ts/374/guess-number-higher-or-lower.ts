// Generated by Mochi TypeScript compiler

function guessNumber(n: number, pick: number): number {
  let low: number = 1;
  (globalThis as any).low = low;
  let high: number = n;
  (globalThis as any).high = high;
  while ((low <= high)) {
    let mid: number = Math.trunc((low + high) / 2);
    (globalThis as any).mid = mid;
    if ((mid == pick)) {
      return mid;
    } else if ((mid > pick)) {
      high = mid - 1;
    } else {
      low = mid + 1;
    }
  }
  return (-1);
}

function test_example_1(): void {
  if (!(guessNumber(10, 6) == 6)) throw new Error("expect failed");
}

function test_example_2(): void {
  if (!(guessNumber(1, 1) == 1)) throw new Error("expect failed");
}

function test_first_number(): void {
  if (!(guessNumber(5, 1) == 1)) throw new Error("expect failed");
}

function test_last_number(): void {
  if (!(guessNumber(5, 5) == 5)) throw new Error("expect failed");
}

function main(): void {
  test_example_1();
  test_example_2();
  test_first_number();
  test_last_number();
}
main();
