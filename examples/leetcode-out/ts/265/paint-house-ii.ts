// Generated by Mochi TypeScript compiler

function minCostII(costs: Array<Array<number>>) : number {
	let n: number = costs.length
	if ((n == 0)) {
		return 0
	}
	let k: number = costs[0].length
	let prevMin: number = 0
	let prevSecond: number = 0
	let prevColor: number = (-1)
	let i: number = 0
	while ((i < n)) {
		let currMin: number = 2147483647
		let currSecond: number = 2147483647
		let currColor: number = (-1)
		let j: number = 0
		while ((j < k)) {
			let cost: number = costs[i][j]
			if ((j == prevColor)) {
				cost = (cost + prevSecond)
			} else {
				cost = (cost + prevMin)
			}
			if ((cost < currMin)) {
				currSecond = currMin
				currMin = cost
				currColor = j
			} else 			if ((cost < currSecond)) {
				currSecond = cost
			}
			j = (j + 1)
		}
		prevMin = currMin
		prevSecond = currSecond
		prevColor = currColor
		i = (i + 1)
	}
	return prevMin
}

function example_1(): void {
	if (!((minCostII([[1, 5, 3], [2, 9, 4]]) == 5))) { throw new Error('expect failed') }
}

function example_2(): void {
	if (!((minCostII([[1, 3], [2, 4]]) == 5))) { throw new Error('expect failed') }
}

function single_house(): void {
	if (!((minCostII([[8, 6, 5]]) == 5))) { throw new Error('expect failed') }
}

function main(): void {
	example_1()
	example_2()
	single_house()
}
main()

