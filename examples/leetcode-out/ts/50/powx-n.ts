// Generated by Mochi TypeScript compiler

function myPow(x: number, n: number) : number {
	if ((n == 0)) {
		return 1
	}
	if ((n < 0)) {
		return (1 / myPow(x, (-n)))
	}
	let base: number = x
	let exp: number = n
	let result: number = 1
	while ((exp > 0)) {
		if (((exp % 2) == 1)) {
			result = (result * base)
		}
		base = (base * base)
		exp = Math.trunc(exp / 2)
	}
	return result
}

function example_1(): void {
	if (!((myPow(2, 10) == 1024))) { throw new Error('expect failed') }
}

function example_2(): void {
	if (!((myPow(2.1, 3) == 9.261000000000001))) { throw new Error('expect failed') }
}

function example_3(): void {
	if (!((myPow(2, (-2)) == 0.25))) { throw new Error('expect failed') }
}

function main(): void {
	example_1()
	example_2()
	example_3()
}
main()

