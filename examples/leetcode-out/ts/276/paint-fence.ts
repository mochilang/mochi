// Generated by Mochi TypeScript compiler

function numWays(n: number, k: number): number {
  if (n == 0 || k == 0) {
    return 0;
  }
  if (n == 1) {
    return k;
  }
  let same: number = 0;
  let diff: number = k;
  let i: number = 2;
  while (i <= n) {
    let prevDiff: number = diff;
    diff = (same + diff) * (k - 1);
    same = prevDiff;
    i = i + 1;
  }
  return same + diff;
}

function example_1(): void {
  if (!(numWays(3, 2) == 6)) {
    throw new Error("expect failed");
  }
}

function example_2(): void {
  if (!(numWays(1, 1) == 1)) {
    throw new Error("expect failed");
  }
}

function no_posts(): void {
  if (!(numWays(0, 5) == 0)) {
    throw new Error("expect failed");
  }
}

function one_color(): void {
  if (!(numWays(3, 1) == 0)) {
    throw new Error("expect failed");
  }
}

function main(): void {
  example_1();
  example_2();
  no_posts();
  one_color();
}
main();
