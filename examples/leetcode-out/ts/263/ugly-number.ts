// Generated by Mochi TypeScript compiler

function isUgly(n: number): boolean {
  if ((n <= 0)) {
    return false;
  }
  let num: number = n;
  (globalThis as any).num = num;
  while (((num % 2) == 0)) {
    num = Math.trunc(num / 2);
  }
  while (((num % 3) == 0)) {
    num = Math.trunc(num / 3);
  }
  while (((num % 5) == 0)) {
    num = Math.trunc(num / 5);
  }
  return (num == 1);
}

function test_example_1(): void {
  if (!(isUgly(6) == true)) throw new Error("expect failed");
}

function test_example_2(): void {
  if (!(isUgly(1) == true)) throw new Error("expect failed");
}

function test_example_3(): void {
  if (!(isUgly(14) == false)) throw new Error("expect failed");
}

function test_zero(): void {
  if (!(isUgly(0) == false)) throw new Error("expect failed");
}

function test_negative(): void {
  if (!(isUgly(-6) == false)) throw new Error("expect failed");
}

function main(): void {
  test_example_1();
  test_example_2();
  test_example_3();
  test_zero();
  test_negative();
}
main();
