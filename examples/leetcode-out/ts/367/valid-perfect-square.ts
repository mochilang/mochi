// Generated by Mochi TypeScript compiler

function isPerfectSquare(num: number): boolean {
  if ((num < 1)) {
    return false;
  }
  let left: number = 1;
  (globalThis as any).left = left;
  let right: number = num;
  (globalThis as any).right = right;
  while ((left <= right)) {
    let mid: number = Math.trunc((left + right) / 2);
    (globalThis as any).mid = mid;
    let square: number = mid * mid;
    (globalThis as any).square = square;
    if ((square == num)) {
      return true;
    } else if ((square < num)) {
      left = mid + 1;
    } else {
      right = mid - 1;
    }
  }
  return false;
}

function test_example_1(): void {
  if (!(isPerfectSquare(16) == true)) throw new Error("expect failed");
}

function test_example_2(): void {
  if (!(isPerfectSquare(14) == false)) throw new Error("expect failed");
}

function test_one(): void {
  if (!(isPerfectSquare(1) == true)) throw new Error("expect failed");
}

function test_large_non_square(): void {
  if (!(isPerfectSquare(2147483647) == false)) throw new Error("expect failed");
}

function main(): void {
  test_example_1();
  test_example_2();
  test_one();
  test_large_non_square();
}
main();
