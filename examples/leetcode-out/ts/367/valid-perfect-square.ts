// Generated by Mochi TypeScript compiler

function isPerfectSquare(num: number): boolean {
  if (num < 1) {
    return false;
  }
  let left: number = 1;
  let right: number = num;
  while (left <= right) {
    let mid: number = Math.trunc((left + right) / 2);
    let square: number = mid * mid;
    if (square == num) {
      return true;
    } else if (square < num) {
      left = mid + 1;
    } else {
      right = mid - 1;
    }
  }
  return false;
}

function example_1(): void {
  if (!(isPerfectSquare(16) == true)) {
    throw new Error("expect failed");
  }
}

function example_2(): void {
  if (!(isPerfectSquare(14) == false)) {
    throw new Error("expect failed");
  }
}

function one(): void {
  if (!(isPerfectSquare(1) == true)) {
    throw new Error("expect failed");
  }
}

function large_non_square(): void {
  if (!(isPerfectSquare(2147483647) == false)) {
    throw new Error("expect failed");
  }
}

function main(): void {
  example_1();
  example_2();
  one();
  large_non_square();
}
main();
