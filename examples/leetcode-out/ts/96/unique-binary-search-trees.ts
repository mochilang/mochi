// Generated by Mochi TypeScript compiler

function numTrees(n: number): number {
  let dp: Array<number> = [];
  (globalThis as any).dp = dp;
  let i: number = 0;
  (globalThis as any).i = i;
  while ((i <= n)) {
    dp = dp.concat([0]);
    i = i + 1;
  }
  dp[0] = 1;
  if ((n >= 1)) {
    dp[1] = 1;
  }
  i = 2;
  while ((i <= n)) {
    let j: number = 1;
    (globalThis as any).j = j;
    while ((j <= i)) {
      dp[i] = dp[i] + (dp[j - 1] * dp[i - j]);
      j = j + 1;
    }
    i = i + 1;
  }
  return dp[n];
}

function test_example_1(): void {
  if (!(numTrees(3) == 5)) throw new Error("expect failed");
}

function test_example_2(): void {
  if (!(numTrees(1) == 1)) throw new Error("expect failed");
}

function test_n___2(): void {
  if (!(numTrees(2) == 2)) throw new Error("expect failed");
}

function test_n___5(): void {
  if (!(numTrees(5) == 42)) throw new Error("expect failed");
}

function main(): void {
  test_example_1();
  test_example_2();
  test_n___2();
  test_n___5();
}
main();
