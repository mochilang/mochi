// Generated by Mochi TypeScript compiler

function climbStairs(n: number): number {
  if ((n <= 2)) {
    return n;
  }
  let first: number = 1;
  (globalThis as any).first = first;
  let second: number = 2;
  (globalThis as any).second = second;
  let i: number = 3;
  (globalThis as any).i = i;
  while ((i <= n)) {
    let next: number = first + second;
    (globalThis as any).next = next;
    first = second;
    second = next;
    i = i + 1;
  }
  return second;
}

function test_example_1(): void {
  if (!(climbStairs(2) == 2)) throw new Error("expect failed");
}

function test_example_2(): void {
  if (!(climbStairs(3) == 3)) throw new Error("expect failed");
}

function test_n___4(): void {
  if (!(climbStairs(4) == 5)) throw new Error("expect failed");
}

function test_n___5(): void {
  if (!(climbStairs(5) == 8)) throw new Error("expect failed");
}

function main(): void {
  test_example_1();
  test_example_2();
  test_n___4();
  test_n___5();
}
main();
