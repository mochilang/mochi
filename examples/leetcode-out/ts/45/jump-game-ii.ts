// Generated by Mochi TypeScript compiler

function jump(nums: Array<number>): number {
  let n: number = nums.length;
  let jumps: number = 0;
  let end: number = 0;
  let farthest: number = 0;
  for (let i: number = 0; i < n; i++) {
    if (i > farthest) {
      return -1;
    }
    if (i + nums[i] > farthest) {
      farthest = i + nums[i];
    }
    if (i == end && i != n - 1) {
      jumps = jumps + 1;
      end = farthest;
    }
  }
  return jumps;
}

function example_1(): void {
  if (!(jump([2, 3, 1, 1, 4]) == 2)) {
    throw new Error("expect failed");
  }
}

function example_2(): void {
  if (!(jump([2, 3, 0, 1, 4]) == 2)) {
    throw new Error("expect failed");
  }
}

function single_element(): void {
  if (!(jump([0]) == 0)) {
    throw new Error("expect failed");
  }
}

function two_elements(): void {
  if (!(jump([1, 2]) == 1)) {
    throw new Error("expect failed");
  }
}

function main(): void {
  example_1();
  example_2();
  single_element();
  two_elements();
}
main();
