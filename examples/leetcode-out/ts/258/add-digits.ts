// Generated by Mochi TypeScript compiler

function addDigits(num: number): number {
  let n: number = num;
  (globalThis as any).n = n;
  while ((n >= 10)) {
    let sum: number = 0;
    (globalThis as any).sum = sum;
    while ((n > 0)) {
      sum = sum + (n % 10);
      n = Math.trunc(n / 10);
    }
    n = sum;
  }
  return n;
}

function test_example_1(): void {
  if (!(addDigits(38) == 2)) throw new Error("expect failed");
}

function test_example_2(): void {
  if (!(addDigits(0) == 0)) throw new Error("expect failed");
}

function test_example_3(): void {
  if (!(addDigits(99) == 9)) throw new Error("expect failed");
}

function test_single_digit(): void {
  if (!(addDigits(7) == 7)) throw new Error("expect failed");
}

function test_large_number(): void {
  if (!(addDigits(123456) == 3)) throw new Error("expect failed");
}

function main(): void {
  test_example_1();
  test_example_2();
  test_example_3();
  test_single_digit();
  test_large_number();
}
main();
