// Generated by Mochi TypeScript compiler

function lastRemaining(n: number): number {
  let head: number = 1;
  let step: number = 1;
  let remaining: number = n;
  let left: boolean = true;
  while (remaining > 1) {
    if (left || remaining % 2 == 1) {
      head = head + step;
    }
    remaining = Math.trunc(remaining / 2);
    step = step * 2;
    left = !left;
  }
  return head;
}

function example_1(): void {
  if (!(lastRemaining(9) == 6)) {
    throw new Error("expect failed");
  }
}

function example_2(): void {
  if (!(lastRemaining(1) == 1)) {
    throw new Error("expect failed");
  }
}

function even_n(): void {
  if (!(lastRemaining(2) == 2)) {
    throw new Error("expect failed");
  }
}

function larger_n(): void {
  if (!(lastRemaining(1000000) == 481110)) {
    throw new Error("expect failed");
  }
}

function main(): void {
  example_1();
  example_2();
  even_n();
  larger_n();
}
main();
