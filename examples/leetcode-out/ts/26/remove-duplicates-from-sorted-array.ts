// Generated by Mochi TypeScript compiler

function removeDuplicates(nums: Array<number>): number {
  if ((nums.length == 0)) {
    return 0;
  }
  let count: number = 1;
  (globalThis as any).count = count;
  let prev: number = nums[0];
  (globalThis as any).prev = prev;
  let i: number = 1;
  (globalThis as any).i = i;
  while ((i < nums.length)) {
    let cur: number = nums[i];
    (globalThis as any).cur = cur;
    if ((cur != prev)) {
      count = count + 1;
      prev = cur;
    }
    i = i + 1;
  }
  return count;
}

function test_example_1(): void {
  if (
    !(removeDuplicates([
      1,
      1,
      2,
    ]) == 2)
  ) throw new Error("expect failed");
}

function test_example_2(): void {
  if (
    !(removeDuplicates([
      0,
      0,
      1,
      1,
      1,
      2,
      2,
      3,
      3,
      4,
    ]) == 5)
  ) throw new Error("expect failed");
}

function test_empty(): void {
  if (!(removeDuplicates([]) == 0)) throw new Error("expect failed");
}

function main(): void {
  test_example_1();
  test_example_2();
  test_empty();
}
main();
