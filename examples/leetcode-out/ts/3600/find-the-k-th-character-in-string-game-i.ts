// Generated by Mochi TypeScript compiler

function kthCharacter(k: number): string {
  let word: string = "a";
  (globalThis as any).word = word;
  let letters: string = "abcdefghijklmnopqrstuvwxyz";
  (globalThis as any).letters = letters;
  function nextChar(ch: string): string {
    for (let i: number = 0; i < letters.length; i++) {
      if ((_indexString(letters, i) == ch)) {
        if ((i == (letters.length - 1))) {
          return "a";
        }
        return _indexString(letters, i + 1);
      }
    }
    return ch;
  }
  while ((word.length < k)) {
    let extra: string = "";
    (globalThis as any).extra = extra;
    for (const ch of word) {
      extra = extra + nextChar(ch);
    }
    word = word + extra;
  }
  return _indexString(word, k - 1);
}

function test_example_1(): void {
  if (!(kthCharacter(5) == "b")) throw new Error("expect failed");
}

function test_example_2(): void {
  if (!(kthCharacter(10) == "c")) throw new Error("expect failed");
}

function test_k___1(): void {
  if (!(kthCharacter(1) == "a")) throw new Error("expect failed");
}

function test_k___50(): void {
  if (!(kthCharacter(50) == "d")) throw new Error("expect failed");
}

function main(): void {
  test_example_1();
  test_example_2();
  test_k___1();
  test_k___50();
}
function _indexString(s: string, i: number): string {
  const runes = Array.from(s);
  if (i < 0) i += runes.length;
  if (i < 0 || i >= runes.length) throw new Error("index out of range");
  return runes[i];
}

main();
