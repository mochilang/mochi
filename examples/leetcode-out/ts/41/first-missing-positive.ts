// Generated by Mochi TypeScript compiler

function firstMissingPositive(nums: Array<number>) : number {
	let seen: Record<number, boolean> = {}
	for (const n of nums) {
		if ((n > 0)) {
			seen[n] = true
		}
	}
	let i: number = 1
	while (true) {
		if ((!(Object.prototype.hasOwnProperty.call(seen, String(i))))) {
			return i
		}
		i = (i + 1)
	}
}

function example_1(): void {
	if (!((firstMissingPositive([1, 2, 0]) == 3))) { throw new Error('expect failed') }
}

function example_2(): void {
	if (!((firstMissingPositive([3, 4, (-1), 1]) == 2))) { throw new Error('expect failed') }
}

function example_3(): void {
	if (!((firstMissingPositive([7, 8, 9, 11, 12]) == 1))) { throw new Error('expect failed') }
}

function main(): void {
	example_1()
	example_2()
	example_3()
}
main()

