// Generated by Mochi TypeScript compiler

function getModifiedArray(
  n: number,
  updates: Array<Array<number>>,
): Array<number> {
  let diff: Array<number> = [];
  (globalThis as any).diff = diff;
  let i: number = 0;
  (globalThis as any).i = i;
  while ((i < n)) {
    diff = diff.concat([0]);
    i = i + 1;
  }
  let m: number = updates.length;
  (globalThis as any).m = m;
  let j: number = 0;
  (globalThis as any).j = j;
  while ((j < m)) {
    let u: Array<number> = updates[j];
    (globalThis as any).u = u;
    let start: number = u[0];
    (globalThis as any).start = start;
    let end: number = u[1];
    (globalThis as any).end = end;
    let inc: number = u[2];
    (globalThis as any).inc = inc;
    diff[start] = diff[start] + inc;
    if (((end + 1) < n)) {
      diff[end + 1] = diff[end + 1] - inc;
    }
    j = j + 1;
  }
  let result: Array<number> = [];
  (globalThis as any).result = result;
  let sum: number = 0;
  (globalThis as any).sum = sum;
  let k: number = 0;
  (globalThis as any).k = k;
  while ((k < n)) {
    sum = sum + diff[k];
    result = result.concat([sum]);
    k = k + 1;
  }
  return result;
}

function test_example_1(): void {
  if (!(res1[0] == (-2))) throw new Error("expect failed");
  if (!(res1[1] == 0)) throw new Error("expect failed");
  if (!(res1[2] == 3)) throw new Error("expect failed");
  if (!(res1[3] == 5)) throw new Error("expect failed");
  if (!(res1[4] == 3)) throw new Error("expect failed");
}

function test_no_updates(): void {
  if (!(res2[0] == 0)) throw new Error("expect failed");
  if (!(res2[1] == 0)) throw new Error("expect failed");
  if (!(res2[2] == 0)) throw new Error("expect failed");
}

function main(): void {
  let updates1: Array<Array<number>> = [
    [
      1,
      3,
      2,
    ],
    [
      2,
      4,
      3,
    ],
    [
      0,
      2,
      -2,
    ],
  ];
  (globalThis as any).updates1 = updates1;
  let res1: Array<number> = getModifiedArray(5, updates1);
  (globalThis as any).res1 = res1;
  let res2: Array<number> = getModifiedArray(3, []);
  (globalThis as any).res2 = res2;
  test_example_1();
  test_no_updates();
}
main();
