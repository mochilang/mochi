// Generated by Mochi TypeScript compiler

function maxAreaAlt(height: Array<number>) : number {
	let left: number = 0
	let right: number = (height.length - 1)
	let best: number = 0
	while ((left < right)) {
		let h: number = height[left]
		if ((height[right] < h)) {
			h = height[right]
		}
		let area: number = (h * ((right - left)))
		if ((area > best)) {
			best = area
		}
		if ((height[left] < height[right])) {
			left = (left + 1)
		} else {
			right = (right - 1)
		}
	}
	return best
}

function example_1(): void {
	if (!((maxAreaAlt([1, 8, 6, 2, 5, 4, 8, 3, 7]) == 49))) { throw new Error('expect failed') }
}

function example_2(): void {
	if (!((maxAreaAlt([1, 1]) == 1))) { throw new Error('expect failed') }
}

function decreasing_heights(): void {
	if (!((maxAreaAlt([4, 3, 2, 1, 4]) == 16))) { throw new Error('expect failed') }
}

function short_array(): void {
	if (!((maxAreaAlt([1, 2, 1]) == 2))) { throw new Error('expect failed') }
}

function main(): void {
	example_1()
	example_2()
	decreasing_heights()
	short_array()
}
main()

