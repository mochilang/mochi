# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def rotateRight(nums: list[int], k: int) -> list[int]:
	n = len(nums)
	if (n == 0):
		return nums
	r = (k % n)
	if (r == 0):
		return nums
	result = []
	i = 0
	while (i < n):
		idx = ((((n - r) + i)) % n)
		result = (result + [nums[idx]])
		i = (i + 1)
	return result

def example_1():
	assert (rotateRight([1, 2, 3, 4, 5], 2) == [4, 5, 1, 2, 3])

def example_2():
	assert (rotateRight([0, 1, 2], 4) == [2, 0, 1])

def k_is_zero():
	assert (rotateRight([1, 2, 3], 0) == [1, 2, 3])

def empty_list():
	assert (rotateRight([], 5) == [])

def main():
	example_1()
	example_2()
	k_is_zero()
	empty_list()

if __name__ == "__main__":
	main()
