// Generated by Mochi C++ compiler
#include <bits/stdc++.h>
using namespace std;

int removeDuplicates(vector<int> nums) {
  if (nums.size() == 0) {
    return 0;
  }
  auto count = 1;
  auto prev = nums[0];
  auto i = 1;
  while (i < nums.size()) {
    auto cur = nums[i];
    if (cur != prev) {
      count = count + 1;
      prev = cur;
    }
    i = i + 1;
  }
  return count;
}

int main() {
  auto test_example_1 = [&]() {
    if (!(removeDuplicates(vector<int>{1, 1, 2}) == 2)) {
      std::cerr << "expect failed\n";
      exit(1);
    }
  };
  test_example_1();
  auto test_example_2 = [&]() {
    if (!(removeDuplicates(vector<int>{0, 0, 1, 1, 1, 2, 2, 3, 3, 4}) == 5)) {
      std::cerr << "expect failed\n";
      exit(1);
    }
  };
  test_example_2();
  auto test_empty = [&]() {
    if (!(removeDuplicates(vector<int>{}) == 0)) {
      std::cerr << "expect failed\n";
      exit(1);
    }
  };
  test_empty();
  return 0;
}
