// Generated by Mochi C++ compiler
#include <bits/stdc++.h>
using namespace std;

int reverse(int x) {
  auto sign = 1;
  auto n = x;
  if (n < 0) {
    sign = -1;
    n = -n;
  }
  auto rev = 0;
  while (n != 0) {
    auto digit = n % 10;
    rev = rev * 10 + digit;
    n = n / 10;
  }
  rev = rev * sign;
  if (rev < (-2147483647 - 1) || rev > 2147483647) {
    return 0;
  }
  return rev;
}

int main() {
  auto test_example_1 = [&]() {
    if (!(reverse(123) == 321)) {
      std::cerr << "expect failed\n";
      exit(1);
    }
  };
  test_example_1();
  auto test_example_2 = [&]() {
    if (!(reverse(-123) == (-321))) {
      std::cerr << "expect failed\n";
      exit(1);
    }
  };
  test_example_2();
  auto test_example_3 = [&]() {
    if (!(reverse(120) == 21)) {
      std::cerr << "expect failed\n";
      exit(1);
    }
  };
  test_example_3();
  auto test_overflow = [&]() {
    if (!(reverse(1534236469) == 0)) {
      std::cerr << "expect failed\n";
      exit(1);
    }
  };
  test_overflow();
  return 0;
}
