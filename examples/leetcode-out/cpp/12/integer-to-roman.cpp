// Generated by Mochi C++ compiler
#include <bits/stdc++.h>
using namespace std;

string intToRoman(int num) {
  auto values =
      vector<int>{1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};
  auto symbols = vector<string>{
      string("M"),  string("CM"), string("D"),  string("CD"), string("C"),
      string("XC"), string("L"),  string("XL"), string("X"),  string("IX"),
      string("V"),  string("IV"), string("I")};
  auto result = string("");
  auto i = 0;
  while (num > 0) {
    while (num >= values[i]) {
      result = result + symbols[i];
      num = num - values[i];
    }
    i = i + 1;
  }
  return result;
}

int main() {
  auto test_example_1 = [&]() {
    if (!(intToRoman(3) == string("III"))) {
      std::cerr << "expect failed\n";
      exit(1);
    }
  };
  test_example_1();
  auto test_example_2 = [&]() {
    if (!(intToRoman(58) == string("LVIII"))) {
      std::cerr << "expect failed\n";
      exit(1);
    }
  };
  test_example_2();
  auto test_example_3 = [&]() {
    if (!(intToRoman(1994) == string("MCMXCIV"))) {
      std::cerr << "expect failed\n";
      exit(1);
    }
  };
  test_example_3();
  auto test_small_numbers = [&]() {
    if (!(intToRoman(4) == string("IV"))) {
      std::cerr << "expect failed\n";
      exit(1);
    }
    if (!(intToRoman(9) == string("IX"))) {
      std::cerr << "expect failed\n";
      exit(1);
    }
  };
  test_small_numbers();
  return 0;
}
