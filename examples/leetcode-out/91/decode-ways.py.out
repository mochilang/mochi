# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def numDecodings(s: str) -> int:
	n = len(s)
	if (n == 0):
		return 0
	digits = {"0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9}
	dp = []
	i = 0
	while (i <= n):
		dp = (dp + [0])
		i = (i + 1)
	dp[0] = 1
	if (s[0] != "0"):
		dp[1] = 1
	idx = 2
	while (idx <= n):
		one = s[(idx - 1)]
		if (one != "0"):
			dp[idx] = (dp[idx] + dp[(idx - 1)])
		d1 = digits[s[(idx - 2)]]
		d2 = digits[s[(idx - 1)]]
		val = ((d1 * 10) + d2)
		if ((val >= 10) and (val <= 26)):
			dp[idx] = (dp[idx] + dp[(idx - 2)])
		idx = (idx + 1)
	return dp[n]

def example_1():
	assert (numDecodings("12") == 2)

def example_2():
	assert (numDecodings("226") == 3)

def example_3():
	assert (numDecodings("06") == 0)

def single_zero():
	assert (numDecodings("0") == 0)

def _101():
	assert (numDecodings("2101") == 1)

def main():
	example_1()
	example_2()
	example_3()
	single_zero()
	_101()

if __name__ == "__main__":
	main()
