# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def isIsomorphic(s: str, t: str) -> bool:
	m = len(s)
	if (m != len(t)):
		return False
	mapST = {}
	mapTS = {}
	i = 0
	while (i < m):
		c1 = s[i]
		c2 = t[i]
		if (c1 in mapST):
			if (mapST[c1] != c2):
				return False
		else:
			if (c2 in mapTS):
				return False
			mapST[c1] = c2
			mapTS[c2] = c1
		i = (i + 1)
	return True

def example_1():
	assert (isIsomorphic("egg", "add") == True)

def example_2():
	assert (isIsomorphic("foo", "bar") == False)

def example_3():
	assert (isIsomorphic("paper", "title") == True)

def single_letter():
	assert (isIsomorphic("a", "b") == True)

def mismatch_length():
	assert (isIsomorphic("ab", "a") == False)

def main():
	example_1()
	example_2()
	example_3()
	single_letter()
	mismatch_length()

if __name__ == "__main__":
	main()
