# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def missingNumber(nums: list[int]) -> int:
	n = len(nums)
	sum = 0
	for num in nums:
		sum = (sum + num)
	expected = ((n * ((n + 1))) // 2)
	return (expected - sum)

def example_1():
	assert (missingNumber([3, 0, 1]) == 2)

def example_2():
	assert (missingNumber([0, 1]) == 2)

def example_3():
	assert (missingNumber([9, 6, 4, 2, 3, 5, 7, 0, 1]) == 8)

def single_zero():
	assert (missingNumber([0]) == 1)

def already_ordered():
	assert (missingNumber([0, 2, 1, 4, 5, 6, 7, 8, 9]) == 3)

def main():
	example_1()
	example_2()
	example_3()
	single_zero()
	already_ordered()

if __name__ == "__main__":
	main()
