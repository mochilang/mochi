// Generated by Mochi TypeScript compiler

function maxCoins(nums: Array<number>) : number {
	let arr: Array<number> = [1]
	arr = arr.concat(nums)
	arr = arr.concat([1])
	let n: number = arr.length
	let dp: Array<any> = []
	let i: number = 0
	while ((i < n)) {
		let row: Array<any> = []
		let j: number = 0
		while ((j < n)) {
			row = row.concat([0])
			j = (j + 1)
		}
		dp = dp.concat([row])
		i = (i + 1)
	}
	let length: number = 2
	while ((length < n)) {
		let left: number = 0
		while (((left + length) < n)) {
			let right: number = (left + length)
			let k: number = (left + 1)
			while ((k < right)) {
				let coins: any = ((((arr[left] * arr[k]) * arr[right]) + (dp[left] as any)[k]) + (dp[k] as any)[right])
				if ((coins > (dp[left] as any)[right])) {
					dp[left][right] = coins
				}
				k = (k + 1)
			}
			left = (left + 1)
		}
		length = (length + 1)
	}
	return (dp[0] as any)[(n - 1)]
}

function example_1(): void {
	if (!((maxCoins([3, 1, 5, 8]) == 167))) { throw new Error('expect failed') }
}

function example_2(): void {
	if (!((maxCoins([1, 5]) == 10))) { throw new Error('expect failed') }
}

function main(): void {
	example_1()
	example_2()
}
main()

