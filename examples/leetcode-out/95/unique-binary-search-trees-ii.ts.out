// Generated by Mochi TypeScript compiler

let trees: Array<any> = generateTrees(3)

function build(start: number, end: number) : Array<any> {
	if ((start > end)) {
		return [{}]
	}
	let result: Array<any> = []
	for (let i: number = start; i < (end + 1); i++) {
		let leftTrees: Array<any> = build(start, (i - 1))
		let rightTrees: Array<any> = build((i + 1), end)
		for (const l of leftTrees) {
			for (const r of rightTrees) {
				result = result.concat([{left: l, val: i, right: r}])
			}
		}
	}
	return result
}

function generateTrees(n: number) : Array<any> {
	if ((n == 0)) {
		return []
	}
	return build(1, n)
}

function main(): void {
	type Tree = {
	}
	console.log(trees.length)
}
main()

