// Generated by Mochi TypeScript compiler

function findDuplicateEmails(emails: Array<string>) : Array<string> {
	let counts: Record<string, number> = {}
	for (const e of emails) {
		let c: number = 0
		if (Object.prototype.hasOwnProperty.call(counts, String(e))) {
			c = counts[e]
		}
		counts[e] = (c + 1)
	}
	let result: Array<any> = []
	for (const e of emails) {
		if ((counts[e] > 1)) {
			let exists: boolean = false
			for (const r of result) {
				if (_equal(r, e)) {
					exists = true
					break
				}
			}
			if ((!exists)) {
				result = result.concat([e])
			}
		}
	}
	return result
}

function example_duplicates(): void {
	let emails: Array<string> = ["a@x.com", "b@y.com", "a@x.com"]
	if (!(_equal(findDuplicateEmails(emails), ["a@x.com"]))) { throw new Error('expect failed') }
}

function multiple_duplicates(): void {
	let emails: Array<string> = ["a@x.com", "b@y.com", "a@x.com", "b@y.com", "c@z.com", "a@x.com"]
	if (!(_equal(findDuplicateEmails(emails), ["a@x.com", "b@y.com"]))) { throw new Error('expect failed') }
}

function no_duplicates(): void {
	if (!(_equal(findDuplicateEmails(["a@x.com", "b@y.com"]), []))) { throw new Error('expect failed') }
}

function empty_list(): void {
	if (!(_equal(findDuplicateEmails([]), []))) { throw new Error('expect failed') }
}

function main(): void {
	example_duplicates()
	multiple_duplicates()
	no_duplicates()
	empty_list()
}
function _equal(a: any, b: any): boolean {
  if (Array.isArray(a) && Array.isArray(b)) {
    if (a.length !== b.length) return false;
    for (let i = 0; i < a.length; i++) { if (!_equal(a[i], b[i])) return false; }
    return true;
  }
  if (a && b && typeof a === 'object' && typeof b === 'object') {
    const ak = Object.keys(a); const bk = Object.keys(b);
    if (ak.length !== bk.length) return false;
    for (const k of ak) { if (!bk.includes(k) || !_equal((a as any)[k], (b as any)[k])) return false; }
    return true;
  }
  return a === b;
}

main()

