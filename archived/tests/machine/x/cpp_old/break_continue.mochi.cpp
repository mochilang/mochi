// Generated by the Mochi experimental C++ compiler
#include <bits/stdc++.h>
using namespace std;

template<typename T, typename=void> struct has_size : false_type {};
template<typename T> struct has_size<T, void_t<decltype(declval<T>().size()), decltype(declval<T>()[0])>> : true_type {};
template<typename T, typename=void> struct has_key_type : false_type {};
template<typename T> struct has_key_type<T, void_t<typename T::key_type>> : true_type {};

int main() {
	auto numbers = vector<int>{1, 2, 3, 4, 5, 6, 7, 8, 9};
	for(auto n : numbers) {
		if(((n % 2) == 0)) {
						continue;
		}		
		if((n > 7)) {
						break;
		}		
		([&](){ cout << std::string("odd number:") << n << endl; })();
	}
	return 0;
}
