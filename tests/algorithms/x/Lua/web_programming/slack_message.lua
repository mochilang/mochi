-- Generated by Mochi v0.10.61 on 2025-08-08 17:12 GMT+7
function input()
  local line = io.read('*l')
  if line == nil then return '' end
  return line
end
local _nil = {}

local _now_seed = 0
local _now_seeded = false
do
  local s = os.getenv("MOCHI_NOW_SEED")
  if s and s ~= "" then
    local v = tonumber(s)
    if v then
      _now_seed = v
      _now_seeded = true
    end
  end
end
local function _now()
if _now_seeded then
  -- keep the seed within safe integer range for Lua (53 bits)
  _now_seed = (_now_seed * 1664525 + 1013904223) % 9007199254740991
  return _now_seed % 1000000000
end
return os.time() * 1000000000 + math.floor(os.clock() * 1000000000)
end

local function _fetch(url)
local p = io.popen('curl -fsSL ' .. url)
if not p then return '' end
local out = p:read('*a') or ''
p:close()
local title = string.match(out, '"title"%s*:%s*"([^"]+)"')
if title then return {title = title} end
return out
end
do
  collectgarbage()
  local _bench_start_mem = collectgarbage('count') * 1024
  local _bench_start = os.clock()
  function send_slack_message(message_body, slack_url)
    local headers = {__name = "GenType1", __order = {"Content-Type"}, ["Content-Type"] = "application/json"}
    local response = _fetch(slack_url)
    if (response ~= "ok") then
      error(("Request to slack returned an error: " .. response))
    end
    return response
  end
  url = "https://httpbin.org/post"
  send_slack_message("Hello from Mochi", url)
  print("Message sent")
  local _bench_end = os.clock()
  collectgarbage()
  local _bench_end_mem = collectgarbage('count') * 1024
  local _bench_duration_us = math.floor((_bench_end - _bench_start) * 1000000)
  local _bench_mem = math.floor(math.max(0, _bench_end_mem - _bench_start_mem))
  print('{\n  "duration_us": ' .. _bench_duration_us .. ',\n  "memory_bytes": ' .. _bench_mem .. ',\n  "name": "main"\n}')
end;
