-- Generated by Mochi v0.10.61 on 2025-08-08 19:00 GMT+7
function input()
  local line = io.read('*l')
  if line == nil then return '' end
  return line
end
local _nil = {}

local _now_seed = 0
local _now_seeded = false
do
  local s = os.getenv("MOCHI_NOW_SEED")
  if s and s ~= "" then
    local v = tonumber(s)
    if v then
      _now_seed = v
      _now_seeded = true
    end
  end
end
local function _now()
if _now_seeded then
  -- keep the seed within safe integer range for Lua (53 bits)
  _now_seed = (_now_seed * 1664525 + 1013904223) % 9007199254740991
  return _now_seed % 1000000000
end
return os.time() * 1000000000 + math.floor(os.clock() * 1000000000)
end
do
  collectgarbage()
  local _bench_start_mem = collectgarbage('count') * 1024
  local _bench_start = os.clock()
  function int_pow(base, exp)
    local result = 1
    local i = 0
    while (i < exp) do
      result = (result * base)
      i = (i + 1)
    end
    return result
  end
  function backtrack(target, exp, current, current_sum)
    if (current_sum == target) then
      return 1
    end
    local p = int_pow(current, exp)
    local count = 0
    if ((current_sum + p) <= target) then
      count = (count + backtrack(target, exp, (current + 1), (current_sum + p)))
    end
    if (p < target) then
      count = (count + backtrack(target, exp, (current + 1), current_sum))
    end
    return count
  end
  function solve(target, exp)
    if (not ((((1 <= target) and (target <= 1000)) and (2 <= exp)) and (exp <= 10))) then
      print("Invalid input")
      return 0
    end
    return backtrack(target, exp, 1, 0)
  end
  print(solve(13, 2))
  print(solve(10, 2))
  print(solve(10, 3))
  local _bench_end = os.clock()
  collectgarbage()
  local _bench_end_mem = collectgarbage('count') * 1024
  local _bench_duration_us = math.floor((_bench_end - _bench_start) * 1000000)
  local _bench_mem = math.floor(math.max(0, _bench_end_mem - _bench_start_mem))
  print('{\n  "duration_us": ' .. _bench_duration_us .. ',\n  "memory_bytes": ' .. _bench_mem .. ',\n  "name": "main"\n}')
end;
