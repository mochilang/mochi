-- Generated by Mochi v0.10.60 on 2025-08-07 14:57 GMT+7
function input()
  local line = io.read('*l')
  if line == nil then return '' end
  return line
end
local _nil = {}

local _now_seed = 0
local _now_seeded = false
do
  local s = os.getenv("MOCHI_NOW_SEED")
  if s and s ~= "" then
    local v = tonumber(s)
    if v then
      _now_seed = v
      _now_seeded = true
    end
  end
end
local function _now()
if _now_seeded then
  -- keep the seed within safe integer range for Lua (53 bits)
  _now_seed = (_now_seed * 1664525 + 1013904223) % 9007199254740991
  return _now_seed % 1000000000
end
return os.time() * 1000000000 + math.floor(os.clock() * 1000000000)
end
do
  collectgarbage()
  local _bench_start_mem = collectgarbage('count') * 1024
  local _bench_start = os.clock()
  function intSqrt(n)
    if (n == 0) then
      return 0
    end
    local x = n
    local y = ((x + 1) // 2)
    while (y < x) do
      x = y
      y = ((x + (n // x)) // 2)
    end
    return x
  end
  function continuousFractionPeriod(n)
    local m = 0
    local d = 1
    local a0 = intSqrt(n)
    local a = a0
    local period = 0
    while (a ~= (2 * a0)) do
      m = ((d * a) - m)
      d = ((n - (m * m)) // d)
      a = ((a0 + m) // d)
      period = (period + 1)
    end
    return period
  end
  function solution(n)
    local count = 0
    for i = 2, (n + 1) - 1 do
      local r = intSqrt(i)
      if ((r * r) ~= i) then
        local p = continuousFractionPeriod(i)
        if ((p % 2) == 1) then
          count = (count + 1)
        end
      end
    end
    return count
  end
  function main()
    local nStr = input()
    local n = math.floor(tonumber(nStr) or 0)
    print(solution(n))
  end
  main()
  local _bench_end = os.clock()
  collectgarbage()
  local _bench_end_mem = collectgarbage('count') * 1024
  local _bench_duration_us = math.floor((_bench_end - _bench_start) * 1000000)
  local _bench_mem = math.floor(math.max(0, _bench_end_mem - _bench_start_mem))
  print('{\n  "duration_us": ' .. _bench_duration_us .. ',\n  "memory_bytes": ' .. _bench_mem .. ',\n  "name": "main"\n}')
end;
