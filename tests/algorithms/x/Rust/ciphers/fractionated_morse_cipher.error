warning: unnecessary trailing semicolon
  --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:67:2
   |
67 | };
   |  ^ help: remove this semicolon
   |
   = note: `#[warn(redundant_semicolons)]` on by default

warning: unnecessary trailing semicolon
   --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:103:2
    |
103 | };
    |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
   --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:173:2
    |
173 | };
    |  ^ help: remove this semicolon

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:54:11
   |
54 |     while (i < (plaintext.len() as i64)) {
   |           ^                            ^
   |
   = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
   |
54 -     while (i < (plaintext.len() as i64)) {
54 +     while i < (plaintext.len() as i64) {
   |

warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:60:12
   |
60 |         if (i > 0) {
   |            ^     ^
   |
help: remove these parentheses
   |
60 -         if (i > 0) {
60 +         if i > 0 {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:64:13
   |
64 |         i = (i + 1);
   |             ^     ^
   |
help: remove these parentheses
   |
64 -         i = (i + 1);
64 +         i = i + 1;
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:73:11
   |
73 |     while (i < (combinedKey.len() as i64)) {
   |           ^                              ^
   |
help: remove these parentheses
   |
73 -     while (i < (combinedKey.len() as i64)) {
73 +     while i < (combinedKey.len() as i64) {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:78:13
   |
78 |         i = (i + 1);
   |             ^     ^
   |
help: remove these parentheses
   |
78 -         i = (i + 1);
78 +         i = i + 1;
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:80:34
   |
80 |     let mut paddingLength: i64 = (3 - ((morseCode.len() as i64) % 3));
   |                                  ^                                  ^
   |
help: remove these parentheses
   |
80 -     let mut paddingLength: i64 = (3 - ((morseCode.len() as i64) % 3));
80 +     let mut paddingLength: i64 = 3 - ((morseCode.len() as i64) % 3);
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:82:11
   |
82 |     while (p < paddingLength) {
   |           ^                 ^
   |
help: remove these parentheses
   |
82 -     while (p < paddingLength) {
82 +     while p < paddingLength {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:84:13
   |
84 |         p = (p + 1);
   |             ^     ^
   |
help: remove these parentheses
   |
84 -         p = (p + 1);
84 +         p = p + 1;
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:88:11
   |
88 |     while (j < 26) {
   |           ^      ^
   |
help: remove these parentheses
   |
88 -     while (j < 26) {
88 +     while j < 26 {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:92:13
   |
92 |         j = (j + 1);
   |             ^     ^
   |
help: remove these parentheses
   |
92 -         j = (j + 1);
92 +         j = j + 1;
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:97:11
   |
97 |     while (k < (morseCode.len() as i64)) {
   |           ^                            ^
   |
help: remove these parentheses
   |
97 -     while (k < (morseCode.len() as i64)) {
97 +     while k < (morseCode.len() as i64) {
   |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:100:13
    |
100 |         k = (k + 3);
    |             ^     ^
    |
help: remove these parentheses
    |
100 -         k = (k + 3);
100 +         k = k + 3;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:108:11
    |
108 |     while (i < (combinedKey.len() as i64)) {
    |           ^                              ^
    |
help: remove these parentheses
    |
108 -     while (i < (combinedKey.len() as i64)) {
108 +     while i < (combinedKey.len() as i64) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:113:13
    |
113 |         i = (i + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
113 -         i = (i + 1);
113 +         i = i + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:117:11
    |
117 |     while (j < 26) {
    |           ^      ^
    |
help: remove these parentheses
    |
117 -     while (j < 26) {
117 +     while j < 26 {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:120:13
    |
120 |         j = (j + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
120 -         j = (j + 1);
120 +         j = j + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:124:11
    |
124 |     while (k < (ciphertext.len() as i64)) {
    |           ^                             ^
    |
help: remove these parentheses
    |
124 -     while (k < (ciphertext.len() as i64)) {
124 +     while k < (ciphertext.len() as i64) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:129:13
    |
129 |         k = (k + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
129 -         k = (k + 1);
129 +         k = k + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:134:11
    |
134 |     while (m < (morse.len() as i64)) {
    |           ^                        ^
    |
help: remove these parentheses
    |
134 -     while (m < (morse.len() as i64)) {
134 +     while m < (morse.len() as i64) {
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:136:12
    |
136 |         if (ch.as_str() == "x") {
    |            ^                  ^
    |
help: remove these parentheses
    |
136 -         if (ch.as_str() == "x") {
136 +         if ch.as_str() == "x" {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:142:13
    |
142 |         m = (m + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
142 -         m = (m + 1);
142 +         m = m + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:147:11
    |
147 |     while (idx < (codes.len() as i64)) {
    |           ^                          ^
    |
help: remove these parentheses
    |
147 -     while (idx < (codes.len() as i64)) {
147 +     while idx < (codes.len() as i64) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:150:15
    |
150 |         idx = (idx + 1);
    |               ^       ^
    |
help: remove these parentheses
    |
150 -         idx = (idx + 1);
150 +         idx = idx + 1;
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:154:12
    |
154 |         if (start < (decrypted.len() as i64)) {
    |            ^                                ^
    |
help: remove these parentheses
    |
154 -         if (start < (decrypted.len() as i64)) {
154 +         if start < (decrypted.len() as i64) {
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:155:16
    |
155 |             if (decrypted.chars().skip(start as usize).take(((start + 1) - start) as usize).collect::<String>().as_str() == " ") {
    |                ^                                                                                                               ^
    |
help: remove these parentheses
    |
155 -             if (decrypted.chars().skip(start as usize).take(((start + 1) - start) as usize).collect::<String>().as_str() == " ") {
155 +             if decrypted.chars().skip(start as usize).take(((start + 1) - start) as usize).collect::<String>().as_str() == " " {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:156:25
    |
156 |                 start = (start + 1);
    |                         ^         ^
    |
help: remove these parentheses
    |
156 -                 start = (start + 1);
156 +                 start = start + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:162:19
    |
162 |     let mut end = (decrypted.len() as i64);
    |                   ^                      ^
    |
help: remove these parentheses
    |
162 -     let mut end = (decrypted.len() as i64);
162 +     let mut end = decrypted.len() as i64;
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:164:12
    |
164 |         if (end > start) {
    |            ^           ^
    |
help: remove these parentheses
    |
164 -         if (end > start) {
164 +         if end > start {
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:165:16
    |
165 |             if (decrypted.chars().skip((end - 1) as usize).take((end - (end - 1)) as usize).collect::<String>().as_str() == " ") {
    |                ^                                                                                                               ^
    |
help: remove these parentheses
    |
165 -             if (decrypted.chars().skip((end - 1) as usize).take((end - (end - 1)) as usize).collect::<String>().as_str() == " ") {
165 +             if decrypted.chars().skip((end - 1) as usize).take((end - (end - 1)) as usize).collect::<String>().as_str() == " " {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:166:23
    |
166 |                 end = (end - 1);
    |                       ^       ^
    |
help: remove these parentheses
    |
166 -                 end = (end - 1);
166 +                 end = end - 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:180:32
    |
180 |         let duration_us: i64 = ((_end - _start) / 1000);
    |                                ^                      ^
    |
help: remove these parentheses
    |
180 -         let duration_us: i64 = ((_end - _start) / 1000);
180 +         let duration_us: i64 = (_end - _start) / 1000;
    |

error[E0277]: the trait bound `String: Pattern` is not satisfied
  --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:75:31
   |
75 |         if !dedupKey.contains(ch) {
   |                      -------- ^^ the trait `Pattern` is not implemented for `String`
   |                      |
   |                      required by a bound introduced by this call
   |
   = note: required for `String` to implement `Pattern`
note: required by a bound in `core::str::<impl str>::contains`
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/str/mod.rs:1320:5
help: consider borrowing here
   |
75 |         if !dedupKey.contains(&ch) {
   |                               +

error[E0308]: mismatched types
  --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:94:38
   |
94 |     dict.insert(String::from("xxx"), "");
   |          ------                      ^^- help: try using a conversion method: `.to_string()`
   |          |                           |
   |          |                           expected `String`, found `&str`
   |          arguments to this method are incorrect
   |
help: the return type of this call is `&'static str` due to the type of the argument passed
  --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:94:5
   |
94 |     dict.insert(String::from("xxx"), "");
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^--^
   |                                      |
   |                                      this argument influences the return type of `insert`
note: method defined here
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/std/src/collections/hash/map.rs:1201:12

error[E0277]: the trait bound `String: Pattern` is not satisfied
   --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:110:31
    |
110 |         if !dedupKey.contains(ch) {
    |                      -------- ^^ the trait `Pattern` is not implemented for `String`
    |                      |
    |                      required by a bound introduced by this call
    |
    = note: required for `String` to implement `Pattern`
note: required by a bound in `core::str::<impl str>::contains`
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/str/mod.rs:1320:5
help: consider borrowing here
    |
110 |         if !dedupKey.contains(&ch) {
    |                               +

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:175:13
    |
175 |         let mut ciphertext: String = encryptFractionatedMorse(&g_plaintext, &g_key).clone();
    |             ----^^^^^^^^^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:177:13
    |
177 |         let mut decrypted: String = decryptFractionatedMorse(&ciphertext, &g_key).clone();
    |             ----^^^^^^^^^
    |             |
    |             help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/algorithms/x/Rust/ciphers/fractionated_morse_cipher.rs:55:13
   |
55 |         let mut ch: String = (plaintext[i as usize..(i + 1) as usize].to_string().to_uppercase()).clone();
   |             ----^^
   |             |
   |             help: remove this `mut`

error: aborting due to 3 previous errors; 37 warnings emitted

Some errors have detailed explanations: E0277, E0308.
For more information about an error, try `rustc --explain E0277`.
