// Generated by Mochi transpiler v0.10.68
use std::collections::HashMap;
use std::sync::atomic::{AtomicBool, AtomicI64, Ordering};
use std::time::{SystemTime, UNIX_EPOCH};
static NOW_SEEDED: AtomicBool = AtomicBool::new(false);
static NOW_SEED: AtomicI64 = AtomicI64::new(0);
fn _now() -> i64 {
    if !NOW_SEEDED.load(Ordering::SeqCst) {
        if let Ok(s) = std::env::var("MOCHI_NOW_SEED") {
            if let Ok(v) = s.parse::<i64>() {
                NOW_SEED.store(v, Ordering::SeqCst);
                NOW_SEEDED.store(true, Ordering::SeqCst);
            }
        }
    }
    if NOW_SEEDED.load(Ordering::SeqCst) {
        let seed = (NOW_SEED.load(Ordering::SeqCst)*1664525 + 1013904223) % 2147483647;
        NOW_SEED.store(seed, Ordering::SeqCst);
        seed
    } else {
        SystemTime::now().duration_since(UNIX_EPOCH).unwrap().as_nanos() as i64
    }
}
fn _mem() -> i64 {
    if let Ok(mut f) = std::fs::File::open("/proc/self/statm") {
        let mut s = String::new();
        use std::io::Read;
        if f.read_to_string(&mut s).is_ok() {
            if let Some(rss) = s.split_whitespace().nth(1) {
                if let Ok(v) = rss.parse::<i64>() {
                    return v * 4096;
                }
            }
        }
    }
    0
}
fn main() {
        let _start: i64 = _now();
    fn exp(mut x: f64) -> f64 {
    return x.exp()
};
    let mut soboleva_modified_hyperbolic_tangent = |mut vector: Vec<f64>, mut a_value: f64, mut b_value: f64, mut c_value: f64, mut d_value: f64| -> Vec<f64> {
    let mut result: Vec<f64> = vec![];
    let mut i: i64 = 0;
    while (i < (vector.len() as i64)) {
        let x: f64 = vector[i as usize];
        let numerator: f64 = (exp((a_value * x)) - exp((-b_value * x)));
        let denominator: f64 = (exp((c_value * x)) + exp((-d_value * x)));
        result = { let mut _v = result.clone(); _v.push((numerator / denominator)); _v };
        i = (i + 1);
    }
    return result
};
    let mut mochi_main = || {
    let vector: Vec<f64> = vec![5.4, -2.4, 6.3, -5.23, 3.27, 0.56];
    let res: Vec<f64> = soboleva_modified_hyperbolic_tangent(vector.clone(), 0.2, 0.4, 0.6, 0.8);
    println!("{:?}", res);;
};
    mochi_main();
    let _end: i64 = _now();
    let duration_us: i64 = ((_end - _start) / 1000);
    let memory_bytes: i64 = _mem();
    println!("{{\n  \"duration_us\": {},\n  \"memory_bytes\": {},\n  \"name\": \"{}\"\n}}", duration_us, memory_bytes, "main");

}
