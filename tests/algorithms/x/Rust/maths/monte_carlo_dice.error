warning: unused import: `std::collections::HashMap`
 --> /workspace/mochi/tests/algorithms/x/Rust/maths/monte_carlo_dice.rs:2:5
  |
2 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/algorithms/x/Rust/maths/monte_carlo_dice.rs:42:16
   |
42 |     lcg_seed = (((lcg_seed * 1103515245) + 12345) % 2147483648);
   |                ^                                              ^
   |
   = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
   |
42 -     lcg_seed = (((lcg_seed * 1103515245) + 12345) % 2147483648);
42 +     lcg_seed = ((lcg_seed * 1103515245) + 12345) % 2147483648;
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/algorithms/x/Rust/maths/monte_carlo_dice.rs:46:19
   |
46 |     let rv: f64 = (lcg_rand() as f64);
   |                   ^                 ^
   |
help: remove these parentheses
   |
46 -     let rv: f64 = (lcg_rand() as f64);
46 +     let rv: f64 = lcg_rand() as f64;
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/algorithms/x/Rust/maths/monte_carlo_dice.rs:47:18
   |
47 |     let r: f64 = ((rv * 6.0) / 2147483648.0);
   |                  ^                         ^
   |
help: remove these parentheses
   |
47 -     let r: f64 = ((rv * 6.0) / 2147483648.0);
47 +     let r: f64 = (rv * 6.0) / 2147483648.0;
   |

warning: unnecessary parentheses around `return` value
  --> /workspace/mochi/tests/algorithms/x/Rust/maths/monte_carlo_dice.rs:48:12
   |
48 |     return (1 + (r as i64))
   |            ^              ^
   |
help: remove these parentheses
   |
48 -     return (1 + (r as i64))
48 +     return 1 + (r as i64)
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/algorithms/x/Rust/maths/monte_carlo_dice.rs:51:18
   |
51 |     let y: f64 = ((x * 100.0) + 0.5);
   |                  ^                 ^
   |
help: remove these parentheses
   |
51 -     let y: f64 = ((x * 100.0) + 0.5);
51 +     let y: f64 = (x * 100.0) + 0.5;
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/algorithms/x/Rust/maths/monte_carlo_dice.rs:52:18
   |
52 |     let z: i64 = (y as i64);
   |                  ^        ^
   |
help: remove these parentheses
   |
52 -     let z: i64 = (y as i64);
52 +     let z: i64 = y as i64;
   |

warning: unnecessary parentheses around `return` value
  --> /workspace/mochi/tests/algorithms/x/Rust/maths/monte_carlo_dice.rs:53:12
   |
53 |     return ((z as f64) / 100.0)
   |            ^                  ^
   |
help: remove these parentheses
   |
53 -     return ((z as f64) / 100.0)
53 +     return (z as f64) / 100.0
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/algorithms/x/Rust/maths/monte_carlo_dice.rs:57:24
   |
57 |     let max_sum: i64 = ((num_dice * 6) + 1);
   |                        ^                  ^
   |
help: remove these parentheses
   |
57 -     let max_sum: i64 = ((num_dice * 6) + 1);
57 +     let max_sum: i64 = (num_dice * 6) + 1;
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/algorithms/x/Rust/maths/monte_carlo_dice.rs:59:11
   |
59 |     while (i < max_sum) {
   |           ^           ^
   |
help: remove these parentheses
   |
59 -     while (i < max_sum) {
59 +     while i < max_sum {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/algorithms/x/Rust/maths/monte_carlo_dice.rs:61:13
   |
61 |         i = (i + 1);
   |             ^     ^
   |
help: remove these parentheses
   |
61 -         i = (i + 1);
61 +         i = i + 1;
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/algorithms/x/Rust/maths/monte_carlo_dice.rs:64:11
   |
64 |     while (t < num_throws) {
   |           ^              ^
   |
help: remove these parentheses
   |
64 -     while (t < num_throws) {
64 +     while t < num_throws {
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/algorithms/x/Rust/maths/monte_carlo_dice.rs:67:15
   |
67 |         while (d < num_dice) {
   |               ^            ^
   |
help: remove these parentheses
   |
67 -         while (d < num_dice) {
67 +         while d < num_dice {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/algorithms/x/Rust/maths/monte_carlo_dice.rs:68:17
   |
68 |             s = (s + roll());
   |                 ^          ^
   |
help: remove these parentheses
   |
68 -             s = (s + roll());
68 +             s = s + roll();
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/algorithms/x/Rust/maths/monte_carlo_dice.rs:69:17
   |
69 |             d = (d + 1);
   |                 ^     ^
   |
help: remove these parentheses
   |
69 -             d = (d + 1);
69 +             d = d + 1;
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/algorithms/x/Rust/maths/monte_carlo_dice.rs:71:36
   |
71 |         count_of_sum[s as usize] = (count_of_sum[s as usize] + 1);
   |                                    ^                            ^
   |
help: remove these parentheses
   |
71 -         count_of_sum[s as usize] = (count_of_sum[s as usize] + 1);
71 +         count_of_sum[s as usize] = count_of_sum[s as usize] + 1;
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/algorithms/x/Rust/maths/monte_carlo_dice.rs:72:13
   |
72 |         t = (t + 1);
   |             ^     ^
   |
help: remove these parentheses
   |
72 -         t = (t + 1);
72 +         t = t + 1;
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/algorithms/x/Rust/maths/monte_carlo_dice.rs:76:11
   |
76 |     while (i < max_sum) {
   |           ^           ^
   |
help: remove these parentheses
   |
76 -     while (i < max_sum) {
76 +     while i < max_sum {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/algorithms/x/Rust/maths/monte_carlo_dice.rs:77:22
   |
77 |         let p: f64 = (((count_of_sum[i as usize] as f64) * 100.0) / (num_throws as f64));
   |                      ^                                                                 ^
   |
help: remove these parentheses
   |
77 -         let p: f64 = (((count_of_sum[i as usize] as f64) * 100.0) / (num_throws as f64));
77 +         let p: f64 = ((count_of_sum[i as usize] as f64) * 100.0) / (num_throws as f64);
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/algorithms/x/Rust/maths/monte_carlo_dice.rs:79:13
   |
79 |         i = (i + 1);
   |             ^     ^
   |
help: remove these parentheses
   |
79 -         i = (i + 1);
79 +         i = i + 1;
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/algorithms/x/Rust/maths/monte_carlo_dice.rs:90:28
   |
90 |     let duration_us: i64 = ((_end - _start) / 1000);
   |                            ^                      ^
   |
help: remove these parentheses
   |
90 -     let duration_us: i64 = ((_end - _start) / 1000);
90 +     let duration_us: i64 = (_end - _start) / 1000;
   |

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/algorithms/x/Rust/maths/monte_carlo_dice.rs:50:9
   |
50 |     let mut round2 = |x: f64| -> f64 {
   |         ----^^^^^^
   |         |
   |         help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

error[E0499]: cannot borrow `lcg_seed` as mutable more than once at a time
  --> /workspace/mochi/tests/algorithms/x/Rust/maths/monte_carlo_dice.rs:83:26
   |
41 |     let mut lcg_rand = || -> i64 {
   |                        --------- first mutable borrow occurs here
42 |     lcg_seed = (((lcg_seed * 1103515245) + 12345) % 2147483648);
   |     -------- first borrow occurs due to use of `lcg_seed` in closure
...
83 |     let mut mochi_main = || {
   |                          ^^ second mutable borrow occurs here
84 |     lcg_seed = 1;
   |     -------- second borrow occurs due to use of `lcg_seed` in closure
85 |     let result: Vec<f64> = throw_dice(10000, 2);
   |                            ---------- first borrow later captured here by closure

error: aborting due to 1 previous error; 22 warnings emitted

For more information about this error, try `rustc --explain E0499`.
