warning: unnecessary trailing semicolon
  --> /workspace/mochi/tests/algorithms/x/Rust/bit_manipulation/binary_coded_decimal.rs:50:2
   |
50 | };
   |  ^ help: remove this semicolon
   |
   = note: `#[warn(redundant_semicolons)]` on by default

warning: unnecessary trailing semicolon
  --> /workspace/mochi/tests/algorithms/x/Rust/bit_manipulation/binary_coded_decimal.rs:66:2
   |
66 | };
   |  ^ help: remove this semicolon

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/algorithms/x/Rust/bit_manipulation/binary_coded_decimal.rs:42:11
   |
42 |     while (x > 0) {
   |           ^     ^
   |
   = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
   |
42 -     while (x > 0) {
42 +     while x > 0 {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/algorithms/x/Rust/bit_manipulation/binary_coded_decimal.rs:44:13
   |
44 |         x = (x / 2);
   |             ^     ^
   |
help: remove these parentheses
   |
44 -         x = (x / 2);
44 +         x = x / 2;
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/algorithms/x/Rust/bit_manipulation/binary_coded_decimal.rs:46:11
   |
46 |     while ((result.len() as i64) < 4) {
   |           ^                         ^
   |
help: remove these parentheses
   |
46 -     while ((result.len() as i64) < 4) {
46 +     while (result.len() as i64) < 4 {
   |

warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/algorithms/x/Rust/bit_manipulation/binary_coded_decimal.rs:53:8
   |
53 |     if (n < 0) {
   |        ^     ^
   |
help: remove these parentheses
   |
53 -     if (n < 0) {
53 +     if n < 0 {
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/algorithms/x/Rust/bit_manipulation/binary_coded_decimal.rs:59:11
   |
59 |     while (i < (digits.len() as i64)) {
   |           ^                         ^
   |
help: remove these parentheses
   |
59 -     while (i < (digits.len() as i64)) {
59 +     while i < (digits.len() as i64) {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/algorithms/x/Rust/bit_manipulation/binary_coded_decimal.rs:63:13
   |
63 |         i = (i + 1);
   |             ^     ^
   |
help: remove these parentheses
   |
63 -         i = (i + 1);
63 +         i = i + 1;
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/algorithms/x/Rust/bit_manipulation/binary_coded_decimal.rs:75:28
   |
75 |     let duration_us: i64 = ((_end - _start) / 1000);
   |                            ^                      ^
   |
help: remove these parentheses
   |
75 -     let duration_us: i64 = ((_end - _start) / 1000);
75 +     let duration_us: i64 = (_end - _start) / 1000;
   |

error[E0277]: the type `str` cannot be indexed by `usize`
  --> /workspace/mochi/tests/algorithms/x/Rust/bit_manipulation/binary_coded_decimal.rs:60:33
   |
60 |         let mut d: i64 = digits[i as usize];
   |                                 ^^^^^^^^^^ string indices are ranges of `usize`
   |
   = help: the trait `SliceIndex<str>` is not implemented for `usize`
           but trait `SliceIndex<[_]>` is implemented for it
   = help: for that trait implementation, expected `[_]`, found `str`
   = note: required for `String` to implement `Index<usize>`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/algorithms/x/Rust/bit_manipulation/binary_coded_decimal.rs:39:19
   |
39 |     fn to_binary4(mut n: i64) -> String {
   |                   ----^
   |                   |
   |                   help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

error: aborting due to 1 previous error; 10 warnings emitted

For more information about this error, try `rustc --explain E0277`.
