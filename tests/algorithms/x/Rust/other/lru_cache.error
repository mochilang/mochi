warning: unnecessary trailing semicolon
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:131:2
    |
131 | };
    |  ^ help: remove this semicolon
    |
    = note: `#[warn(redundant_semicolons)]` on by default

warning: unnecessary trailing semicolon
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:148:2
    |
148 | };
    |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:168:2
    |
168 | };
    |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:172:2
    |
172 | };
    |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:189:2
    |
189 | };
    |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:228:2
    |
228 | };
    |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:231:2
    |
231 | };
    |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:238:2
    |
238 | };
    |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:261:2
    |
261 | };
    |  ^ help: remove this semicolon

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:154:8
    |
154 |     if ((prev_idx == (0 - 1)) || (next_idx == (0 - 1))) {
    |        ^                                              ^
    |
    = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
    |
154 -     if ((prev_idx == (0 - 1)) || (next_idx == (0 - 1))) {
154 +     if (prev_idx == (0 - 1)) || (next_idx == (0 - 1)) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:163:17
    |
163 |     node.prev = (0 - 1);
    |                 ^     ^
    |
help: remove these parentheses
    |
163 -     node.prev = (0 - 1);
163 +     node.prev = 0 - 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:164:17
    |
164 |     node.next = (0 - 1);
    |                 ^     ^
    |
help: remove these parentheses
    |
164 -     node.next = (0 - 1);
164 +     node.next = 0 - 1;
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:178:12
    |
178 |         if (idx != (0 - 1)) {
    |            ^              ^
    |
help: remove these parentheses
    |
178 -         if (idx != (0 - 1)) {
178 +         if idx != (0 - 1) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:179:26
    |
179 |             cache.hits = (cache.hits + 1);
    |                          ^              ^
    |
help: remove these parentheses
    |
179 -             cache.hits = (cache.hits + 1);
179 +             cache.hits = cache.hits + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:187:20
    |
187 |     cache.misses = (cache.misses + 1);
    |                    ^                ^
    |
help: remove these parentheses
    |
187 -     cache.misses = (cache.misses + 1);
187 +     cache.misses = cache.misses + 1;
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:194:12
    |
194 |         if (cache.num_keys >= cache.capacity) {
    |            ^                                ^
    |
help: remove these parentheses
    |
194 -         if (cache.num_keys >= cache.capacity) {
194 +         if cache.num_keys >= cache.capacity {
    |

warning: unnecessary parentheses around method argument
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:201:54
    |
201 |             mdel.insert(old_key.to_string().clone(), (0 - 1));
    |                                                      ^     ^
    |
help: remove these parentheses
    |
201 -             mdel.insert(old_key.to_string().clone(), (0 - 1));
201 +             mdel.insert(old_key.to_string().clone(), 0 - 1);
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:203:30
    |
203 |             cache.num_keys = (cache.num_keys - 1);
    |                              ^                  ^
    |
help: remove these parentheses
    |
203 -             cache.num_keys = (cache.num_keys - 1);
203 +             cache.num_keys = cache.num_keys - 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:208:24
    |
208 |         let idx: i64 = ((nodes.len() as i64) - 1);
    |                        ^                        ^
    |
help: remove these parentheses
    |
208 -         let idx: i64 = ((nodes.len() as i64) - 1);
208 +         let idx: i64 = (nodes.len() as i64) - 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:214:26
    |
214 |         cache.num_keys = (cache.num_keys + 1);
    |                          ^                  ^
    |
help: remove these parentheses
    |
214 -         cache.num_keys = (cache.num_keys + 1);
214 +         cache.num_keys = cache.num_keys + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:264:28
    |
264 |     let duration_us: i64 = ((_end - _start) / 1000);
    |                            ^                      ^
    |
help: remove these parentheses
    |
264 -     let duration_us: i64 = ((_end - _start) / 1000);
264 +     let duration_us: i64 = (_end - _start) / 1000;
    |

error[E0308]: mismatched types
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:177:44
    |
177 |         let idx: i64 = cache.cache.clone()[key_str];
    |                                            ^^^^^^^ expected `&_`, found `String`
    |
    = note: expected reference `&_`
                  found struct `String`
help: consider borrowing here
    |
177 |         let idx: i64 = cache.cache.clone()[&key_str];
    |                                            +

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:132:43
    |
132 |     fn dll_add(mut lst: DoubleLinkedList, mut idx: i64) -> DoubleLinkedList {
    |                                           ----^^^
    |                                           |
    |                                           help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:149:46
    |
149 |     fn dll_remove(mut lst: DoubleLinkedList, mut idx: i64) -> DoubleLinkedList {
    |                                              ----^^^
    |                                              |
    |                                              help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:169:18
    |
169 |     fn new_cache(mut cap: i64) -> LRUCache {
    |                  ----^^^
    |                  |
    |                  help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:170:9
    |
170 |     let mut empty_map: HashMap<String, i64> = HashMap::new();
    |         ----^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:190:16
    |
190 |     fn lru_put(mut c: LRUCache, mut key: i64, mut value: i64) -> LRUCache {
    |                ----^
    |                |
    |                help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:190:33
    |
190 |     fn lru_put(mut c: LRUCache, mut key: i64, mut value: i64) -> LRUCache {
    |                                 ----^^^
    |                                 |
    |                                 help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:190:47
    |
190 |     fn lru_put(mut c: LRUCache, mut key: i64, mut value: i64) -> LRUCache {
    |                                               ----^^^^^
    |                                               |
    |                                               help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:216:13
    |
216 |         let mut m: HashMap<String, i64> = cache.cache.clone();
    |             ----^
    |             |
    |             help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:229:19
    |
229 |     fn cache_info(mut cache: LRUCache) -> String {
    |                   ----^^^^^
    |                   |
    |                   help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:232:21
    |
232 |     fn print_result(mut res: GetResult) {
    |                     ----^^^
    |                     |
    |                     help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:243:9
    |
243 |     let mut r1: GetResult = lru_get(cache.clone(), 1);
    |         ----^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:247:9
    |
247 |     let mut r2: GetResult = lru_get(cache.clone(), 2);
    |         ----^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:251:9
    |
251 |     let mut r3: GetResult = lru_get(cache.clone(), 1);
    |         ----^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:254:9
    |
254 |     let mut r4: GetResult = lru_get(cache.clone(), 3);
    |         ----^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/algorithms/x/Rust/other/lru_cache.rs:257:9
    |
257 |     let mut r5: GetResult = lru_get(cache.clone(), 4);
    |         ----^^
    |         |
    |         help: remove this `mut`

error: aborting due to 1 previous error; 36 warnings emitted

For more information about this error, try `rustc --explain E0308`.
