// Generated by Mochi 0.10.61 on 2025-08-08 18:01 +0700
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using System.Numerics;
using System.Collections;

class Page {
    public string url;
    public string html;
    public override string ToString() => $"Page {{url = \"{url}\", html = \"{html}\"}}";
}
class Program {
    static bool seededNow = false;
    static long nowSeed = 0;
    static long _now() {
        if (!seededNow) {
            var s = Environment.GetEnvironmentVariable("MOCHI_NOW_SEED");
            if (long.TryParse(s, out var v)) {
                nowSeed = v;
                seededNow = true;
            }
        }
        if (seededNow) {
            nowSeed = unchecked(nowSeed * 1664525 + 1013904223);
            nowSeed %= 9223372036854775783L;
            if (nowSeed < 0) nowSeed += 9223372036854775783L;
            return nowSeed;
        }
        return DateTime.UtcNow.Ticks / 100;
    }
    static long _mem() {
        return GC.GetTotalAllocatedBytes(true);
    }
    static long _len(object v) {
        if (v is Array a) return a.Length;
        if (v is string s) return s.Length;
        if (v is System.Collections.ICollection c) return c.Count;
        return Convert.ToString(v).Length;
    }
    static string _substr(string s, long start, long end) {
        if (start < 0) start = 0;
        if (end < 0) end = 0;
        if (start > s.Length) start = s.Length;
        if (end > s.Length) end = s.Length;
        if (start > end) start = end;
        return s.Substring((int)start, (int)(end - start));
    }
    static string _fmt(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return "[" + string.Join(", ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmt(d[k]));
            return "map[" + string.Join(", ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmt(x));
            return string.Join(", ", parts);
        }
        if (v is string s) return "\"" + s.Replace("\"", "\\\"") + "\"";
        if (v is bool b) return b ? "true" : "false";
        return Convert.ToString(v);
    }
    static string _fmtStr(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmtStr(x));
            return "[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmtStr(d[k]));
            return "map[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmtStr(x));
            return string.Join(" ", parts);
        }
        if (v is string s) return "\"" + s.Replace("\"", "\\\"") + "\"";
        if (v is bool b) return b ? "true" : "false";
        return Convert.ToString(v);
    }
    public static string _fmtTop(object v) {
        if (v is Array a && a.Length > 0 && a.GetValue(0) is Array) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        if (v is string s) return s;
        return _fmt(v);
    }
    static Page[] pages_65 = new Page[]{new Page{url = "https://example.com", html = "<html><body><a href=\"/contact\">Contact</a></body></html>"}, new Page{url = "https://example.com/contact", html = "<html>Contact us at info@example.com or support@example.com</html>"}};
    static string[] emails_66 = Program.emails_from_url("https://example.com", pages_65);
    public static long index_of(string s_0, string ch_1) {
        long i_2 = 0;
        while ((i_2 < s_0.Length)) {
            if ((s_0.Substring((int)(i_2), 1) == ch_1)) {
                return i_2;
            }
            i_2 = (i_2 + 1);
        };
        return -1;
    }

    public static long index_of_substring(string s_3, string sub_4) {
        long n_5 = s_3.Length;
        long m_6 = sub_4.Length;
        if ((m_6 == 0)) {
            return 0;
        };
        long i_7 = 0;
        while ((i_7 <= (n_5 - m_6))) {
            long j_8 = 0;
            bool is_match_9 = true;
            while ((j_8 < m_6)) {
                if ((s_3.Substring((int)((i_7 + j_8)), 1) != sub_4.Substring((int)(j_8), 1))) {
                    is_match_9 = false;
                    break;
                }
                j_8 = (j_8 + 1);
            }
            if (is_match_9) {
                return i_7;
            }
            i_7 = (i_7 + 1);
        };
        return -1;
    }

    public static string[] split(string s_10, string sep_11) {
        string[] parts_12 = new string[]{};
        long last_13 = 0;
        long i_14 = 0;
        while ((i_14 < s_10.Length)) {
            string ch_15 = s_10.Substring((int)(i_14), 1);
            if ((ch_15 == sep_11)) {
                parts_12 = (Enumerable.ToArray(Enumerable.Append<string>(parts_12, _substr(s_10, last_13, i_14))));
                last_13 = (i_14 + 1);
            }
            if (((i_14 + 1) == s_10.Length)) {
                parts_12 = (Enumerable.ToArray(Enumerable.Append<string>(parts_12, _substr(s_10, last_13, (i_14 + 1)))));
            }
            i_14 = (i_14 + 1);
        };
        return parts_12;
    }

    public static string get_sub_domain_name(string url_16) {
        long proto_pos_17 = Program.index_of_substring(url_16, "://");
        long start_18 = 0;
        if ((proto_pos_17 >= 0)) {
            start_18 = (proto_pos_17 + 3);
        };
        long i_19 = start_18;
        while ((i_19 < url_16.Length)) {
            if ((url_16.Substring((int)(i_19), 1) == "/")) {
                break;
            }
            i_19 = (i_19 + 1);
        };
        return _substr(url_16, start_18, i_19);
    }

    public static string get_domain_name(string url_20) {
        string sub_21 = Program.get_sub_domain_name(url_20);
        string[] parts_22 = Program.split(sub_21, ".");
        if ((parts_22.Length >= 2)) {
            return ((parts_22[(int)((parts_22.Length - 2) < 0 ? parts_22.Length + ((parts_22.Length - 2)) : (parts_22.Length - 2))] + ".") + parts_22[(int)((parts_22.Length - 1) < 0 ? parts_22.Length + ((parts_22.Length - 1)) : (parts_22.Length - 1))]);
        };
        return sub_21;
    }

    public static bool is_alnum(string ch_23) {
        string chars_24 = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
        return (Program.index_of(chars_24, ch_23) >= 0);
    }

    public static bool contains(string[] xs_25, string x_26) {
        long i_27 = 0;
        while ((i_27 < xs_25.Length)) {
            if ((xs_25[(int)(i_27 < 0 ? xs_25.Length + (i_27) : i_27)] == x_26)) {
                return true;
            }
            i_27 = (i_27 + 1);
        };
        return false;
    }

    public static string[] bubble_sort(string[] xs_28) {
        string[] arr_29 = xs_28;
        long n_30 = arr_29.Length;
        long i_31 = 0;
        while ((i_31 < n_30)) {
            long j_32 = 0;
            while (((j_32 + 1) < (n_30 - i_31))) {
                if ((string.Compare(arr_29[(int)(j_32 < 0 ? arr_29.Length + (j_32) : j_32)], arr_29[(int)((j_32 + 1) < 0 ? arr_29.Length + ((j_32 + 1)) : (j_32 + 1))]) > 0)) {
                    string tmp_33 = arr_29[(int)(j_32 < 0 ? arr_29.Length + (j_32) : j_32)];
                    arr_29[(int)(j_32)] = arr_29[(int)((j_32 + 1) < 0 ? arr_29.Length + ((j_32 + 1)) : (j_32 + 1))];
                    arr_29[(int)((j_32 + 1))] = tmp_33;
                }
                j_32 = (j_32 + 1);
            }
            i_31 = (i_31 + 1);
        };
        return arr_29;
    }

    public static string[] extract_links(string domain_34, string html_35) {
        string[] links_36 = new string[]{};
        long pos_37 = Program.index_of_substring(html_35, "href=");
        while ((pos_37 >= 0)) {
            long start_quote_38 = Program.index_of(_substr(html_35, (pos_37 + 5), html_35.Length), "\"");
            if ((start_quote_38 < 0)) {
                break;
            }
            long rest_39 = (((pos_37 + 5) + start_quote_38) + 1);
            long end_quote_40 = Program.index_of(_substr(html_35, rest_39, html_35.Length), "\"");
            if ((end_quote_40 < 0)) {
                break;
            }
            string link_41 = _substr(html_35, rest_39, (rest_39 + end_quote_40));
            if ((!Program.contains(links_36, link_41))) {
                string absolute_42 = link_41;
                if ((!((Program.index_of_substring(link_41, "http://") == 0) || (Program.index_of_substring(link_41, "https://") == 0)))) {
                    if ((Program.index_of_substring(link_41, "/") == 0)) {
                        absolute_42 = (("https://" + domain_34) + link_41);
                    } else {
                        absolute_42 = ((("https://" + domain_34) + "/") + link_41);
                    }
                }
                links_36 = (Enumerable.ToArray(Enumerable.Append<string>(links_36, absolute_42)));
            }
            pos_37 = Program.index_of_substring(_substr(html_35, (rest_39 + end_quote_40), html_35.Length), "href=");
            if ((pos_37 >= 0)) {
                pos_37 = ((pos_37 + rest_39) + end_quote_40);
            }
        };
        return links_36;
    }

    public static string[] extract_emails(string domain_43, string text_44) {
        string[] emails_45 = new string[]{};
        long i_46 = 0;
        while ((i_46 < text_44.Length)) {
            if ((text_44.Substring((int)(i_46), 1) == "@")) {
                if ((_substr(text_44, (i_46 + 1), ((i_46 + 1) + domain_43.Length)) == domain_43)) {
                    long j_47 = (i_46 - 1);
                    while (((j_47 >= 0) && Program.is_alnum(text_44.Substring((int)(j_47), 1)))) {
                        j_47 = (j_47 - 1);
                    }
                    string local_48 = _substr(text_44, (j_47 + 1), i_46);
                    if ((local_48.Length > 0)) {
                        string email_49 = ((local_48 + "@") + domain_43);
                        if ((!Program.contains(emails_45, email_49))) {
                            emails_45 = (Enumerable.ToArray(Enumerable.Append<string>(emails_45, email_49)));
                        }
                    }
                }
            }
            i_46 = (i_46 + 1);
        };
        return emails_45;
    }

    public static string find_page(Page[] pages_50, string url_51) {
        long i_52 = 0;
        while ((i_52 < pages_50.Length)) {
            Page p_53 = pages_50[(int)(i_52 < 0 ? pages_50.Length + (i_52) : i_52)];
            if ((p_53.url == url_51)) {
                return p_53.html;
            }
            i_52 = (i_52 + 1);
        };
        return "";
    }

    public static string[] emails_from_url(string url_54, Page[] pages_55) {
        string domain_56 = Program.get_domain_name(url_54);
        string base_html_57 = Program.find_page(pages_55, url_54);
        string[] links_58 = Program.extract_links(domain_56, base_html_57);
        string[] found_59 = new string[]{};
        long i_60 = 0;
        while ((i_60 < links_58.Length)) {
            string html_61 = Program.find_page(pages_55, links_58[(int)(i_60 < 0 ? links_58.Length + (i_60) : i_60)]);
            string[] emails_62 = Program.extract_emails(domain_56, html_61);
            long j_63 = 0;
            while ((j_63 < emails_62.Length)) {
                if ((!Program.contains(found_59, emails_62[(int)(j_63 < 0 ? emails_62.Length + (j_63) : j_63)]))) {
                    found_59 = (Enumerable.ToArray(Enumerable.Append<string>(found_59, emails_62[(int)(j_63 < 0 ? emails_62.Length + (j_63) : j_63)])));
                }
                j_63 = (j_63 + 1);
            }
            i_60 = (i_60 + 1);
        };
        string[] sorted_64 = Program.bubble_sort(found_59);
        return sorted_64;
    }

    static void Main() {
        {
            var __memStart = _mem();
            var __start = _now();
            Console.WriteLine(Program._fmtTop((_fmtStr(emails_66.Length) + " emails found:")));
            long k_67 = 0;
            while ((k_67 < emails_66.Length)) {
                Console.WriteLine(Program._fmtTop(emails_66[(int)(k_67 < 0 ? emails_66.Length + (k_67) : k_67)]));
                k_67 = (k_67 + 1);
            }
            var __end = _now();
            var __memEnd = _mem();
            var __dur = (__end - __start);
            if (__dur <= 0) __dur = 1;
            var __memDiff = __memEnd - __memStart;
            if (__memDiff <= 0) __memDiff = __memEnd;
            Console.WriteLine("{\"name\":\"main\",\"duration_us\":" + __dur + ",\"memory_bytes\":" + __memDiff + "}");
        }
    }
}
