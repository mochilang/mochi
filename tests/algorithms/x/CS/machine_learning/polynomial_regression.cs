// Generated by Mochi 0.10.63 on 2025-08-11 18:28 +0700
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using System.Numerics;
using System.Collections;

#pragma warning disable CS0162
class Program {
    static bool seededNow = false;
    static long nowSeed = 0;
    static long _now() {
        if (!seededNow) {
            var s = Environment.GetEnvironmentVariable("MOCHI_NOW_SEED");
            if (long.TryParse(s, out var v)) {
                nowSeed = v;
                seededNow = true;
            }
        }
        if (seededNow) {
            nowSeed = unchecked(nowSeed * 1664525 + 1013904223);
            nowSeed %= 9223372036854775783L;
            if (nowSeed < 0) nowSeed += 9223372036854775783L;
            return nowSeed;
        }
        return DateTime.UtcNow.Ticks / 100;
    }
    static long _mem() {
        return GC.GetTotalAllocatedBytes(true);
    }
    static long _len(object v) {
        if (v is Array a) return a.Length;
        if (v is string s) return s.Length;
        if (v is System.Collections.ICollection c) return c.Count;
        return Convert.ToString(v).Length;
    }
    static T _idx<T>(T[] arr, long i) {
        if (arr == null) return default(T);
        if (i < 0) i += arr.Length;
        if (i < 0 || i >= arr.Length) return default(T);
        return arr[(int)i];
    }
    static string _substr(string s, long start, long end) {
        if (start < 0) start = 0;
        if (end < 0) end = 0;
        if (start > s.Length) start = s.Length;
        if (end > s.Length) end = s.Length;
        if (start > end) start = end;
        return s.Substring((int)start, (int)(end - start));
    }
    static string _fmt(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return "[" + string.Join(", ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmt(d[k]));
            return "map[" + string.Join(", ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmt(x));
            return string.Join(", ", parts);
        }
        if (v is string s) return "\"" + s.Replace("\"", "\\\"") + "\"";
        if (v is bool b) return b ? "true" : "false";
        return Convert.ToString(v);
    }
    static string _fmtStr(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmtStr(x));
            return "[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmtStr(d[k]));
            return "map[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmtStr(x));
            return string.Join(" ", parts);
        }
        if (v is string s) return "\"" + s.Replace("\"", "\\\"") + "\"";
        if (v is bool b) return b ? "true" : "false";
        return Convert.ToString(v);
    }
    public static string _fmtTop(object v) {
        if (v is Array a && a.Length > 0 && a.GetValue(0) is Array) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        if (v is string s) return s;
        return _fmt(v);
    }
    static string __name__ = "__main__";
    static double[] xs_57 = new double[]{0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0};
    static double[] ys_58 = new double[]{};
    static long i_59 = 0;
    public static double[][] design_matrix(double[] xs_0, long degree_1) {
        long i_2 = 0;
        double[][] matrix_3 = new double[][]{};
        while ((i_2 < xs_0.Length)) {
            double[] row_4 = new double[]{};
            long j_5 = 0;
            double pow_6 = 1.0;
            while ((j_5 <= degree_1)) {
                row_4 = (Enumerable.ToArray(Enumerable.Append<double>(row_4, pow_6)));
                pow_6 = (pow_6 * _idx(xs_0, i_2));
                j_5 = (j_5 + 1);
            }
            matrix_3 = (Enumerable.ToArray(Enumerable.Append<double[]>(matrix_3, row_4)));
            i_2 = (i_2 + 1);
        };
        return matrix_3;
    }

    public static double[][] transpose(double[][] matrix_7) {
        long rows_8 = matrix_7.Length;
        long cols_9 = _idx(matrix_7, 0).Length;
        long j_10 = 0;
        double[][] result_11 = new double[][]{};
        while ((j_10 < cols_9)) {
            double[] row_12 = new double[]{};
            long i_13 = 0;
            while ((i_13 < rows_8)) {
                row_12 = (Enumerable.ToArray(Enumerable.Append<double>(row_12, _idx(_idx(matrix_7, i_13), j_10))));
                i_13 = (i_13 + 1);
            }
            result_11 = (Enumerable.ToArray(Enumerable.Append<double[]>(result_11, row_12)));
            j_10 = (j_10 + 1);
        };
        return result_11;
    }

    public static double[][] matmul(double[][] A_14, double[][] B_15) {
        long n_16 = A_14.Length;
        long m_17 = _idx(A_14, 0).Length;
        long p_18 = _idx(B_15, 0).Length;
        long i_19 = 0;
        double[][] result_20 = new double[][]{};
        while ((i_19 < n_16)) {
            double[] row_21 = new double[]{};
            long k_22 = 0;
            while ((k_22 < p_18)) {
                double sum_23 = 0.0;
                long j_24 = 0;
                while ((j_24 < m_17)) {
                    sum_23 = (sum_23 + (_idx(_idx(A_14, i_19), j_24) * _idx(_idx(B_15, j_24), k_22)));
                    j_24 = (j_24 + 1);
                }
                row_21 = (Enumerable.ToArray(Enumerable.Append<double>(row_21, sum_23)));
                k_22 = (k_22 + 1);
            }
            result_20 = (Enumerable.ToArray(Enumerable.Append<double[]>(result_20, row_21)));
            i_19 = (i_19 + 1);
        };
        return result_20;
    }

    public static double[] matvec_mul(double[][] A_25, double[] v_26) {
        long n_27 = A_25.Length;
        long m_28 = _idx(A_25, 0).Length;
        long i_29 = 0;
        double[] result_30 = new double[]{};
        while ((i_29 < n_27)) {
            double sum_31 = 0.0;
            long j_32 = 0;
            while ((j_32 < m_28)) {
                sum_31 = (sum_31 + (_idx(_idx(A_25, i_29), j_32) * _idx(v_26, j_32)));
                j_32 = (j_32 + 1);
            }
            result_30 = (Enumerable.ToArray(Enumerable.Append<double>(result_30, sum_31)));
            i_29 = (i_29 + 1);
        };
        return result_30;
    }

    public static double[] gaussian_elimination(double[][] A_33, double[] b_34) {
        long n_35 = A_33.Length;
        double[][] M_36 = new double[][]{};
        long i_37 = 0;
        while ((i_37 < n_35)) {
            M_36 = (Enumerable.ToArray(Enumerable.Append<double[]>(M_36, (Enumerable.ToArray(Enumerable.Append<double>(_idx(A_33, i_37), _idx(b_34, i_37)))))));
            i_37 = (i_37 + 1);
        };
        long k_38 = 0;
        while ((k_38 < n_35)) {
            long j_39 = (k_38 + 1);
            while ((j_39 < n_35)) {
                double factor_40 = (_idx(_idx(M_36, j_39), k_38) / _idx(_idx(M_36, k_38), k_38));
                double[] rowj_41 = _idx(M_36, j_39);
                double[] rowk_42 = _idx(M_36, k_38);
                long l_43 = k_38;
                while ((l_43 <= n_35)) {
                    rowj_41[(int)(l_43)] = (_idx(rowj_41, l_43) - (factor_40 * _idx(rowk_42, l_43)));
                    l_43 = (l_43 + 1);
                }
                M_36[(int)(j_39)] = rowj_41;
                j_39 = (j_39 + 1);
            }
            k_38 = (k_38 + 1);
        };
        double[] x_44 = new double[]{};
        long t_45 = 0;
        while ((t_45 < n_35)) {
            x_44 = (Enumerable.ToArray(Enumerable.Append<double>(x_44, 0.0)));
            t_45 = (t_45 + 1);
        };
        long i2_46 = (n_35 - 1);
        while ((i2_46 >= 0)) {
            double sum_47 = _idx(_idx(M_36, i2_46), n_35);
            long j2_48 = (i2_46 + 1);
            while ((j2_48 < n_35)) {
                sum_47 = (sum_47 - (_idx(_idx(M_36, i2_46), j2_48) * _idx(x_44, j2_48)));
                j2_48 = (j2_48 + 1);
            }
            x_44[(int)(i2_46)] = (sum_47 / _idx(_idx(M_36, i2_46), i2_46));
            i2_46 = (i2_46 - 1);
        };
        return x_44;
    }

    public static double[] predict(double[] xs_49, double[] coeffs_50) {
        long i_51 = 0;
        double[] result_52 = new double[]{};
        while ((i_51 < xs_49.Length)) {
            double x_53 = _idx(xs_49, i_51);
            long j_54 = 0;
            double pow_55 = 1.0;
            double sum_56 = 0.0;
            while ((j_54 < coeffs_50.Length)) {
                sum_56 = (sum_56 + (_idx(coeffs_50, j_54) * pow_55));
                pow_55 = (pow_55 * x_53);
                j_54 = (j_54 + 1);
            }
            result_52 = (Enumerable.ToArray(Enumerable.Append<double>(result_52, sum_56)));
            i_51 = (i_51 + 1);
        };
        return result_52;
    }

    static void Main() {
        _ = __name__;
        {
            var __memStart = _mem();
            var __start = _now();
            while ((i_59 < xs_57.Length)) {
                double x_60 = _idx(xs_57, i_59);
                ys_58 = (Enumerable.ToArray(Enumerable.Append<double>(ys_58, (((((x_60 * x_60) * x_60) - ((2.0 * x_60) * x_60)) + (3.0 * x_60)) - 5.0))));
                i_59 = (i_59 + 1);
            }
            double[][] X_61 = Program.design_matrix(xs_57, 3);
            double[][] Xt_62 = Program.transpose(X_61);
            double[][] XtX_63 = Program.matmul(Xt_62, X_61);
            double[] Xty_64 = Program.matvec_mul(Xt_62, ys_58);
            double[] coeffs_65 = Program.gaussian_elimination(XtX_63, Xty_64);
            Console.WriteLine(Program._fmtTop(_fmtStr(coeffs_65)));
            Console.WriteLine(Program._fmtTop(_fmtStr(Program.predict(new double[]{-1.0}, coeffs_65))));
            Console.WriteLine(Program._fmtTop(_fmtStr(Program.predict(new double[]{-2.0}, coeffs_65))));
            Console.WriteLine(Program._fmtTop(_fmtStr(Program.predict(new double[]{6.0}, coeffs_65))));
            var __end = _now();
            var __memEnd = _mem();
            var __dur = (__end - __start);
            if (__dur <= 0) __dur = 1;
            var __memDiff = __memEnd - __memStart;
            if (__memDiff <= 0) __memDiff = __memEnd;
            Console.WriteLine("{\"name\":\"main\",\"duration_us\":" + __dur + ",\"memory_bytes\":" + __memDiff + "}");
        }
    }
}
