// Generated by Mochi 0.10.63 on 2025-08-09 23:14 +0700
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using System.Numerics;
using System.Collections;

#pragma warning disable CS0162
class Program {
    static bool seededNow = false;
    static long nowSeed = 0;
    static long _now() {
        if (!seededNow) {
            var s = Environment.GetEnvironmentVariable("MOCHI_NOW_SEED");
            if (long.TryParse(s, out var v)) {
                nowSeed = v;
                seededNow = true;
            }
        }
        if (seededNow) {
            nowSeed = unchecked(nowSeed * 1664525 + 1013904223);
            nowSeed %= 9223372036854775783L;
            if (nowSeed < 0) nowSeed += 9223372036854775783L;
            return nowSeed;
        }
        return DateTime.UtcNow.Ticks / 100;
    }
    static long _mem() {
        return GC.GetTotalAllocatedBytes(true);
    }
    static long _len(object v) {
        if (v is Array a) return a.Length;
        if (v is string s) return s.Length;
        if (v is System.Collections.ICollection c) return c.Count;
        return Convert.ToString(v).Length;
    }
    static T _idx<T>(T[] arr, long i) {
        if (arr == null) return default(T);
        if (i < 0) i += arr.Length;
        if (i < 0 || i >= arr.Length) return default(T);
        return arr[(int)i];
    }
    static string _substr(string s, long start, long end) {
        if (start < 0) start = 0;
        if (end < 0) end = 0;
        if (start > s.Length) start = s.Length;
        if (end > s.Length) end = s.Length;
        if (start > end) start = end;
        return s.Substring((int)start, (int)(end - start));
    }
    static string _fmt(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return "[" + string.Join(", ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmt(d[k]));
            return "map[" + string.Join(", ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmt(x));
            return string.Join(", ", parts);
        }
        if (v is string s) return "\"" + s.Replace("\"", "\\\"") + "\"";
        if (v is bool b) return b ? "true" : "false";
        return Convert.ToString(v);
    }
    static string _fmtStr(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmtStr(x));
            return "[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmtStr(d[k]));
            return "map[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmtStr(x));
            return string.Join(" ", parts);
        }
        if (v is string s) return "\"" + s.Replace("\"", "\\\"") + "\"";
        if (v is bool b) return b ? "true" : "false";
        return Convert.ToString(v);
    }
    public static string _fmtTop(object v) {
        if (v is Array a && a.Length > 0 && a.GetValue(0) is Array) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        if (v is string s) return s;
        return _fmt(v);
    }
    static long[][] mat_35 = Program.make_matrix(4);
    public static long abs_int(long n_0) {
        if ((n_0 < 0)) {
            return -n_0;
        };
        return n_0;
    }

    public static long[][] make_matrix(long row_size_1) {
        long size_2 = Program.abs_int(row_size_1);
        if ((size_2 == 0)) {
            size_2 = 4;
        };
        long[][] mat_3 = new long[][]{};
        long y_4 = 0;
        while ((y_4 < size_2)) {
            long[] row_5 = new long[]{};
            long x_6 = 0;
            while ((x_6 < size_2)) {
                row_5 = (Enumerable.ToArray(Enumerable.Append<long>(row_5, ((1 + x_6) + (y_4 * size_2)))));
                x_6 = (x_6 + 1);
            }
            mat_3 = (Enumerable.ToArray(Enumerable.Append<long[]>(mat_3, row_5)));
            y_4 = (y_4 + 1);
        };
        return mat_3;
    }

    public static long[][] transpose(long[][] mat_7) {
        long n_8 = mat_7.Length;
        long[][] result_9 = new long[][]{};
        long i_10 = 0;
        while ((i_10 < n_8)) {
            long[] row_11 = new long[]{};
            long j_12 = 0;
            while ((j_12 < n_8)) {
                row_11 = (Enumerable.ToArray(Enumerable.Append<long>(row_11, _idx(_idx(mat_7, j_12), i_10))));
                j_12 = (j_12 + 1);
            }
            result_9 = (Enumerable.ToArray(Enumerable.Append<long[]>(result_9, row_11)));
            i_10 = (i_10 + 1);
        };
        return result_9;
    }

    public static long[][] reverse_row(long[][] mat_13) {
        long[][] result_14 = new long[][]{};
        long i_15 = (mat_13.Length - 1);
        while ((i_15 >= 0)) {
            result_14 = (Enumerable.ToArray(Enumerable.Append<long[]>(result_14, _idx(mat_13, i_15))));
            i_15 = (i_15 - 1);
        };
        return result_14;
    }

    public static long[][] reverse_column(long[][] mat_16) {
        long[][] result_17 = new long[][]{};
        long i_18 = 0;
        while ((i_18 < mat_16.Length)) {
            long[] row_19 = new long[]{};
            long j_20 = (_idx(mat_16, i_18).Length - 1);
            while ((j_20 >= 0)) {
                row_19 = (Enumerable.ToArray(Enumerable.Append<long>(row_19, _idx(_idx(mat_16, i_18), j_20))));
                j_20 = (j_20 - 1);
            }
            result_17 = (Enumerable.ToArray(Enumerable.Append<long[]>(result_17, row_19)));
            i_18 = (i_18 + 1);
        };
        return result_17;
    }

    public static long[][] rotate_90(long[][] mat_21) {
        long[][] t_22 = Program.transpose(mat_21);
        long[][] rr_23 = Program.reverse_row(t_22);
        return rr_23;
    }

    public static long[][] rotate_180(long[][] mat_24) {
        long[][] rc_25 = Program.reverse_column(mat_24);
        long[][] rr_26 = Program.reverse_row(rc_25);
        return rr_26;
    }

    public static long[][] rotate_270(long[][] mat_27) {
        long[][] t_28 = Program.transpose(mat_27);
        long[][] rc_29 = Program.reverse_column(t_28);
        return rc_29;
    }

    public static string row_to_string(long[] row_30) {
        string line_31 = "";
        long i_32 = 0;
        while ((i_32 < row_30.Length)) {
            if ((i_32 == 0)) {
                line_31 = _fmtStr(_idx(row_30, i_32));
            } else {
                line_31 = ((line_31 + " ") + _fmtStr(_idx(row_30, i_32)));
            }
            i_32 = (i_32 + 1);
        };
        return line_31;
    }

    public static void print_matrix(long[][] mat_33) {
        long i_34 = 0;
        while ((i_34 < mat_33.Length)) {
            Console.WriteLine(Program._fmtTop(Program.row_to_string(_idx(mat_33, i_34))));
            i_34 = (i_34 + 1);
        };
    }

    static void Main() {
        {
            var __memStart = _mem();
            var __start = _now();
            Console.WriteLine(Program._fmtTop("\norigin:\n"));
            Program.print_matrix(mat_35);
            Console.WriteLine(Program._fmtTop("\nrotate 90 counterclockwise:\n"));
            long[][] r90_36 = Program.rotate_90(mat_35);
            Program.print_matrix(r90_36);
            mat_35 = Program.make_matrix(4);
            Console.WriteLine(Program._fmtTop("\norigin:\n"));
            Program.print_matrix(mat_35);
            Console.WriteLine(Program._fmtTop("\nrotate 180:\n"));
            long[][] r180_37 = Program.rotate_180(mat_35);
            Program.print_matrix(r180_37);
            mat_35 = Program.make_matrix(4);
            Console.WriteLine(Program._fmtTop("\norigin:\n"));
            Program.print_matrix(mat_35);
            Console.WriteLine(Program._fmtTop("\nrotate 270 counterclockwise:\n"));
            long[][] r270_38 = Program.rotate_270(mat_35);
            Program.print_matrix(r270_38);
            var __end = _now();
            var __memEnd = _mem();
            var __dur = (__end - __start);
            if (__dur <= 0) __dur = 1;
            var __memDiff = __memEnd - __memStart;
            if (__memDiff <= 0) __memDiff = __memEnd;
            Console.WriteLine("{\"name\":\"main\",\"duration_us\":" + __dur + ",\"memory_bytes\":" + __memDiff + "}");
        }
    }
}
