// Generated by Mochi 0.10.59 on 2025-08-06 21:24 +0700
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using System.Numerics;
using System.Collections;

class Program {
    static bool seededNow = false;
    static long nowSeed = 0;
    static long _now() {
        if (!seededNow) {
            var s = Environment.GetEnvironmentVariable("MOCHI_NOW_SEED");
            if (long.TryParse(s, out var v)) {
                nowSeed = v;
                seededNow = true;
            }
        }
        if (seededNow) {
            nowSeed = unchecked(nowSeed * 1664525 + 1013904223);
            nowSeed %= 9223372036854775783L;
            if (nowSeed < 0) nowSeed += 9223372036854775783L;
            return nowSeed;
        }
        return DateTime.UtcNow.Ticks / 100;
    }
    static long _mem() {
        return GC.GetTotalAllocatedBytes(true);
    }
    static long _len(object v) {
        if (v is Array a) return a.Length;
        if (v is string s) return s.Length;
        if (v is System.Collections.ICollection c) return c.Count;
        return Convert.ToString(v).Length;
    }
    static string _substr(string s, long start, long end) {
        if (start < 0) start = 0;
        if (end < 0) end = 0;
        if (start > s.Length) start = s.Length;
        if (end > s.Length) end = s.Length;
        if (start > end) start = end;
        return s.Substring((int)start, (int)(end - start));
    }
    static string _fmt(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return "[" + string.Join(", ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmt(d[k]));
            return "map[" + string.Join(", ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmt(x));
            return string.Join(", ", parts);
        }
        if (v is string s) return "\"" + s.Replace("\"", "\\\"") + "\"";
        if (v is bool b) return b ? "true" : "false";
        return Convert.ToString(v);
    }
    static string _fmtStr(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmtStr(x));
            return "[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmtStr(d[k]));
            return "map[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmtStr(x));
            return string.Join(" ", parts);
        }
        if (v is string s) return "\"" + s.Replace("\"", "\\\"") + "\"";
        if (v is bool b) return b ? "true" : "false";
        return Convert.ToString(v);
    }
    public static string _fmtTop(object v) {
        if (v is Array a && a.Length > 0 && a.GetValue(0) is Array) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        if (v is string s) return s;
        return _fmt(v);
    }
    static long WIDTH_0 = 10;
    static long HEIGHT_1 = 10;
    static long PREY_INITIAL_COUNT_2 = 20;
    static long PREY_REPRODUCTION_TIME_3 = 5;
    static long PREDATOR_INITIAL_COUNT_4 = 5;
    static long PREDATOR_REPRODUCTION_TIME_5 = 20;
    static long PREDATOR_INITIAL_ENERGY_6 = 15;
    static long PREDATOR_FOOD_VALUE_7 = 5;
    static long TYPE_PREY_8 = 0;
    static long TYPE_PREDATOR_9 = 1;
    static long seed_10 = 123456789;
    static long[][] board_24 = Program.create_board();
    static long[][] entities_25 = new long[][]{};
    static long[] dr_32 = new long[]{-1, 0, 1, 0};
    static long[] dc_33 = new long[]{0, 1, 0, -1};
    public static long rand() {
        seed_10 = (((seed_10 * 1103515245) + 12345) % 2147483648L);
        return seed_10;
    }

    public static long rand_range(long max_11) {
        return (Program.rand() % max_11);
    }

    public static long[] shuffle(long[] list_int_12) {
        long i_13 = (list_int_12.Length - 1);
        while ((i_13 > 0)) {
            long j_14 = Program.rand_range((i_13 + 1));
            long tmp_15 = list_int_12[(int)(i_13)];
            list_int_12[i_13] = list_int_12[(int)(j_14)];
            list_int_12[j_14] = tmp_15;
            i_13 = (i_13 - 1);
        };
        return list_int_12;
    }

    public static long[][] create_board() {
        long[][] board_16 = new long[][]{};
        long r_17 = 0;
        while ((r_17 < HEIGHT_1)) {
            long[] row_18 = new long[]{};
            long c_19 = 0;
            while ((c_19 < WIDTH_0)) {
                row_18 = (Enumerable.ToArray(Enumerable.Append(row_18, 0)));
                c_19 = (c_19 + 1);
            }
            board_16 = (Enumerable.ToArray(Enumerable.Append(board_16, row_18)));
            r_17 = (r_17 + 1);
        };
        return board_16;
    }

    public static long[] create_prey(long r_20, long c_21) {
        return new long[]{TYPE_PREY_8, r_20, c_21, PREY_REPRODUCTION_TIME_3, 0, 1};
    }

    public static long[] create_predator(long r_22, long c_23) {
        return new long[]{TYPE_PREDATOR_9, r_22, c_23, PREDATOR_REPRODUCTION_TIME_5, PREDATOR_INITIAL_ENERGY_6, 1};
    }

    public static bool empty_cell(long r_26, long c_27) {
        return (board_24[(int)(r_26)][(int)(c_27)] == 0);
    }

    public static void add_entity(long typ_28) {
        while (true) {
            long r_29 = Program.rand_range(HEIGHT_1);
            long c_30 = Program.rand_range(WIDTH_0);
            if (Program.empty_cell(r_29, c_30)) {
                if ((typ_28 == TYPE_PREY_8)) {
                    board_24[(int)(r_29)][c_30] = 1;
                    entities_25 = (Enumerable.ToArray(Enumerable.Append(entities_25, Program.create_prey(r_29, c_30))));
                } else {
                    board_24[(int)(r_29)][c_30] = 2;
                    entities_25 = (Enumerable.ToArray(Enumerable.Append(entities_25, Program.create_predator(r_29, c_30))));
                }
                return;
            }
        };
    }

    public static void setup() {
        long i_31 = 0;
        while ((i_31 < PREY_INITIAL_COUNT_2)) {
            Program.add_entity(TYPE_PREY_8);
            i_31 = (i_31 + 1);
        };
        i_31 = 0;
        while ((i_31 < PREDATOR_INITIAL_COUNT_4)) {
            Program.add_entity(TYPE_PREDATOR_9);
            i_31 = (i_31 + 1);
        };
    }

    public static bool inside(long r_34, long c_35) {
        return ((((r_34 >= 0) && (r_34 < HEIGHT_1)) && (c_35 >= 0)) && (c_35 < WIDTH_0));
    }

    public static long find_prey(long r_36, long c_37) {
        long i_38 = 0;
        while ((i_38 < entities_25.Length)) {
            long[] e_39 = entities_25[(int)(i_38)];
            if (((((e_39[(int)(5)] == 1) && (e_39[(int)(0)] == TYPE_PREY_8)) && (e_39[(int)(1)] == r_36)) && (e_39[(int)(2)] == c_37))) {
                return i_38;
            }
            i_38 = (i_38 + 1);
        };
        return -1;
    }

    public static void step_world() {
        long i_40 = 0;
        while ((i_40 < entities_25.Length)) {
            long[] e_41 = entities_25[(int)(i_40)];
            if ((e_41[(int)(5)] == 0)) {
                i_40 = (i_40 + 1);
                continue;
            }
            long typ_42 = e_41[(int)(0)];
            long row_43 = e_41[(int)(1)];
            long col_44 = e_41[(int)(2)];
            long repro_45 = e_41[(int)(3)];
            long energy_46 = e_41[(int)(4)];
            long[] dirs_47 = new long[]{0, 1, 2, 3};
            dirs_47 = Program.shuffle(dirs_47);
            bool moved_48 = false;
            long old_r_49 = row_43;
            long old_c_50 = col_44;
            if ((typ_42 == TYPE_PREDATOR_9)) {
                long j_51 = 0;
                bool ate_52 = false;
                while ((j_51 < 4)) {
                    long d_53 = dirs_47[(int)(j_51)];
                    long nr_54 = (row_43 + dr_32[(int)(d_53)]);
                    long nc_55 = (col_44 + dc_33[(int)(d_53)]);
                    if ((Program.inside(nr_54, nc_55) && (board_24[(int)(nr_54)][(int)(nc_55)] == 1))) {
                        long prey_index_56 = Program.find_prey(nr_54, nc_55);
                        if ((prey_index_56 >= 0)) {
                            entities_25[(int)(prey_index_56)][5] = 0;
                        }
                        board_24[(int)(nr_54)][nc_55] = 2;
                        board_24[(int)(row_43)][col_44] = 0;
                        e_41[1] = nr_54;
                        e_41[2] = nc_55;
                        e_41[4] = ((energy_46 + PREDATOR_FOOD_VALUE_7) - 1);
                        moved_48 = true;
                        ate_52 = true;
                        break;
                    }
                    j_51 = (j_51 + 1);
                }
                if ((!ate_52)) {
                    j_51 = 0;
                    while ((j_51 < 4)) {
                        long d_57 = dirs_47[(int)(j_51)];
                        long nr_58 = (row_43 + dr_32[(int)(d_57)]);
                        long nc_59 = (col_44 + dc_33[(int)(d_57)]);
                        if ((Program.inside(nr_58, nc_59) && (board_24[(int)(nr_58)][(int)(nc_59)] == 0))) {
                            board_24[(int)(nr_58)][nc_59] = 2;
                            board_24[(int)(row_43)][col_44] = 0;
                            e_41[1] = nr_58;
                            e_41[2] = nc_59;
                            moved_48 = true;
                            break;
                        }
                        j_51 = (j_51 + 1);
                    }
                    e_41[4] = (energy_46 - 1);
                }
                if ((e_41[(int)(4)] <= 0)) {
                    e_41[5] = 0;
                    board_24[(int)(e_41[(int)(1)])][e_41[(int)(2)]] = 0;
                }
            } else {
                long j_60 = 0;
                while ((j_60 < 4)) {
                    long d_61 = dirs_47[(int)(j_60)];
                    long nr_62 = (row_43 + dr_32[(int)(d_61)]);
                    long nc_63 = (col_44 + dc_33[(int)(d_61)]);
                    if ((Program.inside(nr_62, nc_63) && (board_24[(int)(nr_62)][(int)(nc_63)] == 0))) {
                        board_24[(int)(nr_62)][nc_63] = 1;
                        board_24[(int)(row_43)][col_44] = 0;
                        e_41[1] = nr_62;
                        e_41[2] = nc_63;
                        moved_48 = true;
                        break;
                    }
                    j_60 = (j_60 + 1);
                }
            }
            if ((e_41[(int)(5)] == 1)) {
                if ((moved_48 && (repro_45 <= 0))) {
                    if ((typ_42 == TYPE_PREY_8)) {
                        board_24[(int)(old_r_49)][old_c_50] = 1;
                        entities_25 = (Enumerable.ToArray(Enumerable.Append(entities_25, Program.create_prey(old_r_49, old_c_50))));
                        e_41[3] = PREY_REPRODUCTION_TIME_3;
                    } else {
                        board_24[(int)(old_r_49)][old_c_50] = 2;
                        entities_25 = (Enumerable.ToArray(Enumerable.Append(entities_25, Program.create_predator(old_r_49, old_c_50))));
                        e_41[3] = PREDATOR_REPRODUCTION_TIME_5;
                    }
                } else {
                    e_41[3] = (repro_45 - 1);
                }
            }
            i_40 = (i_40 + 1);
        };
        long[][] alive_64 = new long[][]{};
        long k_65 = 0;
        while ((k_65 < entities_25.Length)) {
            long[] e2_66 = entities_25[(int)(k_65)];
            if ((e2_66[(int)(5)] == 1)) {
                alive_64 = (Enumerable.ToArray(Enumerable.Append(alive_64, e2_66)));
            }
            k_65 = (k_65 + 1);
        };
        entities_25 = alive_64;
    }

    public static long count_entities(long typ_67) {
        long cnt_68 = 0;
        long i_69 = 0;
        while ((i_69 < entities_25.Length)) {
            if (((entities_25[(int)(i_69)][(int)(0)] == typ_67) && (entities_25[(int)(i_69)][(int)(5)] == 1))) {
                cnt_68 = (cnt_68 + 1);
            }
            i_69 = (i_69 + 1);
        };
        return cnt_68;
    }

    static void Main() {
        {
            var __memStart = _mem();
            var __start = _now();
            Program.setup();
            long t_70 = 0;
            while ((t_70 < 10)) {
                Program.step_world();
                t_70 = (t_70 + 1);
            }
            Console.WriteLine(Program._fmtTop(("Prey: " + _fmtStr(Program.count_entities(TYPE_PREY_8)))));
            Console.WriteLine(Program._fmtTop(("Predators: " + _fmtStr(Program.count_entities(TYPE_PREDATOR_9)))));
            var __end = _now();
            var __memEnd = _mem();
            var __dur = (__end - __start);
            if (__dur <= 0) __dur = 1;
            var __memDiff = __memEnd - __memStart;
            if (__memDiff <= 0) __memDiff = __memEnd;
            Console.WriteLine("{\"name\":\"main\",\"duration_us\":" + __dur + ",\"memory_bytes\":" + __memDiff + "}");
        }
    }
}
