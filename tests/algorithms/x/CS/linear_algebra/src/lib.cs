// Generated by Mochi 0.10.60 on 2025-08-07 16:29 +0700
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using System.Numerics;
using System.Collections;

class Vector {
    public double[] components;
    public override string ToString() => $"Vector {{components = {components}}}";
}
class Matrix {
    public double[][] data;
    public long width;
    public long height;
    public override string ToString() => $"Matrix {{data = {data}, width = {width}, height = {height}}}";
}
class Program {
    static bool seededNow = false;
    static long nowSeed = 0;
    static long _now() {
        if (!seededNow) {
            var s = Environment.GetEnvironmentVariable("MOCHI_NOW_SEED");
            if (long.TryParse(s, out var v)) {
                nowSeed = v;
                seededNow = true;
            }
        }
        if (seededNow) {
            nowSeed = unchecked(nowSeed * 1664525 + 1013904223);
            nowSeed %= 9223372036854775783L;
            if (nowSeed < 0) nowSeed += 9223372036854775783L;
            return nowSeed;
        }
        return DateTime.UtcNow.Ticks / 100;
    }
    static long _mem() {
        return GC.GetTotalAllocatedBytes(true);
    }
    static long _len(object v) {
        if (v is Array a) return a.Length;
        if (v is string s) return s.Length;
        if (v is System.Collections.ICollection c) return c.Count;
        return Convert.ToString(v).Length;
    }
    static long _mod(long a, long b) {
        if (b == 0) return 0;
        var r = a % b;
        if ((r < 0 && b > 0) || (r > 0 && b < 0)) r += b;
        return r;
    }
    static string _substr(string s, long start, long end) {
        if (start < 0) start = 0;
        if (end < 0) end = 0;
        if (start > s.Length) start = s.Length;
        if (end > s.Length) end = s.Length;
        if (start > end) start = end;
        return s.Substring((int)start, (int)(end - start));
    }
    static string _fmt(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return "[" + string.Join(", ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmt(d[k]));
            return "map[" + string.Join(", ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmt(x));
            return string.Join(", ", parts);
        }
        if (v is string s) return "\"" + s.Replace("\"", "\\\"") + "\"";
        if (v is bool b) return b ? "true" : "false";
        return Convert.ToString(v);
    }
    static string _fmtStr(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmtStr(x));
            return "[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmtStr(d[k]));
            return "map[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmtStr(x));
            return string.Join(" ", parts);
        }
        if (v is string s) return "\"" + s.Replace("\"", "\\\"") + "\"";
        if (v is bool b) return b ? "true" : "false";
        return Convert.ToString(v);
    }
    public static string _fmtTop(object v) {
        if (v is Array a && a.Length > 0 && a.GetValue(0) is Array) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        if (v is string s) return s;
        return _fmt(v);
    }
    static double PI_0 = 3.141592653589793;
    static long seed_1 = 123456789;
    public static long rand() {
        seed_1 = _mod(((seed_1 * 1103515245) + 12345), 2147483648L);
        return seed_1;
    }

    public static long random_int(long a_2, long b_3) {
        long r_4 = _mod(Program.rand(), ((b_3 - a_2) + 1));
        return (a_2 + r_4);
    }

    public static double sqrtApprox(double x_5) {
        if ((x_5 <= 0.0)) {
            return 0.0;
        };
        double guess_6 = x_5;
        long i_7 = 0;
        while ((i_7 < 20)) {
            guess_6 = ((guess_6 + (x_5 / guess_6)) / 2.0);
            i_7 = (i_7 + 1);
        };
        return guess_6;
    }

    public static double arcsin_taylor(double x_8) {
        double term_9 = x_8;
        double sum_10 = x_8;
        long n_11 = 1;
        while ((n_11 < 10)) {
            double num_12 = ((((((2.0 * Convert.ToDouble(n_11)) - 1.0) * ((2.0 * Convert.ToDouble(n_11)) - 1.0)) * x_8) * x_8) * term_9);
            double den_13 = ((2.0 * Convert.ToDouble(n_11)) * ((2.0 * Convert.ToDouble(n_11)) + 1.0));
            term_9 = (num_12 / den_13);
            sum_10 = (sum_10 + term_9);
            n_11 = (n_11 + 1);
        };
        return sum_10;
    }

    public static double acos_taylor(double x_14) {
        return ((PI_0 / 2.0) - Program.arcsin_taylor(x_14));
    }

    public static long vector_len(Vector v_15) {
        return v_15.components.Length;
    }

    public static string vector_to_string(Vector v_16) {
        string s_17 = "(";
        long i_18 = 0;
        while ((i_18 < v_16.components.Length)) {
            s_17 = (s_17 + _fmtStr(v_16.components[(int)(i_18)]));
            if ((i_18 < (v_16.components.Length - 1))) {
                s_17 = (s_17 + ",");
            }
            i_18 = (i_18 + 1);
        };
        s_17 = (s_17 + ")");
        return s_17;
    }

    public static Vector vector_add(Vector a_19, Vector b_20) {
        long size_21 = Program.vector_len(a_19);
        if ((size_21 != Program.vector_len(b_20))) {
            return new Vector{components = new double[]{}};
        };
        double[] res_22 = new double[]{};
        long i_23 = 0;
        while ((i_23 < size_21)) {
            res_22 = (Enumerable.ToArray(Enumerable.Append<double>(res_22, (a_19.components[(int)(i_23)] + b_20.components[(int)(i_23)]))));
            i_23 = (i_23 + 1);
        };
        return new Vector{components = res_22};
    }

    public static Vector vector_sub(Vector a_24, Vector b_25) {
        long size_26 = Program.vector_len(a_24);
        if ((size_26 != Program.vector_len(b_25))) {
            return new Vector{components = new double[]{}};
        };
        double[] res_27 = new double[]{};
        long i_28 = 0;
        while ((i_28 < size_26)) {
            res_27 = (Enumerable.ToArray(Enumerable.Append<double>(res_27, (a_24.components[(int)(i_28)] - b_25.components[(int)(i_28)]))));
            i_28 = (i_28 + 1);
        };
        return new Vector{components = res_27};
    }

    public static bool vector_eq(Vector a_29, Vector b_30) {
        if ((Program.vector_len(a_29) != Program.vector_len(b_30))) {
            return false;
        };
        long i_31 = 0;
        while ((i_31 < Program.vector_len(a_29))) {
            if ((a_29.components[(int)(i_31)] != b_30.components[(int)(i_31)])) {
                return false;
            }
            i_31 = (i_31 + 1);
        };
        return true;
    }

    public static Vector vector_mul_scalar(Vector v_32, double s_33) {
        double[] res_34 = new double[]{};
        long i_35 = 0;
        while ((i_35 < Program.vector_len(v_32))) {
            res_34 = (Enumerable.ToArray(Enumerable.Append<double>(res_34, (v_32.components[(int)(i_35)] * s_33))));
            i_35 = (i_35 + 1);
        };
        return new Vector{components = res_34};
    }

    public static double vector_dot(Vector a_36, Vector b_37) {
        long size_38 = Program.vector_len(a_36);
        if ((size_38 != Program.vector_len(b_37))) {
            return 0.0;
        };
        double sum_39 = 0.0;
        long i_40 = 0;
        while ((i_40 < size_38)) {
            sum_39 = (sum_39 + (a_36.components[(int)(i_40)] * b_37.components[(int)(i_40)]));
            i_40 = (i_40 + 1);
        };
        return sum_39;
    }

    public static Vector vector_copy(Vector v_41) {
        double[] res_42 = new double[]{};
        long i_43 = 0;
        while ((i_43 < Program.vector_len(v_41))) {
            res_42 = (Enumerable.ToArray(Enumerable.Append<double>(res_42, v_41.components[(int)(i_43)])));
            i_43 = (i_43 + 1);
        };
        return new Vector{components = res_42};
    }

    public static double vector_component(Vector v_44, long idx_45) {
        return v_44.components[(int)(idx_45)];
    }

    public static Vector vector_change_component(Vector v_46, long pos_47, double value_48) {
        double[] comps_49 = v_46.components;
        comps_49[pos_47] = value_48;
        return new Vector{components = comps_49};
    }

    public static double vector_euclidean_length(Vector v_50) {
        double sum_51 = 0.0;
        long i_52 = 0;
        while ((i_52 < v_50.components.Length)) {
            sum_51 = (sum_51 + (v_50.components[(int)(i_52)] * v_50.components[(int)(i_52)]));
            i_52 = (i_52 + 1);
        };
        double result_53 = Program.sqrtApprox(sum_51);
        return result_53;
    }

    public static double vector_angle(Vector a_54, Vector b_55, bool deg_56) {
        double num_57 = Program.vector_dot(a_54, b_55);
        double den_58 = (Program.vector_euclidean_length(a_54) * Program.vector_euclidean_length(b_55));
        double ang_59 = Program.acos_taylor((num_57 / den_58));
        if (deg_56) {
            ang_59 = ((ang_59 * 180.0) / PI_0);
        };
        return ang_59;
    }

    public static Vector zero_vector(long d_60) {
        double[] res_61 = new double[]{};
        long i_62 = 0;
        while ((i_62 < d_60)) {
            res_61 = (Enumerable.ToArray(Enumerable.Append<double>(res_61, 0.0)));
            i_62 = (i_62 + 1);
        };
        return new Vector{components = res_61};
    }

    public static Vector unit_basis_vector(long d_63, long pos_64) {
        double[] res_65 = new double[]{};
        long i_66 = 0;
        while ((i_66 < d_63)) {
            if ((i_66 == pos_64)) {
                res_65 = (Enumerable.ToArray(Enumerable.Append<double>(res_65, 1.0)));
            } else {
                res_65 = (Enumerable.ToArray(Enumerable.Append<double>(res_65, 0.0)));
            }
            i_66 = (i_66 + 1);
        };
        return new Vector{components = res_65};
    }

    public static Vector axpy(double s_67, Vector x_68, Vector y_69) {
        return Program.vector_add(Program.vector_mul_scalar(x_68, s_67), y_69);
    }

    public static Vector random_vector(long n_70, long a_71, long b_72) {
        double[] res_73 = new double[]{};
        long i_74 = 0;
        while ((i_74 < n_70)) {
            res_73 = (Enumerable.ToArray(Enumerable.Append<double>(res_73, Convert.ToDouble(Program.random_int(a_71, b_72)))));
            i_74 = (i_74 + 1);
        };
        return new Vector{components = res_73};
    }

    public static string matrix_to_string(Matrix m_75) {
        string ans_76 = "";
        long i_77 = 0;
        while ((i_77 < m_75.height)) {
            ans_76 = (ans_76 + "|");
            long j_78 = 0;
            while ((j_78 < m_75.width)) {
                ans_76 = (ans_76 + _fmtStr(m_75.data[(int)(i_77)][(int)(j_78)]));
                if ((j_78 < (m_75.width - 1))) {
                    ans_76 = (ans_76 + ",");
                }
                j_78 = (j_78 + 1);
            }
            ans_76 = (ans_76 + "|\n");
            i_77 = (i_77 + 1);
        };
        return ans_76;
    }

    public static Matrix matrix_add(Matrix a_79, Matrix b_80) {
        if (((a_79.width != b_80.width) || (a_79.height != b_80.height))) {
            return new Matrix{data = new double[][]{}, width = 0, height = 0};
        };
        double[][] mat_81 = new double[][]{};
        long i_82 = 0;
        while ((i_82 < a_79.height)) {
            double[] row_83 = new double[]{};
            long j_84 = 0;
            while ((j_84 < a_79.width)) {
                row_83 = (Enumerable.ToArray(Enumerable.Append<double>(row_83, (a_79.data[(int)(i_82)][(int)(j_84)] + b_80.data[(int)(i_82)][(int)(j_84)]))));
                j_84 = (j_84 + 1);
            }
            mat_81 = (Enumerable.ToArray(Enumerable.Append<double[]>(mat_81, row_83)));
            i_82 = (i_82 + 1);
        };
        return new Matrix{data = mat_81, width = a_79.width, height = a_79.height};
    }

    public static Matrix matrix_sub(Matrix a_85, Matrix b_86) {
        if (((a_85.width != b_86.width) || (a_85.height != b_86.height))) {
            return new Matrix{data = new double[][]{}, width = 0, height = 0};
        };
        double[][] mat_87 = new double[][]{};
        long i_88 = 0;
        while ((i_88 < a_85.height)) {
            double[] row_89 = new double[]{};
            long j_90 = 0;
            while ((j_90 < a_85.width)) {
                row_89 = (Enumerable.ToArray(Enumerable.Append<double>(row_89, (a_85.data[(int)(i_88)][(int)(j_90)] - b_86.data[(int)(i_88)][(int)(j_90)]))));
                j_90 = (j_90 + 1);
            }
            mat_87 = (Enumerable.ToArray(Enumerable.Append<double[]>(mat_87, row_89)));
            i_88 = (i_88 + 1);
        };
        return new Matrix{data = mat_87, width = a_85.width, height = a_85.height};
    }

    public static Vector matrix_mul_vector(Matrix m_91, Vector v_92) {
        if ((v_92.components.Length != m_91.width)) {
            return new Vector{components = new double[]{}};
        };
        Vector res_93 = Program.zero_vector(m_91.height);
        long i_94 = 0;
        while ((i_94 < m_91.height)) {
            double sum_95 = 0.0;
            long j_96 = 0;
            while ((j_96 < m_91.width)) {
                sum_95 = (sum_95 + (m_91.data[(int)(i_94)][(int)(j_96)] * v_92.components[(int)(j_96)]));
                j_96 = (j_96 + 1);
            }
            res_93 = Program.vector_change_component(res_93, i_94, sum_95);
            i_94 = (i_94 + 1);
        };
        return res_93;
    }

    public static Matrix matrix_mul_scalar(Matrix m_97, double s_98) {
        double[][] mat_99 = new double[][]{};
        long i_100 = 0;
        while ((i_100 < m_97.height)) {
            double[] row_101 = new double[]{};
            long j_102 = 0;
            while ((j_102 < m_97.width)) {
                row_101 = (Enumerable.ToArray(Enumerable.Append<double>(row_101, (m_97.data[(int)(i_100)][(int)(j_102)] * s_98))));
                j_102 = (j_102 + 1);
            }
            mat_99 = (Enumerable.ToArray(Enumerable.Append<double[]>(mat_99, row_101)));
            i_100 = (i_100 + 1);
        };
        return new Matrix{data = mat_99, width = m_97.width, height = m_97.height};
    }

    public static double matrix_component(Matrix m_103, long x_104, long y_105) {
        return m_103.data[(int)(x_104)][(int)(y_105)];
    }

    public static Matrix matrix_change_component(Matrix m_106, long x_107, long y_108, double value_109) {
        double[][] data_110 = m_106.data;
        data_110[(int)(x_107)][y_108] = value_109;
        return new Matrix{data = data_110, width = m_106.width, height = m_106.height};
    }

    public static double matrix_minor(Matrix m_111, long x_112, long y_113) {
        if ((m_111.height != m_111.width)) {
            return 0.0;
        };
        double[][] minor_114 = new double[][]{};
        long i_115 = 0;
        while ((i_115 < m_111.height)) {
            if ((i_115 != x_112)) {
                double[] row_116 = new double[]{};
                long j_117 = 0;
                while ((j_117 < m_111.width)) {
                    if ((j_117 != y_113)) {
                        row_116 = (Enumerable.ToArray(Enumerable.Append<double>(row_116, m_111.data[(int)(i_115)][(int)(j_117)])));
                    }
                    j_117 = (j_117 + 1);
                }
                minor_114 = (Enumerable.ToArray(Enumerable.Append<double[]>(minor_114, row_116)));
            }
            i_115 = (i_115 + 1);
        };
        Matrix sub_118 = new Matrix{data = minor_114, width = (m_111.width - 1), height = (m_111.height - 1)};
        return Program.matrix_determinant(sub_118);
    }

    public static double matrix_cofactor(Matrix m_119, long x_120, long y_121) {
        double sign_122 = ((_mod((x_120 + y_121), 2) == 0) ? 1.0 : -1.0);
        return (sign_122 * Program.matrix_minor(m_119, x_120, y_121));
    }

    public static double matrix_determinant(Matrix m_123) {
        if ((m_123.height != m_123.width)) {
            return 0.0;
        };
        if ((m_123.height == 0)) {
            return 0.0;
        };
        if ((m_123.height == 1)) {
            return m_123.data[(int)(0)][(int)(0)];
        };
        if ((m_123.height == 2)) {
            return ((m_123.data[(int)(0)][(int)(0)] * m_123.data[(int)(1)][(int)(1)]) - (m_123.data[(int)(0)][(int)(1)] * m_123.data[(int)(1)][(int)(0)]));
        };
        double sum_124 = 0.0;
        long y_125 = 0;
        while ((y_125 < m_123.width)) {
            sum_124 = (sum_124 + (m_123.data[(int)(0)][(int)(y_125)] * Program.matrix_cofactor(m_123, 0, y_125)));
            y_125 = (y_125 + 1);
        };
        return sum_124;
    }

    public static Matrix square_zero_matrix(long n_126) {
        double[][] mat_127 = new double[][]{};
        long i_128 = 0;
        while ((i_128 < n_126)) {
            double[] row_129 = new double[]{};
            long j_130 = 0;
            while ((j_130 < n_126)) {
                row_129 = (Enumerable.ToArray(Enumerable.Append<double>(row_129, 0.0)));
                j_130 = (j_130 + 1);
            }
            mat_127 = (Enumerable.ToArray(Enumerable.Append<double[]>(mat_127, row_129)));
            i_128 = (i_128 + 1);
        };
        return new Matrix{data = mat_127, width = n_126, height = n_126};
    }

    public static Matrix random_matrix(long w_131, long h_132, long a_133, long b_134) {
        double[][] mat_135 = new double[][]{};
        long i_136 = 0;
        while ((i_136 < h_132)) {
            double[] row_137 = new double[]{};
            long j_138 = 0;
            while ((j_138 < w_131)) {
                row_137 = (Enumerable.ToArray(Enumerable.Append<double>(row_137, Convert.ToDouble(Program.random_int(a_133, b_134)))));
                j_138 = (j_138 + 1);
            }
            mat_135 = (Enumerable.ToArray(Enumerable.Append<double[]>(mat_135, row_137)));
            i_136 = (i_136 + 1);
        };
        return new Matrix{data = mat_135, width = w_131, height = h_132};
    }

    public static void main() {
        Vector v1_139 = new Vector{components = new double[]{1.0, 2.0, 3.0}};
        Vector v2_140 = new Vector{components = new double[]{4.0, 5.0, 6.0}};
        Console.WriteLine(Program._fmtTop(Program.vector_to_string(Program.vector_add(v1_139, v2_140))));
        Console.WriteLine(Program._fmtTop(_fmtStr(Program.vector_dot(v1_139, v2_140))));
        Console.WriteLine(Program._fmtTop(_fmtStr(Program.vector_euclidean_length(v1_139))));
        Matrix m_141 = new Matrix{data = new double[][]{new double[]{1.0, 2.0}, new double[]{3.0, 4.0}}, width = 2, height = 2};
        Console.WriteLine(Program._fmtTop(_fmtStr(Program.matrix_determinant(m_141))));
    }

    static void Main() {
        {
            var __memStart = _mem();
            var __start = _now();
            Program.main();
            var __end = _now();
            var __memEnd = _mem();
            var __dur = (__end - __start);
            if (__dur <= 0) __dur = 1;
            var __memDiff = __memEnd - __memStart;
            if (__memDiff <= 0) __memDiff = __memEnd;
            Console.WriteLine("{\"name\":\"main\",\"duration_us\":" + __dur + ",\"memory_bytes\":" + __memDiff + "}");
        }
    }
}
