// Generated by Mochi 0.10.61 on 2025-08-09 10:14 +0700
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using System.Numerics;
using System.Collections;

class Program {
    static bool seededNow = false;
    static long nowSeed = 0;
    static long _now() {
        if (!seededNow) {
            var s = Environment.GetEnvironmentVariable("MOCHI_NOW_SEED");
            if (long.TryParse(s, out var v)) {
                nowSeed = v;
                seededNow = true;
            }
        }
        if (seededNow) {
            nowSeed = unchecked(nowSeed * 1664525 + 1013904223);
            nowSeed %= 9223372036854775783L;
            if (nowSeed < 0) nowSeed += 9223372036854775783L;
            return nowSeed;
        }
        return DateTime.UtcNow.Ticks / 100;
    }
    static long _mem() {
        return GC.GetTotalAllocatedBytes(true);
    }
    static long _len(object v) {
        if (v is Array a) return a.Length;
        if (v is string s) return s.Length;
        if (v is System.Collections.ICollection c) return c.Count;
        return Convert.ToString(v).Length;
    }
    static string _substr(string s, long start, long end) {
        if (start < 0) start = 0;
        if (end < 0) end = 0;
        if (start > s.Length) start = s.Length;
        if (end > s.Length) end = s.Length;
        if (start > end) start = end;
        return s.Substring((int)start, (int)(end - start));
    }
    static string _fmt(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return "[" + string.Join(", ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmt(d[k]));
            return "map[" + string.Join(", ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmt(x));
            return string.Join(", ", parts);
        }
        if (v is string s) return "\"" + s.Replace("\"", "\\\"") + "\"";
        if (v is bool b) return b ? "true" : "false";
        return Convert.ToString(v);
    }
    static string _fmtStr(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmtStr(x));
            return "[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmtStr(d[k]));
            return "map[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmtStr(x));
            return string.Join(" ", parts);
        }
        if (v is string s) return "\"" + s.Replace("\"", "\\\"") + "\"";
        if (v is bool b) return b ? "true" : "false";
        return Convert.ToString(v);
    }
    public static string _fmtTop(object v) {
        if (v is Array a && a.Length > 0 && a.GetValue(0) is Array) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        if (v is string s) return s;
        return _fmt(v);
    }
    static long[][] img_40 = new long[][]{new long[]{1, 1, 1, 1, 1}, new long[]{1, 255, 255, 255, 1}, new long[]{1, 255, 0, 255, 1}, new long[]{1, 255, 255, 255, 1}, new long[]{1, 1, 1, 1, 1}};
    static long[][] corners_41 = Program.harris(img_40, 0.04, 3, 1e10);
    public static double[][] zeros(long h_0, long w_1) {
        double[][] m_2 = new double[][]{};
        long y_3 = 0;
        while ((y_3 < h_0)) {
            double[] row_4 = new double[]{};
            long x_5 = 0;
            while ((x_5 < w_1)) {
                row_4 = (Enumerable.ToArray(Enumerable.Append<double>(row_4, 0.0)));
                x_5 = (x_5 + 1);
            }
            m_2 = (Enumerable.ToArray(Enumerable.Append<double[]>(m_2, row_4)));
            y_3 = (y_3 + 1);
        };
        return m_2;
    }

    public static double[][][] gradient(long[][] img_6) {
        long h_7 = img_6.Length;
        long w_8 = img_6[(int)(0 < 0 ? img_6.Length + (0) : 0)].Length;
        double[][] dx_9 = Program.zeros(h_7, w_8);
        double[][] dy_10 = Program.zeros(h_7, w_8);
        long y_11 = 1;
        while ((y_11 < (h_7 - 1))) {
            long x_12 = 1;
            while ((x_12 < (w_8 - 1))) {
                dx_9[(int)(y_11 < 0 ? dx_9.Length + (y_11) : y_11)][(int)(x_12)] = (Convert.ToDouble(img_6[(int)(y_11 < 0 ? img_6.Length + (y_11) : y_11)][(int)((x_12 + 1) < 0 ? img_6[(int)(y_11 < 0 ? img_6.Length + (y_11) : y_11)].Length + ((x_12 + 1)) : (x_12 + 1))]) - Convert.ToDouble(img_6[(int)(y_11 < 0 ? img_6.Length + (y_11) : y_11)][(int)((x_12 - 1) < 0 ? img_6[(int)(y_11 < 0 ? img_6.Length + (y_11) : y_11)].Length + ((x_12 - 1)) : (x_12 - 1))]));
                dy_10[(int)(y_11 < 0 ? dy_10.Length + (y_11) : y_11)][(int)(x_12)] = (Convert.ToDouble(img_6[(int)((y_11 + 1) < 0 ? img_6.Length + ((y_11 + 1)) : (y_11 + 1))][(int)(x_12 < 0 ? img_6[(int)((y_11 + 1) < 0 ? img_6.Length + ((y_11 + 1)) : (y_11 + 1))].Length + (x_12) : x_12)]) - Convert.ToDouble(img_6[(int)((y_11 - 1) < 0 ? img_6.Length + ((y_11 - 1)) : (y_11 - 1))][(int)(x_12 < 0 ? img_6[(int)((y_11 - 1) < 0 ? img_6.Length + ((y_11 - 1)) : (y_11 - 1))].Length + (x_12) : x_12)]));
                x_12 = (x_12 + 1);
            }
            y_11 = (y_11 + 1);
        };
        return (new double[][][]{dx_9, dy_10} as double[][][]) ?? new double[][][]{};
    }

    public static long[][] harris(long[][] img_13, double k_14, long window_15, double thresh_16) {
        long h_17 = img_13.Length;
        long w_18 = img_13[(int)(0 < 0 ? img_13.Length + (0) : 0)].Length;
        double[][][] grads_19 = Program.gradient(img_13);
        double[][] dx_20 = grads_19[(int)(0 < 0 ? grads_19.Length + (0) : 0)];
        double[][] dy_21 = grads_19[(int)(1 < 0 ? grads_19.Length + (1) : 1)];
        double[][] ixx_22 = Program.zeros(h_17, w_18);
        double[][] iyy_23 = Program.zeros(h_17, w_18);
        double[][] ixy_24 = Program.zeros(h_17, w_18);
        long y_25 = 0;
        while ((y_25 < h_17)) {
            long x_26 = 0;
            while ((x_26 < w_18)) {
                double gx_27 = dx_20[(int)(y_25 < 0 ? dx_20.Length + (y_25) : y_25)][(int)(x_26 < 0 ? dx_20[(int)(y_25 < 0 ? dx_20.Length + (y_25) : y_25)].Length + (x_26) : x_26)];
                double gy_28 = dy_21[(int)(y_25 < 0 ? dy_21.Length + (y_25) : y_25)][(int)(x_26 < 0 ? dy_21[(int)(y_25 < 0 ? dy_21.Length + (y_25) : y_25)].Length + (x_26) : x_26)];
                ixx_22[(int)(y_25 < 0 ? ixx_22.Length + (y_25) : y_25)][(int)(x_26)] = (gx_27 * gx_27);
                iyy_23[(int)(y_25 < 0 ? iyy_23.Length + (y_25) : y_25)][(int)(x_26)] = (gy_28 * gy_28);
                ixy_24[(int)(y_25 < 0 ? ixy_24.Length + (y_25) : y_25)][(int)(x_26)] = (gx_27 * gy_28);
                x_26 = (x_26 + 1);
            }
            y_25 = (y_25 + 1);
        };
        long offset_29 = (window_15 / 2);
        long[][] corners_30 = new long[][]{};
        y_25 = offset_29;
        while ((y_25 < (h_17 - offset_29))) {
            long x_31 = offset_29;
            while ((x_31 < (w_18 - offset_29))) {
                double wxx_32 = 0.0;
                double wyy_33 = 0.0;
                double wxy_34 = 0.0;
                long yy_35 = (y_25 - offset_29);
                while ((yy_35 <= (y_25 + offset_29))) {
                    long xx_36 = (x_31 - offset_29);
                    while ((xx_36 <= (x_31 + offset_29))) {
                        wxx_32 = (wxx_32 + ixx_22[(int)(yy_35 < 0 ? ixx_22.Length + (yy_35) : yy_35)][(int)(xx_36 < 0 ? ixx_22[(int)(yy_35 < 0 ? ixx_22.Length + (yy_35) : yy_35)].Length + (xx_36) : xx_36)]);
                        wyy_33 = (wyy_33 + iyy_23[(int)(yy_35 < 0 ? iyy_23.Length + (yy_35) : yy_35)][(int)(xx_36 < 0 ? iyy_23[(int)(yy_35 < 0 ? iyy_23.Length + (yy_35) : yy_35)].Length + (xx_36) : xx_36)]);
                        wxy_34 = (wxy_34 + ixy_24[(int)(yy_35 < 0 ? ixy_24.Length + (yy_35) : yy_35)][(int)(xx_36 < 0 ? ixy_24[(int)(yy_35 < 0 ? ixy_24.Length + (yy_35) : yy_35)].Length + (xx_36) : xx_36)]);
                        xx_36 = (xx_36 + 1);
                    }
                    yy_35 = (yy_35 + 1);
                }
                double det_37 = ((wxx_32 * wyy_33) - (wxy_34 * wxy_34));
                double trace_38 = (wxx_32 + wyy_33);
                double r_39 = (det_37 - (k_14 * (trace_38 * trace_38)));
                if ((r_39 > thresh_16)) {
                    corners_30 = (Enumerable.ToArray(Enumerable.Append<long[]>(corners_30, (new long[]{x_31, y_25} as long[]) ?? new long[]{})));
                }
                x_31 = (x_31 + 1);
            }
            y_25 = (y_25 + 1);
        };
        return corners_30;
    }

    static void Main() {
        {
            var __memStart = _mem();
            var __start = _now();
            Console.WriteLine(Program._fmtTop(corners_41));
            var __end = _now();
            var __memEnd = _mem();
            var __dur = (__end - __start);
            if (__dur <= 0) __dur = 1;
            var __memDiff = __memEnd - __memStart;
            if (__memDiff <= 0) __memDiff = __memEnd;
            Console.WriteLine("{\"name\":\"main\",\"duration_us\":" + __dur + ",\"memory_bytes\":" + __memDiff + "}");
        }
    }
}
