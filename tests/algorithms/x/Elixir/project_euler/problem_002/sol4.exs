# Code generated by Mochi transpiler 2025-08-12 12:29 +0700
defmodule Main do
  def solution(n) do
    try do
      if n <= 0 do
        raise("Parameter n must be greater than or equal to one.")
      end
      a = 1
      b = 2
      total = 0
      while_fun = fn while_fun, a, b, total ->
        if a <= n do
          {total} = if rem(a, 2) == 0 do
            total = total + a
            {total}
          else
            {total}
          end
          c = a + b
          a = b
          b = c
          while_fun.(while_fun, a, b, total)
        else
          {a, b, total}
        end
      end
      {a, b, total} = try do
          while_fun.(while_fun, a, b, total)
        catch
          {:break, {a, b, total}} -> {a, b, total}
        end

      throw {:return, total}
    catch
      {:return, val} -> val
    end
  end
  def main() do
    try do
      IO.puts(("solution() = " <> Kernel.inspect(solution(4000000))))
    catch
      {:return, val} -> val
    end
  end
end
Main.main()
