# Code generated by Mochi transpiler 2025-08-12 12:29 +0700
defmodule Main do
  def solution(n) do
    try do
      if n <= 1 do
        throw {:return, 0}
      end
      a = 0
      b = 2
      count = 0
      while_fun = fn while_fun, a, b, count ->
        if 4 * b + a <= n do
          next = 4 * b + a
          a = b
          b = next
          count = count + a
          while_fun.(while_fun, a, b, count)
        else
          {a, b, count}
        end
      end
      {a, b, count} = try do
          while_fun.(while_fun, a, b, count)
        catch
          {:break, {a, b, count}} -> {a, b, count}
        end

      throw {:return, count + b}
    catch
      {:return, val} -> val
    end
  end
  def main() do
    IO.puts(("solution() = " <> Kernel.inspect(solution(4000000))))
  end
end
Main.main()
