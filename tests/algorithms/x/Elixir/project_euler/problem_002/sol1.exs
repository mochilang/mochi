# Code generated by Mochi transpiler 2025-08-12 12:29 +0700
defmodule Main do
  def solution(n) do
    try do
      i = 1
      j = 2
      total = 0
      while_fun = fn while_fun, i, j, total ->
        if j <= n do
          {total} = if rem(j, 2) == 0 do
            total = total + j
            {total}
          else
            {total}
          end
          next = i + j
          i = j
          j = next
          while_fun.(while_fun, i, j, total)
        else
          {i, j, total}
        end
      end
      {i, j, total} = try do
          while_fun.(while_fun, i, j, total)
        catch
          {:break, {i, j, total}} -> {i, j, total}
        end

      throw {:return, total}
    catch
      {:return, val} -> val
    end
  end
  def main() do
    Process.put(:result, solution(4000000))
    IO.puts(("solution() = " <> Kernel.to_string(Process.get(:result))))
  end
end
Main.main()
