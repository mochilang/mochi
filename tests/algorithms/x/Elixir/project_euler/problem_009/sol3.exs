# Code generated by Mochi transpiler 2025-08-12 12:29 +0700
defmodule Main do
  def solution() do
    try do
      a = 1
      while_fun = fn while_fun, a ->
        if a < 999 do
          b = a
          while_fun_2 = fn while_fun_2, b ->
            if b < 999 do
              c = 1000 - a - b
              if a * a + b * b == c * c do
                throw {:return, a * b * c}
              end
              b = b + 1
              while_fun_2.(while_fun_2, b)
            else
              b
            end
          end
          b = try do
              while_fun_2.(while_fun_2, b)
            catch
              {:break, {b}} -> b
            end

          a = a + 1
          while_fun.(while_fun, a)
        else
          a
        end
      end
      a = try do
          while_fun.(while_fun, a)
        catch
          {:break, {a}} -> a
        end

      throw {:return, -1}
    catch
      {:return, val} -> val
    end
  end
  def main() do
    IO.puts(Kernel.inspect(solution()))
  end
end
Main.main()
