# Code generated by Mochi transpiler 2025-08-23 14:49 +0700
defmodule Main do
  @data_dir nil
  def solution(n) do
    try do
      total = 0
      i = 0
      while_fun = fn while_fun, i, total ->
        if i < n do
          total = if rem(i, 3) == 0 || rem(i, 5) == 0 do
            total = total + i
            total
          else
            total
          end
          i = i + 1
          while_fun.(while_fun, i, total)
        else
          {i, total}
        end
      end
      {_, total} = try do
          while_fun.(while_fun, i, total)
        catch
          {:break, {_, total}} -> {0, total}
        end

      throw {:return, total}
    catch
      {:return, val} -> val
    end
  end
  def main() do
    IO.puts(Kernel.inspect(solution(3)))
    IO.puts(Kernel.inspect(solution(4)))
    IO.puts(Kernel.inspect(solution(10)))
    IO.puts(Kernel.inspect(solution(600)))
  end
end
Main.main()
