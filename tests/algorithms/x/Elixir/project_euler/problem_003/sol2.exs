# Code generated by Mochi transpiler 2025-08-12 12:29 +0700
defmodule Main do
  def largest_prime_factor(n) do
    try do
      if n <= 0 do
        raise("Parameter n must be greater than or equal to one.")
      end
      num = n
      prime = 1
      i = 2
      while_fun = fn while_fun, i, num, prime ->
        if i * i <= num do
          while_fun_2 = fn while_fun_2, num, prime ->
            if rem(num, i) == 0 do
              prime = i
              num = div(num, i)
              while_fun_2.(while_fun_2, num, prime)
            else
              {num, prime}
            end
          end
          {num, prime} = try do
              while_fun_2.(while_fun_2, num, prime)
            catch
              {:break, {num, prime}} -> {num, prime}
            end

          i = i + 1
          while_fun.(while_fun, i, num, prime)
        else
          {i, num, prime}
        end
      end
      {i, num, prime} = try do
          while_fun.(while_fun, i, num, prime)
        catch
          {:break, {i, num, prime}} -> {i, num, prime}
        end

      {prime} = if num > 1 do
        prime = num
        {prime}
      else
        {prime}
      end
      throw {:return, prime}
    catch
      {:return, val} -> val
    end
  end
  def main() do
    try do
      IO.puts(Kernel.inspect(largest_prime_factor(600851475143)))
    catch
      {:return, val} -> val
    end
  end
end
Main.main()
