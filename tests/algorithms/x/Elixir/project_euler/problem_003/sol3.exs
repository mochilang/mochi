# Code generated by Mochi transpiler 2025-08-22 14:19 +0700
defmodule Main do
  def largest_prime_factor(n) do
    try do
      if n <= 1 do
        throw {:return, n}
      end
      i = 2
      ans = 0
      m = n
      if m == 2 do
        throw {:return, 2}
      end
      while_fun = fn while_fun, ans, i, m ->
        if m > 2 do
          while_fun_2 = fn while_fun_2, i ->
            if rem(m, i) != 0 do
              i = i + 1
              while_fun_2.(while_fun_2, i)
            else
              i
            end
          end
          _ = try do
              while_fun_2.(while_fun_2, i)
            catch
              {:break, {_}} -> 0
            end

          ans = i
          while_fun_3 = fn while_fun_3, m ->
            if rem(m, i) == 0 do
              m = div(m, i)
              while_fun_3.(while_fun_3, m)
            else
              m
            end
          end
          _ = try do
              while_fun_3.(while_fun_3, m)
            catch
              {:break, {_}} -> 0
            end

          i = i + 1
          while_fun.(while_fun, ans, i, m)
        else
          {ans, i, m}
        end
      end
      {ans, _, _} = try do
          while_fun.(while_fun, ans, i, m)
        catch
          {:break, {ans, _, _}} -> {ans, 0, 0}
        end

      throw {:return, ans}
    catch
      {:return, val} -> val
    end
  end
  def main() do
    IO.puts(Kernel.inspect(largest_prime_factor(13195)))
    IO.puts(Kernel.inspect(largest_prime_factor(10)))
    IO.puts(Kernel.inspect(largest_prime_factor(17)))
    IO.puts(Kernel.inspect(largest_prime_factor(600851475143)))
  end
end
Main.main()
