# Code generated by Mochi transpiler 2025-08-06 23:01 +0700
defmodule Main do
  def round_to_int(x) do
    try do
      throw {:return, ((if x >= 0.0, do: Kernel.trunc(x + 0.5), else: Kernel.trunc(x - 0.5)))}
    catch
      {:return, val} -> val
    end
  end
  def molarity_to_normality(nfactor, moles, volume) do
    try do
      throw {:return, round_to_int((moles / volume) * nfactor)}
    catch
      {:return, val} -> val
    end
  end
  def moles_to_pressure(volume, moles, temperature) do
    try do
      throw {:return, round_to_int((moles * 0.0821 * temperature) / volume)}
    catch
      {:return, val} -> val
    end
  end
  def moles_to_volume(pressure, moles, temperature) do
    try do
      throw {:return, round_to_int((moles * 0.0821 * temperature) / pressure)}
    catch
      {:return, val} -> val
    end
  end
  def pressure_and_volume_to_temperature(pressure, moles, volume) do
    try do
      throw {:return, round_to_int((pressure * volume) / (0.0821 * moles))}
    catch
      {:return, val} -> val
    end
  end
  def main() do
    IO.puts(Kernel.inspect(molarity_to_normality(2.0, 3.1, 0.31)))
    IO.puts(Kernel.inspect(molarity_to_normality(4.0, 11.4, 5.7)))
    IO.puts(Kernel.inspect(moles_to_pressure(0.82, 3.0, 300.0)))
    IO.puts(Kernel.inspect(moles_to_pressure(8.2, 5.0, 200.0)))
    IO.puts(Kernel.inspect(moles_to_volume(0.82, 3.0, 300.0)))
    IO.puts(Kernel.inspect(moles_to_volume(8.2, 5.0, 200.0)))
    IO.puts(Kernel.inspect(pressure_and_volume_to_temperature(0.82, 1.0, 2.0)))
    IO.puts(Kernel.inspect(pressure_and_volume_to_temperature(8.2, 5.0, 3.0)))
  end
end
Main.main()
