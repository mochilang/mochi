# Code generated by Mochi transpiler 2025-08-24 15:35 +0700
defmodule Main do
  @data_dir nil
  defp _bench_now() do
    System.monotonic_time(:microsecond)
  end
  defp _mem() do
    :erlang.process_info(self(), :memory) |> elem(1)
  end
  def pow10(exp) do
    try do
      result = 1.0
      result = if exp >= 0 do
        i = 0
        while_fun = fn while_fun, i, result ->
          if i < exp do
            result = result * 10.0
            i = i + 1
            while_fun.(while_fun, i, result)
          else
            {i, result}
          end
        end
        {_, result} = try do
            while_fun.(while_fun, i, result)
          catch
            {:break, {_, result}} -> {0, result}
          end

        result
      else
        i = 0
        while_fun_2 = fn while_fun_2, i, result ->
          if i < (0 - exp) do
            result = result / 10.0
            i = i + 1
            while_fun_2.(while_fun_2, i, result)
          else
            {i, result}
          end
        end
        {_, result} = try do
            while_fun_2.(while_fun_2, i, result)
          catch
            {:break, {_, result}} -> {0, result}
          end

        result
      end
      throw {:return, result}
    catch
      {:return, val} -> val
    end
  end
  def weight_conversion(from_type, to_type, value) do
    try do
      has_to = Map.has_key?(Process.get(:kilogram_chart), to_type)
      has_from = Map.has_key?(Process.get(:weight_type_chart), from_type)
      if has_to && has_from do
        throw {:return, value * Process.get(:kilogram_chart)[to_type] * Process.get(:weight_type_chart)[from_type]}
      end
      IO.puts("Invalid 'from_type' or 'to_type'")
      throw {:return, 0.0}
    catch
      {:return, val} -> val
    end
  end
  def main() do
    :erlang.garbage_collect()
    mem_start = _mem()
    t_start = _bench_now()
    Process.put(:kilogram_chart, %{"kilogram" => 1.0, "gram" => 1000.0, "milligram" => 1000000.0, "metric-ton" => 0.001, "long-ton" => 0.0009842073, "short-ton" => 0.0011023122, "pound" => 2.2046244202, "stone" => 0.1574731728, "ounce" => 35.273990723, "carrat" => 5000.0, "atomic-mass-unit" => 6.022136652 * pow10(26)})
    Process.put(:weight_type_chart, %{"kilogram" => 1.0, "gram" => 0.001, "milligram" => 0.000001, "metric-ton" => 1000.0, "long-ton" => 1016.04608, "short-ton" => 907.184, "pound" => 0.453592, "stone" => 6.35029, "ounce" => 0.0283495, "carrat" => 0.0002, "atomic-mass-unit" => 1.660540199 * pow10(-27)})
    IO.puts(Kernel.inspect(weight_conversion("kilogram", "gram", 1.0)))
    IO.puts(Kernel.inspect(weight_conversion("gram", "pound", 3.0)))
    IO.puts(Kernel.inspect(weight_conversion("ounce", "kilogram", 3.0)))
    mem_end = _mem()
    duration_us = max(_bench_now() - t_start, 1)
    :erlang.garbage_collect()
    mem_diff = abs(mem_end - mem_start)
    IO.puts("{\n  \"duration_us\": #{duration_us},\n  \"memory_bytes\": #{mem_diff},\n  \"name\": \"main\"\n}")
  end
end
Main.main()
