# Code generated by Mochi transpiler 2025-08-11 15:32 +0700
defmodule Main do
  defp _bench_now() do
    System.monotonic_time(:microsecond)
  end
  defp _mem() do
    :erlang.process_info(self(), :memory) |> elem(1)
  end
  def download_video(url) do
    try do
      request_url = (Process.get(:base_url) <> url)
      throw {:return, request_url}
    catch
      {:return, val} -> val
    end
  end
  Process.put(:base_url, "https://downloadgram.net/wp-json/wppress/video-downloader/video?url=")
  Process.put(:sample_url, "https://www.instagram.com/p/Example/")
  def main() do
    :erlang.garbage_collect()
    mem_start = _mem()
    t_start = _bench_now()
    Process.put(:link, download_video(Process.get(:sample_url)))
    IO.puts("Download link: #{Process.get(:link)}")
    mem_end = _mem()
    duration_us = max(_bench_now() - t_start, 1)
    :erlang.garbage_collect()
    mem_diff = abs(mem_end - mem_start)
    IO.puts("{\n  \"duration_us\": #{duration_us},\n  \"memory_bytes\": #{mem_diff},\n  \"name\": \"main\"\n}")
  end
end
Main.main()
