# Code generated by Mochi transpiler 2025-08-11 15:32 +0700
defmodule Main do
  defp _bench_now() do
    System.monotonic_time(:microsecond)
  end
  defp _mem() do
    :erlang.process_info(self(), :memory) |> elem(1)
  end
  defp _len(x) do
    cond do
      x == nil -> 0
      is_binary(x) -> String.length(x)
      true -> length(x)
    end
  end
  def rand() do
    try do
      Process.put(:seed, rem((Process.get(:seed) * 1103515245 + 12345), 2147483648))
      throw {:return, Process.get(:seed)}
    catch
      {:return, val} -> val
    end
  end
  def random_int(a, b) do
    try do
      throw {:return, a + (rem(rand(), (b - a)))}
    catch
      {:return, val} -> val
    end
  end
  def save_image(_name) do
    try do
    catch
      {:return, val} -> val
    end
  end
  def random_anime_character() do
    try do
      idx = random_int(0, _len(Process.get(:characters)))
      ch = Enum.at(Process.get(:characters), idx, [])
      save_image(ch.image_file)
      throw {:return, ch}
    catch
      {:return, val} -> val
    end
  end
  Process.put(:seed, 123456789)
  Process.put(:characters, [%{title: "Naruto Uzumaki", description: "A spirited ninja of the Hidden Leaf Village.", image_file: "naruto.png"}, %{title: "Sailor Moon", description: "A magical girl who fights for love and justice.", image_file: "sailor_moon.png"}, %{title: "Spike Spiegel", description: "A bounty hunter with a laid-back attitude.", image_file: "spike_spiegel.png"}])
  def main() do
    :erlang.garbage_collect()
    mem_start = _mem()
    t_start = _bench_now()
    Process.put(:c, random_anime_character())
    IO.puts(Process.get(:c).title)
    IO.puts("")
    IO.puts(Process.get(:c).description)
    IO.puts("")
    IO.puts(("Image saved : " <> Process.get(:c).image_file))
    mem_end = _mem()
    duration_us = max(_bench_now() - t_start, 1)
    :erlang.garbage_collect()
    mem_diff = abs(mem_end - mem_start)
    IO.puts("{\n  \"duration_us\": #{duration_us},\n  \"memory_bytes\": #{mem_diff},\n  \"name\": \"main\"\n}")
  end
end
Main.main()
