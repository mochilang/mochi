# Code generated by Mochi transpiler 2025-08-08 15:59 +0700
defmodule Main do
  def astable_frequency(resistance_1, resistance_2, capacitance) do
    try do
      if resistance_1 <= 0.0 || resistance_2 <= 0.0 || capacitance <= 0.0 do
        raise("All values must be positive")
      end
      throw {:return, (1.44 / ((resistance_1 + 2.0 * resistance_2) * capacitance)) * 1000000.0}
    catch
      {:return, val} -> val
    end
  end
  def astable_duty_cycle(resistance_1, resistance_2) do
    try do
      if resistance_1 <= 0.0 || resistance_2 <= 0.0 do
        raise("All values must be positive")
      end
      throw {:return, (resistance_1 + resistance_2) / (resistance_1 + 2.0 * resistance_2) * 100.0}
    catch
      {:return, val} -> val
    end
  end
  def main() do
    IO.puts(Kernel.inspect(astable_frequency(45.0, 45.0, 7.0)))
    IO.puts(Kernel.inspect(astable_duty_cycle(45.0, 45.0)))
  end
end
Main.main()
