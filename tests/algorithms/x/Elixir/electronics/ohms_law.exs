# Code generated by Mochi transpiler 2025-08-08 15:59 +0700
defmodule Main do
  def ohms_law(voltage, current, resistance) do
    try do
      zeros = 0
      {zeros} = if voltage == 0.0 do
        zeros = zeros + 1
        {zeros}
      else
        {zeros}
      end
      {zeros} = if current == 0.0 do
        zeros = zeros + 1
        {zeros}
      else
        {zeros}
      end
      {zeros} = if resistance == 0.0 do
        zeros = zeros + 1
        {zeros}
      else
        {zeros}
      end
      if zeros != 1 do
        IO.puts("One and only one argument must be 0")
        throw {:return, %{}}
      end
      if resistance < 0.0 do
        IO.puts("Resistance cannot be negative")
        throw {:return, %{}}
      end
      if voltage == 0.0 do
        throw {:return, %{"voltage" => current * resistance}}
      end
      if current == 0.0 do
        throw {:return, %{"current" => voltage / resistance}}
      end
      throw {:return, %{"resistance" => voltage / current}}
    catch
      {:return, val} -> val
    end
  end
  def main() do
    IO.puts(Jason.encode!(ohms_law(10.0, 0.0, 5.0)))
    IO.puts(Jason.encode!(ohms_law(-10.0, 1.0, 0.0)))
    IO.puts(Jason.encode!(ohms_law(0.0, -1.5, 2.0)))
  end
end
Main.main()
