# Code generated by Mochi transpiler 2025-08-09 16:15 +0700
defmodule Main do
  def sum_of_series(first_term, common_diff, num_of_terms) do
    try do
      total = div(num_of_terms * (2 * first_term + (num_of_terms - 1) * common_diff), 2)
      throw {:return, total}
    catch
      {:return, val} -> val
    end
  end
  def test_sum_of_series() do
    try do
      if sum_of_series(1, 1, 10) != 55 do
        raise("sum_of_series(1, 1, 10) failed")
      end
      if sum_of_series(1, 10, 100) != 49600 do
        raise("sum_of_series(1, 10, 100) failed")
      end
    catch
      {:return, val} -> val
    end
  end
  def main() do
    try do
      test_sum_of_series()
      IO.puts(Kernel.inspect(sum_of_series(1, 1, 10)))
    catch
      {:return, val} -> val
    end
  end
end
Main.main()
