# Code generated by Mochi transpiler 2025-08-09 10:54 +0700
defmodule Main do
  def is_prime(number) do
    try do
      if number < 0 do
        raise("is_prime() only accepts positive integers")
      end
      if (1 < number) && (number < 4) do
        throw {:return, true}
      else
        if (number < 2) || (rem(number, 2) == 0) || (rem(number, 3) == 0) do
          throw {:return, false}
        end
      end
      i = 5
      while_fun = fn while_fun, i ->
        if i * i <= number do
          if (rem(number, i) == 0) || (rem(number, (i + 2)) == 0) do
            throw {:return, false}
          end
          i = i + 6
          while_fun.(while_fun, i)
        else
          i
        end
      end
      i = try do
          while_fun.(while_fun, i)
        catch
          {:break, {i}} -> i
        end

      throw {:return, true}
    catch
      {:return, val} -> val
    end
  end
  def main() do
    IO.puts(Kernel.inspect(is_prime(0)))
    IO.puts(Kernel.inspect(is_prime(1)))
    IO.puts(Kernel.inspect(is_prime(2)))
    IO.puts(Kernel.inspect(is_prime(3)))
    IO.puts(Kernel.inspect(is_prime(27)))
    IO.puts(Kernel.inspect(is_prime(87)))
    IO.puts(Kernel.inspect(is_prime(563)))
    IO.puts(Kernel.inspect(is_prime(2999)))
    IO.puts(Kernel.inspect(is_prime(67483)))
  end
end
Main.main()
