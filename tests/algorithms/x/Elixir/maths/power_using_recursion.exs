# Code generated by Mochi transpiler 2025-08-09 10:54 +0700
defmodule Main do
  def power(base, exponent) do
    try do
      throw {:return, ((if exponent == 0, do: 1, else: base * power(base, exponent - 1)))}
    catch
      {:return, val} -> val
    end
  end
  def test_power() do
    try do
      if power(3, 4) != 81 do
        raise("power(3,4) failed")
      end
      if power(2, 0) != 1 do
        raise("power(2,0) failed")
      end
      if power(5, 6) != 15625 do
        raise("power(5,6) failed")
      end
    catch
      {:return, val} -> val
    end
  end
  def main() do
    try do
      test_power()
      IO.puts(Kernel.inspect(power(3, 4)))
    catch
      {:return, val} -> val
    end
  end
end
Main.main()
