# Code generated by Mochi transpiler 2025-08-12 10:04 +0700
defmodule Main do
  def focal_length_of_lens(object_distance_from_lens, image_distance_from_lens) do
    try do
      if object_distance_from_lens == 0.0 || image_distance_from_lens == 0.0 do
        raise("Invalid inputs. Enter non zero values with respect to the sign convention.")
      end
      throw {:return, 1.0 / ((1.0 / image_distance_from_lens) - (1.0 / object_distance_from_lens))}
    catch
      {:return, val} -> val
    end
  end
  def object_distance(focal_length_of_lens, image_distance_from_lens) do
    try do
      if image_distance_from_lens == 0.0 || focal_length_of_lens == 0.0 do
        raise("Invalid inputs. Enter non zero values with respect to the sign convention.")
      end
      throw {:return, 1.0 / ((1.0 / image_distance_from_lens) - (1.0 / focal_length_of_lens))}
    catch
      {:return, val} -> val
    end
  end
  def image_distance(focal_length_of_lens, object_distance_from_lens) do
    try do
      if object_distance_from_lens == 0.0 || focal_length_of_lens == 0.0 do
        raise("Invalid inputs. Enter non zero values with respect to the sign convention.")
      end
      throw {:return, 1.0 / ((1.0 / object_distance_from_lens) + (1.0 / focal_length_of_lens))}
    catch
      {:return, val} -> val
    end
  end
  def main() do
    IO.puts(Kernel.inspect(focal_length_of_lens(10.0, 4.0)))
    IO.puts(Kernel.inspect(focal_length_of_lens(2.7, 5.8)))
    IO.puts(Kernel.inspect(object_distance(10.0, 40.0)))
    IO.puts(Kernel.inspect(object_distance(6.2, 1.5)))
    IO.puts(Kernel.inspect(image_distance(50.0, 40.0)))
    IO.puts(Kernel.inspect(image_distance(5.3, 7.9)))
  end
end
Main.main()
