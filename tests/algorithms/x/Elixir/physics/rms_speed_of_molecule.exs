# Code generated by Mochi transpiler 2025-08-12 10:04 +0700
defmodule Main do
  def sqrt(x) do
    try do
      if x <= 0.0 do
        throw {:return, 0.0}
      end
      guess = x
      i = 0
      while_fun = fn while_fun, guess, i ->
        if i < 10 do
          guess = (guess + x / guess) / 2.0
          i = i + 1
          while_fun.(while_fun, guess, i)
        else
          {guess, i}
        end
      end
      {guess, i} = try do
          while_fun.(while_fun, guess, i)
        catch
          {:break, {guess, i}} -> {guess, i}
        end

      throw {:return, guess}
    catch
      {:return, val} -> val
    end
  end
  def rms_speed_of_molecule(temperature, molar_mass) do
    try do
      if temperature < 0.0 do
        raise("Temperature cannot be less than 0 K")
      end
      if molar_mass <= 0.0 do
        raise("Molar mass cannot be less than or equal to 0 kg/mol")
      end
      num = 3.0 * Process.get(:universal_gas_constant) * temperature
      val = num / molar_mass
      result = sqrt(val)
      throw {:return, result}
    catch
      {:return, val} -> val
    end
  end
  Process.put(:universal_gas_constant, 8.3144598)
  def main() do
    IO.puts(("rms_speed_of_molecule(100, 2) = " <> Kernel.inspect(rms_speed_of_molecule(100.0, 2.0))))
    IO.puts(("rms_speed_of_molecule(273, 12) = " <> Kernel.inspect(rms_speed_of_molecule(273.0, 12.0))))
    Process.put(:vrms, rms_speed_of_molecule(300.0, 28.0))
    IO.puts((("Vrms of Nitrogen gas at 300 K is " <> Kernel.to_string(Process.get(:vrms))) <> " m/s"))
  end
end
Main.main()
