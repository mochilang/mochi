# Code generated by Mochi transpiler 2025-08-12 10:04 +0700
defmodule Main do
  def energy_from_mass(mass) do
    try do
      if mass < 0.0 do
        raise("Mass can't be negative.")
      end
      throw {:return, mass * Process.get(:c) * Process.get(:c)}
    catch
      {:return, val} -> val
    end
  end
  def mass_from_energy(energy) do
    try do
      if energy < 0.0 do
        raise("Energy can't be negative.")
      end
      throw {:return, energy / (Process.get(:c) * Process.get(:c))}
    catch
      {:return, val} -> val
    end
  end
  Process.put(:c, 299792458.0)
  def main() do
    IO.puts(Kernel.inspect(energy_from_mass(124.56)))
    IO.puts(Kernel.inspect(energy_from_mass(320.0)))
    IO.puts(Kernel.inspect(energy_from_mass(0.0)))
    IO.puts(Kernel.inspect(mass_from_energy(124.56)))
    IO.puts(Kernel.inspect(mass_from_energy(320.0)))
    IO.puts(Kernel.inspect(mass_from_energy(0.0)))
  end
end
Main.main()
