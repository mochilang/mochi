# Code generated by Mochi transpiler 2025-08-12 10:04 +0700
defmodule Main do
  def doppler_effect(org_freq, wave_vel, obs_vel, src_vel) do
    try do
      if wave_vel == src_vel do
        raise("division by zero implies vs=v and observer in front of the source")
      end
      doppler_freq = (org_freq * (wave_vel + obs_vel)) / (wave_vel - src_vel)
      if doppler_freq <= 0.0 do
        raise("non-positive frequency implies vs>v or v0>v (in the opposite direction)")
      end
      throw {:return, doppler_freq}
    catch
      {:return, val} -> val
    end
  end
  def absf(x) do
    try do
      throw {:return, ((if x < 0.0, do: -x, else: x))}
    catch
      {:return, val} -> val
    end
  end
  def almost_equal(a, b, tol) do
    try do
      throw {:return, absf(a - b) <= tol}
    catch
      {:return, val} -> val
    end
  end
  def test_doppler_effect() do
    try do
      if !almost_equal(doppler_effect(100.0, 330.0, 10.0, 0.0), 103.03030303030303, 0.0000001) do
        raise("test 1 failed")
      end
      if !almost_equal(doppler_effect(100.0, 330.0, -10.0, 0.0), 96.96969696969697, 0.0000001) do
        raise("test 2 failed")
      end
      if !almost_equal(doppler_effect(100.0, 330.0, 0.0, 10.0), 103.125, 0.0000001) do
        raise("test 3 failed")
      end
      if !almost_equal(doppler_effect(100.0, 330.0, 0.0, -10.0), 97.05882352941177, 0.0000001) do
        raise("test 4 failed")
      end
      if !almost_equal(doppler_effect(100.0, 330.0, 10.0, 10.0), 106.25, 0.0000001) do
        raise("test 5 failed")
      end
      if !almost_equal(doppler_effect(100.0, 330.0, -10.0, -10.0), 94.11764705882354, 0.0000001) do
        raise("test 6 failed")
      end
    catch
      {:return, val} -> val
    end
  end
  def main() do
    try do
      test_doppler_effect()
      IO.puts(Kernel.inspect(doppler_effect(100.0, 330.0, 10.0, 0.0)))
    catch
      {:return, val} -> val
    end
  end
end
Main.main()
