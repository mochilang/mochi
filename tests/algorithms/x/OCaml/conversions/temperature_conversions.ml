(* Generated by Mochi transpiler v0.10.59 on 2025-08-06 22:21 +0700 *)


let rec __show v =
  let open Obj in
  let r = repr v in
  if is_int r then
    string_of_int (magic v : int)
  else
    match tag r with
    | 0 -> __show_list (Obj.magic v)
    | 252 -> Printf.sprintf "'%s'" (String.escaped (magic v : string))
    | 253 -> string_of_float (magic v)
    | _ -> "<value>"
and __show_list l =
  match l with
  | [] -> "[]"
  | _ -> "[" ^ String.concat " " (List.map __show l) ^ "]"
and __str v =
  let open Obj in
  let r = repr v in
  if is_int r then
    string_of_int (magic v : int)
  else
    match tag r with
    | 0 -> __str_list (Obj.magic v)
    | 252 -> (magic v : string)
    | 253 -> string_of_float (magic v)
    | _ -> "<value>"
and __str_list l =
  match l with
  | [] -> "[]"
  | _ -> "[" ^ String.concat " " (List.map __str l) ^ "]"


let nil = Obj.repr 0


let _now_seed = ref 0
let _now_seeded = ref false

let _now () =
  if not !_now_seeded then (
    match Sys.getenv_opt "MOCHI_NOW_SEED" with
    | Some s -> (try _now_seed := int_of_string s; _now_seeded := true with _ -> ())
    | None -> ()
  );
  if !_now_seeded then (
    _now_seed := (!(_now_seed) * 1664525 + 1013904223) mod 2147483647;
    !_now_seed
  ) else int_of_float (Sys.time () *. 1000000000.)


let _mem () =
  int_of_float (Gc.allocated_bytes ())

exception Break
exception Continue

exception Return

let rec floor x =
  let __ret = ref 0.0 in
  (try
  let x = (Obj.magic x : float) in
  let i = ref ((Obj.magic x : int)) in
  if (float_of_int (!i) > x) then (
  i := (!i - 1);
  );
  __ret := (Obj.magic (float_of_int (!i)) : float); raise Return
  with Return -> !__ret)

and pow10 n =
  let __ret = ref 0.0 in
  (try
  let n = (Obj.magic n : int) in
  let p = ref (1.0) in
  let i = ref (0) in
  (try while (!i < n) do
    try
  p := (!p *. 10.0);
  i := (!i + 1);
    with Continue -> ()
  done with Break -> ());
  __ret := (Obj.magic (!p) : float); raise Return
  with Return -> !__ret)

and round_to x ndigits =
  let __ret = ref 0.0 in
  (try
  let x = (Obj.magic x : float) in
  let ndigits = (Obj.magic ndigits : int) in
  let m = pow10 (Obj.repr (ndigits)) in
  __ret := (Obj.magic ((floor (Obj.repr (((x *. m) +. 0.5))) /. m)) : float); raise Return
  with Return -> !__ret)

and celsius_to_fahrenheit c ndigits =
  let __ret = ref 0.0 in
  (try
  let c = (Obj.magic c : float) in
  let ndigits = (Obj.magic ndigits : int) in
  __ret := (Obj.magic (round_to (Obj.repr ((((c *. 9.0) /. 5.0) +. 32.0))) (Obj.repr (ndigits))) : float); raise Return
  with Return -> !__ret)

and celsius_to_kelvin c ndigits =
  let __ret = ref 0.0 in
  (try
  let c = (Obj.magic c : float) in
  let ndigits = (Obj.magic ndigits : int) in
  __ret := (Obj.magic (round_to (Obj.repr ((c +. 273.15))) (Obj.repr (ndigits))) : float); raise Return
  with Return -> !__ret)

and celsius_to_rankine c ndigits =
  let __ret = ref 0.0 in
  (try
  let c = (Obj.magic c : float) in
  let ndigits = (Obj.magic ndigits : int) in
  __ret := (Obj.magic (round_to (Obj.repr ((((c *. 9.0) /. 5.0) +. 491.67))) (Obj.repr (ndigits))) : float); raise Return
  with Return -> !__ret)

and fahrenheit_to_celsius f ndigits =
  let __ret = ref 0.0 in
  (try
  let f = (Obj.magic f : float) in
  let ndigits = (Obj.magic ndigits : int) in
  __ret := (Obj.magic (round_to (Obj.repr ((((f -. 32.0) *. 5.0) /. 9.0))) (Obj.repr (ndigits))) : float); raise Return
  with Return -> !__ret)

and fahrenheit_to_kelvin f ndigits =
  let __ret = ref 0.0 in
  (try
  let f = (Obj.magic f : float) in
  let ndigits = (Obj.magic ndigits : int) in
  __ret := (Obj.magic (round_to (Obj.repr (((((f -. 32.0) *. 5.0) /. 9.0) +. 273.15))) (Obj.repr (ndigits))) : float); raise Return
  with Return -> !__ret)

and fahrenheit_to_rankine f ndigits =
  let __ret = ref 0.0 in
  (try
  let f = (Obj.magic f : float) in
  let ndigits = (Obj.magic ndigits : int) in
  __ret := (Obj.magic (round_to (Obj.repr ((f +. 459.67))) (Obj.repr (ndigits))) : float); raise Return
  with Return -> !__ret)

and kelvin_to_celsius k ndigits =
  let __ret = ref 0.0 in
  (try
  let k = (Obj.magic k : float) in
  let ndigits = (Obj.magic ndigits : int) in
  __ret := (Obj.magic (round_to (Obj.repr ((k -. 273.15))) (Obj.repr (ndigits))) : float); raise Return
  with Return -> !__ret)

and kelvin_to_fahrenheit k ndigits =
  let __ret = ref 0.0 in
  (try
  let k = (Obj.magic k : float) in
  let ndigits = (Obj.magic ndigits : int) in
  __ret := (Obj.magic (round_to (Obj.repr (((((k -. 273.15) *. 9.0) /. 5.0) +. 32.0))) (Obj.repr (ndigits))) : float); raise Return
  with Return -> !__ret)

and kelvin_to_rankine k ndigits =
  let __ret = ref 0.0 in
  (try
  let k = (Obj.magic k : float) in
  let ndigits = (Obj.magic ndigits : int) in
  __ret := (Obj.magic (round_to (Obj.repr (((k *. 9.0) /. 5.0))) (Obj.repr (ndigits))) : float); raise Return
  with Return -> !__ret)

and rankine_to_celsius r ndigits =
  let __ret = ref 0.0 in
  (try
  let r = (Obj.magic r : float) in
  let ndigits = (Obj.magic ndigits : int) in
  __ret := (Obj.magic (round_to (Obj.repr ((((r -. 491.67) *. 5.0) /. 9.0))) (Obj.repr (ndigits))) : float); raise Return
  with Return -> !__ret)

and rankine_to_fahrenheit r ndigits =
  let __ret = ref 0.0 in
  (try
  let r = (Obj.magic r : float) in
  let ndigits = (Obj.magic ndigits : int) in
  __ret := (Obj.magic (round_to (Obj.repr ((r -. 459.67))) (Obj.repr (ndigits))) : float); raise Return
  with Return -> !__ret)

and rankine_to_kelvin r ndigits =
  let __ret = ref 0.0 in
  (try
  let r = (Obj.magic r : float) in
  let ndigits = (Obj.magic ndigits : int) in
  __ret := (Obj.magic (round_to (Obj.repr (((r *. 5.0) /. 9.0))) (Obj.repr (ndigits))) : float); raise Return
  with Return -> !__ret)

and reaumur_to_kelvin r ndigits =
  let __ret = ref 0.0 in
  (try
  let r = (Obj.magic r : float) in
  let ndigits = (Obj.magic ndigits : int) in
  __ret := (Obj.magic (round_to (Obj.repr (((r *. 1.25) +. 273.15))) (Obj.repr (ndigits))) : float); raise Return
  with Return -> !__ret)

and reaumur_to_fahrenheit r ndigits =
  let __ret = ref 0.0 in
  (try
  let r = (Obj.magic r : float) in
  let ndigits = (Obj.magic ndigits : int) in
  __ret := (Obj.magic (round_to (Obj.repr (((r *. 2.25) +. 32.0))) (Obj.repr (ndigits))) : float); raise Return
  with Return -> !__ret)

and reaumur_to_celsius r ndigits =
  let __ret = ref 0.0 in
  (try
  let r = (Obj.magic r : float) in
  let ndigits = (Obj.magic ndigits : int) in
  __ret := (Obj.magic (round_to (Obj.repr ((r *. 1.25))) (Obj.repr (ndigits))) : float); raise Return
  with Return -> !__ret)

and reaumur_to_rankine r ndigits =
  let __ret = ref 0.0 in
  (try
  let r = (Obj.magic r : float) in
  let ndigits = (Obj.magic ndigits : int) in
  __ret := (Obj.magic (round_to (Obj.repr ((((r *. 2.25) +. 32.0) +. 459.67))) (Obj.repr (ndigits))) : float); raise Return
  with Return -> !__ret)


let () =
  let mem_start = _mem () in
  let start = _now () in
  print_endline (string_of_float (celsius_to_fahrenheit (Obj.repr (0.0)) (Obj.repr (2))));
  print_endline (string_of_float (celsius_to_kelvin (Obj.repr (0.0)) (Obj.repr (2))));
  print_endline (string_of_float (celsius_to_rankine (Obj.repr (0.0)) (Obj.repr (2))));
  print_endline (string_of_float (fahrenheit_to_celsius (Obj.repr (32.0)) (Obj.repr (2))));
  print_endline (string_of_float (fahrenheit_to_kelvin (Obj.repr (32.0)) (Obj.repr (2))));
  print_endline (string_of_float (fahrenheit_to_rankine (Obj.repr (32.0)) (Obj.repr (2))));
  print_endline (string_of_float (kelvin_to_celsius (Obj.repr (273.15)) (Obj.repr (2))));
  print_endline (string_of_float (kelvin_to_fahrenheit (Obj.repr (273.15)) (Obj.repr (2))));
  print_endline (string_of_float (kelvin_to_rankine (Obj.repr (273.15)) (Obj.repr (2))));
  print_endline (string_of_float (rankine_to_celsius (Obj.repr (491.67)) (Obj.repr (2))));
  print_endline (string_of_float (rankine_to_fahrenheit (Obj.repr (491.67)) (Obj.repr (2))));
  print_endline (string_of_float (rankine_to_kelvin (Obj.repr (491.67)) (Obj.repr (2))));
  print_endline (string_of_float (reaumur_to_kelvin (Obj.repr (80.0)) (Obj.repr (2))));
  print_endline (string_of_float (reaumur_to_fahrenheit (Obj.repr (80.0)) (Obj.repr (2))));
  print_endline (string_of_float (reaumur_to_celsius (Obj.repr (80.0)) (Obj.repr (2))));
  print_endline (string_of_float (reaumur_to_rankine (Obj.repr (80.0)) (Obj.repr (2))));
  let finish = _now () in
  let mem_end = _mem () in
  let dur = (finish - start) / 1000 in
  let mem_bytes = Stdlib.max 0 (mem_end - mem_start) in
  Printf.printf "{\n  \"duration_us\": %d,\n  \"memory_bytes\": %d,\n  \"name\": \"%s\"\n}\n" dur mem_bytes "main";
  ()