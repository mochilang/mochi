(* Generated by Mochi transpiler v0.10.59 on 2025-08-06 22:21 +0700 *)


let rec __show v =
  let open Obj in
  let r = repr v in
  if is_int r then
    string_of_int (magic v : int)
  else
    match tag r with
    | 0 -> __show_list (Obj.magic v)
    | 252 -> Printf.sprintf "'%s'" (String.escaped (magic v : string))
    | 253 -> string_of_float (magic v)
    | _ -> "<value>"
and __show_list l =
  match l with
  | [] -> "[]"
  | _ -> "[" ^ String.concat " " (List.map __show l) ^ "]"
and __str v =
  let open Obj in
  let r = repr v in
  if is_int r then
    string_of_int (magic v : int)
  else
    match tag r with
    | 0 -> __str_list (Obj.magic v)
    | 252 -> (magic v : string)
    | 253 -> string_of_float (magic v)
    | _ -> "<value>"
and __str_list l =
  match l with
  | [] -> "[]"
  | _ -> "[" ^ String.concat " " (List.map __str l) ^ "]"


let nil = Obj.repr 0


let _now_seed = ref 0
let _now_seeded = ref false

let _now () =
  if not !_now_seeded then (
    match Sys.getenv_opt "MOCHI_NOW_SEED" with
    | Some s -> (try _now_seed := int_of_string s; _now_seeded := true with _ -> ())
    | None -> ()
  );
  if !_now_seeded then (
    _now_seed := (!(_now_seed) * 1664525 + 1013904223) mod 2147483647;
    !_now_seed
  ) else int_of_float (Sys.time () *. 1000000000.)


let _mem () =
  int_of_float (Gc.allocated_bytes ())

exception Return

let rec round_int x =
  let __ret = ref 0 in
  (try
  let x = (Obj.magic x : float) in
  __ret := (Obj.magic ((Obj.magic (x +. 0.5) : int)) : int); raise Return
  with Return -> !__ret)

and rgb_to_cmyk r_input g_input b_input =
  let __ret = ref ([] : (int) list) in
  (try
  let r_input = (Obj.magic r_input : int) in
  let g_input = (Obj.magic g_input : int) in
  let b_input = (Obj.magic b_input : int) in
  if ((((((r_input < 0) || (r_input >= 256)) || (g_input < 0)) || (g_input >= 256)) || (b_input < 0)) || (b_input >= 256)) then (
  (failwith ("Expected int of the range 0..255"));
  );
  let r = (float_of_int (r_input) /. 255.0) in
  let g = (float_of_int (g_input) /. 255.0) in
  let b = (float_of_int (b_input) /. 255.0) in
  let max_val = ref (r) in
  if (g > !max_val) then (
  max_val := g;
  );
  if (b > !max_val) then (
  max_val := b;
  );
  let k_float = (1.0 -. !max_val) in
  if (k_float = 1.0) then (
  __ret := (Obj.magic ([0; 0; 0; 100]) : int list); raise Return
  );
  let c_float = ((100.0 *. ((1.0 -. r) -. k_float)) /. (1.0 -. k_float)) in
  let m_float = ((100.0 *. ((1.0 -. g) -. k_float)) /. (1.0 -. k_float)) in
  let y_float = ((100.0 *. ((1.0 -. b) -. k_float)) /. (1.0 -. k_float)) in
  let k_percent = (100.0 *. k_float) in
  let c = round_int (Obj.repr (c_float)) in
  let m = round_int (Obj.repr (m_float)) in
  let y = round_int (Obj.repr (y_float)) in
  let k = round_int (Obj.repr (k_percent)) in
  __ret := (Obj.magic ([c; m; y; k]) : int list); raise Return
  with Return -> !__ret)


let () =
  let mem_start = _mem () in
  let start = _now () in
  print_endline (__show_list (rgb_to_cmyk (Obj.repr (255)) (Obj.repr (255)) (Obj.repr (255))));
  print_endline (__show_list (rgb_to_cmyk (Obj.repr (128)) (Obj.repr (128)) (Obj.repr (128))));
  print_endline (__show_list (rgb_to_cmyk (Obj.repr (0)) (Obj.repr (0)) (Obj.repr (0))));
  print_endline (__show_list (rgb_to_cmyk (Obj.repr (255)) (Obj.repr (0)) (Obj.repr (0))));
  print_endline (__show_list (rgb_to_cmyk (Obj.repr (0)) (Obj.repr (255)) (Obj.repr (0))));
  print_endline (__show_list (rgb_to_cmyk (Obj.repr (0)) (Obj.repr (0)) (Obj.repr (255))));
  let finish = _now () in
  let mem_end = _mem () in
  let dur = (finish - start) / 1000 in
  let mem_bytes = Stdlib.max 0 (mem_end - mem_start) in
  Printf.printf "{\n  \"duration_us\": %d,\n  \"memory_bytes\": %d,\n  \"name\": \"%s\"\n}\n" dur mem_bytes "main";
  ()