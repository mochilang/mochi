;; Generated by Mochi Scheme transpiler on 2025-08-16 09:25 +0700
(import (scheme base))
(import (scheme time))
(import (chibi string))
(import (only (scheme char) string-upcase string-downcase))
(import (srfi 69))
(import (srfi 1))
(define _list list)
(define (void) '())
(import (chibi time))
(define (_mem) (* 1024 (resource-usage-max-rss (get-resource-usage resource-usage/self))))
(import (chibi json))
(define (to-str x)
  (cond ((pair? x)
         (string-append "[" (string-join (map to-str x) ", ") "]"))
        ((hash-table? x)
         (let* ((ks (hash-table-keys x))
                (pairs (map (lambda (k)
                              (string-append (to-str k) ": " (to-str (hash-table-ref x k))))
                            ks)))
           (string-append "{" (string-join pairs ", ") "}")))
        ((null? x) "[]")
        ((string? x) (let ((out (open-output-string))) (json-write x out) (get-output-string out)))
        ((boolean? x) (if x "true" "false"))
       ((number? x)
        (if (integer? x)
            (number->string (inexact->exact x))
            (number->string (exact->inexact x))))
        (else (number->string x))))
(define (to-str-space x)
  (cond ((pair? x)
         (string-append "[" (string-join (map to-str-space x) " ") "]"))
        ((string? x) x)
        (else (to-str x))))
(define (upper s) (string-upcase s))
(define (lower s) (string-downcase s))
(define (_floor x) (cond ((string? x) (let ((n (string->number x))) (if n (floor n) 0))) ((boolean? x) (if x 1 0)) (else (floor x))))
(define (fmod a b) (- a (* (_floor (/ a b)) b)))
(define (_mod a b) (if (and (integer? a) (integer? b)) (modulo a b) (fmod a b)))
(define (_div a b) (if (and (integer? a) (integer? b) (exact? a) (exact? b)) (quotient a b) (/ a b)))
(define (_gt a b) (cond ((and (number? a) (number? b)) (> a b)) ((and (string? a) (string? b)) (string>? a b)) (else (> a b))))
(define (_lt a b) (cond ((and (number? a) (number? b)) (< a b)) ((and (string? a) (string? b)) (string<? a b)) (else (< a b))))
(define (_ge a b) (cond ((and (number? a) (number? b)) (>= a b)) ((and (string? a) (string? b)) (string>=? a b)) (else (>= a b))))
(define (_le a b) (cond ((and (number? a) (number? b)) (<= a b)) ((and (string? a) (string? b)) (string<=? a b)) (else (<= a b))))
(define (_add a b)
  (cond ((and (number? a) (number? b)) (+ a b))
        ((string? a) (string-append a (to-str b)))
        ((string? b) (string-append (to-str a) b))
        ((and (list? a) (list? b)) (append a b))
        (else (+ a b))))
(define (indexOf s sub) (let ((cur (string-contains s sub)))   (if cur (string-cursor->index s cur) -1)))
(define (_display . args) (apply display args))
(define (panic msg) (error msg))
(define (padStart s width pad)
  (let loop ((out s))
    (if (< (string-length out) width)
        (loop (string-append pad out))
        out)))
(define (_substring s start end)
  (let* ((len (string-length s))
         (s0 (max 0 (min len start)))
         (e0 (max s0 (min len end))))
    (substring s s0 e0)))
(define (_repeat s n)
  (let loop ((i 0) (out ""))
    (if (< i n)
        (loop (+ i 1) (string-append out s))
        out)))
(define (slice seq start end)
  (let* ((len (if (string? seq) (string-length seq) (length seq)))
         (s (if (< start 0) (+ len start) start))
         (e (if (< end 0) (+ len end) end)))
    (set! s (max 0 (min len s)))
    (set! e (max 0 (min len e)))
    (when (< e s) (set! e s))
    (if (string? seq)
        (_substring seq s e)
        (take (drop seq s) (- e s)))))
(define (_parseIntStr s base)
  (let* ((b (if (number? base) base 10))
         (n (string->number (if (list? s) (list->string s) s) b)))
    (if n (inexact->exact (truncate n)) 0)))
(define (_split s sep)
  (let* ((str (if (string? s) s (list->string s)))
         (del (cond ((char? sep) sep)
                     ((string? sep) (if (= (string-length sep) 1)
                                       (string-ref sep 0)
                                       sep))
                     (else sep))))
    (cond
     ((and (string? del) (string=? del ""))
      (map string (string->list str)))
     ((char? del)
      (string-split str del))
     (else
        (let loop ((r str) (acc '()))
          (let ((cur (string-contains r del)))
            (if cur
                (let ((idx (string-cursor->index r cur)))
                  (loop (_substring r (+ idx (string-length del)) (string-length r))
                        (cons (_substring r 0 idx) acc)))
                (reverse (cons r acc)))))))))
(define (_len x)
  (cond ((string? x) (string-length x))
        ((hash-table? x) (hash-table-size x))
        (else (length x))))
(define (list-ref-safe lst idx) (if (and (integer? idx) (>= idx 0) (< idx (length lst))) (list-ref lst (inexact->exact idx)) '()))
(define (list-set-safe! lst idx val) (when (and (integer? idx) (>= idx 0) (< idx (length lst))) (list-set! lst (inexact->exact idx) val)))
(
  let (
    (
      start37 (
        current-jiffy
      )
    )
     (
      jps40 (
        jiffies-per-second
      )
    )
  )
   (
    begin (
      let (
        (
          seed 1
        )
      )
       (
        begin (
          define (
            random
          )
           (
            begin (
              set! seed (
                _mod (
                  + (
                    * seed 13
                  )
                   7
                )
                 100
              )
            )
             (
              _div (
                let (
                  (
                    v1 seed
                  )
                )
                 (
                  cond (
                    (
                      string? v1
                    )
                     (
                      string->number v1
                    )
                  )
                   (
                    (
                      boolean? v1
                    )
                     (
                      if v1 1.0 0.0
                    )
                  )
                   (
                    else (
                      exact->inexact v1
                    )
                  )
                )
              )
               100.0
            )
          )
        )
         (
          define (
            sigmoid x
          )
           (
            _div 1.0 (
              + 1.0 (
                exp (
                  - x
                )
              )
            )
          )
        )
         (
          define (
            to_float x
          )
           (
            * x 1.0
          )
        )
         (
          define (
            exp x
          )
           (
            let (
              (
                term 1.0
              )
            )
             (
              begin (
                let (
                  (
                    sum 1.0
                  )
                )
                 (
                  begin (
                    let (
                      (
                        n 1
                      )
                    )
                     (
                      begin (
                        letrec (
                          (
                            loop2 (
                              lambda (
                                
                              )
                               (
                                if (
                                  < n 20
                                )
                                 (
                                  begin (
                                    set! term (
                                      _div (
                                        * term x
                                      )
                                       (
                                        to_float n
                                      )
                                    )
                                  )
                                   (
                                    set! sum (
                                      + sum term
                                    )
                                  )
                                   (
                                    set! n (
                                      + n 1
                                    )
                                  )
                                   (
                                    loop2
                                  )
                                )
                                 (
                                  void
                                )
                              )
                            )
                          )
                        )
                         (
                          loop2
                        )
                      )
                       sum
                    )
                  )
                )
              )
            )
          )
        )
         (
          define (
            convolve data kernel step bias
          )
           (
            let (
              (
                size_data (
                  _len data
                )
              )
            )
             (
              begin (
                let (
                  (
                    size_kernel (
                      _len kernel
                    )
                  )
                )
                 (
                  begin (
                    let (
                      (
                        out (
                          _list
                        )
                      )
                    )
                     (
                      begin (
                        let (
                          (
                            i 0
                          )
                        )
                         (
                          begin (
                            letrec (
                              (
                                loop3 (
                                  lambda (
                                    
                                  )
                                   (
                                    if (
                                      <= i (
                                        - size_data size_kernel
                                      )
                                    )
                                     (
                                      begin (
                                        let (
                                          (
                                            row (
                                              _list
                                            )
                                          )
                                        )
                                         (
                                          begin (
                                            let (
                                              (
                                                j 0
                                              )
                                            )
                                             (
                                              begin (
                                                letrec (
                                                  (
                                                    loop4 (
                                                      lambda (
                                                        
                                                      )
                                                       (
                                                        if (
                                                          <= j (
                                                            - size_data size_kernel
                                                          )
                                                        )
                                                         (
                                                          begin (
                                                            let (
                                                              (
                                                                sum 0.0
                                                              )
                                                            )
                                                             (
                                                              begin (
                                                                let (
                                                                  (
                                                                    a 0
                                                                  )
                                                                )
                                                                 (
                                                                  begin (
                                                                    letrec (
                                                                      (
                                                                        loop5 (
                                                                          lambda (
                                                                            
                                                                          )
                                                                           (
                                                                            if (
                                                                              < a size_kernel
                                                                            )
                                                                             (
                                                                              begin (
                                                                                let (
                                                                                  (
                                                                                    b 0
                                                                                  )
                                                                                )
                                                                                 (
                                                                                  begin (
                                                                                    letrec (
                                                                                      (
                                                                                        loop6 (
                                                                                          lambda (
                                                                                            
                                                                                          )
                                                                                           (
                                                                                            if (
                                                                                              < b size_kernel
                                                                                            )
                                                                                             (
                                                                                              begin (
                                                                                                set! sum (
                                                                                                  _add sum (
                                                                                                    * (
                                                                                                      cond (
                                                                                                        (
                                                                                                          string? (
                                                                                                            list-ref-safe data (
                                                                                                              + i a
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                         (
                                                                                                          _substring (
                                                                                                            list-ref-safe data (
                                                                                                              + i a
                                                                                                            )
                                                                                                          )
                                                                                                           (
                                                                                                            + j b
                                                                                                          )
                                                                                                           (
                                                                                                            + (
                                                                                                              + j b
                                                                                                            )
                                                                                                             1
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                       (
                                                                                                        (
                                                                                                          hash-table? (
                                                                                                            list-ref-safe data (
                                                                                                              + i a
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                         (
                                                                                                          hash-table-ref (
                                                                                                            list-ref-safe data (
                                                                                                              + i a
                                                                                                            )
                                                                                                          )
                                                                                                           (
                                                                                                            + j b
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                       (
                                                                                                        else (
                                                                                                          list-ref-safe (
                                                                                                            list-ref-safe data (
                                                                                                              + i a
                                                                                                            )
                                                                                                          )
                                                                                                           (
                                                                                                            + j b
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                     (
                                                                                                      cond (
                                                                                                        (
                                                                                                          string? (
                                                                                                            list-ref-safe kernel a
                                                                                                          )
                                                                                                        )
                                                                                                         (
                                                                                                          _substring (
                                                                                                            list-ref-safe kernel a
                                                                                                          )
                                                                                                           b (
                                                                                                            + b 1
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                       (
                                                                                                        (
                                                                                                          hash-table? (
                                                                                                            list-ref-safe kernel a
                                                                                                          )
                                                                                                        )
                                                                                                         (
                                                                                                          hash-table-ref (
                                                                                                            list-ref-safe kernel a
                                                                                                          )
                                                                                                           b
                                                                                                        )
                                                                                                      )
                                                                                                       (
                                                                                                        else (
                                                                                                          list-ref-safe (
                                                                                                            list-ref-safe kernel a
                                                                                                          )
                                                                                                           b
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                               (
                                                                                                set! b (
                                                                                                  + b 1
                                                                                                )
                                                                                              )
                                                                                               (
                                                                                                loop6
                                                                                              )
                                                                                            )
                                                                                             (
                                                                                              void
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                     (
                                                                                      loop6
                                                                                    )
                                                                                  )
                                                                                   (
                                                                                    set! a (
                                                                                      + a 1
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                               (
                                                                                loop5
                                                                              )
                                                                            )
                                                                             (
                                                                              void
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                     (
                                                                      loop5
                                                                    )
                                                                  )
                                                                   (
                                                                    set! row (
                                                                      append row (
                                                                        _list (
                                                                          sigmoid (
                                                                            - sum bias
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                   (
                                                                    set! j (
                                                                      + j step
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                           (
                                                            loop4
                                                          )
                                                        )
                                                         (
                                                          void
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                                 (
                                                  loop4
                                                )
                                              )
                                               (
                                                set! out (
                                                  append out (
                                                    _list row
                                                  )
                                                )
                                              )
                                               (
                                                set! i (
                                                  + i step
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                       (
                                        loop3
                                      )
                                    )
                                     (
                                      void
                                    )
                                  )
                                )
                              )
                            )
                             (
                              loop3
                            )
                          )
                           out
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
         (
          define (
            average_pool map size
          )
           (
            let (
              (
                out (
                  _list
                )
              )
            )
             (
              begin (
                let (
                  (
                    i 0
                  )
                )
                 (
                  begin (
                    letrec (
                      (
                        loop7 (
                          lambda (
                            
                          )
                           (
                            if (
                              < i (
                                _len map
                              )
                            )
                             (
                              begin (
                                let (
                                  (
                                    row (
                                      _list
                                    )
                                  )
                                )
                                 (
                                  begin (
                                    let (
                                      (
                                        j 0
                                      )
                                    )
                                     (
                                      begin (
                                        letrec (
                                          (
                                            loop8 (
                                              lambda (
                                                
                                              )
                                               (
                                                if (
                                                  < j (
                                                    _len (
                                                      list-ref-safe map i
                                                    )
                                                  )
                                                )
                                                 (
                                                  begin (
                                                    let (
                                                      (
                                                        sum 0.0
                                                      )
                                                    )
                                                     (
                                                      begin (
                                                        let (
                                                          (
                                                            a 0
                                                          )
                                                        )
                                                         (
                                                          begin (
                                                            letrec (
                                                              (
                                                                loop9 (
                                                                  lambda (
                                                                    
                                                                  )
                                                                   (
                                                                    if (
                                                                      < a size
                                                                    )
                                                                     (
                                                                      begin (
                                                                        let (
                                                                          (
                                                                            b 0
                                                                          )
                                                                        )
                                                                         (
                                                                          begin (
                                                                            letrec (
                                                                              (
                                                                                loop10 (
                                                                                  lambda (
                                                                                    
                                                                                  )
                                                                                   (
                                                                                    if (
                                                                                      < b size
                                                                                    )
                                                                                     (
                                                                                      begin (
                                                                                        set! sum (
                                                                                          + sum (
                                                                                            cond (
                                                                                              (
                                                                                                string? (
                                                                                                  list-ref-safe map (
                                                                                                    + i a
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                               (
                                                                                                _substring (
                                                                                                  list-ref-safe map (
                                                                                                    + i a
                                                                                                  )
                                                                                                )
                                                                                                 (
                                                                                                  + j b
                                                                                                )
                                                                                                 (
                                                                                                  + (
                                                                                                    + j b
                                                                                                  )
                                                                                                   1
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                             (
                                                                                              (
                                                                                                hash-table? (
                                                                                                  list-ref-safe map (
                                                                                                    + i a
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                               (
                                                                                                hash-table-ref (
                                                                                                  list-ref-safe map (
                                                                                                    + i a
                                                                                                  )
                                                                                                )
                                                                                                 (
                                                                                                  + j b
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                             (
                                                                                              else (
                                                                                                list-ref-safe (
                                                                                                  list-ref-safe map (
                                                                                                    + i a
                                                                                                  )
                                                                                                )
                                                                                                 (
                                                                                                  + j b
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                       (
                                                                                        set! b (
                                                                                          + b 1
                                                                                        )
                                                                                      )
                                                                                       (
                                                                                        loop10
                                                                                      )
                                                                                    )
                                                                                     (
                                                                                      void
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                             (
                                                                              loop10
                                                                            )
                                                                          )
                                                                           (
                                                                            set! a (
                                                                              + a 1
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                       (
                                                                        loop9
                                                                      )
                                                                    )
                                                                     (
                                                                      void
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                             (
                                                              loop9
                                                            )
                                                          )
                                                           (
                                                            set! row (
                                                              append row (
                                                                _list (
                                                                  _div sum (
                                                                    let (
                                                                      (
                                                                        v11 (
                                                                          * size size
                                                                        )
                                                                      )
                                                                    )
                                                                     (
                                                                      cond (
                                                                        (
                                                                          string? v11
                                                                        )
                                                                         (
                                                                          string->number v11
                                                                        )
                                                                      )
                                                                       (
                                                                        (
                                                                          boolean? v11
                                                                        )
                                                                         (
                                                                          if v11 1.0 0.0
                                                                        )
                                                                      )
                                                                       (
                                                                        else (
                                                                          exact->inexact v11
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                           (
                                                            set! j (
                                                              + j size
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                   (
                                                    loop8
                                                  )
                                                )
                                                 (
                                                  void
                                                )
                                              )
                                            )
                                          )
                                        )
                                         (
                                          loop8
                                        )
                                      )
                                       (
                                        set! out (
                                          append out (
                                            _list row
                                          )
                                        )
                                      )
                                       (
                                        set! i (
                                          + i size
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                               (
                                loop7
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop7
                    )
                  )
                   out
                )
              )
            )
          )
        )
         (
          define (
            flatten maps
          )
           (
            let (
              (
                out (
                  _list
                )
              )
            )
             (
              begin (
                let (
                  (
                    i 0
                  )
                )
                 (
                  begin (
                    letrec (
                      (
                        loop12 (
                          lambda (
                            
                          )
                           (
                            if (
                              < i (
                                _len maps
                              )
                            )
                             (
                              begin (
                                let (
                                  (
                                    j 0
                                  )
                                )
                                 (
                                  begin (
                                    letrec (
                                      (
                                        loop13 (
                                          lambda (
                                            
                                          )
                                           (
                                            if (
                                              < j (
                                                _len (
                                                  list-ref-safe maps i
                                                )
                                              )
                                            )
                                             (
                                              begin (
                                                let (
                                                  (
                                                    k 0
                                                  )
                                                )
                                                 (
                                                  begin (
                                                    letrec (
                                                      (
                                                        loop14 (
                                                          lambda (
                                                            
                                                          )
                                                           (
                                                            if (
                                                              < k (
                                                                _len (
                                                                  cond (
                                                                    (
                                                                      string? (
                                                                        list-ref-safe maps i
                                                                      )
                                                                    )
                                                                     (
                                                                      _substring (
                                                                        list-ref-safe maps i
                                                                      )
                                                                       j (
                                                                        + j 1
                                                                      )
                                                                    )
                                                                  )
                                                                   (
                                                                    (
                                                                      hash-table? (
                                                                        list-ref-safe maps i
                                                                      )
                                                                    )
                                                                     (
                                                                      hash-table-ref (
                                                                        list-ref-safe maps i
                                                                      )
                                                                       j
                                                                    )
                                                                  )
                                                                   (
                                                                    else (
                                                                      list-ref-safe (
                                                                        list-ref-safe maps i
                                                                      )
                                                                       j
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                             (
                                                              begin (
                                                                set! out (
                                                                  append out (
                                                                    _list (
                                                                      cond (
                                                                        (
                                                                          string? (
                                                                            cond (
                                                                              (
                                                                                string? (
                                                                                  list-ref-safe maps i
                                                                                )
                                                                              )
                                                                               (
                                                                                _substring (
                                                                                  list-ref-safe maps i
                                                                                )
                                                                                 j (
                                                                                  + j 1
                                                                                )
                                                                              )
                                                                            )
                                                                             (
                                                                              (
                                                                                hash-table? (
                                                                                  list-ref-safe maps i
                                                                                )
                                                                              )
                                                                               (
                                                                                hash-table-ref (
                                                                                  list-ref-safe maps i
                                                                                )
                                                                                 j
                                                                              )
                                                                            )
                                                                             (
                                                                              else (
                                                                                list-ref-safe (
                                                                                  list-ref-safe maps i
                                                                                )
                                                                                 j
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                         (
                                                                          _substring (
                                                                            cond (
                                                                              (
                                                                                string? (
                                                                                  list-ref-safe maps i
                                                                                )
                                                                              )
                                                                               (
                                                                                _substring (
                                                                                  list-ref-safe maps i
                                                                                )
                                                                                 j (
                                                                                  + j 1
                                                                                )
                                                                              )
                                                                            )
                                                                             (
                                                                              (
                                                                                hash-table? (
                                                                                  list-ref-safe maps i
                                                                                )
                                                                              )
                                                                               (
                                                                                hash-table-ref (
                                                                                  list-ref-safe maps i
                                                                                )
                                                                                 j
                                                                              )
                                                                            )
                                                                             (
                                                                              else (
                                                                                list-ref-safe (
                                                                                  list-ref-safe maps i
                                                                                )
                                                                                 j
                                                                              )
                                                                            )
                                                                          )
                                                                           k (
                                                                            + k 1
                                                                          )
                                                                        )
                                                                      )
                                                                       (
                                                                        (
                                                                          hash-table? (
                                                                            cond (
                                                                              (
                                                                                string? (
                                                                                  list-ref-safe maps i
                                                                                )
                                                                              )
                                                                               (
                                                                                _substring (
                                                                                  list-ref-safe maps i
                                                                                )
                                                                                 j (
                                                                                  + j 1
                                                                                )
                                                                              )
                                                                            )
                                                                             (
                                                                              (
                                                                                hash-table? (
                                                                                  list-ref-safe maps i
                                                                                )
                                                                              )
                                                                               (
                                                                                hash-table-ref (
                                                                                  list-ref-safe maps i
                                                                                )
                                                                                 j
                                                                              )
                                                                            )
                                                                             (
                                                                              else (
                                                                                list-ref-safe (
                                                                                  list-ref-safe maps i
                                                                                )
                                                                                 j
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                         (
                                                                          hash-table-ref (
                                                                            cond (
                                                                              (
                                                                                string? (
                                                                                  list-ref-safe maps i
                                                                                )
                                                                              )
                                                                               (
                                                                                _substring (
                                                                                  list-ref-safe maps i
                                                                                )
                                                                                 j (
                                                                                  + j 1
                                                                                )
                                                                              )
                                                                            )
                                                                             (
                                                                              (
                                                                                hash-table? (
                                                                                  list-ref-safe maps i
                                                                                )
                                                                              )
                                                                               (
                                                                                hash-table-ref (
                                                                                  list-ref-safe maps i
                                                                                )
                                                                                 j
                                                                              )
                                                                            )
                                                                             (
                                                                              else (
                                                                                list-ref-safe (
                                                                                  list-ref-safe maps i
                                                                                )
                                                                                 j
                                                                              )
                                                                            )
                                                                          )
                                                                           k
                                                                        )
                                                                      )
                                                                       (
                                                                        else (
                                                                          list-ref-safe (
                                                                            cond (
                                                                              (
                                                                                string? (
                                                                                  list-ref-safe maps i
                                                                                )
                                                                              )
                                                                               (
                                                                                _substring (
                                                                                  list-ref-safe maps i
                                                                                )
                                                                                 j (
                                                                                  + j 1
                                                                                )
                                                                              )
                                                                            )
                                                                             (
                                                                              (
                                                                                hash-table? (
                                                                                  list-ref-safe maps i
                                                                                )
                                                                              )
                                                                               (
                                                                                hash-table-ref (
                                                                                  list-ref-safe maps i
                                                                                )
                                                                                 j
                                                                              )
                                                                            )
                                                                             (
                                                                              else (
                                                                                list-ref-safe (
                                                                                  list-ref-safe maps i
                                                                                )
                                                                                 j
                                                                              )
                                                                            )
                                                                          )
                                                                           k
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                               (
                                                                set! k (
                                                                  + k 1
                                                                )
                                                              )
                                                               (
                                                                loop14
                                                              )
                                                            )
                                                             (
                                                              void
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                     (
                                                      loop14
                                                    )
                                                  )
                                                   (
                                                    set! j (
                                                      + j 1
                                                    )
                                                  )
                                                )
                                              )
                                               (
                                                loop13
                                              )
                                            )
                                             (
                                              void
                                            )
                                          )
                                        )
                                      )
                                    )
                                     (
                                      loop13
                                    )
                                  )
                                   (
                                    set! i (
                                      + i 1
                                    )
                                  )
                                )
                              )
                               (
                                loop12
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop12
                    )
                  )
                   out
                )
              )
            )
          )
        )
         (
          define (
            vec_mul_mat v m
          )
           (
            let (
              (
                cols (
                  _len (
                    list-ref-safe m 0
                  )
                )
              )
            )
             (
              begin (
                let (
                  (
                    res (
                      _list
                    )
                  )
                )
                 (
                  begin (
                    let (
                      (
                        j 0
                      )
                    )
                     (
                      begin (
                        letrec (
                          (
                            loop15 (
                              lambda (
                                
                              )
                               (
                                if (
                                  < j cols
                                )
                                 (
                                  begin (
                                    let (
                                      (
                                        sum 0.0
                                      )
                                    )
                                     (
                                      begin (
                                        let (
                                          (
                                            i 0
                                          )
                                        )
                                         (
                                          begin (
                                            letrec (
                                              (
                                                loop16 (
                                                  lambda (
                                                    
                                                  )
                                                   (
                                                    if (
                                                      < i (
                                                        _len v
                                                      )
                                                    )
                                                     (
                                                      begin (
                                                        set! sum (
                                                          _add sum (
                                                            * (
                                                              list-ref-safe v i
                                                            )
                                                             (
                                                              cond (
                                                                (
                                                                  string? (
                                                                    list-ref-safe m i
                                                                  )
                                                                )
                                                                 (
                                                                  _substring (
                                                                    list-ref-safe m i
                                                                  )
                                                                   j (
                                                                    + j 1
                                                                  )
                                                                )
                                                              )
                                                               (
                                                                (
                                                                  hash-table? (
                                                                    list-ref-safe m i
                                                                  )
                                                                )
                                                                 (
                                                                  hash-table-ref (
                                                                    list-ref-safe m i
                                                                  )
                                                                   j
                                                                )
                                                              )
                                                               (
                                                                else (
                                                                  list-ref-safe (
                                                                    list-ref-safe m i
                                                                  )
                                                                   j
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                       (
                                                        set! i (
                                                          + i 1
                                                        )
                                                      )
                                                       (
                                                        loop16
                                                      )
                                                    )
                                                     (
                                                      void
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                             (
                                              loop16
                                            )
                                          )
                                           (
                                            set! res (
                                              append res (
                                                _list sum
                                              )
                                            )
                                          )
                                           (
                                            set! j (
                                              + j 1
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                   (
                                    loop15
                                  )
                                )
                                 (
                                  void
                                )
                              )
                            )
                          )
                        )
                         (
                          loop15
                        )
                      )
                       res
                    )
                  )
                )
              )
            )
          )
        )
         (
          define (
            matT_vec_mul m v
          )
           (
            let (
              (
                res (
                  _list
                )
              )
            )
             (
              begin (
                let (
                  (
                    i 0
                  )
                )
                 (
                  begin (
                    letrec (
                      (
                        loop17 (
                          lambda (
                            
                          )
                           (
                            if (
                              < i (
                                _len m
                              )
                            )
                             (
                              begin (
                                let (
                                  (
                                    sum 0.0
                                  )
                                )
                                 (
                                  begin (
                                    let (
                                      (
                                        j 0
                                      )
                                    )
                                     (
                                      begin (
                                        letrec (
                                          (
                                            loop18 (
                                              lambda (
                                                
                                              )
                                               (
                                                if (
                                                  < j (
                                                    _len (
                                                      list-ref-safe m i
                                                    )
                                                  )
                                                )
                                                 (
                                                  begin (
                                                    set! sum (
                                                      _add sum (
                                                        * (
                                                          cond (
                                                            (
                                                              string? (
                                                                list-ref-safe m i
                                                              )
                                                            )
                                                             (
                                                              _substring (
                                                                list-ref-safe m i
                                                              )
                                                               j (
                                                                + j 1
                                                              )
                                                            )
                                                          )
                                                           (
                                                            (
                                                              hash-table? (
                                                                list-ref-safe m i
                                                              )
                                                            )
                                                             (
                                                              hash-table-ref (
                                                                list-ref-safe m i
                                                              )
                                                               j
                                                            )
                                                          )
                                                           (
                                                            else (
                                                              list-ref-safe (
                                                                list-ref-safe m i
                                                              )
                                                               j
                                                            )
                                                          )
                                                        )
                                                         (
                                                          list-ref-safe v j
                                                        )
                                                      )
                                                    )
                                                  )
                                                   (
                                                    set! j (
                                                      + j 1
                                                    )
                                                  )
                                                   (
                                                    loop18
                                                  )
                                                )
                                                 (
                                                  void
                                                )
                                              )
                                            )
                                          )
                                        )
                                         (
                                          loop18
                                        )
                                      )
                                       (
                                        set! res (
                                          append res (
                                            _list sum
                                          )
                                        )
                                      )
                                       (
                                        set! i (
                                          + i 1
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                               (
                                loop17
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop17
                    )
                  )
                   res
                )
              )
            )
          )
        )
         (
          define (
            vec_add a b
          )
           (
            let (
              (
                res (
                  _list
                )
              )
            )
             (
              begin (
                let (
                  (
                    i 0
                  )
                )
                 (
                  begin (
                    letrec (
                      (
                        loop19 (
                          lambda (
                            
                          )
                           (
                            if (
                              < i (
                                _len a
                              )
                            )
                             (
                              begin (
                                set! res (
                                  append res (
                                    _list (
                                      + (
                                        list-ref-safe a i
                                      )
                                       (
                                        list-ref-safe b i
                                      )
                                    )
                                  )
                                )
                              )
                               (
                                set! i (
                                  + i 1
                                )
                              )
                               (
                                loop19
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop19
                    )
                  )
                   res
                )
              )
            )
          )
        )
         (
          define (
            vec_sub a b
          )
           (
            let (
              (
                res (
                  _list
                )
              )
            )
             (
              begin (
                let (
                  (
                    i 0
                  )
                )
                 (
                  begin (
                    letrec (
                      (
                        loop20 (
                          lambda (
                            
                          )
                           (
                            if (
                              < i (
                                _len a
                              )
                            )
                             (
                              begin (
                                set! res (
                                  append res (
                                    _list (
                                      - (
                                        list-ref-safe a i
                                      )
                                       (
                                        list-ref-safe b i
                                      )
                                    )
                                  )
                                )
                              )
                               (
                                set! i (
                                  + i 1
                                )
                              )
                               (
                                loop20
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop20
                    )
                  )
                   res
                )
              )
            )
          )
        )
         (
          define (
            vec_mul a b
          )
           (
            let (
              (
                res (
                  _list
                )
              )
            )
             (
              begin (
                let (
                  (
                    i 0
                  )
                )
                 (
                  begin (
                    letrec (
                      (
                        loop21 (
                          lambda (
                            
                          )
                           (
                            if (
                              < i (
                                _len a
                              )
                            )
                             (
                              begin (
                                set! res (
                                  append res (
                                    _list (
                                      * (
                                        list-ref-safe a i
                                      )
                                       (
                                        list-ref-safe b i
                                      )
                                    )
                                  )
                                )
                              )
                               (
                                set! i (
                                  + i 1
                                )
                              )
                               (
                                loop21
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop21
                    )
                  )
                   res
                )
              )
            )
          )
        )
         (
          define (
            vec_map_sig v
          )
           (
            let (
              (
                res (
                  _list
                )
              )
            )
             (
              begin (
                let (
                  (
                    i 0
                  )
                )
                 (
                  begin (
                    letrec (
                      (
                        loop22 (
                          lambda (
                            
                          )
                           (
                            if (
                              < i (
                                _len v
                              )
                            )
                             (
                              begin (
                                set! res (
                                  append res (
                                    _list (
                                      sigmoid (
                                        list-ref-safe v i
                                      )
                                    )
                                  )
                                )
                              )
                               (
                                set! i (
                                  + i 1
                                )
                              )
                               (
                                loop22
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop22
                    )
                  )
                   res
                )
              )
            )
          )
        )
         (
          define (
            new_cnn
          )
           (
            let (
              (
                k1 (
                  _list (
                    _list 1.0 0.0
                  )
                   (
                    _list 0.0 1.0
                  )
                )
              )
            )
             (
              begin (
                let (
                  (
                    k2 (
                      _list (
                        _list 0.0 1.0
                      )
                       (
                        _list 1.0 0.0
                      )
                    )
                  )
                )
                 (
                  begin (
                    let (
                      (
                        conv_kernels (
                          _list k1 k2
                        )
                      )
                    )
                     (
                      begin (
                        let (
                          (
                            conv_bias (
                              _list 0.0 0.0
                            )
                          )
                        )
                         (
                          begin (
                            let (
                              (
                                conv_step 2
                              )
                            )
                             (
                              begin (
                                let (
                                  (
                                    pool_size 2
                                  )
                                )
                                 (
                                  begin (
                                    let (
                                      (
                                        input_size 2
                                      )
                                    )
                                     (
                                      begin (
                                        let (
                                          (
                                            hidden_size 2
                                          )
                                        )
                                         (
                                          begin (
                                            let (
                                              (
                                                output_size 2
                                              )
                                            )
                                             (
                                              begin (
                                                let (
                                                  (
                                                    w_hidden (
                                                      _list
                                                    )
                                                  )
                                                )
                                                 (
                                                  begin (
                                                    let (
                                                      (
                                                        i 0
                                                      )
                                                    )
                                                     (
                                                      begin (
                                                        letrec (
                                                          (
                                                            loop23 (
                                                              lambda (
                                                                
                                                              )
                                                               (
                                                                if (
                                                                  < i input_size
                                                                )
                                                                 (
                                                                  begin (
                                                                    let (
                                                                      (
                                                                        row (
                                                                          _list
                                                                        )
                                                                      )
                                                                    )
                                                                     (
                                                                      begin (
                                                                        let (
                                                                          (
                                                                            j 0
                                                                          )
                                                                        )
                                                                         (
                                                                          begin (
                                                                            letrec (
                                                                              (
                                                                                loop24 (
                                                                                  lambda (
                                                                                    
                                                                                  )
                                                                                   (
                                                                                    if (
                                                                                      < j hidden_size
                                                                                    )
                                                                                     (
                                                                                      begin (
                                                                                        set! row (
                                                                                          append row (
                                                                                            _list (
                                                                                              - (
                                                                                                random
                                                                                              )
                                                                                               0.5
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                       (
                                                                                        set! j (
                                                                                          + j 1
                                                                                        )
                                                                                      )
                                                                                       (
                                                                                        loop24
                                                                                      )
                                                                                    )
                                                                                     (
                                                                                      void
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                             (
                                                                              loop24
                                                                            )
                                                                          )
                                                                           (
                                                                            set! w_hidden (
                                                                              append w_hidden (
                                                                                _list row
                                                                              )
                                                                            )
                                                                          )
                                                                           (
                                                                            set! i (
                                                                              + i 1
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                   (
                                                                    loop23
                                                                  )
                                                                )
                                                                 (
                                                                  void
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                         (
                                                          loop23
                                                        )
                                                      )
                                                       (
                                                        let (
                                                          (
                                                            w_out (
                                                              _list
                                                            )
                                                          )
                                                        )
                                                         (
                                                          begin (
                                                            set! i 0
                                                          )
                                                           (
                                                            letrec (
                                                              (
                                                                loop25 (
                                                                  lambda (
                                                                    
                                                                  )
                                                                   (
                                                                    if (
                                                                      < i hidden_size
                                                                    )
                                                                     (
                                                                      begin (
                                                                        let (
                                                                          (
                                                                            row (
                                                                              _list
                                                                            )
                                                                          )
                                                                        )
                                                                         (
                                                                          begin (
                                                                            let (
                                                                              (
                                                                                j 0
                                                                              )
                                                                            )
                                                                             (
                                                                              begin (
                                                                                letrec (
                                                                                  (
                                                                                    loop26 (
                                                                                      lambda (
                                                                                        
                                                                                      )
                                                                                       (
                                                                                        if (
                                                                                          < j output_size
                                                                                        )
                                                                                         (
                                                                                          begin (
                                                                                            set! row (
                                                                                              append row (
                                                                                                _list (
                                                                                                  - (
                                                                                                    random
                                                                                                  )
                                                                                                   0.5
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                           (
                                                                                            set! j (
                                                                                              + j 1
                                                                                            )
                                                                                          )
                                                                                           (
                                                                                            loop26
                                                                                          )
                                                                                        )
                                                                                         (
                                                                                          void
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                                 (
                                                                                  loop26
                                                                                )
                                                                              )
                                                                               (
                                                                                set! w_out (
                                                                                  append w_out (
                                                                                    _list row
                                                                                  )
                                                                                )
                                                                              )
                                                                               (
                                                                                set! i (
                                                                                  + i 1
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                       (
                                                                        loop25
                                                                      )
                                                                    )
                                                                     (
                                                                      void
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                             (
                                                              loop25
                                                            )
                                                          )
                                                           (
                                                            let (
                                                              (
                                                                b_hidden (
                                                                  _list 0.0 0.0
                                                                )
                                                              )
                                                            )
                                                             (
                                                              begin (
                                                                let (
                                                                  (
                                                                    b_out (
                                                                      _list 0.0 0.0
                                                                    )
                                                                  )
                                                                )
                                                                 (
                                                                  begin (
                                                                    alist->hash-table (
                                                                      _list (
                                                                        cons "conv_kernels" conv_kernels
                                                                      )
                                                                       (
                                                                        cons "conv_bias" conv_bias
                                                                      )
                                                                       (
                                                                        cons "conv_step" conv_step
                                                                      )
                                                                       (
                                                                        cons "pool_size" pool_size
                                                                      )
                                                                       (
                                                                        cons "w_hidden" w_hidden
                                                                      )
                                                                       (
                                                                        cons "w_out" w_out
                                                                      )
                                                                       (
                                                                        cons "b_hidden" b_hidden
                                                                      )
                                                                       (
                                                                        cons "b_out" b_out
                                                                      )
                                                                       (
                                                                        cons "rate_weight" 0.2
                                                                      )
                                                                       (
                                                                        cons "rate_bias" 0.2
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
         (
          define (
            forward cnn data
          )
           (
            let (
              (
                maps (
                  _list
                )
              )
            )
             (
              begin (
                let (
                  (
                    i 0
                  )
                )
                 (
                  begin (
                    letrec (
                      (
                        loop27 (
                          lambda (
                            
                          )
                           (
                            if (
                              < i (
                                _len (
                                  hash-table-ref cnn "conv_kernels"
                                )
                              )
                            )
                             (
                              begin (
                                let (
                                  (
                                    conv_map (
                                      convolve data (
                                        list-ref-safe (
                                          hash-table-ref cnn "conv_kernels"
                                        )
                                         i
                                      )
                                       (
                                        hash-table-ref cnn "conv_step"
                                      )
                                       (
                                        list-ref-safe (
                                          hash-table-ref cnn "conv_bias"
                                        )
                                         i
                                      )
                                    )
                                  )
                                )
                                 (
                                  begin (
                                    let (
                                      (
                                        pooled (
                                          average_pool conv_map (
                                            hash-table-ref cnn "pool_size"
                                          )
                                        )
                                      )
                                    )
                                     (
                                      begin (
                                        set! maps (
                                          append maps (
                                            _list pooled
                                          )
                                        )
                                      )
                                       (
                                        set! i (
                                          + i 1
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                               (
                                loop27
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop27
                    )
                  )
                   (
                    let (
                      (
                        flat (
                          flatten maps
                        )
                      )
                    )
                     (
                      begin (
                        let (
                          (
                            hidden_net (
                              vec_add (
                                vec_mul_mat flat (
                                  hash-table-ref cnn "w_hidden"
                                )
                              )
                               (
                                hash-table-ref cnn "b_hidden"
                              )
                            )
                          )
                        )
                         (
                          begin (
                            let (
                              (
                                hidden_out (
                                  vec_map_sig hidden_net
                                )
                              )
                            )
                             (
                              begin (
                                let (
                                  (
                                    out_net (
                                      vec_add (
                                        vec_mul_mat hidden_out (
                                          hash-table-ref cnn "w_out"
                                        )
                                      )
                                       (
                                        hash-table-ref cnn "b_out"
                                      )
                                    )
                                  )
                                )
                                 (
                                  begin (
                                    let (
                                      (
                                        out (
                                          vec_map_sig out_net
                                        )
                                      )
                                    )
                                     (
                                      begin out
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
         (
          define (
            train cnn samples epochs
          )
           (
            let (
              (
                w_out (
                  hash-table-ref cnn "w_out"
                )
              )
            )
             (
              begin (
                let (
                  (
                    b_out (
                      hash-table-ref cnn "b_out"
                    )
                  )
                )
                 (
                  begin (
                    let (
                      (
                        w_hidden (
                          hash-table-ref cnn "w_hidden"
                        )
                      )
                    )
                     (
                      begin (
                        let (
                          (
                            b_hidden (
                              hash-table-ref cnn "b_hidden"
                            )
                          )
                        )
                         (
                          begin (
                            let (
                              (
                                e 0
                              )
                            )
                             (
                              begin (
                                letrec (
                                  (
                                    loop28 (
                                      lambda (
                                        
                                      )
                                       (
                                        if (
                                          < e epochs
                                        )
                                         (
                                          begin (
                                            let (
                                              (
                                                s 0
                                              )
                                            )
                                             (
                                              begin (
                                                letrec (
                                                  (
                                                    loop29 (
                                                      lambda (
                                                        
                                                      )
                                                       (
                                                        if (
                                                          < s (
                                                            _len samples
                                                          )
                                                        )
                                                         (
                                                          begin (
                                                            let (
                                                              (
                                                                data (
                                                                  hash-table-ref (
                                                                    list-ref-safe samples s
                                                                  )
                                                                   "image"
                                                                )
                                                              )
                                                            )
                                                             (
                                                              begin (
                                                                let (
                                                                  (
                                                                    target (
                                                                      hash-table-ref (
                                                                        list-ref-safe samples s
                                                                      )
                                                                       "target"
                                                                    )
                                                                  )
                                                                )
                                                                 (
                                                                  begin (
                                                                    let (
                                                                      (
                                                                        maps (
                                                                          _list
                                                                        )
                                                                      )
                                                                    )
                                                                     (
                                                                      begin (
                                                                        let (
                                                                          (
                                                                            i 0
                                                                          )
                                                                        )
                                                                         (
                                                                          begin (
                                                                            letrec (
                                                                              (
                                                                                loop30 (
                                                                                  lambda (
                                                                                    
                                                                                  )
                                                                                   (
                                                                                    if (
                                                                                      < i (
                                                                                        _len (
                                                                                          hash-table-ref cnn "conv_kernels"
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                     (
                                                                                      begin (
                                                                                        let (
                                                                                          (
                                                                                            conv_map (
                                                                                              convolve data (
                                                                                                list-ref-safe (
                                                                                                  hash-table-ref cnn "conv_kernels"
                                                                                                )
                                                                                                 i
                                                                                              )
                                                                                               (
                                                                                                hash-table-ref cnn "conv_step"
                                                                                              )
                                                                                               (
                                                                                                list-ref-safe (
                                                                                                  hash-table-ref cnn "conv_bias"
                                                                                                )
                                                                                                 i
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                         (
                                                                                          begin (
                                                                                            let (
                                                                                              (
                                                                                                pooled (
                                                                                                  average_pool conv_map (
                                                                                                    hash-table-ref cnn "pool_size"
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                             (
                                                                                              begin (
                                                                                                set! maps (
                                                                                                  append maps (
                                                                                                    _list pooled
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                               (
                                                                                                set! i (
                                                                                                  + i 1
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                       (
                                                                                        loop30
                                                                                      )
                                                                                    )
                                                                                     (
                                                                                      void
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                             (
                                                                              loop30
                                                                            )
                                                                          )
                                                                           (
                                                                            let (
                                                                              (
                                                                                flat (
                                                                                  flatten maps
                                                                                )
                                                                              )
                                                                            )
                                                                             (
                                                                              begin (
                                                                                let (
                                                                                  (
                                                                                    hidden_net (
                                                                                      vec_add (
                                                                                        vec_mul_mat flat w_hidden
                                                                                      )
                                                                                       b_hidden
                                                                                    )
                                                                                  )
                                                                                )
                                                                                 (
                                                                                  begin (
                                                                                    let (
                                                                                      (
                                                                                        hidden_out (
                                                                                          vec_map_sig hidden_net
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                     (
                                                                                      begin (
                                                                                        let (
                                                                                          (
                                                                                            out_net (
                                                                                              vec_add (
                                                                                                vec_mul_mat hidden_out w_out
                                                                                              )
                                                                                               b_out
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                         (
                                                                                          begin (
                                                                                            let (
                                                                                              (
                                                                                                out (
                                                                                                  vec_map_sig out_net
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                             (
                                                                                              begin (
                                                                                                let (
                                                                                                  (
                                                                                                    error_out (
                                                                                                      vec_sub target out
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                                 (
                                                                                                  begin (
                                                                                                    let (
                                                                                                      (
                                                                                                        pd_out (
                                                                                                          vec_mul error_out (
                                                                                                            vec_mul out (
                                                                                                              vec_sub (
                                                                                                                _list 1.0 1.0
                                                                                                              )
                                                                                                               out
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                     (
                                                                                                      begin (
                                                                                                        let (
                                                                                                          (
                                                                                                            error_hidden (
                                                                                                              matT_vec_mul w_out pd_out
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                         (
                                                                                                          begin (
                                                                                                            let (
                                                                                                              (
                                                                                                                pd_hidden (
                                                                                                                  vec_mul error_hidden (
                                                                                                                    vec_mul hidden_out (
                                                                                                                      vec_sub (
                                                                                                                        _list 1.0 1.0
                                                                                                                      )
                                                                                                                       hidden_out
                                                                                                                    )
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                             (
                                                                                                              begin (
                                                                                                                let (
                                                                                                                  (
                                                                                                                    j 0
                                                                                                                  )
                                                                                                                )
                                                                                                                 (
                                                                                                                  begin (
                                                                                                                    letrec (
                                                                                                                      (
                                                                                                                        loop31 (
                                                                                                                          lambda (
                                                                                                                            
                                                                                                                          )
                                                                                                                           (
                                                                                                                            if (
                                                                                                                              < j (
                                                                                                                                _len w_out
                                                                                                                              )
                                                                                                                            )
                                                                                                                             (
                                                                                                                              begin (
                                                                                                                                let (
                                                                                                                                  (
                                                                                                                                    k 0
                                                                                                                                  )
                                                                                                                                )
                                                                                                                                 (
                                                                                                                                  begin (
                                                                                                                                    letrec (
                                                                                                                                      (
                                                                                                                                        loop32 (
                                                                                                                                          lambda (
                                                                                                                                            
                                                                                                                                          )
                                                                                                                                           (
                                                                                                                                            if (
                                                                                                                                              < k (
                                                                                                                                                _len (
                                                                                                                                                  list-ref-safe w_out j
                                                                                                                                                )
                                                                                                                                              )
                                                                                                                                            )
                                                                                                                                             (
                                                                                                                                              begin (
                                                                                                                                                list-set-safe! (
                                                                                                                                                  list-ref-safe w_out j
                                                                                                                                                )
                                                                                                                                                 k (
                                                                                                                                                  _add (
                                                                                                                                                    cond (
                                                                                                                                                      (
                                                                                                                                                        string? (
                                                                                                                                                          list-ref-safe w_out j
                                                                                                                                                        )
                                                                                                                                                      )
                                                                                                                                                       (
                                                                                                                                                        _substring (
                                                                                                                                                          list-ref-safe w_out j
                                                                                                                                                        )
                                                                                                                                                         k (
                                                                                                                                                          + k 1
                                                                                                                                                        )
                                                                                                                                                      )
                                                                                                                                                    )
                                                                                                                                                     (
                                                                                                                                                      (
                                                                                                                                                        hash-table? (
                                                                                                                                                          list-ref-safe w_out j
                                                                                                                                                        )
                                                                                                                                                      )
                                                                                                                                                       (
                                                                                                                                                        hash-table-ref (
                                                                                                                                                          list-ref-safe w_out j
                                                                                                                                                        )
                                                                                                                                                         k
                                                                                                                                                      )
                                                                                                                                                    )
                                                                                                                                                     (
                                                                                                                                                      else (
                                                                                                                                                        list-ref-safe (
                                                                                                                                                          list-ref-safe w_out j
                                                                                                                                                        )
                                                                                                                                                         k
                                                                                                                                                      )
                                                                                                                                                    )
                                                                                                                                                  )
                                                                                                                                                   (
                                                                                                                                                    * (
                                                                                                                                                      * (
                                                                                                                                                        hash-table-ref cnn "rate_weight"
                                                                                                                                                      )
                                                                                                                                                       (
                                                                                                                                                        cond (
                                                                                                                                                          (
                                                                                                                                                            string? hidden_out
                                                                                                                                                          )
                                                                                                                                                           (
                                                                                                                                                            _substring hidden_out j (
                                                                                                                                                              + j 1
                                                                                                                                                            )
                                                                                                                                                          )
                                                                                                                                                        )
                                                                                                                                                         (
                                                                                                                                                          (
                                                                                                                                                            hash-table? hidden_out
                                                                                                                                                          )
                                                                                                                                                           (
                                                                                                                                                            hash-table-ref hidden_out j
                                                                                                                                                          )
                                                                                                                                                        )
                                                                                                                                                         (
                                                                                                                                                          else (
                                                                                                                                                            list-ref-safe hidden_out j
                                                                                                                                                          )
                                                                                                                                                        )
                                                                                                                                                      )
                                                                                                                                                    )
                                                                                                                                                     (
                                                                                                                                                      cond (
                                                                                                                                                        (
                                                                                                                                                          string? pd_out
                                                                                                                                                        )
                                                                                                                                                         (
                                                                                                                                                          _substring pd_out k (
                                                                                                                                                            + k 1
                                                                                                                                                          )
                                                                                                                                                        )
                                                                                                                                                      )
                                                                                                                                                       (
                                                                                                                                                        (
                                                                                                                                                          hash-table? pd_out
                                                                                                                                                        )
                                                                                                                                                         (
                                                                                                                                                          hash-table-ref pd_out k
                                                                                                                                                        )
                                                                                                                                                      )
                                                                                                                                                       (
                                                                                                                                                        else (
                                                                                                                                                          list-ref-safe pd_out k
                                                                                                                                                        )
                                                                                                                                                      )
                                                                                                                                                    )
                                                                                                                                                  )
                                                                                                                                                )
                                                                                                                                              )
                                                                                                                                               (
                                                                                                                                                set! k (
                                                                                                                                                  + k 1
                                                                                                                                                )
                                                                                                                                              )
                                                                                                                                               (
                                                                                                                                                loop32
                                                                                                                                              )
                                                                                                                                            )
                                                                                                                                             (
                                                                                                                                              void
                                                                                                                                            )
                                                                                                                                          )
                                                                                                                                        )
                                                                                                                                      )
                                                                                                                                    )
                                                                                                                                     (
                                                                                                                                      loop32
                                                                                                                                    )
                                                                                                                                  )
                                                                                                                                   (
                                                                                                                                    set! j (
                                                                                                                                      + j 1
                                                                                                                                    )
                                                                                                                                  )
                                                                                                                                )
                                                                                                                              )
                                                                                                                               (
                                                                                                                                loop31
                                                                                                                              )
                                                                                                                            )
                                                                                                                             (
                                                                                                                              void
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )
                                                                                                                    )
                                                                                                                     (
                                                                                                                      loop31
                                                                                                                    )
                                                                                                                  )
                                                                                                                   (
                                                                                                                    set! j 0
                                                                                                                  )
                                                                                                                   (
                                                                                                                    letrec (
                                                                                                                      (
                                                                                                                        loop33 (
                                                                                                                          lambda (
                                                                                                                            
                                                                                                                          )
                                                                                                                           (
                                                                                                                            if (
                                                                                                                              < j (
                                                                                                                                _len b_out
                                                                                                                              )
                                                                                                                            )
                                                                                                                             (
                                                                                                                              begin (
                                                                                                                                list-set-safe! b_out j (
                                                                                                                                  - (
                                                                                                                                    list-ref-safe b_out j
                                                                                                                                  )
                                                                                                                                   (
                                                                                                                                    * (
                                                                                                                                      hash-table-ref cnn "rate_bias"
                                                                                                                                    )
                                                                                                                                     (
                                                                                                                                      cond (
                                                                                                                                        (
                                                                                                                                          string? pd_out
                                                                                                                                        )
                                                                                                                                         (
                                                                                                                                          _substring pd_out j (
                                                                                                                                            + j 1
                                                                                                                                          )
                                                                                                                                        )
                                                                                                                                      )
                                                                                                                                       (
                                                                                                                                        (
                                                                                                                                          hash-table? pd_out
                                                                                                                                        )
                                                                                                                                         (
                                                                                                                                          hash-table-ref pd_out j
                                                                                                                                        )
                                                                                                                                      )
                                                                                                                                       (
                                                                                                                                        else (
                                                                                                                                          list-ref-safe pd_out j
                                                                                                                                        )
                                                                                                                                      )
                                                                                                                                    )
                                                                                                                                  )
                                                                                                                                )
                                                                                                                              )
                                                                                                                               (
                                                                                                                                set! j (
                                                                                                                                  + j 1
                                                                                                                                )
                                                                                                                              )
                                                                                                                               (
                                                                                                                                loop33
                                                                                                                              )
                                                                                                                            )
                                                                                                                             (
                                                                                                                              void
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )
                                                                                                                    )
                                                                                                                     (
                                                                                                                      loop33
                                                                                                                    )
                                                                                                                  )
                                                                                                                   (
                                                                                                                    let (
                                                                                                                      (
                                                                                                                        i_h 0
                                                                                                                      )
                                                                                                                    )
                                                                                                                     (
                                                                                                                      begin (
                                                                                                                        letrec (
                                                                                                                          (
                                                                                                                            loop34 (
                                                                                                                              lambda (
                                                                                                                                
                                                                                                                              )
                                                                                                                               (
                                                                                                                                if (
                                                                                                                                  < i_h (
                                                                                                                                    _len w_hidden
                                                                                                                                  )
                                                                                                                                )
                                                                                                                                 (
                                                                                                                                  begin (
                                                                                                                                    let (
                                                                                                                                      (
                                                                                                                                        j_h 0
                                                                                                                                      )
                                                                                                                                    )
                                                                                                                                     (
                                                                                                                                      begin (
                                                                                                                                        letrec (
                                                                                                                                          (
                                                                                                                                            loop35 (
                                                                                                                                              lambda (
                                                                                                                                                
                                                                                                                                              )
                                                                                                                                               (
                                                                                                                                                if (
                                                                                                                                                  < j_h (
                                                                                                                                                    _len (
                                                                                                                                                      list-ref-safe w_hidden i_h
                                                                                                                                                    )
                                                                                                                                                  )
                                                                                                                                                )
                                                                                                                                                 (
                                                                                                                                                  begin (
                                                                                                                                                    list-set-safe! (
                                                                                                                                                      list-ref-safe w_hidden i_h
                                                                                                                                                    )
                                                                                                                                                     j_h (
                                                                                                                                                      _add (
                                                                                                                                                        cond (
                                                                                                                                                          (
                                                                                                                                                            string? (
                                                                                                                                                              list-ref-safe w_hidden i_h
                                                                                                                                                            )
                                                                                                                                                          )
                                                                                                                                                           (
                                                                                                                                                            _substring (
                                                                                                                                                              list-ref-safe w_hidden i_h
                                                                                                                                                            )
                                                                                                                                                             j_h (
                                                                                                                                                              + j_h 1
                                                                                                                                                            )
                                                                                                                                                          )
                                                                                                                                                        )
                                                                                                                                                         (
                                                                                                                                                          (
                                                                                                                                                            hash-table? (
                                                                                                                                                              list-ref-safe w_hidden i_h
                                                                                                                                                            )
                                                                                                                                                          )
                                                                                                                                                           (
                                                                                                                                                            hash-table-ref (
                                                                                                                                                              list-ref-safe w_hidden i_h
                                                                                                                                                            )
                                                                                                                                                             j_h
                                                                                                                                                          )
                                                                                                                                                        )
                                                                                                                                                         (
                                                                                                                                                          else (
                                                                                                                                                            list-ref-safe (
                                                                                                                                                              list-ref-safe w_hidden i_h
                                                                                                                                                            )
                                                                                                                                                             j_h
                                                                                                                                                          )
                                                                                                                                                        )
                                                                                                                                                      )
                                                                                                                                                       (
                                                                                                                                                        * (
                                                                                                                                                          * (
                                                                                                                                                            hash-table-ref cnn "rate_weight"
                                                                                                                                                          )
                                                                                                                                                           (
                                                                                                                                                            cond (
                                                                                                                                                              (
                                                                                                                                                                string? flat
                                                                                                                                                              )
                                                                                                                                                               (
                                                                                                                                                                _substring flat i_h (
                                                                                                                                                                  + i_h 1
                                                                                                                                                                )
                                                                                                                                                              )
                                                                                                                                                            )
                                                                                                                                                             (
                                                                                                                                                              (
                                                                                                                                                                hash-table? flat
                                                                                                                                                              )
                                                                                                                                                               (
                                                                                                                                                                hash-table-ref flat i_h
                                                                                                                                                              )
                                                                                                                                                            )
                                                                                                                                                             (
                                                                                                                                                              else (
                                                                                                                                                                list-ref-safe flat i_h
                                                                                                                                                              )
                                                                                                                                                            )
                                                                                                                                                          )
                                                                                                                                                        )
                                                                                                                                                         (
                                                                                                                                                          cond (
                                                                                                                                                            (
                                                                                                                                                              string? pd_hidden
                                                                                                                                                            )
                                                                                                                                                             (
                                                                                                                                                              _substring pd_hidden j_h (
                                                                                                                                                                + j_h 1
                                                                                                                                                              )
                                                                                                                                                            )
                                                                                                                                                          )
                                                                                                                                                           (
                                                                                                                                                            (
                                                                                                                                                              hash-table? pd_hidden
                                                                                                                                                            )
                                                                                                                                                             (
                                                                                                                                                              hash-table-ref pd_hidden j_h
                                                                                                                                                            )
                                                                                                                                                          )
                                                                                                                                                           (
                                                                                                                                                            else (
                                                                                                                                                              list-ref-safe pd_hidden j_h
                                                                                                                                                            )
                                                                                                                                                          )
                                                                                                                                                        )
                                                                                                                                                      )
                                                                                                                                                    )
                                                                                                                                                  )
                                                                                                                                                   (
                                                                                                                                                    set! j_h (
                                                                                                                                                      + j_h 1
                                                                                                                                                    )
                                                                                                                                                  )
                                                                                                                                                   (
                                                                                                                                                    loop35
                                                                                                                                                  )
                                                                                                                                                )
                                                                                                                                                 (
                                                                                                                                                  void
                                                                                                                                                )
                                                                                                                                              )
                                                                                                                                            )
                                                                                                                                          )
                                                                                                                                        )
                                                                                                                                         (
                                                                                                                                          loop35
                                                                                                                                        )
                                                                                                                                      )
                                                                                                                                       (
                                                                                                                                        set! i_h (
                                                                                                                                          + i_h 1
                                                                                                                                        )
                                                                                                                                      )
                                                                                                                                    )
                                                                                                                                  )
                                                                                                                                   (
                                                                                                                                    loop34
                                                                                                                                  )
                                                                                                                                )
                                                                                                                                 (
                                                                                                                                  void
                                                                                                                                )
                                                                                                                              )
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                         (
                                                                                                                          loop34
                                                                                                                        )
                                                                                                                      )
                                                                                                                       (
                                                                                                                        set! j 0
                                                                                                                      )
                                                                                                                       (
                                                                                                                        letrec (
                                                                                                                          (
                                                                                                                            loop36 (
                                                                                                                              lambda (
                                                                                                                                
                                                                                                                              )
                                                                                                                               (
                                                                                                                                if (
                                                                                                                                  < j (
                                                                                                                                    _len b_hidden
                                                                                                                                  )
                                                                                                                                )
                                                                                                                                 (
                                                                                                                                  begin (
                                                                                                                                    list-set-safe! b_hidden j (
                                                                                                                                      - (
                                                                                                                                        list-ref-safe b_hidden j
                                                                                                                                      )
                                                                                                                                       (
                                                                                                                                        * (
                                                                                                                                          hash-table-ref cnn "rate_bias"
                                                                                                                                        )
                                                                                                                                         (
                                                                                                                                          cond (
                                                                                                                                            (
                                                                                                                                              string? pd_hidden
                                                                                                                                            )
                                                                                                                                             (
                                                                                                                                              _substring pd_hidden j (
                                                                                                                                                + j 1
                                                                                                                                              )
                                                                                                                                            )
                                                                                                                                          )
                                                                                                                                           (
                                                                                                                                            (
                                                                                                                                              hash-table? pd_hidden
                                                                                                                                            )
                                                                                                                                             (
                                                                                                                                              hash-table-ref pd_hidden j
                                                                                                                                            )
                                                                                                                                          )
                                                                                                                                           (
                                                                                                                                            else (
                                                                                                                                              list-ref-safe pd_hidden j
                                                                                                                                            )
                                                                                                                                          )
                                                                                                                                        )
                                                                                                                                      )
                                                                                                                                    )
                                                                                                                                  )
                                                                                                                                   (
                                                                                                                                    set! j (
                                                                                                                                      + j 1
                                                                                                                                    )
                                                                                                                                  )
                                                                                                                                   (
                                                                                                                                    loop36
                                                                                                                                  )
                                                                                                                                )
                                                                                                                                 (
                                                                                                                                  void
                                                                                                                                )
                                                                                                                              )
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                         (
                                                                                                                          loop36
                                                                                                                        )
                                                                                                                      )
                                                                                                                       (
                                                                                                                        set! s (
                                                                                                                          + s 1
                                                                                                                        )
                                                                                                                      )
                                                                                                                    )
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                           (
                                                            loop29
                                                          )
                                                        )
                                                         (
                                                          void
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                                 (
                                                  loop29
                                                )
                                              )
                                               (
                                                set! e (
                                                  + e 1
                                                )
                                              )
                                            )
                                          )
                                           (
                                            loop28
                                          )
                                        )
                                         (
                                          void
                                        )
                                      )
                                    )
                                  )
                                )
                                 (
                                  loop28
                                )
                              )
                               (
                                alist->hash-table (
                                  _list (
                                    cons "conv_kernels" (
                                      hash-table-ref cnn "conv_kernels"
                                    )
                                  )
                                   (
                                    cons "conv_bias" (
                                      hash-table-ref cnn "conv_bias"
                                    )
                                  )
                                   (
                                    cons "conv_step" (
                                      hash-table-ref cnn "conv_step"
                                    )
                                  )
                                   (
                                    cons "pool_size" (
                                      hash-table-ref cnn "pool_size"
                                    )
                                  )
                                   (
                                    cons "w_hidden" w_hidden
                                  )
                                   (
                                    cons "w_out" w_out
                                  )
                                   (
                                    cons "b_hidden" b_hidden
                                  )
                                   (
                                    cons "b_out" b_out
                                  )
                                   (
                                    cons "rate_weight" (
                                      hash-table-ref cnn "rate_weight"
                                    )
                                  )
                                   (
                                    cons "rate_bias" (
                                      hash-table-ref cnn "rate_bias"
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
         (
          define (
            main
          )
           (
            let (
              (
                cnn (
                  new_cnn
                )
              )
            )
             (
              begin (
                let (
                  (
                    image (
                      _list (
                        _list 1.0 0.0 1.0 0.0
                      )
                       (
                        _list 0.0 1.0 0.0 1.0
                      )
                       (
                        _list 1.0 0.0 1.0 0.0
                      )
                       (
                        _list 0.0 1.0 0.0 1.0
                      )
                    )
                  )
                )
                 (
                  begin (
                    let (
                      (
                        sample (
                          alist->hash-table (
                            _list (
                              cons "image" image
                            )
                             (
                              cons "target" (
                                _list 1.0 0.0
                              )
                            )
                          )
                        )
                      )
                    )
                     (
                      begin (
                        _display (
                          if (
                            string? "Before training:"
                          )
                           "Before training:" (
                            to-str "Before training:"
                          )
                        )
                      )
                       (
                        _display " "
                      )
                       (
                        _display (
                          if (
                            string? (
                              forward cnn image
                            )
                          )
                           (
                            forward cnn image
                          )
                           (
                            to-str (
                              forward cnn image
                            )
                          )
                        )
                      )
                       (
                        newline
                      )
                       (
                        let (
                          (
                            trained (
                              train cnn (
                                _list sample
                              )
                               50
                            )
                          )
                        )
                         (
                          begin (
                            _display (
                              if (
                                string? "After training:"
                              )
                               "After training:" (
                                to-str "After training:"
                              )
                            )
                          )
                           (
                            _display " "
                          )
                           (
                            _display (
                              if (
                                string? (
                                  forward trained image
                                )
                              )
                               (
                                forward trained image
                              )
                               (
                                to-str (
                                  forward trained image
                                )
                              )
                            )
                          )
                           (
                            newline
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
         (
          main
        )
      )
    )
     (
      let (
        (
          end38 (
            current-jiffy
          )
        )
      )
       (
        let (
          (
            dur39 (
              quotient (
                * (
                  - end38 start37
                )
                 1000000
              )
               jps40
            )
          )
        )
         (
          begin (
            _display (
              string-append "{\n  \"duration_us\": " (
                number->string dur39
              )
               ",\n  \"memory_bytes\": " (
                number->string (
                  _mem
                )
              )
               ",\n  \"name\": \"main\"\n}"
            )
          )
           (
            newline
          )
        )
      )
    )
  )
)
