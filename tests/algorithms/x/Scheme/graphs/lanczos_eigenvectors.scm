;; Generated by Mochi Scheme transpiler on 2025-08-13 16:46 +0700
(import (scheme base))
(import (scheme time))
(import (chibi string))
(import (only (scheme char) string-upcase string-downcase))
(import (srfi 69))
(import (srfi 1))
(define _list list)
(define (void) '())
(import (chibi time))
(define (_mem) (* 1024 (resource-usage-max-rss (get-resource-usage resource-usage/self))))
(import (chibi json))
(define (to-str x)
  (cond ((pair? x)
         (string-append "[" (string-join (map to-str x) ", ") "]"))
        ((hash-table? x)
         (let* ((ks (hash-table-keys x))
                (pairs (map (lambda (k)
                              (string-append (to-str k) ": " (to-str (hash-table-ref x k))))
                            ks)))
           (string-append "{" (string-join pairs ", ") "}")))
        ((null? x) "[]")
        ((string? x) (let ((out (open-output-string))) (json-write x out) (get-output-string out)))
        ((boolean? x) (if x "true" "false"))
       ((number? x)
        (if (integer? x)
            (number->string (inexact->exact x))
            (number->string (exact->inexact x))))
        (else (number->string x))))
(define (to-str-space x)
  (cond ((pair? x)
         (string-append "[" (string-join (map to-str-space x) " ") "]"))
        ((string? x) x)
        (else (to-str x))))
(define (upper s) (string-upcase s))
(define (lower s) (string-downcase s))
(define (_floor x) (cond ((string? x) (let ((n (string->number x))) (if n (floor n) 0))) ((boolean? x) (if x 1 0)) (else (floor x))))
(define (fmod a b) (- a (* (_floor (/ a b)) b)))
(define (_mod a b) (if (and (integer? a) (integer? b)) (modulo a b) (fmod a b)))
(define (_div a b) (if (and (integer? a) (integer? b) (exact? a) (exact? b)) (quotient a b) (/ a b)))
(define (_gt a b) (cond ((and (number? a) (number? b)) (> a b)) ((and (string? a) (string? b)) (string>? a b)) (else (> a b))))
(define (_lt a b) (cond ((and (number? a) (number? b)) (< a b)) ((and (string? a) (string? b)) (string<? a b)) (else (< a b))))
(define (_ge a b) (cond ((and (number? a) (number? b)) (>= a b)) ((and (string? a) (string? b)) (string>=? a b)) (else (>= a b))))
(define (_le a b) (cond ((and (number? a) (number? b)) (<= a b)) ((and (string? a) (string? b)) (string<=? a b)) (else (<= a b))))
(define (_add a b)
  (cond ((and (number? a) (number? b)) (+ a b))
        ((string? a) (string-append a (to-str b)))
        ((string? b) (string-append (to-str a) b))
        ((and (list? a) (list? b)) (append a b))
        (else (+ a b))))
(define (indexOf s sub) (let ((cur (string-contains s sub)))   (if cur (string-cursor->index s cur) -1)))
(define (_display . args) (apply display args))
(define (panic msg) (error msg))
(define (padStart s width pad)
  (let loop ((out s))
    (if (< (string-length out) width)
        (loop (string-append pad out))
        out)))
(define (_substring s start end)
  (let* ((len (string-length s))
         (s0 (max 0 (min len start)))
         (e0 (max s0 (min len end))))
    (substring s s0 e0)))
(define (_repeat s n)
  (let loop ((i 0) (out ""))
    (if (< i n)
        (loop (+ i 1) (string-append out s))
        out)))
(define (slice seq start end)
  (let* ((len (if (string? seq) (string-length seq) (length seq)))
         (s (if (< start 0) (+ len start) start))
         (e (if (< end 0) (+ len end) end)))
    (set! s (max 0 (min len s)))
    (set! e (max 0 (min len e)))
    (when (< e s) (set! e s))
    (if (string? seq)
        (_substring seq s e)
        (take (drop seq s) (- e s)))))
(define (_parseIntStr s base)
  (let* ((b (if (number? base) base 10))
         (n (string->number (if (list? s) (list->string s) s) b)))
    (if n (inexact->exact (truncate n)) 0)))
(define (_split s sep)
  (let* ((str (if (string? s) s (list->string s)))
         (del (cond ((char? sep) sep)
                     ((string? sep) (if (= (string-length sep) 1)
                                       (string-ref sep 0)
                                       sep))
                     (else sep))))
    (cond
     ((and (string? del) (string=? del ""))
      (map string (string->list str)))
     ((char? del)
      (string-split str del))
     (else
        (let loop ((r str) (acc '()))
          (let ((cur (string-contains r del)))
            (if cur
                (let ((idx (string-cursor->index r cur)))
                  (loop (_substring r (+ idx (string-length del)) (string-length r))
                        (cons (_substring r 0 idx) acc)))
                (reverse (cons r acc)))))))))
(define (_len x)
  (cond ((string? x) (string-length x))
        ((hash-table? x) (hash-table-size x))
        (else (length x))))
(define (list-ref-safe lst idx) (if (and (integer? idx) (>= idx 0) (< idx (length lst))) (list-ref lst idx) '()))
(define (list-set-safe! lst idx val) (when (and (integer? idx) (>= idx 0) (< idx (length lst))) (list-set! lst idx val)))
(
  let (
    (
      start36 (
        current-jiffy
      )
    )
     (
      jps39 (
        jiffies-per-second
      )
    )
  )
   (
    begin (
      let (
        (
          seed 123456789
        )
      )
       (
        begin (
          define (
            rand
          )
           (
            begin (
              set! seed (
                _mod (
                  + (
                    * seed 1103515245
                  )
                   12345
                )
                 2147483648
              )
            )
             seed
          )
        )
         (
          define (
            random
          )
           (
            _div (
              * 1.0 (
                rand
              )
            )
             2.147483648e+09
          )
        )
         (
          define (
            sqrtApprox x
          )
           (
            call/cc (
              lambda (
                ret1
              )
               (
                begin (
                  if (
                    <= x 0.0
                  )
                   (
                    begin (
                      ret1 0.0
                    )
                  )
                   (
                    void
                  )
                )
                 (
                  let (
                    (
                      guess x
                    )
                  )
                   (
                    begin (
                      let (
                        (
                          i 0
                        )
                      )
                       (
                        begin (
                          letrec (
                            (
                              loop2 (
                                lambda (
                                  
                                )
                                 (
                                  if (
                                    < i 20
                                  )
                                   (
                                    begin (
                                      set! guess (
                                        _div (
                                          _add guess (
                                            _div x guess
                                          )
                                        )
                                         2.0
                                      )
                                    )
                                     (
                                      set! i (
                                        + i 1
                                      )
                                    )
                                     (
                                      loop2
                                    )
                                  )
                                   (
                                    void
                                  )
                                )
                              )
                            )
                          )
                           (
                            loop2
                          )
                        )
                         (
                          ret1 guess
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
         (
          define (
            absf x
          )
           (
            if (
              < x 0.0
            )
             (
              - x
            )
             x
          )
        )
         (
          define (
            dot a b
          )
           (
            let (
              (
                s 0.0
              )
            )
             (
              begin (
                let (
                  (
                    i 0
                  )
                )
                 (
                  begin (
                    letrec (
                      (
                        loop3 (
                          lambda (
                            
                          )
                           (
                            if (
                              < i (
                                _len a
                              )
                            )
                             (
                              begin (
                                set! s (
                                  _add s (
                                    * (
                                      list-ref-safe a i
                                    )
                                     (
                                      list-ref-safe b i
                                    )
                                  )
                                )
                              )
                               (
                                set! i (
                                  + i 1
                                )
                              )
                               (
                                loop3
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop3
                    )
                  )
                   s
                )
              )
            )
          )
        )
         (
          define (
            vector_scale v s
          )
           (
            let (
              (
                res (
                  _list
                )
              )
            )
             (
              begin (
                let (
                  (
                    i 0
                  )
                )
                 (
                  begin (
                    letrec (
                      (
                        loop4 (
                          lambda (
                            
                          )
                           (
                            if (
                              < i (
                                _len v
                              )
                            )
                             (
                              begin (
                                set! res (
                                  append res (
                                    _list (
                                      * (
                                        list-ref-safe v i
                                      )
                                       s
                                    )
                                  )
                                )
                              )
                               (
                                set! i (
                                  + i 1
                                )
                              )
                               (
                                loop4
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop4
                    )
                  )
                   res
                )
              )
            )
          )
        )
         (
          define (
            vector_sub a b
          )
           (
            let (
              (
                res (
                  _list
                )
              )
            )
             (
              begin (
                let (
                  (
                    i 0
                  )
                )
                 (
                  begin (
                    letrec (
                      (
                        loop5 (
                          lambda (
                            
                          )
                           (
                            if (
                              < i (
                                _len a
                              )
                            )
                             (
                              begin (
                                set! res (
                                  append res (
                                    _list (
                                      - (
                                        list-ref-safe a i
                                      )
                                       (
                                        list-ref-safe b i
                                      )
                                    )
                                  )
                                )
                              )
                               (
                                set! i (
                                  + i 1
                                )
                              )
                               (
                                loop5
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop5
                    )
                  )
                   res
                )
              )
            )
          )
        )
         (
          define (
            vector_add a b
          )
           (
            let (
              (
                res (
                  _list
                )
              )
            )
             (
              begin (
                let (
                  (
                    i 0
                  )
                )
                 (
                  begin (
                    letrec (
                      (
                        loop6 (
                          lambda (
                            
                          )
                           (
                            if (
                              < i (
                                _len a
                              )
                            )
                             (
                              begin (
                                set! res (
                                  append res (
                                    _list (
                                      + (
                                        list-ref-safe a i
                                      )
                                       (
                                        list-ref-safe b i
                                      )
                                    )
                                  )
                                )
                              )
                               (
                                set! i (
                                  + i 1
                                )
                              )
                               (
                                loop6
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop6
                    )
                  )
                   res
                )
              )
            )
          )
        )
         (
          define (
            zeros_matrix r c
          )
           (
            let (
              (
                m (
                  _list
                )
              )
            )
             (
              begin (
                let (
                  (
                    i 0
                  )
                )
                 (
                  begin (
                    letrec (
                      (
                        loop7 (
                          lambda (
                            
                          )
                           (
                            if (
                              < i r
                            )
                             (
                              begin (
                                let (
                                  (
                                    row (
                                      _list
                                    )
                                  )
                                )
                                 (
                                  begin (
                                    let (
                                      (
                                        j 0
                                      )
                                    )
                                     (
                                      begin (
                                        letrec (
                                          (
                                            loop8 (
                                              lambda (
                                                
                                              )
                                               (
                                                if (
                                                  < j c
                                                )
                                                 (
                                                  begin (
                                                    set! row (
                                                      append row (
                                                        _list 0.0
                                                      )
                                                    )
                                                  )
                                                   (
                                                    set! j (
                                                      + j 1
                                                    )
                                                  )
                                                   (
                                                    loop8
                                                  )
                                                )
                                                 (
                                                  void
                                                )
                                              )
                                            )
                                          )
                                        )
                                         (
                                          loop8
                                        )
                                      )
                                       (
                                        set! m (
                                          append m (
                                            _list row
                                          )
                                        )
                                      )
                                       (
                                        set! i (
                                          + i 1
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                               (
                                loop7
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop7
                    )
                  )
                   m
                )
              )
            )
          )
        )
         (
          define (
            column m idx
          )
           (
            let (
              (
                col (
                  _list
                )
              )
            )
             (
              begin (
                let (
                  (
                    i 0
                  )
                )
                 (
                  begin (
                    letrec (
                      (
                        loop9 (
                          lambda (
                            
                          )
                           (
                            if (
                              < i (
                                _len m
                              )
                            )
                             (
                              begin (
                                set! col (
                                  append col (
                                    _list (
                                      cond (
                                        (
                                          string? (
                                            list-ref-safe m i
                                          )
                                        )
                                         (
                                          _substring (
                                            list-ref-safe m i
                                          )
                                           idx (
                                            + idx 1
                                          )
                                        )
                                      )
                                       (
                                        (
                                          hash-table? (
                                            list-ref-safe m i
                                          )
                                        )
                                         (
                                          hash-table-ref (
                                            list-ref-safe m i
                                          )
                                           idx
                                        )
                                      )
                                       (
                                        else (
                                          list-ref-safe (
                                            list-ref-safe m i
                                          )
                                           idx
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                               (
                                set! i (
                                  + i 1
                                )
                              )
                               (
                                loop9
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop9
                    )
                  )
                   col
                )
              )
            )
          )
        )
         (
          define (
            validate_adjacency_list graph
          )
           (
            let (
              (
                i 0
              )
            )
             (
              begin (
                letrec (
                  (
                    loop10 (
                      lambda (
                        
                      )
                       (
                        if (
                          < i (
                            _len graph
                          )
                        )
                         (
                          begin (
                            let (
                              (
                                j 0
                              )
                            )
                             (
                              begin (
                                letrec (
                                  (
                                    loop11 (
                                      lambda (
                                        
                                      )
                                       (
                                        if (
                                          < j (
                                            _len (
                                              list-ref-safe graph i
                                            )
                                          )
                                        )
                                         (
                                          begin (
                                            let (
                                              (
                                                v (
                                                  cond (
                                                    (
                                                      string? (
                                                        list-ref-safe graph i
                                                      )
                                                    )
                                                     (
                                                      _substring (
                                                        list-ref-safe graph i
                                                      )
                                                       j (
                                                        + j 1
                                                      )
                                                    )
                                                  )
                                                   (
                                                    (
                                                      hash-table? (
                                                        list-ref-safe graph i
                                                      )
                                                    )
                                                     (
                                                      hash-table-ref (
                                                        list-ref-safe graph i
                                                      )
                                                       j
                                                    )
                                                  )
                                                   (
                                                    else (
                                                      list-ref-safe (
                                                        list-ref-safe graph i
                                                      )
                                                       j
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                             (
                                              begin (
                                                if (
                                                  or (
                                                    < v 0
                                                  )
                                                   (
                                                    >= v (
                                                      _len graph
                                                    )
                                                  )
                                                )
                                                 (
                                                  begin (
                                                    panic "Invalid neighbor"
                                                  )
                                                )
                                                 (
                                                  void
                                                )
                                              )
                                               (
                                                set! j (
                                                  + j 1
                                                )
                                              )
                                            )
                                          )
                                           (
                                            loop11
                                          )
                                        )
                                         (
                                          void
                                        )
                                      )
                                    )
                                  )
                                )
                                 (
                                  loop11
                                )
                              )
                               (
                                set! i (
                                  + i 1
                                )
                              )
                            )
                          )
                           (
                            loop10
                          )
                        )
                         (
                          void
                        )
                      )
                    )
                  )
                )
                 (
                  loop10
                )
              )
            )
          )
        )
         (
          define (
            multiply_matrix_vector graph vector
          )
           (
            let (
              (
                n (
                  _len graph
                )
              )
            )
             (
              begin (
                if (
                  not (
                    equal? (
                      _len vector
                    )
                     n
                  )
                )
                 (
                  begin (
                    panic "Vector length must match number of nodes"
                  )
                )
                 (
                  void
                )
              )
               (
                let (
                  (
                    result (
                      _list
                    )
                  )
                )
                 (
                  begin (
                    let (
                      (
                        i 0
                      )
                    )
                     (
                      begin (
                        letrec (
                          (
                            loop12 (
                              lambda (
                                
                              )
                               (
                                if (
                                  < i n
                                )
                                 (
                                  begin (
                                    let (
                                      (
                                        sum 0.0
                                      )
                                    )
                                     (
                                      begin (
                                        let (
                                          (
                                            j 0
                                          )
                                        )
                                         (
                                          begin (
                                            letrec (
                                              (
                                                loop13 (
                                                  lambda (
                                                    
                                                  )
                                                   (
                                                    if (
                                                      < j (
                                                        _len (
                                                          list-ref-safe graph i
                                                        )
                                                      )
                                                    )
                                                     (
                                                      begin (
                                                        let (
                                                          (
                                                            nb (
                                                              cond (
                                                                (
                                                                  string? (
                                                                    list-ref-safe graph i
                                                                  )
                                                                )
                                                                 (
                                                                  _substring (
                                                                    list-ref-safe graph i
                                                                  )
                                                                   j (
                                                                    + j 1
                                                                  )
                                                                )
                                                              )
                                                               (
                                                                (
                                                                  hash-table? (
                                                                    list-ref-safe graph i
                                                                  )
                                                                )
                                                                 (
                                                                  hash-table-ref (
                                                                    list-ref-safe graph i
                                                                  )
                                                                   j
                                                                )
                                                              )
                                                               (
                                                                else (
                                                                  list-ref-safe (
                                                                    list-ref-safe graph i
                                                                  )
                                                                   j
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                         (
                                                          begin (
                                                            set! sum (
                                                              + sum (
                                                                list-ref-safe vector nb
                                                              )
                                                            )
                                                          )
                                                           (
                                                            set! j (
                                                              + j 1
                                                            )
                                                          )
                                                        )
                                                      )
                                                       (
                                                        loop13
                                                      )
                                                    )
                                                     (
                                                      void
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                             (
                                              loop13
                                            )
                                          )
                                           (
                                            set! result (
                                              append result (
                                                _list sum
                                              )
                                            )
                                          )
                                           (
                                            set! i (
                                              + i 1
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                   (
                                    loop12
                                  )
                                )
                                 (
                                  void
                                )
                              )
                            )
                          )
                        )
                         (
                          loop12
                        )
                      )
                       result
                    )
                  )
                )
              )
            )
          )
        )
         (
          define (
            lanczos_iteration graph k
          )
           (
            let (
              (
                n (
                  _len graph
                )
              )
            )
             (
              begin (
                if (
                  or (
                    < k 1
                  )
                   (
                    > k n
                  )
                )
                 (
                  begin (
                    panic "invalid number of eigenvectors"
                  )
                )
                 (
                  void
                )
              )
               (
                let (
                  (
                    q (
                      zeros_matrix n k
                    )
                  )
                )
                 (
                  begin (
                    let (
                      (
                        t (
                          zeros_matrix k k
                        )
                      )
                    )
                     (
                      begin (
                        let (
                          (
                            v (
                              _list
                            )
                          )
                        )
                         (
                          begin (
                            let (
                              (
                                i 0
                              )
                            )
                             (
                              begin (
                                letrec (
                                  (
                                    loop14 (
                                      lambda (
                                        
                                      )
                                       (
                                        if (
                                          < i n
                                        )
                                         (
                                          begin (
                                            set! v (
                                              append v (
                                                _list (
                                                  random
                                                )
                                              )
                                            )
                                          )
                                           (
                                            set! i (
                                              + i 1
                                            )
                                          )
                                           (
                                            loop14
                                          )
                                        )
                                         (
                                          void
                                        )
                                      )
                                    )
                                  )
                                )
                                 (
                                  loop14
                                )
                              )
                               (
                                let (
                                  (
                                    ss 0.0
                                  )
                                )
                                 (
                                  begin (
                                    set! i 0
                                  )
                                   (
                                    letrec (
                                      (
                                        loop15 (
                                          lambda (
                                            
                                          )
                                           (
                                            if (
                                              < i n
                                            )
                                             (
                                              begin (
                                                set! ss (
                                                  _add ss (
                                                    * (
                                                      list-ref-safe v i
                                                    )
                                                     (
                                                      list-ref-safe v i
                                                    )
                                                  )
                                                )
                                              )
                                               (
                                                set! i (
                                                  + i 1
                                                )
                                              )
                                               (
                                                loop15
                                              )
                                            )
                                             (
                                              void
                                            )
                                          )
                                        )
                                      )
                                    )
                                     (
                                      loop15
                                    )
                                  )
                                   (
                                    let (
                                      (
                                        vnorm (
                                          sqrtApprox ss
                                        )
                                      )
                                    )
                                     (
                                      begin (
                                        set! i 0
                                      )
                                       (
                                        letrec (
                                          (
                                            loop16 (
                                              lambda (
                                                
                                              )
                                               (
                                                if (
                                                  < i n
                                                )
                                                 (
                                                  begin (
                                                    list-set-safe! (
                                                      list-ref-safe q i
                                                    )
                                                     0 (
                                                      _div (
                                                        list-ref-safe v i
                                                      )
                                                       vnorm
                                                    )
                                                  )
                                                   (
                                                    set! i (
                                                      + i 1
                                                    )
                                                  )
                                                   (
                                                    loop16
                                                  )
                                                )
                                                 (
                                                  void
                                                )
                                              )
                                            )
                                          )
                                        )
                                         (
                                          loop16
                                        )
                                      )
                                       (
                                        let (
                                          (
                                            beta 0.0
                                          )
                                        )
                                         (
                                          begin (
                                            let (
                                              (
                                                j 0
                                              )
                                            )
                                             (
                                              begin (
                                                letrec (
                                                  (
                                                    loop17 (
                                                      lambda (
                                                        
                                                      )
                                                       (
                                                        if (
                                                          < j k
                                                        )
                                                         (
                                                          begin (
                                                            let (
                                                              (
                                                                w (
                                                                  multiply_matrix_vector graph (
                                                                    column q j
                                                                  )
                                                                )
                                                              )
                                                            )
                                                             (
                                                              begin (
                                                                if (
                                                                  > j 0
                                                                )
                                                                 (
                                                                  begin (
                                                                    set! w (
                                                                      vector_sub w (
                                                                        vector_scale (
                                                                          column q (
                                                                            - j 1
                                                                          )
                                                                        )
                                                                         beta
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                                 (
                                                                  void
                                                                )
                                                              )
                                                               (
                                                                let (
                                                                  (
                                                                    alpha (
                                                                      dot (
                                                                        column q j
                                                                      )
                                                                       w
                                                                    )
                                                                  )
                                                                )
                                                                 (
                                                                  begin (
                                                                    set! w (
                                                                      vector_sub w (
                                                                        vector_scale (
                                                                          column q j
                                                                        )
                                                                         alpha
                                                                      )
                                                                    )
                                                                  )
                                                                   (
                                                                    let (
                                                                      (
                                                                        ss2 0.0
                                                                      )
                                                                    )
                                                                     (
                                                                      begin (
                                                                        let (
                                                                          (
                                                                            p 0
                                                                          )
                                                                        )
                                                                         (
                                                                          begin (
                                                                            letrec (
                                                                              (
                                                                                loop18 (
                                                                                  lambda (
                                                                                    
                                                                                  )
                                                                                   (
                                                                                    if (
                                                                                      < p n
                                                                                    )
                                                                                     (
                                                                                      begin (
                                                                                        set! ss2 (
                                                                                          _add ss2 (
                                                                                            * (
                                                                                              cond (
                                                                                                (
                                                                                                  string? w
                                                                                                )
                                                                                                 (
                                                                                                  _substring w p (
                                                                                                    + p 1
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                               (
                                                                                                (
                                                                                                  hash-table? w
                                                                                                )
                                                                                                 (
                                                                                                  hash-table-ref w p
                                                                                                )
                                                                                              )
                                                                                               (
                                                                                                else (
                                                                                                  list-ref-safe w p
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                             (
                                                                                              cond (
                                                                                                (
                                                                                                  string? w
                                                                                                )
                                                                                                 (
                                                                                                  _substring w p (
                                                                                                    + p 1
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                               (
                                                                                                (
                                                                                                  hash-table? w
                                                                                                )
                                                                                                 (
                                                                                                  hash-table-ref w p
                                                                                                )
                                                                                              )
                                                                                               (
                                                                                                else (
                                                                                                  list-ref-safe w p
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                       (
                                                                                        set! p (
                                                                                          + p 1
                                                                                        )
                                                                                      )
                                                                                       (
                                                                                        loop18
                                                                                      )
                                                                                    )
                                                                                     (
                                                                                      void
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                             (
                                                                              loop18
                                                                            )
                                                                          )
                                                                           (
                                                                            set! beta (
                                                                              sqrtApprox ss2
                                                                            )
                                                                          )
                                                                           (
                                                                            list-set-safe! (
                                                                              list-ref-safe t j
                                                                            )
                                                                             j alpha
                                                                          )
                                                                           (
                                                                            if (
                                                                              < j (
                                                                                - k 1
                                                                              )
                                                                            )
                                                                             (
                                                                              begin (
                                                                                list-set-safe! (
                                                                                  list-ref-safe t j
                                                                                )
                                                                                 (
                                                                                  + j 1
                                                                                )
                                                                                 beta
                                                                              )
                                                                               (
                                                                                list-set-safe! (
                                                                                  list-ref-safe t (
                                                                                    + j 1
                                                                                  )
                                                                                )
                                                                                 j beta
                                                                              )
                                                                               (
                                                                                if (
                                                                                  > beta 1e-10
                                                                                )
                                                                                 (
                                                                                  begin (
                                                                                    let (
                                                                                      (
                                                                                        wnorm (
                                                                                          vector_scale w (
                                                                                            _div 1.0 beta
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                     (
                                                                                      begin (
                                                                                        let (
                                                                                          (
                                                                                            r 0
                                                                                          )
                                                                                        )
                                                                                         (
                                                                                          begin (
                                                                                            letrec (
                                                                                              (
                                                                                                loop19 (
                                                                                                  lambda (
                                                                                                    
                                                                                                  )
                                                                                                   (
                                                                                                    if (
                                                                                                      < r n
                                                                                                    )
                                                                                                     (
                                                                                                      begin (
                                                                                                        list-set-safe! (
                                                                                                          list-ref-safe q r
                                                                                                        )
                                                                                                         (
                                                                                                          + j 1
                                                                                                        )
                                                                                                         (
                                                                                                          cond (
                                                                                                            (
                                                                                                              string? wnorm
                                                                                                            )
                                                                                                             (
                                                                                                              _substring wnorm r (
                                                                                                                + r 1
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                           (
                                                                                                            (
                                                                                                              hash-table? wnorm
                                                                                                            )
                                                                                                             (
                                                                                                              hash-table-ref wnorm r
                                                                                                            )
                                                                                                          )
                                                                                                           (
                                                                                                            else (
                                                                                                              list-ref-safe wnorm r
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                       (
                                                                                                        set! r (
                                                                                                          + r 1
                                                                                                        )
                                                                                                      )
                                                                                                       (
                                                                                                        loop19
                                                                                                      )
                                                                                                    )
                                                                                                     (
                                                                                                      void
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                             (
                                                                                              loop19
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                                 (
                                                                                  void
                                                                                )
                                                                              )
                                                                            )
                                                                             (
                                                                              void
                                                                            )
                                                                          )
                                                                           (
                                                                            set! j (
                                                                              + j 1
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                           (
                                                            loop17
                                                          )
                                                        )
                                                         (
                                                          void
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                                 (
                                                  loop17
                                                )
                                              )
                                               (
                                                alist->hash-table (
                                                  _list (
                                                    cons "t" t
                                                  )
                                                   (
                                                    cons "q" q
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
         (
          define (
            jacobi_eigen a_in max_iter
          )
           (
            let (
              (
                n (
                  _len a_in
                )
              )
            )
             (
              begin (
                let (
                  (
                    a a_in
                  )
                )
                 (
                  begin (
                    let (
                      (
                        v (
                          zeros_matrix n n
                        )
                      )
                    )
                     (
                      begin (
                        let (
                          (
                            i 0
                          )
                        )
                         (
                          begin (
                            letrec (
                              (
                                loop20 (
                                  lambda (
                                    
                                  )
                                   (
                                    if (
                                      < i n
                                    )
                                     (
                                      begin (
                                        list-set-safe! (
                                          list-ref-safe v i
                                        )
                                         i 1.0
                                      )
                                       (
                                        set! i (
                                          + i 1
                                        )
                                      )
                                       (
                                        loop20
                                      )
                                    )
                                     (
                                      void
                                    )
                                  )
                                )
                              )
                            )
                             (
                              loop20
                            )
                          )
                           (
                            let (
                              (
                                iter 0
                              )
                            )
                             (
                              begin (
                                call/cc (
                                  lambda (
                                    break22
                                  )
                                   (
                                    letrec (
                                      (
                                        loop21 (
                                          lambda (
                                            
                                          )
                                           (
                                            if (
                                              < iter max_iter
                                            )
                                             (
                                              begin (
                                                let (
                                                  (
                                                    p 0
                                                  )
                                                )
                                                 (
                                                  begin (
                                                    let (
                                                      (
                                                        q 1
                                                      )
                                                    )
                                                     (
                                                      begin (
                                                        let (
                                                          (
                                                            max (
                                                              absf (
                                                                cond (
                                                                  (
                                                                    string? (
                                                                      list-ref-safe a p
                                                                    )
                                                                  )
                                                                   (
                                                                    _substring (
                                                                      list-ref-safe a p
                                                                    )
                                                                     q (
                                                                      + q 1
                                                                    )
                                                                  )
                                                                )
                                                                 (
                                                                  (
                                                                    hash-table? (
                                                                      list-ref-safe a p
                                                                    )
                                                                  )
                                                                   (
                                                                    hash-table-ref (
                                                                      list-ref-safe a p
                                                                    )
                                                                     q
                                                                  )
                                                                )
                                                                 (
                                                                  else (
                                                                    list-ref-safe (
                                                                      list-ref-safe a p
                                                                    )
                                                                     q
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                         (
                                                          begin (
                                                            set! i 0
                                                          )
                                                           (
                                                            letrec (
                                                              (
                                                                loop23 (
                                                                  lambda (
                                                                    
                                                                  )
                                                                   (
                                                                    if (
                                                                      < i n
                                                                    )
                                                                     (
                                                                      begin (
                                                                        let (
                                                                          (
                                                                            j (
                                                                              + i 1
                                                                            )
                                                                          )
                                                                        )
                                                                         (
                                                                          begin (
                                                                            letrec (
                                                                              (
                                                                                loop24 (
                                                                                  lambda (
                                                                                    
                                                                                  )
                                                                                   (
                                                                                    if (
                                                                                      < j n
                                                                                    )
                                                                                     (
                                                                                      begin (
                                                                                        let (
                                                                                          (
                                                                                            val (
                                                                                              absf (
                                                                                                cond (
                                                                                                  (
                                                                                                    string? (
                                                                                                      list-ref-safe a i
                                                                                                    )
                                                                                                  )
                                                                                                   (
                                                                                                    _substring (
                                                                                                      list-ref-safe a i
                                                                                                    )
                                                                                                     j (
                                                                                                      + j 1
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                                 (
                                                                                                  (
                                                                                                    hash-table? (
                                                                                                      list-ref-safe a i
                                                                                                    )
                                                                                                  )
                                                                                                   (
                                                                                                    hash-table-ref (
                                                                                                      list-ref-safe a i
                                                                                                    )
                                                                                                     j
                                                                                                  )
                                                                                                )
                                                                                                 (
                                                                                                  else (
                                                                                                    list-ref-safe (
                                                                                                      list-ref-safe a i
                                                                                                    )
                                                                                                     j
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                         (
                                                                                          begin (
                                                                                            if (
                                                                                              _gt val max
                                                                                            )
                                                                                             (
                                                                                              begin (
                                                                                                set! max val
                                                                                              )
                                                                                               (
                                                                                                set! p i
                                                                                              )
                                                                                               (
                                                                                                set! q j
                                                                                              )
                                                                                            )
                                                                                             (
                                                                                              void
                                                                                            )
                                                                                          )
                                                                                           (
                                                                                            set! j (
                                                                                              + j 1
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                       (
                                                                                        loop24
                                                                                      )
                                                                                    )
                                                                                     (
                                                                                      void
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                             (
                                                                              loop24
                                                                            )
                                                                          )
                                                                           (
                                                                            set! i (
                                                                              + i 1
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                       (
                                                                        loop23
                                                                      )
                                                                    )
                                                                     (
                                                                      void
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                             (
                                                              loop23
                                                            )
                                                          )
                                                           (
                                                            if (
                                                              _lt max 1e-08
                                                            )
                                                             (
                                                              begin (
                                                                break22 (
                                                                  void
                                                                )
                                                              )
                                                            )
                                                             (
                                                              void
                                                            )
                                                          )
                                                           (
                                                            let (
                                                              (
                                                                app (
                                                                  cond (
                                                                    (
                                                                      string? (
                                                                        list-ref-safe a p
                                                                      )
                                                                    )
                                                                     (
                                                                      _substring (
                                                                        list-ref-safe a p
                                                                      )
                                                                       p (
                                                                        + p 1
                                                                      )
                                                                    )
                                                                  )
                                                                   (
                                                                    (
                                                                      hash-table? (
                                                                        list-ref-safe a p
                                                                      )
                                                                    )
                                                                     (
                                                                      hash-table-ref (
                                                                        list-ref-safe a p
                                                                      )
                                                                       p
                                                                    )
                                                                  )
                                                                   (
                                                                    else (
                                                                      list-ref-safe (
                                                                        list-ref-safe a p
                                                                      )
                                                                       p
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                             (
                                                              begin (
                                                                let (
                                                                  (
                                                                    aqq (
                                                                      cond (
                                                                        (
                                                                          string? (
                                                                            list-ref-safe a q
                                                                          )
                                                                        )
                                                                         (
                                                                          _substring (
                                                                            list-ref-safe a q
                                                                          )
                                                                           q (
                                                                            + q 1
                                                                          )
                                                                        )
                                                                      )
                                                                       (
                                                                        (
                                                                          hash-table? (
                                                                            list-ref-safe a q
                                                                          )
                                                                        )
                                                                         (
                                                                          hash-table-ref (
                                                                            list-ref-safe a q
                                                                          )
                                                                           q
                                                                        )
                                                                      )
                                                                       (
                                                                        else (
                                                                          list-ref-safe (
                                                                            list-ref-safe a q
                                                                          )
                                                                           q
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                                 (
                                                                  begin (
                                                                    let (
                                                                      (
                                                                        apq (
                                                                          cond (
                                                                            (
                                                                              string? (
                                                                                list-ref-safe a p
                                                                              )
                                                                            )
                                                                             (
                                                                              _substring (
                                                                                list-ref-safe a p
                                                                              )
                                                                               q (
                                                                                + q 1
                                                                              )
                                                                            )
                                                                          )
                                                                           (
                                                                            (
                                                                              hash-table? (
                                                                                list-ref-safe a p
                                                                              )
                                                                            )
                                                                             (
                                                                              hash-table-ref (
                                                                                list-ref-safe a p
                                                                              )
                                                                               q
                                                                            )
                                                                          )
                                                                           (
                                                                            else (
                                                                              list-ref-safe (
                                                                                list-ref-safe a p
                                                                              )
                                                                               q
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                     (
                                                                      begin (
                                                                        let (
                                                                          (
                                                                            theta (
                                                                              _div (
                                                                                - aqq app
                                                                              )
                                                                               (
                                                                                * 2.0 apq
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                         (
                                                                          begin (
                                                                            let (
                                                                              (
                                                                                t (
                                                                                  _div 1.0 (
                                                                                    _add (
                                                                                      absf theta
                                                                                    )
                                                                                     (
                                                                                      sqrtApprox (
                                                                                        _add (
                                                                                          * theta theta
                                                                                        )
                                                                                         1.0
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                             (
                                                                              begin (
                                                                                if (
                                                                                  < theta 0.0
                                                                                )
                                                                                 (
                                                                                  begin (
                                                                                    set! t (
                                                                                      - t
                                                                                    )
                                                                                  )
                                                                                )
                                                                                 (
                                                                                  void
                                                                                )
                                                                              )
                                                                               (
                                                                                let (
                                                                                  (
                                                                                    c (
                                                                                      _div 1.0 (
                                                                                        sqrtApprox (
                                                                                          _add 1.0 (
                                                                                            * t t
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                                 (
                                                                                  begin (
                                                                                    let (
                                                                                      (
                                                                                        s (
                                                                                          * t c
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                     (
                                                                                      begin (
                                                                                        let (
                                                                                          (
                                                                                            tau (
                                                                                              _div s (
                                                                                                _add 1.0 c
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                         (
                                                                                          begin (
                                                                                            list-set-safe! (
                                                                                              list-ref-safe a p
                                                                                            )
                                                                                             p (
                                                                                              - app (
                                                                                                * t apq
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                           (
                                                                                            list-set-safe! (
                                                                                              list-ref-safe a q
                                                                                            )
                                                                                             q (
                                                                                              _add aqq (
                                                                                                * t apq
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                           (
                                                                                            list-set-safe! (
                                                                                              list-ref-safe a p
                                                                                            )
                                                                                             q 0.0
                                                                                          )
                                                                                           (
                                                                                            list-set-safe! (
                                                                                              list-ref-safe a q
                                                                                            )
                                                                                             p 0.0
                                                                                          )
                                                                                           (
                                                                                            let (
                                                                                              (
                                                                                                k 0
                                                                                              )
                                                                                            )
                                                                                             (
                                                                                              begin (
                                                                                                letrec (
                                                                                                  (
                                                                                                    loop25 (
                                                                                                      lambda (
                                                                                                        
                                                                                                      )
                                                                                                       (
                                                                                                        if (
                                                                                                          < k n
                                                                                                        )
                                                                                                         (
                                                                                                          begin (
                                                                                                            if (
                                                                                                              and (
                                                                                                                not (
                                                                                                                  equal? k p
                                                                                                                )
                                                                                                              )
                                                                                                               (
                                                                                                                not (
                                                                                                                  equal? k q
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                             (
                                                                                                              begin (
                                                                                                                let (
                                                                                                                  (
                                                                                                                    akp (
                                                                                                                      cond (
                                                                                                                        (
                                                                                                                          string? (
                                                                                                                            list-ref-safe a k
                                                                                                                          )
                                                                                                                        )
                                                                                                                         (
                                                                                                                          _substring (
                                                                                                                            list-ref-safe a k
                                                                                                                          )
                                                                                                                           p (
                                                                                                                            + p 1
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )
                                                                                                                       (
                                                                                                                        (
                                                                                                                          hash-table? (
                                                                                                                            list-ref-safe a k
                                                                                                                          )
                                                                                                                        )
                                                                                                                         (
                                                                                                                          hash-table-ref (
                                                                                                                            list-ref-safe a k
                                                                                                                          )
                                                                                                                           p
                                                                                                                        )
                                                                                                                      )
                                                                                                                       (
                                                                                                                        else (
                                                                                                                          list-ref-safe (
                                                                                                                            list-ref-safe a k
                                                                                                                          )
                                                                                                                           p
                                                                                                                        )
                                                                                                                      )
                                                                                                                    )
                                                                                                                  )
                                                                                                                )
                                                                                                                 (
                                                                                                                  begin (
                                                                                                                    let (
                                                                                                                      (
                                                                                                                        akq (
                                                                                                                          cond (
                                                                                                                            (
                                                                                                                              string? (
                                                                                                                                list-ref-safe a k
                                                                                                                              )
                                                                                                                            )
                                                                                                                             (
                                                                                                                              _substring (
                                                                                                                                list-ref-safe a k
                                                                                                                              )
                                                                                                                               q (
                                                                                                                                + q 1
                                                                                                                              )
                                                                                                                            )
                                                                                                                          )
                                                                                                                           (
                                                                                                                            (
                                                                                                                              hash-table? (
                                                                                                                                list-ref-safe a k
                                                                                                                              )
                                                                                                                            )
                                                                                                                             (
                                                                                                                              hash-table-ref (
                                                                                                                                list-ref-safe a k
                                                                                                                              )
                                                                                                                               q
                                                                                                                            )
                                                                                                                          )
                                                                                                                           (
                                                                                                                            else (
                                                                                                                              list-ref-safe (
                                                                                                                                list-ref-safe a k
                                                                                                                              )
                                                                                                                               q
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )
                                                                                                                    )
                                                                                                                     (
                                                                                                                      begin (
                                                                                                                        list-set-safe! (
                                                                                                                          list-ref-safe a k
                                                                                                                        )
                                                                                                                         p (
                                                                                                                          - akp (
                                                                                                                            * s (
                                                                                                                              _add akq (
                                                                                                                                * tau akp
                                                                                                                              )
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )
                                                                                                                       (
                                                                                                                        list-set-safe! (
                                                                                                                          list-ref-safe a p
                                                                                                                        )
                                                                                                                         k (
                                                                                                                          cond (
                                                                                                                            (
                                                                                                                              string? (
                                                                                                                                list-ref-safe a k
                                                                                                                              )
                                                                                                                            )
                                                                                                                             (
                                                                                                                              _substring (
                                                                                                                                list-ref-safe a k
                                                                                                                              )
                                                                                                                               p (
                                                                                                                                + p 1
                                                                                                                              )
                                                                                                                            )
                                                                                                                          )
                                                                                                                           (
                                                                                                                            (
                                                                                                                              hash-table? (
                                                                                                                                list-ref-safe a k
                                                                                                                              )
                                                                                                                            )
                                                                                                                             (
                                                                                                                              hash-table-ref (
                                                                                                                                list-ref-safe a k
                                                                                                                              )
                                                                                                                               p
                                                                                                                            )
                                                                                                                          )
                                                                                                                           (
                                                                                                                            else (
                                                                                                                              list-ref-safe (
                                                                                                                                list-ref-safe a k
                                                                                                                              )
                                                                                                                               p
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )
                                                                                                                       (
                                                                                                                        list-set-safe! (
                                                                                                                          list-ref-safe a k
                                                                                                                        )
                                                                                                                         q (
                                                                                                                          _add akq (
                                                                                                                            * s (
                                                                                                                              - akp (
                                                                                                                                * tau akq
                                                                                                                              )
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )
                                                                                                                       (
                                                                                                                        list-set-safe! (
                                                                                                                          list-ref-safe a q
                                                                                                                        )
                                                                                                                         k (
                                                                                                                          cond (
                                                                                                                            (
                                                                                                                              string? (
                                                                                                                                list-ref-safe a k
                                                                                                                              )
                                                                                                                            )
                                                                                                                             (
                                                                                                                              _substring (
                                                                                                                                list-ref-safe a k
                                                                                                                              )
                                                                                                                               q (
                                                                                                                                + q 1
                                                                                                                              )
                                                                                                                            )
                                                                                                                          )
                                                                                                                           (
                                                                                                                            (
                                                                                                                              hash-table? (
                                                                                                                                list-ref-safe a k
                                                                                                                              )
                                                                                                                            )
                                                                                                                             (
                                                                                                                              hash-table-ref (
                                                                                                                                list-ref-safe a k
                                                                                                                              )
                                                                                                                               q
                                                                                                                            )
                                                                                                                          )
                                                                                                                           (
                                                                                                                            else (
                                                                                                                              list-ref-safe (
                                                                                                                                list-ref-safe a k
                                                                                                                              )
                                                                                                                               q
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )
                                                                                                                    )
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                             (
                                                                                                              void
                                                                                                            )
                                                                                                          )
                                                                                                           (
                                                                                                            set! k (
                                                                                                              + k 1
                                                                                                            )
                                                                                                          )
                                                                                                           (
                                                                                                            loop25
                                                                                                          )
                                                                                                        )
                                                                                                         (
                                                                                                          void
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                                 (
                                                                                                  loop25
                                                                                                )
                                                                                              )
                                                                                               (
                                                                                                set! k 0
                                                                                              )
                                                                                               (
                                                                                                letrec (
                                                                                                  (
                                                                                                    loop26 (
                                                                                                      lambda (
                                                                                                        
                                                                                                      )
                                                                                                       (
                                                                                                        if (
                                                                                                          < k n
                                                                                                        )
                                                                                                         (
                                                                                                          begin (
                                                                                                            let (
                                                                                                              (
                                                                                                                vkp (
                                                                                                                  cond (
                                                                                                                    (
                                                                                                                      string? (
                                                                                                                        cond (
                                                                                                                          (
                                                                                                                            string? v
                                                                                                                          )
                                                                                                                           (
                                                                                                                            _substring v k (
                                                                                                                              + k 1
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                         (
                                                                                                                          (
                                                                                                                            hash-table? v
                                                                                                                          )
                                                                                                                           (
                                                                                                                            hash-table-ref v k
                                                                                                                          )
                                                                                                                        )
                                                                                                                         (
                                                                                                                          else (
                                                                                                                            list-ref-safe v k
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )
                                                                                                                    )
                                                                                                                     (
                                                                                                                      _substring (
                                                                                                                        cond (
                                                                                                                          (
                                                                                                                            string? v
                                                                                                                          )
                                                                                                                           (
                                                                                                                            _substring v k (
                                                                                                                              + k 1
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                         (
                                                                                                                          (
                                                                                                                            hash-table? v
                                                                                                                          )
                                                                                                                           (
                                                                                                                            hash-table-ref v k
                                                                                                                          )
                                                                                                                        )
                                                                                                                         (
                                                                                                                          else (
                                                                                                                            list-ref-safe v k
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )
                                                                                                                       p (
                                                                                                                        + p 1
                                                                                                                      )
                                                                                                                    )
                                                                                                                  )
                                                                                                                   (
                                                                                                                    (
                                                                                                                      hash-table? (
                                                                                                                        cond (
                                                                                                                          (
                                                                                                                            string? v
                                                                                                                          )
                                                                                                                           (
                                                                                                                            _substring v k (
                                                                                                                              + k 1
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                         (
                                                                                                                          (
                                                                                                                            hash-table? v
                                                                                                                          )
                                                                                                                           (
                                                                                                                            hash-table-ref v k
                                                                                                                          )
                                                                                                                        )
                                                                                                                         (
                                                                                                                          else (
                                                                                                                            list-ref-safe v k
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )
                                                                                                                    )
                                                                                                                     (
                                                                                                                      hash-table-ref (
                                                                                                                        cond (
                                                                                                                          (
                                                                                                                            string? v
                                                                                                                          )
                                                                                                                           (
                                                                                                                            _substring v k (
                                                                                                                              + k 1
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                         (
                                                                                                                          (
                                                                                                                            hash-table? v
                                                                                                                          )
                                                                                                                           (
                                                                                                                            hash-table-ref v k
                                                                                                                          )
                                                                                                                        )
                                                                                                                         (
                                                                                                                          else (
                                                                                                                            list-ref-safe v k
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )
                                                                                                                       p
                                                                                                                    )
                                                                                                                  )
                                                                                                                   (
                                                                                                                    else (
                                                                                                                      list-ref-safe (
                                                                                                                        cond (
                                                                                                                          (
                                                                                                                            string? v
                                                                                                                          )
                                                                                                                           (
                                                                                                                            _substring v k (
                                                                                                                              + k 1
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                         (
                                                                                                                          (
                                                                                                                            hash-table? v
                                                                                                                          )
                                                                                                                           (
                                                                                                                            hash-table-ref v k
                                                                                                                          )
                                                                                                                        )
                                                                                                                         (
                                                                                                                          else (
                                                                                                                            list-ref-safe v k
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )
                                                                                                                       p
                                                                                                                    )
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                             (
                                                                                                              begin (
                                                                                                                let (
                                                                                                                  (
                                                                                                                    vkq (
                                                                                                                      cond (
                                                                                                                        (
                                                                                                                          string? (
                                                                                                                            cond (
                                                                                                                              (
                                                                                                                                string? v
                                                                                                                              )
                                                                                                                               (
                                                                                                                                _substring v k (
                                                                                                                                  + k 1
                                                                                                                                )
                                                                                                                              )
                                                                                                                            )
                                                                                                                             (
                                                                                                                              (
                                                                                                                                hash-table? v
                                                                                                                              )
                                                                                                                               (
                                                                                                                                hash-table-ref v k
                                                                                                                              )
                                                                                                                            )
                                                                                                                             (
                                                                                                                              else (
                                                                                                                                list-ref-safe v k
                                                                                                                              )
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                         (
                                                                                                                          _substring (
                                                                                                                            cond (
                                                                                                                              (
                                                                                                                                string? v
                                                                                                                              )
                                                                                                                               (
                                                                                                                                _substring v k (
                                                                                                                                  + k 1
                                                                                                                                )
                                                                                                                              )
                                                                                                                            )
                                                                                                                             (
                                                                                                                              (
                                                                                                                                hash-table? v
                                                                                                                              )
                                                                                                                               (
                                                                                                                                hash-table-ref v k
                                                                                                                              )
                                                                                                                            )
                                                                                                                             (
                                                                                                                              else (
                                                                                                                                list-ref-safe v k
                                                                                                                              )
                                                                                                                            )
                                                                                                                          )
                                                                                                                           q (
                                                                                                                            + q 1
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )
                                                                                                                       (
                                                                                                                        (
                                                                                                                          hash-table? (
                                                                                                                            cond (
                                                                                                                              (
                                                                                                                                string? v
                                                                                                                              )
                                                                                                                               (
                                                                                                                                _substring v k (
                                                                                                                                  + k 1
                                                                                                                                )
                                                                                                                              )
                                                                                                                            )
                                                                                                                             (
                                                                                                                              (
                                                                                                                                hash-table? v
                                                                                                                              )
                                                                                                                               (
                                                                                                                                hash-table-ref v k
                                                                                                                              )
                                                                                                                            )
                                                                                                                             (
                                                                                                                              else (
                                                                                                                                list-ref-safe v k
                                                                                                                              )
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                         (
                                                                                                                          hash-table-ref (
                                                                                                                            cond (
                                                                                                                              (
                                                                                                                                string? v
                                                                                                                              )
                                                                                                                               (
                                                                                                                                _substring v k (
                                                                                                                                  + k 1
                                                                                                                                )
                                                                                                                              )
                                                                                                                            )
                                                                                                                             (
                                                                                                                              (
                                                                                                                                hash-table? v
                                                                                                                              )
                                                                                                                               (
                                                                                                                                hash-table-ref v k
                                                                                                                              )
                                                                                                                            )
                                                                                                                             (
                                                                                                                              else (
                                                                                                                                list-ref-safe v k
                                                                                                                              )
                                                                                                                            )
                                                                                                                          )
                                                                                                                           q
                                                                                                                        )
                                                                                                                      )
                                                                                                                       (
                                                                                                                        else (
                                                                                                                          list-ref-safe (
                                                                                                                            cond (
                                                                                                                              (
                                                                                                                                string? v
                                                                                                                              )
                                                                                                                               (
                                                                                                                                _substring v k (
                                                                                                                                  + k 1
                                                                                                                                )
                                                                                                                              )
                                                                                                                            )
                                                                                                                             (
                                                                                                                              (
                                                                                                                                hash-table? v
                                                                                                                              )
                                                                                                                               (
                                                                                                                                hash-table-ref v k
                                                                                                                              )
                                                                                                                            )
                                                                                                                             (
                                                                                                                              else (
                                                                                                                                list-ref-safe v k
                                                                                                                              )
                                                                                                                            )
                                                                                                                          )
                                                                                                                           q
                                                                                                                        )
                                                                                                                      )
                                                                                                                    )
                                                                                                                  )
                                                                                                                )
                                                                                                                 (
                                                                                                                  begin (
                                                                                                                    list-set-safe! (
                                                                                                                      list-ref-safe v k
                                                                                                                    )
                                                                                                                     p (
                                                                                                                      - vkp (
                                                                                                                        * s (
                                                                                                                          _add vkq (
                                                                                                                            * tau vkp
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )
                                                                                                                    )
                                                                                                                  )
                                                                                                                   (
                                                                                                                    list-set-safe! (
                                                                                                                      list-ref-safe v k
                                                                                                                    )
                                                                                                                     q (
                                                                                                                      _add vkq (
                                                                                                                        * s (
                                                                                                                          - vkp (
                                                                                                                            * tau vkq
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )
                                                                                                                    )
                                                                                                                  )
                                                                                                                   (
                                                                                                                    set! k (
                                                                                                                      + k 1
                                                                                                                    )
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                           (
                                                                                                            loop26
                                                                                                          )
                                                                                                        )
                                                                                                         (
                                                                                                          void
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                                 (
                                                                                                  loop26
                                                                                                )
                                                                                              )
                                                                                               (
                                                                                                set! iter (
                                                                                                  + iter 1
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                               (
                                                loop21
                                              )
                                            )
                                             (
                                              void
                                            )
                                          )
                                        )
                                      )
                                    )
                                     (
                                      loop21
                                    )
                                  )
                                )
                              )
                               (
                                let (
                                  (
                                    eigenvalues (
                                      _list
                                    )
                                  )
                                )
                                 (
                                  begin (
                                    set! i 0
                                  )
                                   (
                                    letrec (
                                      (
                                        loop27 (
                                          lambda (
                                            
                                          )
                                           (
                                            if (
                                              < i n
                                            )
                                             (
                                              begin (
                                                set! eigenvalues (
                                                  append eigenvalues (
                                                    _list (
                                                      cond (
                                                        (
                                                          string? (
                                                            list-ref-safe a i
                                                          )
                                                        )
                                                         (
                                                          _substring (
                                                            list-ref-safe a i
                                                          )
                                                           i (
                                                            + i 1
                                                          )
                                                        )
                                                      )
                                                       (
                                                        (
                                                          hash-table? (
                                                            list-ref-safe a i
                                                          )
                                                        )
                                                         (
                                                          hash-table-ref (
                                                            list-ref-safe a i
                                                          )
                                                           i
                                                        )
                                                      )
                                                       (
                                                        else (
                                                          list-ref-safe (
                                                            list-ref-safe a i
                                                          )
                                                           i
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                               (
                                                set! i (
                                                  + i 1
                                                )
                                              )
                                               (
                                                loop27
                                              )
                                            )
                                             (
                                              void
                                            )
                                          )
                                        )
                                      )
                                    )
                                     (
                                      loop27
                                    )
                                  )
                                   (
                                    alist->hash-table (
                                      _list (
                                        cons "values" eigenvalues
                                      )
                                       (
                                        cons "vectors" v
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
         (
          define (
            matmul a b
          )
           (
            let (
              (
                rows (
                  _len a
                )
              )
            )
             (
              begin (
                let (
                  (
                    cols (
                      _len (
                        list-ref-safe b 0
                      )
                    )
                  )
                )
                 (
                  begin (
                    let (
                      (
                        inner (
                          _len b
                        )
                      )
                    )
                     (
                      begin (
                        let (
                          (
                            m (
                              zeros_matrix rows cols
                            )
                          )
                        )
                         (
                          begin (
                            let (
                              (
                                i 0
                              )
                            )
                             (
                              begin (
                                letrec (
                                  (
                                    loop28 (
                                      lambda (
                                        
                                      )
                                       (
                                        if (
                                          < i rows
                                        )
                                         (
                                          begin (
                                            let (
                                              (
                                                j 0
                                              )
                                            )
                                             (
                                              begin (
                                                letrec (
                                                  (
                                                    loop29 (
                                                      lambda (
                                                        
                                                      )
                                                       (
                                                        if (
                                                          < j cols
                                                        )
                                                         (
                                                          begin (
                                                            let (
                                                              (
                                                                s 0.0
                                                              )
                                                            )
                                                             (
                                                              begin (
                                                                let (
                                                                  (
                                                                    k 0
                                                                  )
                                                                )
                                                                 (
                                                                  begin (
                                                                    letrec (
                                                                      (
                                                                        loop30 (
                                                                          lambda (
                                                                            
                                                                          )
                                                                           (
                                                                            if (
                                                                              < k inner
                                                                            )
                                                                             (
                                                                              begin (
                                                                                set! s (
                                                                                  _add s (
                                                                                    * (
                                                                                      cond (
                                                                                        (
                                                                                          string? (
                                                                                            list-ref-safe a i
                                                                                          )
                                                                                        )
                                                                                         (
                                                                                          _substring (
                                                                                            list-ref-safe a i
                                                                                          )
                                                                                           k (
                                                                                            + k 1
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                       (
                                                                                        (
                                                                                          hash-table? (
                                                                                            list-ref-safe a i
                                                                                          )
                                                                                        )
                                                                                         (
                                                                                          hash-table-ref (
                                                                                            list-ref-safe a i
                                                                                          )
                                                                                           k
                                                                                        )
                                                                                      )
                                                                                       (
                                                                                        else (
                                                                                          list-ref-safe (
                                                                                            list-ref-safe a i
                                                                                          )
                                                                                           k
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                     (
                                                                                      cond (
                                                                                        (
                                                                                          string? (
                                                                                            list-ref-safe b k
                                                                                          )
                                                                                        )
                                                                                         (
                                                                                          _substring (
                                                                                            list-ref-safe b k
                                                                                          )
                                                                                           j (
                                                                                            + j 1
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                       (
                                                                                        (
                                                                                          hash-table? (
                                                                                            list-ref-safe b k
                                                                                          )
                                                                                        )
                                                                                         (
                                                                                          hash-table-ref (
                                                                                            list-ref-safe b k
                                                                                          )
                                                                                           j
                                                                                        )
                                                                                      )
                                                                                       (
                                                                                        else (
                                                                                          list-ref-safe (
                                                                                            list-ref-safe b k
                                                                                          )
                                                                                           j
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                               (
                                                                                set! k (
                                                                                  + k 1
                                                                                )
                                                                              )
                                                                               (
                                                                                loop30
                                                                              )
                                                                            )
                                                                             (
                                                                              void
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                     (
                                                                      loop30
                                                                    )
                                                                  )
                                                                   (
                                                                    list-set-safe! (
                                                                      list-ref-safe m i
                                                                    )
                                                                     j s
                                                                  )
                                                                   (
                                                                    set! j (
                                                                      + j 1
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                           (
                                                            loop29
                                                          )
                                                        )
                                                         (
                                                          void
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                                 (
                                                  loop29
                                                )
                                              )
                                               (
                                                set! i (
                                                  + i 1
                                                )
                                              )
                                            )
                                          )
                                           (
                                            loop28
                                          )
                                        )
                                         (
                                          void
                                        )
                                      )
                                    )
                                  )
                                )
                                 (
                                  loop28
                                )
                              )
                               m
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
         (
          define (
            sort_eigenpairs vals vecs
          )
           (
            let (
              (
                n (
                  _len vals
                )
              )
            )
             (
              begin (
                let (
                  (
                    values vals
                  )
                )
                 (
                  begin (
                    let (
                      (
                        vectors vecs
                      )
                    )
                     (
                      begin (
                        let (
                          (
                            i 0
                          )
                        )
                         (
                          begin (
                            letrec (
                              (
                                loop31 (
                                  lambda (
                                    
                                  )
                                   (
                                    if (
                                      < i n
                                    )
                                     (
                                      begin (
                                        let (
                                          (
                                            j 0
                                          )
                                        )
                                         (
                                          begin (
                                            letrec (
                                              (
                                                loop32 (
                                                  lambda (
                                                    
                                                  )
                                                   (
                                                    if (
                                                      < j (
                                                        - n 1
                                                      )
                                                    )
                                                     (
                                                      begin (
                                                        if (
                                                          < (
                                                            list-ref-safe values j
                                                          )
                                                           (
                                                            list-ref-safe values (
                                                              + j 1
                                                            )
                                                          )
                                                        )
                                                         (
                                                          begin (
                                                            let (
                                                              (
                                                                tmp (
                                                                  list-ref-safe values j
                                                                )
                                                              )
                                                            )
                                                             (
                                                              begin (
                                                                list-set-safe! values j (
                                                                  list-ref-safe values (
                                                                    + j 1
                                                                  )
                                                                )
                                                              )
                                                               (
                                                                list-set-safe! values (
                                                                  + j 1
                                                                )
                                                                 tmp
                                                              )
                                                               (
                                                                let (
                                                                  (
                                                                    r 0
                                                                  )
                                                                )
                                                                 (
                                                                  begin (
                                                                    letrec (
                                                                      (
                                                                        loop33 (
                                                                          lambda (
                                                                            
                                                                          )
                                                                           (
                                                                            if (
                                                                              < r (
                                                                                _len vectors
                                                                              )
                                                                            )
                                                                             (
                                                                              begin (
                                                                                let (
                                                                                  (
                                                                                    tv (
                                                                                      cond (
                                                                                        (
                                                                                          string? (
                                                                                            list-ref-safe vectors r
                                                                                          )
                                                                                        )
                                                                                         (
                                                                                          _substring (
                                                                                            list-ref-safe vectors r
                                                                                          )
                                                                                           j (
                                                                                            + j 1
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                       (
                                                                                        (
                                                                                          hash-table? (
                                                                                            list-ref-safe vectors r
                                                                                          )
                                                                                        )
                                                                                         (
                                                                                          hash-table-ref (
                                                                                            list-ref-safe vectors r
                                                                                          )
                                                                                           j
                                                                                        )
                                                                                      )
                                                                                       (
                                                                                        else (
                                                                                          list-ref-safe (
                                                                                            list-ref-safe vectors r
                                                                                          )
                                                                                           j
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                                 (
                                                                                  begin (
                                                                                    list-set-safe! (
                                                                                      list-ref-safe vectors r
                                                                                    )
                                                                                     j (
                                                                                      cond (
                                                                                        (
                                                                                          string? (
                                                                                            list-ref-safe vectors r
                                                                                          )
                                                                                        )
                                                                                         (
                                                                                          _substring (
                                                                                            list-ref-safe vectors r
                                                                                          )
                                                                                           (
                                                                                            + j 1
                                                                                          )
                                                                                           (
                                                                                            + (
                                                                                              + j 1
                                                                                            )
                                                                                             1
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                       (
                                                                                        (
                                                                                          hash-table? (
                                                                                            list-ref-safe vectors r
                                                                                          )
                                                                                        )
                                                                                         (
                                                                                          hash-table-ref (
                                                                                            list-ref-safe vectors r
                                                                                          )
                                                                                           (
                                                                                            + j 1
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                       (
                                                                                        else (
                                                                                          list-ref-safe (
                                                                                            list-ref-safe vectors r
                                                                                          )
                                                                                           (
                                                                                            + j 1
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                   (
                                                                                    list-set-safe! (
                                                                                      list-ref-safe vectors r
                                                                                    )
                                                                                     (
                                                                                      + j 1
                                                                                    )
                                                                                     tv
                                                                                  )
                                                                                   (
                                                                                    set! r (
                                                                                      + r 1
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                               (
                                                                                loop33
                                                                              )
                                                                            )
                                                                             (
                                                                              void
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                     (
                                                                      loop33
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                         (
                                                          void
                                                        )
                                                      )
                                                       (
                                                        set! j (
                                                          + j 1
                                                        )
                                                      )
                                                       (
                                                        loop32
                                                      )
                                                    )
                                                     (
                                                      void
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                             (
                                              loop32
                                            )
                                          )
                                           (
                                            set! i (
                                              + i 1
                                            )
                                          )
                                        )
                                      )
                                       (
                                        loop31
                                      )
                                    )
                                     (
                                      void
                                    )
                                  )
                                )
                              )
                            )
                             (
                              loop31
                            )
                          )
                           (
                            alist->hash-table (
                              _list (
                                cons "values" values
                              )
                               (
                                cons "vectors" vectors
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
         (
          define (
            find_lanczos_eigenvectors graph k
          )
           (
            begin (
              validate_adjacency_list graph
            )
             (
              let (
                (
                  res (
                    lanczos_iteration graph k
                  )
                )
              )
               (
                begin (
                  let (
                    (
                      eig (
                        jacobi_eigen (
                          hash-table-ref res "t"
                        )
                         50
                      )
                    )
                  )
                   (
                    begin (
                      let (
                        (
                          sorted (
                            sort_eigenpairs (
                              hash-table-ref eig "values"
                            )
                             (
                              hash-table-ref eig "vectors"
                            )
                          )
                        )
                      )
                       (
                        begin (
                          let (
                            (
                              final_vectors (
                                matmul (
                                  hash-table-ref res "q"
                                )
                                 (
                                  hash-table-ref sorted "vectors"
                                )
                              )
                            )
                          )
                           (
                            begin (
                              alist->hash-table (
                                _list (
                                  cons "values" (
                                    hash-table-ref sorted "values"
                                  )
                                )
                                 (
                                  cons "vectors" final_vectors
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
         (
          define (
            list_to_string arr
          )
           (
            let (
              (
                s "["
              )
            )
             (
              begin (
                let (
                  (
                    i 0
                  )
                )
                 (
                  begin (
                    letrec (
                      (
                        loop34 (
                          lambda (
                            
                          )
                           (
                            if (
                              < i (
                                _len arr
                              )
                            )
                             (
                              begin (
                                set! s (
                                  string-append s (
                                    to-str-space (
                                      list-ref-safe arr i
                                    )
                                  )
                                )
                              )
                               (
                                if (
                                  < i (
                                    - (
                                      _len arr
                                    )
                                     1
                                  )
                                )
                                 (
                                  begin (
                                    set! s (
                                      string-append s ", "
                                    )
                                  )
                                )
                                 (
                                  void
                                )
                              )
                               (
                                set! i (
                                  + i 1
                                )
                              )
                               (
                                loop34
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop34
                    )
                  )
                   (
                    string-append s "]"
                  )
                )
              )
            )
          )
        )
         (
          define (
            matrix_to_string m
          )
           (
            let (
              (
                s "["
              )
            )
             (
              begin (
                let (
                  (
                    i 0
                  )
                )
                 (
                  begin (
                    letrec (
                      (
                        loop35 (
                          lambda (
                            
                          )
                           (
                            if (
                              < i (
                                _len m
                              )
                            )
                             (
                              begin (
                                set! s (
                                  string-append s (
                                    list_to_string (
                                      list-ref-safe m i
                                    )
                                  )
                                )
                              )
                               (
                                if (
                                  < i (
                                    - (
                                      _len m
                                    )
                                     1
                                  )
                                )
                                 (
                                  begin (
                                    set! s (
                                      string-append s "; "
                                    )
                                  )
                                )
                                 (
                                  void
                                )
                              )
                               (
                                set! i (
                                  + i 1
                                )
                              )
                               (
                                loop35
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop35
                    )
                  )
                   (
                    string-append s "]"
                  )
                )
              )
            )
          )
        )
         (
          let (
            (
              graph (
                _list (
                  _list 1 2
                )
                 (
                  _list 0 2
                )
                 (
                  _list 0 1
                )
              )
            )
          )
           (
            begin (
              let (
                (
                  result (
                    find_lanczos_eigenvectors graph 2
                  )
                )
              )
               (
                begin (
                  _display (
                    if (
                      string? (
                        list_to_string (
                          hash-table-ref result "values"
                        )
                      )
                    )
                     (
                      list_to_string (
                        hash-table-ref result "values"
                      )
                    )
                     (
                      to-str (
                        list_to_string (
                          hash-table-ref result "values"
                        )
                      )
                    )
                  )
                )
                 (
                  newline
                )
                 (
                  _display (
                    if (
                      string? (
                        matrix_to_string (
                          hash-table-ref result "vectors"
                        )
                      )
                    )
                     (
                      matrix_to_string (
                        hash-table-ref result "vectors"
                      )
                    )
                     (
                      to-str (
                        matrix_to_string (
                          hash-table-ref result "vectors"
                        )
                      )
                    )
                  )
                )
                 (
                  newline
                )
              )
            )
          )
        )
      )
    )
     (
      let (
        (
          end37 (
            current-jiffy
          )
        )
      )
       (
        let (
          (
            dur38 (
              quotient (
                * (
                  - end37 start36
                )
                 1000000
              )
               jps39
            )
          )
        )
         (
          begin (
            _display (
              string-append "{\n  \"duration_us\": " (
                number->string dur38
              )
               ",\n  \"memory_bytes\": " (
                number->string (
                  _mem
                )
              )
               ",\n  \"name\": \"main\"\n}"
            )
          )
           (
            newline
          )
        )
      )
    )
  )
)
