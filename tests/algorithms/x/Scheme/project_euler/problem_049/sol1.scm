;; Generated by Mochi Scheme transpiler on 2025-08-16 14:44 +0700
(import (scheme base))
(import (scheme time))
(import (chibi string))
(import (only (scheme char) string-upcase string-downcase))
(import (srfi 69))
(import (srfi 1))
(define _list list)
(define (void) '())
(import (chibi time))
(define (_mem) (* 1024 (resource-usage-max-rss (get-resource-usage resource-usage/self))))
(import (chibi json))
(define (to-str x)
  (cond ((pair? x)
         (string-append "[" (string-join (map to-str x) ", ") "]"))
        ((hash-table? x)
         (let* ((ks (hash-table-keys x))
                (pairs (map (lambda (k)
                              (string-append (to-str k) ": " (to-str (hash-table-ref x k))))
                            ks)))
           (string-append "{" (string-join pairs ", ") "}")))
        ((null? x) "[]")
        ((string? x) (let ((out (open-output-string))) (json-write x out) (get-output-string out)))
        ((boolean? x) (if x "true" "false"))
       ((number? x)
        (if (integer? x)
            (number->string (inexact->exact x))
            (number->string (exact->inexact x))))
        (else (number->string x))))
(define (to-str-space x)
  (cond ((pair? x)
         (string-append "[" (string-join (map to-str-space x) " ") "]"))
        ((string? x) x)
        (else (to-str x))))
(define (upper s) (string-upcase s))
(define (lower s) (string-downcase s))
(define (_floor x) (cond ((string? x) (let ((n (string->number x))) (if n (floor n) 0))) ((boolean? x) (if x 1 0)) (else (floor x))))
(define (fmod a b) (- a (* (_floor (/ a b)) b)))
(define (_mod a b) (if (and (integer? a) (integer? b)) (modulo a b) (fmod a b)))
(define (_div a b) (if (and (integer? a) (integer? b) (exact? a) (exact? b)) (quotient a b) (/ a b)))
(define (_gt a b) (cond ((and (number? a) (number? b)) (> a b)) ((and (string? a) (string? b)) (string>? a b)) (else (> a b))))
(define (_lt a b) (cond ((and (number? a) (number? b)) (< a b)) ((and (string? a) (string? b)) (string<? a b)) (else (< a b))))
(define (_ge a b) (cond ((and (number? a) (number? b)) (>= a b)) ((and (string? a) (string? b)) (string>=? a b)) (else (>= a b))))
(define (_le a b) (cond ((and (number? a) (number? b)) (<= a b)) ((and (string? a) (string? b)) (string<=? a b)) (else (<= a b))))
(define (_eq a b) (cond ((and (number? a) (number? b)) (if (or (inexact? a) (inexact? b)) (< (abs (- a b)) 1e-6) (= a b))) ((and (string? a) (string? b)) (string=? a b)) (else (equal? a b))))
(define (_add a b)
  (cond ((and (number? a) (number? b)) (+ a b))
        ((string? a) (string-append a (to-str b)))
        ((string? b) (string-append (to-str a) b))
        ((and (list? a) (list? b)) (append a b))
        (else (+ a b))))
(define (indexOf s sub) (let ((cur (string-contains s sub)))   (if cur (string-cursor->index s cur) -1)))
(define (_display . args) (apply display args))
(define (panic msg) (error msg))
(define (padStart s width pad)
  (let loop ((out s))
    (if (< (string-length out) width)
        (loop (string-append pad out))
        out)))
(define (_substring s start end)
  (let* ((len (string-length s))
         (s0 (max 0 (min len start)))
         (e0 (max s0 (min len end))))
    (substring s s0 e0)))
(define (_repeat s n)
  (let loop ((i 0) (out ""))
    (if (< i n)
        (loop (+ i 1) (string-append out s))
        out)))
(define (slice seq start end)
  (let* ((len (if (string? seq) (string-length seq) (length seq)))
         (s (if (< start 0) (+ len start) start))
         (e (if (< end 0) (+ len end) end)))
    (set! s (max 0 (min len s)))
    (set! e (max 0 (min len e)))
    (when (< e s) (set! e s))
    (if (string? seq)
        (_substring seq s e)
        (take (drop seq s) (- e s)))))
(define (_parseIntStr s base)
  (let* ((b (if (number? base) base 10))
         (n (string->number (if (list? s) (list->string s) s) b)))
    (if n (inexact->exact (truncate n)) 0)))
(define (_split s sep)
  (let* ((str (if (string? s) s (list->string s)))
         (del (cond ((char? sep) sep)
                     ((string? sep) (if (= (string-length sep) 1)
                                       (string-ref sep 0)
                                       sep))
                     (else sep))))
    (cond
     ((and (string? del) (string=? del ""))
      (map string (string->list str)))
     ((char? del)
      (string-split str del))
     (else
        (let loop ((r str) (acc '()))
          (let ((cur (string-contains r del)))
            (if cur
                (let ((idx (string-cursor->index r cur)))
                  (loop (_substring r (+ idx (string-length del)) (string-length r))
                        (cons (_substring r 0 idx) acc)))
                (reverse (cons r acc)))))))))
(define (_len x)
  (cond ((string? x) (string-length x))
        ((hash-table? x) (hash-table-size x))
        (else (length x))))
(define (list-ref-safe lst idx) (if (and (integer? idx) (>= idx 0) (< idx (length lst))) (list-ref lst (inexact->exact idx)) '()))
(define (list-set-safe! lst idx val) (when (and (integer? idx) (>= idx 0) (< idx (length lst))) (list-set! lst (inexact->exact idx) val)))
(
  let (
    (
      start30 (
        current-jiffy
      )
    )
     (
      jps33 (
        jiffies-per-second
      )
    )
  )
   (
    begin (
      define (
        is_prime number
      )
       (
        call/cc (
          lambda (
            ret1
          )
           (
            begin (
              if (
                and (
                  < 1 number
                )
                 (
                  < number 4
                )
              )
               (
                begin (
                  ret1 #t
                )
              )
               (
                void
              )
            )
             (
              if (
                or (
                  or (
                    < number 2
                  )
                   (
                    _eq (
                      _mod number 2
                    )
                     0
                  )
                )
                 (
                  _eq (
                    _mod number 3
                  )
                   0
                )
              )
               (
                begin (
                  ret1 #f
                )
              )
               (
                void
              )
            )
             (
              let (
                (
                  i 5
                )
              )
               (
                begin (
                  letrec (
                    (
                      loop2 (
                        lambda (
                          
                        )
                         (
                          if (
                            <= (
                              * i i
                            )
                             number
                          )
                           (
                            begin (
                              if (
                                or (
                                  _eq (
                                    _mod number i
                                  )
                                   0
                                )
                                 (
                                  _eq (
                                    _mod number (
                                      + i 2
                                    )
                                  )
                                   0
                                )
                              )
                               (
                                begin (
                                  ret1 #f
                                )
                              )
                               (
                                void
                              )
                            )
                             (
                              set! i (
                                + i 6
                              )
                            )
                             (
                              loop2
                            )
                          )
                           (
                            void
                          )
                        )
                      )
                    )
                  )
                   (
                    loop2
                  )
                )
                 (
                  ret1 #t
                )
              )
            )
          )
        )
      )
    )
     (
      define (
        search target arr
      )
       (
        call/cc (
          lambda (
            ret3
          )
           (
            let (
              (
                left 0
              )
            )
             (
              begin (
                let (
                  (
                    right (
                      - (
                        _len arr
                      )
                       1
                    )
                  )
                )
                 (
                  begin (
                    letrec (
                      (
                        loop4 (
                          lambda (
                            
                          )
                           (
                            if (
                              <= left right
                            )
                             (
                              begin (
                                let (
                                  (
                                    middle (
                                      _div (
                                        + left right
                                      )
                                       2
                                    )
                                  )
                                )
                                 (
                                  begin (
                                    if (
                                      _eq (
                                        list-ref-safe arr middle
                                      )
                                       target
                                    )
                                     (
                                      begin (
                                        ret3 #t
                                      )
                                    )
                                     (
                                      void
                                    )
                                  )
                                   (
                                    if (
                                      < (
                                        list-ref-safe arr middle
                                      )
                                       target
                                    )
                                     (
                                      begin (
                                        set! left (
                                          + middle 1
                                        )
                                      )
                                    )
                                     (
                                      begin (
                                        set! right (
                                          - middle 1
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                               (
                                loop4
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop4
                    )
                  )
                   (
                    ret3 #f
                  )
                )
              )
            )
          )
        )
      )
    )
     (
      define (
        sort_int xs
      )
       (
        let (
          (
            arr xs
          )
        )
         (
          begin (
            let (
              (
                i 0
              )
            )
             (
              begin (
                letrec (
                  (
                    loop5 (
                      lambda (
                        
                      )
                       (
                        if (
                          < i (
                            _len arr
                          )
                        )
                         (
                          begin (
                            let (
                              (
                                j (
                                  + i 1
                                )
                              )
                            )
                             (
                              begin (
                                letrec (
                                  (
                                    loop6 (
                                      lambda (
                                        
                                      )
                                       (
                                        if (
                                          < j (
                                            _len arr
                                          )
                                        )
                                         (
                                          begin (
                                            if (
                                              < (
                                                list-ref-safe arr j
                                              )
                                               (
                                                list-ref-safe arr i
                                              )
                                            )
                                             (
                                              begin (
                                                let (
                                                  (
                                                    tmp (
                                                      list-ref-safe arr i
                                                    )
                                                  )
                                                )
                                                 (
                                                  begin (
                                                    list-set-safe! arr i (
                                                      list-ref-safe arr j
                                                    )
                                                  )
                                                   (
                                                    list-set-safe! arr j tmp
                                                  )
                                                )
                                              )
                                            )
                                             (
                                              void
                                            )
                                          )
                                           (
                                            set! j (
                                              + j 1
                                            )
                                          )
                                           (
                                            loop6
                                          )
                                        )
                                         (
                                          void
                                        )
                                      )
                                    )
                                  )
                                )
                                 (
                                  loop6
                                )
                              )
                               (
                                set! i (
                                  + i 1
                                )
                              )
                            )
                          )
                           (
                            loop5
                          )
                        )
                         (
                          void
                        )
                      )
                    )
                  )
                )
                 (
                  loop5
                )
              )
               arr
            )
          )
        )
      )
    )
     (
      define (
        permutations_of_number n
      )
       (
        let (
          (
            s (
              to-str-space n
            )
          )
        )
         (
          begin (
            let (
              (
                d (
                  _list
                )
              )
            )
             (
              begin (
                let (
                  (
                    i 0
                  )
                )
                 (
                  begin (
                    letrec (
                      (
                        loop7 (
                          lambda (
                            
                          )
                           (
                            if (
                              < i (
                                _len s
                              )
                            )
                             (
                              begin (
                                set! d (
                                  append d (
                                    _list (
                                      let (
                                        (
                                          v8 (
                                            _substring s i (
                                              + i 1
                                            )
                                          )
                                        )
                                      )
                                       (
                                        cond (
                                          (
                                            string? v8
                                          )
                                           (
                                            exact (
                                              _floor (
                                                string->number v8
                                              )
                                            )
                                          )
                                        )
                                         (
                                          (
                                            boolean? v8
                                          )
                                           (
                                            if v8 1 0
                                          )
                                        )
                                         (
                                          else (
                                            exact (
                                              _floor v8
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                               (
                                set! i (
                                  + i 1
                                )
                              )
                               (
                                loop7
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop7
                    )
                  )
                   (
                    let (
                      (
                        res (
                          _list
                        )
                      )
                    )
                     (
                      begin (
                        let (
                          (
                            a 0
                          )
                        )
                         (
                          begin (
                            letrec (
                              (
                                loop9 (
                                  lambda (
                                    
                                  )
                                   (
                                    if (
                                      < a (
                                        _len d
                                      )
                                    )
                                     (
                                      begin (
                                        let (
                                          (
                                            b 0
                                          )
                                        )
                                         (
                                          begin (
                                            letrec (
                                              (
                                                loop10 (
                                                  lambda (
                                                    
                                                  )
                                                   (
                                                    if (
                                                      < b (
                                                        _len d
                                                      )
                                                    )
                                                     (
                                                      begin (
                                                        if (
                                                          not (
                                                            _eq b a
                                                          )
                                                        )
                                                         (
                                                          begin (
                                                            let (
                                                              (
                                                                c 0
                                                              )
                                                            )
                                                             (
                                                              begin (
                                                                letrec (
                                                                  (
                                                                    loop11 (
                                                                      lambda (
                                                                        
                                                                      )
                                                                       (
                                                                        if (
                                                                          < c (
                                                                            _len d
                                                                          )
                                                                        )
                                                                         (
                                                                          begin (
                                                                            if (
                                                                              and (
                                                                                not (
                                                                                  _eq c a
                                                                                )
                                                                              )
                                                                               (
                                                                                not (
                                                                                  _eq c b
                                                                                )
                                                                              )
                                                                            )
                                                                             (
                                                                              begin (
                                                                                let (
                                                                                  (
                                                                                    e 0
                                                                                  )
                                                                                )
                                                                                 (
                                                                                  begin (
                                                                                    letrec (
                                                                                      (
                                                                                        loop12 (
                                                                                          lambda (
                                                                                            
                                                                                          )
                                                                                           (
                                                                                            if (
                                                                                              < e (
                                                                                                _len d
                                                                                              )
                                                                                            )
                                                                                             (
                                                                                              begin (
                                                                                                if (
                                                                                                  and (
                                                                                                    and (
                                                                                                      not (
                                                                                                        _eq e a
                                                                                                      )
                                                                                                    )
                                                                                                     (
                                                                                                      not (
                                                                                                        _eq e b
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                   (
                                                                                                    not (
                                                                                                      _eq e c
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                                 (
                                                                                                  begin (
                                                                                                    let (
                                                                                                      (
                                                                                                        val (
                                                                                                          + (
                                                                                                            + (
                                                                                                              + (
                                                                                                                * (
                                                                                                                  list-ref-safe d a
                                                                                                                )
                                                                                                                 1000
                                                                                                              )
                                                                                                               (
                                                                                                                * (
                                                                                                                  list-ref-safe d b
                                                                                                                )
                                                                                                                 100
                                                                                                              )
                                                                                                            )
                                                                                                             (
                                                                                                              * (
                                                                                                                list-ref-safe d c
                                                                                                              )
                                                                                                               10
                                                                                                            )
                                                                                                          )
                                                                                                           (
                                                                                                            list-ref-safe d e
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                     (
                                                                                                      begin (
                                                                                                        set! res (
                                                                                                          append res (
                                                                                                            _list val
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                                 (
                                                                                                  void
                                                                                                )
                                                                                              )
                                                                                               (
                                                                                                set! e (
                                                                                                  + e 1
                                                                                                )
                                                                                              )
                                                                                               (
                                                                                                loop12
                                                                                              )
                                                                                            )
                                                                                             (
                                                                                              void
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                     (
                                                                                      loop12
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                             (
                                                                              void
                                                                            )
                                                                          )
                                                                           (
                                                                            set! c (
                                                                              + c 1
                                                                            )
                                                                          )
                                                                           (
                                                                            loop11
                                                                          )
                                                                        )
                                                                         (
                                                                          void
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                                 (
                                                                  loop11
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                         (
                                                          void
                                                        )
                                                      )
                                                       (
                                                        set! b (
                                                          + b 1
                                                        )
                                                      )
                                                       (
                                                        loop10
                                                      )
                                                    )
                                                     (
                                                      void
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                             (
                                              loop10
                                            )
                                          )
                                           (
                                            set! a (
                                              + a 1
                                            )
                                          )
                                        )
                                      )
                                       (
                                        loop9
                                      )
                                    )
                                     (
                                      void
                                    )
                                  )
                                )
                              )
                            )
                             (
                              loop9
                            )
                          )
                           res
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
     (
      define (
        abs_int x
      )
       (
        call/cc (
          lambda (
            ret13
          )
           (
            begin (
              if (
                < x 0
              )
               (
                begin (
                  ret13 (
                    - x
                  )
                )
              )
               (
                void
              )
            )
             (
              ret13 x
            )
          )
        )
      )
    )
     (
      define (
        contains_int xs v
      )
       (
        call/cc (
          lambda (
            ret14
          )
           (
            let (
              (
                i 0
              )
            )
             (
              begin (
                letrec (
                  (
                    loop15 (
                      lambda (
                        
                      )
                       (
                        if (
                          < i (
                            _len xs
                          )
                        )
                         (
                          begin (
                            if (
                              _eq (
                                list-ref-safe xs i
                              )
                               v
                            )
                             (
                              begin (
                                ret14 #t
                              )
                            )
                             (
                              void
                            )
                          )
                           (
                            set! i (
                              + i 1
                            )
                          )
                           (
                            loop15
                          )
                        )
                         (
                          void
                        )
                      )
                    )
                  )
                )
                 (
                  loop15
                )
              )
               (
                ret14 #f
              )
            )
          )
        )
      )
    )
     (
      define (
        solution
      )
       (
        let (
          (
            prime_list (
              _list
            )
          )
        )
         (
          begin (
            let (
              (
                n 1001
              )
            )
             (
              begin (
                letrec (
                  (
                    loop16 (
                      lambda (
                        
                      )
                       (
                        if (
                          < n 10000
                        )
                         (
                          begin (
                            if (
                              is_prime n
                            )
                             (
                              begin (
                                set! prime_list (
                                  append prime_list (
                                    _list n
                                  )
                                )
                              )
                            )
                             (
                              void
                            )
                          )
                           (
                            set! n (
                              + n 2
                            )
                          )
                           (
                            loop16
                          )
                        )
                         (
                          void
                        )
                      )
                    )
                  )
                )
                 (
                  loop16
                )
              )
               (
                let (
                  (
                    candidates (
                      _list
                    )
                  )
                )
                 (
                  begin (
                    let (
                      (
                        i 0
                      )
                    )
                     (
                      begin (
                        letrec (
                          (
                            loop17 (
                              lambda (
                                
                              )
                               (
                                if (
                                  < i (
                                    _len prime_list
                                  )
                                )
                                 (
                                  begin (
                                    let (
                                      (
                                        number (
                                          list-ref-safe prime_list i
                                        )
                                      )
                                    )
                                     (
                                      begin (
                                        let (
                                          (
                                            tmp (
                                              _list
                                            )
                                          )
                                        )
                                         (
                                          begin (
                                            let (
                                              (
                                                perms (
                                                  permutations_of_number number
                                                )
                                              )
                                            )
                                             (
                                              begin (
                                                let (
                                                  (
                                                    j 0
                                                  )
                                                )
                                                 (
                                                  begin (
                                                    letrec (
                                                      (
                                                        loop18 (
                                                          lambda (
                                                            
                                                          )
                                                           (
                                                            if (
                                                              < j (
                                                                _len perms
                                                              )
                                                            )
                                                             (
                                                              begin (
                                                                let (
                                                                  (
                                                                    prime (
                                                                      cond (
                                                                        (
                                                                          string? perms
                                                                        )
                                                                         (
                                                                          _substring perms j (
                                                                            + j 1
                                                                          )
                                                                        )
                                                                      )
                                                                       (
                                                                        (
                                                                          hash-table? perms
                                                                        )
                                                                         (
                                                                          hash-table-ref perms j
                                                                        )
                                                                      )
                                                                       (
                                                                        else (
                                                                          list-ref-safe perms j
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                                 (
                                                                  begin (
                                                                    if (
                                                                      and (
                                                                        not (
                                                                          _eq (
                                                                            _mod prime 2
                                                                          )
                                                                           0
                                                                        )
                                                                      )
                                                                       (
                                                                        search prime prime_list
                                                                      )
                                                                    )
                                                                     (
                                                                      begin (
                                                                        set! tmp (
                                                                          append tmp (
                                                                            _list prime
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                     (
                                                                      void
                                                                    )
                                                                  )
                                                                   (
                                                                    set! j (
                                                                      + j 1
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                               (
                                                                loop18
                                                              )
                                                            )
                                                             (
                                                              void
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                     (
                                                      loop18
                                                    )
                                                  )
                                                   (
                                                    set! tmp (
                                                      sort_int tmp
                                                    )
                                                  )
                                                   (
                                                    if (
                                                      >= (
                                                        _len tmp
                                                      )
                                                       3
                                                    )
                                                     (
                                                      begin (
                                                        set! candidates (
                                                          append candidates (
                                                            _list tmp
                                                          )
                                                        )
                                                      )
                                                    )
                                                     (
                                                      void
                                                    )
                                                  )
                                                   (
                                                    set! i (
                                                      + i 1
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                   (
                                    loop17
                                  )
                                )
                                 (
                                  void
                                )
                              )
                            )
                          )
                        )
                         (
                          loop17
                        )
                      )
                       (
                        let (
                          (
                            passed (
                              _list
                            )
                          )
                        )
                         (
                          begin (
                            set! i 0
                          )
                           (
                            call/cc (
                              lambda (
                                break20
                              )
                               (
                                letrec (
                                  (
                                    loop19 (
                                      lambda (
                                        
                                      )
                                       (
                                        if (
                                          < i (
                                            _len candidates
                                          )
                                        )
                                         (
                                          begin (
                                            let (
                                              (
                                                candidate (
                                                  list-ref-safe candidates i
                                                )
                                              )
                                            )
                                             (
                                              begin (
                                                let (
                                                  (
                                                    found #f
                                                  )
                                                )
                                                 (
                                                  begin (
                                                    let (
                                                      (
                                                        a 0
                                                      )
                                                    )
                                                     (
                                                      begin (
                                                        call/cc (
                                                          lambda (
                                                            break22
                                                          )
                                                           (
                                                            letrec (
                                                              (
                                                                loop21 (
                                                                  lambda (
                                                                    
                                                                  )
                                                                   (
                                                                    if (
                                                                      < a (
                                                                        _len candidate
                                                                      )
                                                                    )
                                                                     (
                                                                      begin (
                                                                        let (
                                                                          (
                                                                            b (
                                                                              + a 1
                                                                            )
                                                                          )
                                                                        )
                                                                         (
                                                                          begin (
                                                                            call/cc (
                                                                              lambda (
                                                                                break24
                                                                              )
                                                                               (
                                                                                letrec (
                                                                                  (
                                                                                    loop23 (
                                                                                      lambda (
                                                                                        
                                                                                      )
                                                                                       (
                                                                                        if (
                                                                                          < b (
                                                                                            _len candidate
                                                                                          )
                                                                                        )
                                                                                         (
                                                                                          begin (
                                                                                            let (
                                                                                              (
                                                                                                c (
                                                                                                  + b 1
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                             (
                                                                                              begin (
                                                                                                call/cc (
                                                                                                  lambda (
                                                                                                    break26
                                                                                                  )
                                                                                                   (
                                                                                                    letrec (
                                                                                                      (
                                                                                                        loop25 (
                                                                                                          lambda (
                                                                                                            
                                                                                                          )
                                                                                                           (
                                                                                                            if (
                                                                                                              < c (
                                                                                                                _len candidate
                                                                                                              )
                                                                                                            )
                                                                                                             (
                                                                                                              begin (
                                                                                                                let (
                                                                                                                  (
                                                                                                                    x (
                                                                                                                      list-ref-safe candidate a
                                                                                                                    )
                                                                                                                  )
                                                                                                                )
                                                                                                                 (
                                                                                                                  begin (
                                                                                                                    let (
                                                                                                                      (
                                                                                                                        y (
                                                                                                                          list-ref-safe candidate b
                                                                                                                        )
                                                                                                                      )
                                                                                                                    )
                                                                                                                     (
                                                                                                                      begin (
                                                                                                                        let (
                                                                                                                          (
                                                                                                                            z (
                                                                                                                              list-ref-safe candidate c
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                         (
                                                                                                                          begin (
                                                                                                                            if (
                                                                                                                              and (
                                                                                                                                and (
                                                                                                                                  and (
                                                                                                                                    _eq (
                                                                                                                                      abs_int (
                                                                                                                                        - x y
                                                                                                                                      )
                                                                                                                                    )
                                                                                                                                     (
                                                                                                                                      abs_int (
                                                                                                                                        - y z
                                                                                                                                      )
                                                                                                                                    )
                                                                                                                                  )
                                                                                                                                   (
                                                                                                                                    not (
                                                                                                                                      _eq x y
                                                                                                                                    )
                                                                                                                                  )
                                                                                                                                )
                                                                                                                                 (
                                                                                                                                  not (
                                                                                                                                    _eq x z
                                                                                                                                  )
                                                                                                                                )
                                                                                                                              )
                                                                                                                               (
                                                                                                                                not (
                                                                                                                                  _eq y z
                                                                                                                                )
                                                                                                                              )
                                                                                                                            )
                                                                                                                             (
                                                                                                                              begin (
                                                                                                                                let (
                                                                                                                                  (
                                                                                                                                    triple (
                                                                                                                                      sort_int (
                                                                                                                                        _list x y z
                                                                                                                                      )
                                                                                                                                    )
                                                                                                                                  )
                                                                                                                                )
                                                                                                                                 (
                                                                                                                                  begin (
                                                                                                                                    set! passed (
                                                                                                                                      append passed (
                                                                                                                                        _list triple
                                                                                                                                      )
                                                                                                                                    )
                                                                                                                                  )
                                                                                                                                   (
                                                                                                                                    set! found #t
                                                                                                                                  )
                                                                                                                                   (
                                                                                                                                    break26 (
                                                                                                                                      void
                                                                                                                                    )
                                                                                                                                  )
                                                                                                                                )
                                                                                                                              )
                                                                                                                            )
                                                                                                                             (
                                                                                                                              void
                                                                                                                            )
                                                                                                                          )
                                                                                                                           (
                                                                                                                            set! c (
                                                                                                                              + c 1
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )
                                                                                                                    )
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                               (
                                                                                                                loop25
                                                                                                              )
                                                                                                            )
                                                                                                             (
                                                                                                              void
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                     (
                                                                                                      loop25
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                               (
                                                                                                if found (
                                                                                                  begin (
                                                                                                    break24 (
                                                                                                      void
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                                 (
                                                                                                  void
                                                                                                )
                                                                                              )
                                                                                               (
                                                                                                set! b (
                                                                                                  + b 1
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                           (
                                                                                            loop23
                                                                                          )
                                                                                        )
                                                                                         (
                                                                                          void
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                                 (
                                                                                  loop23
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                           (
                                                                            if found (
                                                                              begin (
                                                                                break22 (
                                                                                  void
                                                                                )
                                                                              )
                                                                            )
                                                                             (
                                                                              void
                                                                            )
                                                                          )
                                                                           (
                                                                            set! a (
                                                                              + a 1
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                       (
                                                                        loop21
                                                                      )
                                                                    )
                                                                     (
                                                                      void
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                             (
                                                              loop21
                                                            )
                                                          )
                                                        )
                                                      )
                                                       (
                                                        set! i (
                                                          + i 1
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                           (
                                            loop19
                                          )
                                        )
                                         (
                                          void
                                        )
                                      )
                                    )
                                  )
                                )
                                 (
                                  loop19
                                )
                              )
                            )
                          )
                           (
                            let (
                              (
                                answer_nums (
                                  _list
                                )
                              )
                            )
                             (
                              begin (
                                set! i 0
                              )
                               (
                                letrec (
                                  (
                                    loop27 (
                                      lambda (
                                        
                                      )
                                       (
                                        if (
                                          < i (
                                            _len passed
                                          )
                                        )
                                         (
                                          begin (
                                            let (
                                              (
                                                seq (
                                                  list-ref-safe passed i
                                                )
                                              )
                                            )
                                             (
                                              begin (
                                                let (
                                                  (
                                                    val (
                                                      let (
                                                        (
                                                          v28 (
                                                            string-append (
                                                              string-append (
                                                                to-str-space (
                                                                  list-ref-safe seq 0
                                                                )
                                                              )
                                                               (
                                                                to-str-space (
                                                                  list-ref-safe seq 1
                                                                )
                                                              )
                                                            )
                                                             (
                                                              to-str-space (
                                                                list-ref-safe seq 2
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                       (
                                                        cond (
                                                          (
                                                            string? v28
                                                          )
                                                           (
                                                            exact (
                                                              _floor (
                                                                string->number v28
                                                              )
                                                            )
                                                          )
                                                        )
                                                         (
                                                          (
                                                            boolean? v28
                                                          )
                                                           (
                                                            if v28 1 0
                                                          )
                                                        )
                                                         (
                                                          else (
                                                            exact (
                                                              _floor v28
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                                 (
                                                  begin (
                                                    if (
                                                      not (
                                                        contains_int answer_nums val
                                                      )
                                                    )
                                                     (
                                                      begin (
                                                        set! answer_nums (
                                                          append answer_nums (
                                                            _list val
                                                          )
                                                        )
                                                      )
                                                    )
                                                     (
                                                      void
                                                    )
                                                  )
                                                   (
                                                    set! i (
                                                      + i 1
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                           (
                                            loop27
                                          )
                                        )
                                         (
                                          void
                                        )
                                      )
                                    )
                                  )
                                )
                                 (
                                  loop27
                                )
                              )
                               (
                                let (
                                  (
                                    max_val (
                                      list-ref-safe answer_nums 0
                                    )
                                  )
                                )
                                 (
                                  begin (
                                    set! i 1
                                  )
                                   (
                                    letrec (
                                      (
                                        loop29 (
                                          lambda (
                                            
                                          )
                                           (
                                            if (
                                              < i (
                                                _len answer_nums
                                              )
                                            )
                                             (
                                              begin (
                                                if (
                                                  > (
                                                    list-ref-safe answer_nums i
                                                  )
                                                   max_val
                                                )
                                                 (
                                                  begin (
                                                    set! max_val (
                                                      list-ref-safe answer_nums i
                                                    )
                                                  )
                                                )
                                                 (
                                                  void
                                                )
                                              )
                                               (
                                                set! i (
                                                  + i 1
                                                )
                                              )
                                               (
                                                loop29
                                              )
                                            )
                                             (
                                              void
                                            )
                                          )
                                        )
                                      )
                                    )
                                     (
                                      loop29
                                    )
                                  )
                                   max_val
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
     (
      _display (
        if (
          string? (
            solution
          )
        )
         (
          solution
        )
         (
          to-str (
            solution
          )
        )
      )
    )
     (
      newline
    )
     (
      let (
        (
          end31 (
            current-jiffy
          )
        )
      )
       (
        let (
          (
            dur32 (
              quotient (
                * (
                  - end31 start30
                )
                 1000000
              )
               jps33
            )
          )
        )
         (
          begin (
            _display (
              string-append "{\n  \"duration_us\": " (
                number->string dur32
              )
               ",\n  \"memory_bytes\": " (
                number->string (
                  _mem
                )
              )
               ",\n  \"name\": \"main\"\n}"
            )
          )
           (
            newline
          )
        )
      )
    )
  )
)
