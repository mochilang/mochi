;; Generated by Mochi Scheme transpiler on 2025-08-16 11:48 +0700
(import (scheme base))
(import (scheme time))
(import (chibi string))
(import (only (scheme char) string-upcase string-downcase))
(import (srfi 69))
(import (srfi 1))
(define _list list)
(define (void) '())
(import (chibi time))
(define (_mem) (* 1024 (resource-usage-max-rss (get-resource-usage resource-usage/self))))
(import (chibi json))
(define (to-str x)
  (cond ((pair? x)
         (string-append "[" (string-join (map to-str x) ", ") "]"))
        ((hash-table? x)
         (let* ((ks (hash-table-keys x))
                (pairs (map (lambda (k)
                              (string-append (to-str k) ": " (to-str (hash-table-ref x k))))
                            ks)))
           (string-append "{" (string-join pairs ", ") "}")))
        ((null? x) "[]")
        ((string? x) (let ((out (open-output-string))) (json-write x out) (get-output-string out)))
        ((boolean? x) (if x "true" "false"))
       ((number? x)
        (if (integer? x)
            (number->string (inexact->exact x))
            (number->string (exact->inexact x))))
        (else (number->string x))))
(define (to-str-space x)
  (cond ((pair? x)
         (string-append "[" (string-join (map to-str-space x) " ") "]"))
        ((string? x) x)
        (else (to-str x))))
(define (upper s) (string-upcase s))
(define (lower s) (string-downcase s))
(define (_floor x) (cond ((string? x) (let ((n (string->number x))) (if n (floor n) 0))) ((boolean? x) (if x 1 0)) (else (floor x))))
(define (fmod a b) (- a (* (_floor (/ a b)) b)))
(define (_mod a b) (if (and (integer? a) (integer? b)) (modulo a b) (fmod a b)))
(define (_div a b) (if (and (integer? a) (integer? b) (exact? a) (exact? b)) (quotient a b) (/ a b)))
(define (_gt a b) (cond ((and (number? a) (number? b)) (> a b)) ((and (string? a) (string? b)) (string>? a b)) (else (> a b))))
(define (_lt a b) (cond ((and (number? a) (number? b)) (< a b)) ((and (string? a) (string? b)) (string<? a b)) (else (< a b))))
(define (_ge a b) (cond ((and (number? a) (number? b)) (>= a b)) ((and (string? a) (string? b)) (string>=? a b)) (else (>= a b))))
(define (_le a b) (cond ((and (number? a) (number? b)) (<= a b)) ((and (string? a) (string? b)) (string<=? a b)) (else (<= a b))))
(define (_add a b)
  (cond ((and (number? a) (number? b)) (+ a b))
        ((string? a) (string-append a (to-str b)))
        ((string? b) (string-append (to-str a) b))
        ((and (list? a) (list? b)) (append a b))
        (else (+ a b))))
(define (indexOf s sub) (let ((cur (string-contains s sub)))   (if cur (string-cursor->index s cur) -1)))
(define (_display . args) (apply display args))
(define (panic msg) (error msg))
(define (padStart s width pad)
  (let loop ((out s))
    (if (< (string-length out) width)
        (loop (string-append pad out))
        out)))
(define (_substring s start end)
  (let* ((len (string-length s))
         (s0 (max 0 (min len start)))
         (e0 (max s0 (min len end))))
    (substring s s0 e0)))
(define (_repeat s n)
  (let loop ((i 0) (out ""))
    (if (< i n)
        (loop (+ i 1) (string-append out s))
        out)))
(define (slice seq start end)
  (let* ((len (if (string? seq) (string-length seq) (length seq)))
         (s (if (< start 0) (+ len start) start))
         (e (if (< end 0) (+ len end) end)))
    (set! s (max 0 (min len s)))
    (set! e (max 0 (min len e)))
    (when (< e s) (set! e s))
    (if (string? seq)
        (_substring seq s e)
        (take (drop seq s) (- e s)))))
(define (_parseIntStr s base)
  (let* ((b (if (number? base) base 10))
         (n (string->number (if (list? s) (list->string s) s) b)))
    (if n (inexact->exact (truncate n)) 0)))
(define (_split s sep)
  (let* ((str (if (string? s) s (list->string s)))
         (del (cond ((char? sep) sep)
                     ((string? sep) (if (= (string-length sep) 1)
                                       (string-ref sep 0)
                                       sep))
                     (else sep))))
    (cond
     ((and (string? del) (string=? del ""))
      (map string (string->list str)))
     ((char? del)
      (string-split str del))
     (else
        (let loop ((r str) (acc '()))
          (let ((cur (string-contains r del)))
            (if cur
                (let ((idx (string-cursor->index r cur)))
                  (loop (_substring r (+ idx (string-length del)) (string-length r))
                        (cons (_substring r 0 idx) acc)))
                (reverse (cons r acc)))))))))
(define (_len x)
  (cond ((string? x) (string-length x))
        ((hash-table? x) (hash-table-size x))
        (else (length x))))
(define (list-ref-safe lst idx) (if (and (integer? idx) (>= idx 0) (< idx (length lst))) (list-ref lst (inexact->exact idx)) '()))
(define (list-set-safe! lst idx val) (when (and (integer? idx) (>= idx 0) (< idx (length lst))) (list-set! lst (inexact->exact idx) val)))
(
  let (
    (
      start26 (
        current-jiffy
      )
    )
     (
      jps29 (
        jiffies-per-second
      )
    )
  )
   (
    begin (
      define (
        expApprox x
      )
       (
        call/cc (
          lambda (
            ret1
          )
           (
            begin (
              if (
                < x 0.0
              )
               (
                begin (
                  ret1 (
                    _div 1.0 (
                      expApprox (
                        - x
                      )
                    )
                  )
                )
              )
               (
                void
              )
            )
             (
              if (
                > x 1.0
              )
               (
                begin (
                  let (
                    (
                      half (
                        expApprox (
                          _div x 2.0
                        )
                      )
                    )
                  )
                   (
                    begin (
                      ret1 (
                        * half half
                      )
                    )
                  )
                )
              )
               (
                void
              )
            )
             (
              let (
                (
                  sum 1.0
                )
              )
               (
                begin (
                  let (
                    (
                      term 1.0
                    )
                  )
                   (
                    begin (
                      let (
                        (
                          n 1
                        )
                      )
                       (
                        begin (
                          letrec (
                            (
                              loop2 (
                                lambda (
                                  
                                )
                                 (
                                  if (
                                    < n 20
                                  )
                                   (
                                    begin (
                                      set! term (
                                        _div (
                                          * term x
                                        )
                                         (
                                          let (
                                            (
                                              v3 n
                                            )
                                          )
                                           (
                                            cond (
                                              (
                                                string? v3
                                              )
                                               (
                                                string->number v3
                                              )
                                            )
                                             (
                                              (
                                                boolean? v3
                                              )
                                               (
                                                if v3 1.0 0.0
                                              )
                                            )
                                             (
                                              else (
                                                exact->inexact v3
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                     (
                                      set! sum (
                                        + sum term
                                      )
                                    )
                                     (
                                      set! n (
                                        + n 1
                                      )
                                    )
                                     (
                                      loop2
                                    )
                                  )
                                   (
                                    void
                                  )
                                )
                              )
                            )
                          )
                           (
                            loop2
                          )
                        )
                         (
                          ret1 sum
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
     (
      define (
        transpose mat
      )
       (
        let (
          (
            rows (
              _len mat
            )
          )
        )
         (
          begin (
            let (
              (
                cols (
                  _len (
                    list-ref-safe mat 0
                  )
                )
              )
            )
             (
              begin (
                let (
                  (
                    res (
                      _list
                    )
                  )
                )
                 (
                  begin (
                    let (
                      (
                        i 0
                      )
                    )
                     (
                      begin (
                        letrec (
                          (
                            loop4 (
                              lambda (
                                
                              )
                               (
                                if (
                                  < i cols
                                )
                                 (
                                  begin (
                                    let (
                                      (
                                        row (
                                          _list
                                        )
                                      )
                                    )
                                     (
                                      begin (
                                        let (
                                          (
                                            j 0
                                          )
                                        )
                                         (
                                          begin (
                                            letrec (
                                              (
                                                loop5 (
                                                  lambda (
                                                    
                                                  )
                                                   (
                                                    if (
                                                      < j rows
                                                    )
                                                     (
                                                      begin (
                                                        set! row (
                                                          append row (
                                                            _list (
                                                              cond (
                                                                (
                                                                  string? (
                                                                    list-ref-safe mat j
                                                                  )
                                                                )
                                                                 (
                                                                  _substring (
                                                                    list-ref-safe mat j
                                                                  )
                                                                   i (
                                                                    + i 1
                                                                  )
                                                                )
                                                              )
                                                               (
                                                                (
                                                                  hash-table? (
                                                                    list-ref-safe mat j
                                                                  )
                                                                )
                                                                 (
                                                                  hash-table-ref (
                                                                    list-ref-safe mat j
                                                                  )
                                                                   i
                                                                )
                                                              )
                                                               (
                                                                else (
                                                                  list-ref-safe (
                                                                    list-ref-safe mat j
                                                                  )
                                                                   i
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                       (
                                                        set! j (
                                                          + j 1
                                                        )
                                                      )
                                                       (
                                                        loop5
                                                      )
                                                    )
                                                     (
                                                      void
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                             (
                                              loop5
                                            )
                                          )
                                           (
                                            set! res (
                                              append res (
                                                _list row
                                              )
                                            )
                                          )
                                           (
                                            set! i (
                                              + i 1
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                   (
                                    loop4
                                  )
                                )
                                 (
                                  void
                                )
                              )
                            )
                          )
                        )
                         (
                          loop4
                        )
                      )
                       res
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
     (
      define (
        matMul a b
      )
       (
        let (
          (
            a_rows (
              _len a
            )
          )
        )
         (
          begin (
            let (
              (
                a_cols (
                  _len (
                    list-ref-safe a 0
                  )
                )
              )
            )
             (
              begin (
                let (
                  (
                    b_cols (
                      _len (
                        list-ref-safe b 0
                      )
                    )
                  )
                )
                 (
                  begin (
                    let (
                      (
                        res (
                          _list
                        )
                      )
                    )
                     (
                      begin (
                        let (
                          (
                            i 0
                          )
                        )
                         (
                          begin (
                            letrec (
                              (
                                loop6 (
                                  lambda (
                                    
                                  )
                                   (
                                    if (
                                      < i a_rows
                                    )
                                     (
                                      begin (
                                        let (
                                          (
                                            row (
                                              _list
                                            )
                                          )
                                        )
                                         (
                                          begin (
                                            let (
                                              (
                                                j 0
                                              )
                                            )
                                             (
                                              begin (
                                                letrec (
                                                  (
                                                    loop7 (
                                                      lambda (
                                                        
                                                      )
                                                       (
                                                        if (
                                                          < j b_cols
                                                        )
                                                         (
                                                          begin (
                                                            let (
                                                              (
                                                                sum 0.0
                                                              )
                                                            )
                                                             (
                                                              begin (
                                                                let (
                                                                  (
                                                                    k 0
                                                                  )
                                                                )
                                                                 (
                                                                  begin (
                                                                    letrec (
                                                                      (
                                                                        loop8 (
                                                                          lambda (
                                                                            
                                                                          )
                                                                           (
                                                                            if (
                                                                              < k a_cols
                                                                            )
                                                                             (
                                                                              begin (
                                                                                set! sum (
                                                                                  _add sum (
                                                                                    * (
                                                                                      cond (
                                                                                        (
                                                                                          string? (
                                                                                            list-ref-safe a i
                                                                                          )
                                                                                        )
                                                                                         (
                                                                                          _substring (
                                                                                            list-ref-safe a i
                                                                                          )
                                                                                           k (
                                                                                            + k 1
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                       (
                                                                                        (
                                                                                          hash-table? (
                                                                                            list-ref-safe a i
                                                                                          )
                                                                                        )
                                                                                         (
                                                                                          hash-table-ref (
                                                                                            list-ref-safe a i
                                                                                          )
                                                                                           k
                                                                                        )
                                                                                      )
                                                                                       (
                                                                                        else (
                                                                                          list-ref-safe (
                                                                                            list-ref-safe a i
                                                                                          )
                                                                                           k
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                     (
                                                                                      cond (
                                                                                        (
                                                                                          string? (
                                                                                            list-ref-safe b k
                                                                                          )
                                                                                        )
                                                                                         (
                                                                                          _substring (
                                                                                            list-ref-safe b k
                                                                                          )
                                                                                           j (
                                                                                            + j 1
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                       (
                                                                                        (
                                                                                          hash-table? (
                                                                                            list-ref-safe b k
                                                                                          )
                                                                                        )
                                                                                         (
                                                                                          hash-table-ref (
                                                                                            list-ref-safe b k
                                                                                          )
                                                                                           j
                                                                                        )
                                                                                      )
                                                                                       (
                                                                                        else (
                                                                                          list-ref-safe (
                                                                                            list-ref-safe b k
                                                                                          )
                                                                                           j
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                               (
                                                                                set! k (
                                                                                  + k 1
                                                                                )
                                                                              )
                                                                               (
                                                                                loop8
                                                                              )
                                                                            )
                                                                             (
                                                                              void
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                     (
                                                                      loop8
                                                                    )
                                                                  )
                                                                   (
                                                                    set! row (
                                                                      append row (
                                                                        _list sum
                                                                      )
                                                                    )
                                                                  )
                                                                   (
                                                                    set! j (
                                                                      + j 1
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                           (
                                                            loop7
                                                          )
                                                        )
                                                         (
                                                          void
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                                 (
                                                  loop7
                                                )
                                              )
                                               (
                                                set! res (
                                                  append res (
                                                    _list row
                                                  )
                                                )
                                              )
                                               (
                                                set! i (
                                                  + i 1
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                       (
                                        loop6
                                      )
                                    )
                                     (
                                      void
                                    )
                                  )
                                )
                              )
                            )
                             (
                              loop6
                            )
                          )
                           res
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
     (
      define (
        matInv mat
      )
       (
        let (
          (
            n (
              _len mat
            )
          )
        )
         (
          begin (
            let (
              (
                aug (
                  _list
                )
              )
            )
             (
              begin (
                let (
                  (
                    i 0
                  )
                )
                 (
                  begin (
                    letrec (
                      (
                        loop9 (
                          lambda (
                            
                          )
                           (
                            if (
                              < i n
                            )
                             (
                              begin (
                                let (
                                  (
                                    row (
                                      _list
                                    )
                                  )
                                )
                                 (
                                  begin (
                                    let (
                                      (
                                        j 0
                                      )
                                    )
                                     (
                                      begin (
                                        letrec (
                                          (
                                            loop10 (
                                              lambda (
                                                
                                              )
                                               (
                                                if (
                                                  < j n
                                                )
                                                 (
                                                  begin (
                                                    set! row (
                                                      append row (
                                                        _list (
                                                          cond (
                                                            (
                                                              string? (
                                                                list-ref-safe mat i
                                                              )
                                                            )
                                                             (
                                                              _substring (
                                                                list-ref-safe mat i
                                                              )
                                                               j (
                                                                + j 1
                                                              )
                                                            )
                                                          )
                                                           (
                                                            (
                                                              hash-table? (
                                                                list-ref-safe mat i
                                                              )
                                                            )
                                                             (
                                                              hash-table-ref (
                                                                list-ref-safe mat i
                                                              )
                                                               j
                                                            )
                                                          )
                                                           (
                                                            else (
                                                              list-ref-safe (
                                                                list-ref-safe mat i
                                                              )
                                                               j
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                   (
                                                    set! j (
                                                      + j 1
                                                    )
                                                  )
                                                   (
                                                    loop10
                                                  )
                                                )
                                                 (
                                                  void
                                                )
                                              )
                                            )
                                          )
                                        )
                                         (
                                          loop10
                                        )
                                      )
                                       (
                                        set! j 0
                                      )
                                       (
                                        letrec (
                                          (
                                            loop11 (
                                              lambda (
                                                
                                              )
                                               (
                                                if (
                                                  < j n
                                                )
                                                 (
                                                  begin (
                                                    if (
                                                      equal? i j
                                                    )
                                                     (
                                                      begin (
                                                        set! row (
                                                          append row (
                                                            _list 1.0
                                                          )
                                                        )
                                                      )
                                                    )
                                                     (
                                                      begin (
                                                        set! row (
                                                          append row (
                                                            _list 0.0
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                   (
                                                    set! j (
                                                      + j 1
                                                    )
                                                  )
                                                   (
                                                    loop11
                                                  )
                                                )
                                                 (
                                                  void
                                                )
                                              )
                                            )
                                          )
                                        )
                                         (
                                          loop11
                                        )
                                      )
                                       (
                                        set! aug (
                                          append aug (
                                            _list row
                                          )
                                        )
                                      )
                                       (
                                        set! i (
                                          + i 1
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                               (
                                loop9
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop9
                    )
                  )
                   (
                    let (
                      (
                        col 0
                      )
                    )
                     (
                      begin (
                        letrec (
                          (
                            loop12 (
                              lambda (
                                
                              )
                               (
                                if (
                                  < col n
                                )
                                 (
                                  begin (
                                    let (
                                      (
                                        pivot (
                                          cond (
                                            (
                                              string? (
                                                list-ref-safe aug col
                                              )
                                            )
                                             (
                                              _substring (
                                                list-ref-safe aug col
                                              )
                                               col (
                                                + col 1
                                              )
                                            )
                                          )
                                           (
                                            (
                                              hash-table? (
                                                list-ref-safe aug col
                                              )
                                            )
                                             (
                                              hash-table-ref (
                                                list-ref-safe aug col
                                              )
                                               col
                                            )
                                          )
                                           (
                                            else (
                                              list-ref-safe (
                                                list-ref-safe aug col
                                              )
                                               col
                                            )
                                          )
                                        )
                                      )
                                    )
                                     (
                                      begin (
                                        if (
                                          equal? pivot 0.0
                                        )
                                         (
                                          begin (
                                            panic "Matrix is singular"
                                          )
                                        )
                                         (
                                          void
                                        )
                                      )
                                       (
                                        let (
                                          (
                                            j 0
                                          )
                                        )
                                         (
                                          begin (
                                            letrec (
                                              (
                                                loop13 (
                                                  lambda (
                                                    
                                                  )
                                                   (
                                                    if (
                                                      < j (
                                                        * 2 n
                                                      )
                                                    )
                                                     (
                                                      begin (
                                                        list-set-safe! (
                                                          list-ref-safe aug col
                                                        )
                                                         j (
                                                          _div (
                                                            cond (
                                                              (
                                                                string? (
                                                                  list-ref-safe aug col
                                                                )
                                                              )
                                                               (
                                                                _substring (
                                                                  list-ref-safe aug col
                                                                )
                                                                 j (
                                                                  + j 1
                                                                )
                                                              )
                                                            )
                                                             (
                                                              (
                                                                hash-table? (
                                                                  list-ref-safe aug col
                                                                )
                                                              )
                                                               (
                                                                hash-table-ref (
                                                                  list-ref-safe aug col
                                                                )
                                                                 j
                                                              )
                                                            )
                                                             (
                                                              else (
                                                                list-ref-safe (
                                                                  list-ref-safe aug col
                                                                )
                                                                 j
                                                              )
                                                            )
                                                          )
                                                           pivot
                                                        )
                                                      )
                                                       (
                                                        set! j (
                                                          + j 1
                                                        )
                                                      )
                                                       (
                                                        loop13
                                                      )
                                                    )
                                                     (
                                                      void
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                             (
                                              loop13
                                            )
                                          )
                                           (
                                            let (
                                              (
                                                r 0
                                              )
                                            )
                                             (
                                              begin (
                                                letrec (
                                                  (
                                                    loop14 (
                                                      lambda (
                                                        
                                                      )
                                                       (
                                                        if (
                                                          < r n
                                                        )
                                                         (
                                                          begin (
                                                            if (
                                                              not (
                                                                equal? r col
                                                              )
                                                            )
                                                             (
                                                              begin (
                                                                let (
                                                                  (
                                                                    factor (
                                                                      cond (
                                                                        (
                                                                          string? (
                                                                            list-ref-safe aug r
                                                                          )
                                                                        )
                                                                         (
                                                                          _substring (
                                                                            list-ref-safe aug r
                                                                          )
                                                                           col (
                                                                            + col 1
                                                                          )
                                                                        )
                                                                      )
                                                                       (
                                                                        (
                                                                          hash-table? (
                                                                            list-ref-safe aug r
                                                                          )
                                                                        )
                                                                         (
                                                                          hash-table-ref (
                                                                            list-ref-safe aug r
                                                                          )
                                                                           col
                                                                        )
                                                                      )
                                                                       (
                                                                        else (
                                                                          list-ref-safe (
                                                                            list-ref-safe aug r
                                                                          )
                                                                           col
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                                 (
                                                                  begin (
                                                                    set! j 0
                                                                  )
                                                                   (
                                                                    letrec (
                                                                      (
                                                                        loop15 (
                                                                          lambda (
                                                                            
                                                                          )
                                                                           (
                                                                            if (
                                                                              < j (
                                                                                * 2 n
                                                                              )
                                                                            )
                                                                             (
                                                                              begin (
                                                                                list-set-safe! (
                                                                                  list-ref-safe aug r
                                                                                )
                                                                                 j (
                                                                                  - (
                                                                                    cond (
                                                                                      (
                                                                                        string? (
                                                                                          list-ref-safe aug r
                                                                                        )
                                                                                      )
                                                                                       (
                                                                                        _substring (
                                                                                          list-ref-safe aug r
                                                                                        )
                                                                                         j (
                                                                                          + j 1
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                     (
                                                                                      (
                                                                                        hash-table? (
                                                                                          list-ref-safe aug r
                                                                                        )
                                                                                      )
                                                                                       (
                                                                                        hash-table-ref (
                                                                                          list-ref-safe aug r
                                                                                        )
                                                                                         j
                                                                                      )
                                                                                    )
                                                                                     (
                                                                                      else (
                                                                                        list-ref-safe (
                                                                                          list-ref-safe aug r
                                                                                        )
                                                                                         j
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                   (
                                                                                    * factor (
                                                                                      cond (
                                                                                        (
                                                                                          string? (
                                                                                            list-ref-safe aug col
                                                                                          )
                                                                                        )
                                                                                         (
                                                                                          _substring (
                                                                                            list-ref-safe aug col
                                                                                          )
                                                                                           j (
                                                                                            + j 1
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                       (
                                                                                        (
                                                                                          hash-table? (
                                                                                            list-ref-safe aug col
                                                                                          )
                                                                                        )
                                                                                         (
                                                                                          hash-table-ref (
                                                                                            list-ref-safe aug col
                                                                                          )
                                                                                           j
                                                                                        )
                                                                                      )
                                                                                       (
                                                                                        else (
                                                                                          list-ref-safe (
                                                                                            list-ref-safe aug col
                                                                                          )
                                                                                           j
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                               (
                                                                                set! j (
                                                                                  + j 1
                                                                                )
                                                                              )
                                                                               (
                                                                                loop15
                                                                              )
                                                                            )
                                                                             (
                                                                              void
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                     (
                                                                      loop15
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                             (
                                                              void
                                                            )
                                                          )
                                                           (
                                                            set! r (
                                                              + r 1
                                                            )
                                                          )
                                                           (
                                                            loop14
                                                          )
                                                        )
                                                         (
                                                          void
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                                 (
                                                  loop14
                                                )
                                              )
                                               (
                                                set! col (
                                                  + col 1
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                   (
                                    loop12
                                  )
                                )
                                 (
                                  void
                                )
                              )
                            )
                          )
                        )
                         (
                          loop12
                        )
                      )
                       (
                        let (
                          (
                            inv (
                              _list
                            )
                          )
                        )
                         (
                          begin (
                            set! i 0
                          )
                           (
                            letrec (
                              (
                                loop16 (
                                  lambda (
                                    
                                  )
                                   (
                                    if (
                                      < i n
                                    )
                                     (
                                      begin (
                                        let (
                                          (
                                            row (
                                              _list
                                            )
                                          )
                                        )
                                         (
                                          begin (
                                            let (
                                              (
                                                j 0
                                              )
                                            )
                                             (
                                              begin (
                                                letrec (
                                                  (
                                                    loop17 (
                                                      lambda (
                                                        
                                                      )
                                                       (
                                                        if (
                                                          < j n
                                                        )
                                                         (
                                                          begin (
                                                            set! row (
                                                              append row (
                                                                _list (
                                                                  cond (
                                                                    (
                                                                      string? (
                                                                        list-ref-safe aug i
                                                                      )
                                                                    )
                                                                     (
                                                                      _substring (
                                                                        list-ref-safe aug i
                                                                      )
                                                                       (
                                                                        + j n
                                                                      )
                                                                       (
                                                                        + (
                                                                          + j n
                                                                        )
                                                                         1
                                                                      )
                                                                    )
                                                                  )
                                                                   (
                                                                    (
                                                                      hash-table? (
                                                                        list-ref-safe aug i
                                                                      )
                                                                    )
                                                                     (
                                                                      hash-table-ref (
                                                                        list-ref-safe aug i
                                                                      )
                                                                       (
                                                                        + j n
                                                                      )
                                                                    )
                                                                  )
                                                                   (
                                                                    else (
                                                                      list-ref-safe (
                                                                        list-ref-safe aug i
                                                                      )
                                                                       (
                                                                        + j n
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                           (
                                                            set! j (
                                                              + j 1
                                                            )
                                                          )
                                                           (
                                                            loop17
                                                          )
                                                        )
                                                         (
                                                          void
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                                 (
                                                  loop17
                                                )
                                              )
                                               (
                                                set! inv (
                                                  append inv (
                                                    _list row
                                                  )
                                                )
                                              )
                                               (
                                                set! i (
                                                  + i 1
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                       (
                                        loop16
                                      )
                                    )
                                     (
                                      void
                                    )
                                  )
                                )
                              )
                            )
                             (
                              loop16
                            )
                          )
                           inv
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
     (
      define (
        weight_matrix point x_train tau
      )
       (
        let (
          (
            m (
              _len x_train
            )
          )
        )
         (
          begin (
            let (
              (
                weights (
                  _list
                )
              )
            )
             (
              begin (
                let (
                  (
                    i 0
                  )
                )
                 (
                  begin (
                    letrec (
                      (
                        loop18 (
                          lambda (
                            
                          )
                           (
                            if (
                              < i m
                            )
                             (
                              begin (
                                let (
                                  (
                                    row (
                                      _list
                                    )
                                  )
                                )
                                 (
                                  begin (
                                    let (
                                      (
                                        j 0
                                      )
                                    )
                                     (
                                      begin (
                                        letrec (
                                          (
                                            loop19 (
                                              lambda (
                                                
                                              )
                                               (
                                                if (
                                                  < j m
                                                )
                                                 (
                                                  begin (
                                                    if (
                                                      equal? i j
                                                    )
                                                     (
                                                      begin (
                                                        set! row (
                                                          append row (
                                                            _list 1.0
                                                          )
                                                        )
                                                      )
                                                    )
                                                     (
                                                      begin (
                                                        set! row (
                                                          append row (
                                                            _list 0.0
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                   (
                                                    set! j (
                                                      + j 1
                                                    )
                                                  )
                                                   (
                                                    loop19
                                                  )
                                                )
                                                 (
                                                  void
                                                )
                                              )
                                            )
                                          )
                                        )
                                         (
                                          loop19
                                        )
                                      )
                                       (
                                        set! weights (
                                          append weights (
                                            _list row
                                          )
                                        )
                                      )
                                       (
                                        set! i (
                                          + i 1
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                               (
                                loop18
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop18
                    )
                  )
                   (
                    let (
                      (
                        j 0
                      )
                    )
                     (
                      begin (
                        letrec (
                          (
                            loop20 (
                              lambda (
                                
                              )
                               (
                                if (
                                  < j m
                                )
                                 (
                                  begin (
                                    let (
                                      (
                                        diff_sq 0.0
                                      )
                                    )
                                     (
                                      begin (
                                        let (
                                          (
                                            k 0
                                          )
                                        )
                                         (
                                          begin (
                                            letrec (
                                              (
                                                loop21 (
                                                  lambda (
                                                    
                                                  )
                                                   (
                                                    if (
                                                      < k (
                                                        _len point
                                                      )
                                                    )
                                                     (
                                                      begin (
                                                        let (
                                                          (
                                                            diff (
                                                              - (
                                                                list-ref-safe point k
                                                              )
                                                               (
                                                                cond (
                                                                  (
                                                                    string? (
                                                                      list-ref-safe x_train j
                                                                    )
                                                                  )
                                                                   (
                                                                    _substring (
                                                                      list-ref-safe x_train j
                                                                    )
                                                                     k (
                                                                      + k 1
                                                                    )
                                                                  )
                                                                )
                                                                 (
                                                                  (
                                                                    hash-table? (
                                                                      list-ref-safe x_train j
                                                                    )
                                                                  )
                                                                   (
                                                                    hash-table-ref (
                                                                      list-ref-safe x_train j
                                                                    )
                                                                     k
                                                                  )
                                                                )
                                                                 (
                                                                  else (
                                                                    list-ref-safe (
                                                                      list-ref-safe x_train j
                                                                    )
                                                                     k
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                         (
                                                          begin (
                                                            set! diff_sq (
                                                              _add diff_sq (
                                                                * diff diff
                                                              )
                                                            )
                                                          )
                                                           (
                                                            set! k (
                                                              + k 1
                                                            )
                                                          )
                                                        )
                                                      )
                                                       (
                                                        loop21
                                                      )
                                                    )
                                                     (
                                                      void
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                             (
                                              loop21
                                            )
                                          )
                                           (
                                            list-set-safe! (
                                              list-ref-safe weights j
                                            )
                                             j (
                                              expApprox (
                                                _div (
                                                  - diff_sq
                                                )
                                                 (
                                                  * (
                                                    * 2.0 tau
                                                  )
                                                   tau
                                                )
                                              )
                                            )
                                          )
                                           (
                                            set! j (
                                              + j 1
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                   (
                                    loop20
                                  )
                                )
                                 (
                                  void
                                )
                              )
                            )
                          )
                        )
                         (
                          loop20
                        )
                      )
                       weights
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
     (
      define (
        local_weight point x_train y_train tau
      )
       (
        let (
          (
            w (
              weight_matrix point x_train tau
            )
          )
        )
         (
          begin (
            let (
              (
                x_t (
                  transpose x_train
                )
              )
            )
             (
              begin (
                let (
                  (
                    x_t_w (
                      matMul x_t w
                    )
                  )
                )
                 (
                  begin (
                    let (
                      (
                        x_t_w_x (
                          matMul x_t_w x_train
                        )
                      )
                    )
                     (
                      begin (
                        let (
                          (
                            inv_part (
                              matInv x_t_w_x
                            )
                          )
                        )
                         (
                          begin (
                            let (
                              (
                                y_col (
                                  _list
                                )
                              )
                            )
                             (
                              begin (
                                let (
                                  (
                                    i 0
                                  )
                                )
                                 (
                                  begin (
                                    letrec (
                                      (
                                        loop22 (
                                          lambda (
                                            
                                          )
                                           (
                                            if (
                                              < i (
                                                _len y_train
                                              )
                                            )
                                             (
                                              begin (
                                                set! y_col (
                                                  append y_col (
                                                    _list (
                                                      _list (
                                                        list-ref-safe y_train i
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                               (
                                                set! i (
                                                  + i 1
                                                )
                                              )
                                               (
                                                loop22
                                              )
                                            )
                                             (
                                              void
                                            )
                                          )
                                        )
                                      )
                                    )
                                     (
                                      loop22
                                    )
                                  )
                                   (
                                    let (
                                      (
                                        x_t_w_y (
                                          matMul x_t_w y_col
                                        )
                                      )
                                    )
                                     (
                                      begin (
                                        matMul inv_part x_t_w_y
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
     (
      define (
        local_weight_regression x_train y_train tau
      )
       (
        let (
          (
            m (
              _len x_train
            )
          )
        )
         (
          begin (
            let (
              (
                preds (
                  _list
                )
              )
            )
             (
              begin (
                let (
                  (
                    i 0
                  )
                )
                 (
                  begin (
                    letrec (
                      (
                        loop23 (
                          lambda (
                            
                          )
                           (
                            if (
                              < i m
                            )
                             (
                              begin (
                                let (
                                  (
                                    theta (
                                      local_weight (
                                        list-ref-safe x_train i
                                      )
                                       x_train y_train tau
                                    )
                                  )
                                )
                                 (
                                  begin (
                                    let (
                                      (
                                        weights_vec (
                                          _list
                                        )
                                      )
                                    )
                                     (
                                      begin (
                                        let (
                                          (
                                            k 0
                                          )
                                        )
                                         (
                                          begin (
                                            letrec (
                                              (
                                                loop24 (
                                                  lambda (
                                                    
                                                  )
                                                   (
                                                    if (
                                                      < k (
                                                        _len theta
                                                      )
                                                    )
                                                     (
                                                      begin (
                                                        set! weights_vec (
                                                          append weights_vec (
                                                            _list (
                                                              cond (
                                                                (
                                                                  string? (
                                                                    cond (
                                                                      (
                                                                        string? theta
                                                                      )
                                                                       (
                                                                        _substring theta k (
                                                                          + k 1
                                                                        )
                                                                      )
                                                                    )
                                                                     (
                                                                      (
                                                                        hash-table? theta
                                                                      )
                                                                       (
                                                                        hash-table-ref theta k
                                                                      )
                                                                    )
                                                                     (
                                                                      else (
                                                                        list-ref-safe theta k
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                                 (
                                                                  _substring (
                                                                    cond (
                                                                      (
                                                                        string? theta
                                                                      )
                                                                       (
                                                                        _substring theta k (
                                                                          + k 1
                                                                        )
                                                                      )
                                                                    )
                                                                     (
                                                                      (
                                                                        hash-table? theta
                                                                      )
                                                                       (
                                                                        hash-table-ref theta k
                                                                      )
                                                                    )
                                                                     (
                                                                      else (
                                                                        list-ref-safe theta k
                                                                      )
                                                                    )
                                                                  )
                                                                   0 (
                                                                    + 0 1
                                                                  )
                                                                )
                                                              )
                                                               (
                                                                (
                                                                  hash-table? (
                                                                    cond (
                                                                      (
                                                                        string? theta
                                                                      )
                                                                       (
                                                                        _substring theta k (
                                                                          + k 1
                                                                        )
                                                                      )
                                                                    )
                                                                     (
                                                                      (
                                                                        hash-table? theta
                                                                      )
                                                                       (
                                                                        hash-table-ref theta k
                                                                      )
                                                                    )
                                                                     (
                                                                      else (
                                                                        list-ref-safe theta k
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                                 (
                                                                  hash-table-ref (
                                                                    cond (
                                                                      (
                                                                        string? theta
                                                                      )
                                                                       (
                                                                        _substring theta k (
                                                                          + k 1
                                                                        )
                                                                      )
                                                                    )
                                                                     (
                                                                      (
                                                                        hash-table? theta
                                                                      )
                                                                       (
                                                                        hash-table-ref theta k
                                                                      )
                                                                    )
                                                                     (
                                                                      else (
                                                                        list-ref-safe theta k
                                                                      )
                                                                    )
                                                                  )
                                                                   0
                                                                )
                                                              )
                                                               (
                                                                else (
                                                                  list-ref-safe (
                                                                    cond (
                                                                      (
                                                                        string? theta
                                                                      )
                                                                       (
                                                                        _substring theta k (
                                                                          + k 1
                                                                        )
                                                                      )
                                                                    )
                                                                     (
                                                                      (
                                                                        hash-table? theta
                                                                      )
                                                                       (
                                                                        hash-table-ref theta k
                                                                      )
                                                                    )
                                                                     (
                                                                      else (
                                                                        list-ref-safe theta k
                                                                      )
                                                                    )
                                                                  )
                                                                   0
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                       (
                                                        set! k (
                                                          + k 1
                                                        )
                                                      )
                                                       (
                                                        loop24
                                                      )
                                                    )
                                                     (
                                                      void
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                             (
                                              loop24
                                            )
                                          )
                                           (
                                            let (
                                              (
                                                pred 0.0
                                              )
                                            )
                                             (
                                              begin (
                                                let (
                                                  (
                                                    j 0
                                                  )
                                                )
                                                 (
                                                  begin (
                                                    letrec (
                                                      (
                                                        loop25 (
                                                          lambda (
                                                            
                                                          )
                                                           (
                                                            if (
                                                              < j (
                                                                _len (
                                                                  list-ref-safe x_train i
                                                                )
                                                              )
                                                            )
                                                             (
                                                              begin (
                                                                set! pred (
                                                                  _add pred (
                                                                    * (
                                                                      cond (
                                                                        (
                                                                          string? (
                                                                            list-ref-safe x_train i
                                                                          )
                                                                        )
                                                                         (
                                                                          _substring (
                                                                            list-ref-safe x_train i
                                                                          )
                                                                           j (
                                                                            + j 1
                                                                          )
                                                                        )
                                                                      )
                                                                       (
                                                                        (
                                                                          hash-table? (
                                                                            list-ref-safe x_train i
                                                                          )
                                                                        )
                                                                         (
                                                                          hash-table-ref (
                                                                            list-ref-safe x_train i
                                                                          )
                                                                           j
                                                                        )
                                                                      )
                                                                       (
                                                                        else (
                                                                          list-ref-safe (
                                                                            list-ref-safe x_train i
                                                                          )
                                                                           j
                                                                        )
                                                                      )
                                                                    )
                                                                     (
                                                                      list-ref-safe weights_vec j
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                               (
                                                                set! j (
                                                                  + j 1
                                                                )
                                                              )
                                                               (
                                                                loop25
                                                              )
                                                            )
                                                             (
                                                              void
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                     (
                                                      loop25
                                                    )
                                                  )
                                                   (
                                                    set! preds (
                                                      append preds (
                                                        _list pred
                                                      )
                                                    )
                                                  )
                                                   (
                                                    set! i (
                                                      + i 1
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                               (
                                loop23
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop23
                    )
                  )
                   preds
                )
              )
            )
          )
        )
      )
    )
     (
      let (
        (
          x_train (
            _list (
              _list 16.99 10.34
            )
             (
              _list 21.01 23.68
            )
             (
              _list 24.59 25.69
            )
          )
        )
      )
       (
        begin (
          let (
            (
              y_train (
                _list 1.01 1.66 3.5
              )
            )
          )
           (
            begin (
              let (
                (
                  preds (
                    local_weight_regression x_train y_train 0.6
                  )
                )
              )
               (
                begin (
                  _display preds
                )
                 (
                  newline
                )
              )
            )
          )
        )
      )
    )
     (
      let (
        (
          end27 (
            current-jiffy
          )
        )
      )
       (
        let (
          (
            dur28 (
              quotient (
                * (
                  - end27 start26
                )
                 1000000
              )
               jps29
            )
          )
        )
         (
          begin (
            _display (
              string-append "{\n  \"duration_us\": " (
                number->string dur28
              )
               ",\n  \"memory_bytes\": " (
                number->string (
                  _mem
                )
              )
               ",\n  \"name\": \"main\"\n}"
            )
          )
           (
            newline
          )
        )
      )
    )
  )
)
