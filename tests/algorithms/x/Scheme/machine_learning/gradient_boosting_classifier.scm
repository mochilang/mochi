;; Generated by Mochi Scheme transpiler on 2025-08-16 19:42 +0700
(import (scheme base))
(import (scheme time))
(import (chibi string))
(import (only (scheme char) string-upcase string-downcase))
(import (srfi 69))
(import (srfi 1))
(define _list list)
(define (void) '())
(import (chibi time))
(define (_mem) (* 1024 (resource-usage-max-rss (get-resource-usage resource-usage/self))))
(import (chibi json))
(define (to-str x)
  (cond ((pair? x)
         (string-append "[" (string-join (map to-str x) ", ") "]"))
        ((hash-table? x)
         (let* ((ks (hash-table-keys x))
                (pairs (map (lambda (k)
                              (string-append (to-str k) ": " (to-str (hash-table-ref x k))))
                            ks)))
           (string-append "{" (string-join pairs ", ") "}")))
        ((null? x) "[]")
        ((string? x) (let ((out (open-output-string))) (json-write x out) (get-output-string out)))
        ((boolean? x) (if x "true" "false"))
       ((number? x)
        (if (integer? x)
            (number->string (inexact->exact x))
            (number->string (exact->inexact x))))
        (else (number->string x))))
(define (to-str-space x)
  (cond ((pair? x)
         (string-append "[" (string-join (map to-str-space x) " ") "]"))
        ((string? x) x)
        (else (to-str x))))
(define (upper s) (string-upcase s))
(define (lower s) (string-downcase s))
(define (_floor x) (cond ((string? x) (let ((n (string->number x))) (if n (floor n) 0))) ((boolean? x) (if x 1 0)) (else (floor x))))
(define (fmod a b) (- a (* (_floor (/ a b)) b)))
(define (_mod a b) (if (and (integer? a) (integer? b)) (modulo a b) (fmod a b)))
(define (_div a b) (if (and (integer? a) (integer? b) (exact? a) (exact? b)) (quotient a b) (/ a b)))
(define (_gt a b) (cond ((and (number? a) (number? b)) (> a b)) ((and (string? a) (string? b)) (string>? a b)) (else (> a b))))
(define (_lt a b) (cond ((and (number? a) (number? b)) (< a b)) ((and (string? a) (string? b)) (string<? a b)) (else (< a b))))
(define (_ge a b) (cond ((and (number? a) (number? b)) (>= a b)) ((and (string? a) (string? b)) (string>=? a b)) (else (>= a b))))
(define (_le a b) (cond ((and (number? a) (number? b)) (<= a b)) ((and (string? a) (string? b)) (string<=? a b)) (else (<= a b))))
(define (_eq a b) (cond ((and (number? a) (number? b)) (if (or (inexact? a) (inexact? b)) (< (abs (- a b)) 1e-6) (= a b))) ((and (string? a) (string? b)) (string=? a b)) (else (equal? a b))))
(define (_add a b)
  (cond ((and (number? a) (number? b)) (+ a b))
        ((string? a) (string-append a (to-str b)))
        ((string? b) (string-append (to-str a) b))
        ((and (list? a) (list? b)) (append a b))
        (else (+ a b))))
(define (indexOf s sub) (let ((cur (string-contains s sub)))   (if cur (string-cursor->index s cur) -1)))
(define (_display . args) (apply display args))
(define (panic msg) (error msg))
(define (padStart s width pad)
  (let loop ((out s))
    (if (< (string-length out) width)
        (loop (string-append pad out))
        out)))
(define (_substring s start end)
  (let* ((len (string-length s))
         (s0 (max 0 (min len start)))
         (e0 (max s0 (min len end))))
    (substring s s0 e0)))
(define (_repeat s n)
  (let loop ((i 0) (out ""))
    (if (< i n)
        (loop (+ i 1) (string-append out s))
        out)))
(define (slice seq start end)
  (let* ((len (if (string? seq) (string-length seq) (length seq)))
         (s (if (< start 0) (+ len start) start))
         (e (if (< end 0) (+ len end) end)))
    (set! s (max 0 (min len s)))
    (set! e (max 0 (min len e)))
    (when (< e s) (set! e s))
    (if (string? seq)
        (_substring seq s e)
        (take (drop seq s) (- e s)))))
(define (_parseIntStr s base)
  (let* ((b (if (number? base) base 10))
         (n (string->number (if (list? s) (list->string s) s) b)))
    (if n (inexact->exact (truncate n)) 0)))
(define (_split s sep)
  (let* ((str (if (string? s) s (list->string s)))
         (del (cond ((char? sep) sep)
                     ((string? sep) (if (= (string-length sep) 1)
                                       (string-ref sep 0)
                                       sep))
                     (else sep))))
    (cond
     ((and (string? del) (string=? del ""))
      (map string (string->list str)))
     ((char? del)
      (string-split str del))
     (else
        (let loop ((r str) (acc '()))
          (let ((cur (string-contains r del)))
            (if cur
                (let ((idx (string-cursor->index r cur)))
                  (loop (_substring r (+ idx (string-length del)) (string-length r))
                        (cons (_substring r 0 idx) acc)))
                (reverse (cons r acc)))))))))
(define (_len x)
  (cond ((string? x) (string-length x))
        ((hash-table? x) (hash-table-size x))
        (else (length x))))
(define (list-ref-safe lst idx) (if (and (number? idx) (>= idx 0) (< idx (length lst))) (list-ref lst (inexact->exact idx)) 0))
(define (list-set-safe! lst idx val) (when (and (integer? idx) (>= idx 0) (< idx (length lst))) (list-set! lst (inexact->exact idx) val)))
(
  let (
    (
      start20 (
        current-jiffy
      )
    )
     (
      jps23 (
        jiffies-per-second
      )
    )
  )
   (
    begin (
      define (
        exp_approx x
      )
       (
        let (
          (
            term 1.0
          )
        )
         (
          begin (
            let (
              (
                sum 1.0
              )
            )
             (
              begin (
                let (
                  (
                    i 1
                  )
                )
                 (
                  begin (
                    letrec (
                      (
                        loop1 (
                          lambda (
                            
                          )
                           (
                            if (
                              < i 10
                            )
                             (
                              begin (
                                set! term (
                                  _div (
                                    * term x
                                  )
                                   (
                                    let (
                                      (
                                        v2 i
                                      )
                                    )
                                     (
                                      cond (
                                        (
                                          string? v2
                                        )
                                         (
                                          string->number v2
                                        )
                                      )
                                       (
                                        (
                                          boolean? v2
                                        )
                                         (
                                          if v2 1.0 0.0
                                        )
                                      )
                                       (
                                        else (
                                          exact->inexact v2
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                               (
                                set! sum (
                                  + sum term
                                )
                              )
                               (
                                set! i (
                                  + i 1
                                )
                              )
                               (
                                loop1
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop1
                    )
                  )
                   sum
                )
              )
            )
          )
        )
      )
    )
     (
      define (
        signf x
      )
       (
        call/cc (
          lambda (
            ret3
          )
           (
            begin (
              if (
                >= x 0.0
              )
               (
                begin (
                  ret3 1.0
                )
              )
               (
                void
              )
            )
             (
              ret3 (
                - 1.0
              )
            )
          )
        )
      )
    )
     (
      define (
        gradient target preds
      )
       (
        let (
          (
            n (
              _len target
            )
          )
        )
         (
          begin (
            let (
              (
                residuals (
                  _list
                )
              )
            )
             (
              begin (
                let (
                  (
                    i 0
                  )
                )
                 (
                  begin (
                    letrec (
                      (
                        loop4 (
                          lambda (
                            
                          )
                           (
                            if (
                              < i n
                            )
                             (
                              begin (
                                let (
                                  (
                                    t (
                                      list-ref-safe target i
                                    )
                                  )
                                )
                                 (
                                  begin (
                                    let (
                                      (
                                        y (
                                          list-ref-safe preds i
                                        )
                                      )
                                    )
                                     (
                                      begin (
                                        let (
                                          (
                                            exp_val (
                                              exp_approx (
                                                * t y
                                              )
                                            )
                                          )
                                        )
                                         (
                                          begin (
                                            let (
                                              (
                                                res (
                                                  _div (
                                                    - t
                                                  )
                                                   (
                                                    _add 1.0 exp_val
                                                  )
                                                )
                                              )
                                            )
                                             (
                                              begin (
                                                set! residuals (
                                                  append residuals (
                                                    _list res
                                                  )
                                                )
                                              )
                                               (
                                                set! i (
                                                  + i 1
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                               (
                                loop4
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop4
                    )
                  )
                   residuals
                )
              )
            )
          )
        )
      )
    )
     (
      define (
        predict_raw models features learning_rate
      )
       (
        let (
          (
            n (
              _len features
            )
          )
        )
         (
          begin (
            let (
              (
                preds (
                  _list
                )
              )
            )
             (
              begin (
                let (
                  (
                    i 0
                  )
                )
                 (
                  begin (
                    letrec (
                      (
                        loop5 (
                          lambda (
                            
                          )
                           (
                            if (
                              < i n
                            )
                             (
                              begin (
                                set! preds (
                                  append preds (
                                    _list 0.0
                                  )
                                )
                              )
                               (
                                set! i (
                                  + i 1
                                )
                              )
                               (
                                loop5
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop5
                    )
                  )
                   (
                    let (
                      (
                        m 0
                      )
                    )
                     (
                      begin (
                        letrec (
                          (
                            loop6 (
                              lambda (
                                
                              )
                               (
                                if (
                                  < m (
                                    _len models
                                  )
                                )
                                 (
                                  begin (
                                    let (
                                      (
                                        stump (
                                          list-ref-safe models m
                                        )
                                      )
                                    )
                                     (
                                      begin (
                                        set! i 0
                                      )
                                       (
                                        letrec (
                                          (
                                            loop7 (
                                              lambda (
                                                
                                              )
                                               (
                                                if (
                                                  < i n
                                                )
                                                 (
                                                  begin (
                                                    let (
                                                      (
                                                        value (
                                                          cond (
                                                            (
                                                              string? (
                                                                list-ref-safe features i
                                                              )
                                                            )
                                                             (
                                                              _substring (
                                                                list-ref-safe features i
                                                              )
                                                               (
                                                                hash-table-ref stump "feature"
                                                              )
                                                               (
                                                                + (
                                                                  hash-table-ref stump "feature"
                                                                )
                                                                 1
                                                              )
                                                            )
                                                          )
                                                           (
                                                            (
                                                              hash-table? (
                                                                list-ref-safe features i
                                                              )
                                                            )
                                                             (
                                                              hash-table-ref (
                                                                list-ref-safe features i
                                                              )
                                                               (
                                                                hash-table-ref stump "feature"
                                                              )
                                                            )
                                                          )
                                                           (
                                                            else (
                                                              list-ref-safe (
                                                                list-ref-safe features i
                                                              )
                                                               (
                                                                hash-table-ref stump "feature"
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                     (
                                                      begin (
                                                        if (
                                                          <= value (
                                                            hash-table-ref stump "threshold"
                                                          )
                                                        )
                                                         (
                                                          begin (
                                                            list-set-safe! preds i (
                                                              _add (
                                                                list-ref-safe preds i
                                                              )
                                                               (
                                                                * learning_rate (
                                                                  hash-table-ref stump "left"
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                         (
                                                          begin (
                                                            list-set-safe! preds i (
                                                              _add (
                                                                list-ref-safe preds i
                                                              )
                                                               (
                                                                * learning_rate (
                                                                  hash-table-ref stump "right"
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                       (
                                                        set! i (
                                                          + i 1
                                                        )
                                                      )
                                                    )
                                                  )
                                                   (
                                                    loop7
                                                  )
                                                )
                                                 (
                                                  void
                                                )
                                              )
                                            )
                                          )
                                        )
                                         (
                                          loop7
                                        )
                                      )
                                       (
                                        set! m (
                                          + m 1
                                        )
                                      )
                                    )
                                  )
                                   (
                                    loop6
                                  )
                                )
                                 (
                                  void
                                )
                              )
                            )
                          )
                        )
                         (
                          loop6
                        )
                      )
                       preds
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
     (
      define (
        predict models features learning_rate
      )
       (
        let (
          (
            raw (
              predict_raw models features learning_rate
            )
          )
        )
         (
          begin (
            let (
              (
                result (
                  _list
                )
              )
            )
             (
              begin (
                let (
                  (
                    i 0
                  )
                )
                 (
                  begin (
                    letrec (
                      (
                        loop8 (
                          lambda (
                            
                          )
                           (
                            if (
                              < i (
                                _len raw
                              )
                            )
                             (
                              begin (
                                set! result (
                                  append result (
                                    _list (
                                      signf (
                                        cond (
                                          (
                                            string? raw
                                          )
                                           (
                                            _substring raw i (
                                              + i 1
                                            )
                                          )
                                        )
                                         (
                                          (
                                            hash-table? raw
                                          )
                                           (
                                            hash-table-ref raw i
                                          )
                                        )
                                         (
                                          else (
                                            list-ref-safe raw i
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                               (
                                set! i (
                                  + i 1
                                )
                              )
                               (
                                loop8
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop8
                    )
                  )
                   result
                )
              )
            )
          )
        )
      )
    )
     (
      define (
        train_stump features residuals
      )
       (
        let (
          (
            n_samples (
              _len features
            )
          )
        )
         (
          begin (
            let (
              (
                n_features (
                  _len (
                    list-ref-safe features 0
                  )
                )
              )
            )
             (
              begin (
                let (
                  (
                    best_feature 0
                  )
                )
                 (
                  begin (
                    let (
                      (
                        best_threshold 0.0
                      )
                    )
                     (
                      begin (
                        let (
                          (
                            best_error 1e+09
                          )
                        )
                         (
                          begin (
                            let (
                              (
                                best_left 0.0
                              )
                            )
                             (
                              begin (
                                let (
                                  (
                                    best_right 0.0
                                  )
                                )
                                 (
                                  begin (
                                    let (
                                      (
                                        j 0
                                      )
                                    )
                                     (
                                      begin (
                                        letrec (
                                          (
                                            loop9 (
                                              lambda (
                                                
                                              )
                                               (
                                                if (
                                                  < j n_features
                                                )
                                                 (
                                                  begin (
                                                    let (
                                                      (
                                                        t_index 0
                                                      )
                                                    )
                                                     (
                                                      begin (
                                                        letrec (
                                                          (
                                                            loop10 (
                                                              lambda (
                                                                
                                                              )
                                                               (
                                                                if (
                                                                  < t_index n_samples
                                                                )
                                                                 (
                                                                  begin (
                                                                    let (
                                                                      (
                                                                        t (
                                                                          cond (
                                                                            (
                                                                              string? (
                                                                                list-ref-safe features t_index
                                                                              )
                                                                            )
                                                                             (
                                                                              _substring (
                                                                                list-ref-safe features t_index
                                                                              )
                                                                               j (
                                                                                + j 1
                                                                              )
                                                                            )
                                                                          )
                                                                           (
                                                                            (
                                                                              hash-table? (
                                                                                list-ref-safe features t_index
                                                                              )
                                                                            )
                                                                             (
                                                                              hash-table-ref (
                                                                                list-ref-safe features t_index
                                                                              )
                                                                               j
                                                                            )
                                                                          )
                                                                           (
                                                                            else (
                                                                              list-ref-safe (
                                                                                list-ref-safe features t_index
                                                                              )
                                                                               j
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                     (
                                                                      begin (
                                                                        let (
                                                                          (
                                                                            sum_left 0.0
                                                                          )
                                                                        )
                                                                         (
                                                                          begin (
                                                                            let (
                                                                              (
                                                                                count_left 0
                                                                              )
                                                                            )
                                                                             (
                                                                              begin (
                                                                                let (
                                                                                  (
                                                                                    sum_right 0.0
                                                                                  )
                                                                                )
                                                                                 (
                                                                                  begin (
                                                                                    let (
                                                                                      (
                                                                                        count_right 0
                                                                                      )
                                                                                    )
                                                                                     (
                                                                                      begin (
                                                                                        let (
                                                                                          (
                                                                                            i 0
                                                                                          )
                                                                                        )
                                                                                         (
                                                                                          begin (
                                                                                            letrec (
                                                                                              (
                                                                                                loop11 (
                                                                                                  lambda (
                                                                                                    
                                                                                                  )
                                                                                                   (
                                                                                                    if (
                                                                                                      < i n_samples
                                                                                                    )
                                                                                                     (
                                                                                                      begin (
                                                                                                        if (
                                                                                                          <= (
                                                                                                            cond (
                                                                                                              (
                                                                                                                string? (
                                                                                                                  list-ref-safe features i
                                                                                                                )
                                                                                                              )
                                                                                                               (
                                                                                                                _substring (
                                                                                                                  list-ref-safe features i
                                                                                                                )
                                                                                                                 j (
                                                                                                                  + j 1
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                             (
                                                                                                              (
                                                                                                                hash-table? (
                                                                                                                  list-ref-safe features i
                                                                                                                )
                                                                                                              )
                                                                                                               (
                                                                                                                hash-table-ref (
                                                                                                                  list-ref-safe features i
                                                                                                                )
                                                                                                                 j
                                                                                                              )
                                                                                                            )
                                                                                                             (
                                                                                                              else (
                                                                                                                list-ref-safe (
                                                                                                                  list-ref-safe features i
                                                                                                                )
                                                                                                                 j
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                           t
                                                                                                        )
                                                                                                         (
                                                                                                          begin (
                                                                                                            set! sum_left (
                                                                                                              + sum_left (
                                                                                                                list-ref-safe residuals i
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                           (
                                                                                                            set! count_left (
                                                                                                              + count_left 1
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                         (
                                                                                                          begin (
                                                                                                            set! sum_right (
                                                                                                              + sum_right (
                                                                                                                list-ref-safe residuals i
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                           (
                                                                                                            set! count_right (
                                                                                                              + count_right 1
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                       (
                                                                                                        set! i (
                                                                                                          + i 1
                                                                                                        )
                                                                                                      )
                                                                                                       (
                                                                                                        loop11
                                                                                                      )
                                                                                                    )
                                                                                                     (
                                                                                                      void
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                             (
                                                                                              loop11
                                                                                            )
                                                                                          )
                                                                                           (
                                                                                            let (
                                                                                              (
                                                                                                left_val 0.0
                                                                                              )
                                                                                            )
                                                                                             (
                                                                                              begin (
                                                                                                if (
                                                                                                  not (
                                                                                                    _eq count_left 0
                                                                                                  )
                                                                                                )
                                                                                                 (
                                                                                                  begin (
                                                                                                    set! left_val (
                                                                                                      _div sum_left (
                                                                                                        let (
                                                                                                          (
                                                                                                            v12 count_left
                                                                                                          )
                                                                                                        )
                                                                                                         (
                                                                                                          cond (
                                                                                                            (
                                                                                                              string? v12
                                                                                                            )
                                                                                                             (
                                                                                                              string->number v12
                                                                                                            )
                                                                                                          )
                                                                                                           (
                                                                                                            (
                                                                                                              boolean? v12
                                                                                                            )
                                                                                                             (
                                                                                                              if v12 1.0 0.0
                                                                                                            )
                                                                                                          )
                                                                                                           (
                                                                                                            else (
                                                                                                              exact->inexact v12
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                                 (
                                                                                                  void
                                                                                                )
                                                                                              )
                                                                                               (
                                                                                                let (
                                                                                                  (
                                                                                                    right_val 0.0
                                                                                                  )
                                                                                                )
                                                                                                 (
                                                                                                  begin (
                                                                                                    if (
                                                                                                      not (
                                                                                                        _eq count_right 0
                                                                                                      )
                                                                                                    )
                                                                                                     (
                                                                                                      begin (
                                                                                                        set! right_val (
                                                                                                          _div sum_right (
                                                                                                            let (
                                                                                                              (
                                                                                                                v13 count_right
                                                                                                              )
                                                                                                            )
                                                                                                             (
                                                                                                              cond (
                                                                                                                (
                                                                                                                  string? v13
                                                                                                                )
                                                                                                                 (
                                                                                                                  string->number v13
                                                                                                                )
                                                                                                              )
                                                                                                               (
                                                                                                                (
                                                                                                                  boolean? v13
                                                                                                                )
                                                                                                                 (
                                                                                                                  if v13 1.0 0.0
                                                                                                                )
                                                                                                              )
                                                                                                               (
                                                                                                                else (
                                                                                                                  exact->inexact v13
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                     (
                                                                                                      void
                                                                                                    )
                                                                                                  )
                                                                                                   (
                                                                                                    let (
                                                                                                      (
                                                                                                        error 0.0
                                                                                                      )
                                                                                                    )
                                                                                                     (
                                                                                                      begin (
                                                                                                        set! i 0
                                                                                                      )
                                                                                                       (
                                                                                                        letrec (
                                                                                                          (
                                                                                                            loop14 (
                                                                                                              lambda (
                                                                                                                
                                                                                                              )
                                                                                                               (
                                                                                                                if (
                                                                                                                  < i n_samples
                                                                                                                )
                                                                                                                 (
                                                                                                                  begin (
                                                                                                                    let (
                                                                                                                      (
                                                                                                                        pred (
                                                                                                                          if (
                                                                                                                            <= (
                                                                                                                              cond (
                                                                                                                                (
                                                                                                                                  string? (
                                                                                                                                    list-ref-safe features i
                                                                                                                                  )
                                                                                                                                )
                                                                                                                                 (
                                                                                                                                  _substring (
                                                                                                                                    list-ref-safe features i
                                                                                                                                  )
                                                                                                                                   j (
                                                                                                                                    + j 1
                                                                                                                                  )
                                                                                                                                )
                                                                                                                              )
                                                                                                                               (
                                                                                                                                (
                                                                                                                                  hash-table? (
                                                                                                                                    list-ref-safe features i
                                                                                                                                  )
                                                                                                                                )
                                                                                                                                 (
                                                                                                                                  hash-table-ref (
                                                                                                                                    list-ref-safe features i
                                                                                                                                  )
                                                                                                                                   j
                                                                                                                                )
                                                                                                                              )
                                                                                                                               (
                                                                                                                                else (
                                                                                                                                  list-ref-safe (
                                                                                                                                    list-ref-safe features i
                                                                                                                                  )
                                                                                                                                   j
                                                                                                                                )
                                                                                                                              )
                                                                                                                            )
                                                                                                                             t
                                                                                                                          )
                                                                                                                           left_val right_val
                                                                                                                        )
                                                                                                                      )
                                                                                                                    )
                                                                                                                     (
                                                                                                                      begin (
                                                                                                                        let (
                                                                                                                          (
                                                                                                                            diff (
                                                                                                                              - (
                                                                                                                                list-ref-safe residuals i
                                                                                                                              )
                                                                                                                               pred
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                         (
                                                                                                                          begin (
                                                                                                                            set! error (
                                                                                                                              _add error (
                                                                                                                                * diff diff
                                                                                                                              )
                                                                                                                            )
                                                                                                                          )
                                                                                                                           (
                                                                                                                            set! i (
                                                                                                                              + i 1
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )
                                                                                                                    )
                                                                                                                  )
                                                                                                                   (
                                                                                                                    loop14
                                                                                                                  )
                                                                                                                )
                                                                                                                 (
                                                                                                                  void
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                         (
                                                                                                          loop14
                                                                                                        )
                                                                                                      )
                                                                                                       (
                                                                                                        if (
                                                                                                          < error best_error
                                                                                                        )
                                                                                                         (
                                                                                                          begin (
                                                                                                            set! best_error error
                                                                                                          )
                                                                                                           (
                                                                                                            set! best_feature j
                                                                                                          )
                                                                                                           (
                                                                                                            set! best_threshold t
                                                                                                          )
                                                                                                           (
                                                                                                            set! best_left left_val
                                                                                                          )
                                                                                                           (
                                                                                                            set! best_right right_val
                                                                                                          )
                                                                                                        )
                                                                                                         (
                                                                                                          void
                                                                                                        )
                                                                                                      )
                                                                                                       (
                                                                                                        set! t_index (
                                                                                                          + t_index 1
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                   (
                                                                    loop10
                                                                  )
                                                                )
                                                                 (
                                                                  void
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                         (
                                                          loop10
                                                        )
                                                      )
                                                       (
                                                        set! j (
                                                          + j 1
                                                        )
                                                      )
                                                    )
                                                  )
                                                   (
                                                    loop9
                                                  )
                                                )
                                                 (
                                                  void
                                                )
                                              )
                                            )
                                          )
                                        )
                                         (
                                          loop9
                                        )
                                      )
                                       (
                                        alist->hash-table (
                                          _list (
                                            cons "feature" best_feature
                                          )
                                           (
                                            cons "threshold" best_threshold
                                          )
                                           (
                                            cons "left" best_left
                                          )
                                           (
                                            cons "right" best_right
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
     (
      define (
        fit n_estimators learning_rate features target
      )
       (
        let (
          (
            models (
              _list
            )
          )
        )
         (
          begin (
            let (
              (
                m 0
              )
            )
             (
              begin (
                letrec (
                  (
                    loop15 (
                      lambda (
                        
                      )
                       (
                        if (
                          < m n_estimators
                        )
                         (
                          begin (
                            let (
                              (
                                preds (
                                  predict_raw models features learning_rate
                                )
                              )
                            )
                             (
                              begin (
                                let (
                                  (
                                    grad (
                                      gradient target preds
                                    )
                                  )
                                )
                                 (
                                  begin (
                                    let (
                                      (
                                        residuals (
                                          _list
                                        )
                                      )
                                    )
                                     (
                                      begin (
                                        let (
                                          (
                                            i 0
                                          )
                                        )
                                         (
                                          begin (
                                            letrec (
                                              (
                                                loop16 (
                                                  lambda (
                                                    
                                                  )
                                                   (
                                                    if (
                                                      < i (
                                                        _len grad
                                                      )
                                                    )
                                                     (
                                                      begin (
                                                        set! residuals (
                                                          append residuals (
                                                            _list (
                                                              - (
                                                                cond (
                                                                  (
                                                                    string? grad
                                                                  )
                                                                   (
                                                                    _substring grad i (
                                                                      + i 1
                                                                    )
                                                                  )
                                                                )
                                                                 (
                                                                  (
                                                                    hash-table? grad
                                                                  )
                                                                   (
                                                                    hash-table-ref grad i
                                                                  )
                                                                )
                                                                 (
                                                                  else (
                                                                    list-ref-safe grad i
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                       (
                                                        set! i (
                                                          + i 1
                                                        )
                                                      )
                                                       (
                                                        loop16
                                                      )
                                                    )
                                                     (
                                                      void
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                             (
                                              loop16
                                            )
                                          )
                                           (
                                            let (
                                              (
                                                stump (
                                                  train_stump features residuals
                                                )
                                              )
                                            )
                                             (
                                              begin (
                                                set! models (
                                                  append models (
                                                    _list stump
                                                  )
                                                )
                                              )
                                               (
                                                set! m (
                                                  + m 1
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                           (
                            loop15
                          )
                        )
                         (
                          void
                        )
                      )
                    )
                  )
                )
                 (
                  loop15
                )
              )
               models
            )
          )
        )
      )
    )
     (
      define (
        accuracy preds target
      )
       (
        let (
          (
            n (
              _len target
            )
          )
        )
         (
          begin (
            let (
              (
                correct 0
              )
            )
             (
              begin (
                let (
                  (
                    i 0
                  )
                )
                 (
                  begin (
                    letrec (
                      (
                        loop17 (
                          lambda (
                            
                          )
                           (
                            if (
                              < i n
                            )
                             (
                              begin (
                                if (
                                  _eq (
                                    list-ref-safe preds i
                                  )
                                   (
                                    list-ref-safe target i
                                  )
                                )
                                 (
                                  begin (
                                    set! correct (
                                      + correct 1
                                    )
                                  )
                                )
                                 (
                                  void
                                )
                              )
                               (
                                set! i (
                                  + i 1
                                )
                              )
                               (
                                loop17
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop17
                    )
                  )
                   (
                    _div (
                      let (
                        (
                          v18 correct
                        )
                      )
                       (
                        cond (
                          (
                            string? v18
                          )
                           (
                            string->number v18
                          )
                        )
                         (
                          (
                            boolean? v18
                          )
                           (
                            if v18 1.0 0.0
                          )
                        )
                         (
                          else (
                            exact->inexact v18
                          )
                        )
                      )
                    )
                     (
                      let (
                        (
                          v19 n
                        )
                      )
                       (
                        cond (
                          (
                            string? v19
                          )
                           (
                            string->number v19
                          )
                        )
                         (
                          (
                            boolean? v19
                          )
                           (
                            if v19 1.0 0.0
                          )
                        )
                         (
                          else (
                            exact->inexact v19
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
     (
      let (
        (
          features (
            _list (
              _list 1.0
            )
             (
              _list 2.0
            )
             (
              _list 3.0
            )
             (
              _list 4.0
            )
          )
        )
      )
       (
        begin (
          let (
            (
              target (
                _list (
                  - 1.0
                )
                 (
                  - 1.0
                )
                 1.0 1.0
              )
            )
          )
           (
            begin (
              let (
                (
                  models (
                    fit 5 0.5 features target
                  )
                )
              )
               (
                begin (
                  let (
                    (
                      predictions (
                        predict models features 0.5
                      )
                    )
                  )
                   (
                    begin (
                      let (
                        (
                          acc (
                            accuracy predictions target
                          )
                        )
                      )
                       (
                        begin (
                          _display (
                            if (
                              string? (
                                string-append "Accuracy: " (
                                  to-str-space acc
                                )
                              )
                            )
                             (
                              string-append "Accuracy: " (
                                to-str-space acc
                              )
                            )
                             (
                              to-str (
                                string-append "Accuracy: " (
                                  to-str-space acc
                                )
                              )
                            )
                          )
                        )
                         (
                          newline
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
     (
      let (
        (
          end21 (
            current-jiffy
          )
        )
      )
       (
        let (
          (
            dur22 (
              quotient (
                * (
                  - end21 start20
                )
                 1000000
              )
               jps23
            )
          )
        )
         (
          begin (
            _display (
              string-append "{\n  \"duration_us\": " (
                number->string dur22
              )
               ",\n  \"memory_bytes\": " (
                number->string (
                  _mem
                )
              )
               ",\n  \"name\": \"main\"\n}"
            )
          )
           (
            newline
          )
        )
      )
    )
  )
)
