;; Generated by Mochi Scheme transpiler on 2025-08-11 17:23 +0700
(import (scheme base))
(import (scheme time))
(import (chibi string))
(import (only (scheme char) string-upcase string-downcase))
(import (srfi 69))
(import (srfi 1))
(define _list list)
(import (chibi time))
(define (_mem) (* 1024 (resource-usage-max-rss (get-resource-usage resource-usage/self))))
(import (chibi json))
(define (to-str x)
  (cond ((pair? x)
         (string-append "[" (string-join (map to-str x) ", ") "]"))
        ((hash-table? x)
         (let* ((ks (hash-table-keys x))
                (pairs (map (lambda (k)
                              (string-append (to-str k) ": " (to-str (hash-table-ref x k))))
                            ks)))
           (string-append "{" (string-join pairs ", ") "}")))
        ((null? x) "[]")
        ((string? x) (let ((out (open-output-string))) (json-write x out) (get-output-string out)))
        ((boolean? x) (if x "true" "false"))
        ((number? x)
         (if (integer? x)
             (number->string (inexact->exact x))
             (number->string x)))
        (else (number->string x))))
(define (to-str-space x)
  (cond ((pair? x)
         (string-append "[" (string-join (map to-str-space x) " ") "]"))
        ((string? x) x)
        (else (to-str x))))
(define (upper s) (string-upcase s))
(define (lower s) (string-downcase s))
(define (_floor x) (cond ((string? x) (let ((n (string->number x))) (if n (floor n) 0))) ((boolean? x) (if x 1 0)) (else (floor x))))
(define (fmod a b) (- a (* (_floor (/ a b)) b)))
(define (_mod a b) (if (and (integer? a) (integer? b)) (modulo a b) (fmod a b)))
(define (_div a b) (if (and (integer? a) (integer? b) (exact? a) (exact? b)) (quotient a b) (/ a b)))
(define (_gt a b) (cond ((and (number? a) (number? b)) (> a b)) ((and (string? a) (string? b)) (string>? a b)) (else (> a b))))
(define (_lt a b) (cond ((and (number? a) (number? b)) (< a b)) ((and (string? a) (string? b)) (string<? a b)) (else (< a b))))
(define (_ge a b) (cond ((and (number? a) (number? b)) (>= a b)) ((and (string? a) (string? b)) (string>=? a b)) (else (>= a b))))
(define (_le a b) (cond ((and (number? a) (number? b)) (<= a b)) ((and (string? a) (string? b)) (string<=? a b)) (else (<= a b))))
(define (_add a b)
  (cond ((and (number? a) (number? b)) (+ a b))
        ((string? a) (string-append a (to-str b)))
        ((string? b) (string-append (to-str a) b))
        ((and (list? a) (list? b)) (append a b))
        (else (+ a b))))
(define (indexOf s sub) (let ((cur (string-contains s sub)))   (if cur (string-cursor->index s cur) -1)))
(define (_display . args) (apply display args))
(define (panic msg) (error msg))
(define (padStart s width pad)
  (let loop ((out s))
    (if (< (string-length out) width)
        (loop (string-append pad out))
        out)))
(define (_substring s start end)
  (let* ((len (string-length s))
         (s0 (max 0 (min len start)))
         (e0 (max s0 (min len end))))
    (substring s s0 e0)))
(define (_repeat s n)
  (let loop ((i 0) (out ""))
    (if (< i n)
        (loop (+ i 1) (string-append out s))
        out)))
(define (slice seq start end)
  (let* ((len (if (string? seq) (string-length seq) (length seq)))
         (s (if (< start 0) (+ len start) start))
         (e (if (< end 0) (+ len end) end)))
    (set! s (max 0 (min len s)))
    (set! e (max 0 (min len e)))
    (when (< e s) (set! e s))
    (if (string? seq)
        (_substring seq s e)
        (take (drop seq s) (- e s)))))
(define (_parseIntStr s base)
  (let* ((b (if (number? base) base 10))
         (n (string->number (if (list? s) (list->string s) s) b)))
    (if n (inexact->exact (truncate n)) 0)))
(define (_split s sep)
  (let* ((str (if (string? s) s (list->string s)))
         (del (cond ((char? sep) sep)
                     ((string? sep) (if (= (string-length sep) 1)
                                       (string-ref sep 0)
                                       sep))
                     (else sep))))
    (cond
     ((and (string? del) (string=? del ""))
      (map string (string->list str)))
     ((char? del)
      (string-split str del))
     (else
        (let loop ((r str) (acc '()))
          (let ((cur (string-contains r del)))
            (if cur
                (let ((idx (string-cursor->index r cur)))
                  (loop (_substring r (+ idx (string-length del)) (string-length r))
                        (cons (_substring r 0 idx) acc)))
                (reverse (cons r acc)))))))))
(define (_len x)
  (cond ((string? x) (string-length x))
        ((hash-table? x) (hash-table-size x))
        (else (length x))))
(define (list-ref-safe lst idx) (if (and (integer? idx) (>= idx 0) (< idx (length lst))) (list-ref lst idx) '()))
(define (list-set-safe! lst idx val) (when (and (integer? idx) (>= idx 0) (< idx (length lst))) (list-set! lst idx val)))
(
  let (
    (
      start15 (
        current-jiffy
      )
    )
     (
      jps18 (
        jiffies-per-second
      )
    )
  )
   (
    begin (
      define (
        binary_search_insertion_from sorted_list item start
      )
       (
        let (
          (
            left start
          )
        )
         (
          begin (
            let (
              (
                right (
                  - (
                    _len sorted_list
                  )
                   1
                )
              )
            )
             (
              begin (
                call/cc (
                  lambda (
                    break2
                  )
                   (
                    letrec (
                      (
                        loop1 (
                          lambda (
                            
                          )
                           (
                            if (
                              <= left right
                            )
                             (
                              begin (
                                let (
                                  (
                                    middle (
                                      _div (
                                        + left right
                                      )
                                       2
                                    )
                                  )
                                )
                                 (
                                  begin (
                                    if (
                                      equal? left right
                                    )
                                     (
                                      begin (
                                        if (
                                          < (
                                            list-ref-safe sorted_list middle
                                          )
                                           item
                                        )
                                         (
                                          begin (
                                            set! left (
                                              + middle 1
                                            )
                                          )
                                        )
                                         '(
                                          
                                        )
                                      )
                                       (
                                        break2 '(
                                          
                                        )
                                      )
                                    )
                                     (
                                      if (
                                        < (
                                          list-ref-safe sorted_list middle
                                        )
                                         item
                                      )
                                       (
                                        begin (
                                          set! left (
                                            + middle 1
                                          )
                                        )
                                      )
                                       (
                                        begin (
                                          set! right (
                                            - middle 1
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                               (
                                loop1
                              )
                            )
                             '(
                              
                            )
                          )
                        )
                      )
                    )
                     (
                      loop1
                    )
                  )
                )
              )
               (
                let (
                  (
                    result (
                      _list
                    )
                  )
                )
                 (
                  begin (
                    let (
                      (
                        i 0
                      )
                    )
                     (
                      begin (
                        letrec (
                          (
                            loop3 (
                              lambda (
                                
                              )
                               (
                                if (
                                  < i left
                                )
                                 (
                                  begin (
                                    set! result (
                                      append result (
                                        _list (
                                          list-ref-safe sorted_list i
                                        )
                                      )
                                    )
                                  )
                                   (
                                    set! i (
                                      + i 1
                                    )
                                  )
                                   (
                                    loop3
                                  )
                                )
                                 '(
                                  
                                )
                              )
                            )
                          )
                        )
                         (
                          loop3
                        )
                      )
                       (
                        set! result (
                          append result (
                            _list item
                          )
                        )
                      )
                       (
                        letrec (
                          (
                            loop4 (
                              lambda (
                                
                              )
                               (
                                if (
                                  < i (
                                    _len sorted_list
                                  )
                                )
                                 (
                                  begin (
                                    set! result (
                                      append result (
                                        _list (
                                          list-ref-safe sorted_list i
                                        )
                                      )
                                    )
                                  )
                                   (
                                    set! i (
                                      + i 1
                                    )
                                  )
                                   (
                                    loop4
                                  )
                                )
                                 '(
                                  
                                )
                              )
                            )
                          )
                        )
                         (
                          loop4
                        )
                      )
                       result
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
     (
      define (
        binary_search_insertion sorted_list item
      )
       (
        binary_search_insertion_from sorted_list item 0
      )
    )
     (
      define (
        merge left right
      )
       (
        let (
          (
            result (
              _list
            )
          )
        )
         (
          begin (
            let (
              (
                i 0
              )
            )
             (
              begin (
                let (
                  (
                    j 0
                  )
                )
                 (
                  begin (
                    letrec (
                      (
                        loop5 (
                          lambda (
                            
                          )
                           (
                            if (
                              and (
                                < i (
                                  _len left
                                )
                              )
                               (
                                < j (
                                  _len right
                                )
                              )
                            )
                             (
                              begin (
                                if (
                                  < (
                                    cond (
                                      (
                                        string? (
                                          list-ref-safe left i
                                        )
                                      )
                                       (
                                        _substring (
                                          list-ref-safe left i
                                        )
                                         0 (
                                          + 0 1
                                        )
                                      )
                                    )
                                     (
                                      (
                                        hash-table? (
                                          list-ref-safe left i
                                        )
                                      )
                                       (
                                        hash-table-ref (
                                          list-ref-safe left i
                                        )
                                         0
                                      )
                                    )
                                     (
                                      else (
                                        list-ref-safe (
                                          list-ref-safe left i
                                        )
                                         0
                                      )
                                    )
                                  )
                                   (
                                    cond (
                                      (
                                        string? (
                                          list-ref-safe right j
                                        )
                                      )
                                       (
                                        _substring (
                                          list-ref-safe right j
                                        )
                                         0 (
                                          + 0 1
                                        )
                                      )
                                    )
                                     (
                                      (
                                        hash-table? (
                                          list-ref-safe right j
                                        )
                                      )
                                       (
                                        hash-table-ref (
                                          list-ref-safe right j
                                        )
                                         0
                                      )
                                    )
                                     (
                                      else (
                                        list-ref-safe (
                                          list-ref-safe right j
                                        )
                                         0
                                      )
                                    )
                                  )
                                )
                                 (
                                  begin (
                                    set! result (
                                      append result (
                                        _list (
                                          list-ref-safe left i
                                        )
                                      )
                                    )
                                  )
                                   (
                                    set! i (
                                      + i 1
                                    )
                                  )
                                )
                                 (
                                  begin (
                                    set! result (
                                      append result (
                                        _list (
                                          list-ref-safe right j
                                        )
                                      )
                                    )
                                  )
                                   (
                                    set! j (
                                      + j 1
                                    )
                                  )
                                )
                              )
                               (
                                loop5
                              )
                            )
                             '(
                              
                            )
                          )
                        )
                      )
                    )
                     (
                      loop5
                    )
                  )
                   (
                    letrec (
                      (
                        loop6 (
                          lambda (
                            
                          )
                           (
                            if (
                              < i (
                                _len left
                              )
                            )
                             (
                              begin (
                                set! result (
                                  append result (
                                    _list (
                                      list-ref-safe left i
                                    )
                                  )
                                )
                              )
                               (
                                set! i (
                                  + i 1
                                )
                              )
                               (
                                loop6
                              )
                            )
                             '(
                              
                            )
                          )
                        )
                      )
                    )
                     (
                      loop6
                    )
                  )
                   (
                    letrec (
                      (
                        loop7 (
                          lambda (
                            
                          )
                           (
                            if (
                              < j (
                                _len right
                              )
                            )
                             (
                              begin (
                                set! result (
                                  append result (
                                    _list (
                                      list-ref-safe right j
                                    )
                                  )
                                )
                              )
                               (
                                set! j (
                                  + j 1
                                )
                              )
                               (
                                loop7
                              )
                            )
                             '(
                              
                            )
                          )
                        )
                      )
                    )
                     (
                      loop7
                    )
                  )
                   result
                )
              )
            )
          )
        )
      )
    )
     (
      define (
        sortlist_2d list_2d
      )
       (
        call/cc (
          lambda (
            ret8
          )
           (
            let (
              (
                length (
                  _len list_2d
                )
              )
            )
             (
              begin (
                if (
                  <= length 1
                )
                 (
                  begin (
                    ret8 list_2d
                  )
                )
                 '(
                  
                )
              )
               (
                let (
                  (
                    middle (
                      _div length 2
                    )
                  )
                )
                 (
                  begin (
                    let (
                      (
                        left (
                          _list
                        )
                      )
                    )
                     (
                      begin (
                        let (
                          (
                            i 0
                          )
                        )
                         (
                          begin (
                            letrec (
                              (
                                loop9 (
                                  lambda (
                                    
                                  )
                                   (
                                    if (
                                      < i middle
                                    )
                                     (
                                      begin (
                                        set! left (
                                          append left (
                                            _list (
                                              list-ref-safe list_2d i
                                            )
                                          )
                                        )
                                      )
                                       (
                                        set! i (
                                          + i 1
                                        )
                                      )
                                       (
                                        loop9
                                      )
                                    )
                                     '(
                                      
                                    )
                                  )
                                )
                              )
                            )
                             (
                              loop9
                            )
                          )
                           (
                            let (
                              (
                                right (
                                  _list
                                )
                              )
                            )
                             (
                              begin (
                                let (
                                  (
                                    j middle
                                  )
                                )
                                 (
                                  begin (
                                    letrec (
                                      (
                                        loop10 (
                                          lambda (
                                            
                                          )
                                           (
                                            if (
                                              < j length
                                            )
                                             (
                                              begin (
                                                set! right (
                                                  append right (
                                                    _list (
                                                      list-ref-safe list_2d j
                                                    )
                                                  )
                                                )
                                              )
                                               (
                                                set! j (
                                                  + j 1
                                                )
                                              )
                                               (
                                                loop10
                                              )
                                            )
                                             '(
                                              
                                            )
                                          )
                                        )
                                      )
                                    )
                                     (
                                      loop10
                                    )
                                  )
                                   (
                                    ret8 (
                                      merge (
                                        sortlist_2d left
                                      )
                                       (
                                        sortlist_2d right
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
     (
      define (
        merge_insertion_sort collection
      )
       (
        call/cc (
          lambda (
            ret11
          )
           (
            begin (
              if (
                <= (
                  _len collection
                )
                 1
              )
               (
                begin (
                  ret11 collection
                )
              )
               '(
                
              )
            )
             (
              let (
                (
                  two_paired_list (
                    _list
                  )
                )
              )
               (
                begin (
                  let (
                    (
                      has_last_odd_item #f
                    )
                  )
                   (
                    begin (
                      let (
                        (
                          i 0
                        )
                      )
                       (
                        begin (
                          letrec (
                            (
                              loop12 (
                                lambda (
                                  
                                )
                                 (
                                  if (
                                    < i (
                                      _len collection
                                    )
                                  )
                                   (
                                    begin (
                                      if (
                                        equal? i (
                                          - (
                                            _len collection
                                          )
                                           1
                                        )
                                      )
                                       (
                                        begin (
                                          set! has_last_odd_item #t
                                        )
                                      )
                                       (
                                        begin (
                                          let (
                                            (
                                              a (
                                                list-ref-safe collection i
                                              )
                                            )
                                          )
                                           (
                                            begin (
                                              let (
                                                (
                                                  b (
                                                    list-ref-safe collection (
                                                      + i 1
                                                    )
                                                  )
                                                )
                                              )
                                               (
                                                begin (
                                                  if (
                                                    < a b
                                                  )
                                                   (
                                                    begin (
                                                      set! two_paired_list (
                                                        append two_paired_list (
                                                          _list (
                                                            _list a b
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                   (
                                                    begin (
                                                      set! two_paired_list (
                                                        append two_paired_list (
                                                          _list (
                                                            _list b a
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                     (
                                      set! i (
                                        + i 2
                                      )
                                    )
                                     (
                                      loop12
                                    )
                                  )
                                   '(
                                    
                                  )
                                )
                              )
                            )
                          )
                           (
                            loop12
                          )
                        )
                         (
                          let (
                            (
                              sorted_list_2d (
                                sortlist_2d two_paired_list
                              )
                            )
                          )
                           (
                            begin (
                              let (
                                (
                                  result (
                                    _list
                                  )
                                )
                              )
                               (
                                begin (
                                  set! i 0
                                )
                                 (
                                  letrec (
                                    (
                                      loop13 (
                                        lambda (
                                          
                                        )
                                         (
                                          if (
                                            < i (
                                              _len sorted_list_2d
                                            )
                                          )
                                           (
                                            begin (
                                              set! result (
                                                append result (
                                                  _list (
                                                    cond (
                                                      (
                                                        string? (
                                                          cond (
                                                            (
                                                              string? sorted_list_2d
                                                            )
                                                             (
                                                              _substring sorted_list_2d i (
                                                                + i 1
                                                              )
                                                            )
                                                          )
                                                           (
                                                            (
                                                              hash-table? sorted_list_2d
                                                            )
                                                             (
                                                              hash-table-ref sorted_list_2d i
                                                            )
                                                          )
                                                           (
                                                            else (
                                                              list-ref-safe sorted_list_2d i
                                                            )
                                                          )
                                                        )
                                                      )
                                                       (
                                                        _substring (
                                                          cond (
                                                            (
                                                              string? sorted_list_2d
                                                            )
                                                             (
                                                              _substring sorted_list_2d i (
                                                                + i 1
                                                              )
                                                            )
                                                          )
                                                           (
                                                            (
                                                              hash-table? sorted_list_2d
                                                            )
                                                             (
                                                              hash-table-ref sorted_list_2d i
                                                            )
                                                          )
                                                           (
                                                            else (
                                                              list-ref-safe sorted_list_2d i
                                                            )
                                                          )
                                                        )
                                                         0 (
                                                          + 0 1
                                                        )
                                                      )
                                                    )
                                                     (
                                                      (
                                                        hash-table? (
                                                          cond (
                                                            (
                                                              string? sorted_list_2d
                                                            )
                                                             (
                                                              _substring sorted_list_2d i (
                                                                + i 1
                                                              )
                                                            )
                                                          )
                                                           (
                                                            (
                                                              hash-table? sorted_list_2d
                                                            )
                                                             (
                                                              hash-table-ref sorted_list_2d i
                                                            )
                                                          )
                                                           (
                                                            else (
                                                              list-ref-safe sorted_list_2d i
                                                            )
                                                          )
                                                        )
                                                      )
                                                       (
                                                        hash-table-ref (
                                                          cond (
                                                            (
                                                              string? sorted_list_2d
                                                            )
                                                             (
                                                              _substring sorted_list_2d i (
                                                                + i 1
                                                              )
                                                            )
                                                          )
                                                           (
                                                            (
                                                              hash-table? sorted_list_2d
                                                            )
                                                             (
                                                              hash-table-ref sorted_list_2d i
                                                            )
                                                          )
                                                           (
                                                            else (
                                                              list-ref-safe sorted_list_2d i
                                                            )
                                                          )
                                                        )
                                                         0
                                                      )
                                                    )
                                                     (
                                                      else (
                                                        list-ref-safe (
                                                          cond (
                                                            (
                                                              string? sorted_list_2d
                                                            )
                                                             (
                                                              _substring sorted_list_2d i (
                                                                + i 1
                                                              )
                                                            )
                                                          )
                                                           (
                                                            (
                                                              hash-table? sorted_list_2d
                                                            )
                                                             (
                                                              hash-table-ref sorted_list_2d i
                                                            )
                                                          )
                                                           (
                                                            else (
                                                              list-ref-safe sorted_list_2d i
                                                            )
                                                          )
                                                        )
                                                         0
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                             (
                                              set! i (
                                                + i 1
                                              )
                                            )
                                             (
                                              loop13
                                            )
                                          )
                                           '(
                                            
                                          )
                                        )
                                      )
                                    )
                                  )
                                   (
                                    loop13
                                  )
                                )
                                 (
                                  set! result (
                                    append result (
                                      _list (
                                        cond (
                                          (
                                            string? (
                                              cond (
                                                (
                                                  string? sorted_list_2d
                                                )
                                                 (
                                                  _substring sorted_list_2d (
                                                    - (
                                                      _len sorted_list_2d
                                                    )
                                                     1
                                                  )
                                                   (
                                                    + (
                                                      - (
                                                        _len sorted_list_2d
                                                      )
                                                       1
                                                    )
                                                     1
                                                  )
                                                )
                                              )
                                               (
                                                (
                                                  hash-table? sorted_list_2d
                                                )
                                                 (
                                                  hash-table-ref sorted_list_2d (
                                                    - (
                                                      _len sorted_list_2d
                                                    )
                                                     1
                                                  )
                                                )
                                              )
                                               (
                                                else (
                                                  list-ref-safe sorted_list_2d (
                                                    - (
                                                      _len sorted_list_2d
                                                    )
                                                     1
                                                  )
                                                )
                                              )
                                            )
                                          )
                                           (
                                            _substring (
                                              cond (
                                                (
                                                  string? sorted_list_2d
                                                )
                                                 (
                                                  _substring sorted_list_2d (
                                                    - (
                                                      _len sorted_list_2d
                                                    )
                                                     1
                                                  )
                                                   (
                                                    + (
                                                      - (
                                                        _len sorted_list_2d
                                                      )
                                                       1
                                                    )
                                                     1
                                                  )
                                                )
                                              )
                                               (
                                                (
                                                  hash-table? sorted_list_2d
                                                )
                                                 (
                                                  hash-table-ref sorted_list_2d (
                                                    - (
                                                      _len sorted_list_2d
                                                    )
                                                     1
                                                  )
                                                )
                                              )
                                               (
                                                else (
                                                  list-ref-safe sorted_list_2d (
                                                    - (
                                                      _len sorted_list_2d
                                                    )
                                                     1
                                                  )
                                                )
                                              )
                                            )
                                             1 (
                                              + 1 1
                                            )
                                          )
                                        )
                                         (
                                          (
                                            hash-table? (
                                              cond (
                                                (
                                                  string? sorted_list_2d
                                                )
                                                 (
                                                  _substring sorted_list_2d (
                                                    - (
                                                      _len sorted_list_2d
                                                    )
                                                     1
                                                  )
                                                   (
                                                    + (
                                                      - (
                                                        _len sorted_list_2d
                                                      )
                                                       1
                                                    )
                                                     1
                                                  )
                                                )
                                              )
                                               (
                                                (
                                                  hash-table? sorted_list_2d
                                                )
                                                 (
                                                  hash-table-ref sorted_list_2d (
                                                    - (
                                                      _len sorted_list_2d
                                                    )
                                                     1
                                                  )
                                                )
                                              )
                                               (
                                                else (
                                                  list-ref-safe sorted_list_2d (
                                                    - (
                                                      _len sorted_list_2d
                                                    )
                                                     1
                                                  )
                                                )
                                              )
                                            )
                                          )
                                           (
                                            hash-table-ref (
                                              cond (
                                                (
                                                  string? sorted_list_2d
                                                )
                                                 (
                                                  _substring sorted_list_2d (
                                                    - (
                                                      _len sorted_list_2d
                                                    )
                                                     1
                                                  )
                                                   (
                                                    + (
                                                      - (
                                                        _len sorted_list_2d
                                                      )
                                                       1
                                                    )
                                                     1
                                                  )
                                                )
                                              )
                                               (
                                                (
                                                  hash-table? sorted_list_2d
                                                )
                                                 (
                                                  hash-table-ref sorted_list_2d (
                                                    - (
                                                      _len sorted_list_2d
                                                    )
                                                     1
                                                  )
                                                )
                                              )
                                               (
                                                else (
                                                  list-ref-safe sorted_list_2d (
                                                    - (
                                                      _len sorted_list_2d
                                                    )
                                                     1
                                                  )
                                                )
                                              )
                                            )
                                             1
                                          )
                                        )
                                         (
                                          else (
                                            list-ref-safe (
                                              cond (
                                                (
                                                  string? sorted_list_2d
                                                )
                                                 (
                                                  _substring sorted_list_2d (
                                                    - (
                                                      _len sorted_list_2d
                                                    )
                                                     1
                                                  )
                                                   (
                                                    + (
                                                      - (
                                                        _len sorted_list_2d
                                                      )
                                                       1
                                                    )
                                                     1
                                                  )
                                                )
                                              )
                                               (
                                                (
                                                  hash-table? sorted_list_2d
                                                )
                                                 (
                                                  hash-table-ref sorted_list_2d (
                                                    - (
                                                      _len sorted_list_2d
                                                    )
                                                     1
                                                  )
                                                )
                                              )
                                               (
                                                else (
                                                  list-ref-safe sorted_list_2d (
                                                    - (
                                                      _len sorted_list_2d
                                                    )
                                                     1
                                                  )
                                                )
                                              )
                                            )
                                             1
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                                 (
                                  if has_last_odd_item (
                                    begin (
                                      set! result (
                                        binary_search_insertion result (
                                          list-ref-safe collection (
                                            - (
                                              _len collection
                                            )
                                             1
                                          )
                                        )
                                      )
                                    )
                                  )
                                   '(
                                    
                                  )
                                )
                                 (
                                  let (
                                    (
                                      inserted_before #f
                                    )
                                  )
                                   (
                                    begin (
                                      let (
                                        (
                                          idx 0
                                        )
                                      )
                                       (
                                        begin (
                                          letrec (
                                            (
                                              loop14 (
                                                lambda (
                                                  
                                                )
                                                 (
                                                  if (
                                                    < idx (
                                                      - (
                                                        _len sorted_list_2d
                                                      )
                                                       1
                                                    )
                                                  )
                                                   (
                                                    begin (
                                                      if (
                                                        and has_last_odd_item (
                                                          equal? (
                                                            list-ref-safe result idx
                                                          )
                                                           (
                                                            list-ref-safe collection (
                                                              - (
                                                                _len collection
                                                              )
                                                               1
                                                            )
                                                          )
                                                        )
                                                      )
                                                       (
                                                        begin (
                                                          set! inserted_before #t
                                                        )
                                                      )
                                                       '(
                                                        
                                                      )
                                                    )
                                                     (
                                                      let (
                                                        (
                                                          pivot (
                                                            cond (
                                                              (
                                                                string? (
                                                                  cond (
                                                                    (
                                                                      string? sorted_list_2d
                                                                    )
                                                                     (
                                                                      _substring sorted_list_2d idx (
                                                                        + idx 1
                                                                      )
                                                                    )
                                                                  )
                                                                   (
                                                                    (
                                                                      hash-table? sorted_list_2d
                                                                    )
                                                                     (
                                                                      hash-table-ref sorted_list_2d idx
                                                                    )
                                                                  )
                                                                   (
                                                                    else (
                                                                      list-ref-safe sorted_list_2d idx
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                               (
                                                                _substring (
                                                                  cond (
                                                                    (
                                                                      string? sorted_list_2d
                                                                    )
                                                                     (
                                                                      _substring sorted_list_2d idx (
                                                                        + idx 1
                                                                      )
                                                                    )
                                                                  )
                                                                   (
                                                                    (
                                                                      hash-table? sorted_list_2d
                                                                    )
                                                                     (
                                                                      hash-table-ref sorted_list_2d idx
                                                                    )
                                                                  )
                                                                   (
                                                                    else (
                                                                      list-ref-safe sorted_list_2d idx
                                                                    )
                                                                  )
                                                                )
                                                                 1 (
                                                                  + 1 1
                                                                )
                                                              )
                                                            )
                                                             (
                                                              (
                                                                hash-table? (
                                                                  cond (
                                                                    (
                                                                      string? sorted_list_2d
                                                                    )
                                                                     (
                                                                      _substring sorted_list_2d idx (
                                                                        + idx 1
                                                                      )
                                                                    )
                                                                  )
                                                                   (
                                                                    (
                                                                      hash-table? sorted_list_2d
                                                                    )
                                                                     (
                                                                      hash-table-ref sorted_list_2d idx
                                                                    )
                                                                  )
                                                                   (
                                                                    else (
                                                                      list-ref-safe sorted_list_2d idx
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                               (
                                                                hash-table-ref (
                                                                  cond (
                                                                    (
                                                                      string? sorted_list_2d
                                                                    )
                                                                     (
                                                                      _substring sorted_list_2d idx (
                                                                        + idx 1
                                                                      )
                                                                    )
                                                                  )
                                                                   (
                                                                    (
                                                                      hash-table? sorted_list_2d
                                                                    )
                                                                     (
                                                                      hash-table-ref sorted_list_2d idx
                                                                    )
                                                                  )
                                                                   (
                                                                    else (
                                                                      list-ref-safe sorted_list_2d idx
                                                                    )
                                                                  )
                                                                )
                                                                 1
                                                              )
                                                            )
                                                             (
                                                              else (
                                                                list-ref-safe (
                                                                  cond (
                                                                    (
                                                                      string? sorted_list_2d
                                                                    )
                                                                     (
                                                                      _substring sorted_list_2d idx (
                                                                        + idx 1
                                                                      )
                                                                    )
                                                                  )
                                                                   (
                                                                    (
                                                                      hash-table? sorted_list_2d
                                                                    )
                                                                     (
                                                                      hash-table-ref sorted_list_2d idx
                                                                    )
                                                                  )
                                                                   (
                                                                    else (
                                                                      list-ref-safe sorted_list_2d idx
                                                                    )
                                                                  )
                                                                )
                                                                 1
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                       (
                                                        begin (
                                                          if inserted_before (
                                                            begin (
                                                              set! result (
                                                                binary_search_insertion_from result pivot (
                                                                  + idx 2
                                                                )
                                                              )
                                                            )
                                                          )
                                                           (
                                                            begin (
                                                              set! result (
                                                                binary_search_insertion_from result pivot (
                                                                  + idx 1
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                         (
                                                          set! idx (
                                                            + idx 1
                                                          )
                                                        )
                                                      )
                                                    )
                                                     (
                                                      loop14
                                                    )
                                                  )
                                                   '(
                                                    
                                                  )
                                                )
                                              )
                                            )
                                          )
                                           (
                                            loop14
                                          )
                                        )
                                         (
                                          ret11 result
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
     (
      define (
        main
      )
       (
        let (
          (
            example1 (
              _list 0 5 3 2 2
            )
          )
        )
         (
          begin (
            let (
              (
                example2 (
                  _list 99
                )
              )
            )
             (
              begin (
                let (
                  (
                    example3 (
                      _list (
                        - 2
                      )
                       (
                        - 5
                      )
                       (
                        - 45
                      )
                    )
                  )
                )
                 (
                  begin (
                    _display (
                      if (
                        string? (
                          to-str-space (
                            merge_insertion_sort example1
                          )
                        )
                      )
                       (
                        to-str-space (
                          merge_insertion_sort example1
                        )
                      )
                       (
                        to-str (
                          to-str-space (
                            merge_insertion_sort example1
                          )
                        )
                      )
                    )
                  )
                   (
                    newline
                  )
                   (
                    _display (
                      if (
                        string? (
                          to-str-space (
                            merge_insertion_sort example2
                          )
                        )
                      )
                       (
                        to-str-space (
                          merge_insertion_sort example2
                        )
                      )
                       (
                        to-str (
                          to-str-space (
                            merge_insertion_sort example2
                          )
                        )
                      )
                    )
                  )
                   (
                    newline
                  )
                   (
                    _display (
                      if (
                        string? (
                          to-str-space (
                            merge_insertion_sort example3
                          )
                        )
                      )
                       (
                        to-str-space (
                          merge_insertion_sort example3
                        )
                      )
                       (
                        to-str (
                          to-str-space (
                            merge_insertion_sort example3
                          )
                        )
                      )
                    )
                  )
                   (
                    newline
                  )
                )
              )
            )
          )
        )
      )
    )
     (
      main
    )
     (
      let (
        (
          end16 (
            current-jiffy
          )
        )
      )
       (
        let (
          (
            dur17 (
              quotient (
                * (
                  - end16 start15
                )
                 1000000
              )
               jps18
            )
          )
        )
         (
          begin (
            _display (
              string-append "{\n  \"duration_us\": " (
                number->string dur17
              )
               ",\n  \"memory_bytes\": " (
                number->string (
                  _mem
                )
              )
               ",\n  \"name\": \"main\"\n}"
            )
          )
           (
            newline
          )
        )
      )
    )
  )
)
