#!/usr/bin/env escript
-module(main).
-compile([nowarn_shadow_vars, nowarn_unused_vars]).
-export([main/1, highest_set_bit_position/1]).

% Generated by Mochi transpiler v0.10.59 (f521f86a07) on 2025-08-06 21:30 +0700


mochi_now() ->
    case erlang:get(now_seed) of
        undefined ->
            case os:getenv("MOCHI_NOW_SEED") of
                false -> erlang:system_time(nanosecond);
                S ->
                    case catch list_to_integer(S) of
                        {'EXIT', _} -> erlang:system_time(nanosecond);
                        Seed ->
                            erlang:put(now_seed, Seed),
                            mochi_now()
                    end
            end;
        Seed ->
            Seed2 = (Seed * 1664525 + 1013904223) rem 2147483647,
            erlang:put(now_seed, Seed2),
            Seed2
    end.


-compile({nowarn_unused_function, mochi_str/1}).
mochi_str(V) ->
    S = lists:flatten(io_lib:format("~p", [V])),
    S1 = lists:flatten(string:replace(S, ",", " ", all)),
    lists:flatten(string:replace(S1, "\"", "", all)).


-compile({nowarn_unused_function, mochi_repr/1}).
mochi_repr(V) ->
    S = lists:flatten(io_lib:format("~p", [V])),
    lists:flatten(string:replace(S, ",", ", ", all)).

highest_set_bit_position(Number) ->
    try
        case (Number < 0) of
        true -> erlang:error("number must be non-negative");
        _ -> ok
    end,
        Position = 0,
        N = Number,
        Fun = fun Fun_loop(N, Number, Position) ->
    case (N > 0) of
        true ->
            Position_2 = (Position + 1),
            N_2 = (N div 2),
            Fun_loop(N_2, Number, Position_2);
        _ -> {N, Number, Position}
    end
end,
{N_2, Number, Position_2} = Fun(N, Number, Position),
        Position_2
    catch {return, Ret} -> Ret end.

main(_) ->
    __mochi_bench_start = mochi_now(),
    __mochi_bench_start_mem = erlang:memory(total),
    io:format("~ts~n", [mochi_str(highest_set_bit_position(25))]),
    io:format("~ts~n", [mochi_str(highest_set_bit_position(37))]),
    io:format("~ts~n", [mochi_str(highest_set_bit_position(1))]),
    io:format("~ts~n", [mochi_str(highest_set_bit_position(4))]),
    io:format("~ts~n", [mochi_str(highest_set_bit_position(0))]),
    __mochi_bench_end = mochi_now(),
    __mochi_bench_end_mem = erlang:memory(total),
    __mochi_bench_duration_us = (__mochi_bench_end - __mochi_bench_start) div 1000,
    __mochi_bench_mem_bytes = erlang:abs(__mochi_bench_end_mem - __mochi_bench_start_mem),
    io:format("{~n  \"duration_us\": ~p,~n  \"memory_bytes\": ~p,~n  \"name\": \"main\"~n}
", [__mochi_bench_duration_us, __mochi_bench_mem_bytes]).
