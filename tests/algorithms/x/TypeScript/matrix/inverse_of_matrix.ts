// Generated by Mochi v0.10.64 on 2025-08-12 14:00:28 GMT+7

function inverse_of_matrix(matrix: number[][]): number[][] {
  if ((((_len(matrix) === 2) && (_len(matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()]) === 2)) && (_len(matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()]) === 2))) {
    let det: number = ((matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] * matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]) - (matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] * matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]));
    if ((det === 0.0)) {
      console.log(_str("This matrix has no inverse."));
      return [];
    }
    return [[(matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] / det), (-matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] / det)], [(-matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] / det), (matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] / det)]];
  } else {
    if (((((_len(matrix) === 3) && (_len(matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()]) === 3)) && (_len(matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()]) === 3)) && (_len(matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()]) === 3))) {
      let det: number = (((((matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] * matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]) * matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]) + ((matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] * matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]) * matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()])) + ((matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] * matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]) * matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()])) - ((((matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] * matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]) * matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]) + ((matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] * matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]) * matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()])) + ((matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] * matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]) * matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()])));
      if ((det === 0.0)) {
        console.log(_str("This matrix has no inverse."));
        return [];
      }
      let cof: number[][] = [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]];
      cof[(()=>{const _mochi_idx = 0; return _mochi_idx < 0 ? cof.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = 0; return _mochi_idx < 0 ? cof[(()=>{const _mochi_idx = 0; return _mochi_idx < 0 ? cof.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] = ((matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] * matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]) - (matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] * matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]));
      cof[(()=>{const _mochi_idx = 0; return _mochi_idx < 0 ? cof.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = 1; return _mochi_idx < 0 ? cof[(()=>{const _mochi_idx = 0; return _mochi_idx < 0 ? cof.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] = -((matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] * matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]) - (matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] * matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]));
      cof[(()=>{const _mochi_idx = 0; return _mochi_idx < 0 ? cof.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = 2; return _mochi_idx < 0 ? cof[(()=>{const _mochi_idx = 0; return _mochi_idx < 0 ? cof.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] = ((matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] * matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]) - (matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] * matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]));
      cof[(()=>{const _mochi_idx = 1; return _mochi_idx < 0 ? cof.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = 0; return _mochi_idx < 0 ? cof[(()=>{const _mochi_idx = 1; return _mochi_idx < 0 ? cof.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] = -((matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] * matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]) - (matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] * matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]));
      cof[(()=>{const _mochi_idx = 1; return _mochi_idx < 0 ? cof.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = 1; return _mochi_idx < 0 ? cof[(()=>{const _mochi_idx = 1; return _mochi_idx < 0 ? cof.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] = ((matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] * matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]) - (matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] * matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]));
      cof[(()=>{const _mochi_idx = 1; return _mochi_idx < 0 ? cof.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = 2; return _mochi_idx < 0 ? cof[(()=>{const _mochi_idx = 1; return _mochi_idx < 0 ? cof.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] = -((matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] * matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]) - (matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] * matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]));
      cof[(()=>{const _mochi_idx = 2; return _mochi_idx < 0 ? cof.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = 0; return _mochi_idx < 0 ? cof[(()=>{const _mochi_idx = 2; return _mochi_idx < 0 ? cof.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] = ((matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] * matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]) - (matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] * matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]));
      cof[(()=>{const _mochi_idx = 2; return _mochi_idx < 0 ? cof.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = 1; return _mochi_idx < 0 ? cof[(()=>{const _mochi_idx = 2; return _mochi_idx < 0 ? cof.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] = -((matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] * matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]) - (matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(2); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] * matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]));
      cof[(()=>{const _mochi_idx = 2; return _mochi_idx < 0 ? cof.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = 2; return _mochi_idx < 0 ? cof[(()=>{const _mochi_idx = 2; return _mochi_idx < 0 ? cof.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] = ((matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] * matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]) - (matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] * matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = Math.trunc(0); return _mochi_idx < 0 ? matrix[(()=>{const _mochi_idx = Math.trunc(1); return _mochi_idx < 0 ? matrix.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()]));
      let inv: number[][] = [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]];
      let i: number = 0;
      while ((i < 3)) {
        let j: number = 0;
        while ((j < 3)) {
          inv[(()=>{const _mochi_idx = i; return _mochi_idx < 0 ? inv.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = j; return _mochi_idx < 0 ? inv[(()=>{const _mochi_idx = i; return _mochi_idx < 0 ? inv.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] = (cof[(()=>{const _mochi_idx = j; return _mochi_idx < 0 ? cof.length + _mochi_idx : _mochi_idx;})()][(()=>{const _mochi_idx = i; return _mochi_idx < 0 ? cof[(()=>{const _mochi_idx = j; return _mochi_idx < 0 ? cof.length + _mochi_idx : _mochi_idx;})()].length + _mochi_idx : _mochi_idx;})()] / det);
          j = (j + 1);
        }
        i = (i + 1);
      }
      return inv;
    }
  }
  console.log(_str("Please provide a matrix of size 2x2 or 3x3."));
  return [];
}
let m2: number[][] = [[2.0, 5.0], [2.0, 0.0]];
let m3: number[][] = [[2.0, 5.0, 7.0], [2.0, 0.0, 1.0], [1.0, 2.0, 3.0]];
var _nowSeed = 0;
var _nowSeeded = false;
{
  let s = "";
  if (typeof Deno !== "undefined") {
    try {
      s = Deno.env.get("MOCHI_NOW_SEED") ?? "";
    } catch (_e) {
      s = "";
    }
  } else if (typeof process !== "undefined") {
    s = process.env.MOCHI_NOW_SEED || "";
  }
  if (s) {
    const v = parseInt(s, 10);
    if (!isNaN(v)) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  } else {
    _nowSeed = 1;
    _nowSeeded = true;
  }
}
function _now(): number {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  if (typeof Deno !== 'undefined') {
    return Math.trunc(performance.now() * 1e6);
  }
  if (typeof performance !== 'undefined') {
    return Math.trunc(performance.now() * 1e6);
  }
  return Date.now() * 1000;
}
function _mem(): number {
  if (typeof Deno !== 'undefined') {
    return (Deno.memoryUsage?.().heapUsed ?? 0);
  }
  if (typeof process !== 'undefined') {
    return process.memoryUsage().heapUsed;
  }
  if (typeof performance !== 'undefined' && (performance as any).memory) {
    return (performance as any).memory.usedJSHeapSize;
  }
  return 0;
}
function _len(x: any): number { return Array.isArray(x) || typeof x === 'string' ? x.length : Object.keys(x ?? {}).length; }
function _str(x: any): string {
  if (typeof x === 'number') {
    if (Object.is(x, -0)) return '-0';
    if (x === Infinity) return '+Inf';
    if (x === -Infinity) return '-Inf';
    if (Number.isNaN(x)) return 'NaN';
  }
  return String(x);
}
(() => {
  globalThis.gc?.()
  const _startMem = _mem()
  const _start = _now()
  console.log(_str(((v)=>v==null?"nil":"[" + v.join(' ') + "]")(inverse_of_matrix(m2))));
  console.log(_str(((v)=>v==null?"nil":"[" + v.join(' ') + "]")(inverse_of_matrix(m3))));
  const _end = _now()
  const _duration = _end - _start
  const _duration_us = Math.trunc(_duration / 1000)
  globalThis.gc?.()
  const _endMem = _mem()
  const _memory_bytes = Math.max(0, _endMem - _startMem)
  console.log(JSON.stringify({
    "duration_us": _duration_us,
    "memory_bytes": _memory_bytes,
    "name": "main"
  }, null, "  "))
})();

