// Generated by Mochi v0.10.59 on 2025-08-07 08:18:29 GMT+7

let UNIVERSAL_GAS_CONSTANT: number = 8.3144598;
function sqrt(x: number): number {
  if ((x <= 0.0)) {
    return 0.0;
  }
  let guess: number = x;
  let i: number = 0;
  while ((i < 10)) {
    guess = ((guess + (x / guess)) / 2.0);
    i = (i + 1);
  }
  return guess;
}
function rms_speed_of_molecule(temperature: number, molar_mass: number): number {
  if ((temperature < 0.0)) {
    _panic("Temperature cannot be less than 0 K");
  }
  if ((molar_mass <= 0.0)) {
    _panic("Molar mass cannot be less than or equal to 0 kg/mol");
  }
  let num = ((3.0 * UNIVERSAL_GAS_CONSTANT) * temperature);
  let val: number = (num / molar_mass);
  let result: number = sqrt(val);
  return result;
}
var _nowSeed = 0;
var _nowSeeded = false;
{
  let s = "";
  if (typeof Deno !== "undefined") {
    try {
      s = Deno.env.get("MOCHI_NOW_SEED") ?? "";
    } catch (_e) {
      s = "";
    }
  } else if (typeof process !== "undefined") {
    s = process.env.MOCHI_NOW_SEED || "";
  }
  if (s) {
    const v = parseInt(s, 10);
    if (!isNaN(v)) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
function _now(): number {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  if (typeof Deno !== 'undefined') {
    return Math.trunc(performance.now() * 1e6);
  }
  if (typeof performance !== 'undefined') {
    return Math.trunc(performance.now() * 1e6);
  }
  return Date.now() * 1000;
}
function _mem(): number {
  if (typeof Deno !== 'undefined') {
    return (Deno.memoryUsage?.().heapUsed ?? 0);
  }
  if (typeof process !== 'undefined') {
    return process.memoryUsage().heapUsed;
  }
  return 0;
}
function _str(x: any): string {
  if (typeof x === 'number') {
    if (Object.is(x, -0)) return '-0';
    if (x === Infinity) return '+Inf';
    if (x === -Infinity) return '-Inf';
    if (Number.isNaN(x)) return 'NaN';
  }
  return String(x);
}
function _panic(msg: any): never { throw new Error(String(msg)); }
let vrms: number
(() => {
  globalThis.gc?.()
  const _startMem = _mem()
  const _start = _now()
  console.log(_str(("rms_speed_of_molecule(100, 2) = " + _str(rms_speed_of_molecule(100.0, 2.0)))));
  console.log(_str(("rms_speed_of_molecule(273, 12) = " + _str(rms_speed_of_molecule(273.0, 12.0)))));
vrms = rms_speed_of_molecule(300.0, 28.0)
  console.log(_str((("Vrms of Nitrogen gas at 300 K is " + _str(vrms)) + " m/s")));
  const _end = _now()
  const _duration = _end - _start
  const _duration_us = Math.trunc(_duration / 1000)
  globalThis.gc?.()
  const _endMem = _mem()
  const _memory_bytes = Math.max(0, _endMem - _startMem)
  console.log(JSON.stringify({
    "duration_us": _duration_us,
    "memory_bytes": _memory_bytes,
    "name": "main"
  }, null, "  "))
})();

