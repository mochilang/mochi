# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 22:12 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

def indexOf(s, ch):
    i = 0
    while i < len(s):
        if s[i:i + 1] == ch:
            return i
        i = i + 1
    return -1
def ord(ch):
    upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    idx = upper.find(ch)
    if idx >= 0:
        return 65 + idx
    return 0
def chr(n):
    upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    if n >= 65 and n < 91:
        return upper[n - 65:n - 64]
    return "?"
def vernam_encrypt(plaintext, key):
    ciphertext = ""
    i = 0
    while i < len(plaintext):
        p = ord(plaintext[i:i + 1]) - 65
        k = ord(key[i % len(key):i % len(key) + 1]) - 65
        ct = p + k
        while ct > 25:
            ct = ct - 26
        ciphertext = ciphertext + chr(ct + 65)
        i = i + 1
    return ciphertext
def vernam_decrypt(ciphertext, key):
    decrypted = ""
    i = 0
    while i < len(ciphertext):
        c = ord(ciphertext[i:i + 1])
        k = ord(key[i % len(key):i % len(key) + 1])
        val = c - k
        while val < 0:
            val = val + 26
        decrypted = decrypted + chr(val + 65)
        i = i + 1
    return decrypted
plaintext = "HELLO"
key = "KEY"
encrypted = vernam_encrypt(plaintext, key)
decrypted = vernam_decrypt(encrypted, key)
print("Plaintext: " + plaintext)
print("Encrypted: " + encrypted)
print("Decrypted: " + decrypted)
