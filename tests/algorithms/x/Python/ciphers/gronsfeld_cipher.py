# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 22:12 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

ASCII_UPPERCASE = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
ASCII_LOWERCASE = "abcdefghijklmnopqrstuvwxyz"
NEG_ONE = 0 - 1
def index_of(s, ch):
    i = 0
    while i < len(s):
        if s[i:i + 1] == ch:
            return i
        i = i + 1
    return NEG_ONE
def to_uppercase(s):
    result = ""
    i = 0
    while i < len(s):
        ch = s[i:i + 1]
        idx = index_of(ASCII_LOWERCASE, ch)
        if idx == NEG_ONE:
            result = result + ch
        else:
            result = result + ASCII_UPPERCASE[idx:idx + 1]
        i = i + 1
    return result
def gronsfeld(text, key):
    ascii_len = len(ASCII_UPPERCASE)
    key_len = len(key)
    if key_len == 0:
        panic("integer modulo by zero")
    upper_text = to_uppercase(text)
    encrypted = ""
    i = 0
    while i < len(upper_text):
        ch = upper_text[i:i + 1]
        idx = index_of(ASCII_UPPERCASE, ch)
        if idx == NEG_ONE:
            encrypted = encrypted + ch
        else:
            key_idx = i % key_len
            shift = int(key[key_idx:key_idx + 1])
            new_position = (idx + shift) % ascii_len
            encrypted = encrypted + ASCII_UPPERCASE[new_position:new_position + 1]
        i = i + 1
    return encrypted
print(gronsfeld("hello", "412"))
print(gronsfeld("hello", "123"))
print(gronsfeld("", "123"))
print(gronsfeld("yes, ¥€$ - _!@#%?", "0"))
print(gronsfeld("yes, ¥€$ - _!@#%?", "01"))
print(gronsfeld("yes, ¥€$ - _!@#%?", "012"))
