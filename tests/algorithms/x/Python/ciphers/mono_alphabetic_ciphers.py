# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 22:12 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

LETTERS = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
def find_char(s, ch):
    i = 0
    while i < len(s):
        if s[i] == ch:
            return i
        i = i + 1
    return -1
def encrypt_message(key, message):
    chars_a = key
    chars_b = LETTERS
    translated = ""
    i = 0
    while i < len(message):
        symbol = message[i]
        upper_sym = symbol.upper()
        sym_index = find_char(chars_a, upper_sym)
        if sym_index >= 0:
            sub_char = chars_b[sym_index]
            if symbol == upper_sym:
                translated = translated + sub_char.upper()
            else:
                translated = translated + sub_char.lower()
        else:
            translated = translated + symbol
        i = i + 1
    return translated
def decrypt_message(key, message):
    chars_a = LETTERS
    chars_b = key
    translated = ""
    i = 0
    while i < len(message):
        symbol = message[i]
        upper_sym = symbol.upper()
        sym_index = find_char(chars_a, upper_sym)
        if sym_index >= 0:
            sub_char = chars_b[sym_index]
            if symbol == upper_sym:
                translated = translated + sub_char.upper()
            else:
                translated = translated + sub_char.lower()
        else:
            translated = translated + symbol
        i = i + 1
    return translated
def main():
    message = "Hello World"
    key = "QWERTYUIOPASDFGHJKLZXCVBNM"
    mode = "decrypt"
    translated = ""
    if mode == "encrypt":
        translated = encrypt_message(key, message)
    else:
        if mode == "decrypt":
            translated = decrypt_message(key, message)
    print("Using the key " + key + ", the " + mode + "ed message is: " + translated)
main()
