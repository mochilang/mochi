# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 20:44 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
try:
    def index_of(s, c):
        i = 0
        while i < len(s):
            if s[i] == c:
                return i
            i = i + 1
        return (-1)
    def atbash(sequence):
        lower = "abcdefghijklmnopqrstuvwxyz"
        upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
        lower_rev = "zyxwvutsrqponmlkjihgfedcba"
        upper_rev = "ZYXWVUTSRQPONMLKJIHGFEDCBA"
        result = ""
        i = 0
        while i < len(sequence):
            ch = sequence[i]
            idx = index_of(lower, ch)
            if idx != (-1):
                result = result + lower_rev[idx]
            else:
                idx2 = index_of(upper, ch)
                if idx2 != (-1):
                    result = result + upper_rev[idx2]
                else:
                    result = result + ch
            i = i + 1
        return result
    print(atbash("ABCDEFGH"))
    print(atbash("123GGjj"))
    print(atbash("testStringtest"))
    print(atbash("with space"))
finally:
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
