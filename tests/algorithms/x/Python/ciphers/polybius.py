# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 22:12 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

square = [["a", "b", "c", "d", "e"], ["f", "g", "h", "i", "k"], ["l", "m", "n", "o", "p"], ["q", "r", "s", "t", "u"], ["v", "w", "x", "y", "z"]]
def letter_to_numbers(letter):
    i = 0
    while i < len(square):
        j = 0
        while j < len(square[i]):
            if square[i][j] == letter:
                return [i + 1, j + 1]
            j = j + 1
        i = i + 1
    return [0, 0]
def numbers_to_letter(index1, index2):
    return square[index1 - 1][index2 - 1]
def char_to_int(ch):
    if ch == "1":
        return 1
    if ch == "2":
        return 2
    if ch == "3":
        return 3
    if ch == "4":
        return 4
    if ch == "5":
        return 5
    return 0
def encode(message):
    message = message.lower()
    encoded = ""
    i = 0
    while i < len(message):
        ch = message[i]
        if ch == "j":
            ch = "i"
        if ch != " ":
            nums = letter_to_numbers(ch)
            encoded = encoded + str(nums[0]) + str(nums[1])
        else:
            encoded = encoded + " "
        i = i + 1
    return encoded
def decode(message):
    decoded = ""
    i = 0
    while i < len(message):
        if message[i] == " ":
            decoded = decoded + " "
            i = i + 1
        else:
            index1 = char_to_int(message[i])
            index2 = char_to_int(message[i + 1])
            letter = numbers_to_letter(index1, index2)
            decoded = decoded + letter
            i = i + 2
    return decoded
print(encode("test message"))
print(encode("Test Message"))
print(decode("44154344 32154343112215"))
print(decode("4415434432154343112215"))
