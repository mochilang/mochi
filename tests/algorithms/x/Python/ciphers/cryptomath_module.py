# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 22:12 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

def gcd(a, b):
    x = (-a if a < 0 else a)
    y = (-b if b < 0 else b)
    while y != 0:
        t = x % y
        x = y
        y = t
    return x
def find_mod_inverse(a, m):
    if gcd(a, m) != 1:
        error("mod inverse of " + str(a) + " and " + str(m) + " does not exist")
    u1 = 1
    u2 = 0
    u3 = a
    v1 = 0
    v2 = 1
    v3 = m
    while v3 != 0:
        q = u3 // v3
        t1 = u1 - q * v1
        t2 = u2 - q * v2
        t3 = u3 - q * v3
        u1 = v1
        u2 = v2
        u3 = v3
        v1 = t1
        v2 = t2
        v3 = t3
    res = u1 % m
    if res < 0:
        res = res + m
    return res
print(str(find_mod_inverse(3, 11)))
print(str(find_mod_inverse(7, 26)))
print(str(find_mod_inverse(11, 26)))
print(str(find_mod_inverse(17, 43)))
