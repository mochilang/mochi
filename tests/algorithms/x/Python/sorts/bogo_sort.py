# Code generated by Mochi transpiler.
# Version 0.10.63, generated on 2025-08-11 16:20 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


def _str(v):
    if isinstance(v, float):
        if v.is_integer():
            return str(int(v))
        return format(v, ".15g")
    return str(v)


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

seed = 1
def rand():
    global seed
    seed = (seed * 1103515245 + 12345) % 2147483648
    return seed
def rand_range(max):
    return rand() % max
def shuffle(list_int):
    i = len(list_int) - 1
    while i > 0:
        j = rand_range(i + 1)
        tmp = list_int[i]
        list_int[i] = list_int[j]
        list_int[j] = tmp
        i = i - 1
    return list_int
def is_sorted(list_int):
    i = 0
    while i < len(list_int) - 1:
        if list_int[i] > list_int[i + 1]:
            return False
        i = i + 1
    return True
def bogo_sort(list_int):
    res = list_int
    while not is_sorted(res):
        res = shuffle(res)
    return res
data = [3, 2, 1]
print(_str(bogo_sort(data)))

