# Code generated by Mochi transpiler.
# Version 0.10.63, generated on 2025-08-11 16:20 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


def _str(v):
    if isinstance(v, float):
        if v.is_integer():
            return str(int(v))
        return format(v, ".15g")
    return str(v)


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def bead_sort(sequence):
    n = len(sequence)
    i = 0
    while i < n:
        if sequence[i] < 0:
            panic("Sequence must be list of non-negative integers")
        i = i + 1
    pass_ = 0
    while pass_ < n:
        j = 0
        while j < n - 1:
            upper = sequence[j]
            lower = sequence[j + 1]
            if upper > lower:
                diff = upper - lower
                sequence[j] = upper - diff
                sequence[j + 1] = lower + diff
            j = j + 1
        pass_ = pass_ + 1
    return sequence
print(_str(bead_sort([6, 11, 12, 4, 1, 5])))
print(_str(bead_sort([9, 8, 7, 6, 5, 4, 3, 2, 1])))
print(_str(bead_sort([5, 0, 4, 3])))
print(_str(bead_sort([8, 2, 1])))

