# Code generated by Mochi transpiler.
# Version 0.10.63, generated on 2025-08-11 16:20 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


def _str(v):
    if isinstance(v, float):
        if v.is_integer():
            return str(int(v))
        return format(v, ".15g")
    return str(v)


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def circle_sort_util(collection, low, high):
    swapped = False
    if low == high:
        return swapped
    left = low
    right = high
    while left < right:
        if collection[left] > collection[right]:
            tmp = collection[left]
            collection[left] = collection[right]
            collection[right] = tmp
            swapped = True
        left = left + 1
        right = right - 1
    if left == right and collection[left] > collection[right + 1]:
        tmp2 = collection[left]
        collection[left] = collection[right + 1]
        collection[right + 1] = tmp2
        swapped = True
    mid = low + ((high - low) // 2)
    left_swap = circle_sort_util(collection, low, mid)
    right_swap = circle_sort_util(collection, mid + 1, high)
    if swapped or left_swap or right_swap:
        return True
    else:
        return False
def circle_sort(collection):
    if len(collection) < 2:
        return collection
    is_not_sorted = True
    while is_not_sorted:
        is_not_sorted = circle_sort_util(collection, 0, len(collection) - 1)
    return collection
print(_str(circle_sort([0, 5, 3, 2, 2])))
print(_str(circle_sort([])))
print(_str(circle_sort([-2, 5, 0, -45])))

