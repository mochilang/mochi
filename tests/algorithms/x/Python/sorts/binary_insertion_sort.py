# Code generated by Mochi transpiler.
# Version 0.10.63, generated on 2025-08-11 16:20 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


def _str(v):
    if isinstance(v, float):
        if v.is_integer():
            return str(int(v))
        return format(v, ".15g")
    return str(v)


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def binary_insertion_sort(arr):
    i = 1
    while i < len(arr):
        value = arr[i]
        low = 0
        high = i - 1
        while low <= high:
            mid = (low + high) // 2
            if value < arr[mid]:
                high = mid - 1
            else:
                low = mid + 1
        j = i
        while j > low:
            arr[j] = arr[j - 1]
            j = j - 1
        arr[low] = value
        i = i + 1
    return arr
def main():
    example1 = [5, 2, 4, 6, 1, 3]
    print(_str(binary_insertion_sort(example1)))
    example2 = []
    print(_str(binary_insertion_sort(example2)))
    example3 = [4, 2, 4, 1, 3]
    print(_str(binary_insertion_sort(example3)))
main()

