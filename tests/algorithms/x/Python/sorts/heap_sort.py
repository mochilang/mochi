# Code generated by Mochi transpiler.
# Version 0.10.63, generated on 2025-08-11 16:20 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


def _str(v):
    if isinstance(v, float):
        if v.is_integer():
            return str(int(v))
        return format(v, ".15g")
    return str(v)


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def heapify(arr, index, heap_size):
    largest = index
    left_index = 2 * index + 1
    right_index = 2 * index + 2
    if left_index < heap_size and arr[left_index] > arr[largest]:
        largest = left_index
    if right_index < heap_size and arr[right_index] > arr[largest]:
        largest = right_index
    if largest != index:
        temp = arr[largest]
        arr[largest] = arr[index]
        arr[index] = temp
        heapify(arr, largest, heap_size)
def heap_sort(arr):
    n = len(arr)
    i = (n // 2) - 1
    while i >= 0:
        heapify(arr, i, n)
        i = i - 1
    i = n - 1
    while i > 0:
        temp = arr[0]
        arr[0] = arr[i]
        arr[i] = temp
        heapify(arr, 0, i)
        i = i - 1
    return arr
data = [3, 7, 9, 28, 123, -5, 8, -30, -200, 0, 4]
result = heap_sort(data)
print(result)
if _str(result) != _str([-200, -30, -5, 0, 3, 4, 7, 8, 9, 28, 123]):
    panic("Assertion error")

