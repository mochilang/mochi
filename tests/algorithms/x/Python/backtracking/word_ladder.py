# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 18:11 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _append(lst, v):
    if lst is None:
        return [v]
    return lst + [v]

alphabet = "abcdefghijklmnopqrstuvwxyz"
def contains(xs, x):
    i = 0
    while i < len(xs):
        if xs[i] == x:
            return True
        i = i + 1
    return False
def remove_item(xs, x):
    res = []
    removed = False
    i = 0
    while i < len(xs):
        if not removed and xs[i] == x:
            removed = True
        else:
            res = _append(res, xs[i])
        i = i + 1
    return res
def word_ladder(current, path, target, words):
    if current == target:
        return path
    i = 0
    while i < len(current):
        j = 0
        while j < len(alphabet):
            c = alphabet[j:j + 1]
            transformed = current[0:i] + c + current[i + 1:len(current)]
            if transformed in words:
                new_words = remove_item(words, transformed)
                new_path = _append(path, transformed)
                result = word_ladder(transformed, new_path, target, new_words)
                if len(result) > 0:
                    return result
            j = j + 1
        i = i + 1
    return []
def main():
    w1 = ["hot", "dot", "dog", "lot", "log", "cog"]
    print(str(word_ladder("hit", ["hit"], "cog", w1)))
    w2 = ["hot", "dot", "dog", "lot", "log"]
    print(str(word_ladder("hit", ["hit"], "cog", w2)))
    w3 = ["load", "goad", "gold", "lead", "lord"]
    print(str(word_ladder("lead", ["lead"], "gold", w3)))
    w4 = ["came", "cage", "code", "cade", "gave"]
    print(str(word_ladder("game", ["game"], "code", w4)))
main()
