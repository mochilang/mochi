# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 20:35 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

def minimax(depth, node_index, is_max, scores, height):
    if depth < 0:
        panic("Depth cannot be less than 0")
    if len(scores) == 0:
        panic("Scores cannot be empty")
    if depth == height:
        return scores[node_index]
    if is_max:
        left = minimax(depth + 1, node_index * 2, False, scores, height)
        right = minimax(depth + 1, node_index * 2 + 1, False, scores, height)
        if left > right:
            return left
        else:
            return right
    left = minimax(depth + 1, node_index * 2, True, scores, height)
    right = minimax(depth + 1, node_index * 2 + 1, True, scores, height)
    if left < right:
        return left
    else:
        return right
def tree_height(n):
    h = 0
    v = n
    while v > 1:
        v = v // 2
        h = h + 1
    return h
def main():
    scores = [90, 23, 6, 33, 21, 65, 123, 34423]
    height = tree_height(len(scores))
    print("Optimal value : " + str(minimax(0, 0, True, scores, height)))
main()
