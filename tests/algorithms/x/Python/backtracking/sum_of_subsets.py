# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 16:35 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())


def _append(lst, v):
    if lst is None:
        return [v]
    return lst + [v]

def sum_list(nums):
    s = 0
    for n in nums:
        s = s + n
    return s
def create_state_space_tree(nums, max_sum, num_index, path, curr_sum, remaining_sum):
    result = []
    if curr_sum > max_sum or curr_sum + remaining_sum < max_sum:
        return result
    if curr_sum == max_sum:
        result = _append(result, path)
        return result
    index = num_index
    while index < len(nums):
        value = nums[index]
        subres = create_state_space_tree(nums, max_sum, index + 1, _append(path, value), curr_sum + value, remaining_sum - value)
        j = 0
        while j < len(subres):
            result = _append(result, subres[j])
            j = j + 1
        index = index + 1
    return result
def generate_sum_of_subsets_solutions(nums, max_sum):
    total = sum_list(nums)
    return create_state_space_tree(nums, max_sum, 0, [], 0, total)
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    try:
        print(json.dumps(generate_sum_of_subsets_solutions([3, 34, 4, 12, 5, 2], 9), indent=2))
    finally:
        _bench_end = _now()
        _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
        print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
