# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 17:33 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
try:
    def int_pow(base, exp):
        result = 1
        i = 0
        while i < exp:
            result = result * base
            i = i + 1
        return result
    def backtrack(target, exp, current, current_sum):
        if current_sum == target:
            return 1
        p = int_pow(current, exp)
        count = 0
        if current_sum + p <= target:
            count = count + backtrack(target, exp, current + 1, current_sum + p)
        if p < target:
            count = count + backtrack(target, exp, current + 1, current_sum)
        return count
    def solve(target, exp):
        if not (1 <= target and target <= 1000 and 2 <= exp and exp <= 10):
            print("Invalid input")
            return 0
        return backtrack(target, exp, 1, 0)
    print(solve(13, 2))
    print(solve(10, 2))
    print(solve(10, 3))
finally:
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
