# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 16:35 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
try:
    def contains(words, target):
        for w in words:
            if w == target:
                return True
        return False
    def backtrack(s, word_dict, start):
        if start == len(s):
            return True
        end = start + 1
        while end <= len(s):
            substr = s[start:end]
            if substr in word_dict and backtrack(s, word_dict, end):
                return True
            end = end + 1
        return False
    def word_break(s, word_dict):
        return backtrack(s, word_dict, 0)
    print(str(word_break("leetcode", ["leet", "code"])))
    print(str(word_break("applepenapple", ["apple", "pen"])))
    print(str(word_break("catsandog", ["cats", "dog", "sand", "and", "cat"])))
finally:
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
