# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 08:18 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())


def _append(lst, v):
    return (lst or []) + [v]

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
try:
    def calculation_span(price):
        n = len(price)
        st = []
        span = []
        st = _append(st, 0)
        span = _append(span, 1)
        for i in range(1, n):
            while len(st) > 0 and price[st[len(st) - 1]] <= price[i]:
                st = st[0:len(st) - 1]
            s = (i + 1 if len(st) <= 0 else i - st[len(st) - 1])
            span = _append(span, s)
            st = _append(st, i)
        return span
    def print_array(arr):
        for i in range(0, len(arr)):
            print(arr[i])
    price = [10, 4, 5, 90, 120, 80]
    spans = calculation_span(price)
    print_array(spans)
finally:
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
