# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 22:12 +0700
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict
import dataclasses

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

@dataclass
class Node:
    value: int
    left: int
    right: int

def node_sum(tree, index):
    if index == (-1):
        return 0
    node = tree[index]
    return node.value + node_sum(tree, node.left) + node_sum(tree, node.right)
example = [Node(value=10, left=1, right=2), Node(value=5, left=3, right=-1), Node(value=-3, left=4, right=5), Node(value=12, left=-1, right=-1), Node(value=8, left=-1, right=-1), Node(value=0, left=-1, right=-1)]
print(node_sum(example, 0))
