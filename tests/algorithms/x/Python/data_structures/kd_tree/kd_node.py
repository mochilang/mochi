# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 08:18 +0700
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict
import dataclasses
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())


def _append(lst, v):
    return (lst or []) + [v]

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
try:
    @dataclass
    class KDNode:
        point: [float]
        left: int
        right: int
    def make_kd_node(point, left, right):
        return KDNode(point=point, left=left, right=right)
    nodes = []
    nodes = _append(nodes, make_kd_node([2.0, 3.0], 1, 2))
    nodes = _append(nodes, make_kd_node([1.0, 5.0], -1, -1))
    nodes = _append(nodes, make_kd_node([4.0, 2.0], -1, -1))
    root = nodes[0]
    left_child = nodes[1]
    right_child = nodes[2]
    print(str(root.point))
    print(str(root.left))
    print(str(root.right))
    print(str(left_child.point))
    print(str(right_child.point))
finally:
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
