# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 22:12 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def partition(arr, low, high):
    pivot = arr[high]
    i = low - 1
    j = low
    while j < high:
        if arr[j] >= pivot:
            i = i + 1
            tmp = arr[i]
            arr[i] = arr[j]
            arr[j] = tmp
        j = j + 1
    k = i + 1
    tmp = arr[k]
    arr[k] = arr[high]
    arr[high] = tmp
    return k
def kth_largest_element(arr, position):
    if len(arr) == 0:
        return -1
    if position < 1 or position > len(arr):
        return -1
    low = 0
    high = len(arr) - 1
    while low <= high:
        if low > len(arr) - 1 or high < 0:
            return -1
        pivot_index = partition(arr, low, high)
        if pivot_index == position - 1:
            return arr[pivot_index]
        else:
            if pivot_index > position - 1:
                high = pivot_index - 1
            else:
                low = pivot_index + 1
    return -1
arr1 = [3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]
print(kth_largest_element(arr1, 3))
print("\n")
arr2 = [2, 5, 6, 1, 9, 3, 8, 4, 7, 3, 5]
print(kth_largest_element(arr2, 1))
