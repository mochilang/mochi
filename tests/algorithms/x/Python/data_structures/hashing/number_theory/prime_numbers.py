# Code generated by Mochi transpiler.
# Version 0.10.72, generated on 2025-08-24 16:59 +0700
import json
import time

try:
    import resource
except Exception:
    resource = None
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
if hasattr(sys, "setrecursionlimit"):
    sys.setrecursionlimit(1000000)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

if resource:
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
else:
    _bench_mem_start = 0
_bench_start = _now()
try:
    def isPrime(number):
        if number < 2:
            return False
        if number < 4:
            return True
        if number % 2 == 0:
            return False
        i = 3
        while i * i <= number:
            if number % i == 0:
                return False
            i = i + 2
        return True
    def nextPrime(value, factor, desc):
        v = value * factor
        firstValue = v
        while not isPrime(v):
            if desc:
                v = v - 1
            else:
                v = v + 1
        if v == firstValue:
            if desc:
                return nextPrime(v - 1, 1, desc)
            else:
                return nextPrime(v + 1, 1, desc)
        return v
    print(("True" if isPrime(0) else "False"))
    print(("True" if isPrime(1) else "False"))
    print(("True" if isPrime(2) else "False"))
    print(("True" if isPrime(3) else "False"))
    print(("True" if isPrime(27) else "False"))
    print(("True" if isPrime(87) else "False"))
    print(("True" if isPrime(563) else "False"))
    print(("True" if isPrime(2999) else "False"))
    print(("True" if isPrime(67483) else "False"))
    print(nextPrime(14, 1, False))
    print(nextPrime(14, 1, True))
finally:
    _bench_end = _now()
    if resource:
        _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    else:
        _bench_mem_end = 0
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": (_bench_mem_end - _bench_mem_start)*1024, "name": "main"}, indent=2))

