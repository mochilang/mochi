# Code generated by Mochi transpiler.
# Version 0.10.63, generated on 2025-08-11 16:20 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


def _append(lst, v):
    return (lst or []) + [v]


def _str(v):
    if isinstance(v, float):
        if v.is_integer():
            return str(int(v))
        return format(v, ".15g")
    return str(v)

def indexOf(s, sub):
    n = len(s)
    m = len(sub)
    i = 0
    while i <= n - m:
        if s[i:i + m] == sub:
            return i
        i = i + 1
    return -1
def contains(s, sub):
    return s.find(sub) >= 0
def validate(files):
    upper = []
    space = []
    hyphen = []
    nodir = []
    for f in files:
        if f != f.lower():
            upper = _append(upper, f)
        if contains(f, " "):
            space = _append(space, f)
        if contains(f, "-") and contains(f, "/site-packages/") == False:
            hyphen = _append(hyphen, f)
        if not contains(f, "/"):
            nodir = _append(nodir, f)
    if len(upper) > 0:
        print(_str(len(upper)) + " files contain uppercase characters:")
        for f in upper:
            print(f)
        print("")
    if len(space) > 0:
        print(_str(len(space)) + " files contain space characters:")
        for f in space:
            print(f)
        print("")
    if len(hyphen) > 0:
        print(_str(len(hyphen)) + " files contain hyphen characters:")
        for f in hyphen:
            print(f)
        print("")
    if len(nodir) > 0:
        print(_str(len(nodir)) + " files are not in a directory:")
        for f in nodir:
            print(f)
        print("")
    return len(upper) + len(space) + len(hyphen) + len(nodir)
def main():
    files = ["scripts/Validate_filenames.py", "good/file.txt", "bad file.txt", "/site-packages/pkg-name.py", "nopath", "src/hyphen-name.py"]
    bad = validate(files)
    print(_str(bad))
main()

