# Code generated by Mochi transpiler.
# Version 0.10.63, generated on 2025-08-11 16:20 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


def _append(lst, v):
    return (lst or []) + [v]


def _str(v):
    if isinstance(v, float):
        if v.is_integer():
            return str(int(v))
        return format(v, ".15g")
    return str(v)


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def max_tasks(tasks_info):
    order = []
    i = 0
    while i < len(tasks_info):
        order = _append(order, i)
        i = i + 1
    n = len(order)
    i = 0
    while i < n:
        j = i + 1
        while j < n:
            if tasks_info[order[j]][1] > tasks_info[order[i]][1]:
                tmp = order[i]
                order[i] = order[j]
                order[j] = tmp
            j = j + 1
        i = i + 1
    result = []
    pos = 1
    i = 0
    while i < n:
        id = order[i]
        deadline = tasks_info[id][0]
        if deadline >= pos:
            result = _append(result, id)
        i = i + 1
        pos = pos + 1
    return result
def main():
    ex1 = [[4, 20], [1, 10], [1, 40], [1, 30]]
    ex2 = [[1, 10], [2, 20], [3, 30], [2, 40]]
    print(_str(max_tasks(ex1)))
    print(_str(max_tasks(ex2)))
main()

