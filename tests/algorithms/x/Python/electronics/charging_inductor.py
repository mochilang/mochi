# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 08:38 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

def expApprox(x):
    if x < 0.0:
        return 1.0 / expApprox(-x)
    if x > 1.0:
        half = expApprox(x / 2.0)
        return half * half
    sum = 1.0
    term = 1.0
    n = 1
    while n < 20:
        term = term * x // (float(n))
        sum = sum + term
        n = n + 1
    return sum
def floor(x):
    i = int(x)
    if (float(i)) > x:
        i = i - 1
    return float(i)
def pow10(n):
    result = 1.0
    i = 0
    while i < n:
        result = result * 10.0
        i = i + 1
    return result
def round(x, n):
    m = pow10(n)
    return floor(x * m + 0.5) / m
def charging_inductor(source_voltage, resistance, inductance, time):
    if source_voltage <= 0.0:
        panic("Source voltage must be positive.")
    if resistance <= 0.0:
        panic("Resistance must be positive.")
    if inductance <= 0.0:
        panic("Inductance must be positive.")
    exponent = (-time * resistance) // inductance
    current = source_voltage // resistance * (1.0 - expApprox(exponent))
    return round(current, 3)
print(charging_inductor(5.8, 1.5, 2.3, 2.0))
print(charging_inductor(8.0, 5.0, 3.0, 2.0))
print(charging_inductor(8.0, 5.0 * pow10(2), 3.0, 2.0))
