# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 08:38 +0700
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict
import dataclasses

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

ELECTRON_CHARGE = 1.6021e-19
@dataclass
class Result:
    kind: str
    value: float

def electric_conductivity(conductivity, electron_conc, mobility):
    zero_count = 0
    if conductivity == 0.0:
        zero_count = zero_count + 1
    if electron_conc == 0.0:
        zero_count = zero_count + 1
    if mobility == 0.0:
        zero_count = zero_count + 1
    if zero_count != 1:
        panic("You cannot supply more or less than 2 values")
    if conductivity < 0.0:
        panic("Conductivity cannot be negative")
    if electron_conc < 0.0:
        panic("Electron concentration cannot be negative")
    if mobility < 0.0:
        panic("mobility cannot be negative")
    if conductivity == 0.0:
        return Result(kind="conductivity", value=mobility * electron_conc * ELECTRON_CHARGE)
    if electron_conc == 0.0:
        return Result(kind="electron_conc", value=conductivity // (mobility * ELECTRON_CHARGE))
    return Result(kind="mobility", value=conductivity // (electron_conc * ELECTRON_CHARGE))
r1 = electric_conductivity(25.0, 100.0, 0.0)
r2 = electric_conductivity(0.0, 1600.0, 200.0)
r3 = electric_conductivity(1000.0, 0.0, 1200.0)
print(r1.kind + " " + str(r1.value))
print(r2.kind + " " + str(r2.value))
print(r3.kind + " " + str(r3.value))
