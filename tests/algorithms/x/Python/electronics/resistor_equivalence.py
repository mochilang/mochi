# Code generated by Mochi transpiler.
# Version 0.10.65, generated on 2025-08-14 10:00 +0700
import json
import time

try:
    import resource
except Exception:
    resource = None
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())


def _str(v):
    if isinstance(v, float):
        if v.is_integer():
            return str(int(v))
        return format(v, ".15g")
    return str(v)

def resistor_parallel(resistors):
    sum = 0.0
    i = 0
    while i < len(resistors):
        r = resistors[i]
        if r <= 0.0:
            panic("Resistor at index " + _str(i) + " has a negative or zero value!")
        sum = sum + 1.0 / r
        i = i + 1
    return 1.0 / sum
def resistor_series(resistors):
    sum = 0.0
    i = 0
    while i < len(resistors):
        r = resistors[i]
        if r < 0.0:
            panic("Resistor at index " + _str(i) + " has a negative value!")
        sum = sum + r
        i = i + 1
    return sum
def main():
    if resource:
        _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    else:
        _bench_mem_start = 0
    _bench_start = _now()
    try:
        resistors = [3.21389, 2.0, 3.0]
        print("Parallel: " + _str(resistor_parallel(resistors)))
        print("Series: " + _str(resistor_series(resistors)))
    finally:
        _bench_end = _now()
        if resource:
            _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
        else:
            _bench_mem_end = 0
        print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()

