# Code generated by Mochi transpiler.
# Version 0.10.60, generated on 2025-08-08 06:45 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise Exception(msg)


def _append(lst, v):
    return (lst or []) + [v]


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def permute(k, arr, res):
    if k == 1:
        copy = arr[0:]
        return _append(res, copy)
    res = permute(k - 1, arr, res)
    i = 0
    while i < k - 1:
        if k % 2 == 0:
            temp = arr[i]
            arr[i] = arr[k - 1]
            arr[k - 1] = temp
        else:
            temp = arr[0]
            arr[0] = arr[k - 1]
            arr[k - 1] = temp
        res = permute(k - 1, arr, res)
        i = i + 1
    return res
def heaps(arr):
    if len(arr) <= 1:
        return [arr[0:]]
    res = []
    res = permute(len(arr), arr, res)
    return res
def main():
    perms = heaps([1, 2, 3])
    print(perms)
main()
