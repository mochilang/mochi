# Code generated by Mochi transpiler.
# Version 0.10.60, generated on 2025-08-08 09:18 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise Exception(msg)


def _append(lst, v):
    return (lst or []) + [v]

def subarray(xs, start, end):
    result = []
    k = start
    while k < end:
        result = _append(result, xs[k])
        k = k + 1
    return result
def merge(left_half, right_half):
    result = []
    i = 0
    j = 0
    while i < len(left_half) and j < len(right_half):
        if left_half[i] < right_half[j]:
            result = _append(result, left_half[i])
            i = i + 1
        else:
            result = _append(result, right_half[j])
            j = j + 1
    while i < len(left_half):
        result = _append(result, left_half[i])
        i = i + 1
    while j < len(right_half):
        result = _append(result, right_half[j])
        j = j + 1
    return result
def merge_sort(array):
    if len(array) <= 1:
        return array
    middle = len(array) // 2
    left_half = subarray(array, 0, middle)
    right_half = subarray(array, middle, len(array))
    sorted_left = merge_sort(left_half)
    sorted_right = merge_sort(right_half)
    return merge(sorted_left, sorted_right)
print(str(merge_sort([5, 3, 1, 4, 2])))
print(str(merge_sort([-2, 3, -10, 11, 99, 100000, 100, -200])))
print(str(merge_sort([-200])))
print(str(merge_sort([])))
