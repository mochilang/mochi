# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 08:18 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())


def _append(lst, v):
    return (lst or []) + [v]

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
try:
    def pivot(lst):
        return lst[0]
    def kth_number(lst, k):
        p = pivot(lst)
        small = []
        big = []
        i = 0
        while i < len(lst):
            e = lst[i]
            if e < p:
                small = _append(small, e)
            else:
                if e > p:
                    big = _append(big, e)
            i = i + 1
        if len(small) == k - 1:
            return p
        else:
            if len(small) < k - 1:
                return kth_number(big, k - len(small) - 1)
            else:
                return kth_number(small, k)
    print(str(kth_number([2, 1, 3, 4, 5], 3)))
    print(str(kth_number([2, 1, 3, 4, 5], 1)))
    print(str(kth_number([2, 1, 3, 4, 5], 5)))
    print(str(kth_number([3, 2, 5, 6, 7, 8], 2)))
    print(str(kth_number([25, 21, 98, 100, 76, 22, 43, 60, 89, 87], 4)))
finally:
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
