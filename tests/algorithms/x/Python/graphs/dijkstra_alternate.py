# Code generated by Mochi transpiler.
# Version 0.10.60, generated on 2025-08-08 10:32 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise Exception(msg)


def _append(lst, v):
    return (lst or []) + [v]


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def minimum_distance(distances, visited):
    minimum = 10000000
    min_index = 0
    vertex = 0
    while vertex < len(distances):
        if distances[vertex] < minimum and visited[vertex] == False:
            minimum = distances[vertex]
            min_index = vertex
        vertex = vertex + 1
    return min_index
def dijkstra(graph, source):
    vertices = len(graph)
    distances = []
    i = 0
    while i < vertices:
        distances = _append(distances, 10000000)
        i = i + 1
    distances = _set_index(distances, source, 0)
    visited = []
    i = 0
    while i < vertices:
        visited = _append(visited, False)
        i = i + 1
    count = 0
    while count < vertices:
        u = minimum_distance(distances, visited)
        visited[u] = True
        v = 0
        while v < vertices:
            if graph[u][v] > 0 and visited[v] == False and distances[v] > distances[u] + graph[u][v]:
                distances = _set_index(distances, v, distances[u] + graph[u][v])
            v = v + 1
        count = count + 1
    return distances
def print_solution(distances):
    print("Vertex \t Distance from Source")
    v = 0
    while v < len(distances):
        print(str(v) + "\t\t" + str(distances[v]))
        v = v + 1
graph = [[0, 4, 0, 0, 0, 0, 0, 8, 0], [4, 0, 8, 0, 0, 0, 0, 11, 0], [0, 8, 0, 7, 0, 4, 0, 0, 2], [0, 0, 7, 0, 9, 14, 0, 0, 0], [0, 0, 0, 9, 0, 10, 0, 0, 0], [0, 0, 4, 14, 10, 0, 2, 0, 0], [0, 0, 0, 0, 0, 2, 0, 1, 6], [8, 11, 0, 0, 0, 0, 1, 0, 7], [0, 0, 2, 0, 0, 0, 6, 7, 0]]
distances = dijkstra(graph, 0)
print_solution(distances)
