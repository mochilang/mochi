# Code generated by Mochi transpiler.
# Version 0.10.60, generated on 2025-08-08 10:32 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise Exception(msg)


def _append(lst, v):
    return (lst or []) + [v]


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def index_of(xs, x):
    i = 0
    while i < len(xs):
        if xs[i] == x:
            return i
        i = i + 1
    return -1
def remove_item(xs, x):
    res = []
    removed = False
    i = 0
    while i < len(xs):
        if not removed and xs[i] == x:
            removed = True
        else:
            res = _append(res, xs[i])
        i = i + 1
    return res
def stable_matching(donor_pref, recipient_pref):
    if len(donor_pref) != len(recipient_pref):
        panic("unequal groups")
    n = len(donor_pref)
    unmatched = []
    i = 0
    while i < n:
        unmatched = _append(unmatched, i)
        i = i + 1
    donor_record = []
    i = 0
    while i < n:
        donor_record = _append(donor_record, -1)
        i = i + 1
    rec_record = []
    i = 0
    while i < n:
        rec_record = _append(rec_record, -1)
        i = i + 1
    num_donations = []
    i = 0
    while i < n:
        num_donations = _append(num_donations, 0)
        i = i + 1
    while len(unmatched) > 0:
        donor = unmatched[0]
        donor_preference = donor_pref[donor]
        recipient = donor_preference[num_donations[donor]]
        num_donations[donor] = num_donations[donor] + 1
        rec_preference = recipient_pref[recipient]
        prev_donor = rec_record[recipient]
        if prev_donor != 0 - 1:
            prev_index = index_of(rec_preference, prev_donor)
            new_index = index_of(rec_preference, donor)
            if prev_index > new_index:
                rec_record[recipient] = donor
                donor_record[donor] = recipient
                unmatched = _append(unmatched, prev_donor)
                unmatched = remove_item(unmatched, donor)
        else:
            rec_record[recipient] = donor
            donor_record[donor] = recipient
            unmatched = remove_item(unmatched, donor)
    return donor_record
donor_pref = [[0, 1, 3, 2], [0, 2, 3, 1], [1, 0, 2, 3], [0, 3, 1, 2]]
recipient_pref = [[3, 1, 2, 0], [3, 1, 0, 2], [0, 3, 1, 2], [1, 0, 3, 2]]
print(str(stable_matching(donor_pref, recipient_pref)))
