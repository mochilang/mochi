# Code generated by Mochi transpiler.
# Version 0.10.66, generated on 2025-08-15 09:59 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _append(lst, v):
    if lst is None:
        lst = []
    return lst + [v]


def _str(v):
    if isinstance(v, float):
        if v.is_integer():
            return str(int(v))
        return format(v, ".15g")
    return str(v)


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def depth_first_search(u, visited, graph, stack):
    visited[u] = True
    i = 0
    while i < len(graph[u]):
        v = graph[u][i]
        if not visited[v]:
            stack = depth_first_search(v, visited, graph, stack)
        i = i + 1
    stack = _append(stack, u)
    return stack
def topological_sort(graph):
    visited = []
    i = 0
    while i < len(graph):
        visited = _append(visited, False)
        i = i + 1
    stack = []
    i = 0
    while i < len(graph):
        if not visited[i]:
            stack = depth_first_search(i, visited, graph, stack)
        i = i + 1
    return stack
def print_stack(stack, clothes):
    order = 1
    s = stack
    while len(s) > 0:
        idx = s[len(s) - 1]
        s = s[0:len(s) - 1]
        print(_str(order) + " " + clothes.get(idx, ""))
        order = order + 1
def format_list(xs):
    res = "["
    i = 0
    while i < len(xs):
        res = res + _str(xs[i])
        if i < len(xs) - 1:
            res = res + ", "
        i = i + 1
    res = res + "]"
    return res
def main():
    clothes = {0: "underwear", 1: "pants", 2: "belt", 3: "suit", 4: "shoe", 5: "socks", 6: "shirt", 7: "tie", 8: "watch"}
    graph = [[1, 4], [2, 4], [3], [], [], [4], [2, 7], [3], []]
    stack = topological_sort(graph)
    print(format_list(stack))
    print_stack(stack, clothes)
main()

