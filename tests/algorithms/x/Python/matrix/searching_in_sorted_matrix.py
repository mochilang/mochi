# Code generated by Mochi transpiler.
# Version 0.10.61, generated on 2025-08-08 17:13 +0700
import json
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())


def _str(v):
    if isinstance(v, float) and v.is_integer():
        return str(int(v))
    return str(v)

def search_in_sorted_matrix(mat, m, n, key):
    i = m - 1
    j = 0
    while i >= 0 and j < n:
        if key == mat[i][j]:
            print("Key " + _str(key) + " found at row- " + _str(i + 1) + " column- " + _str(j + 1))
            return
        if key < mat[i][j]:
            i = i - 1
        else:
            j = j + 1
    print("Key " + _str(key) + " not found")
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    try:
        mat = [[2.0, 5.0, 7.0], [4.0, 8.0, 13.0], [9.0, 11.0, 15.0], [12.0, 17.0, 20.0]]
        search_in_sorted_matrix(mat, len(mat), len(mat[0]), 5.0)
        search_in_sorted_matrix(mat, len(mat), len(mat[0]), 21.0)
        mat2 = [[2.1, 5.0, 7.0], [4.0, 8.0, 13.0], [9.0, 11.0, 15.0], [12.0, 17.0, 20.0]]
        search_in_sorted_matrix(mat2, len(mat2), len(mat2[0]), 2.1)
        search_in_sorted_matrix(mat2, len(mat2), len(mat2[0]), 2.2)
    finally:
        _bench_end = _now()
        _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
        print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
