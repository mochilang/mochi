# Code generated by Mochi transpiler.
# Version 0.10.60, generated on 2025-08-08 11:13 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise Exception(msg)

def knapsack(capacity, weights, values, counter):
    if counter == 0 or capacity == 0:
        return 0
    if weights[counter - 1] > capacity:
        return knapsack(capacity, weights, values, counter - 1)
    else:
        left_capacity = capacity - weights[counter - 1]
        new_value_included = values[counter - 1] + knapsack(left_capacity, weights, values, counter - 1)
        without_new_value = knapsack(capacity, weights, values, counter - 1)
        if new_value_included > without_new_value:
            return new_value_included
        else:
            return without_new_value
def main():
    weights = [10, 20, 30]
    values = [60, 100, 120]
    cap = 50
    count = len(values)
    result = knapsack(cap, weights, values, count)
    print(str(result))
main()
