# Code generated by Mochi transpiler.
# Version 0.10.60, generated on 2025-08-08 11:13 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise Exception(msg)

def knapsack(capacity, weights, values, counter):
    if counter == 0 or capacity == 0:
        return 0
    if weights[counter - 1] > capacity:
        return knapsack(capacity, weights, values, counter - 1)
    left_capacity = capacity - weights[counter - 1]
    include_val = values[counter - 1] + knapsack(left_capacity, weights, values, counter - 1)
    exclude_val = knapsack(capacity, weights, values, counter - 1)
    if include_val > exclude_val:
        return include_val
    return exclude_val
def test_base_case():
    cap = 0
    val = [0]
    w = [0]
    c = len(val)
    if knapsack(cap, w, val, c) != 0:
        return False
    val2 = [60]
    w2 = [10]
    c2 = len(val2)
    return knapsack(cap, w2, val2, c2) == 0
def test_easy_case():
    cap = 3
    val = [1, 2, 3]
    w = [3, 2, 1]
    c = len(val)
    return knapsack(cap, w, val, c) == 5
def test_knapsack():
    cap = 50
    val = [60, 100, 120]
    w = [10, 20, 30]
    c = len(val)
    return knapsack(cap, w, val, c) == 220
print(("True" if test_base_case() else "False"))
print(("True" if test_easy_case() else "False"))
print(("True" if test_knapsack() else "False"))
print(("True" if True else "False"))
