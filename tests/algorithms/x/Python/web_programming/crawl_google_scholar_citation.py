# Code generated by Mochi transpiler.
# Version 0.10.65, generated on 2025-08-13 16:39 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

DIGITS = "0123456789"
def is_digit(ch):
    i = 0
    while i < len(DIGITS):
        if DIGITS[i] == ch:
            return True
        i = i + 1
    return False
def find_substring(haystack, needle):
    i = 0
    while i <= len(haystack) - len(needle):
        j = 0
        while j < len(needle):
            if haystack[i + j] != needle[j]:
                break
            j = j + 1
        if j == len(needle):
            return i
        i = i + 1
    return -1
def extract_citation(html):
    marker = "Cited by "
    idx = find_substring(html, marker)
    if idx < 0:
        return ""
    pos = idx + len(marker)
    result = ""
    while pos < len(html):
        ch = html[pos]
        if not is_digit(ch):
            break
        result = result + ch
        pos = pos + 1
    return result
def get_citation(base_url, params):
    html = "<div class=\"gs_ri\"><div class=\"gs_fl\"><a>Cited by 123</a></div></div>"
    return extract_citation(html)
if __name__ == "__main__":
    params = {"title": "Precisely geometry controlled microsupercapacitors for ultrahigh areal capacitance, volumetric capacitance, and energy density", "journal": "Chem. Mater.", "volume": "30", "pages": "3979-3990", "year": "2018", "hl": "en"}
    print(get_citation("https://scholar.google.com/scholar_lookup", params))

