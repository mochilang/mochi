# Code generated by Mochi transpiler.
# Version 0.10.65, generated on 2025-08-13 16:39 +0700
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict
import dataclasses

import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _append(lst, v):
    if lst is None:
        lst = []
    lst.append(v)
    return lst


def _str(v):
    if isinstance(v, float):
        if v.is_integer():
            return str(int(v))
        return format(v, ".17g")
    return str(v)

@dataclass
class Product:
    title: str
    link: str
    price: str
    rating: str
    mrp: str
    discount: float

def find_index(s, pat, start):
    i = start
    while i <= len(s) - len(pat):
        j = 0
        ok = True
        while j < len(pat):
            if s[i + j] != pat[j]:
                ok = False
                break
            j = j + 1
        if ok:
            return i
        i = i + 1
    return -1
def slice_between(s, start_pat, end_pat, from_):
    a = find_index(s, start_pat, from_)
    if a < 0:
        return ""
    b = a + len(start_pat)
    c = find_index(s, end_pat, b)
    if c < 0:
        return ""
    return s[b:c]
def char_to_digit(c):
    if c == "0":
        return 0
    if c == "1":
        return 1
    if c == "2":
        return 2
    if c == "3":
        return 3
    if c == "4":
        return 4
    if c == "5":
        return 5
    if c == "6":
        return 6
    if c == "7":
        return 7
    if c == "8":
        return 8
    return 9
def parse_int(txt):
    n = 0
    i = 0
    while i < len(txt):
        c = txt[i]
        if c >= "0" and c <= "9":
            n = n * 10 + char_to_digit(c)
        i = i + 1
    return n
def parse_product(block):
    href = slice_between(block, "href=\"", "\"", 0)
    link = "https://www.amazon.in" + href
    title = slice_between(block, ">", "</a>", find_index(block, "<a", 0))
    price = slice_between(block, "<span class=\"a-offscreen\">", "</span>", 0)
    rating = slice_between(block, "<span class=\"a-icon-alt\">", "</span>", 0)
    if len(rating) == 0:
        rating = "Not available"
    mrp = slice_between(block, "<span class=\"a-price a-text-price\">", "</span>", 0)
    disc = 0.0
    if len(mrp) > 0 and len(price) > 0:
        p = parse_int(price)
        m = parse_int(mrp)
        if m > 0:
            disc = float(((m - p) * 100)) / (float(m))
    else:
        mrp = ""
        disc = 0.0
    return Product(title=title, link=link, price=price, rating=rating, mrp=mrp, discount=disc)
def get_amazon_product_data(product):
    html = "<div class=\"s-result-item\" data-component-type=\"s-search-result\"><h2><a href=\"/sample_product\">Sample Product</a></h2><span class=\"a-offscreen\">₹900</span><span class=\"a-icon-alt\">4.3 out of 5 stars</span><span class=\"a-price a-text-price\">₹1000</span></div><div class=\"s-result-item\" data-component-type=\"s-search-result\"><h2><a href=\"/item2\">Another Product</a></h2><span class=\"a-offscreen\">₹500</span><span class=\"a-icon-alt\">3.8 out of 5 stars</span><span class=\"a-price a-text-price\">₹800</span></div>"
    out = []
    start = 0
    while True:
        div_start = find_index(html, "<div class=\"s-result-item\"", start)
        if div_start < 0:
            break
        div_end = find_index(html, "</div>", div_start)
        if div_end < 0:
            break
        block = html[div_start:div_end]
        out = _append(out, parse_product(block))
        start = div_end + len("</div>")
    return out
def main():
    products = get_amazon_product_data("laptop")
    i = 0
    while i < len(products):
        p = products[i]
        print(p.title + " | " + p.link + " | " + p.price + " | " + p.rating + " | " + p.mrp + " | " + _str(p.discount))
        i = i + 1
main()

