# Code generated by Mochi transpiler.
# Version 0.10.65, generated on 2025-08-13 16:39 +0700
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict
import dataclasses

import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _str(v):
    if isinstance(v, float):
        if v.is_integer():
            return str(int(v))
        return format(v, ".17g")
    return str(v)

@dataclass
class Rate:
    code: str
    rate: float

rates = [Rate(code="USD", rate=1.0), Rate(code="EUR", rate=0.9), Rate(code="INR", rate=83.0), Rate(code="JPY", rate=156.0), Rate(code="GBP", rate=0.78)]
def rate_of(code):
    for r in rates:
        if r.code == code:
            return r.rate
    return 0.0
def convert_currency(from_, to, amount):
    from_rate = rate_of(from_)
    to_rate = rate_of(to)
    if from_rate == 0.0 or to_rate == 0.0:
        return 0.0
    usd = amount / from_rate
    return usd * to_rate
result = convert_currency("USD", "INR", 10.0)
print(_str(result))

