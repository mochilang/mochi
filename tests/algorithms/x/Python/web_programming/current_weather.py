# Code generated by Mochi transpiler.
# Version 0.10.65, generated on 2025-08-13 16:39 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


def _append(lst, v):
    if lst is None:
        lst = []
    lst.append(v)
    return lst


def _str(v):
    if isinstance(v, float):
        if v.is_integer():
            return str(int(v))
        return format(v, ".17g")
    return str(v)

OPENWEATHERMAP_API_KEY = "demo"
WEATHERSTACK_API_KEY = ""
OPENWEATHERMAP_URL_BASE = "https://api.openweathermap.org/data/2.5/weather"
WEATHERSTACK_URL_BASE = "http://api.weatherstack.com/current"
def http_get(url, params):
    if "q" in params:
        return {"location": params.get("q", ""), "temperature": "20"}
    return {"location": params.get("query", ""), "temperature": "20"}
def current_weather(location):
    weather_data = []
    if OPENWEATHERMAP_API_KEY != "":
        params_openweathermap = {"q": location, "appid": OPENWEATHERMAP_API_KEY}
        response_openweathermap = http_get(OPENWEATHERMAP_URL_BASE, params_openweathermap)
        weather_data = _append(weather_data, {"OpenWeatherMap": response_openweathermap})
    if WEATHERSTACK_API_KEY != "":
        params_weatherstack = {"query": location, "access_key": WEATHERSTACK_API_KEY}
        response_weatherstack = http_get(WEATHERSTACK_URL_BASE, params_weatherstack)
        weather_data = _append(weather_data, {"Weatherstack": response_weatherstack})
    if len(weather_data) == 0:
        panic("No API keys provided or no valid data returned.")
    return weather_data
def main():
    data = current_weather("New York")
    print(_str(data))
main()

