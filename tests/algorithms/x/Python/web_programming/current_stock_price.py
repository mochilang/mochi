# Code generated by Mochi transpiler.
# Version 0.10.65, generated on 2025-08-13 16:39 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

def find(text, pattern, start):
    i = start
    limit = len(text) - len(pattern)
    while i <= limit:
        if text[i:i + len(pattern)] == pattern:
            return i
        i = i + 1
    return -1
def stock_price(symbol):
    pages = {"AAPL": "<span data-testid=\"qsp-price\">228.43</span>", "AMZN": "<span data-testid=\"qsp-price\">201.85</span>", "IBM": "<span data-testid=\"qsp-price\">210.30</span>", "GOOG": "<span data-testid=\"qsp-price\">177.86</span>", "MSFT": "<span data-testid=\"qsp-price\">414.82</span>", "ORCL": "<span data-testid=\"qsp-price\">188.87</span>"}
    if symbol in pages:
        html = pages.get(symbol, "")
        marker = "<span data-testid=\"qsp-price\">"
        start_idx = find(html, marker, 0)
        if start_idx != (-1):
            price_start = start_idx + len(marker)
            end_idx = find(html, "</span>", price_start)
            if end_idx != (-1):
                return html[price_start:end_idx]
    return "No <fin-streamer> tag with the specified data-testid attribute found."
for symbol in ["AAPL", "AMZN", "IBM", "GOOG", "MSFT", "ORCL"]:
    print("Current " + symbol + " stock price is " + stock_price(symbol))

