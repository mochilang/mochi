# Code generated by Mochi transpiler.
# Version 0.10.65, generated on 2025-08-13 16:55 +0700
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict
import dataclasses
import json
import time

try:
    import resource
except Exception:
    resource = None
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())


def _append(lst, v):
    if lst is None:
        lst = []
    lst.append(v)
    return lst

@dataclass
class Job:
    title: str
    company: str

SAMPLE_HTML = "<div data-tn-component=\"organicJob\"><a data-tn-element=\"jobTitle\">Android Developer</a><span class=\"company\">ABC Corp</span></div><div data-tn-component=\"organicJob\"><a data-tn-element=\"jobTitle\">iOS Engineer</a><span class=\"company\">XYZ Ltd</span></div>"
def indexOf(s, sub, start):
    n = len(s)
    m = len(sub)
    i = start
    while i <= n - m:
        j = 0
        ok = True
        while j < m:
            if s[i + j:i + j + 1] != sub[j:j + 1]:
                ok = False
                break
            j = j + 1
        if ok:
            return i
        i = i + 1
    return (0 - 1)
def splitBy(s, sep):
    res = []
    start = 0
    sepLen = len(sep)
    idx = indexOf(s, sep, 0)
    while idx != (0 - 1):
        res = _append(res, s[start:idx])
        start = idx + sepLen
        idx = indexOf(s, sep, start)
    res = _append(res, s[start:len(s)])
    return res
def between(s, startTag, endTag):
    startIdx = indexOf(s, startTag, 0)
    if startIdx == (0 - 1):
        return ""
    startIdx = startIdx + len(startTag)
    endIdx = indexOf(s, endTag, startIdx)
    if endIdx == (0 - 1):
        return ""
    return s[startIdx:endIdx]
def intToString(n):
    if n == 0:
        return "0"
    num = n
    digits = ""
    while num > 0:
        d = num % 10
        digits = "0123456789"[d:d + 1] + digits
        num = num / 10
    return digits
def fetch_jobs(location):
    blocks = splitBy(SAMPLE_HTML, "data-tn-component=\"organicJob\"")
    jobs = []
    i = 1
    while i < len(blocks):
        block = blocks[i]
        title = between(block, "data-tn-element=\"jobTitle\">", "</a>")
        company = between(block, "class=\"company\">", "</span>")
        jobs = _append(jobs, Job(title=title, company=company))
        i = i + 1
    return jobs
def main():
    if resource:
        _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    else:
        _bench_mem_start = 0
    _bench_start = _now()
    try:
        jobs = fetch_jobs("Bangalore")
        i = 0
        while i < len(jobs):
            j = jobs[i]
            idx = i + 1
            print("Job " + intToString(idx) + " is " + j.title + " at " + j.company)
            i = i + 1
    finally:
        _bench_end = _now()
        if resource:
            _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
        else:
            _bench_mem_end = 0
        print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()

