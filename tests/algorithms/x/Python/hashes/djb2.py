# Code generated by Mochi transpiler.
# Version 0.10.66, generated on 2025-08-15 09:59 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

def index_of(s, ch):
    i = 0
    while i < len(s):
        if s[i] == ch:
            return i
        i = i + 1
    return -1
def ord(ch):
    upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    lower = "abcdefghijklmnopqrstuvwxyz"
    digits = "0123456789"
    idx = index_of(upper, ch)
    if idx >= 0:
        return 65 + idx
    idx = index_of(lower, ch)
    if idx >= 0:
        return 97 + idx
    idx = index_of(digits, ch)
    if idx >= 0:
        return 48 + idx
    if ch == " ":
        return 32
    return 0
def djb2(s):
    hash_value = 5381
    i = 0
    while i < len(s):
        hash_value = hash_value * 33 + ord(s[i])
        hash_value = hash_value % 4294967296
        i = i + 1
    return hash_value
print(djb2("Algorithms"))
print(djb2("scramble bits"))

