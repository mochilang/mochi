# Code generated by Mochi transpiler.
# Version 0.10.65, generated on 2025-08-14 16:13 +0700
import hashlib
import json
import time

try:
    import resource
except Exception:
    resource = None
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

if resource:
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
else:
    _bench_mem_start = 0
_bench_start = _now()
try:
    HEX = "0123456789abcdef"
    def byte_to_hex(b):
        hi = b // 16
        lo = b % 16
        return HEX[hi] + HEX[lo]
    def bytes_to_hex(bs):
        res = ""
        i = 0
        while i < len(bs):
            res = res + byte_to_hex(bs[i])
            i = i + 1
        return res
    print(bytes_to_hex(list(hashlib.sha256("Python".encode()).digest())))
    print(bytes_to_hex(list(hashlib.sha256("hello world".encode()).digest())))
finally:
    _bench_end = _now()
    if resource:
        _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    else:
        _bench_mem_end = 0
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))

