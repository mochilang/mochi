# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 18:11 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

def bitwise_xor(a, b):
    result = 0
    bit = 1
    x = a
    y = b
    while x > 0 or y > 0:
        ax = x % 2
        by = y % 2
        if (ax + by) % 2 == 1:
            result = result + bit
        x = x // 2
        y = y // 2
        bit = bit * 2
    return result
def bitwise_and(a, b):
    result = 0
    bit = 1
    x = a
    y = b
    while x > 0 and y > 0:
        if x % 2 == 1 and y % 2 == 1:
            result = result + bit
        x = x // 2
        y = y // 2
        bit = bit * 2
    return result
def bitwise_addition_recursive(number, other_number):
    if number < 0 or other_number < 0:
        panic("Both arguments MUST be non-negative!")
    bitwise_sum = bitwise_xor(number, other_number)
    carry = bitwise_and(number, other_number)
    if carry == 0:
        return bitwise_sum
    return bitwise_addition_recursive(bitwise_sum, carry * 2)
print(str(bitwise_addition_recursive(4, 5)))
print(str(bitwise_addition_recursive(8, 9)))
print(str(bitwise_addition_recursive(0, 4)))
