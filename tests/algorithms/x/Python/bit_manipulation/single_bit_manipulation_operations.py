# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 20:44 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

def pow2(exp):
    result = 1
    i = 0
    while i < exp:
        result = result * 2
        i = i + 1
    return result
def is_bit_set(number, position):
    shifted = number // pow2(position)
    remainder = shifted % 2
    return remainder == 1
def set_bit(number, position):
    if is_bit_set(number, position):
        return number
    return number + pow2(position)
def clear_bit(number, position):
    if is_bit_set(number, position):
        return number - pow2(position)
    return number
def flip_bit(number, position):
    if is_bit_set(number, position):
        return number - pow2(position)
    return number + pow2(position)
def get_bit(number, position):
    if is_bit_set(number, position):
        return 1
    return 0
print(str(set_bit(13, 1)))
print(str(clear_bit(18, 1)))
print(str(flip_bit(5, 1)))
print(str(is_bit_set(10, 3)))
print(str(get_bit(10, 1)))
