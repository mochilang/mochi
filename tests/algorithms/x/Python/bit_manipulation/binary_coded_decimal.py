# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 16:35 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
try:
    def to_binary4(n):
        result = ""
        x = n
        while x > 0:
            result = str(x % 2) + result
            x = x // 2
        while len(result) < 4:
            result = "0" + result
        return result
    def binary_coded_decimal(number):
        n = number
        if n < 0:
            n = 0
        digits = str(n)
        out = "0b"
        i = 0
        while i < len(digits):
            d = digits[i]
            d_int = int(d)
            out = out + to_binary4(d_int)
            i = i + 1
        return out
    print(binary_coded_decimal(-2))
    print(binary_coded_decimal(-1))
    print(binary_coded_decimal(0))
    print(binary_coded_decimal(3))
    print(binary_coded_decimal(2))
    print(binary_coded_decimal(12))
    print(binary_coded_decimal(987))
finally:
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
