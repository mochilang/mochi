# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 18:11 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

def int_to_binary(n):
    if n == 0:
        return "0"
    res = ""
    num = n
    while num > 0:
        res = str(num % 2) + res
        num = num // 2
    return res
def pad_left(s, width):
    res = s
    while len(res) < width:
        res = "0" + res
    return res
def binary_xor(a, b):
    if a < 0 or b < 0:
        panic("the value of both inputs must be positive")
    a_bin = int_to_binary(a)
    b_bin = int_to_binary(b)
    max_len = (len(a_bin) if len(a_bin) > len(b_bin) else len(b_bin))
    a_pad = pad_left(a_bin, max_len)
    b_pad = pad_left(b_bin, max_len)
    i = 0
    result = ""
    while i < max_len:
        if a_pad[i] != b_pad[i]:
            result = result + "1"
        else:
            result = result + "0"
        i = i + 1
    return "0b" + result
print(binary_xor(25, 32))
print(binary_xor(37, 50))
print(binary_xor(21, 30))
print(binary_xor(58, 73))
print(binary_xor(0, 255))
print(binary_xor(256, 256))
