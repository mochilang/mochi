# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 20:35 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

def to_binary(n):
    if n == 0:
        return "0"
    num = n
    res = ""
    while num > 0:
        bit = num % 2
        res = str(bit) + res
        num = num // 2
    return res
def zfill(s, width):
    res = s
    pad = width - len(s)
    while pad > 0:
        res = "0" + res
        pad = pad - 1
    return res
def binary_and(a, b):
    if a < 0 or b < 0:
        panic("the value of both inputs must be positive")
    a_bin = to_binary(a)
    b_bin = to_binary(b)
    max_len = len(a_bin)
    if len(b_bin) > max_len:
        max_len = len(b_bin)
    a_pad = zfill(a_bin, max_len)
    b_pad = zfill(b_bin, max_len)
    i = 0
    res = ""
    while i < max_len:
        if a_pad[i] == "1" and b_pad[i] == "1":
            res = res + "1"
        else:
            res = res + "0"
        i = i + 1
    return "0b" + res
print(binary_and(25, 32))
print(binary_and(37, 50))
print(binary_and(21, 30))
print(binary_and(58, 73))
print(binary_and(0, 255))
print(binary_and(256, 256))
