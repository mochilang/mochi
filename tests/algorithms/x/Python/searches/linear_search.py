# Code generated by Mochi transpiler.
# Version 0.10.63, generated on 2025-08-11 16:20 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


def _str(v):
    if isinstance(v, float):
        if v.is_integer():
            return str(int(v))
        return format(v, ".15g")
    return str(v)

def linear_search(sequence, target):
    i = 0
    while i < len(sequence):
        if sequence[i] == target:
            return i
        i = i + 1
    return -1
def rec_linear_search(sequence, low, high, target):
    if not (0 <= high and high < len(sequence) and 0 <= low and low < len(sequence)):
        panic("Invalid upper or lower bound!")
    if high < low:
        return -1
    if sequence[low] == target:
        return low
    if sequence[high] == target:
        return high
    return rec_linear_search(sequence, low + 1, high - 1, target)
print(_str(linear_search([0, 5, 7, 10, 15], 0)))
print(_str(linear_search([0, 5, 7, 10, 15], 15)))
print(_str(linear_search([0, 5, 7, 10, 15], 5)))
print(_str(linear_search([0, 5, 7, 10, 15], 6)))
print(_str(rec_linear_search([0, 30, 500, 100, 700], 0, 4, 0)))
print(_str(rec_linear_search([0, 30, 500, 100, 700], 0, 4, 700)))
print(_str(rec_linear_search([0, 30, 500, 100, 700], 0, 4, 30)))
print(_str(rec_linear_search([0, 30, 500, 100, 700], 0, 4, -6)))

