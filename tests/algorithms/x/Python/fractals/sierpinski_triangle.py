# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 08:38 +0700
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict
import dataclasses

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

@dataclass
class Point:
    x: int
    y: int

def get_mid(p1, p2):
    return Point(x=(p1.x + p2.x) // 2, y=(p1.y + p2.y) // 2)
def point_to_string(p):
    return "(" + str(p.x) + "," + str(p.y) + ")"
def triangle(v1, v2, v3, depth):
    print(point_to_string(v1) + " " + point_to_string(v2) + " " + point_to_string(v3))
    if depth == 0:
        return
    triangle(v1, get_mid(v1, v2), get_mid(v1, v3), depth - 1)
    triangle(v2, get_mid(v1, v2), get_mid(v2, v3), depth - 1)
    triangle(v3, get_mid(v3, v2), get_mid(v1, v3), depth - 1)
triangle(Point(x=-175, y=-125), Point(x=0, y=175), Point(x=175, y=-125), 2)
