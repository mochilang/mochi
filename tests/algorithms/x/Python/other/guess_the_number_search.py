# Code generated by Mochi transpiler.
# Version 0.10.61, generated on 2025-08-08 17:42 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


def _append(lst, v):
    return (lst or []) + [v]


def _str(v):
    if isinstance(v, float) and v.is_integer():
        return str(int(v))
    return str(v)

def get_avg(number_1, number_2):
    return (number_1 + number_2) / 2
def guess_the_number(lower, higher, to_guess):
    if lower > higher:
        panic("argument value for lower and higher must be(lower > higher)")
    if not (lower < to_guess and to_guess < higher):
        panic("guess value must be within the range of lower and higher value")
    def answer(number):
        if number > to_guess:
            return "high"
        else:
            if number < to_guess:
                return "low"
            else:
                return "same"
    print("started...")
    last_lowest = lower
    last_highest = higher
    last_numbers = []
    while True:
        number = get_avg(last_lowest, last_highest)
        last_numbers = _append(last_numbers, number)
        resp = answer(number)
        if resp == "low":
            last_lowest = number
        else:
            if resp == "high":
                last_highest = number
            else:
                break
    print("guess the number : " + _str(last_numbers[len(last_numbers) - 1]))
    print("details : " + _str(last_numbers))
    return last_numbers
guess_the_number(10, 1000, 17)
guess_the_number(-10000, 10000, 7)
