# Code generated by Mochi transpiler.
# Version 0.10.61, generated on 2025-08-08 17:42 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


def _str(v):
    if isinstance(v, float) and v.is_integer():
        return str(int(v))
    return str(v)


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

seed = 1
def rand():
    global seed
    seed = (seed * 1103515245 + 12345) % 2147483648
    return seed // 65536
def randint(a, b):
    r = rand()
    return a + r % (b - a + 1)
def fisher_yates_shuffle_int(data):
    res = data
    i = 0
    while i < len(res):
        a = randint(0, len(res) - 1)
        b = randint(0, len(res) - 1)
        temp = res[a]
        res[a] = res[b]
        res[b] = temp
        i = i + 1
    return res
def fisher_yates_shuffle_str(data):
    res = data
    i = 0
    while i < len(res):
        a = randint(0, len(res) - 1)
        b = randint(0, len(res) - 1)
        temp = res[a]
        res[a] = res[b]
        res[b] = temp
        i = i + 1
    return res
integers = [0, 1, 2, 3, 4, 5, 6, 7]
strings = ["python", "says", "hello", "!"]
print("Fisher-Yates Shuffle:")
print("List " + _str(integers) + " " + _str(strings))
print("FY Shuffle " + _str(fisher_yates_shuffle_int(integers)) + " " + _str(fisher_yates_shuffle_str(strings)))
