# Code generated by Mochi transpiler.
# Version 0.10.61, generated on 2025-08-08 17:42 +0700
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict
import dataclasses

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


def _str(v):
    if isinstance(v, float) and v.is_integer():
        return str(int(v))
    return str(v)

@dataclass
class EasterDate:
    month: int
    day: int

def gauss_easter(year):
    metonic_cycle = year % 19
    julian_leap_year = year % 4
    non_leap_year = year % 7
    leap_day_inhibits = year // 100
    lunar_orbit_correction = (13 + 8 * leap_day_inhibits) / 25
    leap_day_reinstall_number = (float(leap_day_inhibits)) / 4.0
    secular_moon_shift = (15.0 - (float(lunar_orbit_correction)) + (float(leap_day_inhibits)) - leap_day_reinstall_number) % 30.0
    century_starting_point = (4.0 + (float(leap_day_inhibits)) - leap_day_reinstall_number) % 7.0
    days_to_add = (19.0 * (float(metonic_cycle)) + secular_moon_shift) % 30.0
    days_from_phm_to_sunday = (2.0 * (float(julian_leap_year)) + 4.0 * (float(non_leap_year)) + 6.0 * days_to_add + century_starting_point) % 7.0
    if days_to_add == 29.0 and days_from_phm_to_sunday == 6.0:
        return EasterDate(month=4, day=19)
    if days_to_add == 28.0 and days_from_phm_to_sunday == 6.0:
        return EasterDate(month=4, day=18)
    offset = int((days_to_add + days_from_phm_to_sunday))
    total = 22 + offset
    if total > 31:
        return EasterDate(month=4, day=total - 31)
    return EasterDate(month=3, day=total)
def format_date(year, d):
    month = ("0" + _str(d.month) if d.month < 10 else _str(d.month))
    day = ("0" + _str(d.day) if d.day < 10 else _str(d.day))
    return _str(year) + "-" + month + "-" + day
years = [1994, 2000, 2010, 2021, 2023, 2032, 2100]
i = 0
while i < len(years):
    y = years[i]
    e = gauss_easter(y)
    print("Easter in " + _str(y) + " is " + format_date(y, e))
    i = i + 1
