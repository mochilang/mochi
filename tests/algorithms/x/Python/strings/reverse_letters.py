# Code generated by Mochi transpiler.
# Version 0.10.65, generated on 2025-08-13 16:39 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


def _append(lst, v):
    if lst is None:
        lst = []
    lst.append(v)
    return lst

def split(s, sep):
    res = []
    current = ""
    i = 0
    while i < len(s):
        ch = s[i]
        if ch == sep:
            res = _append(res, current)
            current = ""
        else:
            current = current + ch
        i = i + 1
    res = _append(res, current)
    return res
def join_with_space(xs):
    s = ""
    i = 0
    while i < len(xs):
        s = s + xs[i]
        if i + 1 < len(xs):
            s = s + " "
        i = i + 1
    return s
def reverse_str(s):
    res = ""
    i = len(s) - 1
    while i >= 0:
        res = res + s[i]
        i = i - 1
    return res
def reverse_letters(sentence, length):
    words = sentence.split(" ")
    result = []
    i = 0
    while i < len(words):
        word = words[i]
        if len(word) > length:
            result = _append(result, reverse_str(word))
        else:
            result = _append(result, word)
        i = i + 1
    return join_with_space(result)
def test_reverse_letters():
    if reverse_letters("Hey wollef sroirraw", 3) != "Hey fellow warriors":
        panic("test1 failed")
    if reverse_letters("nohtyP is nohtyP", 2) != "Python is Python":
        panic("test2 failed")
    if reverse_letters("1 12 123 1234 54321 654321", 0) != "1 21 321 4321 12345 123456":
        panic("test3 failed")
    if reverse_letters("racecar", 0) != "racecar":
        panic("test4 failed")
def main():
    test_reverse_letters()
    print(reverse_letters("Hey wollef sroirraw", 3))
main()

