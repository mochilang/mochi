# Code generated by Mochi transpiler.
# Version 0.10.71, generated on 2025-08-24 08:57 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
if hasattr(sys, "setrecursionlimit"):
    sys.setrecursionlimit(1000000)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


import builtins
def _str(v):
    if isinstance(v, float):
        if abs(v - builtins.round(v)) < 1e-9:
            return builtins.str(int(builtins.round(v)))
        return builtins.str(v)
    return builtins.str(v)

def hamming_distance(a, b):
    if len(a) != len(b):
        panic("String lengths must match!")
    i = 0
    count = 0
    while i < len(a):
        if a[i] != b[i]:
            count = count + 1
        i = i + 1
    return count
print(_str(hamming_distance("python", "python")))
print(_str(hamming_distance("karolin", "kathrin")))
print(_str(hamming_distance("00000", "11111")))

