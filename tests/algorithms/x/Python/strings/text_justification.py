# Code generated by Mochi transpiler.
# Version 0.10.65, generated on 2025-08-13 16:39 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _append(lst, v):
    if lst is None:
        lst = []
    lst.append(v)
    return lst


def _str(v):
    if isinstance(v, float):
        if v.is_integer():
            return str(int(v))
        return format(v, ".17g")
    return str(v)

def repeat_str(s, count):
    res = ""
    i = 0
    while i < count:
        res = res + s
        i = i + 1
    return res
def split_words(s):
    res = []
    current = ""
    i = 0
    while i < len(s):
        ch = s[i:i + 1]
        if ch == " ":
            if current != "":
                res = _append(res, current)
                current = ""
        else:
            current = current + ch
        i = i + 1
    if current != "":
        res = _append(res, current)
    return res
def justify_line(line, width, max_width):
    overall_spaces_count = max_width - width
    words_count = len(line)
    if words_count == 1:
        return line[0] + repeat_str(" ", overall_spaces_count)
    spaces_to_insert_between_words = words_count - 1
    num_spaces_between_words_list = []
    base = overall_spaces_count / spaces_to_insert_between_words
    extra = overall_spaces_count % spaces_to_insert_between_words
    i = 0
    while i < spaces_to_insert_between_words:
        spaces = base
        if i < extra:
            spaces = spaces + 1
        num_spaces_between_words_list = _append(num_spaces_between_words_list, spaces)
        i = i + 1
    aligned = ""
    i = 0
    while i < spaces_to_insert_between_words:
        aligned = aligned + line[i] + repeat_str(" ", num_spaces_between_words_list[i])
        i = i + 1
    aligned = aligned + line[spaces_to_insert_between_words]
    return aligned
def text_justification(word, max_width):
    words = split_words(word)
    answer = []
    line = []
    width = 0
    idx = 0
    while idx < len(words):
        w = words[idx]
        if width + len(w) + len(line) <= max_width:
            line = _append(line, w)
            width = width + len(w)
        else:
            answer = _append(answer, justify_line(line, width, max_width))
            line = [w]
            width = len(w)
        idx = idx + 1
    remaining_spaces = max_width - width - len(line)
    last_line = ""
    j = 0
    while j < len(line):
        if j > 0:
            last_line = last_line + " "
        last_line = last_line + line[j]
        j = j + 1
    last_line = last_line + repeat_str(" ", remaining_spaces + 1)
    answer = _append(answer, last_line)
    return answer
print(_str(text_justification("This is an example of text justification.", 16)))
print(_str(text_justification("Two roads diverged in a yellow wood", 16)))

