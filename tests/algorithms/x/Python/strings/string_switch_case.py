# Code generated by Mochi transpiler.
# Version 0.10.65, generated on 2025-08-13 16:39 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _append(lst, v):
    if lst is None:
        lst = []
    lst.append(v)
    return lst

def split_words(s):
    words = []
    current = ""
    for ch in s:
        if ch == " ":
            if current != "":
                words = _append(words, current)
                current = ""
        else:
            current = current + ch
    if current != "":
        words = _append(words, current)
    return words
def is_alnum(c):
    return c in "0123456789" or c in "abcdefghijklmnopqrstuvwxyz" or c in "ABCDEFGHIJKLMNOPQRSTUVWXYZ" or c == " "
def split_input(text):
    result = []
    current = ""
    for ch in text:
        if is_alnum(ch):
            current = current + ch
        else:
            if current != "":
                result = _append(result, split_words(current))
                current = ""
    if current != "":
        result = _append(result, split_words(current))
    return result
def capitalize(word):
    if len(word) == 0:
        return ""
    if len(word) == 1:
        return word.upper()
    return word[0:1].upper() + word[1:].lower()
def to_simple_case(text):
    parts = split_input(text)
    res = ""
    for sub in parts:
        for w in sub:
            res = res + capitalize(w)
    return res
def to_complex_case(text, upper_flag, sep):
    parts = split_input(text)
    res = ""
    for sub in parts:
        first = True
        for w in sub:
            word = (w.upper() if upper_flag else w.lower())
            if first:
                res = res + word
                first = False
            else:
                res = res + sep + word
    return res
def to_pascal_case(text):
    return to_simple_case(text)
def to_camel_case(text):
    s = to_simple_case(text)
    if len(s) == 0:
        return ""
    return s[0:1].lower() + s[1:]
def to_snake_case(text, upper_flag):
    return to_complex_case(text, upper_flag, "_")
def to_kebab_case(text, upper_flag):
    return to_complex_case(text, upper_flag, "-")
print(to_pascal_case("one two 31235three4four"))
print(to_camel_case("one two 31235three4four"))
print(to_snake_case("one two 31235three4four", True))
print(to_snake_case("one two 31235three4four", False))
print(to_kebab_case("one two 31235three4four", True))
print(to_kebab_case("one two 31235three4four", False))

