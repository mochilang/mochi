# Code generated by Mochi transpiler.
# Version 0.10.65, generated on 2025-08-13 16:39 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _str(v):
    if isinstance(v, float):
        if v.is_integer():
            return str(int(v))
        return format(v, ".17g")
    return str(v)

MAX_LOCAL_PART_OCTETS = 64
MAX_DOMAIN_OCTETS = 255
ASCII_LETTERS = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
DIGITS = "0123456789"
LOCAL_EXTRA = ".(!#$%&'*+-/=?^_`{|}~)"
DOMAIN_EXTRA = ".-"
def count_char(s, target):
    cnt = 0
    i = 0
    while i < len(s):
        if s[i:i + 1] == target:
            cnt = cnt + 1
        i = i + 1
    return cnt
def char_in(c, allowed):
    i = 0
    while i < len(allowed):
        if allowed[i:i + 1] == c:
            return True
        i = i + 1
    return False
def starts_with_char(s, c):
    return len(s) > 0 and s[0:1] == c
def ends_with_char(s, c):
    return len(s) > 0 and s[len(s) - 1:len(s)] == c
def contains_double_dot(s):
    if len(s) < 2:
        return False
    i = 0
    while i < len(s) - 1:
        if s[i:i + 2] == "..":
            return True
        i = i + 1
    return False
def is_valid_email_address(email):
    if count_char(email, "@") != 1:
        return False
    at_idx = 0
    i = 0
    while i < len(email):
        if email[i:i + 1] == "@":
            at_idx = i
            break
        i = i + 1
    local_part = email[0:at_idx]
    domain = email[at_idx + 1:len(email)]
    if len(local_part) > MAX_LOCAL_PART_OCTETS or len(domain) > MAX_DOMAIN_OCTETS:
        return False
    i = 0
    while i < len(local_part):
        ch = local_part[i:i + 1]
        if not char_in(ch, ASCII_LETTERS + DIGITS + LOCAL_EXTRA):
            return False
        i = i + 1
    if starts_with_char(local_part, ".") or ends_with_char(local_part, ".") or contains_double_dot(local_part):
        return False
    i = 0
    while i < len(domain):
        ch = domain[i:i + 1]
        if not char_in(ch, ASCII_LETTERS + DIGITS + DOMAIN_EXTRA):
            return False
        i = i + 1
    if starts_with_char(domain, "-") or ends_with_char(domain, "."):
        return False
    if starts_with_char(domain, ".") or ends_with_char(domain, ".") or contains_double_dot(domain):
        return False
    return True
email_tests = ["simple@example.com", "very.common@example.com", "disposable.style.email.with+symbol@example.com", "other-email-with-hyphen@and.subdomains.example.com", "fully-qualified-domain@example.com", "user.name+tag+sorting@example.com", "x@example.com", "example-indeed@strange-example.com", "test/test@test.com", "123456789012345678901234567890123456789012345678901234567890123@example.com", "admin@mailserver1", "example@s.example", "Abc.example.com", "A@b@c@example.com", "abc@example..com", "a(c)d,e:f;g<h>i[j\\k]l@example.com", "12345678901234567890123456789012345678901234567890123456789012345@example.com", "i.like.underscores@but_its_not_allowed_in_this_part", ""]
idx = 0
while idx < len(email_tests):
    email = email_tests[idx]
    print(_str(is_valid_email_address(email)))
    idx = idx + 1

