# Code generated by Mochi transpiler.
# Version 0.10.65, generated on 2025-08-13 16:39 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _append(lst, v):
    if lst is None:
        lst = []
    lst.append(v)
    return lst


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def split_ws(s):
    res = []
    word = ""
    i = 0
    while i < len(s):
        ch = s[i:i + 1]
        if ch == " ":
            if word != "":
                res = _append(res, word)
                word = ""
        else:
            word = word + ch
        i = i + 1
    if word != "":
        res = _append(res, word)
    return res
def contains(xs, x):
    i = 0
    while i < len(xs):
        if xs[i] == x:
            return True
        i = i + 1
    return False
def unique(xs):
    res = []
    i = 0
    while i < len(xs):
        w = xs[i]
        if not contains(res, w):
            res = _append(res, w)
        i = i + 1
    return res
def insertion_sort(arr):
    a = arr
    i = 1
    while i < len(a):
        key = a[i]
        j = i - 1
        while j >= 0 and a[j] > key:
            a[j + 1] = a[j]
            j = j - 1
        a[j + 1] = key
        i = i + 1
    return a
def join_with_space(xs):
    s = ""
    i = 0
    while i < len(xs):
        if i > 0:
            s = s + " "
        s = s + xs[i]
        i = i + 1
    return s
def remove_duplicates(sentence):
    words = split_ws(sentence)
    uniq = unique(words)
    sorted_words = insertion_sort(uniq)
    return join_with_space(sorted_words)
print(remove_duplicates("Python is great and Java is also great"))
print(remove_duplicates("Python   is      great and Java is also great"))

