# Code generated by Mochi transpiler.
# Version 0.10.65, generated on 2025-08-13 16:39 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _append(lst, v):
    if lst is None:
        lst = []
    lst.append(v)
    return lst


def _str(v):
    if isinstance(v, float):
        if v.is_integer():
            return str(int(v))
        return format(v, ".17g")
    return str(v)

def find_index(xs, x):
    i = 0
    while i < len(xs):
        if xs[i] == x:
            return i
        i = i + 1
    return -1
def get_word_pattern(word):
    w = word.upper()
    letters = []
    numbers = []
    next_num = 0
    res = ""
    i = 0
    while i < len(w):
        ch = w[i]
        idx = find_index(letters, ch)
        num_str = ""
        if idx >= 0:
            num_str = numbers[idx]
        else:
            num_str = _str(next_num)
            letters = _append(letters, ch)
            numbers = _append(numbers, num_str)
            next_num = next_num + 1
        if i > 0:
            res = res + "."
        res = res + num_str
        i = i + 1
    return res
def main():
    print(get_word_pattern(""))
    print(get_word_pattern(" "))
    print(get_word_pattern("pattern"))
    print(get_word_pattern("word pattern"))
    print(get_word_pattern("get word pattern"))
main()

