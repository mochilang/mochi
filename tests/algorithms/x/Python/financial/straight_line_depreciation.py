# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 08:38 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _append(lst, v):
    return (lst or []) + [v]

def straight_line_depreciation(useful_years, purchase_value, residual_value):
    if useful_years < 1:
        panic("Useful years cannot be less than 1")
    if purchase_value < 0.0:
        panic("Purchase value cannot be less than zero")
    if purchase_value < residual_value:
        panic("Purchase value cannot be less than residual value")
    depreciable_cost = purchase_value - residual_value
    annual_expense = depreciable_cost // (1.0 * useful_years)
    expenses = []
    accumulated = 0.0
    period = 0
    while period < useful_years:
        if period != useful_years - 1:
            accumulated = accumulated + annual_expense
            expenses = _append(expenses, annual_expense)
        else:
            end_year_expense = depreciable_cost - accumulated
            expenses = _append(expenses, end_year_expense)
        period = period + 1
    return expenses
print(str(straight_line_depreciation(10, 1100.0, 100.0)))
print(str(straight_line_depreciation(6, 1250.0, 50.0)))
print(str(straight_line_depreciation(4, 1001.0, 0.0)))
print(str(straight_line_depreciation(11, 380.0, 50.0)))
print(str(straight_line_depreciation(1, 4985.0, 100.0)))
