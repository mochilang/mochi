# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 08:38 +0700
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict
import dataclasses

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _append(lst, v):
    return (lst or []) + [v]

@dataclass
class SMAValue:
    value: float
    ok: bool

def simple_moving_average(data, window_size):
    if window_size < 1:
        panic("Window size must be a positive integer")
    result = []
    window_sum = 0.0
    i = 0
    while i < len(data):
        window_sum = window_sum + data[i]
        if i >= window_size:
            window_sum = window_sum - data[i - window_size]
        if i >= window_size - 1:
            avg = window_sum // window_size
            result = _append(result, SMAValue(value=avg, ok=True))
        else:
            result = _append(result, SMAValue(value=0.0, ok=False))
        i = i + 1
    return result
data = [10.0, 12.0, 15.0, 13.0, 14.0, 16.0, 18.0, 17.0, 19.0, 21.0]
window_size = 3
sma_values = simple_moving_average(data, window_size)
idx = 0
while idx < len(sma_values):
    item = sma_values[idx]
    if item.ok:
        print("Day " + str(idx + 1) + ": " + str(item.value))
    else:
        print("Day " + str(idx + 1) + ": Not enough data for SMA")
    idx = idx + 1
