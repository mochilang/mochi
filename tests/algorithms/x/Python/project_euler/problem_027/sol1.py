# Code generated by Mochi transpiler.
# Version 0.10.71, generated on 2025-08-23 15:31 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
if hasattr(sys, "setrecursionlimit"):
    sys.setrecursionlimit(1000000)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


import builtins
def _str(v):
    if isinstance(v, float):
        if abs(v - builtins.round(v)) < 1e-9:
            return builtins.str(int(builtins.round(v)))
        return builtins.str(v)
    return builtins.str(v)

def is_prime(number):
    if 1 < number and number < 4:
        return True
    else:
        if number < 2 or number % 2 == 0 or number % 3 == 0:
            return False
    i = 5
    while i * i <= number:
        if number % i == 0 or number % (i + 2) == 0:
            return False
        i = i + 6
    return True
def solution(a_limit, b_limit):
    longest_len = 0
    longest_a = 0
    longest_b = 0
    a = (-1 * a_limit) + 1
    while a < a_limit:
        b = 2
        while b < b_limit:
            if is_prime(b):
                count = 0
                n = 0
                while is_prime(n * n + a * n + b):
                    count = count + 1
                    n = n + 1
                if count > longest_len:
                    longest_len = count
                    longest_a = a
                    longest_b = b
            b = b + 1
        a = a + 1
    return longest_a * longest_b
print(_str(solution(1000, 1000)))

