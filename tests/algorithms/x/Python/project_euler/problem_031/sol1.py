# Code generated by Mochi transpiler.
# Version 0.10.71, generated on 2025-08-23 15:31 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
if hasattr(sys, "setrecursionlimit"):
    sys.setrecursionlimit(1000000)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


import builtins
def _str(v):
    if isinstance(v, float):
        if abs(v - builtins.round(v)) < 1e-9:
            return builtins.str(int(builtins.round(v)))
        return builtins.str(v)
    return builtins.str(v)

def one_pence():
    return 1
def two_pence(x):
    if x < 0:
        return 0
    return two_pence(x - 2) + one_pence()
def five_pence(x):
    if x < 0:
        return 0
    return five_pence(x - 5) + two_pence(x)
def ten_pence(x):
    if x < 0:
        return 0
    return ten_pence(x - 10) + five_pence(x)
def twenty_pence(x):
    if x < 0:
        return 0
    return twenty_pence(x - 20) + ten_pence(x)
def fifty_pence(x):
    if x < 0:
        return 0
    return fifty_pence(x - 50) + twenty_pence(x)
def one_pound(x):
    if x < 0:
        return 0
    return one_pound(x - 100) + fifty_pence(x)
def two_pound(x):
    if x < 0:
        return 0
    return two_pound(x - 200) + one_pound(x)
def solution(n):
    return two_pound(n)
def main():
    n = int(input())
    print(_str(solution(n)))
main()

