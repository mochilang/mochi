# Code generated by Mochi transpiler.
# Version 0.10.71, generated on 2025-08-23 15:31 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
if hasattr(sys, "setrecursionlimit"):
    sys.setrecursionlimit(1000000)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _append(lst, v):
    if lst is None:
        lst = []
    return lst + [v]


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def solution(pence):
    coins = [1, 2, 5, 10, 20, 50, 100, 200]
    ways = []
    i = 0
    while i <= pence:
        ways = _append(ways, 0)
        i = i + 1
    ways[0] = 1
    idx = 0
    while idx < len(coins):
        coin = coins[idx]
        j = coin
        while j <= pence:
            ways[j] = ways[j] + ways[j - coin]
            j = j + 1
        idx = idx + 1
    return ways[pence]
print(solution(500))
print(solution(200))
print(solution(50))
print(solution(10))

