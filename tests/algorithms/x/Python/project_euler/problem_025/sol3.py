# Code generated by Mochi transpiler.
# Version 0.10.71, generated on 2025-08-23 15:31 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
if hasattr(sys, "setrecursionlimit"):
    sys.setrecursionlimit(1000000)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


import builtins
def _str(v):
    if isinstance(v, float):
        if abs(v - builtins.round(v)) < 1e-9:
            return builtins.str(int(builtins.round(v)))
        return builtins.str(v)
    return builtins.str(v)

def num_digits(x):
    count = 0
    n = x
    while n > 0:
        count = count + 1
        n = n // 10
    return count
def solution(n):
    f1 = 1
    f2 = 1
    index = 2
    while True:
        f = f1 + f2
        f1 = f2
        f2 = f
        index = index + 1
        if num_digits(f) == n:
            break
    return index
print("solution(1000) = " + _str(solution(1000)))
print("solution(100) = " + _str(solution(100)))
print("solution(50) = " + _str(solution(50)))
print("solution(3) = " + _str(solution(3)))

