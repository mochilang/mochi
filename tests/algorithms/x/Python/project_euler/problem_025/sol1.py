# Code generated by Mochi transpiler.
# Version 0.10.71, generated on 2025-08-23 15:31 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
if hasattr(sys, "setrecursionlimit"):
    sys.setrecursionlimit(1000000)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


import builtins
def _str(v):
    if isinstance(v, float):
        if abs(v - builtins.round(v)) < 1e-9:
            return builtins.str(int(builtins.round(v)))
        return builtins.str(v)
    return builtins.str(v)

def fibonacci(n):
    if n == 1:
        return 0
    if n == 2:
        return 1
    a = 0
    b = 1
    i = 2
    while i <= n:
        c = a + b
        a = b
        b = c
        i = i + 1
    return b
def fibonacci_digits_index(n):
    digits = 0
    index = 2
    while digits < n:
        index = index + 1
        fib = fibonacci(index)
        digits = len(_str(fib))
    return index
def solution(n):
    return fibonacci_digits_index(n)
def main():
    n = int(input())
    print(solution(n))
main()

