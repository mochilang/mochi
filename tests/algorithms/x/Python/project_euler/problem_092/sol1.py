# Code generated by Mochi transpiler.
# Version 0.10.63, generated on 2025-08-11 16:20 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


def _str(v):
    if isinstance(v, float):
        if v.is_integer():
            return str(int(v))
        return format(v, ".15g")
    return str(v)

def next_number(number):
    n = number
    total = 0
    while n > 0:
        d = n % 10
        total = total + d * d
        n = n // 10
    return total
def chain(number):
    n = number
    while n != 1 and n != 89:
        n = next_number(n)
    return n == 1
def solution(limit):
    count = 0
    i = 1
    while i < limit:
        if not chain(i):
            count = count + 1
        i = i + 1
    return count
print(_str(next_number(44)))
print(_str(next_number(10)))
print(_str(next_number(32)))
print(_str(chain(10)))
print(_str(chain(58)))
print(_str(chain(1)))
print(_str(solution(100)))
print(_str(solution(1000)))

