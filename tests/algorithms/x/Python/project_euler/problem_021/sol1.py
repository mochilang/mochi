# Code generated by Mochi transpiler.
# Version 0.10.71, generated on 2025-08-23 15:31 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
if hasattr(sys, "setrecursionlimit"):
    sys.setrecursionlimit(1000000)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

def int_sqrt(n):
    r = 0
    while (r + 1) * (r + 1) <= n:
        r = r + 1
    return r
def sum_of_divisors(n):
    total = 0
    root = int_sqrt(n)
    i = 1
    while i <= root:
        if n % i == 0:
            if i * i == n:
                total = total + i
            else:
                total = total + i + (n // i)
        i = i + 1
    return total - n
def solution(limit):
    total = 0
    i = 1
    while i < limit:
        s = sum_of_divisors(i)
        if s != i and sum_of_divisors(s) == i:
            total = total + i
        i = i + 1
    return total
print(solution(10000))
print(solution(5000))
print(solution(1000))
print(solution(100))
print(solution(50))

