# Code generated by Mochi transpiler.
# Version 0.10.66, generated on 2025-08-15 09:59 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def insertion_sort(a):
    i = 1
    while i < len(a):
        key = a[i]
        j = i - 1
        while j >= 0 and a[j] > key:
            a[j + 1] = a[j]
            j = j - 1
        a[j + 1] = key
        i = i + 1
    return a
def minimum_waiting_time(queries):
    n = len(queries)
    if n == 0 or n == 1:
        return 0
    sorted_ = insertion_sort(queries)
    total = 0
    i = 0
    while i < n:
        total = total + sorted_[i] * (n - i - 1)
        i = i + 1
    return total
print(minimum_waiting_time([3, 2, 1, 2, 6]))
print(minimum_waiting_time([3, 2, 1]))
print(minimum_waiting_time([1, 2, 3, 4]))
print(minimum_waiting_time([5, 5, 5, 5]))
print(minimum_waiting_time([]))

