# Code generated by Mochi transpiler.
# Version 0.10.60, generated on 2025-08-08 10:32 +0700
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict
import dataclasses

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise Exception(msg)


def _append(lst, v):
    return (lst or []) + [v]

@dataclass
class GasStation:
    gas_quantity: int
    cost: int

def get_gas_stations(gas_quantities, costs):
    stations = []
    i = 0
    while i < len(gas_quantities):
        stations = _append(stations, GasStation(gas_quantity=gas_quantities[i], cost=costs[i]))
        i = i + 1
    return stations
def can_complete_journey(gas_stations):
    total_gas = 0
    total_cost = 0
    i = 0
    while i < len(gas_stations):
        total_gas = total_gas + gas_stations[i].gas_quantity
        total_cost = total_cost + gas_stations[i].cost
        i = i + 1
    if total_gas < total_cost:
        return -1
    start = 0
    net = 0
    i = 0
    while i < len(gas_stations):
        station = gas_stations[i]
        net = net + station.gas_quantity - station.cost
        if net < 0:
            start = i + 1
            net = 0
        i = i + 1
    return start
example1 = get_gas_stations([1, 2, 3, 4, 5], [3, 4, 5, 1, 2])
print(str(can_complete_journey(example1)))
example2 = get_gas_stations([2, 3, 4], [3, 4, 3])
print(str(can_complete_journey(example2)))
