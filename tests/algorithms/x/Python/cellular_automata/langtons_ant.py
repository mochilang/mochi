# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 20:44 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _append(lst, v):
    if lst is None:
        return [v]
    return lst + [v]


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def create_board(width, height):
    board = []
    i = 0
    while i < height:
        row = []
        j = 0
        while j < width:
            row = _append(row, True)
            j = j + 1
        board = _append(board, row)
        i = i + 1
    return board
def move_ant(board, x, y, direction):
    if board[x][y]:
        direction = (direction + 1) % 4
    else:
        direction = (direction + 3) % 4
    old_x = x
    old_y = y
    if direction == 0:
        x = x - 1
    else:
        if direction == 1:
            y = y + 1
        else:
            if direction == 2:
                x = x + 1
            else:
                y = y - 1
    board[old_x][old_y] = not board[old_x][old_y]
    return [x, y, direction]
def langtons_ant(width, height, steps):
    board = create_board(width, height)
    x = width // 2
    y = height // 2
    dir = 3
    s = 0
    while s < steps:
        state = move_ant(board, x, y, dir)
        x = state[0]
        y = state[1]
        dir = state[2]
        s = s + 1
    return board
# test first move
board = langtons_ant(2, 2, 1)
assert board == [[True, True], [True, False]]
# test second move
board = langtons_ant(2, 2, 2)
assert board == [[True, False], [True, False]]
