# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 20:44 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _append(lst, v):
    if lst is None:
        return [v]
    return lst + [v]

GLIDER = [[0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]
BLINKER = [[0, 1, 0], [0, 1, 0], [0, 1, 0]]
def new_generation(cells):
    rows = len(cells)
    cols = len(cells[0])
    next = []
    i = 0
    while i < rows:
        row = []
        j = 0
        while j < cols:
            count = 0
            if i > 0 and j > 0:
                count = count + cells[i - 1][j - 1]
            if i > 0:
                count = count + cells[i - 1][j]
            if i > 0 and j < cols - 1:
                count = count + cells[i - 1][j + 1]
            if j > 0:
                count = count + cells[i][j - 1]
            if j < cols - 1:
                count = count + cells[i][j + 1]
            if i < rows - 1 and j > 0:
                count = count + cells[i + 1][j - 1]
            if i < rows - 1:
                count = count + cells[i + 1][j]
            if i < rows - 1 and j < cols - 1:
                count = count + cells[i + 1][j + 1]
            alive = cells[i][j] == 1
            if (alive and count >= 2 and count <= 3) or (not alive and count == 3):
                row = _append(row, 1)
            else:
                row = _append(row, 0)
            j = j + 1
        next = _append(next, row)
        i = i + 1
    return next
def generate_generations(cells, frames):
    result = []
    i = 0
    current = cells
    while i < frames:
        result = _append(result, current)
        current = new_generation(current)
        i = i + 1
    return result
def main():
    frames = generate_generations(GLIDER, 4)
    i = 0
    while i < len(frames):
        print(frames[i])
        i = i + 1
main()
