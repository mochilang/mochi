# Code generated by Mochi transpiler.
# Version 0.10.61, generated on 2025-08-08 17:42 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


def _append(lst, v):
    return (lst or []) + [v]


def _str(v):
    if isinstance(v, float) and v.is_integer():
        return str(int(v))
    return str(v)

def exp_approx(x):
    sum = 1.0
    term = 1.0
    i = 1
    while i <= 20:
        term = term * x / (float(i))
        sum = sum + term
        i = i + 1
    return sum
def sigmoid(vector):
    result = []
    i = 0
    while i < len(vector):
        v = vector[i]
        s = 1.0 / (1.0 + exp_approx(-v))
        result = _append(result, s)
        i = i + 1
    return result
def swish(vector, beta):
    result = []
    i = 0
    while i < len(vector):
        v = vector[i]
        s = 1.0 / (1.0 + exp_approx(-beta * v))
        result = _append(result, v * s)
        i = i + 1
    return result
def sigmoid_linear_unit(vector):
    return swish(vector, 1.0)
def approx_equal(a, b, eps):
    diff = (a - b if a > b else b - a)
    return diff < eps
def approx_equal_list(a, b, eps):
    if len(a) != len(b):
        return False
    i = 0
    while i < len(a):
        if not approx_equal(a[i], b[i], eps):
            return False
        i = i + 1
    return True
def test_swish():
    v = [-1.0, 1.0, 2.0]
    eps = 0.001
    if not approx_equal_list(sigmoid(v), [0.26894142, 0.73105858, 0.88079708], eps):
        panic("sigmoid incorrect")
    if not approx_equal_list(sigmoid_linear_unit(v), [-0.26894142, 0.73105858, 1.76159416], eps):
        panic("sigmoid_linear_unit incorrect")
    if not approx_equal_list(swish(v, 2.0), [-0.11920292, 0.88079708, 1.96402758], eps):
        panic("swish incorrect")
    if not approx_equal_list(swish([-2.0], 1.0), [-0.23840584], eps):
        panic("swish with parameter 1 incorrect")
def main():
    test_swish()
    print(_str(sigmoid([-1.0, 1.0, 2.0])))
    print(_str(sigmoid_linear_unit([-1.0, 1.0, 2.0])))
    print(_str(swish([-1.0, 1.0, 2.0], 2.0)))
    print(_str(swish([-2.0], 1.0)))
main()
