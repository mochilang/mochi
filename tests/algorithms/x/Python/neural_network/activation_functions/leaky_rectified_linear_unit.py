# Code generated by Mochi transpiler.
# Version 0.10.61, generated on 2025-08-08 17:42 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


def _append(lst, v):
    return (lst or []) + [v]


def _str(v):
    if isinstance(v, float) and v.is_integer():
        return str(int(v))
    return str(v)

def leaky_rectified_linear_unit(vector, alpha):
    result = []
    i = 0
    while i < len(vector):
        x = vector[i]
        if x > 0.0:
            result = _append(result, x)
        else:
            result = _append(result, alpha * x)
        i = i + 1
    return result
vector1 = [2.3, 0.6, -2.0, -3.8]
result1 = leaky_rectified_linear_unit(vector1, 0.3)
print(_str(result1))
vector2 = [-9.2, -0.3, 0.45, -4.56]
result2 = leaky_rectified_linear_unit(vector2, 0.067)
print(_str(result2))
