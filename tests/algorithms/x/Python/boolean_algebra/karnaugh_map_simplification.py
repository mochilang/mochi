# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 20:44 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _append(lst, v):
    if lst is None:
        return [v]
    return lst + [v]

def row_string(row):
    s = "["
    i = 0
    while i < len(row):
        s = s + str(row[i])
        if i < len(row) - 1:
            s = s + ", "
        i = i + 1
    s = s + "]"
    return s
def print_kmap(kmap):
    i = 0
    while i < len(kmap):
        print(row_string(kmap[i]))
        i = i + 1
def join_terms(terms):
    if len(terms) == 0:
        return ""
    res = terms[0]
    i = 1
    while i < len(terms):
        res = res + " + " + terms[i]
        i = i + 1
    return res
def simplify_kmap(board):
    terms = []
    a = 0
    while a < len(board):
        row = board[a]
        b = 0
        while b < len(row):
            item = row[b]
            if item != 0:
                term = (("A" if a != 0 else "A'")) + (("B" if b != 0 else "B'"))
                terms = _append(terms, term)
            b = b + 1
        a = a + 1
    expr = join_terms(terms)
    return expr
kmap = [[0, 1], [1, 1]]
print_kmap(kmap)
print("Simplified Expression:")
print(simplify_kmap(kmap))
