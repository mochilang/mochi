# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 08:38 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _append(lst, v):
    return (lst or []) + [v]


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def make_list(len, value):
    arr = []
    i = 0
    while i < len:
        arr = _append(arr, value)
        i = i + 1
    return arr
def min_int(a, b):
    if a < b:
        return a
    return b
def min_steps_to_one(number):
    if number <= 0:
        return 0
    table = make_list(number + 1, number + 1)
    table[1] = 0
    i = 1
    while i < number:
        table[i + 1] = min_int(table[i + 1], table[i] + 1)
        if i * 2 <= number:
            table[i * 2] = min_int(table[i * 2], table[i] + 1)
        if i * 3 <= number:
            table[i * 3] = min_int(table[i * 3], table[i] + 1)
        i = i + 1
    return table[number]
print(str(min_steps_to_one(10)))
print(str(min_steps_to_one(15)))
print(str(min_steps_to_one(6)))
