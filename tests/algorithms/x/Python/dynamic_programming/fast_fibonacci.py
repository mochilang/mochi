# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 08:38 +0700
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict
import dataclasses

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

@dataclass
class FibPair:
    fn: int
    fn1: int

def _fib(n):
    if n == 0:
        return FibPair(fn=0, fn1=1)
    half = _fib(n // 2)
    a = half.fn
    b = half.fn1
    c = a * (b * 2 - a)
    d = a * a + b * b
    if n % 2 == 0:
        return FibPair(fn=c, fn1=d)
    return FibPair(fn=d, fn1=c + d)
def fibonacci(n):
    if n < 0:
        panic("Negative arguments are not supported")
    res = _fib(n)
    return res.fn
i = 0
while i < 13:
    print(str(fibonacci(i)))
    i = i + 1
