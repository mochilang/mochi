# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 08:38 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _append(lst, v):
    return (lst or []) + [v]


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def copy_list(src):
    result = []
    i = 0
    while i < len(src):
        result = _append(result, src[i])
        i = i + 1
    return result
def subset_combinations(elements, n):
    r = len(elements)
    if n > r:
        return []
    dp = []
    i = 0
    while i <= r:
        dp = _append(dp, [])
        i = i + 1
    dp[0] = _append(dp[0], [])
    i = 1
    while i <= r:
        j = i
        while j > 0:
            prevs = dp[j - 1]
            k = 0
            while k < len(prevs):
                prev = prevs[k]
                comb = copy_list(prev)
                comb = _append(comb, elements[i - 1])
                dp[j] = _append(dp[j], comb)
                k = k + 1
            j = j - 1
        i = i + 1
    return dp[n]
print(str(subset_combinations([10, 20, 30, 40], 2)))
