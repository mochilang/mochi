# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 08:38 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _append(lst, v):
    return (lst or []) + [v]

def bitwise_and(a, b):
    result = 0
    bit = 1
    x = a
    y = b
    while x > 0 or y > 0:
        abit = x % 2
        bbit = y % 2
        if abit == 1 and bbit == 1:
            result = result + bit
        x = x // 2
        y = y // 2
        bit = bit * 2
    return result
def list_of_submasks(mask):
    if mask <= 0:
        panic("mask needs to be positive integer, your input " + str(mask))
    all_submasks = []
    submask = mask
    while submask != 0:
        all_submasks = _append(all_submasks, submask)
        submask = bitwise_and(submask - 1, mask)
    return all_submasks
print(str(list_of_submasks(15)))
print(str(list_of_submasks(13)))
