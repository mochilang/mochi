# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 08:38 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _append(lst, v):
    return (lst or []) + [v]


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def longest_common_substring(text1, text2):
    if len(text1) == 0 or len(text2) == 0:
        return ""
    m = len(text1)
    n = len(text2)
    dp = []
    i = 0
    while i < m + 1:
        row = []
        j = 0
        while j < n + 1:
            row = _append(row, 0)
            j = j + 1
        dp = _append(dp, row)
        i = i + 1
    end_pos = 0
    max_len = 0
    ii = 1
    while ii <= m:
        jj = 1
        while jj <= n:
            if text1[ii - 1:ii] == text2[jj - 1:jj]:
                dp[ii][jj] = 1 + dp[ii - 1][jj - 1]
                if dp[ii][jj] > max_len:
                    max_len = dp[ii][jj]
                    end_pos = ii
            jj = jj + 1
        ii = ii + 1
    return text1[end_pos - max_len:end_pos]
print(longest_common_substring("abcdef", "xabded"))
print("\n")
print(longest_common_substring("zxabcdezy", "yzabcdezx"))
