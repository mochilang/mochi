# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 08:38 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _append(lst, v):
    return (lst or []) + [v]


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def copy_list(xs):
    res = []
    i = 0
    while i < len(xs):
        res = _append(res, xs[i])
        i = i + 1
    return res
def longest_subsequence(arr):
    n = len(arr)
    lis = []
    i = 0
    while i < n:
        single = []
        single = _append(single, arr[i])
        lis = _append(lis, single)
        i = i + 1
    i = 1
    while i < n:
        prev = 0
        while prev < i:
            if arr[prev] <= arr[i] and len(lis[prev]) + 1 > len(lis[i]):
                temp = copy_list(lis[prev])
                temp2 = _append(temp, arr[i])
                lis[i] = temp2
            prev = prev + 1
        i = i + 1
    result = []
    i = 0
    while i < n:
        if len(lis[i]) > len(result):
            result = lis[i]
        i = i + 1
    return result
def main():
    print(str(longest_subsequence([10, 22, 9, 33, 21, 50, 41, 60, 80])))
    print(str(longest_subsequence([4, 8, 7, 5, 1, 12, 2, 3, 9])))
    print(str(longest_subsequence([9, 8, 7, 6, 5, 7])))
    print(str(longest_subsequence([28, 26, 12, 23, 35, 39])))
    print(str(longest_subsequence([1, 1, 1])))
    print(str(longest_subsequence([])))
main()
