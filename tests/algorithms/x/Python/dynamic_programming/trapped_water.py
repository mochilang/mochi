# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 08:38 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _append(lst, v):
    return (lst or []) + [v]


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def make_list(len, value):
    arr = []
    i = 0
    while i < len:
        arr = _append(arr, value)
        i = i + 1
    return arr
def trapped_rainwater(heights):
    if len(heights) == 0:
        return 0
    i = 0
    while i < len(heights):
        if heights[i] < 0:
            panic("No height can be negative")
        i = i + 1
    length = len(heights)
    left_max = make_list(length, 0)
    left_max[0] = heights[0]
    i = 1
    while i < length:
        if heights[i] > left_max[i - 1]:
            left_max[i] = heights[i]
        else:
            left_max[i] = left_max[i - 1]
        i = i + 1
    right_max = make_list(length, 0)
    last = length - 1
    right_max[last] = heights[last]
    i = last - 1
    while i >= 0:
        if heights[i] > right_max[i + 1]:
            right_max[i] = heights[i]
        else:
            right_max[i] = right_max[i + 1]
        i = i - 1
    total = 0
    i = 0
    while i < length:
        left = left_max[i]
        right = right_max[i]
        smaller = (left if left < right else right)
        total = total + (smaller - heights[i])
        i = i + 1
    return total
print(str(trapped_rainwater([0, 1, 0, 2, 1, 0, 1, 3, 2, 1, 2, 1])))
print(str(trapped_rainwater([7, 1, 5, 3, 6, 4])))
