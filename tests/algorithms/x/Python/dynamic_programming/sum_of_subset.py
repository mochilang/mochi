# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 08:38 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _append(lst, v):
    return (lst or []) + [v]


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def create_bool_matrix(rows, cols):
    matrix = []
    i = 0
    while i <= rows:
        row = []
        j = 0
        while j <= cols:
            row = _append(row, False)
            j = j + 1
        matrix = _append(matrix, row)
        i = i + 1
    return matrix
def is_sum_subset(arr, required_sum):
    arr_len = len(arr)
    subset = create_bool_matrix(arr_len, required_sum)
    i = 0
    while i <= arr_len:
        subset[i][0] = True
        i = i + 1
    j = 1
    while j <= required_sum:
        subset[0][j] = False
        j = j + 1
    i = 1
    while i <= arr_len:
        j = 1
        while j <= required_sum:
            if arr[i - 1] > j:
                subset[i][j] = subset[i - 1][j]
            if arr[i - 1] <= j:
                subset[i][j] = subset[i - 1][j] or subset[i - 1][j - arr[i - 1]]
            j = j + 1
        i = i + 1
    return subset[arr_len][required_sum]
print(("True" if is_sum_subset([2, 4, 6, 8], 5) else "False"))
print(("True" if is_sum_subset([2, 4, 6, 8], 14) else "False"))
