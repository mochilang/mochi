# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 08:38 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _append(lst, v):
    return (lst or []) + [v]


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def make_bool_list(n):
    row = []
    i = 0
    while i < n:
        row = _append(row, False)
        i = i + 1
    return row
def make_bool_matrix(rows, cols):
    matrix = []
    i = 0
    while i < rows:
        matrix = _append(matrix, make_bool_list(cols))
        i = i + 1
    return matrix
def is_match(s, p):
    n = len(s)
    m = len(p)
    dp = make_bool_matrix(n + 1, m + 1)
    dp[0][0] = True
    j = 1
    while j <= m:
        if p[j - 1:j] == "*":
            dp[0][j] = dp[0][j - 1]
        j = j + 1
    i = 1
    while i <= n:
        j2 = 1
        while j2 <= m:
            pc = p[j2 - 1:j2]
            sc = s[i - 1:i]
            if pc == sc or pc == "?":
                dp[i][j2] = dp[i - 1][j2 - 1]
            else:
                if pc == "*":
                    if dp[i - 1][j2] or dp[i][j2 - 1]:
                        dp[i][j2] = True
            j2 = j2 + 1
        i = i + 1
    return dp[n][m]
def print_bool(b):
    if b:
        print(("True" if True else "False"))
    else:
        print(("True" if False else "False"))
print_bool(is_match("abc", "a*c"))
print_bool(is_match("abc", "a*d"))
print_bool(is_match("baaabab", "*****ba*****ab"))
