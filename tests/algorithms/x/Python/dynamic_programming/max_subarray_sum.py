# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 08:38 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

def max_subarray_sum(nums, allow_empty):
    if len(nums) == 0:
        return 0.0
    max_sum = 0.0
    curr_sum = 0.0
    if allow_empty:
        max_sum = 0.0
        curr_sum = 0.0
        i = 0
        while i < len(nums):
            num = nums[i]
            temp = curr_sum + num
            curr_sum = (temp if temp > 0.0 else 0.0)
            if curr_sum > max_sum:
                max_sum = curr_sum
            i = i + 1
    else:
        max_sum = nums[0]
        curr_sum = nums[0]
        i = 1
        while i < len(nums):
            num = nums[i]
            temp = curr_sum + num
            curr_sum = (temp if temp > num else num)
            if curr_sum > max_sum:
                max_sum = curr_sum
            i = i + 1
    return max_sum
print(str(max_subarray_sum([2.0, 8.0, 9.0], False)))
print(str(max_subarray_sum([0.0, 0.0], False)))
print(str(max_subarray_sum([-1.0, 0.0, 1.0], False)))
print(str(max_subarray_sum([1.0, 2.0, 3.0, 4.0, -2.0], False)))
print(str(max_subarray_sum([-2.0, 1.0, -3.0, 4.0, -1.0, 2.0, 1.0, -5.0, 4.0], False)))
print(str(max_subarray_sum([2.0, 3.0, -9.0, 8.0, -2.0], False)))
print(str(max_subarray_sum([-2.0, -3.0, -1.0, -4.0, -6.0], False)))
print(str(max_subarray_sum([-2.0, -3.0, -1.0, -4.0, -6.0], True)))
empty = []
print(str(max_subarray_sum(empty, False)))
