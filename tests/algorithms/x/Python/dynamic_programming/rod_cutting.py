# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 08:38 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _append(lst, v):
    return (lst or []) + [v]


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def enforce_args(n, prices):
    if n < 0:
        panic("n must be non-negative")
    if n > len(prices):
        panic("price list is shorter than n")
def bottom_up_cut_rod(n, prices):
    enforce_args(n, prices)
    max_rev = []
    i = 0
    while i <= n:
        if i == 0:
            max_rev = _append(max_rev, 0)
        else:
            max_rev = _append(max_rev, -2147483648)
        i = i + 1
    length = 1
    while length <= n:
        best = max_rev[length]
        j = 1
        while j <= length:
            candidate = prices[j - 1] + max_rev[length - j]
            if candidate > best:
                best = candidate
            j = j + 1
        max_rev[length] = best
        length = length + 1
    return max_rev[n]
prices = [1, 5, 8, 9, 10, 17, 17, 20, 24, 30]
print(bottom_up_cut_rod(4, prices))
print(bottom_up_cut_rod(10, prices))
