# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 08:38 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _append(lst, v):
    return (lst or []) + [v]


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def min_partitions(s):
    n = len(s)
    cut = []
    i = 0
    while i < n:
        cut = _append(cut, 0)
        i = i + 1
    pal = []
    i = 0
    while i < n:
        row = []
        j = 0
        while j < n:
            row = _append(row, False)
            j = j + 1
        pal = _append(pal, row)
        i = i + 1
    i = 0
    while i < n:
        mincut = i
        j = 0
        while j <= i:
            if s[i] == s[j] and (i - j < 2 or pal[j + 1][i - 1]):
                pal[j][i] = True
                if j == 0:
                    mincut = 0
                else:
                    candidate = cut[j - 1] + 1
                    if candidate < mincut:
                        mincut = candidate
            j = j + 1
        cut[i] = mincut
        i = i + 1
    return cut[n - 1]
print(min_partitions("aab"))
print(min_partitions("aaa"))
print(min_partitions("ababbbabbababa"))
