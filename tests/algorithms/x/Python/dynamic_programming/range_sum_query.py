# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 08:38 +0700
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict
import dataclasses

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _append(lst, v):
    return (lst or []) + [v]

@dataclass
class Query:
    left: int
    right: int

def prefix_sum(arr, queries):
    dp = []
    i = 0
    while i < len(arr):
        if i == 0:
            dp = _append(dp, arr[0])
        else:
            dp = _append(dp, dp[i - 1] + arr[i])
        i = i + 1
    result = []
    j = 0
    while j < len(queries):
        q = queries[j]
        sum = dp[q.right]
        if q.left > 0:
            sum = sum - dp[q.left - 1]
        result = _append(result, sum)
        j = j + 1
    return result
arr1 = [1, 4, 6, 2, 61, 12]
queries1 = [Query(left=2, right=5), Query(left=1, right=5), Query(left=3, right=4)]
print(str(prefix_sum(arr1, queries1)))
arr2 = [4, 2, 1, 6, 3]
queries2 = [Query(left=3, right=4), Query(left=1, right=3), Query(left=0, right=2)]
print(str(prefix_sum(arr2, queries2)))
