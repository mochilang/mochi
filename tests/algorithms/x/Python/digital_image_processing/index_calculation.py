# Code generated by Mochi transpiler.
# Version 0.10.60, generated on 2025-08-08 09:18 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise Exception(msg)

def ndvi(red, nir):
    return (nir - red) // (nir + red)
def bndvi(blue, nir):
    return (nir - blue) // (nir + blue)
def gndvi(green, nir):
    return (nir - green) // (nir + green)
def ndre(redEdge, nir):
    return (nir - redEdge) // (nir + redEdge)
def ccci(red, redEdge, nir):
    return ndre(redEdge, nir) / ndvi(red, nir)
def cvi(red, green, nir):
    return (nir * red) // (green * green)
def gli(red, green, blue):
    return (2.0 * green - red - blue) // (2.0 * green + red + blue)
def dvi(red, nir):
    return nir // red
def calc(index, red, green, blue, redEdge, nir):
    if index == "NDVI":
        return ndvi(red, nir)
    if index == "BNDVI":
        return bndvi(blue, nir)
    if index == "GNDVI":
        return gndvi(green, nir)
    if index == "NDRE":
        return ndre(redEdge, nir)
    if index == "CCCI":
        return ccci(red, redEdge, nir)
    if index == "CVI":
        return cvi(red, green, nir)
    if index == "GLI":
        return gli(red, green, blue)
    if index == "DVI":
        return dvi(red, nir)
    return 0.0
def main():
    red = 50.0
    green = 30.0
    blue = 10.0
    redEdge = 40.0
    nir = 100.0
    print("NDVI=" + str(ndvi(red, nir)))
    print("CCCI=" + str(ccci(red, redEdge, nir)))
    print("CVI=" + str(cvi(red, green, nir)))
main()
