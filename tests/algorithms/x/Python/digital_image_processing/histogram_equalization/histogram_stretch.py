# Code generated by Mochi transpiler.
# Version 0.10.60, generated on 2025-08-08 09:18 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise Exception(msg)


def _append(lst, v):
    return (lst or []) + [v]


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def make_list(n, value):
    res = []
    i = 0
    while i < n:
        res = _append(res, value)
        i = i + 1
    return res
def histogram_stretch(image):
    height = len(image)
    width = len(image[0])
    hist = make_list(256, 0)
    i = 0
    while i < height:
        j = 0
        while j < width:
            val = image[i][j]
            hist[val] = hist[val] + 1
            j = j + 1
        i = i + 1
    mapping = make_list(256, 0)
    cumulative = 0
    total = height * width
    h = 0
    while h < 256:
        cumulative = cumulative + hist[h]
        mapping[h] = (255 * cumulative) // total
        h = h + 1
    i = 0
    while i < height:
        j = 0
        while j < width:
            val = image[i][j]
            image[i][j] = mapping[val]
            j = j + 1
        i = i + 1
    return image
def print_image(image):
    i = 0
    while i < len(image):
        print(image[i])
        i = i + 1
img = [[52, 55, 61], [59, 79, 61], [85, 76, 62]]
result = histogram_stretch(img)
print_image(result)
