# Code generated by Mochi transpiler.
# Version 0.10.60, generated on 2025-08-08 10:08 +0700
import json
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise Exception(msg)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())


def _append(lst, v):
    return (lst or []) + [v]

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
try:
    def clamp(value):
        if value < 0:
            return 0
        if value > 255:
            return 255
        return value
    def change_brightness(img, level):
        if level < (-255) or level > 255:
            panic("level must be between -255 and 255")
        result = []
        i = 0
        while i < len(img):
            row_res = []
            j = 0
            while j < len(img[i]):
                row_res = _append(row_res, clamp(img[i][j] + level))
                j = j + 1
            result = _append(result, row_res)
            i = i + 1
        return result
    sample = [[100, 150], [200, 250]]
    print(change_brightness(sample, 30))
    print(change_brightness(sample, -60))
finally:
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
