# Code generated by Mochi transpiler.
# Version 0.10.66, generated on 2025-08-16 14:44 +0700
import json
import time

try:
    import resource
except Exception:
    resource = None
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
sys.setrecursionlimit(1000000)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def factorial(n):
    if n < 0:
        panic("factorial() not defined for negative values")
    value = 1
    i = 1
    while i <= n:
        value = value * i
        i = i + 1
    return value
def factorial_recursive(n):
    if n < 0:
        panic("factorial() not defined for negative values")
    if n <= 1:
        return 1
    return n * factorial_recursive(n - 1)
def test_factorial():
    i = 0
    while i <= 10:
        if factorial(i) != factorial_recursive(i):
            panic("mismatch between factorial and factorial_recursive")
        i = i + 1
    if factorial(6) != 720:
        panic("factorial(6) should be 720")
def main():
    if resource:
        _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    else:
        _bench_mem_start = 0
    _bench_start = _now()
    try:
        test_factorial()
        print(factorial(6))
    finally:
        _bench_end = _now()
        if resource:
            _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
        else:
            _bench_mem_end = 0
        print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()

