# Code generated by Mochi transpiler.
# Version 0.10.61, generated on 2025-08-08 17:13 +0700
import json
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())


def _append(lst, v):
    return (lst or []) + [v]


def _str(v):
    if isinstance(v, float) and v.is_integer():
        return str(int(v))
    return str(v)

def expApprox(x):
    neg = False
    y = x
    if x < 0.0:
        neg = True
        y = -x
    term = 1.0
    sum = 1.0
    n = 1
    while n < 30:
        term = term * y / (float(n))
        sum = sum + term
        n = n + 1
    if neg:
        return 1.0 / sum
    return sum
def tangent_hyperbolic(vector):
    result = []
    i = 0
    while i < len(vector):
        x = vector[i]
        t = (2.0 / (1.0 + expApprox(-2.0 * x))) - 1.0
        result = _append(result, t)
        i = i + 1
    return result
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    try:
        v1 = [1.0, 5.0, 6.0, -0.67]
        v2 = [8.0, 10.0, 2.0, -0.98, 13.0]
        print(_str(tangent_hyperbolic(v1)))
        print(_str(tangent_hyperbolic(v2)))
    finally:
        _bench_end = _now()
        _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
        print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
