# Code generated by Mochi transpiler.
# Version 0.10.61, generated on 2025-08-08 16:09 +0700
import json
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())


def _str(v):
    if isinstance(v, float) and v.is_integer():
        return str(int(v))
    return str(v)

PI = 3.141592653589793
def radians(degree):
    return degree / (180.0 / PI)
def abs_float(x):
    if x < 0.0:
        return -x
    return x
def almost_equal(a, b):
    return abs_float(a - b) <= 1e-08
def test_radians():
    if not almost_equal(radians(180.0), PI):
        panic("radians 180 failed")
    if not almost_equal(radians(92.0), 1.6057029118347832):
        panic("radians 92 failed")
    if not almost_equal(radians(274.0), 4.782202150464463):
        panic("radians 274 failed")
    if not almost_equal(radians(109.82), 1.9167205845401725):
        panic("radians 109.82 failed")
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    try:
        test_radians()
        print(_str(radians(180.0)))
        print(_str(radians(92.0)))
        print(_str(radians(274.0)))
        print(_str(radians(109.82)))
    finally:
        _bench_end = _now()
        _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
        print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
