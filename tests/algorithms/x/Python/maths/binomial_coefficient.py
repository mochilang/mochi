# Code generated by Mochi transpiler.
# Version 0.10.66, generated on 2025-08-16 11:48 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
sys.setrecursionlimit(1000000)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


def _append(lst, v):
    if lst is None:
        lst = []
    return lst + [v]


def _str(v):
    if isinstance(v, float):
        if abs(v - round(v)) < 1e-9:
            return str(float(round(v)))
        return format(v, ".15g")
    return str(v)


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def binomial_coefficient(n, r):
    if n < 0 or r < 0:
        panic("n and r must be non-negative integers")
    if n == 0 or r == 0:
        return 1
    c = []
    for _ in range(0, (r + 1)):
        c = _append(c, 0)
    c[0] = 1
    i = 1
    while i <= n:
        j = (i if i < r else r)
        while j > 0:
            c[j] = c[j] + c[j - 1]
            j = j - 1
        i = i + 1
    return c[r]
print(_str(binomial_coefficient(10, 5)))

