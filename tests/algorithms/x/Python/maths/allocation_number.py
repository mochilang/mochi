# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 09:58 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())


def _append(lst, v):
    return (lst or []) + [v]

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
try:
    def allocation_num(number_of_bytes, partitions):
        if partitions <= 0:
            panic("partitions must be a positive number!")
        if partitions > number_of_bytes:
            panic("partitions can not > number_of_bytes!")
        bytes_per_partition = number_of_bytes // partitions
        allocation_list = []
        i = 0
        while i < partitions:
            start_bytes = i * bytes_per_partition + 1
            end_bytes = (number_of_bytes if i == partitions - 1 else (i + 1) * bytes_per_partition)
            allocation_list = _append(allocation_list, str(start_bytes) + "-" + str(end_bytes))
            i = i + 1
        return allocation_list
    print(str(allocation_num(16647, 4)))
    print(str(allocation_num(50000, 5)))
finally:
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
