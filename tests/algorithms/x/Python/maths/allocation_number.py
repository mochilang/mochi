# Code generated by Mochi transpiler.
# Version 0.10.66, generated on 2025-08-16 11:48 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
sys.setrecursionlimit(1000000)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


def _append(lst, v):
    if lst is None:
        lst = []
    return lst + [v]


def _str(v):
    if isinstance(v, float):
        if abs(v - round(v)) < 1e-9:
            return str(float(round(v)))
        return format(v, ".15g")
    return str(v)

def allocation_num(number_of_bytes, partitions):
    if partitions <= 0:
        panic("partitions must be a positive number!")
    if partitions > number_of_bytes:
        panic("partitions can not > number_of_bytes!")
    bytes_per_partition = number_of_bytes // partitions
    allocation_list = []
    i = 0
    while i < partitions:
        start_bytes = i * bytes_per_partition + 1
        end_bytes = (number_of_bytes if i == partitions - 1 else (i + 1) * bytes_per_partition)
        allocation_list = _append(allocation_list, _str(start_bytes) + "-" + _str(end_bytes))
        i = i + 1
    return allocation_list
print(_str(allocation_num(16647, 4)))
print(_str(allocation_num(50000, 5)))

