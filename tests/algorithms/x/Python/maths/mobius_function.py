# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 10:31 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise Exception(msg)


def _append(lst, v):
    return (lst or []) + [v]


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def primeFactors(n):
    i = 2
    factors = []
    while ((i * i) <= n):
        if ((n % i) == 0):
            factors = _append(factors, i)
            n = (n // i)
        else:
            i = (i + 1)
    if (n > 1):
        factors = _append(factors, n)
    return factors
def isSquareFree(factors):
    seen = {}
    for f in factors:
        if (f in seen):
            return False
        seen[f] = True
    return True
def mobius(n):
    factors = primeFactors(n)
    if (isSquareFree(factors)):
        return (1 if ((len(factors) % 2) == 0) else (-1))
    return 0
print(mobius(24))
print(mobius(-1))
