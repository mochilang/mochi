# Code generated by Mochi transpiler.
# Version 0.10.66, generated on 2025-08-16 11:48 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
sys.setrecursionlimit(1000000)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _str(v):
    if isinstance(v, float):
        if abs(v - round(v)) < 1e-9:
            return str(float(round(v)))
        return format(v, ".15g")
    return str(v)

def binary_multiply(a, b):
    x = a
    y = b
    res = 0
    while y > 0:
        if y % 2 == 1:
            res = res + x
        x = x + x
        y = int((y // 2))
    return res
def binary_mod_multiply(a, b, modulus):
    x = a
    y = b
    res = 0
    while y > 0:
        if y % 2 == 1:
            res = ((res % modulus) + (x % modulus)) % modulus
        x = x + x
        y = int((y // 2))
    return res % modulus
def main():
    print(_str(binary_multiply(2, 3)))
    print(_str(binary_multiply(5, 0)))
    print(_str(binary_mod_multiply(2, 3, 5)))
    print(_str(binary_mod_multiply(10, 5, 13)))
main()

