# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 09:58 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def binary_multiply(a, b):
    x = a
    y = b
    res = 0
    while y > 0:
        if y % 2 == 1:
            res = res + x
        x = x + x
        y = int((y // 2))
    return res
def binary_mod_multiply(a, b, modulus):
    x = a
    y = b
    res = 0
    while y > 0:
        if y % 2 == 1:
            res = ((res % modulus) + (x % modulus)) % modulus
        x = x + x
        y = int((y // 2))
    return res % modulus
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    try:
        print(str(binary_multiply(2, 3)))
        print(str(binary_multiply(5, 0)))
        print(str(binary_mod_multiply(2, 3, 5)))
        print(str(binary_mod_multiply(10, 5, 13)))
    finally:
        _bench_end = _now()
        _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
        print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
