# Code generated by Mochi transpiler.
# Version 0.10.61, generated on 2025-08-08 16:09 +0700
import json
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def signum(num):
    if num < 0.0:
        return -1
    if num > 0.0:
        return 1
    return 0
def test_signum():
    if signum(5.0) != 1:
        panic("signum(5) failed")
    if signum(-5.0) != (-1):
        panic("signum(-5) failed")
    if signum(0.0) != 0:
        panic("signum(0) failed")
    if signum(10.5) != 1:
        panic("signum(10.5) failed")
    if signum(-10.5) != (-1):
        panic("signum(-10.5) failed")
    if signum(1e-06) != 1:
        panic("signum(1e-6) failed")
    if signum(-1e-06) != (-1):
        panic("signum(-1e-6) failed")
    if signum(1.23456789e+08) != 1:
        panic("signum(123456789) failed")
    if signum(-1.23456789e+08) != (-1):
        panic("signum(-123456789) failed")
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    try:
        test_signum()
        print(signum(12.0))
        print(signum(-12.0))
        print(signum(0.0))
    finally:
        _bench_end = _now()
        _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
        print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
