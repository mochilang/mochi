# Code generated by Mochi transpiler.
# Version 0.10.66, generated on 2025-08-16 11:48 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
sys.setrecursionlimit(1000000)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)

def abs(x):
    if x < 0.0:
        return -x
    return x
def factorial(n):
    if n < 0:
        panic("factorial is undefined for negative numbers")
    result = 1
    i = 2
    while i <= n:
        result = result * i
        i = i + 1
    return result
def pow_float(base, exp):
    result = 1.0
    i = 0
    while i < exp:
        result = result * base
        i = i + 1
    return result
def binomial_distribution(successes, trials, prob):
    if successes > trials:
        panic("successes must be lower or equal to trials")
    if trials < 0 or successes < 0:
        panic("the function is defined for non-negative integers")
    if not (0.0 < prob and prob < 1.0):
        panic("prob has to be in range of 1 - 0")
    probability = pow_float(prob, successes) * pow_float(1.0 - prob, trials - successes)
    numerator = float(factorial(trials))
    denominator = float((factorial(successes) * factorial(trials - successes)))
    coefficient = numerator / denominator
    return probability * coefficient
# test example1
result = binomial_distribution(3, 5, 0.7)
assert abs(result - 0.3087) < 1e-07
# test example2
result = binomial_distribution(2, 4, 0.5)
assert abs(result - 0.375) < 1e-07

