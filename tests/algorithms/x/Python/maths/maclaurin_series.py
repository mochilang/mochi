# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 09:58 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

PI = 3.141592653589793
def floor(x):
    i = int(x)
    if (float(i)) > x:
        i = i - 1
    return float(i)
def pow(x, n):
    result = 1.0
    i = 0
    while i < n:
        result = result * x
        i = i + 1
    return result
def factorial(n):
    result = 1.0
    i = 2
    while i <= n:
        result = result * (float(i))
        i = i + 1
    return result
def maclaurin_sin(theta, accuracy):
    t = theta
    div = floor(t // (2.0 * PI))
    t = t - 2.0 * div * PI
    sum = 0.0
    r = 0
    while r < accuracy:
        power = 2 * r + 1
        sign = (1.0 if r % 2 == 0 else -1.0)
        sum = sum + sign * pow(t, power) / factorial(power)
        r = r + 1
    return sum
def maclaurin_cos(theta, accuracy):
    t = theta
    div = floor(t // (2.0 * PI))
    t = t - 2.0 * div * PI
    sum = 0.0
    r = 0
    while r < accuracy:
        power = 2 * r
        sign = (1.0 if r % 2 == 0 else -1.0)
        sum = sum + sign * pow(t, power) / factorial(power)
        r = r + 1
    return sum
print(str(maclaurin_sin(10.0, 30)))
print(str(maclaurin_sin(-10.0, 30)))
print(str(maclaurin_sin(10.0, 15)))
print(str(maclaurin_sin(-10.0, 15)))
print(str(maclaurin_cos(5.0, 30)))
print(str(maclaurin_cos(-5.0, 30)))
print(str(maclaurin_cos(10.0, 15)))
print(str(maclaurin_cos(-10.0, 15)))
