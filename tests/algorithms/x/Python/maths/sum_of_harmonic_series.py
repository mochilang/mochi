# Code generated by Mochi transpiler.
# Version 0.10.61, generated on 2025-08-08 17:13 +0700
import json
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())


def _append(lst, v):
    return (lst or []) + [v]

def sum_of_harmonic_progression(first_term, common_difference, number_of_terms):
    arithmetic_progression = [1.0 / first_term]
    term = 1.0 / first_term
    i = 0
    while i < number_of_terms - 1:
        term = term + common_difference
        arithmetic_progression = _append(arithmetic_progression, term)
        i = i + 1
    total = 0.0
    j = 0
    while j < len(arithmetic_progression):
        total = total + (1.0 / arithmetic_progression[j])
        j = j + 1
    return total
def abs_val(num):
    if num < 0.0:
        return -num
    return num
def test_sum_of_harmonic_progression():
    result1 = sum_of_harmonic_progression(0.5, 2.0, 2)
    if abs_val(result1 - 0.75) > 1e-07:
        panic("test1 failed")
    result2 = sum_of_harmonic_progression(0.2, 5.0, 5)
    if abs_val(result2 - 0.45666666666666667) > 1e-07:
        panic("test2 failed")
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    try:
        test_sum_of_harmonic_progression()
        print(sum_of_harmonic_progression(0.5, 2.0, 2))
    finally:
        _bench_end = _now()
        _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
        print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
