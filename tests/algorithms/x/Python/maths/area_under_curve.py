# Code generated by Mochi transpiler.
# Version 0.10.66, generated on 2025-08-16 11:48 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
sys.setrecursionlimit(1000000)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _str(v):
    if isinstance(v, float):
        if abs(v - round(v)) < 1e-9:
            return str(float(round(v)))
        return format(v, ".15g")
    return str(v)

def abs_float(x):
    if x < 0.0:
        return -x
    else:
        return x
def trapezoidal_area(f, x_start, x_end, steps):
    step = (x_end - x_start) / (float(steps))
    x1 = x_start
    fx1 = f(x_start)
    area = 0.0
    i = 0
    while i < steps:
        x2 = x1 + step
        fx2 = f(x2)
        area = area + abs_float(fx2 + fx1) * step / 2.0
        x1 = x2
        fx1 = fx2
        i = i + 1
    return area
def f(x):
    return x * x * x + x * x
print("f(x) = x^3 + x^2")
print("The area between the curve, x = -5, x = 5 and the x axis is:")
i = 10
while i <= 100000:
    result = trapezoidal_area(f, -5.0, 5.0, i)
    print("with " + _str(i) + " steps: " + _str(result))
    i = i * 10

