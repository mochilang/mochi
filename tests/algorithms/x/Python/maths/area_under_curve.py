# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 09:58 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
try:
    def abs_float(x):
        if x < 0.0:
            return -x
        else:
            return x
    def trapezoidal_area(f, x_start, x_end, steps):
        step = (x_end - x_start) // (float(steps))
        x1 = x_start
        fx1 = f(x_start)
        area = 0.0
        i = 0
        while i < steps:
            x2 = x1 + step
            fx2 = f(x2)
            area = area + abs_float(fx2 + fx1) * step / 2.0
            x1 = x2
            fx1 = fx2
            i = i + 1
        return area
    def f(x):
        return x * x * x + x * x
    print("f(x) = x^3 + x^2")
    print("The area between the curve, x = -5, x = 5 and the x axis is:")
    i = 10
    while i <= 100000:
        result = trapezoidal_area(f, -5.0, 5.0, i)
        print("with " + str(i) + " steps: " + str(result))
        i = i * 10
finally:
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
