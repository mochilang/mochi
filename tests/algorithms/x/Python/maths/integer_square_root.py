# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 09:58 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def integer_square_root(num):
    if num < 0:
        panic("num must be non-negative integer")
    if num < 2:
        return num
    left_bound = 0
    right_bound = num // 2
    while left_bound <= right_bound:
        mid = left_bound + (right_bound - left_bound) // 2
        mid_squared = mid * mid
        if mid_squared == num:
            return mid
        if mid_squared < num:
            left_bound = mid + 1
        else:
            right_bound = mid - 1
    return right_bound
def test_integer_square_root():
    expected = [0, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 4, 4]
    i = 0
    while i < len(expected):
        result = integer_square_root(i)
        if result != expected[i]:
            panic("test failed at index " + str(i))
        i = i + 1
    if integer_square_root(625) != 25:
        panic("sqrt of 625 incorrect")
    if integer_square_root(2147483647) != 46340:
        panic("sqrt of max int incorrect")
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    try:
        test_integer_square_root()
        print(str(integer_square_root(625)))
    finally:
        _bench_end = _now()
        _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
        print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
