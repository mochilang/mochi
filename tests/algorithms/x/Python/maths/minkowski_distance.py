# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 10:31 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise Exception(msg)

def abs_val(x):
    if x < 0.0:
        return -x
    return x
def pow_float(base, exp):
    result = 1.0
    i = 0
    while i < exp:
        result = result * base
        i = i + 1
    return result
def nth_root(value, n):
    if value == 0.0:
        return 0.0
    x = value // (float(n))
    i = 0
    while i < 20:
        num = (float((n - 1))) * x + value / pow_float(x, n - 1)
        x = num // (float(n))
        i = i + 1
    return x
def minkowski_distance(point_a, point_b, order):
    if order < 1:
        panic("The order must be greater than or equal to 1.")
    if len(point_a) != len(point_b):
        panic("Both points must have the same dimension.")
    total = 0.0
    idx = 0
    while idx < len(point_a):
        diff = abs_val(point_a[idx] - point_b[idx])
        total = total + pow_float(diff, order)
        idx = idx + 1
    return nth_root(total, order)
def test_minkowski():
    if abs_val(minkowski_distance([1.0, 1.0], [2.0, 2.0], 1) - 2.0) > 0.0001:
        panic("minkowski_distance test1 failed")
    if abs_val(minkowski_distance([1.0, 2.0, 3.0, 4.0], [5.0, 6.0, 7.0, 8.0], 2) - 8.0) > 0.0001:
        panic("minkowski_distance test2 failed")
def main():
    test_minkowski()
    print(minkowski_distance([5.0], [0.0], 3))
main()
