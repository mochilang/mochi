# Code generated by Mochi transpiler.
# Version 0.10.61, generated on 2025-08-08 16:09 +0700
import json
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())


def _str(v):
    if isinstance(v, float) and v.is_integer():
        return str(int(v))
    return str(v)

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
try:
    def perfect_square(num):
        if num < 0:
            return False
        i = 0
        while i * i <= num:
            if i * i == num:
                return True
            i = i + 1
        return False
    def perfect_square_binary_search(n):
        if n < 0:
            return False
        left = 0
        right = n
        while left <= right:
            mid = (left + right) / 2
            sq = mid * mid
            if sq == n:
                return True
            if sq > n:
                right = mid - 1
            else:
                left = mid + 1
        return False
    print(_str(perfect_square(9)))
    print(_str(perfect_square(10)))
    print(_str(perfect_square_binary_search(16)))
    print(_str(perfect_square_binary_search(10)))
    print(_str(perfect_square_binary_search(-1)))
finally:
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
