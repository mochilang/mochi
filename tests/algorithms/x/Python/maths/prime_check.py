# Code generated by Mochi transpiler.
# Version 0.10.61, generated on 2025-08-08 16:09 +0700
import json
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())


def _str(v):
    if isinstance(v, float) and v.is_integer():
        return str(int(v))
    return str(v)

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
try:
    def is_prime(number):
        if number < 0:
            panic("is_prime() only accepts positive integers")
        if (1 < number) and (number < 4):
            return True
        else:
            if (number < 2) or (number % 2 == 0) or (number % 3 == 0):
                return False
        i = 5
        while i * i <= number:
            if (number % i == 0) or (number % (i + 2) == 0):
                return False
            i = i + 6
        return True
    print(_str(is_prime(0)))
    print(_str(is_prime(1)))
    print(_str(is_prime(2)))
    print(_str(is_prime(3)))
    print(_str(is_prime(27)))
    print(_str(is_prime(87)))
    print(_str(is_prime(563)))
    print(_str(is_prime(2999)))
    print(_str(is_prime(67483)))
finally:
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
