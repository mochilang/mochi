# Code generated by Mochi transpiler.
# Version 0.10.66, generated on 2025-08-16 11:48 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
sys.setrecursionlimit(1000000)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


def _str(v):
    if isinstance(v, float):
        if abs(v - round(v)) < 1e-9:
            return str(float(round(v)))
        return format(v, ".15g")
    return str(v)

def aliquot_sum(n):
    if n <= 0:
        panic("Input must be positive")
    total = 0
    divisor = 1
    while divisor <= (n // 2):
        if n % divisor == 0:
            total = total + divisor
        divisor = divisor + 1
    return total
print(_str(aliquot_sum(15)))
print(_str(aliquot_sum(6)))
print(_str(aliquot_sum(12)))
print(_str(aliquot_sum(1)))
print(_str(aliquot_sum(19)))

