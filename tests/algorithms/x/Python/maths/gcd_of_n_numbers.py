# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 09:58 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
try:
    def gcd(a, b):
        x = a
        y = b
        while y != 0:
            r = x % y
            x = y
            y = r
        if x < 0:
            return -x
        return x
    def get_greatest_common_divisor(nums):
        if len(nums) == 0:
            panic("at least one number is required")
        g = nums[0]
        if g <= 0:
            panic("numbers must be integer and greater than zero")
        i = 1
        while i < len(nums):
            n = nums[i]
            if n <= 0:
                panic("numbers must be integer and greater than zero")
            g = gcd(g, n)
            i = i + 1
        return g
    print(str(get_greatest_common_divisor([18, 45])))
    print(str(get_greatest_common_divisor([23, 37])))
    print(str(get_greatest_common_divisor([2520, 8350])))
    print(str(get_greatest_common_divisor([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])))
finally:
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
