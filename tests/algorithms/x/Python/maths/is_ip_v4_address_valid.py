# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 09:58 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())


def _append(lst, v):
    return (lst or []) + [v]

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
try:
    def split_by_dot(s):
        res = []
        current = ""
        i = 0
        while i < len(s):
            c = s[i]
            if c == ".":
                res = _append(res, current)
                current = ""
            else:
                current = current + c
            i = i + 1
        res = _append(res, current)
        return res
    def is_digit_str(s):
        if len(s) == 0:
            return False
        i = 0
        while i < len(s):
            c = s[i]
            if c < "0" or c > "9":
                return False
            i = i + 1
        return True
    def parse_decimal(s):
        value = 0
        i = 0
        while i < len(s):
            c = s[i]
            value = value * 10 + (int(c))
            i = i + 1
        return value
    def is_ip_v4_address_valid(ip):
        octets = split_by_dot(ip)
        if len(octets) != 4:
            return False
        i = 0
        while i < 4:
            oct = octets[i]
            if not is_digit_str(oct):
                return False
            number = parse_decimal(oct)
            if len(str(number)) != len(oct):
                return False
            if number < 0 or number > 255:
                return False
            i = i + 1
        return True
    print(str(is_ip_v4_address_valid("192.168.0.23")))
    print(str(is_ip_v4_address_valid("192.256.15.8")))
    print(str(is_ip_v4_address_valid("172.100.0.8")))
    print(str(is_ip_v4_address_valid("255.256.0.256")))
    print(str(is_ip_v4_address_valid("1.2.33333333.4")))
    print(str(is_ip_v4_address_valid("1.2.-3.4")))
    print(str(is_ip_v4_address_valid("1.2.3")))
    print(str(is_ip_v4_address_valid("1.2.3.4.5")))
    print(str(is_ip_v4_address_valid("1.2.A.4")))
    print(str(is_ip_v4_address_valid("0.0.0.0")))
    print(str(is_ip_v4_address_valid("1.2.3.")))
    print(str(is_ip_v4_address_valid("1.2.3.05")))
finally:
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
