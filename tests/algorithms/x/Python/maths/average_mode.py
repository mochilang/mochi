# Code generated by Mochi transpiler.
# Version 0.10.66, generated on 2025-08-16 11:48 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
sys.setrecursionlimit(1000000)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _append(lst, v):
    if lst is None:
        lst = []
    return lst + [v]


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def contains_int(xs, x):
    i = 0
    while i < len(xs):
        if xs[i] == x:
            return True
        i = i + 1
    return False
def contains_string(xs, x):
    i = 0
    while i < len(xs):
        if xs[i] == x:
            return True
        i = i + 1
    return False
def count_int(xs, x):
    cnt = 0
    i = 0
    while i < len(xs):
        if xs[i] == x:
            cnt = cnt + 1
        i = i + 1
    return cnt
def count_string(xs, x):
    cnt = 0
    i = 0
    while i < len(xs):
        if xs[i] == x:
            cnt = cnt + 1
        i = i + 1
    return cnt
def sort_int(xs):
    arr = xs
    i = 0
    while i < len(arr):
        j = i + 1
        while j < len(arr):
            if arr[j] < arr[i]:
                tmp = arr[i]
                arr[i] = arr[j]
                arr[j] = tmp
            j = j + 1
        i = i + 1
    return arr
def sort_string(xs):
    arr = xs
    i = 0
    while i < len(arr):
        j = i + 1
        while j < len(arr):
            if arr[j] < arr[i]:
                tmp = arr[i]
                arr[i] = arr[j]
                arr[j] = tmp
            j = j + 1
        i = i + 1
    return arr
def mode_int(lst):
    if len(lst) == 0:
        return []
    counts = []
    i = 0
    while i < len(lst):
        counts = _append(counts, count_int(lst, lst[i]))
        i = i + 1
    max_count = 0
    i = 0
    while i < len(counts):
        if counts[i] > max_count:
            max_count = counts[i]
        i = i + 1
    modes = []
    i = 0
    while i < len(lst):
        if counts[i] == max_count:
            v = lst[i]
            if not contains_int(modes, v):
                modes = _append(modes, v)
        i = i + 1
    return sort_int(modes)
def mode_string(lst):
    if len(lst) == 0:
        return []
    counts = []
    i = 0
    while i < len(lst):
        counts = _append(counts, count_string(lst, lst[i]))
        i = i + 1
    max_count = 0
    i = 0
    while i < len(counts):
        if counts[i] > max_count:
            max_count = counts[i]
        i = i + 1
    modes = []
    i = 0
    while i < len(lst):
        if counts[i] == max_count:
            v = lst[i]
            if not contains_string(modes, v):
                modes = _append(modes, v)
        i = i + 1
    return sort_string(modes)
print(mode_int([2, 3, 4, 5, 3, 4, 2, 5, 2, 2, 4, 2, 2, 2]))
print(mode_int([3, 4, 5, 3, 4, 2, 5, 2, 2, 4, 4, 2, 2, 2]))
print(mode_int([3, 4, 5, 3, 4, 2, 5, 2, 2, 4, 4, 4, 2, 2, 4, 2]))
print(mode_string(["x", "y", "y", "z"]))
print(mode_string(["x", "x", "y", "y", "z"]))

