# Code generated by Mochi transpiler.
# Version 0.10.61, generated on 2025-08-08 15:42 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise Exception(msg)


def _append(lst, v):
    return (lst or []) + [v]

def gcd(a, b):
    x = a
    y = b
    while y != 0:
        t = x % y
        x = y
        y = t
    if x < 0:
        return -x
    return x
def proper_fractions(den):
    if den < 0:
        panic("The Denominator Cannot be less than 0")
    res = []
    n = 1
    while n < den:
        if gcd(n, den) == 1:
            res = _append(res, str(n) + "/" + str(den))
        n = n + 1
    return res
def test_proper_fractions():
    a = proper_fractions(10)
    if a != ["1/10", "3/10", "7/10", "9/10"]:
        panic("test 10 failed")
    b = proper_fractions(5)
    if b != ["1/5", "2/5", "3/5", "4/5"]:
        panic("test 5 failed")
    c = proper_fractions(0)
    if c != []:
        panic("test 0 failed")
def main():
    test_proper_fractions()
    print(str(proper_fractions(10)))
    print(str(proper_fractions(5)))
    print(str(proper_fractions(0)))
main()
