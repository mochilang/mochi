# Code generated by Mochi transpiler.
# Version 0.10.61, generated on 2025-08-08 16:09 +0700
import json
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())


def _str(v):
    if isinstance(v, float) and v.is_integer():
        return str(int(v))
    return str(v)

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
try:
    def fx(x, a):
        return x * x - a
    def fx_derivative(x):
        return 2.0 * x
    def get_initial_point(a):
        start = 2.0
        while start <= a:
            start = start * start
        return start
    def abs_float(x):
        if x < 0.0:
            return -x
        return x
    def square_root_iterative(a, max_iter, tolerance):
        if a < 0.0:
            panic("math domain error")
        value = get_initial_point(a)
        i = 0
        while i < max_iter:
            prev_value = value
            value = value - fx(value, a) / fx_derivative(value)
            if abs_float(prev_value - value) < tolerance:
                return value
            i = i + 1
        return value
    r1 = square_root_iterative(4.0, 9999, 1e-14)
    print(_str(r1))
    r2 = square_root_iterative(3.2, 9999, 1e-14)
    print(_str(r2))
    r3 = square_root_iterative(140.0, 9999, 1e-14)
    print(_str(r3))
finally:
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
