# Code generated by Mochi transpiler.
# Version 0.10.61, generated on 2025-08-08 15:42 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise Exception(msg)

def abs_float(x):
    if x < 0.0:
        return -x
    else:
        return x
def bisection(f, a, b):
    start = a
    end = b
    if f(a) == 0.0:
        return a
    if f(b) == 0.0:
        return b
    if f(a) * f(b) > 0.0:
        panic("could not find root in given interval.")
    mid = start + (end - start) / 2.0
    while abs_float(start - mid) > 1e-07:
        fmid = f(mid)
        if fmid == 0.0:
            return mid
        if fmid * f(start) < 0.0:
            end = mid
        else:
            start = mid
        mid = start + (end - start) / 2.0
    return mid
def f(x):
    return x * x * x - 2.0 * x - 5.0
def main():
    print(str(bisection(f, 1.0, 1000.0)))
main()
