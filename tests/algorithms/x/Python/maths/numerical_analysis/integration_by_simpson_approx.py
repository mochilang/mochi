# Code generated by Mochi transpiler.
# Version 0.10.61, generated on 2025-08-08 15:42 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise Exception(msg)

N_STEPS = 1000
def floor(x):
    i = int(x)
    if (float(i)) > x:
        i = i - 1
    return float(i)
def pow10(n):
    p = 1.0
    i = 0
    while i < n:
        p = p * 10.0
        i = i + 1
    return p
def round(x, n):
    m = pow10(n)
    return floor(x * m + 0.5) / m
def simpson_integration(f, a, b, precision):
    if precision <= 0:
        panic("precision should be positive")
    h = (b - a) / (float(N_STEPS))
    result = f(a) + f(b)
    i = 1
    while i < N_STEPS:
        x = a + h * (float(i))
        if i % 2 == 1:
            result = result + 4.0 * f(x)
        else:
            result = result + 2.0 * f(x)
        i = i + 1
    result = result * (h / 3.0)
    r = round(result, precision)
    return r
def square(x):
    return x * x
print(str(simpson_integration(square, 1.0, 2.0, 3)))
print(str(simpson_integration(square, 3.45, 3.2, 1)))
