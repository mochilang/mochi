# Code generated by Mochi transpiler.
# Version 0.10.66, generated on 2025-08-16 11:48 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
sys.setrecursionlimit(1000000)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _str(v):
    if isinstance(v, float):
        if abs(v - round(v)) < 1e-9:
            return str(float(round(v)))
        return format(v, ".15g")
    return str(v)


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def bubble_sort(nums):
    arr = nums
    n = len(arr)
    i = 0
    while i < n:
        j = 0
        while j < n - 1:
            a = arr[j]
            b = arr[j + 1]
            if a > b:
                arr[j] = b
                arr[j + 1] = a
            j = j + 1
        i = i + 1
    return arr
def median(nums):
    sorted_list = bubble_sort(nums)
    length = len(sorted_list)
    mid_index = length // 2
    if length % 2 == 0:
        return (float((sorted_list[mid_index] + sorted_list[mid_index - 1]))) / 2.0
    else:
        return float(sorted_list[mid_index])
print(_str(median([0])))
print(_str(median([4, 1, 3, 2])))
print(_str(median([2, 70, 6, 50, 20, 8, 4])))

