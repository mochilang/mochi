# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 09:58 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())


def _concat(a, b):
    if a is None:
        return b
    if b is None:
        return a
    return a + b


def _append(lst, v):
    return (lst or []) + [v]

def reverse(xs):
    res = []
    i = len(xs) - 1
    while i >= 0:
        res = _append(res, xs[i])
        i = i - 1
    return res
def factors_of_a_number(num):
    facs = []
    if num < 1:
        return facs
    small = []
    large = []
    i = 1
    while i * i <= num:
        if num % i == 0:
            small = _append(small, i)
            d = num // i
            if d != i:
                large = _append(large, d)
        i = i + 1
    facs = _concat(small, reverse(large))
    return facs
def run_tests():
    if factors_of_a_number(1) != [1]:
        panic("case1 failed")
    if factors_of_a_number(5) != [1, 5]:
        panic("case2 failed")
    if factors_of_a_number(24) != [1, 2, 3, 4, 6, 8, 12, 24]:
        panic("case3 failed")
    if factors_of_a_number(-24) != []:
        panic("case4 failed")
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    try:
        run_tests()
        print(str(factors_of_a_number(24)))
    finally:
        _bench_end = _now()
        _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
        print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
