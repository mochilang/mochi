# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 09:58 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def floor(x):
    i = int(x)
    if (float(i)) > x:
        i = i - 1
    return float(i)
def pow10(n):
    p = 1.0
    i = 0
    while i < n:
        p = p * 10.0
        i = i + 1
    return p
def round(x, n):
    m = pow10(n)
    return floor(x * m + 0.5) / m
def decimal_isolate(number, digit_amount):
    whole = int(number)
    frac = number - (float(whole))
    if digit_amount > 0:
        return round(frac, digit_amount)
    return frac
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    try:
        print(str(decimal_isolate(1.53, 0)))
        print(str(decimal_isolate(35.345, 1)))
        print(str(decimal_isolate(35.345, 2)))
        print(str(decimal_isolate(35.345, 3)))
        print(str(decimal_isolate(-14.789, 3)))
        print(str(decimal_isolate(0.0, 2)))
        print(str(decimal_isolate(-14.123, 1)))
        print(str(decimal_isolate(-14.123, 2)))
        print(str(decimal_isolate(-14.123, 3)))
    finally:
        _bench_end = _now()
        _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
        print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
