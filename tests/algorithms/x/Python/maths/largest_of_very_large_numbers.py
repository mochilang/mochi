# Code generated by Mochi transpiler.
# Version 0.10.62, generated on 2025-08-09 10:42 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


def _str(v):
    if isinstance(v, float):
        if v.is_integer():
            return str(int(v))
        return format(v, ".15g")
    return str(v)

def ln(x):
    t = (x - 1.0) / (x + 1.0)
    term = t
    sum = 0.0
    k = 1
    while k <= 99:
        sum = sum + term / (float(k))
        term = term * t * t
        k = k + 2
    return 2.0 * sum
def log10(x):
    return ln(x) / ln(10.0)
def absf(x):
    if x < 0.0:
        return -x
    return x
def res(x, y):
    if x == 0:
        return 0.0
    if y == 0:
        return 1.0
    if x < 0:
        panic("math domain error")
    return (float(y)) * log10(float(x))
def test_res():
    if absf(res(5, 7) - 4.892790030352132) > 1e-07:
        panic("res(5,7) failed")
    if res(0, 5) != 0.0:
        panic("res(0,5) failed")
    if res(3, 0) != 1.0:
        panic("res(3,0) failed")
def compare(x1, y1, x2, y2):
    r1 = res(x1, y1)
    r2 = res(x2, y2)
    if r1 > r2:
        return "Largest number is " + _str(x1) + " ^ " + _str(y1)
    if r2 > r1:
        return "Largest number is " + _str(x2) + " ^ " + _str(y2)
    return "Both are equal"
test_res()
print(compare(5, 7, 4, 8))

