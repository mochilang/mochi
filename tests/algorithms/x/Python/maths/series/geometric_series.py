# Code generated by Mochi transpiler.
# Version 0.10.61, generated on 2025-08-08 16:09 +0700
import json
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())


def _append(lst, v):
    return (lst or []) + [v]

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
try:
    def geometric_series(nth_term, start_term_a, common_ratio_r):
        n = int(nth_term)
        if n <= 0 or start_term_a == 0.0 or common_ratio_r == 0.0:
            return []
        series = []
        current = start_term_a
        i = 0
        while i < n:
            series = _append(series, current)
            current = current * common_ratio_r
            i = i + 1
        return series
    print(geometric_series(4.0, 2.0, 2.0))
    print(geometric_series(4.0, 2.0, -2.0))
    print(geometric_series(4.0, -2.0, 2.0))
    print(geometric_series(-4.0, 2.0, 2.0))
    print(geometric_series(0.0, 100.0, 500.0))
    print(geometric_series(1.0, 1.0, 1.0))
finally:
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
