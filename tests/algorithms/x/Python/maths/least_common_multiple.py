# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 09:58 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
try:
    def gcd(a, b):
        x = (a if a >= 0 else -a)
        y = (b if b >= 0 else -b)
        while y != 0:
            temp = x % y
            x = y
            y = temp
        return x
    def lcm_slow(a, b):
        max = (a if a >= b else b)
        multiple = max
        while (multiple % a != 0) or (multiple % b != 0):
            multiple = multiple + max
        return multiple
    def lcm_fast(a, b):
        return (a // gcd(a, b)) * b
    print(str(lcm_slow(5, 2)))
    print(str(lcm_slow(12, 76)))
    print(str(lcm_fast(5, 2)))
    print(str(lcm_fast(12, 76)))
finally:
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
