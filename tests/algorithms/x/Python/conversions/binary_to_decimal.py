# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 22:12 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

def trim(s):
    start = 0
    while start < len(s):
        ch = s[start:start + 1]
        if ch != " " and ch != "\n" and ch != "\t" and ch != "\r":
            break
        start = start + 1
    end = len(s)
    while end > start:
        ch = s[end - 1:end]
        if ch != " " and ch != "\n" and ch != "\t" and ch != "\r":
            break
        end = end - 1
    return s[start:end]
def bin_to_decimal(bin_string):
    trimmed = trim(bin_string)
    if trimmed == "":
        panic("Empty string was passed to the function")
    is_negative = False
    s = trimmed
    if s[0:1] == "-":
        is_negative = True
        s = s[1:len(s)]
    i = 0
    while i < len(s):
        c = s[i:i + 1]
        if c != "0" and c != "1":
            panic("Non-binary value was passed to the function")
        i = i + 1
    decimal_number = 0
    i = 0
    while i < len(s):
        c = s[i:i + 1]
        digit = int(c)
        decimal_number = 2 * decimal_number + digit
        i = i + 1
    if is_negative:
        return -decimal_number
    return decimal_number
print(str(bin_to_decimal("101")))
print(str(bin_to_decimal(" 1010   ")))
print(str(bin_to_decimal("-11101")))
print(str(bin_to_decimal("0")))
