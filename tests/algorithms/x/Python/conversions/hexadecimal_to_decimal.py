# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 22:12 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

def strip(s):
    start = 0
    end = len(s)
    while start < end and s[start:start + 1] == " ":
        start = start + 1
    while end > start and s[end - 1:end] == " ":
        end = end - 1
    return s[start:end]
def hex_digit_value(c):
    if c == "0":
        return 0
    if c == "1":
        return 1
    if c == "2":
        return 2
    if c == "3":
        return 3
    if c == "4":
        return 4
    if c == "5":
        return 5
    if c == "6":
        return 6
    if c == "7":
        return 7
    if c == "8":
        return 8
    if c == "9":
        return 9
    if c == "a" or c == "A":
        return 10
    if c == "b" or c == "B":
        return 11
    if c == "c" or c == "C":
        return 12
    if c == "d" or c == "D":
        return 13
    if c == "e" or c == "E":
        return 14
    if c == "f" or c == "F":
        return 15
    print("Non-hexadecimal value was passed to the function")
    return 0
def hex_to_decimal(hex_string):
    s = strip(hex_string)
    if len(s) == 0:
        print("Empty string was passed to the function")
        return 0
    is_negative = False
    if s[0:1] == "-":
        is_negative = True
        s = s[1:len(s)]
    decimal_number = 0
    i = 0
    while i < len(s):
        c = s[i:i + 1]
        value = hex_digit_value(c)
        decimal_number = 16 * decimal_number + value
        i = i + 1
    if is_negative:
        return -decimal_number
    return decimal_number
def main():
    print(str(hex_to_decimal("a")))
    print(str(hex_to_decimal("12f")))
    print(str(hex_to_decimal("   12f   ")))
    print(str(hex_to_decimal("FfFf")))
    print(str(hex_to_decimal("-Ff")))
main()
