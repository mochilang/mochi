# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 22:12 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

def panic(msg):
    print(msg)
def trim_spaces(s):
    start = 0
    end = len(s) - 1
    while start <= end and s[start:start + 1] == " ":
        start = start + 1
    while end >= start and s[end:end + 1] == " ":
        end = end - 1
    if start > end:
        return ""
    return s[start:end + 1]
def char_to_digit(ch):
    if ch == "0":
        return 0
    if ch == "1":
        return 1
    if ch == "2":
        return 2
    if ch == "3":
        return 3
    if ch == "4":
        return 4
    if ch == "5":
        return 5
    if ch == "6":
        return 6
    if ch == "7":
        return 7
    panic("Non-octal value was passed to the function")
    return 0
def oct_to_decimal(oct_string):
    s = trim_spaces(oct_string)
    if len(s) == 0:
        panic("Empty string was passed to the function")
        return 0
    is_negative = False
    if s[0:1] == "-":
        is_negative = True
        s = s[1:len(s)]
    if len(s) == 0:
        panic("Non-octal value was passed to the function")
        return 0
    decimal_number = 0
    i = 0
    while i < len(s):
        ch = s[i:i + 1]
        digit = char_to_digit(ch)
        decimal_number = 8 * decimal_number + digit
        i = i + 1
    if is_negative:
        decimal_number = -decimal_number
    return decimal_number
def main():
    print(str(oct_to_decimal("1")))
    print(str(oct_to_decimal("-1")))
    print(str(oct_to_decimal("12")))
    print(str(oct_to_decimal(" 12   ")))
    print(str(oct_to_decimal("-45")))
    print(str(oct_to_decimal("0")))
main()
