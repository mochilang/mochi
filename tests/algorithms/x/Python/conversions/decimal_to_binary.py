# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 22:12 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

def decimal_to_binary_iterative(num):
    if num == 0:
        return "0b0"
    negative = False
    n = num
    if n < 0:
        negative = True
        n = -n
    result = ""
    while n > 0:
        result = str(n % 2) + result
        n = n // 2
    if negative:
        return "-0b" + result
    return "0b" + result
def decimal_to_binary_recursive_helper(n):
    if n == 0:
        return "0"
    if n == 1:
        return "1"
    div = n // 2
    mod = n % 2
    return decimal_to_binary_recursive_helper(div) + str(mod)
def decimal_to_binary_recursive(num):
    if num == 0:
        return "0b0"
    if num < 0:
        return "-0b" + decimal_to_binary_recursive_helper(-num)
    return "0b" + decimal_to_binary_recursive_helper(num)
print(decimal_to_binary_iterative(0))
print(decimal_to_binary_iterative(2))
print(decimal_to_binary_iterative(7))
print(decimal_to_binary_iterative(35))
print(decimal_to_binary_iterative(-2))
print(decimal_to_binary_recursive(0))
print(decimal_to_binary_recursive(40))
print(decimal_to_binary_recursive(-40))
