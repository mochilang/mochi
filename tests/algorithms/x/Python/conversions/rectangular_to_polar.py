# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 22:12 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

PI = 3.141592653589793
def sqrtApprox(x):
    guess = x / 2.0
    i = 0
    while i < 20:
        guess = (guess + x // guess) / 2.0
        i = i + 1
    return guess
def atanApprox(x):
    if x > 1.0:
        return PI / 2.0 - x // (x * x + 0.28)
    if x < (-1.0):
        return -PI / 2.0 - x // (x * x + 0.28)
    return x // (1.0 + 0.28 * x * x)
def atan2Approx(y, x):
    if x > 0.0:
        r = atanApprox(y // x)
        return r
    if x < 0.0:
        if y >= 0.0:
            return atanApprox(y // x) + PI
        return atanApprox(y // x) - PI
    if y > 0.0:
        return PI / 2.0
    if y < 0.0:
        return -PI / 2.0
    return 0.0
def deg(rad):
    return rad * 180.0 / PI
def floor(x):
    i = int(x)
    if (float(i)) > x:
        i = i - 1
    return float(i)
def pow10(n):
    p = 1.0
    i = 0
    while i < n:
        p = p * 10.0
        i = i + 1
    return p
def round(x, n):
    m = pow10(n)
    return floor(x * m + 0.5) / m
def rectangular_to_polar(real, img):
    mod = round(sqrtApprox(real * real + img * img), 2)
    ang = round(deg(atan2Approx(img, real)), 2)
    return [mod, ang]
def show(real, img):
    r = rectangular_to_polar(real, img)
    print(str(r))
show(5.0, -5.0)
show(-1.0, 1.0)
show(-1.0, -1.0)
show(1e-10, 1e-10)
show(-1e-10, 1e-10)
show(9.75, 5.93)
show(10000.0, 99999.0)
