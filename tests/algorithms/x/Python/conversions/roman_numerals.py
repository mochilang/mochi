# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 22:12 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

roman_values = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1]
roman_symbols = ["M", "CM", "D", "CD", "C", "XC", "L", "XL", "X", "IX", "V", "IV", "I"]
def char_value(c):
    if c == "I":
        return 1
    if c == "V":
        return 5
    if c == "X":
        return 10
    if c == "L":
        return 50
    if c == "C":
        return 100
    if c == "D":
        return 500
    if c == "M":
        return 1000
    return 0
def roman_to_int(roman):
    total = 0
    i = 0
    while i < len(roman):
        if i + 1 < len(roman) and char_value(roman[i]) < char_value(roman[i + 1]):
            total = total + char_value(roman[i + 1]) - char_value(roman[i])
            i = i + 2
        else:
            total = total + char_value(roman[i])
            i = i + 1
    return total
def int_to_roman(number):
    num = number
    res = ""
    i = 0
    while i < len(roman_values):
        value = roman_values[i]
        symbol = roman_symbols[i]
        factor = num // value
        num = num % value
        j = 0
        while j < factor:
            res = res + symbol
            j = j + 1
        if num == 0:
            break
        i = i + 1
    return res
# test roman_to_int
assert roman_to_int("III") == 3
assert roman_to_int("CLIV") == 154
assert roman_to_int("MIX") == 1009
assert roman_to_int("MMD") == 2500
assert roman_to_int("MMMCMXCIX") == 3999
# test int_to_roman
assert int_to_roman(3) == "III"
assert int_to_roman(154) == "CLIV"
assert int_to_roman(1009) == "MIX"
assert int_to_roman(2500) == "MMD"
assert int_to_roman(3999) == "MMMCMXCIX"
