# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 22:12 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

def rstrip_s(s):
    if len(s) > 0 and s[len(s) - 1] == "s":
        return s[0:len(s) - 1]
    return s
def normalize_alias(u):
    if u == "millimeter":
        return "mm"
    if u == "centimeter":
        return "cm"
    if u == "meter":
        return "m"
    if u == "kilometer":
        return "km"
    if u == "inch":
        return "in"
    if u == "inche":
        return "in"
    if u == "feet":
        return "ft"
    if u == "foot":
        return "ft"
    if u == "yard":
        return "yd"
    if u == "mile":
        return "mi"
    return u
def has_unit(u):
    return u == "mm" or u == "cm" or u == "m" or u == "km" or u == "in" or u == "ft" or u == "yd" or u == "mi"
def from_factor(u):
    if u == "mm":
        return 0.001
    if u == "cm":
        return 0.01
    if u == "m":
        return 1.0
    if u == "km":
        return 1000.0
    if u == "in":
        return 0.0254
    if u == "ft":
        return 0.3048
    if u == "yd":
        return 0.9144
    if u == "mi":
        return 1609.34
    return 0.0
def to_factor(u):
    if u == "mm":
        return 1000.0
    if u == "cm":
        return 100.0
    if u == "m":
        return 1.0
    if u == "km":
        return 0.001
    if u == "in":
        return 39.3701
    if u == "ft":
        return 3.28084
    if u == "yd":
        return 1.09361
    if u == "mi":
        return 0.000621371
    return 0.0
def length_conversion(value, from_type, to_type):
    new_from = normalize_alias(rstrip_s(from_type.lower()))
    new_to = normalize_alias(rstrip_s(to_type.lower()))
    if not has_unit(new_from):
        panic("Invalid 'from_type' value: '" + from_type + "'.\nConversion abbreviations are: mm, cm, m, km, in, ft, yd, mi")
    if not has_unit(new_to):
        panic("Invalid 'to_type' value: '" + to_type + "'.\nConversion abbreviations are: mm, cm, m, km, in, ft, yd, mi")
    return value * from_factor(new_from) * to_factor(new_to)
print(length_conversion(4.0, "METER", "FEET"))
print(length_conversion(1.0, "kilometer", "inch"))
print(length_conversion(2.0, "feet", "meter"))
print(length_conversion(2.0, "centimeter", "millimeter"))
print(length_conversion(4.0, "yard", "kilometer"))
print(length_conversion(3.0, "foot", "inch"))
print(length_conversion(3.0, "mm", "in"))
