# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 08:38 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _append(lst, v):
    return (lst or []) + [v]

def n_choose_k(n, k):
    if k < 0 or k > n:
        return 0.0
    if k == 0 or k == n:
        return 1.0
    result = 1.0
    i = 1
    while i <= k:
        result = result * (1.0 * (n - k + i)) // (1.0 * i)
        i = i + 1
    return result
def pow_float(base, exp):
    result = 1.0
    i = 0
    while i < exp:
        result = result * base
        i = i + 1
    return result
def basis_function(points, t):
    degree = len(points) - 1
    res = []
    i = 0
    while i <= degree:
        coef = n_choose_k(degree, i)
        term = pow_float(1.0 - t, degree - i) * pow_float(t, i)
        res = _append(res, coef * term)
        i = i + 1
    return res
def bezier_point(points, t):
    basis = basis_function(points, t)
    x = 0.0
    y = 0.0
    i = 0
    while i < len(points):
        x = x + basis[i] * points[i][0]
        y = y + basis[i] * points[i][1]
        i = i + 1
    return [x, y]
control = [[1.0, 1.0], [1.0, 2.0]]
print(str(basis_function(control, 0.0)))
print(str(basis_function(control, 1.0)))
print(str(bezier_point(control, 0.0)))
print(str(bezier_point(control, 1.0)))
