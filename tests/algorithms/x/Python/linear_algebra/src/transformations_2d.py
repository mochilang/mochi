# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-07 08:54 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

PI = 3.141592653589793
def floor(x):
    i = int(x)
    if (float(i)) > x:
        i = i - 1
    return float(i)
def modf(x, m):
    return x - floor(x // m) * m
def sin_taylor(angle):
    x = modf(angle, 2.0 * PI)
    if x > PI:
        x = x - 2.0 * PI
    term = x
    sum = x
    i = 1
    while i < 10:
        k1 = 2.0 * (float(i))
        k2 = k1 + 1.0
        term = -term * x * x // (k1 * k2)
        sum = sum + term
        i = i + 1
    return sum
def cos_taylor(angle):
    x = modf(angle, 2.0 * PI)
    if x > PI:
        x = x - 2.0 * PI
    term = 1.0
    sum = 1.0
    i = 1
    while i < 10:
        k1 = 2.0 * (float(i)) - 1.0
        k2 = 2.0 * (float(i))
        term = -term * x * x // (k1 * k2)
        sum = sum + term
        i = i + 1
    return sum
def matrix_to_string(m):
    s = "["
    i = 0
    while i < len(m):
        row = m[i]
        s = s + "["
        j = 0
        while j < len(row):
            s = s + str(row[j])
            if j < len(row) - 1:
                s = s + ", "
            j = j + 1
        s = s + "]"
        if i < len(m) - 1:
            s = s + ", "
        i = i + 1
    s = s + "]"
    return s
def scaling(f):
    return [[f, 0.0], [0.0, f]]
def rotation(angle):
    c = cos_taylor(angle)
    s = sin_taylor(angle)
    return [[c, -s], [s, c]]
def projection(angle):
    c = cos_taylor(angle)
    s = sin_taylor(angle)
    cs = c * s
    return [[c * c, cs], [cs, s * s]]
def reflection(angle):
    c = cos_taylor(angle)
    s = sin_taylor(angle)
    cs = c * s
    return [[2.0 * c - 1.0, 2.0 * cs], [2.0 * cs, 2.0 * s - 1.0]]
print("    scaling(5) = " + matrix_to_string(scaling(5.0)))
print("  rotation(45) = " + matrix_to_string(rotation(45.0)))
print("projection(45) = " + matrix_to_string(projection(45.0)))
print("reflection(45) = " + matrix_to_string(reflection(45.0)))
