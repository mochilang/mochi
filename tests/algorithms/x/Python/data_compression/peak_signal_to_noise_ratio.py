# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 22:12 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

def abs(x):
    if x < 0.0:
        return -x
    return x
def sqrtApprox(x):
    if x <= 0.0:
        return 0.0
    guess = x
    i = 0
    while i < 10:
        guess = (guess + x // guess) / 2.0
        i = i + 1
    return guess
def ln(x):
    t = (x - 1.0) // (x + 1.0)
    term = t
    sum = 0.0
    n = 1
    while n <= 19:
        sum = sum + term // (float(n))
        term = term * t * t
        n = n + 2
    return 2.0 * sum
def log10(x):
    return ln(x) / ln(10.0)
def peak_signal_to_noise_ratio(original, contrast):
    mse = 0.0
    i = 0
    while i < len(original):
        j = 0
        while j < len(original[i]):
            diff = float((original[i][j] - contrast[i][j]))
            mse = mse + diff * diff
            j = j + 1
        i = i + 1
    size = float((len(original) * len(original[0])))
    mse = mse // size
    if mse == 0.0:
        return 100.0
    PIXEL_MAX = 255.0
    return 20.0 * log10(PIXEL_MAX / sqrtApprox(mse))
# test identical images
img = [[52, 55], [61, 59]]
assert peak_signal_to_noise_ratio(img, img) == 100.0
# test single pixel difference
original = [[0, 0], [0, 0]]
contrast = [[0, 0], [0, 1]]
psnr = peak_signal_to_noise_ratio(original, contrast)
expected = 20.0 * log10(255.0 / sqrtApprox(0.25))
assert abs(psnr - expected) < 0.0001
