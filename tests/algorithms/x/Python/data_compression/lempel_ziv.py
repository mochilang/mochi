# Code generated by Mochi transpiler.
# Version 0.10.59, generated on 2025-08-06 22:12 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def to_binary(n):
    if n == 0:
        return "0"
    num = n
    res = ""
    while num > 0:
        bit = num % 2
        res = str(bit) + res
        num = num // 2
    return res
def contains_key_int(m, key):
    for k in list(m.keys()):
        if k == key:
            return True
    return False
def lzw_compress(bits):
    dict = {"0": 0, "1": 1}
    current = ""
    result = ""
    index = 2
    i = 0
    while i < len(bits):
        ch = bits[i]
        candidate = current + ch
        if contains_key_int(dict, candidate):
            current = candidate
        else:
            result = result + to_binary(dict[current])
            dict[candidate] = index
            index = index + 1
            current = ch
        i = i + 1
    if current != "":
        result = result + to_binary(dict[current])
    return result
data = "01001100100111"
print(lzw_compress(data))
