# Code generated by Mochi transpiler.
# Version 0.10.61, generated on 2025-08-08 17:42 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)

def doppler_effect(org_freq, wave_vel, obs_vel, src_vel):
    if wave_vel == src_vel:
        panic("division by zero implies vs=v and observer in front of the source")
    doppler_freq = (org_freq * (wave_vel + obs_vel)) / (wave_vel - src_vel)
    if doppler_freq <= 0.0:
        panic("non-positive frequency implies vs>v or v0>v (in the opposite direction)")
    return doppler_freq
def absf(x):
    if x < 0.0:
        return -x
    return x
def almost_equal(a, b, tol):
    return absf(a - b) <= tol
def test_doppler_effect():
    if not almost_equal(doppler_effect(100.0, 330.0, 10.0, 0.0), 103.03030303030303, 1e-07):
        panic("test 1 failed")
    if not almost_equal(doppler_effect(100.0, 330.0, -10.0, 0.0), 96.96969696969697, 1e-07):
        panic("test 2 failed")
    if not almost_equal(doppler_effect(100.0, 330.0, 0.0, 10.0), 103.125, 1e-07):
        panic("test 3 failed")
    if not almost_equal(doppler_effect(100.0, 330.0, 0.0, -10.0), 97.05882352941177, 1e-07):
        panic("test 4 failed")
    if not almost_equal(doppler_effect(100.0, 330.0, 10.0, 10.0), 106.25, 1e-07):
        panic("test 5 failed")
    if not almost_equal(doppler_effect(100.0, 330.0, -10.0, -10.0), 94.11764705882354, 1e-07):
        panic("test 6 failed")
def main():
    test_doppler_effect()
    print(doppler_effect(100.0, 330.0, 10.0, 0.0))
main()
