# Code generated by Mochi transpiler.
# Version 0.10.64, generated on 2025-08-12 15:27 +0700
import json
import time

try:
    import resource
except Exception:
    resource = None
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())


def _str(v):
    if isinstance(v, float):
        if v.is_integer():
            return str(int(v))
        return format(v, ".17g")
    return str(v)

if resource:
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
else:
    _bench_mem_start = 0
_bench_start = _now()
try:
    def to_float(x):
        return x * 1.0
    def ln(x):
        if x <= 0.0:
            panic("ln domain error")
        y = (x - 1.0) / (x + 1.0)
        y2 = y * y
        term = y
        sum = 0.0
        k = 0
        while k < 10:
            denom = float(2 * k + 1)
            sum = sum + term / denom
            term = term * y2
            k = k + 1
        return 2.0 * sum
    def exp(x):
        term = 1.0
        sum = 1.0
        n = 1
        while n < 20:
            term = term * x / float(n)
            sum = sum + term
            n = n + 1
        return sum
    def pow_float(base, exponent):
        return exp(exponent * ln(base))
    def get_altitude_at_pressure(pressure):
        if pressure > 101325.0:
            panic("Value Higher than Pressure at Sea Level !")
        if pressure < 0.0:
            panic("Atmospheric Pressure can not be negative !")
        ratio = pressure / 101325.0
        return 44330.0 * (1.0 - pow_float(ratio, 1.0 / 5.5255))
    print(_str(get_altitude_at_pressure(100000.0)))
    print(_str(get_altitude_at_pressure(101325.0)))
    print(_str(get_altitude_at_pressure(80000.0)))
finally:
    _bench_end = _now()
    if resource:
        _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    else:
        _bench_mem_end = 0
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))

