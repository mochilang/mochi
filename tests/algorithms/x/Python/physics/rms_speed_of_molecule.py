# Code generated by Mochi transpiler.
# Version 0.10.69, generated on 2025-08-22 14:19 +0700
import json
import time

try:
    import resource
except Exception:
    resource = None
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
if hasattr(sys, "setrecursionlimit"):
    sys.setrecursionlimit(1000000)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise RuntimeError(msg)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())


import builtins
def _str(v):
    if isinstance(v, float):
        if abs(v - builtins.round(v)) < 1e-9:
            return builtins.str(int(builtins.round(v)))
        return builtins.format(v, ".17g")
    return builtins.str(v)

if resource:
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
else:
    _bench_mem_start = 0
_bench_start = _now()
try:
    UNIVERSAL_GAS_CONSTANT = 8.3144598
    def sqrt(x):
        if x <= 0.0:
            return 0.0
        guess = x
        i = 0
        while i < 10:
            guess = (guess + x / guess) / 2.0
            i = i + 1
        return guess
    def rms_speed_of_molecule(temperature, molar_mass):
        if temperature < 0.0:
            panic("Temperature cannot be less than 0 K")
        if molar_mass <= 0.0:
            panic("Molar mass cannot be less than or equal to 0 kg/mol")
        num = 3.0 * UNIVERSAL_GAS_CONSTANT * temperature
        val = num / molar_mass
        result = sqrt(val)
        return result
    print("rms_speed_of_molecule(100, 2) = " + _str(rms_speed_of_molecule(100.0, 2.0)))
    print("rms_speed_of_molecule(273, 12) = " + _str(rms_speed_of_molecule(273.0, 12.0)))
    vrms = rms_speed_of_molecule(300.0, 28.0)
    print("Vrms of Nitrogen gas at 300 K is " + _str(vrms) + " m/s")
finally:
    _bench_end = _now()
    if resource:
        _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    else:
        _bench_mem_end = 0
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": (_bench_mem_end - _bench_mem_start)*1024, "name": "main"}, indent=2))

