# Code generated by Mochi transpiler.
# Version 0.10.60, generated on 2025-08-08 10:08 +0700
import json
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def panic(msg):
    raise Exception(msg)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
try:
    def parse_project_name(toml):
        i = 0
        name = ""
        n = len(toml)
        while i + 4 < n:
            if toml[i] == "n" and toml[i + 1] == "a" and toml[i + 2] == "m" and toml[i + 3] == "e":
                i = i + 4
                while i < n and toml[i] != "\"":
                    i = i + 1
                i = i + 1
                while i < n and toml[i] != "\"":
                    name = name + toml[i]
                    i = i + 1
                return name
            i = i + 1
        return name
    pyproject = "[project]\nname = \"thealgorithms-python\""
    project = parse_project_name(pyproject)
    print(project)
finally:
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
