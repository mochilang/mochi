// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}


bool _listEq(List a, List b) {
  if (a.length != b.length) return false;
  for (var i = 0; i < a.length; i++) {
    final x = a[i];
    final y = b[i];
    if (x is List && y is List) {
      if (!_listEq(x, y)) return false;
    } else if (x != y) {
      return false;
    }
  }
  return true;
}

String _str(dynamic v) { if (v is double && v.abs() <= 9007199254740991 && v == v.roundToDouble()) { var i = v.toInt(); if (i == 0) return '0'; return i.toString(); } return v.toString(); }

class Query {
  int left;
  int right;
  Query({required this.left, required this.right});
}

List<int> prefix_sum(List<int> arr, List<Query> queries) {
  List<int> dp = <int>[];
  int i = 0;
  while (i < arr.length) {
    if (i == 0) {
    dp = [...dp, arr[0]];
  } else {
    dp = [...dp, dp[i - 1] + arr[i]];
  }
    i = i + 1;
  }
  List<int> result = <int>[];
  int j = 0;
  while (j < queries.length) {
    Query q = queries[j];
    int sum = dp[q.right];
    if (q.left > 0) {
    sum = sum - dp[q.left - 1];
  }
    result = [...result, sum];
    j = j + 1;
  }
  return result;
}

List<int> arr1 = [1, 4, 6, 2, 61, 12];
List<Query> queries1 = [Query(left: 2, right: 5), Query(left: 1, right: 5), Query(left: 3, right: 4)];
List<int> arr2 = [4, 2, 1, 6, 3];
List<Query> queries2 = [Query(left: 3, right: 4), Query(left: 1, right: 3), Query(left: 0, right: 2)];
void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print(_str(prefix_sum(arr1, queries1)));
  print(_str(prefix_sum(arr2, queries2)));
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
