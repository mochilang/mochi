// Generated by Mochi transpiler
dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}


Never _error(String msg) {
  throw Exception(msg);
}

int climb_stairs(int number_of_steps) {
  if (number_of_steps <= 0) {
    _error("number_of_steps needs to be positive");
  }
  if (number_of_steps == 1) {
    return 1;
  }
  int previous = 1;
  int current = 1;
  int i = 0;
  while (i < number_of_steps - 1) {
    int next = current + previous;
    previous = current;
    current = next;
    i = i + 1;
  }
  return current;
}

void main() {
  print(climb_stairs(3));
  print(climb_stairs(1));
}
