// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { return v.toInt().toString(); } return v.toString(); }

List<int> memo = [1, 1];
int factorial(int _num) {
  if (_num < 0) {
    print("Number should not be negative.");
    return 0;
  }
  List<int> m = memo;
  int i = m.length;
  while (i <= _num) {
    m = m..add(i * m[i - 1]);
    i = i + 1;
  }
  memo = m;
  return m[_num];
}

List<int> results = <int>[];
void main() {
  print(_str(factorial(7)));
  factorial(-1);
  for (int i = 0; i < 10; i++) {
    results = results..add(factorial(i));
  }
  print(_str(results));
}
