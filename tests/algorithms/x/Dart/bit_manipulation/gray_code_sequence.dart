// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}


void _json(dynamic v) {
  print(jsonEncode(v));
}

int pow2(int exp) {
  int result = 1;
  int i = 0;
  while (i < exp) {
    result = result * 2;
    i = i + 1;
  }
  return result;
}

List<int> gray_code(int bit_count) {
  if (bit_count == 0) {
    return [0];
  }
  List<int> prev = gray_code(bit_count - 1);
  int add_val = pow2(bit_count - 1);
  List<int> res = <int>[];
  int i = 0;
  while (i < prev.length) {
    res = [...res, prev[i]];
    i = i + 1;
  }
  int j = prev.length - 1;
  while (j >= 0) {
    res = [...res, prev[j] + add_val];
    j = j - 1;
  }
  return res;
}

List<int> seq2 = gray_code(2);
List<int> seq1 = gray_code(1);
List<int> seq3 = gray_code(3);
void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print((seq2).toString());
  print((seq1).toString());
  print((seq3).toString());
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
