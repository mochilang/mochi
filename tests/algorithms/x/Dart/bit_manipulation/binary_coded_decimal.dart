// Generated by Mochi transpiler
dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { var i = v.toInt(); if (i == 0) return '0'; return i.toString(); } return v.toString(); }

String to_binary4(int n) {
  String result = "";
  int x = n;
  while (x > 0) {
    result = _str(x % 2) + result;
    x = x ~/ 2;
  }
  while (result.length < 4) {
    result = "0" + result;
  }
  return result;
}

String binary_coded_decimal(int number) {
  int n = number;
  if (n < 0) {
    n = 0;
  }
  String digits = _str(n);
  String out = "0b";
  int i = 0;
  while (i < digits.length) {
    String d = digits.substring(i, i + 1);
    int d_int = (d).codeUnitAt(0);
    out = out + to_binary4(d_int);
    i = i + 1;
  }
  return out;
}

void main() {
  print(binary_coded_decimal(-2));
  print(binary_coded_decimal(-1));
  print(binary_coded_decimal(0));
  print(binary_coded_decimal(3));
  print(binary_coded_decimal(2));
  print(binary_coded_decimal(12));
  print(binary_coded_decimal(987));
}
