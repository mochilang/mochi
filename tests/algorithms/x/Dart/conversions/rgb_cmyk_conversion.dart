// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

int round_int(double x) {
  return x + 0.5 as int;
}

List<int> rgb_to_cmyk(int r_input, int g_input, int b_input) {
  if (r_input < 0 || r_input >= 256 || g_input < 0 || g_input >= 256 || b_input < 0 || b_input >= 256) {
    throw Exception("Expected int of the range 0..255");
  }
  double r = (r_input as double) / 255.0;
  double g = (g_input as double) / 255.0;
  double b = (b_input as double) / 255.0;
  double max_val = r;
  if (g > max_val) {
    max_val = g;
  }
  if (b > max_val) {
    max_val = b;
  }
  double k_float = 1.0 - max_val;
  if (k_float == 1.0) {
    return [0, 0, 0, 100];
  }
  double c_float = 100.0 * (1.0 - r - k_float) / (1.0 - k_float);
  double m_float = 100.0 * (1.0 - g - k_float) / (1.0 - k_float);
  double y_float = 100.0 * (1.0 - b - k_float) / (1.0 - k_float);
  double k_percent = 100.0 * k_float;
  int c = round_int(c_float);
  int m = round_int(m_float);
  int y = round_int(y_float);
  int k = round_int(k_percent);
  return [c, m, y, k];
}

void main() {
  print("[" + rgb_to_cmyk(255, 255, 255).join(', ') + "]");
  print("[" + rgb_to_cmyk(128, 128, 128).join(', ') + "]");
  print("[" + rgb_to_cmyk(0, 0, 0).join(', ') + "]");
  print("[" + rgb_to_cmyk(255, 0, 0).join(', ') + "]");
  print("[" + rgb_to_cmyk(0, 255, 0).join(', ') + "]");
  print("[" + rgb_to_cmyk(0, 0, 255).join(', ') + "]");
}
