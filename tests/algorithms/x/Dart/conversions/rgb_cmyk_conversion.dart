// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}


Never _error(String msg) {
  throw Exception(msg);
}

int round_int(double x) {
  return (x + 0.5).toInt();
}

List<int> rgb_to_cmyk(int r_input, int g_input, int b_input) {
  if (r_input < 0 || r_input >= 256 || g_input < 0 || g_input >= 256 || b_input < 0 || b_input >= 256) {
    _error("Expected int of the range 0..255");
  }
  double r = (r_input.toDouble()) / 255.0;
  double g = (g_input.toDouble()) / 255.0;
  double b = (b_input.toDouble()) / 255.0;
  double max_val = r;
  if (g > max_val) {
    max_val = g;
  }
  if (b > max_val) {
    max_val = b;
  }
  double k_float = 1.0 - max_val;
  if (k_float == 1.0) {
    return [0, 0, 0, 100];
  }
  double c_float = 100.0 * (1.0 - r - k_float) / (1.0 - k_float);
  double m_float = 100.0 * (1.0 - g - k_float) / (1.0 - k_float);
  double y_float = 100.0 * (1.0 - b - k_float) / (1.0 - k_float);
  double k_percent = 100.0 * k_float;
  int c = round_int(c_float);
  int m = round_int(m_float);
  int y = round_int(y_float);
  int k = round_int(k_percent);
  return [c, m, y, k];
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print("[" + rgb_to_cmyk(255, 255, 255).join(', ') + "]");
  print("[" + rgb_to_cmyk(128, 128, 128).join(', ') + "]");
  print("[" + rgb_to_cmyk(0, 0, 0).join(', ') + "]");
  print("[" + rgb_to_cmyk(255, 0, 0).join(', ') + "]");
  print("[" + rgb_to_cmyk(0, 255, 0).join(', ') + "]");
  print("[" + rgb_to_cmyk(0, 0, 255).join(', ') + "]");
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
