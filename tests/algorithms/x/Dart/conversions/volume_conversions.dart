// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _str(dynamic v) => v.toString();


Never _error(dynamic msg) {
  throw Exception(msg.toString());
}

List<String> units = ["cubic meter", "litre", "kilolitre", "gallon", "cubic yard", "cubic foot", "cup"];
List<double> from_factors = [1.0, 0.001, 1.0, 0.00454, 0.76455, 0.028, 0.000236588];
List<double> to_factors = [1.0, 1000.0, 1.0, 264.172, 1.30795, 35.3147, 4226.75];
String supported_values() {
  String result = units[0];
  int i = 1;
  while (i < units.length) {
    result = result + ", " + units[i];
    i = i + 1;
  }
  return result;
}

int find_index(String name) {
  int i = 0;
  while (i < units.length) {
    if (units[i] == name) {
    return i;
  }
    i = i + 1;
  }
  return -1;
}

double get_from_factor(String name) {
  int idx = find_index(name);
  if (idx < 0) {
    _error("Invalid 'from_type' value: '" + name + "' Supported values are: " + supported_values());
  }
  return from_factors[idx];
}

double get_to_factor(String name) {
  int idx = find_index(name);
  if (idx < 0) {
    _error("Invalid 'to_type' value: '" + name + "' Supported values are: " + supported_values());
  }
  return to_factors[idx];
}

double volume_conversion(double value, String from_type, String to_type) {
  double from_factor = get_from_factor(from_type);
  double to_factor = get_to_factor(to_type);
  return value * from_factor * to_factor;
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print(_str(volume_conversion(4.0, "cubic meter", "litre")));
  print(_str(volume_conversion(1.0, "litre", "gallon")));
  print(_str(volume_conversion(1.0, "kilolitre", "cubic meter")));
  print(_str(volume_conversion(3.0, "gallon", "cubic yard")));
  print(_str(volume_conversion(2.0, "cubic yard", "litre")));
  print(_str(volume_conversion(4.0, "cubic foot", "cup")));
  print(_str(volume_conversion(1.0, "cup", "kilolitre")));
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
