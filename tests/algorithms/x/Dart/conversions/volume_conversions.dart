// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

List<String> units = ["cubic meter", "litre", "kilolitre", "gallon", "cubic yard", "cubic foot", "cup"];
List<double> from_factors = [1.0, 0.001, 1.0, 0.00454, 0.76455, 0.028, 0.000236588];
List<double> to_factors = [1.0, 1000.0, 1.0, 264.172, 1.30795, 35.3147, 4226.75];
String supported_values() {
  String result = units[0];
  int i = 1;
  while (i < units.length) {
    result = result + ", " + units[i];
    i = i + 1;
  }
  return result;
}

int find_index(String name) {
  int i = 0;
  while (i < units.length) {
    if (units[i] == name) {
    return i;
  }
    i = i + 1;
  }
  return -1;
}

double get_from_factor(String name) {
  int idx = find_index(name);
  if (idx < 0) {
    throw Exception("Invalid 'from_type' value: '" + name + "' Supported values are: " + supported_values());
  }
  return from_factors[idx];
}

double get_to_factor(String name) {
  int idx = find_index(name);
  if (idx < 0) {
    throw Exception("Invalid 'to_type' value: '" + name + "' Supported values are: " + supported_values());
  }
  return to_factors[idx];
}

double volume_conversion(double value, String from_type, String to_type) {
  double from_factor = get_from_factor(from_type);
  double to_factor = get_to_factor(to_type);
  return value * from_factor * to_factor;
}

void main() {
  print((volume_conversion(4.0, "cubic meter", "litre")).toString());
  print((volume_conversion(1.0, "litre", "gallon")).toString());
  print((volume_conversion(1.0, "kilolitre", "cubic meter")).toString());
  print((volume_conversion(3.0, "gallon", "cubic yard")).toString());
  print((volume_conversion(2.0, "cubic yard", "litre")).toString());
  print((volume_conversion(4.0, "cubic foot", "cup")).toString());
  print((volume_conversion(1.0, "cup", "kilolitre")).toString());
}
