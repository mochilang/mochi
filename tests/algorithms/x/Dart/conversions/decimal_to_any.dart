// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

String decimal_to_any(int _num, int base) {
  if (_num < 0) {
    throw Exception("parameter must be positive int");
  }
  if (base < 2) {
    throw Exception("base must be >= 2");
  }
  if (base > 36) {
    throw Exception("base must be <= 36");
  }
  if (_num == 0) {
    return "0";
  }
  String symbols = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
  int n = _num;
  String result = "";
  while (n > 0) {
    int mod = n % base;
    String digit = _substr(symbols, mod, mod + 1);
    result = digit + result;
    n = n ~/ base;
  }
  return result;
}

void _main() {
  print(decimal_to_any(0, 2));
  print(decimal_to_any(5, 4));
  print(decimal_to_any(20, 3));
  print(decimal_to_any(58, 16));
  print(decimal_to_any(243, 17));
}

void _start() {
  _main();
}

void main() => _start();
