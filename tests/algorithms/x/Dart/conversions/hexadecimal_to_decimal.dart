// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { var i = v.toInt(); if (i == 0) return '0'; return i.toString(); } return v.toString(); }

String strip(String s) {
  int start = 0;
  int end = s.length;
  while (start < end && _substr(s, start, start + 1) == " ") {
    start = start + 1;
  }
  while (end > start && _substr(s, end - 1, end) == " ") {
    end = end - 1;
  }
  return _substr(s, start, end);
}

int hex_digit_value(String c) {
  if (c == "0") {
    return 0;
  }
  if (c == "1") {
    return 1;
  }
  if (c == "2") {
    return 2;
  }
  if (c == "3") {
    return 3;
  }
  if (c == "4") {
    return 4;
  }
  if (c == "5") {
    return 5;
  }
  if (c == "6") {
    return 6;
  }
  if (c == "7") {
    return 7;
  }
  if (c == "8") {
    return 8;
  }
  if (c == "9") {
    return 9;
  }
  if (c == "a" || c == "A") {
    return 10;
  }
  if (c == "b" || c == "B") {
    return 11;
  }
  if (c == "c" || c == "C") {
    return 12;
  }
  if (c == "d" || c == "D") {
    return 13;
  }
  if (c == "e" || c == "E") {
    return 14;
  }
  if (c == "f" || c == "F") {
    return 15;
  }
  print("Non-hexadecimal value was passed to the function");
  return 0;
}

int hex_to_decimal(String hex_string) {
  String s = strip(hex_string);
  if (s.length == 0) {
    print("Empty string was passed to the function");
    return 0;
  }
  bool is_negative = false;
  if (_substr(s, 0, 1) == "-") {
    is_negative = true;
    s = _substr(s, 1, s.length);
  }
  int decimal_number = 0;
  int i = 0;
  while (i < s.length) {
    String c = _substr(s, i, i + 1);
    int value = hex_digit_value(c);
    decimal_number = 16 * decimal_number + value;
    i = i + 1;
  }
  if (is_negative) {
    return -decimal_number;
  }
  return decimal_number;
}

void _main() {
  print(_str(hex_to_decimal("a")));
  print(_str(hex_to_decimal("12f")));
  print(_str(hex_to_decimal("   12f   ")));
  print(_str(hex_to_decimal("FfFf")));
  print(_str(hex_to_decimal("-Ff")));
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}

void main() => _start();
