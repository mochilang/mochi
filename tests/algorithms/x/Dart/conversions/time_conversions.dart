// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}


Never _error(String msg) {
  throw Exception(msg);
}

Map<String, double> time_chart = {"seconds": 1.0, "minutes": 60.0, "hours": 3600.0, "days": 86400.0, "weeks": 604800.0, "months": 2629800.0, "years": 31557600.0};
Map<String, double> time_chart_inverse = {"seconds": 1.0, "minutes": 1.0 / 60.0, "hours": 1.0 / 3600.0, "days": 1.0 / 86400.0, "weeks": 1.0 / 604800.0, "months": 1.0 / 2629800.0, "years": 1.0 / 31557600.0};
List<String> units = ["seconds", "minutes", "hours", "days", "weeks", "months", "years"];
String units_str = "seconds, minutes, hours, days, weeks, months, years";
bool contains(List<String> arr, String t) {
  int i = 0;
  while (i < arr.length) {
    if (arr[i] == t) {
    return true;
  }
    i = i + 1;
  }
  return false;
}

double convert_time(double time_value, String unit_from, String unit_to) {
  if (time_value < 0.0) {
    _error("'time_value' must be a non-negative number.");
  }
  String from = unit_from.toLowerCase();
  String to = unit_to.toLowerCase();
  if (!units.contains(from) || !units.contains(to)) {
    String invalid_unit = from;
    if (units.contains(from)) {
    invalid_unit = to;
  };
    _error("Invalid unit " + invalid_unit + " is not in " + units_str + ".");
  }
  double seconds = time_value * (time_chart[from]!);
  double converted = seconds * (time_chart_inverse[to]!);
  double scaled = converted * 1000.0;
  int int_part = (scaled + 0.5).toInt();
  return (int_part + 0.0) / 1000.0;
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print(convert_time(3600.0, "seconds", "hours"));
  print(convert_time(360.0, "days", "months"));
  print(convert_time(360.0, "months", "years"));
  print(convert_time(1.0, "years", "seconds"));
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
