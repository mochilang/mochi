// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}


Never _error(String msg) {
  throw Exception(msg);
}

String rstrip_s(String s) {
  if (s.length > 0 && s.substring(s.length - 1, s.length - 1 + 1) == "s") {
    return _substr(s, 0, s.length - 1);
  }
  return s;
}

String normalize_alias(String u) {
  if (u == "millimeter") {
    return "mm";
  }
  if (u == "centimeter") {
    return "cm";
  }
  if (u == "meter") {
    return "m";
  }
  if (u == "kilometer") {
    return "km";
  }
  if (u == "inch") {
    return "in";
  }
  if (u == "inche") {
    return "in";
  }
  if (u == "feet") {
    return "ft";
  }
  if (u == "foot") {
    return "ft";
  }
  if (u == "yard") {
    return "yd";
  }
  if (u == "mile") {
    return "mi";
  }
  return u;
}

bool has_unit(String u) {
  return u == "mm" || u == "cm" || u == "m" || u == "km" || u == "in" || u == "ft" || u == "yd" || u == "mi";
}

double from_factor(String u) {
  if (u == "mm") {
    return 0.001;
  }
  if (u == "cm") {
    return 0.01;
  }
  if (u == "m") {
    return 1.0;
  }
  if (u == "km") {
    return 1000.0;
  }
  if (u == "in") {
    return 0.0254;
  }
  if (u == "ft") {
    return 0.3048;
  }
  if (u == "yd") {
    return 0.9144;
  }
  if (u == "mi") {
    return 1609.34;
  }
  return 0.0;
}

double to_factor(String u) {
  if (u == "mm") {
    return 1000.0;
  }
  if (u == "cm") {
    return 100.0;
  }
  if (u == "m") {
    return 1.0;
  }
  if (u == "km") {
    return 0.001;
  }
  if (u == "in") {
    return 39.3701;
  }
  if (u == "ft") {
    return 3.28084;
  }
  if (u == "yd") {
    return 1.09361;
  }
  if (u == "mi") {
    return 0.000621371;
  }
  return 0.0;
}

double length_conversion(double value, String from_type, String to_type) {
  String new_from = normalize_alias(rstrip_s(from_type.toLowerCase()));
  String new_to = normalize_alias(rstrip_s(to_type.toLowerCase()));
  if (!has_unit(new_from)) {
    _error("Invalid 'from_type' value: '" + from_type + "'.\nConversion abbreviations are: mm, cm, m, km, in, ft, yd, mi");
  }
  if (!has_unit(new_to)) {
    _error("Invalid 'to_type' value: '" + to_type + "'.\nConversion abbreviations are: mm, cm, m, km, in, ft, yd, mi");
  }
  return value * from_factor(new_from) * to_factor(new_to);
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print(length_conversion(4.0, "METER", "FEET"));
  print(length_conversion(1.0, "kilometer", "inch"));
  print(length_conversion(2.0, "feet", "meter"));
  print(length_conversion(2.0, "centimeter", "millimeter"));
  print(length_conversion(4.0, "yard", "kilometer"));
  print(length_conversion(3.0, "foot", "inch"));
  print(length_conversion(3.0, "mm", "in"));
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
