// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

List<int> zeros(int n) {
  List<int> res = <int>[];
  int i = 0;
  while (i < n) {
    res = [...res, 0];
    i = i + 1;
  }
  return res;
}

dynamic update(List<int> arr, int idx, int value) {
  while (arr.length <= idx) { arr.add(0); } arr[idx] = value;
}

int query(List<int> arr, int left, int right) {
  int result = 0;
  int i = left;
  while (i < right) {
    if (arr[i] > result) {
    result = arr[i];
  }
    i = i + 1;
  }
  return result;
}

List<int> arr = [0, 0, 0, 0, 0];
void main() {
  print(query(arr, 0, 5));
  update(arr, 4, 100);
  print(query(arr, 0, 5));
  update(arr, 4, 0);
  update(arr, 2, 20);
  print(query(arr, 0, 5));
  update(arr, 4, 10);
  print(query(arr, 2, 5));
  print(query(arr, 1, 5));
  update(arr, 2, 0);
  print(query(arr, 0, 5));
  arr = zeros(10000);
  update(arr, 255, 30);
  print(query(arr, 0, 10000));
  arr = zeros(6);
  update(arr, 5, 1);
  print(query(arr, 5, 6));
  arr = zeros(6);
  update(arr, 0, 1000);
  print(query(arr, 0, 1));
}
