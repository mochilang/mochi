// Generated by Mochi transpiler
import 'dart:io';

int binomial_coefficient(int n, int k) {
  int result = 1;
  int kk = k;
  if (k > n - k) {
    kk = n - k;
  }
  for (int i = 0; i < kk; i++) {
    result = result * (n - i);
    result = result ~/ (i + 1);
  }
  return result;
}

int catalan_number(int node_count) {
  return binomial_coefficient(2 * node_count, node_count) ~/ (node_count + 1);
}

int factorial(int n) {
  if (n < 0) {
    print("factorial() not defined for negative values");
    return 0;
  }
  int result = 1;
  for (int i = 1; i < n + 1; i++) {
    result = result * i;
  }
  return result;
}

int binary_tree_count(int node_count) {
  return catalan_number(node_count) * factorial(node_count);
}

String input_str = stdin.readLineSync()?.trim() ?? '';
int node_count = int.parse(input_str);
void main() {
  print("Enter the number of nodes:");
  if (node_count <= 0) {
    print("We need some nodes to work with.");
  } else {
    int bst = catalan_number(node_count);
    int bt = binary_tree_count(node_count);
    print(["Given", node_count, "nodes, there are", bt, "binary trees and", bst, "binary search trees."].join(" "));
  }
}
