// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

int equilibrium_index(List<int> arr) {
  int total = 0;
  int i = 0;
  while (i < arr.length) {
    total = total + arr[i];
    i = i + 1;
  }
  int left = 0;
  i = 0;
  while (i < arr.length) {
    total = total - arr[i];
    if (left == total) {
    return i;
  }
    left = left + arr[i];
    i = i + 1;
  }
  return -1;
}

List<int> arr1 = [-7, 1, 5, 2, -4, 3, 0];
List<int> arr2 = [1, 2, 3, 4, 5];
List<int> arr3 = [1, 1, 1, 1, 1];
List<int> arr4 = [2, 4, 6, 8, 10, 3];
void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print(equilibrium_index(arr1));
  print(equilibrium_index(arr2));
  print(equilibrium_index(arr3));
  print(equilibrium_index(arr4));
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
