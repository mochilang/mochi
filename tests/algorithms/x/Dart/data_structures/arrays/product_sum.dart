// Generated by Mochi transpiler
int product_sum(List<dynamic> arr, int depth) {
  int total = 0;
  int i = 0;
  while (i < arr.length) {
    dynamic el = arr[i];
    if (exists(el)) {
    total = total + product_sum(List<dynamic>.from(List<dynamic>.from(el)), depth + 1);
  } else {
    total = total + ((int.tryParse(el.toString()) ?? el.toString().codeUnitAt(0)));
  }
    i = i + 1;
  }
  return total * depth;
}

int product_sum_array(List<dynamic> array) {
  int res = product_sum(List<dynamic>.from(array), 1);
  return res;
}

List<dynamic> example = [5, 2, [-7, 1], 3, [6, [-13, 8], 4]];
void main() {
  print(product_sum_array(List<dynamic>.from(example)));
}
