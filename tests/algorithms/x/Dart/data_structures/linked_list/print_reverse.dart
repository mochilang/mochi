// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

class LinkedList {
  List<int> data;
  LinkedList({required this.data});
}

LinkedList empty_list() {
  return LinkedList(data: []);
}

LinkedList append_value(LinkedList list, int value) {
  List<int> d = list.data;
  d = [...d, value];
  return LinkedList(data: d);
}

LinkedList extend_list(LinkedList list, List<int> items) {
  LinkedList result = list;
  int i = 0;
  while (i < items.length) {
    result = append_value(result, items[i]);
    i = i + 1;
  }
  return result;
}

String to_string(LinkedList list) {
  if (list.data.length == 0) {
    return "";
  }
  String s = (list.data[0]).toString();
  int i = 1;
  while (i < list.data.length) {
    s = s + " -> " + (list.data[i]).toString();
    i = i + 1;
  }
  return s;
}

LinkedList make_linked_list(List<int> items) {
  if (items.length == 0) {
    throw Exception("The Elements List is empty");
  }
  LinkedList ll = empty_list();
  ll = extend_list(ll, items);
  return ll;
}

String in_reverse(LinkedList list) {
  if (list.data.length == 0) {
    return "";
  }
  int i = list.data.length - 1;
  String s = (list.data[i]).toString();
  i = i - 1;
  while (i >= 0) {
    s = s + " <- " + (list.data[i]).toString();
    i = i - 1;
  }
  return s;
}

void _main() {
  LinkedList linked_list = make_linked_list([14, 52, 14, 12, 43]);
  print("Linked List:  " + to_string(linked_list));
  print("Reverse List: " + in_reverse(linked_list));
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}

void main() => _start();
