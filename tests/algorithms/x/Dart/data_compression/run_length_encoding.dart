// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

dynamic _substr(dynamic s, num start, [num? end]) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end == null ? n : end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

String _str(dynamic v) => v.toString();

String run_length_encode(String text) {
  if (text.length == 0) {
    return "";
  }
  String encoded = "";
  int count = 1;
  int i = 0;
  while (i < text.length) {
    if (i + 1 < text.length && _substr(text, i, i + 1) == _substr(text, i + 1, i + 1 + 1)) {
    count = count + 1;
  } else {
    encoded = encoded + _substr(text, i, i + 1) + _str(count);
    count = 1;
  }
    i = i + 1;
  }
  return encoded;
}

String run_length_decode(String encoded) {
  String res = "";
  int i = 0;
  while (i < encoded.length) {
    String ch = _substr(encoded, i, i + 1);
    i = i + 1;
    String num_str = "";
    while (i < encoded.length && _substr(encoded, i, i + 1).compareTo("0") >= 0 && _substr(encoded, i, i + 1).compareTo("9") <= 0) {
    num_str = num_str + _substr(encoded, i, i + 1);
    i = i + 1;
  }
    int count = int.parse(num_str);
    int j = 0;
    while (j < count) {
    res = res + ch;
    j = j + 1;
  }
  }
  return res;
}

String example1 = "AAAABBBCCDAA";
String encoded1 = run_length_encode(example1);
String example2 = "A";
String encoded2 = run_length_encode(example2);
String example3 = "AAADDDDDDFFFCCCAAVVVV";
String encoded3 = run_length_encode(example3);
void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print(encoded1);
  print(run_length_decode(encoded1));
  print(encoded2);
  print(run_length_decode(encoded2));
  print(encoded3);
  print(run_length_decode(encoded3));
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
