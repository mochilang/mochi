// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { var i = v.toInt(); if (i == 0) return '0'; return i.toString(); } return v.toString(); }

class GasStation {
  int gas_quantity;
  int cost;
  GasStation({required this.gas_quantity, required this.cost});
}

List<GasStation> get_gas_stations(List<int> gas_quantities, List<int> costs) {
  List<GasStation> stations = <GasStation>[];
  int i = 0;
  while (i < gas_quantities.length) {
    stations = [...stations, GasStation(gas_quantity: gas_quantities[i], cost: costs[i])];
    i = i + 1;
  }
  return stations;
}

int can_complete_journey(List<GasStation> gas_stations) {
  int total_gas = 0;
  int total_cost = 0;
  int i = 0;
  while (i < gas_stations.length) {
    total_gas = (total_gas + gas_stations[i].gas_quantity).toInt();
    total_cost = (total_cost + gas_stations[i].cost).toInt();
    i = i + 1;
  }
  if (total_gas < total_cost) {
    return -1;
  }
  int start = 0;
  int net = 0;
  i = 0;
  while (i < gas_stations.length) {
    GasStation station = gas_stations[i];
    net = net + station.gas_quantity - station.cost;
    if (net < 0) {
    start = i + 1;
    net = 0;
  }
    i = i + 1;
  }
  return start;
}

List<GasStation> example1 = get_gas_stations([1, 2, 3, 4, 5], [3, 4, 5, 1, 2]);
List<GasStation> example2 = get_gas_stations([2, 3, 4], [3, 4, 3]);
void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print(_str(can_complete_journey(example1)));
  print(_str(can_complete_journey(example2)));
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
