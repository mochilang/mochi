// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

double n_choose_k(int n, int k) {
  if (k < 0 || k > n) {
    return 0.0;
  }
  if (k == 0 || k == n) {
    return 1.0;
  }
  double result = 1.0;
  int i = 1;
  while (i <= k) {
    result = result * (1.0 * (n - k + i)) / (1.0 * i);
    i = i + 1;
  }
  return result;
}

double pow_float(double base, int exp) {
  double result = 1.0;
  int i = 0;
  while (i < exp) {
    result = result * base;
    i = i + 1;
  }
  return result;
}

List<double> basis_function(List<List<double>> points, double t) {
  int degree = points.length - 1;
  List<double> res = <double>[];
  int i = 0;
  while (i <= degree) {
    double coef = n_choose_k(degree, i);
    double term = pow_float(1.0 - t, degree - i) * pow_float(t, i);
    res = [...res, coef * term];
    i = i + 1;
  }
  return res;
}

List<double> bezier_point(List<List<double>> points, double t) {
  List<double> basis = basis_function(points, t);
  double x = 0.0;
  double y = 0.0;
  int i = 0;
  while (i < points.length) {
    x = x + basis[i] * points[i][0];
    y = y + basis[i] * points[i][1];
    i = i + 1;
  }
  return [x, y];
}

List<List<double>> control = [[1.0, 1.0], [1.0, 2.0]];
void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print((basis_function(control, 0.0)).toString());
  print((basis_function(control, 1.0)).toString());
  print((bezier_point(control, 0.0)).toString());
  print((bezier_point(control, 1.0)).toString());
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
