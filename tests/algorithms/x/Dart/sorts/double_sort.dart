// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { return v.toInt().toString(); } return v.toString(); }

List<int> double_sort(List<int> collection) {
  int no_of_elements = collection.length;
  int passes = (no_of_elements - 1) ~/ 2 + 1;
  int i = 0;
  while (i < passes) {
    int j = 0;
    while (j < no_of_elements - 1) {
    if (collection[j + 1] < collection[j]) {
    int tmp = collection[j];
    while (collection.length <= j) { collection.add(0); } collection[j] = collection[j + 1];
    while (collection.length <= j + 1) { collection.add(0); } collection[j + 1] = tmp;
  }
    if (collection[no_of_elements - 1 - j] < collection[no_of_elements - 2 - j]) {
    int tmp2 = collection[no_of_elements - 1 - j];
    while (collection.length <= no_of_elements - 1 - j) { collection.add(0); } collection[no_of_elements - 1 - j] = collection[no_of_elements - 2 - j];
    while (collection.length <= no_of_elements - 2 - j) { collection.add(0); } collection[no_of_elements - 2 - j] = tmp2;
  }
    j = j + 1;
  }
    i = i + 1;
  }
  return collection;
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print(_str(double_sort([-1, -2, -3, -4, -5, -6, -7])));
  print(_str(double_sort(<int>[])));
  print(_str(double_sort([-1, -2, -3, -4, -5, -6])));
  print(_str(jsonEncode(double_sort([-3, 10, 16, -42, 29])) == jsonEncode([-42, -3, 10, 16, 29])));
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
