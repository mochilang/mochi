// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { return v.toInt().toString(); } return v.toString(); }

List<int> cocktail_shaker_sort(List<int> arr) {
  int start = 0;
  int end = arr.length - 1;
  while (start < end) {
    bool swapped = false;
    int i = start;
    while (i < end) {
    if (arr[i] > arr[i + 1]) {
    int temp = arr[i];
    while (arr.length <= i) { arr.add(0); } arr[i] = arr[i + 1];
    while (arr.length <= i + 1) { arr.add(0); } arr[i + 1] = temp;
    swapped = true;
  }
    i = i + 1;
  }
    if (!swapped) {
    break;
  }
    end = end - 1;
    i = end;
    while (i > start) {
    if (arr[i] < arr[i - 1]) {
    int temp2 = arr[i];
    while (arr.length <= i) { arr.add(0); } arr[i] = arr[i - 1];
    while (arr.length <= i - 1) { arr.add(0); } arr[i - 1] = temp2;
    swapped = true;
  }
    i = i - 1;
  }
    if (!swapped) {
    break;
  }
    start = start + 1;
  }
  return arr;
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print(_str(cocktail_shaker_sort([4, 5, 2, 1, 2])));
  print(_str(cocktail_shaker_sort([-4, 5, 0, 1, 2, 11])));
  print(_str(cocktail_shaker_sort([1, 2, 3, 4, 5])));
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
