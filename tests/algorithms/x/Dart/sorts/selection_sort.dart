// Generated by Mochi transpiler
dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { var i = v.toInt(); if (i == 0) return '0'; return i.toString(); } return v.toString(); }

List<int> selection_sort(List<int> arr) {
  int n = arr.length;
  int i = 0;
  while (i < n - 1) {
    int min_index = i;
    int k = i + 1;
    while (k < n) {
    if (arr[k] < arr[min_index]) {
    min_index = k;
  }
    k = k + 1;
  }
    if (min_index != i) {
    int tmp = arr[i];
    while (arr.length <= i) { arr.add(0); } arr[i] = arr[min_index];
    while (arr.length <= min_index) { arr.add(0); } arr[min_index] = tmp;
  }
    i = i + 1;
  }
  return arr;
}

void main() {
  print(_str(selection_sort([0, 5, 3, 2, 2])));
  print(_str(selection_sort(<int>[])));
  print(_str(selection_sort([-2, -5, -45])));
}
