// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { return v.toInt().toString(); } return v.toString(); }

int pivot(List<int> lst) {
  return lst[0];
}

int kth_number(List<int> lst, int k) {
  int p = pivot(lst);
  List<int> small = <int>[];
  List<int> big = <int>[];
  int i = 0;
  while (i < lst.length) {
    int e = lst[i];
    if (e < p) {
    small = (small..add(e));
  } else {
    if (e > p) {
    big = (big..add(e));
  };
  }
    i = i + 1;
  }
  if (small.length == k - 1) {
    return p;
  } else {
    if (small.length < k - 1) {
    return kth_number(big, k - small.length - 1);
  } else {
    return kth_number(small, k);
  };
  }
}

void main() {
  print(_str(kth_number([2, 1, 3, 4, 5], 3)));
  print(_str(kth_number([2, 1, 3, 4, 5], 1)));
  print(_str(kth_number([2, 1, 3, 4, 5], 5)));
  print(_str(kth_number([3, 2, 5, 6, 7, 8], 2)));
  print(_str(kth_number([25, 21, 98, 100, 76, 22, 43, 60, 89, 87], 4)));
}
