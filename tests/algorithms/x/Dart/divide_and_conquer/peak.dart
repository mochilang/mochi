// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { return v.toInt().toString(); } return v.toString(); }

int peak(List<int> lst) {
  int low = 0;
  int high = lst.length - 1;
  while (low < high) {
    int mid = (low + high) ~/ 2;
    if (lst[mid] < lst[mid + 1]) {
    low = mid + 1;
  } else {
    high = mid;
  }
  }
  return lst[low];
}

void _main() {
  print(_str(peak([1, 2, 3, 4, 5, 4, 3, 2, 1])));
  print(_str(peak([1, 10, 9, 8, 7, 6, 5, 4])));
  print(_str(peak([1, 9, 8, 7])));
  print(_str(peak([1, 2, 3, 4, 5, 6, 7, 0])));
  print(_str(peak([1, 2, 3, 4, 3, 2, 1, 0, -1, -2])));
}

void _start() {
  _main();
}

void main() => _start();
