// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

class Point {
  int x;
  int y;
  Point({required this.x, required this.y});
}

Point get_mid(Point p1, Point p2) {
  return Point(x: (p1.x + p2.x) ~/ 2, y: (p1.y + p2.y) ~/ 2);
}

String point_to_string(Point p) {
  return "(" + (p.x).toString() + "," + (p.y).toString() + ")";
}

void triangle(Point v1, Point v2, Point v3, int depth) {
  print(point_to_string(v1) + " " + point_to_string(v2) + " " + point_to_string(v3));
  if (depth == 0) {
    return;
  }
  triangle(v1, get_mid(v1, v2), get_mid(v1, v3), depth - 1);
  triangle(v2, get_mid(v1, v2), get_mid(v2, v3), depth - 1);
  triangle(v3, get_mid(v3, v2), get_mid(v1, v3), depth - 1);
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  triangle(Point(x: -175, y: -125), Point(x: 0, y: 175), Point(x: 175, y: -125), 2);
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
