// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

List<int> hexagonal_numbers(int length) {
  if (length <= 0) {
    throw Exception("Length must be a positive integer.");
  }
  List<int> res = <int>[];
  int n = 0;
  while (n < length) {
    res = [...res, n * (2 * n - 1)];
    n = n + 1;
  }
  return res;
}

void test_hexagonal_numbers() {
  List<int> expected5 = [0, 1, 6, 15, 28];
  List<int> result5 = hexagonal_numbers(5);
  if (result5 != expected5) {
    throw Exception("hexagonal_numbers(5) failed");
  }
  List<int> expected10 = [0, 1, 6, 15, 28, 45, 66, 91, 120, 153];
  List<int> result10 = hexagonal_numbers(10);
  if (result10 != expected10) {
    throw Exception("hexagonal_numbers(10) failed");
  }
}

void main() {
  test_hexagonal_numbers();
  print((hexagonal_numbers(5)).toString());
  print((hexagonal_numbers(10)).toString());
}
