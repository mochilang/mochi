// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _str(dynamic v) => v.toString();


Never _error(dynamic msg) {
  throw Exception(msg.toString());
}

bool is_arithmetic_series(List<double> xs) {
  if (xs.length == 0) {
    _error("Input list must be a non empty list");
  }
  if (xs.length == 1) {
    return true;
  }
  double diff = xs[1] - xs[0];
  int i = 0;
  while (i < xs.length - 1) {
    if (xs[i + 1] - xs[i] != diff) {
    return false;
  }
    i = i + 1;
  }
  return true;
}

double arithmetic_mean(List<double> xs) {
  if (xs.length == 0) {
    _error("Input list must be a non empty list");
  }
  double total = 0.0;
  int i = 0;
  while (i < xs.length) {
    total = total + xs[i];
    i = i + 1;
  }
  return total / xs.length.toDouble();
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print(_str(is_arithmetic_series([2.0, 4.0, 6.0])));
  print(_str(is_arithmetic_series([3.0, 6.0, 12.0, 24.0])));
  print(_str(arithmetic_mean([2.0, 4.0, 6.0])));
  print(_str(arithmetic_mean([3.0, 6.0, 9.0, 12.0])));
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
