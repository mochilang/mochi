// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

bool is_arithmetic_series(List<double> xs) {
  if (xs.length == 0) {
    throw Exception("Input list must be a non empty list");
  }
  if (xs.length == 1) {
    return true;
  }
  double diff = xs[1] - xs[0];
  int i = 0;
  while (i < xs.length - 1) {
    if (xs[i + 1] - xs[i] != diff) {
    return false;
  }
    i = i + 1;
  }
  return true;
}

double arithmetic_mean(List<double> xs) {
  if (xs.length == 0) {
    throw Exception("Input list must be a non empty list");
  }
  double total = 0.0;
  int i = 0;
  while (i < xs.length) {
    total = total + xs[i];
    i = i + 1;
  }
  return total / (xs.length as double);
}

void main() {
  print((is_arithmetic_series([2.0, 4.0, 6.0])).toString());
  print((is_arithmetic_series([3.0, 6.0, 12.0, 24.0])).toString());
  print((arithmetic_mean([2.0, 4.0, 6.0])).toString());
  print((arithmetic_mean([3.0, 6.0, 9.0, 12.0])).toString());
}
