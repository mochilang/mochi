// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

List<String> harmonic_series(double n_term) {
  if (n_term <= 0.0) {
    return List<String>.from([]);
  }
  int limit = n_term as int;
  List<String> series = <String>[];
  int i = 0;
  while (i < limit) {
    if (i == 0) {
    series = [...series, "1"];
  } else {
    series = [...series, "1/" + (i + 1).toString()];
  }
    i = i + 1;
  }
  return series;
}

void main() {
  print((harmonic_series(5.0)).toString());
}
