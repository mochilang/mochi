// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

int floor(double x) {
  int i = x as int;
  if (x - ((i).toDouble()) >= 0.0) {
    return i;
  }
  return i - 1;
}

void test_floor() {
  List<double> nums = [1.0, -1.0, 0.0, 0.0, 1.1, -1.1, 1.0, -1.0, 1000000000.0];
  List<int> expected = [1, -1, 0, 0, 1, -2, 1, -1, 1000000000];
  int idx = 0;
  while (idx < nums.length) {
    if (floor(nums[idx]) != expected[idx]) {
    throw Exception("floor test failed");
  }
    idx = idx + 1;
  }
}

void _main() {
  test_floor();
  print((floor(-1.1)).toString());
}

void _start() {
  _main();
}

void main() => _start();
