// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

bool is_int_palindrome(int _num) {
  if (_num < 0) {
    return false;
  }
  int n = _num;
  int rev = 0;
  while (n > 0) {
    rev = rev * 10 + n % 10;
    n = n ~/ 10;
  }
  return rev == _num;
}

void _main() {
  print(is_int_palindrome(-121));
  print(is_int_palindrome(0));
  print(is_int_palindrome(10));
  print(is_int_palindrome(11));
  print(is_int_palindrome(101));
  print(is_int_palindrome(120));
}

void _start() {
  _main();
}

void main() => _start();
