// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

bool perfect(int n) {
  if (n <= 0) {
    return false;
  }
  int total = 0;
  int divisor = 1;
  while (divisor <= n ~/ 2) {
    if (n % divisor == 0) {
    total = total + divisor;
  }
    divisor = divisor + 1;
  }
  return total == n;
}

void main() {
  print((perfect(27)).toString());
  print((perfect(28)).toString());
  print((perfect(29)).toString());
  print((perfect(6)).toString());
  print((perfect(12)).toString());
  print((perfect(496)).toString());
  print((perfect(8128)).toString());
  print((perfect(0)).toString());
  print((perfect(-1)).toString());
  print((perfect(33550336)).toString());
  print((perfect(33550337)).toString());
  print((perfect(1)).toString());
}
