// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

int binary_multiply(int a, int b) {
  int x = a;
  int y = b;
  int res = 0;
  while (y > 0) {
    if (y % 2 == 1) {
    res = res + x;
  }
    x = x + x;
    y = y ~/ 2 as int;
  }
  return res;
}

int binary_mod_multiply(int a, int b, int modulus) {
  int x = a;
  int y = b;
  int res = 0;
  while (y > 0) {
    if (y % 2 == 1) {
    res = (res % modulus + x % modulus) % modulus;
  }
    x = x + x;
    y = y ~/ 2 as int;
  }
  return res % modulus;
}

void _main() {
  print((binary_multiply(2, 3)).toString());
  print((binary_multiply(5, 0)).toString());
  print((binary_mod_multiply(2, 3, 5)).toString());
  print((binary_mod_multiply(10, 5, 13)).toString());
}

void _start() {
  _main();
}

void main() => _start();
