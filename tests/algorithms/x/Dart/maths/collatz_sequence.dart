// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

List<int> collatz_sequence(int n) {
  if (n < 1) {
    throw Exception("Sequence only defined for positive integers");
  }
  List<int> seq = [n];
  int current = n;
  while (current != 1) {
    if (current % 2 == 0) {
    current = current ~/ 2;
  } else {
    current = 3 * current + 1;
  }
    seq = [...seq, current];
  }
  return seq;
}

void _main() {
  int n = 11;
  List<int> seq = collatz_sequence(n);
  print((seq).toString());
  print("Collatz sequence from " + (n).toString() + " took " + (seq.length).toString() + " steps.");
}

void _start() {
  _main();
}

void main() => _start();
