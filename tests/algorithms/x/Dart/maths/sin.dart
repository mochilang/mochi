// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}


Never _error(dynamic msg) {
  throw Exception(msg.toString());
}

double PI = 3.141592653589793;
double abs(double x) {
  if (x < 0.0) {
    return -x;
  }
  return x;
}

double floor(double x) {
  int i = x.toInt();
  if (i.toDouble() > x) {
    i = i - 1;
  }
  return i.toDouble();
}

double pow(double x, int n) {
  double result = 1.0;
  int i = 0;
  while (i < n) {
    result = result * x;
    i = i + 1;
  }
  return result;
}

double factorial(int n) {
  double result = 1.0;
  int i = 2;
  while (i <= n) {
    result = result * i.toDouble();
    i = i + 1;
  }
  return result;
}

double radians(double deg) {
  return deg * PI / 180.0;
}

double taylor_sin(double angle_in_degrees, int accuracy, int rounded_values_count) {
  double k = floor(angle_in_degrees / 360.0);
  double angle = angle_in_degrees - k * 360.0;
  double angle_in_radians = radians(angle);
  double result = angle_in_radians;
  int a = 3;
  double sign = -1.0;
  int i = 0;
  while (i < accuracy) {
    result = result + sign * pow(angle_in_radians, a) / factorial(a);
    sign = -sign;
    a = a + 2;
    i = i + 1;
  }
  return result;
}

void test_sin() {
  double eps = 0.0000001;
  if ((taylor_sin(0.0, 18, 10) - 0.0).abs().compareTo(eps) > 0) {
    _error("sin(0) failed");
  }
  if ((taylor_sin(90.0, 18, 10) - 1.0).abs().compareTo(eps) > 0) {
    _error("sin(90) failed");
  }
  if ((taylor_sin(180.0, 18, 10) - 0.0).abs().compareTo(eps) > 0) {
    _error("sin(180) failed");
  }
  if ((taylor_sin(270.0, 18, 10) - -1.0).abs().compareTo(eps) > 0) {
    _error("sin(270) failed");
  }
}

void _main() {
  test_sin();
  double res = taylor_sin(64.0, 18, 10);
  print(res);
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}

void main() => _start();
