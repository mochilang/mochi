// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

int gcd(int a, int b) {
  int x = a;
  int y = b;
  while (y != 0) {
    int r = x % y;
    x = y;
    y = r;
  }
  if (x < 0) {
    return -x;
  }
  return x;
}

int get_greatest_common_divisor(List<int> nums) {
  if (nums.length == 0) {
    throw Exception("at least one number is required");
  }
  int g = nums[0];
  if (g <= 0) {
    throw Exception("numbers must be integer and greater than zero");
  }
  int i = 1;
  while (i < nums.length) {
    int n = nums[i];
    if (n <= 0) {
    throw Exception("numbers must be integer and greater than zero");
  }
    g = gcd(g, n);
    i = i + 1;
  }
  return g;
}

void main() {
  print((get_greatest_common_divisor([18, 45])).toString());
  print((get_greatest_common_divisor([23, 37])).toString());
  print((get_greatest_common_divisor([2520, 8350])).toString());
  print((get_greatest_common_divisor([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])).toString());
}
