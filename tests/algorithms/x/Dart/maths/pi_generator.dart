// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

String PI_DIGITS = "1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679";
String calculate_pi(int limit) {
  if (limit < 0 || limit > PI_DIGITS.length) {
    throw Exception("limit out of range");
  }
  return "3." + _substr(PI_DIGITS, 0, limit);
}

void test_pi_generator() {
  if (calculate_pi(15) != "3.141592653589793") {
    throw Exception("calculate_pi 15 failed");
  }
}

void _main() {
  test_pi_generator();
  print(calculate_pi(50));
}

void _start() {
  _main();
}

void main() => _start();
