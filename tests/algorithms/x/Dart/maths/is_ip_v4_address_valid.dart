// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

String _str(dynamic v) => v.toString();

List<String> split_by_dot(String s) {
  List<String> res = <String>[];
  String current = "";
  int i = 0;
  while (i < s.length) {
    String c = _substr(s, i, i + 1);
    if (c == ".") {
    res = [...res, current];
    current = "";
  } else {
    current = current + c;
  }
    i = i + 1;
  }
  res = [...res, current];
  return res;
}

bool is_digit_str(String s) {
  if (s.length == 0) {
    return false;
  }
  int i = 0;
  while (i < s.length) {
    String c = _substr(s, i, i + 1);
    if (c.compareTo("0") < 0 || c.compareTo("9") > 0) {
    return false;
  }
    i = i + 1;
  }
  return true;
}

int parse_decimal(String s) {
  int value = 0;
  int i = 0;
  while (i < s.length) {
    String c = _substr(s, i, i + 1);
    value = value * 10 + c.toInt();
    i = i + 1;
  }
  return value;
}

bool is_ip_v4_address_valid(String ip) {
  List<String> octets = split_by_dot(ip);
  if (octets.length != 4) {
    return false;
  }
  int i = 0;
  while (i < 4) {
    String oct = octets[i];
    if (!is_digit_str(oct)) {
    return false;
  }
    int number = parse_decimal(oct);
    if (_str(number).length != oct.length) {
    return false;
  }
    if (number < 0 || number > 255) {
    return false;
  }
    i = i + 1;
  }
  return true;
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print(_str(is_ip_v4_address_valid("192.168.0.23")));
  print(_str(is_ip_v4_address_valid("192.256.15.8")));
  print(_str(is_ip_v4_address_valid("172.100.0.8")));
  print(_str(is_ip_v4_address_valid("255.256.0.256")));
  print(_str(is_ip_v4_address_valid("1.2.33333333.4")));
  print(_str(is_ip_v4_address_valid("1.2.-3.4")));
  print(_str(is_ip_v4_address_valid("1.2.3")));
  print(_str(is_ip_v4_address_valid("1.2.3.4.5")));
  print(_str(is_ip_v4_address_valid("1.2.A.4")));
  print(_str(is_ip_v4_address_valid("0.0.0.0")));
  print(_str(is_ip_v4_address_valid("1.2.3.")));
  print(_str(is_ip_v4_address_valid("1.2.3.05")));
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
