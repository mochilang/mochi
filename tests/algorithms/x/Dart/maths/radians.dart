// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

double PI = 3.141592653589793;
double radians(double degree) {
  return degree / (180.0 / PI);
}

double abs_float(double x) {
  if (x < 0.0) {
    return -x;
  }
  return x;
}

bool almost_equal(double a, double b) {
  return abs_float(a - b) <= 0.00000001;
}

void test_radians() {
  if (!almost_equal(radians(180.0), PI)) {
    throw Exception("radians 180 failed");
  }
  if (!almost_equal(radians(92.0), 1.6057029118347832)) {
    throw Exception("radians 92 failed");
  }
  if (!almost_equal(radians(274.0), 4.782202150464463)) {
    throw Exception("radians 274 failed");
  }
  if (!almost_equal(radians(109.82), 1.9167205845401725)) {
    throw Exception("radians 109.82 failed");
  }
}

void _main() {
  test_radians();
  print((radians(180.0)).toString());
  print((radians(92.0)).toString());
  print((radians(274.0)).toString());
  print((radians(109.82)).toString());
}

void _start() {
  _main();
}

void main() => _start();
