// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _str(dynamic v) => v.toString();


Never _error(dynamic msg) {
  throw Exception(msg.toString());
}

double PI = 3.141592653589793;
double radians(double degree) {
  return degree / (180.0 / PI);
}

double abs_float(double x) {
  if (x < 0.0) {
    return -x;
  }
  return x;
}

bool almost_equal(double a, double b) {
  return abs_float(a - b) <= 0.00000001;
}

void test_radians() {
  if (!almost_equal(radians(180.0), PI)) {
    _error("radians 180 failed");
  }
  if (!almost_equal(radians(92.0), 1.6057029118347832)) {
    _error("radians 92 failed");
  }
  if (!almost_equal(radians(274.0), 4.782202150464463)) {
    _error("radians 274 failed");
  }
  if (!almost_equal(radians(109.82), 1.9167205845401725)) {
    _error("radians 109.82 failed");
  }
}

void _main() {
  test_radians();
  print(_str(radians(180.0)));
  print(_str(radians(92.0)));
  print(_str(radians(274.0)));
  print(_str(radians(109.82)));
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}

void main() => _start();
