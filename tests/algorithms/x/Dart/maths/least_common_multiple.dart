// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

int gcd(int a, int b) {
  int x = (a >= 0 ? a : -a);
  int y = (b >= 0 ? b : -b);
  while (y != 0) {
    int temp = x % y;
    x = y;
    y = temp;
  }
  return x;
}

int lcm_slow(int a, int b) {
  int max = (a >= b ? a : b);
  int multiple = max;
  while (multiple % a != 0 || multiple % b != 0) {
    multiple = multiple + max;
  }
  return multiple;
}

int lcm_fast(int a, int b) {
  return a ~/ gcd(a, b) * b;
}

void main() {
  print((lcm_slow(5, 2)).toString());
  print((lcm_slow(12, 76)).toString());
  print((lcm_fast(5, 2)).toString());
  print((lcm_fast(12, 76)).toString());
}
