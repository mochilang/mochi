// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

int max_sum_sliding_window(List<int> arr, int k) {
  if (k < 0 || arr.length < k) {
    throw Exception("Invalid Input");
  }
  int idx = 0;
  int current_sum = 0;
  while (idx < k) {
    current_sum = current_sum + arr[idx];
    idx = idx + 1;
  }
  int max_sum = current_sum;
  int i = 0;
  while (i < arr.length - k) {
    current_sum = current_sum - arr[i] + arr[i + k];
    if (current_sum > max_sum) {
    max_sum = current_sum;
  }
    i = i + 1;
  }
  return max_sum;
}

void test_max_sum_sliding_window() {
  List<int> arr1 = [1, 4, 2, 10, 2, 3, 1, 0, 20];
  if (max_sum_sliding_window(arr1, 4) != 24) {
    throw Exception("test1 failed");
  }
  List<int> arr2 = [1, 4, 2, 10, 2, 13, 1, 0, 2];
  if (max_sum_sliding_window(arr2, 4) != 27) {
    throw Exception("test2 failed");
  }
}

void _main() {
  test_max_sum_sliding_window();
  List<int> sample = [1, 4, 2, 10, 2, 3, 1, 0, 20];
  print((max_sum_sliding_window(sample, 4)).toString());
}

void _start() {
  _main();
}

void main() => _start();
