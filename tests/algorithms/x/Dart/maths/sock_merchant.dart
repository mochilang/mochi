// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

int sock_merchant(List<int> colors) {
  List<int> arr = <int>[];
  int i = 0;
  while (i < colors.length) {
    arr = [...arr, colors[i]];
    i = i + 1;
  }
  int n = arr.length;
  int a = 0;
  while (a < n) {
    int min_idx = a;
    int b = a + 1;
    while (b < n) {
    if (arr[b] < arr[min_idx]) {
    min_idx = b;
  }
    b = b + 1;
  }
    int temp = arr[a];
    while (arr.length <= a) { arr.add(0); } arr[a] = arr[min_idx];
    while (arr.length <= min_idx) { arr.add(0); } arr[min_idx] = temp;
    a = a + 1;
  }
  int pairs = 0;
  i = 0;
  while (i < n) {
    int count = 1;
    while (i + 1 < n && arr[i] == arr[i + 1]) {
    count = count + 1;
    i = i + 1;
  }
    pairs = pairs + count ~/ 2;
    i = i + 1;
  }
  return pairs;
}

void test_sock_merchant() {
  List<int> example1 = [10, 20, 20, 10, 10, 30, 50, 10, 20];
  if (sock_merchant(example1) != 3) {
    throw Exception("example1 failed");
  }
  List<int> example2 = [1, 1, 3, 3];
  if (sock_merchant(example2) != 2) {
    throw Exception("example2 failed");
  }
}

void _main() {
  test_sock_merchant();
  List<int> example1 = [10, 20, 20, 10, 10, 30, 50, 10, 20];
  print((sock_merchant(example1)).toString());
  List<int> example2 = [1, 1, 3, 3];
  print((sock_merchant(example2)).toString());
}

void _start() {
  _main();
}

void main() => _start();
