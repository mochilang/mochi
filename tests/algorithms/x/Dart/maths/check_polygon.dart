// Generated by Mochi transpiler
dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

String _str(dynamic v) => v.toString();


Never _error(dynamic msg) {
  throw Exception(msg.toString());
}

bool check_polygon(List<double> nums) {
  if (nums.length < 2) {
    _error("Monogons and Digons are not polygons in the Euclidean space");
  }
  int i = 0;
  while (i < nums.length) {
    if (nums[i] <= 0.0) {
    _error("All values must be greater than 0");
  }
    i = i + 1;
  }
  double total = 0.0;
  double max_side = 0.0;
  i = 0;
  while (i < nums.length) {
    double v = nums[i];
    total = total + v;
    if (v > max_side) {
    max_side = v;
  }
    i = i + 1;
  }
  return max_side < total - max_side;
}

List<double> nums = [3.0, 7.0, 13.0, 2.0];
bool __ = check_polygon(nums);
void main() {
  print(_str(check_polygon([6.0, 10.0, 5.0])));
  print(_str(check_polygon([3.0, 7.0, 13.0, 2.0])));
  print(_str(check_polygon([1.0, 4.3, 5.2, 12.2])));
  print(_str(nums));
}
