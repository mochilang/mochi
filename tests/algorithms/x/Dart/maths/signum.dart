// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

int signum(double _num) {
  if (_num < 0.0) {
    return -1;
  }
  if (_num > 0.0) {
    return 1;
  }
  return 0;
}

void test_signum() {
  if (signum(5.0) != 1) {
    throw Exception("signum(5) failed");
  }
  if (signum(-5.0) != -1) {
    throw Exception("signum(-5) failed");
  }
  if (signum(0.0) != 0) {
    throw Exception("signum(0) failed");
  }
  if (signum(10.5) != 1) {
    throw Exception("signum(10.5) failed");
  }
  if (signum(-10.5) != -1) {
    throw Exception("signum(-10.5) failed");
  }
  if (signum(0.000001) != 1) {
    throw Exception("signum(1e-6) failed");
  }
  if (signum(-0.000001) != -1) {
    throw Exception("signum(-1e-6) failed");
  }
  if (signum(123456789.0) != 1) {
    throw Exception("signum(123456789) failed");
  }
  if (signum(-123456789.0) != -1) {
    throw Exception("signum(-123456789) failed");
  }
}

void _main() {
  test_signum();
  print(signum(12.0));
  print(signum(-12.0));
  print(signum(0.0));
}

void _start() {
  _main();
}

void main() => _start();
