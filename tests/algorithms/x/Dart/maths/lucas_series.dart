// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

int recursive_lucas_number(int n) {
  if (n == 0) {
    return 2;
  }
  if (n == 1) {
    return 1;
  }
  return recursive_lucas_number(n - 1) + recursive_lucas_number(n - 2);
}

int dynamic_lucas_number(int n) {
  int a = 2;
  int b = 1;
  int i = 0;
  while (i < n) {
    int next = a + b;
    a = b;
    b = next;
    i = i + 1;
  }
  return a;
}

void main() {
  print((recursive_lucas_number(1)).toString());
  print((recursive_lucas_number(20)).toString());
  print((recursive_lucas_number(0)).toString());
  print((recursive_lucas_number(5)).toString());
  print((dynamic_lucas_number(1)).toString());
  print((dynamic_lucas_number(20)).toString());
  print((dynamic_lucas_number(0)).toString());
  print((dynamic_lucas_number(25)).toString());
}
