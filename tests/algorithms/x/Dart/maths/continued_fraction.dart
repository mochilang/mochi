// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

int floor_div(int a, int b) {
  int q = a ~/ b;
  int r = a % b;
  if (r != 0 && (a < 0 && b > 0 || a > 0 && b < 0)) {
    q = q - 1;
  }
  return q;
}

List<int> continued_fraction(int numerator, int denominator) {
  int _num = numerator;
  int den = denominator;
  List<int> result = <int>[];
  while (true) {
    int integer_part = floor_div(_num, den);
    result = [...result, integer_part];
    _num = _num - integer_part * den;
    if (_num == 0) {
    break;
  }
    int tmp = _num;
    _num = den;
    den = tmp;
  }
  return result;
}

String list_to_string(List<int> lst) {
  String s = "[";
  int i = 0;
  while (i < lst.length) {
    s = s + (lst[i]).toString();
    if (i < lst.length - 1) {
    s = s + ", ";
  }
    i = i + 1;
  }
  return s + "]";
}

void main() {
  print("Continued Fraction of 0.84375 is: " + list_to_string(continued_fraction(27, 32)));
}
