// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

int gcd(int a, int b) {
  int x = a;
  int y = b;
  while (y != 0) {
    int t = x % y;
    x = y;
    y = t;
  }
  if (x < 0) {
    return -x;
  }
  return x;
}

List<String> proper_fractions(int den) {
  if (den < 0) {
    throw Exception("The Denominator Cannot be less than 0");
  }
  List<String> res = <String>[];
  int n = 1;
  while (n < den) {
    if (gcd(n, den) == 1) {
    res = [...res, (n).toString() + "/" + (den).toString()];
  }
    n = n + 1;
  }
  return res;
}

void test_proper_fractions() {
  List<String> a = proper_fractions(10);
  if (a != ["1/10", "3/10", "7/10", "9/10"]) {
    throw Exception("test 10 failed");
  }
  List<String> b = proper_fractions(5);
  if (b != ["1/5", "2/5", "3/5", "4/5"]) {
    throw Exception("test 5 failed");
  }
  List<String> c = proper_fractions(0);
  if (c != []) {
    throw Exception("test 0 failed");
  }
}

void _main() {
  test_proper_fractions();
  print((proper_fractions(10)).toString());
  print((proper_fractions(5)).toString());
  print((proper_fractions(0)).toString());
}

void _start() {
  _main();
}

void main() => _start();
