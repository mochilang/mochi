// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

double exp_approx(double x) {
  double sum = 1.0;
  double term = 1.0;
  int i = 1;
  while (i <= 20) {
    term = term * x / i;
    sum = sum + term;
    i = i + 1;
  }
  return sum;
}

double f(double x) {
  return 8.0 * x - 2.0 * exp_approx(-x);
}

double secant_method(double lower_bound, double upper_bound, int repeats) {
  double x0 = lower_bound;
  double x1 = upper_bound;
  int i = 0;
  while (i < repeats) {
    double fx1 = f(x1);
    double fx0 = f(x0);
    double new_x = x1 - fx1 * (x1 - x0) / (fx1 - fx0);
    x0 = x1;
    x1 = new_x;
    i = i + 1;
  }
  return x1;
}

void main() {
  print((secant_method(1.0, 3.0, 2)).toString());
}
