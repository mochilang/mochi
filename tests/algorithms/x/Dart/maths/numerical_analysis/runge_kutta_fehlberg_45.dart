// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}


Never _error(dynamic msg) {
  throw Exception(msg.toString());
}

List<double> runge_kutta_fehlberg_45(dynamic func, double x_initial, double y_initial, double step_size, double x_final) {
  if (x_initial >= x_final) {
    _error("The final value of x must be greater than initial value of x.");
  }
  if (step_size <= 0.0) {
    _error("Step size must be positive.");
  }
  int n = ((x_final - x_initial) / step_size).toInt();
  List<double> ys = <double>[];
  double x = x_initial;
  double y = y_initial;
  ys = [...ys, y];
  int i = 0;
  while (i < n) {
    double k1 = step_size * func(x, y);
    double k2 = step_size * func(x + step_size / 4.0, y + k1 / 4.0);
    double k3 = step_size * func(x + 3.0 / 8.0 * step_size, y + 3.0 / 32.0 * k1 + 9.0 / 32.0 * k2);
    double k4 = step_size * func(x + 12.0 / 13.0 * step_size, y + 1932.0 / 2197.0 * k1 - 7200.0 / 2197.0 * k2 + 7296.0 / 2197.0 * k3);
    double k5 = step_size * func(x + step_size, y + 439.0 / 216.0 * k1 - 8.0 * k2 + 3680.0 / 513.0 * k3 - 845.0 / 4104.0 * k4);
    double k6 = step_size * func(x + step_size / 2.0, y - 8.0 / 27.0 * k1 + 2.0 * k2 - 3544.0 / 2565.0 * k3 + 1859.0 / 4104.0 * k4 - 11.0 / 40.0 * k5);
    y = y + 16.0 / 135.0 * k1 + 6656.0 / 12825.0 * k3 + 28561.0 / 56430.0 * k4 - 9.0 / 50.0 * k5 + 2.0 / 55.0 * k6;
    x = x + step_size;
    ys = [...ys, y];
    i = i + 1;
  }
  return ys;
}

void _main() {
  double f1(double x, double y) {
  return 1.0 + y * y;
}
  List<double> y1 = runge_kutta_fehlberg_45(f1, 0.0, 0.0, 0.2, 1.0);
  print(y1[1]);
  double f2(double x, double y) {
  return x;
}
  List<double> y2 = runge_kutta_fehlberg_45(f2, -1.0, 0.0, 0.2, 0.0);
  print(y2[1]);
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}

void main() => _start();
