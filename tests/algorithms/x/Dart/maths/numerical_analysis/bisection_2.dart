// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

double equation(double x) {
  return 10.0 - x * x;
}

double bisection(double a, double b) {
  if (equation(a) * equation(b) >= 0.0) {
    throw Exception("Wrong space!");
  }
  double left = a;
  double right = b;
  double c = left;
  while (right - left >= 0.01) {
    c = (left + right) / 2.0;
    if (equation(c) == 0.0) {
    break;
  }
    if (equation(c) * equation(left) < 0.0) {
    right = c;
  } else {
    left = c;
  }
  }
  return c;
}

void main() {
  print(bisection(-2.0, 5.0));
  print(bisection(0.0, 6.0));
}
