// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

double expApprox(double x) {
  bool neg = false;
  double y = x;
  if (x < 0.0) {
    neg = true;
    y = -x;
  }
  double term = 1.0;
  double sum = 1.0;
  int n = 1;
  while (n < 30) {
    term = term * y / (n as double);
    sum = sum + term;
    n = n + 1;
  }
  if (neg) {
    return 1.0 / sum;
  }
  return sum;
}

List<double> tangent_hyperbolic(List<double> vector) {
  List<double> result = <double>[];
  int i = 0;
  while (i < vector.length) {
    double x = vector[i];
    double t = 2.0 / (1.0 + expApprox(-2.0 * x)) - 1.0;
    result = [...result, t];
    i = i + 1;
  }
  return result;
}

void _main() {
  List<double> v1 = [1.0, 5.0, 6.0, -0.67];
  List<double> v2 = [8.0, 10.0, 2.0, -0.98, 13.0];
  print((tangent_hyperbolic(v1)).toString());
  print((tangent_hyperbolic(v2)).toString());
}

void _start() {
  _main();
}

void main() => _start();
