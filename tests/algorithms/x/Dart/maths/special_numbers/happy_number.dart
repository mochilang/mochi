// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

bool is_happy_number(int _num) {
  if (_num <= 0) {
    throw Exception("num must be a positive integer");
  }
  List<int> seen = <int>[];
  int n = _num;
  while (n != 1) {
    int i = 0;
    while (i < seen.length) {
    if (seen[i] == n) {
    return false;
  }
    i = i + 1;
  }
    seen = [...seen, n];
    int total = 0;
    int temp = n;
    while (temp > 0) {
    int digit = temp % 10;
    total = total + digit * digit;
    temp = temp ~/ 10;
  }
    n = total;
  }
  return true;
}

void test_is_happy_number() {
  if (!is_happy_number(19)) {
    throw Exception("19 should be happy");
  }
  if (is_happy_number(2)) {
    throw Exception("2 should be unhappy");
  }
  if (!is_happy_number(23)) {
    throw Exception("23 should be happy");
  }
  if (!is_happy_number(1)) {
    throw Exception("1 should be happy");
  }
}

void _main() {
  test_is_happy_number();
  print(is_happy_number(19));
}

void _start() {
  _main();
}

void main() => _start();
