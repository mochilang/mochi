// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

bool perfect(int n) {
  if (n <= 0) {
    return false;
  }
  int limit = n ~/ 2;
  int sum = 0;
  int i = 1;
  while (i <= limit) {
    if (n % i == 0) {
    sum = sum + i;
  }
    i = i + 1;
  }
  return sum == n;
}

void _main() {
  List<int> numbers = [6, 28, 29, 12, 496, 8128, 0, -1];
  int idx = 0;
  while (idx < numbers.length) {
    int _num = numbers[idx];
    if (perfect(_num)) {
    print((_num).toString() + " is a Perfect Number.");
  } else {
    print((_num).toString() + " is not a Perfect Number.");
  }
    idx = idx + 1;
  }
}

void _start() {
  _main();
}

void main() => _start();
