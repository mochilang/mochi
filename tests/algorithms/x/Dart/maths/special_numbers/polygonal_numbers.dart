// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

int polygonal_num(int n, int sides) {
  if (n < 0 || sides < 3) {
    throw Exception("Invalid input: num must be >= 0 and sides must be >= 3.");
  }
  int term1 = (sides - 2) * n * n;
  int term2 = (sides - 4) * n;
  return (term1 - term2) ~/ 2;
}

void _main() {
  int n = 5;
  int sides = 4;
  int result = polygonal_num(n, sides);
  print((result).toString());
}

void _start() {
  _main();
}

void main() => _start();
