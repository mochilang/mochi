// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

int triangular_number(int position) {
  if (position < 0) {
    throw Exception("position must be non-negative");
  }
  return position * (position + 1) ~/ 2;
}

void test_triangular_number() {
  if (triangular_number(1) != 1) {
    throw Exception("triangular_number(1) failed");
  }
  if (triangular_number(3) != 6) {
    throw Exception("triangular_number(3) failed");
  }
}

void _main() {
  test_triangular_number();
  print(triangular_number(10));
}

void _start() {
  _main();
}

void main() => _start();
