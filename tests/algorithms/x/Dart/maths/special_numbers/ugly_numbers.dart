// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

int ugly_numbers(int n) {
  if (n <= 0) {
    return 1;
  }
  List<int> ugly_nums = <int>[];
  ugly_nums = [...ugly_nums, 1];
  int i2 = 0;
  int i3 = 0;
  int i5 = 0;
  int next_2 = 2;
  int next_3 = 3;
  int next_5 = 5;
  int count = 1;
  while (count < n) {
    int next_num = (next_2 < next_3 ? (next_2 < next_5 ? next_2 : next_5) : (next_3 < next_5 ? next_3 : next_5));
    ugly_nums = [...ugly_nums, next_num];
    if (next_num == next_2) {
    i2 = i2 + 1;
    next_2 = ugly_nums[i2] * 2;
  }
    if (next_num == next_3) {
    i3 = i3 + 1;
    next_3 = ugly_nums[i3] * 3;
  }
    if (next_num == next_5) {
    i5 = i5 + 1;
    next_5 = ugly_nums[i5] * 5;
  }
    count = count + 1;
  }
  return ugly_nums[ugly_nums.length - 1];
}

void main() {
  print((ugly_numbers(100)).toString());
  print((ugly_numbers(0)).toString());
  print((ugly_numbers(20)).toString());
  print((ugly_numbers(-5)).toString());
  print((ugly_numbers(200)).toString());
}
