// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

int abs_int(int x) {
  if (x < 0) {
    return -x;
  }
  return x;
}

int gcd(int a, int b) {
  if (a == 0) {
    return abs_int(b);
  }
  return gcd(b % a, a);
}

int power(int x, int y, int m) {
  if (y == 0) {
    return 1 % m;
  }
  int temp = power(x, y ~/ 2, m) % m;
  temp = temp * temp % m;
  if (y % 2 == 1) {
    temp = temp * x % m;
  }
  return temp;
}

bool is_carmichael_number(int n) {
  if (n <= 0) {
    throw Exception("Number must be positive");
  }
  int b = 2;
  while (b < n) {
    if (gcd(b, n) == 1) {
    if (power(b, n - 1, n) != 1) {
    return false;
  };
  }
    b = b + 1;
  }
  return true;
}

void main() {
  print((power(2, 15, 3)).toString());
  print((power(5, 1, 30)).toString());
  print((is_carmichael_number(4)).toString());
  print((is_carmichael_number(561)).toString());
  print((is_carmichael_number(562)).toString());
  print((is_carmichael_number(1105)).toString());
}
