// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _str(dynamic v) => v.toString();


Never _error(dynamic msg) {
  throw Exception(msg.toString());
}

int abs_int(int x) {
  if (x < 0) {
    return -x;
  }
  return x;
}

int gcd(int a, int b) {
  if (a == 0) {
    return abs_int(b);
  }
  return gcd(b % a, a);
}

int power(int x, int y, int m) {
  if (y == 0) {
    return 1 % m;
  }
  int temp = power(x, y ~/ 2, m) % m;
  temp = temp * temp % m;
  if (y % 2 == 1) {
    temp = temp * x % m;
  }
  return temp;
}

bool is_carmichael_number(int n) {
  if (n <= 0) {
    _error("Number must be positive");
  }
  int b = 2;
  while (b < n) {
    if (gcd(b, n) == 1) {
    if (power(b, n - 1, n) != 1) {
    return false;
  };
  }
    b = b + 1;
  }
  return true;
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print(_str(power(2, 15, 3)));
  print(_str(power(5, 1, 30)));
  print(_str(is_carmichael_number(4)));
  print(_str(is_carmichael_number(561)));
  print(_str(is_carmichael_number(562)));
  print(_str(is_carmichael_number(1105)));
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
