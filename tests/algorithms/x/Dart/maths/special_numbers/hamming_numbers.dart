// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}


Never _error(dynamic msg) {
  throw Exception(msg.toString());
}

List<int> hamming(int n) {
  if (n < 1) {
    _error("n_element should be a positive number");
  }
  List<int> hamming_list = [1];
  int i = 0;
  int j = 0;
  int k = 0;
  int index = 1;
  while (index < n) {
    while (hamming_list[i] * 2 <= hamming_list[hamming_list.length - 1]) {
    i = i + 1;
  }
    while (hamming_list[j] * 3 <= hamming_list[hamming_list.length - 1]) {
    j = j + 1;
  }
    while (hamming_list[k] * 5 <= hamming_list[hamming_list.length - 1]) {
    k = k + 1;
  }
    int m1 = hamming_list[i] * 2;
    int m2 = hamming_list[j] * 3;
    int m3 = hamming_list[k] * 5;
    int next = m1;
    if (m2 < next) {
    next = m2;
  }
    if (m3 < next) {
    next = m3;
  }
    hamming_list = [...hamming_list, next];
    index = index + 1;
  }
  return hamming_list;
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print("[" + hamming(5).join(', ') + "]");
  print("[" + hamming(10).join(', ') + "]");
  print("[" + hamming(15).join(', ') + "]");
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
