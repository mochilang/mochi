// Generated by Mochi transpiler

Never _error(dynamic msg) {
  throw Exception(msg.toString());
}

double pow_float(double base, int exp) {
  double result = 1.0;
  int exponent = exp;
  if (exponent < 0) {
    exponent = -exponent;
    int i = 0;
    while (i < exponent) {
    result = result * base;
    i = i + 1;
  };
    return 1.0 / result;
  }
  int i = 0;
  while (i < exponent) {
    result = result * base;
    i = i + 1;
  }
  return result;
}

double sum_of_geometric_progression(int first_term, int common_ratio, int num_of_terms) {
  if (common_ratio == 1) {
    return (num_of_terms * first_term).toDouble();
  }
  double a = first_term.toDouble();
  double r = common_ratio.toDouble();
  return a / (1.0 - r) * (1.0 - pow_float(r, num_of_terms));
}

void test_sum() {
  if (sum_of_geometric_progression(1, 2, 10) != 1023.0) {
    _error("example1 failed");
  }
  if (sum_of_geometric_progression(1, 10, 5) != 11111.0) {
    _error("example2 failed");
  }
  if (sum_of_geometric_progression(-1, 2, 10) != -1023.0) {
    _error("example3 failed");
  }
}

void _main() {
  test_sum();
  print(sum_of_geometric_progression(1, 2, 10));
}

void _start() {
  _main();
}

void main() => _start();
