// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

List<int> two_pointer(List<int> nums, int target) {
  int i = 0;
  int j = nums.length - 1;
  while (i < j) {
    int s = nums[i] + nums[j];
    if (s == target) {
    return [i, j];
  }
    if (s < target) {
    i = i + 1;
  } else {
    j = j - 1;
  }
  }
  return ([] as List).map((e) => (e is BigInt ? e.toInt() : (e as int))).toList();
}

void test_two_pointer() {
  if (two_pointer([2, 7, 11, 15], 9) != [0, 1]) {
    throw Exception("case1");
  }
  if (two_pointer([2, 7, 11, 15], 17) != [0, 3]) {
    throw Exception("case2");
  }
  if (two_pointer([2, 7, 11, 15], 18) != [1, 2]) {
    throw Exception("case3");
  }
  if (two_pointer([2, 7, 11, 15], 26) != [2, 3]) {
    throw Exception("case4");
  }
  if (two_pointer([1, 3, 3], 6) != [1, 2]) {
    throw Exception("case5");
  }
  if (two_pointer([2, 7, 11, 15], 8).length != 0) {
    throw Exception("case6");
  }
  if (two_pointer([0, 3, 6, 9, 12, 15, 18, 21, 24, 27], 19).length != 0) {
    throw Exception("case7");
  }
  if (two_pointer([1, 2, 3], 6).length != 0) {
    throw Exception("case8");
  }
}

void _main() {
  test_two_pointer();
  print("[" + two_pointer([2, 7, 11, 15], 9).join(', ') + "]");
}

void _start() {
  _main();
}

void main() => _start();
