// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}


bool _listEq(List a, List b) {
  if (a.length != b.length) return false;
  for (var i = 0; i < a.length; i++) {
    final x = a[i];
    final y = b[i];
    if (x is List && y is List) {
      if (!_listEq(x, y)) return false;
    } else if (x != y) {
      return false;
    }
  }
  return true;
}


Never _error(String msg) {
  throw Exception(msg);
}

List<int> two_pointer(List<int> nums, int target) {
  int i = 0;
  int j = nums.length - 1;
  while (i < j) {
    int s = nums[i] + nums[j];
    if (s == target) {
    return [i, j];
  }
    if (s < target) {
    i = i + 1;
  } else {
    j = j - 1;
  }
  }
  return ([] as List<dynamic>).map((e) => (e is BigInt ? e.toInt() : (e as int))).toList();
}

void test_two_pointer() {
  if (!_listEq(two_pointer([2, 7, 11, 15], 9), [0, 1])) {
    _error("case1");
  }
  if (!_listEq(two_pointer([2, 7, 11, 15], 17), [0, 3])) {
    _error("case2");
  }
  if (!_listEq(two_pointer([2, 7, 11, 15], 18), [1, 2])) {
    _error("case3");
  }
  if (!_listEq(two_pointer([2, 7, 11, 15], 26), [2, 3])) {
    _error("case4");
  }
  if (!_listEq(two_pointer([1, 3, 3], 6), [1, 2])) {
    _error("case5");
  }
  if (two_pointer([2, 7, 11, 15], 8).length != 0) {
    _error("case6");
  }
  if (two_pointer([0, 3, 6, 9, 12, 15, 18, 21, 24, 27], 19).length != 0) {
    _error("case7");
  }
  if (two_pointer([1, 2, 3], 6).length != 0) {
    _error("case8");
  }
}

void _main() {
  test_two_pointer();
  print("[" + two_pointer([2, 7, 11, 15], 9).join(', ') + "]");
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}

void main() => _start();
