// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

String _str(dynamic v) => v.toString();

int exact_prime_factor_count(int n) {
  int count = 0;
  int _num = n;
  if (_num % 2 == 0) {
    count = count + 1;
    while (_num % 2 == 0) {
    _num = _num ~/ 2;
  };
  }
  int i = 3;
  while (i * i <= _num) {
    if (_num % i == 0) {
    count = count + 1;
    while (_num % i == 0) {
    _num = _num ~/ i;
  };
  }
    i = i + 2;
  }
  if (_num > 2) {
    count = count + 1;
  }
  return count;
}

double ln(double x) {
  double ln2 = 0.6931471805599453;
  double y = x;
  double k = 0.0;
  while (y > 2.0) {
    y = y / 2.0;
    k = k + ln2;
  }
  while (y < 1.0) {
    y = y * 2.0;
    k = k - ln2;
  }
  double t = (y - 1.0) / (y + 1.0);
  double term = t;
  double sum = 0.0;
  int n = 1;
  while (n <= 19) {
    sum = sum + term / n.toDouble();
    term = term * t * t;
    n = n + 2;
  }
  return k + 2.0 * sum;
}

double floor(double x) {
  dynamic i = x.toInt();
  if (i.toDouble() > x) {
    i = i - 1;
  }
  return i.toDouble();
}

double round4(double x) {
  double m = 10000.0;
  return floor(x * m + 0.5) / m;
}

void _main() {
  int n = 51242183;
  int count = exact_prime_factor_count(n);
  print("The number of distinct prime factors is/are " + _str(count));
  double loglog = ln(ln(n.toDouble()));
  print("The value of log(log(n)) is " + _str(round4(loglog)));
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}

void main() => _start();
