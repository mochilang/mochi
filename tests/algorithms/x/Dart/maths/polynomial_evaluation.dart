// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

double pow_float(double base, int exponent) {
  int exp = exponent;
  double result = 1.0;
  int i = 0;
  while (i < exp) {
    result = result * base;
    i = i + 1;
  }
  return result;
}

double evaluate_poly(List<double> poly, double x) {
  double total = 0.0;
  int i = 0;
  while (i < poly.length) {
    total = total + poly[i] * pow_float(x, i);
    i = i + 1;
  }
  return total;
}

double horner(List<double> poly, double x) {
  double result = 0.0;
  int i = poly.length - 1;
  while (i >= 0) {
    result = result * x + poly[i];
    i = i - 1;
  }
  return result;
}

void test_polynomial_evaluation() {
  List<double> poly = [0.0, 0.0, 5.0, 9.3, 7.0];
  double x = 10.0;
  if (evaluate_poly(poly, x) != 79800.0) {
    throw Exception("evaluate_poly failed");
  }
  if (horner(poly, x) != 79800.0) {
    throw Exception("horner failed");
  }
}

void _main() {
  test_polynomial_evaluation();
  List<double> poly = [0.0, 0.0, 5.0, 9.3, 7.0];
  double x = 10.0;
  print(evaluate_poly(poly, x));
  print(horner(poly, x));
}

void _start() {
  _main();
}

void main() => _start();
