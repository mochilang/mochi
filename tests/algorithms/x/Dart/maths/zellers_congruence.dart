// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}


bool _listEq(List a, List b) {
  if (a.length != b.length) return false;
  for (var i = 0; i < a.length; i++) {
    final x = a[i];
    final y = b[i];
    if (x is List && y is List) {
      if (!_listEq(x, y)) return false;
    } else if (x != y) {
      return false;
    }
  }
  return true;
}


Never _error(String msg) {
  throw Exception(msg);
}

int parse_decimal(String s) {
  int value = 0;
  int i = 0;
  while (i < s.length) {
    String c = _substr(s, i, i + 1);
    if (c.compareTo("0") < 0 || c.compareTo("9") > 0) {
    _error("invalid literal");
  }
    value = value * 10 + (int.parse(c));
    i = i + 1;
  }
  return value;
}

String zeller_day(String date_input) {
  Map<int, String> days = {0: "Sunday", 1: "Monday", 2: "Tuesday", 3: "Wednesday", 4: "Thursday", 5: "Friday", 6: "Saturday"};
  if (date_input.length != 10) {
    _error("Must be 10 characters long");
  }
  int m = parse_decimal(_substr(date_input, 0, 2));
  if (m <= 0 || m >= 13) {
    _error("Month must be between 1 - 12");
  }
  String sep1 = _substr(date_input, 2, 2 + 1);
  if (sep1 != "-" && sep1 != "/") {
    _error("Date separator must be '-' or '/'");
  }
  int d = parse_decimal(_substr(date_input, 3, 5));
  if (d <= 0 || d >= 32) {
    _error("Date must be between 1 - 31");
  }
  String sep2 = _substr(date_input, 5, 5 + 1);
  if (sep2 != "-" && sep2 != "/") {
    _error("Date separator must be '-' or '/'");
  }
  int y = parse_decimal(_substr(date_input, 6, 10));
  if (y <= 45 || y >= 8500) {
    _error("Year out of range. There has to be some sort of limit...right?");
  }
  int year = y;
  int month = m;
  if (month <= 2) {
    year = year - 1;
    month = month + 12;
  }
  int c = year ~/ 100;
  int k = year % 100;
  int t = (2.6 * (month.toDouble()) - 5.39).toInt();
  int u = c ~/ 4;
  int v = k ~/ 4;
  int x = d + k;
  int z = t + u + v + x;
  int w = z - 2 * c;
  int f = w % 7;
  if (f < 0) {
    f = f + 7;
  }
  return (days[f] ?? "");
}

String zeller(String date_input) {
  String day = zeller_day(date_input);
  return "Your date " + date_input + ", is a " + day + "!";
}

void test_zeller() {
  List<String> inputs = ["01-31-2010", "02-01-2010", "11-26-2024", "07-04-1776"];
  List<String> expected = ["Sunday", "Monday", "Tuesday", "Thursday"];
  int i = 0;
  while (i < inputs.length) {
    String res = zeller_day(inputs[i]);
    if (res != expected[i]) {
    _error("zeller test failed");
  }
    i = i + 1;
  }
}

void _main() {
  test_zeller();
  print(zeller("01-31-2010"));
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}

void main() => _start();
