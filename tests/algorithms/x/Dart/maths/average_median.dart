// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

List<int> bubble_sort(List<int> nums) {
  List<int> arr = nums;
  int n = arr.length;
  int i = 0;
  while (i < n) {
    int j = 0;
    while (j < n - 1) {
    int a = arr[j];
    int b = arr[j + 1];
    if (a > b) {
    while (arr.length <= j) { arr.add(0); } arr[j] = b;
    while (arr.length <= j + 1) { arr.add(0); } arr[j + 1] = a;
  }
    j = j + 1;
  }
    i = i + 1;
  }
  return arr;
}

double median(List<int> nums) {
  List<int> sorted_list = bubble_sort(nums);
  int length = sorted_list.length;
  int mid_index = length ~/ 2;
  if (length % 2 == 0) {
    return (sorted_list[mid_index] + sorted_list[mid_index - 1] as double) / 2.0;
  } else {
    return sorted_list[mid_index] as double;
  }
}

void main() {
  print((median([0])).toString());
  print((median([4, 1, 3, 2])).toString());
  print((median([2, 70, 6, 50, 20, 8, 4])).toString());
}
