// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

int abs_int(int n) {
  if (n < 0) {
    return -n;
  }
  return n;
}

int sum_of_digits(int n) {
  int m = abs_int(n);
  int res = 0;
  while (m > 0) {
    res = res + m % 10;
    m = m ~/ 10;
  }
  return res;
}

int sum_of_digits_recursion(int n) {
  int m = abs_int(n);
  if (m < 10) {
    return m;
  }
  return m % 10 + sum_of_digits_recursion(m ~/ 10);
}

int sum_of_digits_compact(int n) {
  String s = (abs_int(n)).toString();
  int res = 0;
  int i = 0;
  while (i < s.length) {
    res = res + ((s.substring(i, i + 1)).codeUnitAt(0));
    i = i + 1;
  }
  return res;
}

void test_sum_of_digits() {
  if (sum_of_digits(12345) != 15) {
    throw Exception("sum_of_digits 12345 failed");
  }
  if (sum_of_digits(123) != 6) {
    throw Exception("sum_of_digits 123 failed");
  }
  if (sum_of_digits(-123) != 6) {
    throw Exception("sum_of_digits -123 failed");
  }
  if (sum_of_digits(0) != 0) {
    throw Exception("sum_of_digits 0 failed");
  }
  if (sum_of_digits_recursion(12345) != 15) {
    throw Exception("recursion 12345 failed");
  }
  if (sum_of_digits_recursion(123) != 6) {
    throw Exception("recursion 123 failed");
  }
  if (sum_of_digits_recursion(-123) != 6) {
    throw Exception("recursion -123 failed");
  }
  if (sum_of_digits_recursion(0) != 0) {
    throw Exception("recursion 0 failed");
  }
  if (sum_of_digits_compact(12345) != 15) {
    throw Exception("compact 12345 failed");
  }
  if (sum_of_digits_compact(123) != 6) {
    throw Exception("compact 123 failed");
  }
  if (sum_of_digits_compact(-123) != 6) {
    throw Exception("compact -123 failed");
  }
  if (sum_of_digits_compact(0) != 0) {
    throw Exception("compact 0 failed");
  }
}

void _main() {
  test_sum_of_digits();
  print((sum_of_digits(12345)).toString());
}

void _start() {
  _main();
}

void main() => _start();
