// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

double f(double x) {
  return x * x;
}

List<double> make_points(double a, double b, double h) {
  List<double> xs = <double>[];
  double x = a + h;
  while (x <= b - h) {
    xs = [...xs, x];
    x = x + h;
  }
  return xs;
}

double trapezoidal_rule(List<double> boundary, double steps) {
  double h = (boundary[1] - boundary[0]) / steps;
  double a = boundary[0];
  double b = boundary[1];
  List<double> xs = make_points(a, b, h);
  double y = h / 2.0 * f(a);
  int i = 0;
  while (i < xs.length) {
    y = y + h * f(xs[i]);
    i = i + 1;
  }
  y = y + h / 2.0 * f(b);
  return y;
}

double a = 0.0;
double b = 1.0;
double steps = 10.0;
List<double> boundary = [a, b];
double y = trapezoidal_rule(boundary, steps);
void main() {
  print("y = " + (y).toString());
}
