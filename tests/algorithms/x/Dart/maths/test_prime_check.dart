// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

bool is_prime(int number) {
  if (number < 0) {
    throw Exception("is_prime() only accepts positive integers");
  }
  if (number < 2) {
    return false;
  }
  if (number < 4) {
    return true;
  }
  if (number % 2 == 0 || number % 3 == 0) {
    return false;
  }
  int i = 5;
  while (i * i <= number) {
    if (number % i == 0 || number % (i + 2) == 0) {
    return false;
  }
    i = i + 6;
  }
  return true;
}

void main() {
  print((is_prime(2)).toString());
  print((is_prime(3)).toString());
  print((is_prime(5)).toString());
  print((is_prime(7)).toString());
  print((is_prime(11)).toString());
  print((is_prime(13)).toString());
  print((is_prime(17)).toString());
  print((is_prime(19)).toString());
  print((is_prime(23)).toString());
  print((is_prime(29)).toString());
  print((is_prime(0)).toString());
  print((is_prime(1)).toString());
  print((is_prime(4)).toString());
  print((is_prime(6)).toString());
  print((is_prime(9)).toString());
  print((is_prime(15)).toString());
  print((is_prime(105)).toString());
}
