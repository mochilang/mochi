// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

int binomial_coefficient(int n, int r) {
  if (n < 0 || r < 0) {
    throw Exception("n and r must be non-negative integers");
  }
  if (n == 0 || r == 0) {
    return 1;
  }
  List<int> c = <int>[];
  for (int __ = 0; __ < r + 1; __++) {
    c = [...c, 0];
  }
  while (c.length <= 0) { c.add(0); } c[0] = 1;
  int i = 1;
  while (i <= n) {
    int j = (i < r ? i : r);
    while (j > 0) {
    while (c.length <= j) { c.add(0); } c[j] = c[j] + c[j - 1];
    j = j - 1;
  }
    i = i + 1;
  }
  return c[r];
}

void main() {
  print((binomial_coefficient(10, 5)).toString());
}
