// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

double PI = 3.141592653589793;
double sqrtApprox(double x) {
  double guess = x / 2.0;
  int i = 0;
  while (i < 20) {
    guess = (guess + x / guess) / 2.0;
    i = i + 1;
  }
  return guess;
}

double expApprox(double x) {
  bool is_neg = false;
  double y = x;
  if (x < 0.0) {
    is_neg = true;
    y = -x;
  }
  double term = 1.0;
  double sum = 1.0;
  int n = 1;
  while (n < 30) {
    term = term * y / (n as double);
    sum = sum + term;
    n = n + 1;
  }
  if (is_neg) {
    return 1.0 / sum;
  }
  return sum;
}

double gaussian(double x, double mu, double sigma) {
  double coeff = 1.0 / sqrtApprox(2.0 * PI * sigma * sigma);
  double exponent = -((x - mu) * (x - mu)) / (2.0 * sigma * sigma);
  return coeff * expApprox(exponent);
}

void _main() {
  double result = gaussian(1.0, 0.0, 1.0);
  print(result);
}

void _start() {
  _main();
}

void main() => _start();
