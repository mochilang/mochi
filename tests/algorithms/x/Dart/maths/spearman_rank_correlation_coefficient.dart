// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

List<int> assign_ranks(List<double> data) {
  List<int> ranks = <int>[];
  int n = data.length;
  int i = 0;
  while (i < n) {
    int rank = 1;
    int j = 0;
    while (j < n) {
    if (data[j] < data[i] || data[j] == data[i] && j < i) {
    rank = rank + 1;
  }
    j = j + 1;
  }
    ranks = [...ranks, rank];
    i = i + 1;
  }
  return ranks;
}

double calculate_spearman_rank_correlation(List<double> var1, List<double> var2) {
  if (var1.length != var2.length) {
    throw Exception("Lists must have equal length");
  }
  int n = var1.length;
  List<int> rank1 = assign_ranks(var1);
  List<int> rank2 = assign_ranks(var2);
  int i = 0;
  double d_sq = 0.0;
  while (i < n) {
    double diff = rank1[i] - rank2[i] as double;
    d_sq = d_sq + diff * diff;
    i = i + 1;
  }
  double n_f = n as double;
  return 1.0 - 6.0 * d_sq / (n_f * (n_f * n_f - 1.0));
}

void test_spearman() {
  List<double> x = [1.0, 2.0, 3.0, 4.0, 5.0];
  List<double> y_inc = [2.0, 4.0, 6.0, 8.0, 10.0];
  if (calculate_spearman_rank_correlation(x, y_inc) != 1.0) {
    throw Exception("case1");
  }
  List<double> y_dec = [5.0, 4.0, 3.0, 2.0, 1.0];
  if (calculate_spearman_rank_correlation(x, y_dec) != -1.0) {
    throw Exception("case2");
  }
  List<double> y_mix = [5.0, 1.0, 2.0, 9.0, 5.0];
  if (calculate_spearman_rank_correlation(x, y_mix) != 0.6) {
    throw Exception("case3");
  }
}

void _main() {
  test_spearman();
  print((calculate_spearman_rank_correlation([1.0, 2.0, 3.0, 4.0, 5.0], [2.0, 4.0, 6.0, 8.0, 10.0])).toString());
  print((calculate_spearman_rank_correlation([1.0, 2.0, 3.0, 4.0, 5.0], [5.0, 4.0, 3.0, 2.0, 1.0])).toString());
  print((calculate_spearman_rank_correlation([1.0, 2.0, 3.0, 4.0, 5.0], [5.0, 1.0, 2.0, 9.0, 5.0])).toString());
}

void _start() {
  _main();
}

void main() => _start();
