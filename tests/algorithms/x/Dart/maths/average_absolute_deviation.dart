// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

double abs_float(double x) {
  if (x < 0.0) {
    return -x;
  }
  return x;
}

double average_absolute_deviation(List<int> nums) {
  if (nums.length == 0) {
    throw Exception("List is empty");
  }
  int sum = 0;
  for (int x in nums) {
    sum = sum + x;
  }
  double n = nums.length as double;
  double mean = (sum as double) / n;
  double dev_sum = 0.0;
  for (int x in nums) {
    dev_sum = dev_sum + abs_float((x as double) - mean);
  }
  return dev_sum / n;
}

void main() {
  print((average_absolute_deviation([0])).toString());
  print((average_absolute_deviation([4, 1, 3, 2])).toString());
  print((average_absolute_deviation([2, 70, 6, 50, 20, 8, 4, 0])).toString());
  print((average_absolute_deviation([-20, 0, 30, 15])).toString());
}
