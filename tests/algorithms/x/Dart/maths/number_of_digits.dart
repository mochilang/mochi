// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

int abs_int(int n) {
  if (n < 0) {
    return -n;
  }
  return n;
}

int num_digits(int n) {
  int x = abs_int(n);
  int digits = 1;
  while (x >= 10) {
    x = x ~/ 10;
    digits = digits + 1;
  }
  return digits;
}

int num_digits_fast(int n) {
  int x = abs_int(n);
  int digits = 1;
  int power = 10;
  while (x >= power) {
    power = power * 10;
    digits = digits + 1;
  }
  return digits;
}

int num_digits_faster(int n) {
  String s = (abs_int(n)).toString();
  return s.length;
}

void test_num_digits() {
  if (num_digits(12345) != 5) {
    throw Exception("num_digits 12345 failed");
  }
  if (num_digits(123) != 3) {
    throw Exception("num_digits 123 failed");
  }
  if (num_digits(0) != 1) {
    throw Exception("num_digits 0 failed");
  }
  if (num_digits(-1) != 1) {
    throw Exception("num_digits -1 failed");
  }
  if (num_digits(-123456) != 6) {
    throw Exception("num_digits -123456 failed");
  }
  if (num_digits_fast(12345) != 5) {
    throw Exception("num_digits_fast 12345 failed");
  }
  if (num_digits_fast(123) != 3) {
    throw Exception("num_digits_fast 123 failed");
  }
  if (num_digits_fast(0) != 1) {
    throw Exception("num_digits_fast 0 failed");
  }
  if (num_digits_fast(-1) != 1) {
    throw Exception("num_digits_fast -1 failed");
  }
  if (num_digits_fast(-123456) != 6) {
    throw Exception("num_digits_fast -123456 failed");
  }
  if (num_digits_faster(12345) != 5) {
    throw Exception("num_digits_faster 12345 failed");
  }
  if (num_digits_faster(123) != 3) {
    throw Exception("num_digits_faster 123 failed");
  }
  if (num_digits_faster(0) != 1) {
    throw Exception("num_digits_faster 0 failed");
  }
  if (num_digits_faster(-1) != 1) {
    throw Exception("num_digits_faster -1 failed");
  }
  if (num_digits_faster(-123456) != 6) {
    throw Exception("num_digits_faster -123456 failed");
  }
}

void _main() {
  test_num_digits();
  print((num_digits(12345)).toString());
  print((num_digits_fast(12345)).toString());
  print((num_digits_faster(12345)).toString());
}

void _start() {
  _main();
}

void main() => _start();
