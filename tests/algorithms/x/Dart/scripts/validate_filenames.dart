// Generated by Mochi transpiler
dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { return v.toInt().toString(); } return v.toString(); }

int indexOf(String s, String sub) {
  int n = s.length;
  int m = sub.length;
  int i = 0;
  while (i <= n - m) {
    if (_substr(s, i, i + m) == sub) {
    return i;
  }
    i = i + 1;
  }
  return -1;
}

bool contains(String s, String sub) {
  return s.indexOf(sub) >= 0;
}

int validate(List<String> files) {
  List<String> upper = <String>[];
  List<String> space = <String>[];
  List<String> hyphen = <String>[];
  List<String> nodir = <String>[];
  for (String f in files) {
    if (f != f.toLowerCase()) {
    upper = (upper..add(f));
  }
    if (f.contains(" ")) {
    space = (space..add(f));
  }
    if (f.contains("-") && f.contains("/site-packages/") == false) {
    hyphen = (hyphen..add(f));
  }
    if (!f.contains("/")) {
    nodir = (nodir..add(f));
  }
  }
  if (upper.length > 0) {
    print(_str(upper.length) + " files contain uppercase characters:");
    for (String f in upper) {
    print(f);
  };
    print("");
  }
  if (space.length > 0) {
    print(_str(space.length) + " files contain space characters:");
    for (String f in space) {
    print(f);
  };
    print("");
  }
  if (hyphen.length > 0) {
    print(_str(hyphen.length) + " files contain hyphen characters:");
    for (String f in hyphen) {
    print(f);
  };
    print("");
  }
  if (nodir.length > 0) {
    print(_str(nodir.length) + " files are not in a directory:");
    for (String f in nodir) {
    print(f);
  };
    print("");
  }
  return upper.length + space.length + hyphen.length + nodir.length;
}

void _main() {
  List<String> files = ["scripts/Validate_filenames.py", "good/file.txt", "bad file.txt", "/site-packages/pkg-name.py", "nopath", "src/hyphen-name.py"];
  int bad = validate(files);
  print(_str(bad));
}

void _start() {
  _main();
}

void main() => _start();
