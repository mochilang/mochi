// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { return v.toInt().toString(); } return v.toString(); }

bool is_pangram(String input_str) {
  List<String> letters = <String>[];
  int i = 0;
  while (i < input_str.length) {
    String c = input_str.substring(i, i + 1).toLowerCase();
    bool is_new = !letters.contains(c);
    if (c != " " && "a".compareTo(c) <= 0 && c.compareTo("z") <= 0 && is_new) {
    letters = [...letters, c];
  }
    i = i + 1;
  }
  return letters.length == 26;
}

bool is_pangram_faster(String input_str) {
  String alphabet = "abcdefghijklmnopqrstuvwxyz";
  List<bool> flag = <bool>[];
  int i = 0;
  while (i < 26) {
    flag = [...flag, false];
    i = i + 1;
  }
  int j = 0;
  while (j < input_str.length) {
    String c = input_str.substring(j, j + 1).toLowerCase();
    int k = 0;
    while (k < 26) {
    if (alphabet.substring(k, k + 1) == c) {
    while (flag.length <= k) { flag.add(false); } flag[k] = true;
    break;
  }
    k = k + 1;
  }
    j = j + 1;
  }
  int t = 0;
  while (t < 26) {
    if (!flag[t]) {
    return false;
  }
    t = t + 1;
  }
  return true;
}

bool is_pangram_fastest(String input_str) {
  String s = input_str.toLowerCase();
  String alphabet = "abcdefghijklmnopqrstuvwxyz";
  int i = 0;
  while (i < alphabet.length) {
    String letter = alphabet.substring(i, i + 1);
    if (!s.contains(letter)) {
    return false;
  }
    i = i + 1;
  }
  return true;
}

String s1 = "The quick brown fox jumps over the lazy dog";
String s2 = "My name is Unknown";
void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print(_str(is_pangram(s1)));
  print(_str(is_pangram(s2)));
  print(_str(is_pangram_faster(s1)));
  print(_str(is_pangram_faster(s2)));
  print(_str(is_pangram_fastest(s1)));
  print(_str(is_pangram_fastest(s2)));
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
