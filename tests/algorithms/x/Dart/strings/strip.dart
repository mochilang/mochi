// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

bool contains(String chars, String ch) {
  int i = 0;
  while (i < chars.length) {
    if (chars.substring(i, i + 1) == ch) {
    return true;
  }
    i = i + 1;
  }
  return false;
}

String substring(String s, int start, int end) {
  String res = "";
  int i = start;
  while (i < end) {
    res = res + s.substring(i, i + 1);
    i = i + 1;
  }
  return res;
}

String strip_chars(String user_string, String characters) {
  int start = 0;
  int end = user_string.length;
  while (start < end && characters.contains(user_string.substring(start, start + 1))) {
    start = start + 1;
  }
  while (end > start && characters.contains(user_string.substring(end - 1, end - 1 + 1))) {
    end = end - 1;
  }
  return _substr(user_string, start, end);
}

String strip(String user_string) {
  return strip_chars(user_string, " 	\n\r");
}

void test_strip() {
  if (strip("   hello   ") != "hello") {
    throw Exception("test1 failed");
  }
  if (strip_chars("...world...", ".") != "world") {
    throw Exception("test2 failed");
  }
  if (strip_chars("123hello123", "123") != "hello") {
    throw Exception("test3 failed");
  }
  if (strip("") != "") {
    throw Exception("test4 failed");
  }
}

void _main() {
  test_strip();
  print(strip("   hello   "));
  print(strip_chars("...world...", "."));
  print(strip_chars("123hello123", "123"));
  print(strip(""));
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}

void main() => _start();
