// Generated by Mochi transpiler
dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { var i = v.toInt(); if (i == 0) return '0'; return i.toString(); } return v.toString(); }


Never _error(String msg) {
  throw Exception(msg);
}

int hamming_distance(String a, String b) {
  if (a.length != b.length) {
    _error("String lengths must match!");
  }
  int i = 0;
  int count = 0;
  while (i < a.length) {
    if (_substr(a, i, i + 1) != _substr(b, i, i + 1)) {
    count = count + 1;
  }
    i = i + 1;
  }
  return count;
}

void main() {
  print(_str(hamming_distance("python", "python")));
  print(_str(hamming_distance("karolin", "kathrin")));
  print(_str(hamming_distance("00000", "11111")));
}
