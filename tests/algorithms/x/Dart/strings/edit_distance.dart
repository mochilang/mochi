// Generated by Mochi transpiler
dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { var i = v.toInt(); if (i == 0) return '0'; return i.toString(); } return v.toString(); }

int min3(int a, int b, int c) {
  int m = a;
  if (b < m) {
    m = b;
  }
  if (c < m) {
    m = c;
  }
  return m;
}

int edit_distance(String source, String target) {
  if (source.length == 0) {
    return target.length;
  }
  if (target.length == 0) {
    return source.length;
  }
  String last_source = _substr(source, source.length - 1, source.length);
  String last_target = _substr(target, target.length - 1, target.length);
  int delta = (last_source == last_target ? 0 : 1);
  int delete_cost = edit_distance(_substr(source, 0, source.length - 1), target) + 1;
  int insert_cost = edit_distance(source, _substr(target, 0, target.length - 1)) + 1;
  int replace_cost = edit_distance(_substr(source, 0, source.length - 1), _substr(target, 0, target.length - 1)) + delta;
  return min3(delete_cost, insert_cost, replace_cost);
}

void _main() {
  int result = edit_distance("ATCGCTG", "TAGCTAA");
  print(_str(result));
}

void _start() {
  _main();
}

void main() => _start();
