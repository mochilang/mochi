// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

String strip_and_remove_spaces(String s) {
  int start = 0;
  int end = s.length - 1;
  while (start < s.length && s.substring(start, start + 1) == " ") {
    start = start + 1;
  }
  while (end >= start && s.substring(end, end + 1) == " ") {
    end = end - 1;
  }
  String res = "";
  int i = start;
  while (i <= end) {
    String ch = s.substring(i, i + 1);
    if (ch != " ") {
    res = res + ch;
  }
    i = i + 1;
  }
  return res;
}

bool check_anagrams(String a, String b) {
  String s1 = a.toLowerCase();
  String s2 = b.toLowerCase();
  s1 = strip_and_remove_spaces(s1);
  s2 = strip_and_remove_spaces(s2);
  if (s1.length != s2.length) {
    return false;
  }
  Map<String, int> count = <String, int>{};
  int i = 0;
  while (i < s1.length) {
    String c1 = s1.substring(i, i + 1);
    String c2 = s2.substring(i, i + 1);
    if (count.containsKey(c1)) {
    count[c1] = ((count[c1] ?? 0) + 1).toInt();
  } else {
    count[c1] = 1;
  }
    if (count.containsKey(c2)) {
    count[c2] = ((count[c2] ?? 0) - 1).toInt();
  } else {
    count[c2] = -1;
  }
    i = i + 1;
  }
  for (String ch in count.keys) {
    if ((count[ch] ?? 0) != 0) {
    return false;
  }
  }
  return true;
}

void print_bool(bool b) {
  if (b) {
    print((true ? 1 : 0));
  } else {
    print((false ? 1 : 0));
  }
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print_bool(check_anagrams("Silent", "Listen"));
  print_bool(check_anagrams("This is a string", "Is this a string"));
  print_bool(check_anagrams("This is    a      string", "Is     this a string"));
  print_bool(check_anagrams("There", "Their"));
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
