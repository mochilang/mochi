// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

List<String> split_ws(String s) {
  List<String> res = <String>[];
  String word = "";
  int i = 0;
  while (i < s.length) {
    String ch = _substr(s, i, i + 1);
    if (ch == " ") {
    if (word != "") {
    res = [...res, word];
    word = "";
  };
  } else {
    word = word + ch;
  }
    i = i + 1;
  }
  if (word != "") {
    res = [...res, word];
  }
  return res;
}

bool contains(List<String> xs, String x) {
  int i = 0;
  while (i < xs.length) {
    if (xs[i] == x) {
    return true;
  }
    i = i + 1;
  }
  return false;
}

List<String> unique(List<String> xs) {
  List<String> res = <String>[];
  int i = 0;
  while (i < xs.length) {
    String w = xs[i];
    if (!contains(res, w)) {
    res = [...res, w];
  }
    i = i + 1;
  }
  return res;
}

List<String> insertion_sort(List<String> arr) {
  List<String> a = arr;
  int i = 1;
  while (i < a.length) {
    String key = a[i];
    int j = i - 1;
    while (j >= 0 && a[j].compareTo(key) > 0) {
    while (a.length <= j + 1) { a.add(""); } a[j + 1] = a[j];
    j = j - 1;
  }
    while (a.length <= j + 1) { a.add(""); } a[j + 1] = key;
    i = i + 1;
  }
  return a;
}

String join_with_space(List<String> xs) {
  String s = "";
  int i = 0;
  while (i < xs.length) {
    if (i > 0) {
    s = s + " ";
  }
    s = s + xs[i];
    i = i + 1;
  }
  return s;
}

String remove_duplicates(String sentence) {
  List<String> words = split_ws(sentence);
  List<String> uniq = unique(words);
  List<String> sorted_words = insertion_sort(uniq);
  return join_with_space(sorted_words);
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print(remove_duplicates("Python is great and Java is also great"));
  print(remove_duplicates("Python   is      great and Java is also great"));
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
