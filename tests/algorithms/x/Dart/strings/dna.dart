// Generated by Mochi transpiler
dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

bool is_valid(String strand) {
  int i = 0;
  while (i < strand.length) {
    String ch = _substr(strand, i, i + 1);
    if (ch != "A" && ch != "T" && ch != "C" && ch != "G") {
    return false;
  }
    i = i + 1;
  }
  return true;
}

String dna(String strand) {
  if (!is_valid(strand)) {
    print("ValueError: Invalid Strand");
    return "";
  }
  String result = "";
  int i = 0;
  while (i < strand.length) {
    String ch = _substr(strand, i, i + 1);
    if (ch == "A") {
    result = result + "T";
  } else {
    if (ch == "T") {
    result = result + "A";
  } else {
    if (ch == "C") {
    result = result + "G";
  } else {
    result = result + "C";
  };
  };
  }
    i = i + 1;
  }
  return result;
}

void main() {
  print(dna("GCTA"));
  print(dna("ATGC"));
  print(dna("CTGA"));
  print(dna("GFGG"));
}
