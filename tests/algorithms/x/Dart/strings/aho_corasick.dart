// Generated by Mochi transpiler
dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

Map<String, List<int>> search_all(String text, List<String> keywords) {
  Map<String, List<int>> result = <String, List<int>>{};
  for (String word in keywords) {
    List<int> positions = <int>[];
    int m = word.length;
    int i = 0;
    while (i <= text.length - m) {
    if (_substr(text, i, i + m) == word) {
    positions = [...positions, i];
  }
    i = i + 1;
  }
    if (positions.length > 0) {
    result[word] = positions;
  }
  }
  return result;
}

String text = "whatever, err ... , wherever";
List<String> keywords = ["what", "hat", "ver", "er"];
void main() {
  print(search_all(text, keywords));
}
