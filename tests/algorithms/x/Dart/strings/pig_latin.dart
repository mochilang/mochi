// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

String VOWELS = "aeiou";
String strip(String s) {
  int start = 0;
  int end = s.length;
  while (start < end && _substr(s, start, start + 1) == " ") {
    start = start + 1;
  }
  while (end > start && _substr(s, end - 1, end) == " ") {
    end = end - 1;
  }
  return _substr(s, start, end);
}

bool is_vowel(String c) {
  int i = 0;
  while (i < VOWELS.length) {
    if (c == _substr(VOWELS, i, i + 1)) {
    return true;
  }
    i = i + 1;
  }
  return false;
}

String pig_latin(String word) {
  String trimmed = strip(word);
  if (trimmed.length == 0) {
    return "";
  }
  String w = trimmed.toLowerCase();
  String first = _substr(w, 0, 1);
  if (is_vowel(first)) {
    return w + "way";
  }
  int i = 0;
  while (i < w.length) {
    String ch = _substr(w, i, i + 1);
    if (is_vowel(ch)) {
    break;
  }
    i = i + 1;
  }
  return _substr(w, i, w.length) + _substr(w, 0, i) + "ay";
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print("pig_latin('friends') = " + pig_latin("friends"));
  print("pig_latin('smile') = " + pig_latin("smile"));
  print("pig_latin('eat') = " + pig_latin("eat"));
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
