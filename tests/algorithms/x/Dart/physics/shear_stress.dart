// Generated by Mochi transpiler
dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { var i = v.toInt(); if (i == 0) return '0'; return i.toString(); } return v.toString(); }


Never _error(String msg) {
  throw Exception(msg);
}

class Result {
  String name;
  double value;
  Result({required this.name, required this.value});
}

Result shear_stress(double stress, double tangential_force, double area) {
  int zeros = 0;
  if (stress == 0.0) {
    zeros = zeros + 1;
  }
  if (tangential_force == 0.0) {
    zeros = zeros + 1;
  }
  if (area == 0.0) {
    zeros = zeros + 1;
  }
  if (zeros != 1) {
    _error("You cannot supply more or less than 2 values");
  } else {
    if (stress < 0.0) {
    _error("Stress cannot be negative");
  } else {
    if (tangential_force < 0.0) {
    _error("Tangential Force cannot be negative");
  } else {
    if (area < 0.0) {
    _error("Area cannot be negative");
  } else {
    if (stress == 0.0) {
    return Result(name: "stress", value: tangential_force / area);
  } else {
    if (tangential_force == 0.0) {
    return Result(name: "tangential_force", value: stress * area);
  } else {
    return Result(name: "area", value: tangential_force / stress);
  };
  };
  };
  };
  };
  }
}

String str_result(Result r) {
  return "Result(name='" + r.name + "', value=" + _str(r.value) + ")";
}

Result r1 = shear_stress(25.0, 100.0, 0.0);
Result r2 = shear_stress(0.0, 1600.0, 200.0);
Result r3 = shear_stress(1000.0, 0.0, 1200.0);
void main() {
  print(str_result(r1));
  print(str_result(r2));
  print(str_result(r3));
}
