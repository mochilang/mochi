// Generated by Mochi transpiler
dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { var i = v.toInt(); if (i == 0) return '0'; return i.toString(); } return v.toString(); }


Never _error(String msg) {
  throw Exception(msg);
}

double sqrtApprox(double x) {
  if (x == 0.0) {
    return 0.0;
  }
  double guess = x / 2.0;
  int i = 0;
  while (i < 20) {
    guess = (guess + x / guess) / 2.0;
    i = i + 1;
  }
  return guess;
}

double speed_of_sound_in_a_fluid(double density, double bulk_modulus) {
  if (density <= 0.0) {
    _error("Impossible fluid density");
  }
  if (bulk_modulus <= 0.0) {
    _error("Impossible bulk modulus");
  }
  return sqrtApprox(bulk_modulus / density);
}

void main() {
  print(_str(speed_of_sound_in_a_fluid(998.0, 2150000000.0)));
  print(_str(speed_of_sound_in_a_fluid(13600.0, 28500000000.0)));
}
