// Generated by Mochi transpiler
dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { var i = v.toInt(); if (i == 0) return '0'; return i.toString(); } return v.toString(); }


Never _error(String msg) {
  throw Exception(msg);
}

double G = 9.80665;
double sqrt(double x) {
  if (x <= 0.0) {
    return 0.0;
  }
  double guess = x;
  int i = 0;
  while (i < 10) {
    guess = (guess + x / guess) / 2.0;
    i = i + 1;
  }
  return guess;
}

double terminal_velocity(double mass, double density, double area, double drag_coefficient) {
  if (mass <= 0.0 || density <= 0.0 || area <= 0.0 || drag_coefficient <= 0.0) {
    _error("mass, density, area and the drag coefficient all need to be positive");
  }
  double numerator = 2.0 * mass * G;
  double denominator = density * area * drag_coefficient;
  double result = sqrt(numerator / denominator);
  return result;
}

void main() {
  print(_str(terminal_velocity(1.0, 25.0, 0.6, 0.77)));
  print(_str(terminal_velocity(2.0, 100.0, 0.45, 0.23)));
  print(_str(terminal_velocity(5.0, 50.0, 0.2, 0.5)));
}
