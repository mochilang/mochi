// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

String _str(dynamic v) => v.toString();


Never _error(String msg) {
  throw Exception(msg);
}

double focal_length_of_lens(double object_distance_from_lens, double image_distance_from_lens) {
  if (object_distance_from_lens == 0.0 || image_distance_from_lens == 0.0) {
    _error("Invalid inputs. Enter non zero values with respect to the sign convention.");
  }
  return 1.0 / (1.0 / image_distance_from_lens - 1.0 / object_distance_from_lens);
}

double object_distance(double focal_length_of_lens, double image_distance_from_lens) {
  if (image_distance_from_lens == 0.0 || focal_length_of_lens == 0.0) {
    _error("Invalid inputs. Enter non zero values with respect to the sign convention.");
  }
  return 1.0 / (1.0 / image_distance_from_lens - 1.0 / focal_length_of_lens);
}

double image_distance(double focal_length_of_lens, double object_distance_from_lens) {
  if (object_distance_from_lens == 0.0 || focal_length_of_lens == 0.0) {
    _error("Invalid inputs. Enter non zero values with respect to the sign convention.");
  }
  return 1.0 / (1.0 / object_distance_from_lens + 1.0 / focal_length_of_lens);
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print(_str(focal_length_of_lens(10.0, 4.0)));
  print(_str(focal_length_of_lens(2.7, 5.8)));
  print(_str(object_distance(10.0, 40.0)));
  print(_str(object_distance(6.2, 1.5)));
  print(_str(image_distance(50.0, 40.0)));
  print(_str(image_distance(5.3, 7.9)));
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
