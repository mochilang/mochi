// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}


Never _error(String msg) {
  throw Exception(msg);
}

double pow10(int n) {
  double p = 1.0;
  int k = 0;
  if (n >= 0) {
    while (k < n) {
    p = p * 10.0;
    k = k + 1;
  };
  } else {
    int m = -n;
    while (k < m) {
    p = p / 10.0;
    k = k + 1;
  };
  }
  return p;
}

double sqrt_newton(double n) {
  if (n == 0.0) {
    return 0.0;
  }
  double x = n;
  int j = 0;
  while (j < 20) {
    x = (x + n / x) / 2.0;
    j = j + 1;
  }
  return x;
}

double round3(double x) {
  double y = x * 1000.0 + 0.5;
  int yi = (y).toInt();
  if ((yi.toDouble()) > y) {
    yi = yi - 1;
  }
  return (yi.toDouble()) / 1000.0;
}

double escape_velocity(double mass, double radius) {
  if (radius == 0.0) {
    _error("Radius cannot be zero.");
  }
  double G = 6.6743 * pow10(-11);
  double velocity = sqrt_newton(2.0 * G * mass / radius);
  return round3(velocity);
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print(escape_velocity(5.972 * pow10(24), 6.371 * pow10(6)));
  print(escape_velocity(7.348 * pow10(22), 1.737 * pow10(6)));
  print(escape_velocity(1.898 * pow10(27), 6.9911 * pow10(7)));
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
