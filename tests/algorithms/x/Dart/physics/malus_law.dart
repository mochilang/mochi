// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { return v.toInt().toString(); } return v.toString(); }

double PI = 3.141592653589793;
double TWO_PI = 6.283185307179586;
double _mod(double x, double m) {
  return x - ((x / m).toInt().toDouble()) * m;
}

double cos(double x) {
  double y = _mod(x + PI, TWO_PI) - PI;
  double y2 = y * y;
  double y4 = y2 * y2;
  double y6 = y4 * y2;
  return 1.0 - y2 / 2.0 + y4 / 24.0 - y6 / 720.0;
}

double radians(double deg) {
  return deg * PI / 180.0;
}

double abs_val(double x) {
  if (x < 0.0) {
    return -x;
  }
  return x;
}

double malus_law(double initial_intensity, double angle) {
  if (initial_intensity < 0.0) {
    ;
  }
  if (angle < 0.0 || angle > 360.0) {
    ;
  }
  double theta = radians(angle);
  double c = cos(theta);
  return initial_intensity * (c * c);
}

void test_malus_law() {
  if (abs_val(malus_law(10.0, 45.0) - 5.0) > 0.01) {
    ;
  }
  if (abs_val(malus_law(100.0, 60.0) - 25.0) > 0.01) {
    ;
  }
  if (abs_val(malus_law(50.0, 150.0) - 37.5) > 0.01) {
    ;
  }
  if (abs_val(malus_law(75.0, 270.0) - 0.0) > 0.01) {
    ;
  }
  if (abs_val(malus_law(100.0, 180.0) - 100.0) > 0.01) {
    ;
  }
  if (abs_val(malus_law(100.0, 360.0) - 100.0) > 0.01) {
    ;
  }
}

void _main() {
  test_malus_law();
  print(_str(malus_law(100.0, 60.0)));
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}

void main() => _start();
