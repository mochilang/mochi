// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

String row_string(List<int> row) {
  String s = "[";
  int i = 0;
  while (i < row.length) {
    s = s + (row[i]).toString();
    if (i < row.length - 1) {
    s = s + ", ";
  }
    i = i + 1;
  }
  s = s + "]";
  return s;
}

void print_kmap(List<List<int>> kmap) {
  int i = 0;
  while (i < kmap.length) {
    print(row_string(kmap[i]));
    i = i + 1;
  }
}

String join_terms(List<String> terms) {
  if (terms.length == 0) {
    return "";
  }
  String res = terms[0];
  int i = 1;
  while (i < terms.length) {
    res = res + " + " + terms[i];
    i = i + 1;
  }
  return res;
}

String simplify_kmap(List<List<int>> board) {
  List<String> terms = <String>[];
  int a = 0;
  while (a < board.length) {
    List<int> row = board[a];
    int b = 0;
    while (b < row.length) {
    int item = row[b];
    if (item != 0) {
    String term = (a != 0 ? "A" : "A'") + (b != 0 ? "B" : "B'");
    terms = [...terms, term];
  }
    b = b + 1;
  }
    a = a + 1;
  }
  String expr = join_terms(terms);
  return expr;
}

List<List<int>> kmap = [[0, 1], [1, 1]];
void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print_kmap(kmap);
  print("Simplified Expression:");
  print(simplify_kmap(kmap));
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
