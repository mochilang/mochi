// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { return v.toInt().toString(); } return v.toString(); }

String OPENWEATHERMAP_API_KEY = "demo";
String WEATHERSTACK_API_KEY = "";
String OPENWEATHERMAP_URL_BASE = "https://api.openweathermap.org/data/2.5/weather";
String WEATHERSTACK_URL_BASE = "http://api.weatherstack.com/current";
Map<String, String> http_get(String url, Map<String, String> params) {
  if (params.containsKey("q")) {
    return {"location": params["q"]!, "temperature": "20"};
  }
  return {"location": params["query"]!, "temperature": "20"};
}

List<Map<String, Map<String, String>>> current_weather(String location) {
  List<Map<String, Map<String, String>>> weather_data = <Map<String, Map<String, String>>>[];
  if (OPENWEATHERMAP_API_KEY != "") {
    Map<String, String> params_openweathermap = {"q": location, "appid": OPENWEATHERMAP_API_KEY};
    Map<String, String> response_openweathermap = http_get(OPENWEATHERMAP_URL_BASE, params_openweathermap);
    weather_data = [...weather_data, {"OpenWeatherMap": response_openweathermap}];
  }
  if (WEATHERSTACK_API_KEY != "") {
    Map<String, String> params_weatherstack = {"query": location, "access_key": WEATHERSTACK_API_KEY};
    Map<String, String> response_weatherstack = http_get(WEATHERSTACK_URL_BASE, params_weatherstack);
    weather_data = [...weather_data, {"Weatherstack": response_weatherstack}];
  }
  if (weather_data.length == 0) {
    throw Exception("No API keys provided or no valid data returned.");
  }
  return weather_data;
}

void _main() {
  List<Map<String, Map<String, String>>> data = current_weather("New York");
  print(_str(data));
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}

void main() => _start();
