// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

int index_of_substr(String s, String pat) {
  if (pat.length == 0) {
    return 0;
  }
  int i = 0;
  while (i <= s.length - pat.length) {
    int j = 0;
    while (j < pat.length) {
    if (s.substring(i + j, i + j + 1) != pat.substring(j, j + 1)) {
    break;
  }
    j = j + 1;
  }
    if (j == pat.length) {
    return i;
  }
    i = i + 1;
  }
  return -1;
}

String first_link(String html) {
  int a_idx = index_of_substr(html, "<a");
  if (a_idx < 0) {
    return "";
  }
  String href_pat = "href=\"";
  int href_idx_rel = index_of_substr(_substr(html, a_idx, html.length), href_pat);
  if (href_idx_rel < 0) {
    return "";
  }
  int start = a_idx + href_idx_rel + href_pat.length;
  int end = start;
  while (end < html.length) {
    if (html.substring(end, end + 1) == "\"") {
    break;
  }
    end = end + 1;
  }
  return _substr(html, start, end);
}

List<String> query_words = ["mochi", "language"];
String query = "";
int i = 0;
String url = "https://www.google.com/search?q=" + query + "&num=100";
String sample_html = "<div><a href=\"https://example.com\">Example</a></div>" + "<div><a href=\"https://another.com\">Another</a></div>";
String link = first_link(sample_html);
void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  while (i < query_words.length) {
    if (i > 0) {
    query = query + "%20";
  }
    query = query + query_words[i];
    i = i + 1;
  }
  print("Googling.....");
  if (link.length > 0) {
    print(link);
  }
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
