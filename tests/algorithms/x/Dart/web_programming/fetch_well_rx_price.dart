// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

String SAMPLE_HTML = "<div class=\"grid-x pharmCard\"><p class=\"list-title\">Pharmacy A</p><span class=\"price price-large\">\$10.00</span></div><div class=\"grid-x pharmCard\"><p class=\"list-title\">Pharmacy B</p><span class=\"price price-large\">\$12.50</span></div>";
int find_substring(String s, String sub, int from) {
  int i = from;
  while (i <= s.length - sub.length) {
    int j = 0;
    while (j < sub.length && _substr(s, i + j, i + j + 1) == _substr(sub, j, j + 1)) {
    j = j + 1;
  }
    if (j == sub.length) {
    return i;
  }
    i = i + 1;
  }
  return -1;
}

List<Map<String, String>>? fetch_pharmacy_and_price_list(String drug_name, String zip_code) {
  if (drug_name == "" || zip_code == "") {
    return List<Map<String, String>>?>.from(null);
  }
  List<Map<String, String>> results = <Map<String, String>>[];
  int pos = 0;
  String block_tag = "<div class=\"grid-x pharmCard\">";
  String name_tag = "<p class=\"list-title\">";
  String price_tag = "<span class=\"price price-large\">";
  while (true) {
    int div_idx = find_substring(SAMPLE_HTML, block_tag, pos);
    if (div_idx < 0) {
    break;
  }
    int name_start = find_substring(SAMPLE_HTML, name_tag, div_idx);
    if (name_start < 0) {
    break;
  }
    name_start = name_start + name_tag.length;
    int name_end = find_substring(SAMPLE_HTML, "</p>", name_start);
    if (name_end < 0) {
    break;
  }
    String name = _substr(SAMPLE_HTML, name_start, name_end);
    int price_start = find_substring(SAMPLE_HTML, price_tag, name_end);
    if (price_start < 0) {
    break;
  }
    price_start = price_start + price_tag.length;
    int price_end = find_substring(SAMPLE_HTML, "</span>", price_start);
    if (price_end < 0) {
    break;
  }
    String price = _substr(SAMPLE_HTML, price_start, price_end);
    results = [...results, {"pharmacy_name": name, "price": price}];
    pos = price_end;
  }
  return List<Map<String, String>>?>.from(results);
}

List<Map<String, String>> pharmacy_price_list = fetch_pharmacy_and_price_list("aspirin", "30303");
void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  if (pharmacy_price_list != null) {
    int i = 0;
    while (i < pharmacy_price_list.length) {
    Map<String, String> entry = pharmacy_price_list[i];
    print("Pharmacy: " + (entry["pharmacy_name"] ?? "") + " Price: " + (entry["price"] ?? ""));
    i = i + 1;
  };
  } else {
    print("No results found");
  }
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
