// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { return v.toInt().toString(); } return v.toString(); }

class Product {
  String title;
  String link;
  String price;
  String rating;
  String mrp;
  double discount;
  Product({required this.title, required this.link, required this.price, required this.rating, required this.mrp, required this.discount});
}

int find_index(String s, String pat, int start) {
  int i = start;
  while (i <= s.length - pat.length) {
    int j = 0;
    bool ok = true;
    while (j < pat.length) {
    if (s.substring(i + j, i + j + 1) != pat.substring(j, j + 1)) {
    ok = false;
    break;
  }
    j = j + 1;
  }
    if (ok) {
    return i;
  }
    i = i + 1;
  }
  return -1;
}

String slice_between(String s, String start_pat, String end_pat, int from) {
  int a = find_index(s, start_pat, from);
  if (a < 0) {
    return "";
  }
  int b = a + start_pat.length;
  int c = find_index(s, end_pat, b);
  if (c < 0) {
    return "";
  }
  return _substr(s, b, c);
}

int char_to_digit(String c) {
  if (c == "0") {
    return 0;
  }
  if (c == "1") {
    return 1;
  }
  if (c == "2") {
    return 2;
  }
  if (c == "3") {
    return 3;
  }
  if (c == "4") {
    return 4;
  }
  if (c == "5") {
    return 5;
  }
  if (c == "6") {
    return 6;
  }
  if (c == "7") {
    return 7;
  }
  if (c == "8") {
    return 8;
  }
  return 9;
}

int parse_int(String txt) {
  int n = 0;
  int i = 0;
  while (i < txt.length) {
    String c = txt.substring(i, i + 1);
    if (c.compareTo("0") >= 0 && c.compareTo("9") <= 0) {
    n = n * 10 + char_to_digit(c);
  }
    i = i + 1;
  }
  return n;
}

Product parse_product(String block) {
  String href = slice_between(block, "href=\"", "\"", 0);
  String link = "https://www.amazon.in" + href;
  String title = slice_between(block, ">", "</a>", find_index(block, "<a", 0));
  String price = slice_between(block, "<span class=\"a-offscreen\">", "</span>", 0);
  String rating = slice_between(block, "<span class=\"a-icon-alt\">", "</span>", 0);
  if (rating.length == 0) {
    rating = "Not available";
  }
  String mrp = slice_between(block, "<span class=\"a-price a-text-price\">", "</span>", 0);
  double disc = 0.0;
  if (mrp.length > 0 && price.length > 0) {
    int p = parse_int(price);
    int m = parse_int(mrp);
    if (m > 0) {
    disc = (((m - p) * 100).toDouble()) / ((m).toDouble());
  };
  } else {
    mrp = "";
    disc = 0.0;
  }
  return Product(title: title, link: link, price: price, rating: rating, mrp: mrp, discount: disc);
}

List<Product> get_amazon_product_data(String product) {
  String html = "<div class=\"s-result-item\" data-component-type=\"s-search-result\"><h2><a href=\"/sample_product\">Sample Product</a></h2><span class=\"a-offscreen\">₹900</span><span class=\"a-icon-alt\">4.3 out of 5 stars</span><span class=\"a-price a-text-price\">₹1000</span></div><div class=\"s-result-item\" data-component-type=\"s-search-result\"><h2><a href=\"/item2\">Another Product</a></h2><span class=\"a-offscreen\">₹500</span><span class=\"a-icon-alt\">3.8 out of 5 stars</span><span class=\"a-price a-text-price\">₹800</span></div>";
  List<Product> out = <Product>[];
  int start = 0;
  while (true) {
    int div_start = find_index(html, "<div class=\"s-result-item\"", start);
    if (div_start < 0) {
    break;
  }
    int div_end = find_index(html, "</div>", div_start);
    if (div_end < 0) {
    break;
  }
    String block = _substr(html, div_start, div_end);
    out = [...out, parse_product(block)];
    start = div_end + "</div>".length;
  }
  return out;
}

void _main() {
  List<Product> products = get_amazon_product_data("laptop");
  int i = 0;
  while (i < products.length) {
    Product p = products[i];
    print(p.title + " | " + p.link + " | " + p.price + " | " + p.rating + " | " + p.mrp + " | " + _str(p.discount));
    i = i + 1;
  }
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}

void main() => _start();
