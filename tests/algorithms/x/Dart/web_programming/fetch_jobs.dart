// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

class Job {
  String title;
  String company;
  Job({required this.title, required this.company});
}

String SAMPLE_HTML = "<div data-tn-component=\"organicJob\"><a data-tn-element=\"jobTitle\">Android Developer</a><span class=\"company\">ABC Corp</span></div><div data-tn-component=\"organicJob\"><a data-tn-element=\"jobTitle\">iOS Engineer</a><span class=\"company\">XYZ Ltd</span></div>";
int indexOf(String s, String sub, int start) {
  int n = s.length;
  int m = sub.length;
  int i = start;
  while (i <= n - m) {
    int j = 0;
    bool ok = true;
    while (j < m) {
    if (_substr(s, i + j, i + j + 1) != _substr(sub, j, j + 1)) {
    ok = false;
    break;
  }
    j = j + 1;
  }
    if (ok) {
    return i;
  }
    i = i + 1;
  }
  return 0 - 1;
}

List<String> splitBy(String s, String sep) {
  List<String> res = <String>[];
  int start = 0;
  int sepLen = sep.length;
  int idx = indexOf(s, sep, 0);
  while (idx != 0 - 1) {
    res = [...res, _substr(s, start, idx)];
    start = idx + sepLen;
    idx = indexOf(s, sep, start);
  }
  res = [...res, _substr(s, start, s.length)];
  return res;
}

String between(String s, String startTag, String endTag) {
  int startIdx = indexOf(s, startTag, 0);
  if (startIdx == 0 - 1) {
    return "";
  }
  startIdx = startIdx + startTag.length;
  int endIdx = indexOf(s, endTag, startIdx);
  if (endIdx == 0 - 1) {
    return "";
  }
  return _substr(s, startIdx, endIdx);
}

String intToString(int n) {
  if (n == 0) {
    return "0";
  }
  int _num = n;
  String digits = "";
  while (_num > 0) {
    int d = _num % 10;
    digits = _substr("0123456789", d, d + 1) + digits;
    _num = _num ~/ 10;
  }
  return digits;
}

List<Job> fetch_jobs(String location) {
  List<String> blocks = splitBy(SAMPLE_HTML, "data-tn-component=\"organicJob\"");
  List<Job> jobs = <Job>[];
  int i = 1;
  while (i < blocks.length) {
    String block = blocks[i];
    String title = between(block, "data-tn-element=\"jobTitle\">", "</a>");
    String company = between(block, "class=\"company\">", "</span>");
    jobs = [...jobs, Job(title: title, company: company)];
    i = i + 1;
  }
  return jobs;
}

void _main() {
  List<Job> jobs = fetch_jobs("Bangalore");
  int i = 0;
  while (i < jobs.length) {
    Job j = jobs[i];
    int idx = i + 1;
    print("Job " + intToString(idx) + " is " + j.title + " at " + j.company);
    i = i + 1;
  }
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}

void main() => _start();
