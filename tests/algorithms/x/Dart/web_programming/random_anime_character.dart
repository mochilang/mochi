// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

class Character {
  String title;
  String description;
  String image_file;
  Character({required this.title, required this.description, required this.image_file});
}

int seed = 123456789;
int rand() {
  seed = (seed * 1103515245 + 12345) % 2147483648;
  return seed;
}

int random_int(int a, int b) {
  return a + rand() % (b - a);
}

List<Character> characters = [Character(title: "Naruto Uzumaki", description: "A spirited ninja of the Hidden Leaf Village.", image_file: "naruto.png"), Character(title: "Sailor Moon", description: "A magical girl who fights for love and justice.", image_file: "sailor_moon.png"), Character(title: "Spike Spiegel", description: "A bounty hunter with a laid-back attitude.", image_file: "spike_spiegel.png")];
dynamic save_image(String _name) {
}

Character random_anime_character() {
  int idx = random_int(0, characters.length);
  Character ch = characters[idx];
  save_image(ch.image_file);
  return ch;
}

Character c = random_anime_character();
void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print(c.title);
  print("");
  print(c.description);
  print("");
  print("Image saved : " + c.image_file);
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
