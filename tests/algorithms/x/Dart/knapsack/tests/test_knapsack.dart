// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

int knapsack(int capacity, List<int> weights, List<int> values, int counter) {
  if (counter == 0 || capacity == 0) {
    return 0;
  }
  if (weights[counter - 1] > capacity) {
    return knapsack(capacity, weights, values, counter - 1);
  }
  int left_capacity = capacity - weights[counter - 1];
  int include_val = values[counter - 1] + knapsack(left_capacity, weights, values, counter - 1);
  int exclude_val = knapsack(capacity, weights, values, counter - 1);
  if (include_val > exclude_val) {
    return include_val;
  }
  return exclude_val;
}

bool test_base_case() {
  int cap = 0;
  List<int> val = [0];
  List<int> w = [0];
  int c = val.length;
  if (knapsack(cap, w, val, c) != 0) {
    return false;
  }
  List<int> val2 = [60];
  List<int> w2 = [10];
  int c2 = val2.length;
  return knapsack(cap, w2, val2, c2) == 0;
}

bool test_easy_case() {
  int cap = 3;
  List<int> val = [1, 2, 3];
  List<int> w = [3, 2, 1];
  int c = val.length;
  return knapsack(cap, w, val, c) == 5;
}

bool test_knapsack() {
  int cap = 50;
  List<int> val = [60, 100, 120];
  List<int> w = [10, 20, 30];
  int c = val.length;
  return knapsack(cap, w, val, c) == 220;
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print(test_base_case());
  print(test_easy_case());
  print(test_knapsack());
  print((true ? 1 : 0));
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
