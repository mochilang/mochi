// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

List<List<int>> segment_image(List<List<int>> image, List<int> thresholds) {
  List<List<int>> segmented = <List<int>>[];
  int i = 0;
  while (i < image.length) {
    List<int> row = <int>[];
    int j = 0;
    while (j < image[i].length) {
    int pixel = image[i][j];
    int label = 0;
    int k = 0;
    while (k < thresholds.length) {
    if (pixel > thresholds[k]) {
    label = k + 1;
  }
    k = k + 1;
  }
    row = [...row, label];
    j = j + 1;
  }
    segmented = ([...segmented, row] as List).map((e) => ((e as List).map((e) => (e is BigInt ? e.toInt() : (e as int))).toList() as List<int>)).toList();
    i = i + 1;
  }
  return segmented;
}

void _main() {
  List<List<int>> image = [[80, 120, 180], [40, 90, 150], [20, 60, 100]];
  List<int> thresholds = [50, 100, 150];
  List<List<int>> segmented = segment_image(image, thresholds);
  print(segmented);
}

void _start() {
  _main();
}

void main() => _start();
