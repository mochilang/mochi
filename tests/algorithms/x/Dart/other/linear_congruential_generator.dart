// Generated by Mochi transpiler
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { return v.toInt().toString(); } return v.toString(); }

class LCG {
  int multiplier;
  int increment;
  int modulo;
  int seed;
  LCG({required this.multiplier, required this.increment, required this.modulo, required this.seed});
}

LCG make_lcg(int multiplier, int increment, int modulo, int seed) {
  return LCG(multiplier: multiplier, increment: increment, modulo: modulo, seed: seed);
}

int next_number(LCG lcg) {
  lcg.seed = (lcg.multiplier * lcg.seed + lcg.increment) % lcg.modulo;
  return lcg.seed;
}

LCG lcg = make_lcg(1664525, 1013904223, 4294967296, _now());
int i = 0;
void main() {
  _initNow();
  while (i < 5) {
    print(_str(next_number(lcg)));
    i = i + 1;
  }
}
