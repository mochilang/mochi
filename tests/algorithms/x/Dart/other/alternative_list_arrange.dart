// Generated by Mochi transpiler
dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { var i = v.toInt(); if (i == 0) return '0'; return i.toString(); } return v.toString(); }

dynamic from_int(int x) {
  return {"__name": "Int", "value": x};
}

dynamic from_string(String s) {
  return {"__name": "Str", "value": s};
}

String item_to_string(dynamic it) {
  return (it["__name"] == "Int" ? _str(it["value"]) : (it["__name"] == "Str" ? it["value"] : ""));
}

List<dynamic> alternative_list_arrange(List<dynamic> first, List<dynamic> second) {
  int len1 = first.length;
  int len2 = second.length;
  int abs_len = (len1 > len2 ? len1 : len2);
  List<dynamic> result = <dynamic>[];
  int i = 0;
  while (i < abs_len) {
    if (i < len1) {
    result = [...result, first[i]];
  }
    if (i < len2) {
    result = [...result, second[i]];
  }
    i = i + 1;
  }
  return result;
}

String list_to_string(List<dynamic> xs) {
  String s = "[";
  int i = 0;
  while (i < xs.length) {
    s = s + item_to_string(xs[i]);
    if (i < xs.length - 1) {
    s = s + ", ";
  }
    i = i + 1;
  }
  s = s + "]";
  return s;
}

List<dynamic> example1 = alternative_list_arrange(List<dynamic>.from([from_int(1), from_int(2), from_int(3), from_int(4), from_int(5)]), List<dynamic>.from([from_string("A"), from_string("B"), from_string("C")]));
List<dynamic> example2 = alternative_list_arrange(List<dynamic>.from([from_string("A"), from_string("B"), from_string("C")]), List<dynamic>.from([from_int(1), from_int(2), from_int(3), from_int(4), from_int(5)]));
List<dynamic> example3 = alternative_list_arrange(List<dynamic>.from([from_string("X"), from_string("Y"), from_string("Z")]), List<dynamic>.from([from_int(9), from_int(8), from_int(7), from_int(6)]));
List<dynamic> example4 = alternative_list_arrange(List<dynamic>.from([from_int(1), from_int(2), from_int(3), from_int(4), from_int(5)]), List<dynamic>.from([] as List<dynamic>));
void main() {
  print(list_to_string(List<dynamic>.from(example1)));
  print(list_to_string(List<dynamic>.from(example2)));
  print(list_to_string(List<dynamic>.from(example3)));
  print(list_to_string(List<dynamic>.from(example4)));
}
