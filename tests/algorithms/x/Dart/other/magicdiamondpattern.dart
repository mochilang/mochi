// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

String floyd(int n) {
  String result = "";
  int i = 0;
  while (i < n) {
    int j = 0;
    while (j < n - i - 1) {
    result = result + " ";
    j = j + 1;
  }
    int k = 0;
    while (k < i + 1) {
    result = result + "* ";
    k = k + 1;
  }
    result = result + "\n";
    i = i + 1;
  }
  return result;
}

String reverse_floyd(int n) {
  String result = "";
  int i = n;
  while (i > 0) {
    int j = i;
    while (j > 0) {
    result = result + "* ";
    j = j - 1;
  }
    result = result + "\n";
    int k = n - i + 1;
    while (k > 0) {
    result = result + " ";
    k = k - 1;
  }
    i = i - 1;
  }
  return result;
}

String pretty_print(int n) {
  if (n <= 0) {
    return "       ...       ....        nothing printing :(";
  }
  String upper_half = floyd(n);
  String lower_half = reverse_floyd(n);
  return upper_half + lower_half;
}

void _main() {
  print(pretty_print(3));
  print(pretty_print(0));
}

void _start() {
  _main();
}

void main() => _start();
