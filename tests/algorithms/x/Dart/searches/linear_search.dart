// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { return v.toInt().toString(); } return v.toString(); }

int linear_search(List<int> sequence, int target) {
  int i = 0;
  while (i < sequence.length) {
    if (sequence[i] == target) {
    return i;
  }
    i = i + 1;
  }
  return -1;
}

int rec_linear_search(List<int> sequence, int low, int high, int target) {
  if (!(0 <= high && high < sequence.length && 0 <= low && low < sequence.length)) {
    ;
  }
  if (high < low) {
    return -1;
  }
  if (sequence[low] == target) {
    return low;
  }
  if (sequence[high] == target) {
    return high;
  }
  return rec_linear_search(sequence, low + 1, high - 1, target);
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print(_str(linear_search([0, 5, 7, 10, 15], 0)));
  print(_str(linear_search([0, 5, 7, 10, 15], 15)));
  print(_str(linear_search([0, 5, 7, 10, 15], 5)));
  print(_str(linear_search([0, 5, 7, 10, 15], 6)));
  print(_str(rec_linear_search([0, 30, 500, 100, 700], 0, 4, 0)));
  print(_str(rec_linear_search([0, 30, 500, 100, 700], 0, 4, 700)));
  print(_str(rec_linear_search([0, 30, 500, 100, 700], 0, 4, 30)));
  print(_str(rec_linear_search([0, 30, 500, 100, 700], 0, 4, -6)));
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
