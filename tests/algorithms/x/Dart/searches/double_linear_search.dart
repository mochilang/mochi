// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _str(dynamic v) => v.toString();

int double_linear_search(List<int> array, int search_item) {
  int start_ind = 0;
  int end_ind = array.length - 1;
  while (start_ind <= end_ind) {
    if (array[start_ind] == search_item) {
    return start_ind;
  }
    if (array[end_ind] == search_item) {
    return end_ind;
  }
    start_ind = start_ind + 1;
    end_ind = end_ind - 1;
  }
  return -1;
}

void _main() {
  List<int> data = build_range(100);
  print(_str(double_linear_search(data, 40)));
}

List<int> build_range(int n) {
  List<int> res = <int>[];
  int i = 0;
  while (i < n) {
    res = [...res, i];
    i = i + 1;
  }
  return res;
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}

void main() => _start();
