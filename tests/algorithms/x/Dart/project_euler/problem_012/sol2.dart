// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

int countDivisors(int n) {
  int _num = n;
  int total = 1;
  int i = 2;
  while (i * i <= _num) {
    int multiplicity = 0;
    while (_num % i == 0) {
    _num = _num ~/ i;
    multiplicity = multiplicity + 1;
  }
    total = total * (multiplicity + 1);
    i = i + 1;
  }
  if (_num > 1) {
    total = total * 2;
  }
  return total;
}

int solution() {
  int n = 1;
  int tri = 1;
  while (countDivisors(tri) <= 500) {
    n = n + 1;
    tri = tri + n;
  }
  return tri;
}

void main() {
  print(solution());
}
