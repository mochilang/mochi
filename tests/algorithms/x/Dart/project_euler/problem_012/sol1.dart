// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _str(dynamic v) => v.toString();

int count_divisors(int n) {
  int m = n;
  int n_divisors = 1;
  int i = 2;
  while (i * i <= m) {
    int multiplicity = 0;
    while (m % i == 0) {
    m = m ~/ i;
    multiplicity = multiplicity + 1;
  }
    n_divisors = n_divisors * (multiplicity + 1);
    i = i + 1;
  }
  if (m > 1) {
    n_divisors = n_divisors * 2;
  }
  return n_divisors;
}

int solution() {
  int t_num = 1;
  int i = 1;
  while (true) {
    i = i + 1;
    t_num = t_num + i;
    if (count_divisors(t_num) > 500) {
    break;
  }
  }
  return t_num;
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print(_str(solution()));
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
