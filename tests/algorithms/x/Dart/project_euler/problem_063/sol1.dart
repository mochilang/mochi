// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _str(dynamic v) => v.toString();

int pow(int base, int exponent) {
  int result = 1;
  int i = 0;
  while (i < exponent) {
    result = result * base;
    i = i + 1;
  }
  return result;
}

int num_digits(int n) {
  if (n == 0) {
    return 1;
  }
  int count = 0;
  int x = n;
  while (x > 0) {
    x = x ~/ 10;
    count = count + 1;
  }
  return count;
}

int solution(int max_base, int max_power) {
  int total = 0;
  int base = 1;
  while (base < max_base) {
    int power = 1;
    while (power < max_power) {
    int digits = num_digits(pow(base, power));
    if (digits == power) {
    total = total + 1;
  }
    power = power + 1;
  }
    base = base + 1;
  }
  return total;
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print("solution(10, 22) = " + _str(solution(10, 22)));
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
