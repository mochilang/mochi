// Generated by Mochi transpiler
import 'dart:io';

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { return v.toInt().toString(); } return v.toString(); }

int one_pence() {
  return 1;
}

int two_pence(int x) {
  if (x < 0) {
    return 0;
  }
  return two_pence(x - 2) + one_pence();
}

int five_pence(int x) {
  if (x < 0) {
    return 0;
  }
  return five_pence(x - 5) + two_pence(x);
}

int ten_pence(int x) {
  if (x < 0) {
    return 0;
  }
  return ten_pence(x - 10) + five_pence(x);
}

int twenty_pence(int x) {
  if (x < 0) {
    return 0;
  }
  return twenty_pence(x - 20) + ten_pence(x);
}

int fifty_pence(int x) {
  if (x < 0) {
    return 0;
  }
  return fifty_pence(x - 50) + twenty_pence(x);
}

int one_pound(int x) {
  if (x < 0) {
    return 0;
  }
  return one_pound(x - 100) + fifty_pence(x);
}

int two_pound(int x) {
  if (x < 0) {
    return 0;
  }
  return two_pound(x - 200) + one_pound(x);
}

int solution(int n) {
  return two_pound(n);
}

void _main() {
  int n = int.parse(stdin.readLineSync() ?? '');
  print(_str(solution(n)));
}

void _start() {
  _main();
}

void main() => _start();
