// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

int solution(int pence) {
  List<int> coins = [1, 2, 5, 10, 20, 50, 100, 200];
  List<int> ways = <int>[];
  int i = 0;
  while (i <= pence) {
    ways = [...ways, 0];
    i = i + 1;
  }
  while (ways.length <= 0) { ways.add(0); } ways[0] = 1;
  int idx = 0;
  while (idx < coins.length) {
    int coin = coins[idx];
    int j = coin;
    while (j <= pence) {
    while (ways.length <= j) { ways.add(0); } ways[j] = ways[j] + ways[j - coin];
    j = j + 1;
  }
    idx = idx + 1;
  }
  return ways[pence];
}

void main() {
  print(solution(500));
  print(solution(200));
  print(solution(50));
  print(solution(10));
}
