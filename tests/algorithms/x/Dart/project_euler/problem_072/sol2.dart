// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

int solution(int limit) {
  List<int> phi = <int>[];
  int i = 0;
  while (i <= limit) {
    phi = [...phi, i];
    i = i + 1;
  }
  int n = 2;
  while (n <= limit) {
    if (phi[n] == n) {
    int k = n;
    while (k <= limit) {
    while (phi.length <= k) { phi.add(0); } phi[k] = phi[k] - phi[k] ~/ n;
    k = k + n;
  };
  }
    n = n + 1;
  }
  int total = 0;
  int m = 2;
  while (m <= limit) {
    total = total + phi[m];
    m = m + 1;
  }
  return total;
}

void _main() {
  print(solution(8));
  print(solution(1000));
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}

void main() => _start();
