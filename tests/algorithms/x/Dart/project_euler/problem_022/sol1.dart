// Generated by Mochi transpiler
import 'dart:io';

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { return v.toInt().toString(); } return v.toString(); }

List<String> parse_names(String line) {
  List<String> names = <String>[];
  String current = "";
  int i = 0;
  while (i < line.length) {
    String ch = _substr(line, i, i + 1);
    if (ch == ",") {
    names = (names..add(current));
    current = "";
  } else {
    if (ch != "\"") {
    current = current + ch;
  };
  }
    i = i + 1;
  }
  names = (names..add(current));
  return names;
}

List<String> insertion_sort(List<String> arr) {
  List<String> a = arr;
  int i = 1;
  while (i < a.length) {
    String key = a[i];
    int j = i - 1;
    while (j >= 0 && a[j].compareTo(key) > 0) {
    while (a.length <= j + 1) { a.add(""); } a[j + 1] = a[j];
    j = j - 1;
  }
    while (a.length <= j + 1) { a.add(""); } a[j + 1] = key;
    i = i + 1;
  }
  return a;
}

int letter_value(String ch) {
  String alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
  int idx = 0;
  while (idx < alphabet.length) {
    if (_substr(alphabet, idx, idx + 1) == ch) {
    return idx + 1;
  }
    idx = idx + 1;
  }
  return 0;
}

int name_score(String name) {
  int score = 0;
  int i = 0;
  while (i < name.length) {
    score = score + letter_value(_substr(name, i, i + 1));
    i = i + 1;
  }
  return score;
}

void _main() {
  String line = stdin.readLineSync() ?? '';
  List<String> names = insertion_sort(parse_names(line));
  int total = 0;
  int i = 0;
  while (i < names.length) {
    total = total + (i + 1) * name_score(names[i]);
    i = i + 1;
  }
  print(_str(total));
}

void _start() {
  _main();
}

void main() => _start();
