// Generated by Mochi transpiler
dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

int solution(int n) {
  int sum_of_squares = n * (n + 1) * (2 * n + 1) ~/ 6;
  int sum_first_n = n * (n + 1) ~/ 2;
  int square_of_sum = sum_first_n * sum_first_n;
  return square_of_sum - sum_of_squares;
}

void main() {
  print(solution(10));
  print(solution(15));
  print(solution(20));
  print(solution(50));
  print(solution(100));
}
