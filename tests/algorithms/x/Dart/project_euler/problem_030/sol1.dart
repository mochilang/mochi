// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

List<int> DIGITS_FIFTH_POWER = [0, 1, 32, 243, 1024, 3125, 7776, 16807, 32768, 59049];
int digits_fifth_powers_sum(int number) {
  int total = 0;
  int n = number;
  while (n > 0) {
    int digit = n % 10;
    total = total + DIGITS_FIFTH_POWER[digit];
    n = n ~/ 10;
  }
  return total;
}

int solution() {
  int total = 0;
  int _num = 1000;
  while (_num < 1000000) {
    if (_num == digits_fifth_powers_sum(_num)) {
    total = total + _num;
  }
    _num = _num + 1;
  }
  return total;
}

void main() {
  print(solution());
}
