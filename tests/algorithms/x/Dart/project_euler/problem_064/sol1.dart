// Generated by Mochi transpiler
import 'dart:io';

dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

int intSqrt(int n) {
  if (n == 0) {
    return 0;
  }
  int x = n;
  int y = (x + 1) ~/ 2;
  while (y < x) {
    x = y;
    y = (x + n ~/ x) ~/ 2;
  }
  return x;
}

int continuousFractionPeriod(int n) {
  int m = 0;
  int d = 1;
  int a0 = intSqrt(n);
  int a = a0;
  int period = 0;
  while (a != 2 * a0) {
    m = d * a - m;
    d = (n - m * m) ~/ d;
    a = (a0 + m) ~/ d;
    period = period + 1;
  }
  return period;
}

int solution(int n) {
  int count = 0;
  for (int i = 2; i < n + 1; i++) {
    int r = intSqrt(i);
    if (r * r != i) {
    int p = continuousFractionPeriod(i);
    if (p % 2 == 1) {
    count = count + 1;
  };
  }
  }
  return count;
}

void _main() {
  String nStr = stdin.readLineSync() ?? '';
  int n = int.parse(nStr);
  print(solution(n));
}

void _start() {
  _main();
}

void main() => _start();
