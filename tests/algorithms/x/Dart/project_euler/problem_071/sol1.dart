// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _str(dynamic v) => v.toString();

int solution(int numerator, int denominator, int limit) {
  int maxNumerator = 0;
  int maxDenominator = 1;
  int currentDenominator = 1;
  while (currentDenominator <= limit) {
    int currentNumerator = currentDenominator * numerator ~/ denominator;
    if (currentDenominator % denominator == 0) {
    currentNumerator = currentNumerator - 1;
  }
    if (currentNumerator * maxDenominator > currentDenominator * maxNumerator) {
    maxNumerator = currentNumerator;
    maxDenominator = currentDenominator;
  }
    currentDenominator = currentDenominator + 1;
  }
  return maxNumerator;
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print(_str(solution(3, 7, 1000000)));
  print(_str(solution(3, 7, 8)));
  print(_str(solution(6, 7, 60)));
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
