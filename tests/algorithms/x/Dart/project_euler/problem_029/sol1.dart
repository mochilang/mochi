// Generated by Mochi transpiler
import 'dart:io';

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

int int_pow(int base, int exp) {
  int result = 1;
  int i = 0;
  while (i < exp) {
    result = result * base;
    i = i + 1;
  }
  return result;
}

int solution(int n) {
  List<int> powers = <int>[];
  int limit = n + 1;
  for (int a = 2; a < limit; a++) {
    for (int b = 2; b < limit; b++) {
    int p = int_pow(a, b);
    if (!powers.contains(p)) {
    powers = (powers..add(p));
  }
  }
  }
  return powers.length;
}

void _main() {
  int n = int.parse(stdin.readLineSync() ?? '');
  print(["Number of terms ", solution(n)].join(" "));
}

void _start() {
  _main();
}

void main() => _start();
