// Generated by Mochi transpiler
import 'dart:math' as math;
dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

String _str(dynamic v) => v.toString();


Never _error(String msg) {
  throw Exception(msg);
}

double to_float(int x) {
  return x * 1.0;
}

double sqrt(double x) {
  return math.sqrt(x);
}

int floor(double x) {
  int n = 0;
  double y = x;
  while (y >= 1.0) {
    y = y - 1.0;
    n = n + 1;
  }
  return n;
}

int hexagonal_num(int n) {
  return n * (2 * n - 1);
}

bool is_pentagonal(int n) {
  double root = sqrt(1.0 + 24.0 * n.toDouble());
  double val = (1.0 + root) / 6.0;
  return val == floor(val).toDouble();
}

int solution(int start) {
  int idx = start;
  int _num = hexagonal_num(idx);
  while (!is_pentagonal(_num)) {
    idx = idx + 1;
    _num = hexagonal_num(idx);
  }
  return _num;
}

void test_hexagonal_num() {
  if (hexagonal_num(143) != 40755) {
    _error("hexagonal_num(143) failed");
  }
  if (hexagonal_num(21) != 861) {
    _error("hexagonal_num(21) failed");
  }
  if (hexagonal_num(10) != 190) {
    _error("hexagonal_num(10) failed");
  }
}

void test_is_pentagonal() {
  if (!is_pentagonal(330)) {
    _error("330 should be pentagonal");
  }
  if (is_pentagonal(7683)) {
    _error("7683 should not be pentagonal");
  }
  if (!is_pentagonal(2380)) {
    _error("2380 should be pentagonal");
  }
}

void test_solution() {
  if (solution(144) != 1533776805) {
    _error("solution failed");
  }
}

void main() {
  test_hexagonal_num();
  test_is_pentagonal();
  test_solution();
  print(_str(solution(144)) + " = ");
}
