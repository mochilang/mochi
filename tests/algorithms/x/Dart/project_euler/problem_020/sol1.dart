// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { return v.toInt().toString(); } return v.toString(); }

int factorial(int _num) {
  int res = 1;
  int i = 2;
  while (i <= _num) {
    res = res * i;
    i = i + 1;
  }
  return res;
}

int split_and_add(int number) {
  int sum = 0;
  int n = number;
  while (n > 0) {
    int last = n % 10;
    sum = sum + last;
    n = n ~/ 10;
  }
  return sum;
}

int solution(int _num) {
  int nfact = factorial(_num);
  return split_and_add(nfact);
}

void main() {
  print(_str(solution(100)));
}
