// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { return v.toInt().toString(); } return v.toString(); }

int factorial(int n) {
  int result = 1;
  int i = 2;
  while (i <= n) {
    result = result * i;
    i = i + 1;
  }
  return result;
}

int digit_sum(int n) {
  String s = _str(n);
  int total = 0;
  int i = 0;
  while (i < s.length) {
    String digit_str = _substr(s, i, i + 1);
    total = total + int.parse(digit_str);
    i = i + 1;
  }
  return total;
}

int solution(int _num) {
  return digit_sum(factorial(_num));
}

void main() {
  print(_str(solution(100)));
}
