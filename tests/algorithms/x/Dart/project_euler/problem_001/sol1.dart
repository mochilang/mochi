// Generated by Mochi transpiler
dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { var i = v.toInt(); if (i == 0) return '0'; return i.toString(); } return v.toString(); }

int solution(int n) {
  int total = 0;
  int e = 3;
  while (e < n) {
    if (e % 3 == 0 || e % 5 == 0) {
    total = total + e;
  }
    e = e + 1;
  }
  return total;
}

void main() {
  print(_str(solution(3)));
  print(_str(solution(4)));
  print(_str(solution(10)));
  print(_str(solution(600)));
  print(_str(solution(-7)));
  print(_str(solution(1000)));
}
