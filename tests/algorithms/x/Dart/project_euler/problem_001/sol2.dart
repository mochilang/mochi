// Generated by Mochi transpiler
dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { var i = v.toInt(); if (i == 0) return '0'; return i.toString(); } return v.toString(); }

int sum_of_multiples(int n) {
  int total = 0;
  int terms = (n - 1) ~/ 3;
  total = total + terms * (6 + (terms - 1) * 3) ~/ 2;
  terms = (n - 1) ~/ 5;
  total = total + terms * (10 + (terms - 1) * 5) ~/ 2;
  terms = (n - 1) ~/ 15;
  total = total - terms * (30 + (terms - 1) * 15) ~/ 2;
  return total;
}

void main() {
  print("solution() = " + _str(sum_of_multiples(1000)));
}
