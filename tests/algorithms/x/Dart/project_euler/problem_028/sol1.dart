// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { return v.toInt().toString(); } return v.toString(); }

int solution(int n) {
  int total = 1;
  int i = 1;
  int limit = (n + 1) ~/ 2;
  while (i < limit) {
    int odd = 2 * i + 1;
    int even = 2 * i;
    total = total + 4 * odd * odd - 6 * even;
    i = i + 1;
  }
  return total;
}

void main() {
  print(_str(solution(1001)));
  print(_str(solution(500)));
  print(_str(solution(100)));
  print(_str(solution(50)));
  print(_str(solution(10)));
}
