// Generated by Mochi transpiler
dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

int gcd(int a, int b) {
  int x = a;
  int y = b;
  while (y != 0) {
    int temp = x % y;
    x = y;
    y = temp;
  }
  return x;
}

int solution(int max_d) {
  int fractions_number = 0;
  int d = 0;
  while (d <= max_d) {
    int n = d ~/ 3 + 1;
    int half = (d + 1) ~/ 2;
    while (n < half) {
    if (gcd(n, d) == 1) {
    fractions_number = fractions_number + 1;
  }
    n = n + 1;
  }
    d = d + 1;
  }
  return fractions_number;
}

dynamic _main() {
  print(solution(12000));
}

void _start() {
  _main();
}

void main() => _start();
