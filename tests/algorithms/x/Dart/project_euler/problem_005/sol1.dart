// Generated by Mochi transpiler
dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}


Never _error(String msg) {
  throw Exception(msg);
}

int gcd(int a, int b) {
  int x = a;
  int y = b;
  while (y != 0) {
    int t = x % y;
    x = y;
    y = t;
  }
  if (x < 0) {
    return -x;
  }
  return x;
}

int lcm(int a, int b) {
  return a ~/ gcd(a, b) * b;
}

int solution(int n) {
  if (n <= 0) {
    _error("Parameter n must be greater than or equal to one.");
  }
  int result = 1;
  int i = 2;
  while (i <= n) {
    result = lcm(result, i);
    i = i + 1;
  }
  return result;
}

void main() {
  print(solution(10));
  print(solution(15));
  print(solution(22));
  print(solution(20));
}
