// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { return v.toInt().toString(); } return v.toString(); }

int mod_pow(int base, int exp, int mod) {
  int result = 1;
  int b = base % mod;
  int e = exp;
  while (e > 0) {
    if (e % 2 == 1) {
    result = result * b % mod;
  }
    b = b * b % mod;
    e = e ~/ 2;
  }
  return result;
}

bool miller_rabin(int n, bool allow_probable) {
  if (n == 2) {
    return true;
  }
  if (n < 2 || n % 2 == 0) {
    return false;
  }
  if (n > 5) {
    int last = n % 10;
    if (!(last == 1 || last == 3 || last == 7 || last == 9)) {
    return false;
  };
  }
  int limit = 3825123056546413051;
  if (n > limit && !allow_probable) {
    throw Exception("Warning: upper bound of deterministic test is exceeded. Pass allow_probable=true to allow probabilistic test.");
  }
  List<int> bounds = [2047, 1373653, 25326001, 3215031751, 2152302898747, 3474749660383, 341550071728321, limit];
  List<int> primes = [2, 3, 5, 7, 11, 13, 17, 19];
  int i = 0;
  int plist_len = primes.length;
  while (i < bounds.length) {
    if (n < bounds[i]) {
    plist_len = i + 1;
    i = bounds.length;
  } else {
    i = i + 1;
  }
  }
  int d = n - 1;
  int s = 0;
  while (d % 2 == 0) {
    d = d ~/ 2;
    s = s + 1;
  }
  int j = 0;
  while (j < plist_len) {
    int prime = primes[j];
    int x = mod_pow(prime, d, n);
    bool pr = false;
    if (x == 1 || x == n - 1) {
    pr = true;
  } else {
    int r = 1;
    while (r < s && !pr) {
    x = x * x % n;
    if (x == n - 1) {
    pr = true;
  }
    r = r + 1;
  };
  }
    if (!pr) {
    return false;
  }
    j = j + 1;
  }
  return true;
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print(_str(miller_rabin(561, false)));
  print(_str(miller_rabin(563, false)));
  print(_str(miller_rabin(838201, false)));
  print(_str(miller_rabin(838207, false)));
  print(_str(miller_rabin(17316001, false)));
  print(_str(miller_rabin(17316017, false)));
  print(_str(miller_rabin(3078386641, false)));
  print(_str(miller_rabin(3078386653, false)));
  print(_str(miller_rabin(1713045574801, false)));
  print(_str(miller_rabin(1713045574819, false)));
  print(_str(miller_rabin(2779799728307, false)));
  print(_str(miller_rabin(2779799728327, false)));
  print(_str(miller_rabin(113850023909441, false)));
  print(_str(miller_rabin(113850023909527, false)));
  print(_str(miller_rabin(1275041018848804351, false)));
  print(_str(miller_rabin(1275041018848804391, false)));
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
