// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { return v.toInt().toString(); } return v.toString(); }

String uppercase = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
String lowercase = "abcdefghijklmnopqrstuvwxyz";
int index_of(String s, String c) {
  int i = 0;
  while (i < s.length) {
    if (_substr(s, i, i + 1) == c) {
    return i;
  }
    i = i + 1;
  }
  return -1;
}

String dencrypt(String s, int n) {
  String out = "";
  int i = 0;
  while (i < s.length) {
    String ch = _substr(s, i, i + 1);
    int idx_u = index_of(uppercase, ch);
    if (idx_u >= 0) {
    int new_idx = (idx_u + n) % 26;
    out = out + _substr(uppercase, new_idx, new_idx + 1);
  } else {
    int idx_l = index_of(lowercase, ch);
    if (idx_l >= 0) {
    int new_idx = (idx_l + n) % 26;
    out = out + _substr(lowercase, new_idx, new_idx + 1);
  } else {
    out = out + ch;
  };
  }
    i = i + 1;
  }
  return out;
}

void _main() {
  String msg = "My secret bank account number is 173-52946 so don't tell anyone!!";
  String s = dencrypt(msg, 13);
  print(s);
  print(_str(dencrypt(s, 13) == msg));
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}

void main() => _start();
