// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { return v.toInt().toString(); } return v.toString(); }

double sqrtApprox(double x) {
  if (x <= 0.0) {
    return 0.0;
  }
  double guess = x;
  int i = 0;
  while (i < 20) {
    guess = (guess + x / guess) / 2.0;
    i = i + 1;
  }
  return guess;
}

List<double> squareplus(List<double> vector, double beta) {
  List<double> result = <double>[];
  int i = 0;
  while (i < vector.length) {
    double x = vector[i];
    double val = (x + sqrtApprox(x * x + beta)) / 2.0;
    result = (result..add(val));
    i = i + 1;
  }
  return result;
}

void _main() {
  List<double> v1 = [2.3, 0.6, -2.0, -3.8];
  List<double> v2 = [-9.2, -0.3, 0.45, -4.56];
  print(_str(squareplus(v1, 2.0)));
  print(_str(squareplus(v2, 3.0)));
}

void _start() {
  _main();
}

void main() => _start();
