// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

double ln(double x) {
  if (x <= 0.0) {
    ;
  }
  double y = (x - 1.0) / (x + 1.0);
  double y2 = y * y;
  double term = y;
  double sum = 0.0;
  int k = 0;
  while (k < 10) {
    double denom = 2 * k + 1.toDouble();
    sum = sum + term / denom;
    term = term * y2;
    k = k + 1;
  }
  return 2.0 * sum;
}

double exp(double x) {
  double term = 1.0;
  double sum = 1.0;
  int n = 1;
  while (n < 20) {
    term = term * x / (n.toDouble());
    sum = sum + term;
    n = n + 1;
  }
  return sum;
}

List<double> softplus(List<double> vector) {
  List<double> result = <double>[];
  int i = 0;
  while (i < vector.length) {
    double x = vector[i];
    double value = ln(1.0 + exp(x));
    result = (result..add(value));
    i = i + 1;
  }
  return result;
}

void _main() {
  List<double> v1 = [2.3, 0.6, -2.0, -3.8];
  List<double> v2 = [-9.2, -0.3, 0.45, -4.56];
  List<double> r1 = softplus(v1);
  List<double> r2 = softplus(v2);
  print(r1);
  print(r2);
}

void _start() {
  _main();
}

void main() => _start();
