// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

List<int> binary_step(List<double> vector) {
  List<int> out = <int>[];
  int i = 0;
  while (i < vector.length) {
    if (vector[i] >= 0.0) {
    out = (out..add(1));
  } else {
    out = (out..add(0));
  }
    i = i + 1;
  }
  return out;
}

void _main() {
  List<double> vector = [-1.2, 0.0, 2.0, 1.45, -3.7, 0.3];
  List<int> result = binary_step(vector);
  print(result);
}

void _start() {
  _main();
}

void main() => _start();
