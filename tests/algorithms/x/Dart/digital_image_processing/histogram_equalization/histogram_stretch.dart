// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

List<int> make_list(int n, int value) {
  List<int> res = <int>[];
  int i = 0;
  while (i < n) {
    res = (res..add(value));
    i = i + 1;
  }
  return res;
}

List<List<int>> histogram_stretch(List<List<int>> image) {
  int height = image.length;
  int width = image[0].length;
  List<int> hist = make_list(256, 0);
  int i = 0;
  while (i < height) {
    int j = 0;
    while (j < width) {
    int val = image[i][j];
    while (hist.length <= val) { hist.add(0); } hist[val] = hist[val] + 1;
    j = j + 1;
  }
    i = i + 1;
  }
  List<int> mapping = make_list(256, 0);
  int cumulative = 0;
  int total = height * width;
  int h = 0;
  while (h < 256) {
    cumulative = cumulative + hist[h];
    while (mapping.length <= h) { mapping.add(0); } mapping[h] = 255 * cumulative ~/ total;
    h = h + 1;
  }
  i = 0;
  while (i < height) {
    int j = 0;
    while (j < width) {
    int val = image[i][j];
    while (image[i]!.length <= j) { image[i]!.add(0); } image[i]![j] = mapping[val];
    j = j + 1;
  }
    i = i + 1;
  }
  return image;
}

void print_image(List<List<int>> image) {
  int i = 0;
  while (i < image.length) {
    print(image[i]);
    i = i + 1;
  }
}

List<List<int>> img = [[52, 55, 61], [59, 79, 61], [85, 76, 62]];
List<List<int>> result = histogram_stretch(img);
void main() {
  print_image(result);
}
