// Generated by Mochi transpiler
dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}

String _str(dynamic v) { if (v is double && v == v.roundToDouble()) { var i = v.toInt(); if (i == 0) return '0'; return i.toString(); } return v.toString(); }

List<List<int>> change_contrast(List<List<int>> img, int level) {
  double factor = 259.0 * ((level.toDouble()) + 255.0) / (255.0 * (259.0 - (level.toDouble())));
  List<List<int>> result = <List<int>>[];
  int i = 0;
  while (i < img.length) {
    List<int> row = img[i];
    List<int> new_row = <int>[];
    int j = 0;
    while (j < row.length) {
    int c = row[j];
    int contrasted = (128.0 + factor * ((c.toDouble()) - 128.0)).toInt();
    int clamped = (contrasted < 0 ? 0 : (contrasted > 255 ? 255 : contrasted));
    new_row = [...new_row, clamped];
    j = j + 1;
  }
    result = ([...result, new_row] as List).map((e) => ((e as List).map((e) => (e is BigInt ? e.toInt() : (e as int))).toList() as List<int>)).toList();
    i = i + 1;
  }
  return result;
}

void print_image(List<List<int>> img) {
  int i = 0;
  while (i < img.length) {
    List<int> row = img[i];
    int j = 0;
    String line = "";
    while (j < row.length) {
    line = line + _str(row[j]) + " ";
    j = j + 1;
  }
    print(line);
    i = i + 1;
  }
}

List<List<int>> image = [[100, 125, 150], [175, 200, 225], [50, 75, 100]];
List<List<int>> contrasted = change_contrast(image, 170);
void main() {
  print("Original image:");
  print_image(image);
  print("After contrast:");
  print_image(contrasted);
}
