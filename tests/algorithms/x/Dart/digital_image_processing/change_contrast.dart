// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

List<List<int>> change_contrast(List<List<int>> img, int level) {
  double factor = 259.0 * ((level as double) + 255.0) / (255.0 * (259.0 - (level as double)));
  List<List<int>> result = <List<int>>[];
  int i = 0;
  while (i < img.length) {
    List<int> row = img[i];
    List<int> new_row = <int>[];
    int j = 0;
    while (j < row.length) {
    int c = row[j];
    int contrasted = 128.0 + factor * ((c as double) - 128.0) as int;
    int clamped = (contrasted < 0 ? 0 : (contrasted > 255 ? 255 : contrasted));
    new_row = [...new_row, clamped];
    j = j + 1;
  }
    result = ([...result, new_row] as List).map((e) => ((e as List).map((e) => (e is BigInt ? e.toInt() : (e as int))).toList() as List<int>)).toList();
    i = i + 1;
  }
  return result;
}

void print_image(List<List<int>> img) {
  int i = 0;
  while (i < img.length) {
    List<int> row = img[i];
    int j = 0;
    String line = "";
    while (j < row.length) {
    line = line + (row[j]).toString() + " ";
    j = j + 1;
  }
    print(line);
    i = i + 1;
  }
}

List<List<int>> image = [[100, 125, 150], [175, 200, 225], [50, 75, 100]];
List<List<int>> contrasted = change_contrast(image, 170);
void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print("Original image:");
  print_image(image);
  print("After contrast:");
  print_image(contrasted);
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
