// Generated by Mochi transpiler
dynamic _substr(dynamic s, num start, num end) {
  int n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  if (s is String) {
    return s.substring(s0, e0);
  }
  return s.sublist(s0, e0);
}


Never _error(String msg) {
  throw Exception(msg);
}

int clamp(int value) {
  if (value < 0) {
    return 0;
  }
  if (value > 255) {
    return 255;
  }
  return value;
}

List<List<int>> change_brightness(List<List<int>> img, int level) {
  if (level < -255 || level > 255) {
    _error("level must be between -255 and 255");
  }
  List<List<int>> result = <List<int>>[];
  int i = 0;
  while (i < img.length) {
    List<int> row_res = <int>[];
    int j = 0;
    while (j < img[i].length) {
    row_res = [...row_res, clamp(img[i][j] + level)];
    j = j + 1;
  }
    result = ([...result, row_res] as List).map((e) => ((e as List).map((e) => (e is BigInt ? e.toInt() : (e as int))).toList() as List<int>)).toList();
    i = i + 1;
  }
  return result;
}

List<List<int>> sample = [[100, 150], [200, 250]];
void main() {
  print("[" + change_brightness(sample, 30).join(', ') + "]");
  print("[" + change_brightness(sample, -60).join(', ') + "]");
}
