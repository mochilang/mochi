compile: exit status 1
/tmp/TestJavaTranspiler_Algorithms_Golden437_karger2323856462/001/Main.java:65: error: incompatible types: possible lossy conversion from long to int
            Object u_1 = nodes_1[rand_int((long)(String.valueOf(nodes_1).length()))];
                                         ^
/tmp/TestJavaTranspiler_Algorithms_Golden437_karger2323856462/001/Main.java:65: error: array required, but List found
            Object u_1 = nodes_1[rand_int((long)(String.valueOf(nodes_1).length()))];
                                ^
/tmp/TestJavaTranspiler_Algorithms_Golden437_karger2323856462/001/Main.java:73: error: incompatible types: String cannot be converted to long
                if ((long)(n_2) != ((Number)(u_1)).intValue() && !(n_2.equals(v_1)) && (contains(((String[])(uv_neighbors_1)), n_2) == false)) {
                          ^
/tmp/TestJavaTranspiler_Algorithms_Golden437_karger2323856462/001/Main.java:81: error: incompatible types: String cannot be converted to long
                if ((long)(n_3) != ((Number)(u_1)).intValue() && !(n_3.equals(v_1)) && (contains(((String[])(uv_neighbors_1)), n_3) == false)) {
                          ^
/tmp/TestJavaTranspiler_Algorithms_Golden437_karger2323856462/001/Main.java:110: error: incompatible types: List cannot be converted to String[]
            nodes_1 = remove_all(((String[])(nodes_1)), (String)(u_1));
                                            ^
/tmp/TestJavaTranspiler_Algorithms_Golden437_karger2323856462/001/Main.java:111: error: incompatible types: List cannot be converted to String[]
            nodes_1 = remove_all(((String[])(nodes_1)), v_1);
                                            ^
/tmp/TestJavaTranspiler_Algorithms_Golden437_karger2323856462/001/Main.java:112: error: no suitable method found for stream(List)
            nodes_1 = java.util.stream.Stream.concat(java.util.Arrays.stream(nodes_1), java.util.stream.Stream.of(uv_1)).toArray(String[]::new);
                                                                     ^
    method Arrays.<T#1>stream(T#1[]) is not applicable
      (cannot infer type-variable(s) T#1
        (argument mismatch; List cannot be converted to T#1[]))
    method Arrays.<T#2>stream(T#2[],int,int) is not applicable
      (cannot infer type-variable(s) T#2
        (actual and formal argument lists differ in length))
    method Arrays.stream(int[]) is not applicable
      (argument mismatch; List cannot be converted to int[])
    method Arrays.stream(long[]) is not applicable
      (argument mismatch; List cannot be converted to long[])
    method Arrays.stream(double[]) is not applicable
      (argument mismatch; List cannot be converted to double[])
  where T#1,T#2 are type-variables:
    T#1 extends Object declared in method <T#1>stream(T#1[])
    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)
/tmp/TestJavaTranspiler_Algorithms_Golden437_karger2323856462/001/Main.java:117: error: incompatible types: possible lossy conversion from long to int
            Object n_5 = nodes_1[j_1];
                                 ^
/tmp/TestJavaTranspiler_Algorithms_Golden437_karger2323856462/001/Main.java:117: error: array required, but List found
            Object n_5 = nodes_1[j_1];
                                ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
9 errors
