# Generated by Mochi transpiler v0.10.59 on 2025-08-06 22:14 +0700
require 'json'

$now_seed = 0
$now_seeded = false
s = ENV['MOCHI_NOW_SEED']
if (!s || s == '') && ENV['MOCHI_BENCHMARK']
  s = '1'
end
if s && s != ''
  begin
    $now_seed = Integer(s)
    $now_seeded = true
  rescue StandardError
  end
end
def _now()
  if $now_seeded
    $now_seed += 1_000_000
    $now_seed
  else
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)
  end
end


require 'objspace'
def _mem()
  ObjectSpace.memsize_of_all
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end


class String
  alias each each_char
end

start_mem = _mem()
start = _now()
  def min_partitions(s)
    n = s.length
    cut = []
    i = 0
    while i < n
      cut = (cut << (0))
      i = _add(i, 1)
    end
    pal = []
    i = 0
    while i < n
      row = []
      j = 0
      while j < n
        row = (row << (false))
        j = _add(j, 1)
      end
      pal = (pal << (row))
      i = _add(i, 1)
    end
    i = 0
    while i < n
      mincut = i
      j = 0
      while j <= i
        if s[i] == s[j] && (i - j < 2 || pal[_add(j, 1)][i - 1])
          pal[j][i] = true
          if j == 0
            mincut = 0
          else
            candidate = _add(cut[j - 1], 1)
            if candidate < mincut
              mincut = candidate
            end
          end
        end
        j = _add(j, 1)
      end
      cut[i] = mincut
      i = _add(i, 1)
    end
    return cut[n - 1]
  end
  puts(min_partitions("aab"))
  puts(min_partitions("aaa"))
  puts(min_partitions("ababbbabbababa"))
end_time = _now()
end_mem = _mem()
result = {"duration_us" => ((end_time - start) / 1000), "memory_bytes" => (end_mem - start_mem), "name" => "main"}
puts(JSON.pretty_generate(result))
