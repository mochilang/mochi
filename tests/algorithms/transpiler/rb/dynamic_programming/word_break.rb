# Generated by Mochi transpiler v0.10.59 on 2025-08-06 22:14 +0700
require 'json'

$now_seed = 0
$now_seeded = false
s = ENV['MOCHI_NOW_SEED']
if (!s || s == '') && ENV['MOCHI_BENCHMARK']
  s = '1'
end
if s && s != ''
  begin
    $now_seed = Integer(s)
    $now_seeded = true
  rescue StandardError
  end
end
def _now()
  if $now_seeded
    $now_seed += 1_000_000
    $now_seed
  else
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)
  end
end


require 'objspace'
def _mem()
  ObjectSpace.memsize_of_all
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end


class String
  alias each each_char
end

start_mem = _mem()
start = _now()
  def build_set(words)
    m = {}
        __tmp1 = words
    if __tmp1.respond_to?(:keys) && !__tmp1.is_a?(String)
      __tmp1 = __tmp1.keys
    end
    __tmp1.each do |w|
      m[w] = true
    end
    return m
  end
  def word_break(s, words)
    n = s.length
    dict = build_set(words)
    dp = []
    i = 0
    while i <= n
      dp = (dp << (false))
      i = _add(i, 1)
    end
    dp[0] = true
    i = 1
    while i <= n
      j = 0
      while j < i
        if dp[j]
          sub = s[j...i]
          if dict.key?(sub)
            dp[i] = true
            j = i
          end
        end
        j = _add(j, 1)
      end
      i = _add(i, 1)
    end
    return dp[n]
  end
  def print_bool(b)
    if b
      puts((true ? 'true' : 'false'))
    else
      puts((false ? 'true' : 'false'))
    end
  end
  print_bool(word_break("applepenapple", ["apple", "pen"]))
  print_bool(word_break("catsandog", ["cats", "dog", "sand", "and", "cat"]))
  print_bool(word_break("cars", ["car", "ca", "rs"]))
end_time = _now()
end_mem = _mem()
result = {"duration_us" => ((end_time - start) / 1000), "memory_bytes" => (end_mem - start_mem), "name" => "main"}
puts(JSON.pretty_generate(result))
