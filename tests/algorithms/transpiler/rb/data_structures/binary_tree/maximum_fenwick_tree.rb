# Generated by Mochi transpiler v0.10.59 on 2025-08-06 20:56 +0700
require 'json'

$now_seed = 0
$now_seeded = false
s = ENV['MOCHI_NOW_SEED']
if (!s || s == '') && ENV['MOCHI_BENCHMARK']
  s = '1'
end
if s && s != ''
  begin
    $now_seed = Integer(s)
    $now_seeded = true
  rescue StandardError
  end
end
def _now()
  if $now_seeded
    $now_seed += 1_000_000
    $now_seed
  else
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)
  end
end


require 'objspace'
def _mem()
  ObjectSpace.memsize_of_all
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end


class String
  alias each each_char
end

start_mem = _mem()
start = _now()
  def zeros(n)
    res = []
    i = 0
    while i < n
      res = (res << 0)
      i = _add(i, 1)
    end
    return res
  end
  def update(arr, idx, value)
    arr[idx] = value
  end
  def query(arr, left, right)
    result = 0
    i = left
    while i < right
      if arr[i] > result
        result = arr[i]
      end
      i = _add(i, 1)
    end
    return result
  end
  $arr = [0, 0, 0, 0, 0]
  puts(query($arr, 0, 5))
  update($arr, 4, 100)
  puts(query($arr, 0, 5))
  update($arr, 4, 0)
  update($arr, 2, 20)
  puts(query($arr, 0, 5))
  update($arr, 4, 10)
  puts(query($arr, 2, 5))
  puts(query($arr, 1, 5))
  update($arr, 2, 0)
  puts(query($arr, 0, 5))
  $arr = zeros(10000)
  update($arr, 255, 30)
  puts(query($arr, 0, 10000))
  $arr = zeros(6)
  update($arr, 5, 1)
  puts(query($arr, 5, 6))
  $arr = zeros(6)
  update($arr, 0, 1000)
  puts(query($arr, 0, 1))
end_time = _now()
end_mem = _mem()
result = {"duration_us" => ((end_time - start) / 1000), "memory_bytes" => (end_mem - start_mem), "name" => "main"}
puts(JSON.pretty_generate(result))
