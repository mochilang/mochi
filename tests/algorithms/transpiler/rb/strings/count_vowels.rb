# Generated by Mochi transpiler v0.10.59 on 2025-08-07 10:45 +0700
require 'json'

$now_seed = 0
$now_seeded = false
s = ENV['MOCHI_NOW_SEED']
if (!s || s == '') && ENV['MOCHI_BENCHMARK']
  s = '1'
end
if s && s != ''
  begin
    $now_seed = Integer(s)
    $now_seeded = true
  rescue StandardError
  end
end
def _now()
  if $now_seeded
    $now_seed += 1_000_000
    $now_seed
  else
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)
  end
end


require 'objspace'
def _mem()
  ObjectSpace.memsize_of_all
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end


def _str(x)
  if x.is_a?(Float) && x == x.to_i
    x.to_i.to_s
  else
    x.to_s
  end
end


class String
  alias each each_char
end


def panic(msg)
  raise RuntimeError, msg
end

start_mem = _mem()
start = _now()
  def is_vowel(c)
    i = 0.clone
    while i < $vowels.length
      if $vowels[i] == c
        return true
      end
      i = _add(i, 1).clone
    end
    return false
  end
  def count_vowels(s)
    count = 0.clone
    i = 0.clone
    while i < s.length
      ch = s[i]
      if is_vowel(ch)
        count = _add(count, 1).clone
      end
      i = _add(i, 1).clone
    end
    return count
  end
  def show(s)
    puts(_str(count_vowels(s)))
  end
  $vowels = "aeiouAEIOU"
  show("hello world")
  show("HELLO WORLD")
  show("123 hello world")
  show("")
  show("a quick brown fox")
  show("the quick BROWN fox")
  show("PYTHON")
end_time = _now()
end_mem = _mem()
result = {"duration_us" => ((end_time - start) / 1000), "memory_bytes" => (end_mem - start_mem), "name" => "main"}
puts(JSON.pretty_generate(result))
