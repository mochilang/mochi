# Generated by Mochi transpiler v0.10.59 on 2025-08-07 10:45 +0700
require 'json'

$now_seed = 0
$now_seeded = false
s = ENV['MOCHI_NOW_SEED']
if (!s || s == '') && ENV['MOCHI_BENCHMARK']
  s = '1'
end
if s && s != ''
  begin
    $now_seed = Integer(s)
    $now_seeded = true
  rescue StandardError
  end
end
def _now()
  if $now_seeded
    $now_seed += 1_000_000
    $now_seed
  else
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)
  end
end


require 'objspace'
def _mem()
  ObjectSpace.memsize_of_all
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end


def _str(x)
  if x.is_a?(Float) && x == x.to_i
    x.to_i.to_s
  else
    x.to_s
  end
end


class String
  alias each each_char
end


def panic(msg)
  raise RuntimeError, msg
end

start_mem = _mem()
start = _now()
  def min3(a, b, c)
    m = a.clone
    if b < m
      m = b.clone
    end
    if c < m
      m = c.clone
    end
    return m
  end
  def edit_distance(source, target)
    if source.length == 0
      return target.length
    end
    if target.length == 0
      return source.length
    end
    last_source = source[source.length - 1...source.length]
    last_target = target[target.length - 1...target.length]
    delta = (last_source == last_target ? 0 : 1)
    delete_cost = _add(edit_distance(source[0...source.length - 1], target), 1)
    insert_cost = _add(edit_distance(source, target[0...target.length - 1]), 1)
    replace_cost = _add(edit_distance(source[0...source.length - 1], target[0...target.length - 1]), delta)
    return min3(delete_cost, insert_cost, replace_cost)
  end
  def main()
    result = edit_distance("ATCGCTG", "TAGCTAA")
    puts(_str(result))
  end
  main()
end_time = _now()
end_mem = _mem()
result = {"duration_us" => ((end_time - start) / 1000), "memory_bytes" => (end_mem - start_mem), "name" => "main"}
puts(JSON.pretty_generate(result))
