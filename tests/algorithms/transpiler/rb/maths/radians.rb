# Generated by Mochi transpiler v0.10.59 on 2025-08-07 00:17 +0700
require 'json'

$now_seed = 0
$now_seeded = false
s = ENV['MOCHI_NOW_SEED']
if (!s || s == '') && ENV['MOCHI_BENCHMARK']
  s = '1'
end
if s && s != ''
  begin
    $now_seed = Integer(s)
    $now_seeded = true
  rescue StandardError
  end
end
def _now()
  if $now_seeded
    $now_seed += 1_000_000
    $now_seed
  else
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)
  end
end


require 'objspace'
def _mem()
  ObjectSpace.memsize_of_all
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end


def _str(x)
  if x.is_a?(Float) && x == x.to_i
    x.to_i.to_s
  else
    x.to_s
  end
end


class String
  alias each each_char
end


def panic(msg)
  raise RuntimeError, msg
end

start_mem = _mem()
start = _now()
  def radians(degree)
    return degree / (180.0 / $PI)
  end
  def abs_float(x)
    if x < 0.0
      return -x
    end
    return x
  end
  def almost_equal(a, b)
    return abs_float(a - b) <= 1e-08
  end
  def test_radians()
    if !almost_equal(radians(180.0), $PI)
      panic("radians 180 failed")
    end
    if !almost_equal(radians(92.0), 1.6057029118347832)
      panic("radians 92 failed")
    end
    if !almost_equal(radians(274.0), 4.782202150464463)
      panic("radians 274 failed")
    end
    if !almost_equal(radians(109.82), 1.9167205845401725)
      panic("radians 109.82 failed")
    end
  end
  def main()
    test_radians()
    puts(_str(radians(180.0)))
    puts(_str(radians(92.0)))
    puts(_str(radians(274.0)))
    puts(_str(radians(109.82)))
  end
  $PI = 3.141592653589793
  main()
end_time = _now()
end_mem = _mem()
result = {"duration_us" => ((end_time - start) / 1000), "memory_bytes" => (end_mem - start_mem), "name" => "main"}
puts(JSON.pretty_generate(result))
