# Generated by Mochi transpiler v0.10.59 on 2025-08-06 20:30 +0700
require 'json'

$now_seed = 0
$now_seeded = false
s = ENV['MOCHI_NOW_SEED']
if (!s || s == '') && ENV['MOCHI_BENCHMARK']
  s = '1'
end
if s && s != ''
  begin
    $now_seed = Integer(s)
    $now_seeded = true
  rescue StandardError
  end
end
def _now()
  if $now_seeded
    $now_seed += 1_000_000
    $now_seed
  else
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)
  end
end


require 'objspace'
def _mem()
  ObjectSpace.memsize_of_all
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end


class String
  alias each each_char
end

start_mem = _mem()
start = _now()
  def nor_gate(input_1, input_2)
    if input_1 == 0 && input_2 == 0
      return 1
    end
    return 0
  end
  def center(s, width)
    total = width - s.length
    if total <= 0
      return s
    end
    left = total / 2
    right = total - left
    res = s
    i = 0
    while i < left
      res = _add(" ", res)
      i = _add(i, 1)
    end
    j = 0
    while j < right
      res = _add(res, " ")
      j = _add(j, 1)
    end
    return res
  end
  def make_table_row(i, j)
    output = nor_gate(i, j)
    return _add(_add(_add(_add(_add(_add("| ", center((i).to_s, 8)), " | "), center((j).to_s, 8)), " | "), center((output).to_s, 8)), " |")
  end
  def truth_table()
    return _add(_add(_add(_add(_add(_add(_add(_add("Truth Table of NOR Gate:\n", "| Input 1 | Input 2 | Output  |\n"), make_table_row(0, 0)), "\n"), make_table_row(0, 1)), "\n"), make_table_row(1, 0)), "\n"), make_table_row(1, 1))
  end
  puts(nor_gate(0, 0))
  puts(nor_gate(0, 1))
  puts(nor_gate(1, 0))
  puts(nor_gate(1, 1))
  puts(truth_table())
end_time = _now()
end_mem = _mem()
result = {"duration_us" => ((end_time - start) / 1000), "memory_bytes" => (end_mem - start_mem), "name" => "main"}
puts(JSON.pretty_generate(result))
