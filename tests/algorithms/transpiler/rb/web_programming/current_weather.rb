# Generated by Mochi transpiler v0.10.59 on 2025-08-07 10:45 +0700
require 'json'

$now_seed = 0
$now_seeded = false
s = ENV['MOCHI_NOW_SEED']
if (!s || s == '') && ENV['MOCHI_BENCHMARK']
  s = '1'
end
if s && s != ''
  begin
    $now_seed = Integer(s)
    $now_seeded = true
  rescue StandardError
  end
end
def _now()
  if $now_seeded
    $now_seed += 1_000_000
    $now_seed
  else
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)
  end
end


require 'objspace'
def _mem()
  ObjectSpace.memsize_of_all
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end


def _str(x)
  if x.is_a?(Float) && x == x.to_i
    x.to_i.to_s
  else
    x.to_s
  end
end


class String
  alias each each_char
end


def panic(msg)
  raise RuntimeError, msg
end

start_mem = _mem()
start = _now()
  def http_get(url, params)
    if params.key?("q")
      return {"location" => params["q"], "temperature" => "20"}
    end
    return {"location" => params["query"], "temperature" => "20"}
  end
  def current_weather(location)
    weather_data = [].clone
    if $OPENWEATHERMAP_API_KEY != ""
      params_openweathermap = {"q" => location, "appid" => $OPENWEATHERMAP_API_KEY}
      response_openweathermap = http_get($OPENWEATHERMAP_URL_BASE, params_openweathermap)
      weather_data = (weather_data << ({"OpenWeatherMap" => response_openweathermap})).clone
    end
    if $WEATHERSTACK_API_KEY != ""
      params_weatherstack = {"query" => location, "access_key" => $WEATHERSTACK_API_KEY}
      response_weatherstack = http_get($WEATHERSTACK_URL_BASE, params_weatherstack)
      weather_data = (weather_data << ({"Weatherstack" => response_weatherstack})).clone
    end
    if weather_data.length == 0
      panic("No API keys provided or no valid data returned.")
    end
    return weather_data
  end
  def main()
    data = current_weather("New York")
    puts(((x = data); x.is_a?(Array) ? ("[" + x.map{ |x| if x.is_a?(Hash) then '{' + x.to_h.map{ |k,v| "#{k}: #{v.is_a?(String) ? v : v.to_s}" }.join(', ') + '}' else x.to_s end }.join(' ') + "]") : x.to_s))
  end
  $OPENWEATHERMAP_API_KEY = "demo"
  $WEATHERSTACK_API_KEY = ""
  $OPENWEATHERMAP_URL_BASE = "https://api.openweathermap.org/data/2.5/weather"
  $WEATHERSTACK_URL_BASE = "http://api.weatherstack.com/current"
  main()
end_time = _now()
end_mem = _mem()
result = {"duration_us" => ((end_time - start) / 1000), "memory_bytes" => (end_mem - start_mem), "name" => "main"}
puts(JSON.pretty_generate(result))
