# Generated by Mochi transpiler v0.10.59 on 2025-08-06 20:30 +0700
require 'json'

$now_seed = 0
$now_seeded = false
s = ENV['MOCHI_NOW_SEED']
if (!s || s == '') && ENV['MOCHI_BENCHMARK']
  s = '1'
end
if s && s != ''
  begin
    $now_seed = Integer(s)
    $now_seeded = true
  rescue StandardError
  end
end
def _now()
  if $now_seeded
    $now_seed += 1_000_000
    $now_seed
  else
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)
  end
end


require 'objspace'
def _mem()
  ObjectSpace.memsize_of_all
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end


class String
  alias each each_char
end

start_mem = _mem()
start = _now()
  def pressure_conversion(value, from_type, to_type)
    if !($PRESSURE_CONVERSION.include?(from_type))
      keys = object.keys($PRESSURE_CONVERSION).join(", ")
      panic(_add(_add(_add("Invalid 'from_type' value: '", from_type), "'  Supported values are:\n"), keys))
    end
    if !($PRESSURE_CONVERSION.include?(to_type))
      keys = object.keys($PRESSURE_CONVERSION).join(", ")
      panic(_add(_add(_add("Invalid 'to_type' value: '", to_type), ".  Supported values are:\n"), keys))
    end
    from = $PRESSURE_CONVERSION[from_type]
    to = $PRESSURE_CONVERSION[to_type]
    return value * from["from_factor"] * to["to_factor"]
  end
  FromTo = Struct.new(:from_factor, :to_factor, keyword_init: true)
  $PRESSURE_CONVERSION = {"atm" => FromTo.new(from_factor: 1.0, to_factor: 1.0), "pascal" => FromTo.new(from_factor: 9.8e-06, to_factor: 101325.0), "bar" => FromTo.new(from_factor: 0.986923, to_factor: 1.01325), "kilopascal" => FromTo.new(from_factor: 0.00986923, to_factor: 101.325), "megapascal" => FromTo.new(from_factor: 9.86923, to_factor: 0.101325), "psi" => FromTo.new(from_factor: 0.068046, to_factor: 14.6959), "inHg" => FromTo.new(from_factor: 0.0334211, to_factor: 29.9213), "torr" => FromTo.new(from_factor: 0.00131579, to_factor: 760.0)}
  puts(pressure_conversion(4.0, "atm", "pascal"))
  puts(pressure_conversion(1.0, "pascal", "psi"))
  puts(pressure_conversion(1.0, "bar", "atm"))
  puts(pressure_conversion(3.0, "kilopascal", "bar"))
  puts(pressure_conversion(2.0, "megapascal", "psi"))
  puts(pressure_conversion(4.0, "psi", "torr"))
  puts(pressure_conversion(1.0, "inHg", "atm"))
  puts(pressure_conversion(1.0, "torr", "psi"))
end_time = _now()
end_mem = _mem()
result = {"duration_us" => ((end_time - start) / 1000), "memory_bytes" => (end_mem - start_mem), "name" => "main"}
puts(JSON.pretty_generate(result))
