# Generated by Mochi transpiler v0.10.59 on 2025-08-06 20:30 +0700
require 'json'

$now_seed = 0
$now_seeded = false
s = ENV['MOCHI_NOW_SEED']
if (!s || s == '') && ENV['MOCHI_BENCHMARK']
  s = '1'
end
if s && s != ''
  begin
    $now_seed = Integer(s)
    $now_seeded = true
  rescue StandardError
  end
end
def _now()
  if $now_seeded
    $now_seed += 1_000_000
    $now_seed
  else
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)
  end
end


require 'objspace'
def _mem()
  ObjectSpace.memsize_of_all
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end


class String
  alias each each_char
end

start_mem = _mem()
start = _now()
  def decimal_to_hexadecimal(decimal)
    num = decimal
    negative = false
    if num < 0
      negative = true
      num = -num
    end
    if num == 0
      if negative
        return "-0x0"
      end
      return "0x0"
    end
    hex = ""
    while num > 0
      remainder = num % 16
      hex = _add($values[remainder], hex)
      num = num / 16
    end
    if negative
      return _add("-0x", hex)
    end
    return _add("0x", hex)
  end
  $values = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f"]
  puts(decimal_to_hexadecimal(5))
  puts(decimal_to_hexadecimal(15))
  puts(decimal_to_hexadecimal(37))
  puts(decimal_to_hexadecimal(255))
  puts(decimal_to_hexadecimal(4096))
  puts(decimal_to_hexadecimal(999098))
  puts(decimal_to_hexadecimal(-256))
  puts(decimal_to_hexadecimal(0))
end_time = _now()
end_mem = _mem()
result = {"duration_us" => ((end_time - start) / 1000), "memory_bytes" => (end_mem - start_mem), "name" => "main"}
puts(JSON.pretty_generate(result))
