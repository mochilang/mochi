compile: exit status 1
/workspace/mochi/tests/algorithms/transpiler/CPP/divide_and_conquer/strassen_matrix_multiplication.cpp:86:215: warning: multi-character character constant [-Wmultichar]
   86 |     else if(val.type() == typeid(std::map<std::string, std::any>)) { const auto& m = std::any_cast<const std::map<std::string, std::any>&>(val); os << '{'; bool first=true; for(const auto& p : m){ if(!first) os << ', '; first=false; os << p.first << ': '; any_to_stream(os, p.second); } os << '}'; }
      |                                                                                                                                                                                                                       ^~~~
/workspace/mochi/tests/algorithms/transpiler/CPP/divide_and_conquer/strassen_matrix_multiplication.cpp:86:251: warning: multi-character character constant [-Wmultichar]
   86 |     else if(val.type() == typeid(std::map<std::string, std::any>)) { const auto& m = std::any_cast<const std::map<std::string, std::any>&>(val); os << '{'; bool first=true; for(const auto& p : m){ if(!first) os << ', '; first=false; os << p.first << ': '; any_to_stream(os, p.second); } os << '}'; }
      |                                                                                                                                                                                                                                                           ^~~~
/workspace/mochi/tests/algorithms/transpiler/CPP/divide_and_conquer/strassen_matrix_multiplication.cpp: In function ‘std::vector<long int> matrix_dimensions(const std::vector<std::vector<long int> >&)’:
/workspace/mochi/tests/algorithms/transpiler/CPP/divide_and_conquer/strassen_matrix_multiplication.cpp:203:40: warning: narrowing conversion of ‘(& matrix)->std::vector<std::vector<long int> >::size()’ from ‘std::vector<std::vector<long int> >::size_type’ {aka ‘long unsigned int’} to ‘int’ [-Wnarrowing]
  203 |     return std::vector<int>{matrix.size(), matrix[int64_t(0)].size()};
      |                             ~~~~~~~~~~~^~
/workspace/mochi/tests/algorithms/transpiler/CPP/divide_and_conquer/strassen_matrix_multiplication.cpp:203:40: warning: narrowing conversion of ‘(& matrix)->std::vector<std::vector<long int> >::size()’ from ‘std::vector<std::vector<long int> >::size_type’ {aka ‘long unsigned int’} to ‘int’ [-Wnarrowing]
/workspace/mochi/tests/algorithms/transpiler/CPP/divide_and_conquer/strassen_matrix_multiplication.cpp:203:67: warning: narrowing conversion of ‘(&(& matrix)->std::vector<std::vector<long int> >::operator[](0))->std::vector<long int>::size()’ from ‘std::vector<long int>::size_type’ {aka ‘long unsigned int’} to ‘int’ [-Wnarrowing]
  203 |     return std::vector<int>{matrix.size(), matrix[int64_t(0)].size()};
      |                                            ~~~~~~~~~~~~~~~~~~~~~~~^~
/workspace/mochi/tests/algorithms/transpiler/CPP/divide_and_conquer/strassen_matrix_multiplication.cpp:203:67: warning: narrowing conversion of ‘(&(& matrix)->std::vector<std::vector<long int> >::operator[](0))->std::vector<long int>::size()’ from ‘std::vector<long int>::size_type’ {aka ‘long unsigned int’} to ‘int’ [-Wnarrowing]
/workspace/mochi/tests/algorithms/transpiler/CPP/divide_and_conquer/strassen_matrix_multiplication.cpp:203:17: error: could not convert ‘std::vector<int>(std::initializer_list<int>{((const int*)(& const int [2]{((int)(& matrix)->std::vector<std::vector<long int> >::size()), ((int)(&(& matrix)->std::vector<std::vector<long int> >::operator[](0))->std::vector<long int>::size())})), 2}, std::allocator<int>())’ from ‘vector<int>’ to ‘vector<long int>’
  203 |     return std::vector<int>{matrix.size(), matrix[int64_t(0)].size()};
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                 |
      |                 vector<int>
