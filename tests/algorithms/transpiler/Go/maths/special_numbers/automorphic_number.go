//go:build ignore

// Generated by Mochi v0.10.66 on 2025-08-16 13:07:14 GMT+7
package main

import (
	"encoding/json"
	"fmt"
	"os"
	"runtime"
	"strconv"
	"time"
)

var seededNow bool
var nowSeed int64

func init() {
	if s := os.Getenv("MOCHI_NOW_SEED"); s != "" {
		if v, err := strconv.ParseInt(s, 10, 64); err == nil {
			nowSeed = v
			seededNow = true
		}
	}
}
func _now() int {
	if seededNow {
		nowSeed = (nowSeed*1664525 + 1013904223) % 2147483647
		return int(nowSeed)
	}
	return int(time.Now().UnixNano())
}

func _modi(a, b int) int {
	if b == 0 {
		return 0
	}
	r := a % b
	if (r < 0 && b > 0) || (r > 0 && b < 0) {
		r += b
	}
	return r
}

func is_automorphic_number(number int) bool {
	if number < 0 {
		return false
	}
	var n int = number
	_ = n
	var sq int = (number * number)
	_ = sq
	for n > 0 {
		if _modi(n, 10) != _modi(sq, 10) {
			return false
		}
		n = (n / 10)
		sq = (sq / 10)
	}
	return true
}

func main() {
	func() {
		var ms runtime.MemStats
		runtime.ReadMemStats(&ms)
		startMem := ms.Alloc
		benchStart := time.Now().UnixNano()
		fmt.Println(fmt.Sprint(is_automorphic_number(0)))
		fmt.Println(fmt.Sprint(is_automorphic_number(1)))
		fmt.Println(fmt.Sprint(is_automorphic_number(5)))
		fmt.Println(fmt.Sprint(is_automorphic_number(6)))
		fmt.Println(fmt.Sprint(is_automorphic_number(7)))
		fmt.Println(fmt.Sprint(is_automorphic_number(25)))
		fmt.Println(fmt.Sprint(is_automorphic_number(376)))
		runtime.ReadMemStats(&ms)
		endMem := ms.Alloc
		benchEnd := time.Now().UnixNano()
		data := map[string]any{"name": "main", "duration_us": (benchEnd - benchStart) / 1000, "memory_bytes": endMem - startMem}
		out, _ := json.MarshalIndent(data, "", "  ")
		fmt.Println(string(out))
	}()
}
