//go:build ignore

// Generated by Mochi v0.10.66 on 2025-08-16 12:27:30 GMT+7
package main

import (
	"encoding/json"
	"fmt"
	"os"
	"runtime"
	"strconv"
	"time"
)

var seededNow bool
var nowSeed int64

func init() {
	if s := os.Getenv("MOCHI_NOW_SEED"); s != "" {
		if v, err := strconv.ParseInt(s, 10, 64); err == nil {
			nowSeed = v
			seededNow = true
		}
	}
}
func _now() int {
	if seededNow {
		nowSeed = (nowSeed*1664525 + 1013904223) % 2147483647
		return int(nowSeed)
	}
	return int(time.Now().UnixNano())
}

func recursive_lucas_number(n int) int {
	if n == 0 {
		return 2
	}
	if n == 1 {
		return 1
	}
	return (recursive_lucas_number((n - 1)) + recursive_lucas_number((n - 2)))
}

func dynamic_lucas_number(n int) int {
	var a int = 2
	_ = a
	var b int = 1
	_ = b
	var i int = 0
	_ = i
	for i < n {
		var next int = (a + b)
		_ = next
		a = b
		b = next
		i = (i + 1)
	}
	return a
}

func main() {
	func() {
		var ms runtime.MemStats
		runtime.ReadMemStats(&ms)
		startMem := ms.Alloc
		benchStart := time.Now().UnixNano()
		fmt.Println(fmt.Sprint(recursive_lucas_number(1)))
		fmt.Println(fmt.Sprint(recursive_lucas_number(20)))
		fmt.Println(fmt.Sprint(recursive_lucas_number(0)))
		fmt.Println(fmt.Sprint(recursive_lucas_number(5)))
		fmt.Println(fmt.Sprint(dynamic_lucas_number(1)))
		fmt.Println(fmt.Sprint(dynamic_lucas_number(20)))
		fmt.Println(fmt.Sprint(dynamic_lucas_number(0)))
		fmt.Println(fmt.Sprint(dynamic_lucas_number(25)))
		runtime.ReadMemStats(&ms)
		endMem := ms.Alloc
		benchEnd := time.Now().UnixNano()
		data := map[string]any{"name": "main", "duration_us": (benchEnd - benchStart) / 1000, "memory_bytes": endMem - startMem}
		out, _ := json.MarshalIndent(data, "", "  ")
		fmt.Println(string(out))
	}()
}
