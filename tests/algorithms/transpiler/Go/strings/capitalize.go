//go:build ignore

// Generated by Mochi v0.10.63 on 2025-08-11 17:37:58 GMT+7
package main

import (
	"encoding/json"
	"fmt"
	"os"
	"runtime"
	"strconv"
	"time"
)

var seededNow bool
var nowSeed int64

func init() {
	if s := os.Getenv("MOCHI_NOW_SEED"); s != "" {
		if v, err := strconv.ParseInt(s, 10, 64); err == nil {
			nowSeed = v
			seededNow = true
		}
	}
}
func _now() int {
	if seededNow {
		nowSeed = (nowSeed*1664525 + 1013904223) % 2147483647
		return int(nowSeed)
	}
	return int(time.Now().UnixNano())
}

func _substr(s string, start, end int) string {
	r := []rune(s)
	if start < 0 {
		start = 0
	}
	if end > len(r) {
		end = len(r)
	}
	if start > len(r) {
		start = len(r)
	}
	if end < start {
		end = start
	}
	return string(r[start:end])
}

var lowercase string

var uppercase string

func index_of(s string, c string) int {
	var i int = 0
	_ = i
	for i < len(s) {
		if _substr(s, i, (i+1)) == c {
			return i
		}
		i = (i + 1)
	}
	return (0 - 1)
}

func capitalize(sentence string) string {
	if len(sentence) == 0 {
		return ""
	}
	var first string = _substr(sentence, 0, 1)
	_ = first
	var idx int = index_of(lowercase, first)
	_ = idx
	_ = idx
	var capital string = func() string {
		if idx >= 0 {
			return _substr(uppercase, idx, (idx + 1))
		} else {
			return first
		}
	}()
	_ = capital
	_ = capital
	return (capital + _substr(sentence, 1, len(sentence)))
}

func main() {
	func() {
		var ms runtime.MemStats
		runtime.ReadMemStats(&ms)
		startMem := ms.Alloc
		benchStart := time.Now().UnixNano()
		lowercase = "abcdefghijklmnopqrstuvwxyz"
		uppercase = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
		fmt.Println(capitalize("hello world"))
		fmt.Println(capitalize("123 hello world"))
		fmt.Println(capitalize(" hello world"))
		fmt.Println(capitalize("a"))
		fmt.Println(capitalize(""))
		runtime.ReadMemStats(&ms)
		endMem := ms.Alloc
		benchEnd := time.Now().UnixNano()
		data := map[string]any{"name": "main", "duration_us": (benchEnd - benchStart) / 1000, "memory_bytes": endMem - startMem}
		out, _ := json.MarshalIndent(data, "", "  ")
		fmt.Println(string(out))
	}()
}
