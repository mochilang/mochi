//go:build ignore

// Generated by Mochi v0.10.69 on 2025-08-19 16:49:48 GMT+7
package main

import (
	"encoding/json"
	"fmt"
	"os"
	"runtime"
	"strconv"
	"time"
)

var nowSeed int64 = 1

func init() {
	if s := os.Getenv("MOCHI_NOW_SEED"); s != "" {
		if v, err := strconv.ParseInt(s, 10, 64); err == nil {
			nowSeed = v
		}
	}
}
func _now() int {
	nowSeed = (nowSeed*1664525 + 1013904223) % 2147483647
	return int(nowSeed)
}

func newtons_second_law_of_motion(mass float64, acceleration float64) float64 {
	if (mass < 0.0) || (acceleration < 0.0) {
		return 0.0
	}
	return (mass * acceleration)
}

var mass float64

var acceleration float64

var force float64

func main() {
	func() {
		var ms runtime.MemStats
		runtime.ReadMemStats(&ms)
		startMem := ms.Alloc
		benchStart := time.Now().UnixNano()
		mass = 12.5
		acceleration = 10.0
		force = newtons_second_law_of_motion(mass, acceleration)
		fmt.Println((("The force is " + fmt.Sprint(force)) + " N"))
		runtime.ReadMemStats(&ms)
		endMem := ms.Alloc
		benchEnd := time.Now().UnixNano()
		data := map[string]any{"name": "main", "duration_us": (benchEnd - benchStart) / 1000, "memory_bytes": endMem - startMem}
		out, _ := json.MarshalIndent(data, "", "  ")
		fmt.Println(string(out))
	}()
}
