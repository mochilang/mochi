exit status 1
/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:79:16: error: the compiler is unable to type-check this expression in reasonable time; try breaking up the expression into distinct sub-expressions
 77 |     let _benchStart = _now()
 78 |     func default_matrix_multiplication(_ a: [[Int]], _ b: [[Int]]) -> [[Int]] {
 79 |         return ([([(((a[0][0] as? Int ?? 0) &* (b[0][0] as? Int ?? 0)) &+ ((a[0][1] as? Int ?? 0) &* (b[1][0] as? Int ?? 0))), (((a[0][0] as? Int ?? 0) &* (b[0][1] as? Int ?? 0)) &+ ((a[0][1] as? Int ?? 0) &* (b[1][1] as? Int ?? 0)))] as! [Int]), ([(((a[1][0] as? Int ?? 0) &* (b[0][0] as? Int ?? 0)) &+ ((a[1][1] as? Int ?? 0) &* (b[1][0] as? Int ?? 0))), (((a[1][0] as? Int ?? 0) &* (b[0][1] as? Int ?? 0)) &+ ((a[1][1] as? Int ?? 0) &* (b[1][1] as? Int ?? 0)))] as! [Int])] as! [[Int]])
    |                `- error: the compiler is unable to type-check this expression in reasonable time; try breaking up the expression into distinct sub-expressions
 80 |     }
 81 |     func matrix_addition(_ matrix_a: [[Int]], _ matrix_b: [[Int]]) -> [[Int]] {

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:87:44: warning: forced cast of '[Int]' to same type has no effect
 85 |             var row: [Int] = ([] as! [Int])
 86 |             var j: Int = 0
 87 |             while (j < _int((((matrix_a[i] as! [Int])).count))) {
    |                                            `- warning: forced cast of '[Int]' to same type has no effect
 88 |                 row = (_append(row, ((matrix_a[i][j] as? Int ?? 0) &+ (matrix_b[i][j] as? Int ?? 0))) as! [Int])
 89 |                 j = _int((j &+ 1))

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:88:54: warning: conditional cast from 'Int' to 'Int' always succeeds
 86 |             var j: Int = 0
 87 |             while (j < _int((((matrix_a[i] as! [Int])).count))) {
 88 |                 row = (_append(row, ((matrix_a[i][j] as? Int ?? 0) &+ (matrix_b[i][j] as? Int ?? 0))) as! [Int])
    |                                                      `- warning: conditional cast from 'Int' to 'Int' always succeeds
 89 |                 j = _int((j &+ 1))
 90 |             }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:88:87: warning: conditional cast from 'Int' to 'Int' always succeeds
 86 |             var j: Int = 0
 87 |             while (j < _int((((matrix_a[i] as! [Int])).count))) {
 88 |                 row = (_append(row, ((matrix_a[i][j] as? Int ?? 0) &+ (matrix_b[i][j] as? Int ?? 0))) as! [Int])
    |                                                                                       `- warning: conditional cast from 'Int' to 'Int' always succeeds
 89 |                 j = _int((j &+ 1))
 90 |             }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:102:44: warning: forced cast of '[Int]' to same type has no effect
100 |             var row: [Int] = ([] as! [Int])
101 |             var j: Int = 0
102 |             while (j < _int((((matrix_a[i] as! [Int])).count))) {
    |                                            `- warning: forced cast of '[Int]' to same type has no effect
103 |                 row = (_append(row, ((matrix_a[i][j] as? Int ?? 0) &- (matrix_b[i][j] as? Int ?? 0))) as! [Int])
104 |                 j = _int((j &+ 1))

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:103:54: warning: conditional cast from 'Int' to 'Int' always succeeds
101 |             var j: Int = 0
102 |             while (j < _int((((matrix_a[i] as! [Int])).count))) {
103 |                 row = (_append(row, ((matrix_a[i][j] as? Int ?? 0) &- (matrix_b[i][j] as? Int ?? 0))) as! [Int])
    |                                                      `- warning: conditional cast from 'Int' to 'Int' always succeeds
104 |                 j = _int((j &+ 1))
105 |             }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:103:87: warning: conditional cast from 'Int' to 'Int' always succeeds
101 |             var j: Int = 0
102 |             while (j < _int((((matrix_a[i] as! [Int])).count))) {
103 |                 row = (_append(row, ((matrix_a[i][j] as? Int ?? 0) &- (matrix_b[i][j] as? Int ?? 0))) as! [Int])
    |                                                                                       `- warning: conditional cast from 'Int' to 'Int' always succeeds
104 |                 j = _int((j &+ 1))
105 |             }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:124:56: warning: conditional cast from 'Int' to 'Int' always succeeds
122 |             var j: Int = 0
123 |             while (j < mid) {
124 |                 left_row = (_append(left_row, (a[i][j] as? Int ?? 0)) as! [Int])
    |                                                        `- warning: conditional cast from 'Int' to 'Int' always succeeds
125 |                 right_row = (_append(right_row, (a[i][(j &+ mid)] as? Int ?? 0)) as! [Int])
126 |                 j = _int((j &+ 1))

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:125:67: warning: conditional cast from 'Int' to 'Int' always succeeds
123 |             while (j < mid) {
124 |                 left_row = (_append(left_row, (a[i][j] as? Int ?? 0)) as! [Int])
125 |                 right_row = (_append(right_row, (a[i][(j &+ mid)] as? Int ?? 0)) as! [Int])
    |                                                                   `- warning: conditional cast from 'Int' to 'Int' always succeeds
126 |                 j = _int((j &+ 1))
127 |             }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:138:56: warning: conditional cast from 'Int' to 'Int' always succeeds
136 |             var j: Int = 0
137 |             while (j < mid) {
138 |                 left_row = (_append(left_row, (a[i][j] as? Int ?? 0)) as! [Int])
    |                                                        `- warning: conditional cast from 'Int' to 'Int' always succeeds
139 |                 right_row = (_append(right_row, (a[i][(j &+ mid)] as? Int ?? 0)) as! [Int])
140 |                 j = _int((j &+ 1))

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:139:67: warning: conditional cast from 'Int' to 'Int' always succeeds
137 |             while (j < mid) {
138 |                 left_row = (_append(left_row, (a[i][j] as? Int ?? 0)) as! [Int])
139 |                 right_row = (_append(right_row, (a[i][(j &+ mid)] as? Int ?? 0)) as! [Int])
    |                                                                   `- warning: conditional cast from 'Int' to 'Int' always succeeds
140 |                 j = _int((j &+ 1))
141 |             }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:149:60: warning: forced cast of '[Int]' to same type has no effect
147 |     }
148 |     func matrix_dimensions(_ matrix: [[Int]]) -> [Int] {
149 |         return ([_int(((matrix).count)), _int((((matrix[0] as! [Int])).count))] as! [Int])
    |                                                            `- warning: forced cast of '[Int]' to same type has no effect
150 |     }
151 |     func next_power_of_two(_ n: Int) -> Int {

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:166:70: warning: forced cast of '[Int]' to same type has no effect
164 |             while (j < cols) {
165 |                 var v: Int = 0
166 |                 if ((i < _int(((mat).count))) && (j < _int((((mat[0] as! [Int])).count)))) {
    |                                                                      `- warning: forced cast of '[Int]' to same type has no effect
167 |                     v = (mat[i][j] as? Int ?? 0)
168 |                 }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:167:36: warning: conditional cast from 'Int' to 'Int' always succeeds
165 |                 var v: Int = 0
166 |                 if ((i < _int(((mat).count))) && (j < _int((((mat[0] as! [Int])).count)))) {
167 |                     v = (mat[i][j] as? Int ?? 0)
    |                                    `- warning: conditional cast from 'Int' to 'Int' always succeeds
168 |                 }
169 |                 row = (_append(row, v) as! [Int])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:178:43: warning: forced cast of '[[Int]]' to same type has no effect
176 |     }
177 |     func actual_strassen(_ matrix_a: [[Int]], _ matrix_b: [[Int]]) -> [[Int]] {
178 |         if (((matrix_dimensions((matrix_a as! [[Int]])) as! [Any])[0] as? Int ?? 0) == 2) {
    |                                           `- warning: forced cast of '[[Int]]' to same type has no effect
179 |             return (default_matrix_multiplication((matrix_a as! [[Int]]), (matrix_b as! [[Int]])) as! [[Int]])
180 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:178:57: warning: forced cast from '[Int]' to '[Any]' always succeeds; did you mean to use 'as'?
176 |     }
177 |     func actual_strassen(_ matrix_a: [[Int]], _ matrix_b: [[Int]]) -> [[Int]] {
178 |         if (((matrix_dimensions((matrix_a as! [[Int]])) as! [Any])[0] as? Int ?? 0) == 2) {
    |                                                         `- warning: forced cast from '[Int]' to '[Any]' always succeeds; did you mean to use 'as'?
179 |             return (default_matrix_multiplication((matrix_a as! [[Int]]), (matrix_b as! [[Int]])) as! [[Int]])
180 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:179:61: warning: forced cast of '[[Int]]' to same type has no effect
177 |     func actual_strassen(_ matrix_a: [[Int]], _ matrix_b: [[Int]]) -> [[Int]] {
178 |         if (((matrix_dimensions((matrix_a as! [[Int]])) as! [Any])[0] as? Int ?? 0) == 2) {
179 |             return (default_matrix_multiplication((matrix_a as! [[Int]]), (matrix_b as! [[Int]])) as! [[Int]])
    |                                                             `- warning: forced cast of '[[Int]]' to same type has no effect
180 |         }
181 |         let parts_a: [[[Int]]] = (split_matrix((matrix_a as! [[Int]])) as! [[[Int]]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:179:85: warning: forced cast of '[[Int]]' to same type has no effect
177 |     func actual_strassen(_ matrix_a: [[Int]], _ matrix_b: [[Int]]) -> [[Int]] {
178 |         if (((matrix_dimensions((matrix_a as! [[Int]])) as! [Any])[0] as? Int ?? 0) == 2) {
179 |             return (default_matrix_multiplication((matrix_a as! [[Int]]), (matrix_b as! [[Int]])) as! [[Int]])
    |                                                                                     `- warning: forced cast of '[[Int]]' to same type has no effect
180 |         }
181 |         let parts_a: [[[Int]]] = (split_matrix((matrix_a as! [[Int]])) as! [[[Int]]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:179:99: warning: forced cast of '[[Int]]' to same type has no effect
177 |     func actual_strassen(_ matrix_a: [[Int]], _ matrix_b: [[Int]]) -> [[Int]] {
178 |         if (((matrix_dimensions((matrix_a as! [[Int]])) as! [Any])[0] as? Int ?? 0) == 2) {
179 |             return (default_matrix_multiplication((matrix_a as! [[Int]]), (matrix_b as! [[Int]])) as! [[Int]])
    |                                                                                                   `- warning: forced cast of '[[Int]]' to same type has no effect
180 |         }
181 |         let parts_a: [[[Int]]] = (split_matrix((matrix_a as! [[Int]])) as! [[[Int]]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:181:58: warning: forced cast of '[[Int]]' to same type has no effect
179 |             return (default_matrix_multiplication((matrix_a as! [[Int]]), (matrix_b as! [[Int]])) as! [[Int]])
180 |         }
181 |         let parts_a: [[[Int]]] = (split_matrix((matrix_a as! [[Int]])) as! [[[Int]]])
    |                                                          `- warning: forced cast of '[[Int]]' to same type has no effect
182 |         let a: [[Int]] = (parts_a[0] as! [[Int]])
183 |         let b: [[Int]] = (parts_a[1] as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:181:72: warning: forced cast of '[[[Int]]]' to same type has no effect
179 |             return (default_matrix_multiplication((matrix_a as! [[Int]]), (matrix_b as! [[Int]])) as! [[Int]])
180 |         }
181 |         let parts_a: [[[Int]]] = (split_matrix((matrix_a as! [[Int]])) as! [[[Int]]])
    |                                                                        `- warning: forced cast of '[[[Int]]]' to same type has no effect
182 |         let a: [[Int]] = (parts_a[0] as! [[Int]])
183 |         let b: [[Int]] = (parts_a[1] as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:182:38: warning: forced cast of '[[Int]]' to same type has no effect
180 |         }
181 |         let parts_a: [[[Int]]] = (split_matrix((matrix_a as! [[Int]])) as! [[[Int]]])
182 |         let a: [[Int]] = (parts_a[0] as! [[Int]])
    |                                      `- warning: forced cast of '[[Int]]' to same type has no effect
183 |         let b: [[Int]] = (parts_a[1] as! [[Int]])
184 |         let c: [[Int]] = (parts_a[2] as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:183:38: warning: forced cast of '[[Int]]' to same type has no effect
181 |         let parts_a: [[[Int]]] = (split_matrix((matrix_a as! [[Int]])) as! [[[Int]]])
182 |         let a: [[Int]] = (parts_a[0] as! [[Int]])
183 |         let b: [[Int]] = (parts_a[1] as! [[Int]])
    |                                      `- warning: forced cast of '[[Int]]' to same type has no effect
184 |         let c: [[Int]] = (parts_a[2] as! [[Int]])
185 |         let d: [[Int]] = (parts_a[3] as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:184:38: warning: forced cast of '[[Int]]' to same type has no effect
182 |         let a: [[Int]] = (parts_a[0] as! [[Int]])
183 |         let b: [[Int]] = (parts_a[1] as! [[Int]])
184 |         let c: [[Int]] = (parts_a[2] as! [[Int]])
    |                                      `- warning: forced cast of '[[Int]]' to same type has no effect
185 |         let d: [[Int]] = (parts_a[3] as! [[Int]])
186 |         let parts_b: [[[Int]]] = (split_matrix((matrix_b as! [[Int]])) as! [[[Int]]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:185:38: warning: forced cast of '[[Int]]' to same type has no effect
183 |         let b: [[Int]] = (parts_a[1] as! [[Int]])
184 |         let c: [[Int]] = (parts_a[2] as! [[Int]])
185 |         let d: [[Int]] = (parts_a[3] as! [[Int]])
    |                                      `- warning: forced cast of '[[Int]]' to same type has no effect
186 |         let parts_b: [[[Int]]] = (split_matrix((matrix_b as! [[Int]])) as! [[[Int]]])
187 |         let e: [[Int]] = (parts_b[0] as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:186:58: warning: forced cast of '[[Int]]' to same type has no effect
184 |         let c: [[Int]] = (parts_a[2] as! [[Int]])
185 |         let d: [[Int]] = (parts_a[3] as! [[Int]])
186 |         let parts_b: [[[Int]]] = (split_matrix((matrix_b as! [[Int]])) as! [[[Int]]])
    |                                                          `- warning: forced cast of '[[Int]]' to same type has no effect
187 |         let e: [[Int]] = (parts_b[0] as! [[Int]])
188 |         let f: [[Int]] = (parts_b[1] as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:186:72: warning: forced cast of '[[[Int]]]' to same type has no effect
184 |         let c: [[Int]] = (parts_a[2] as! [[Int]])
185 |         let d: [[Int]] = (parts_a[3] as! [[Int]])
186 |         let parts_b: [[[Int]]] = (split_matrix((matrix_b as! [[Int]])) as! [[[Int]]])
    |                                                                        `- warning: forced cast of '[[[Int]]]' to same type has no effect
187 |         let e: [[Int]] = (parts_b[0] as! [[Int]])
188 |         let f: [[Int]] = (parts_b[1] as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:187:38: warning: forced cast of '[[Int]]' to same type has no effect
185 |         let d: [[Int]] = (parts_a[3] as! [[Int]])
186 |         let parts_b: [[[Int]]] = (split_matrix((matrix_b as! [[Int]])) as! [[[Int]]])
187 |         let e: [[Int]] = (parts_b[0] as! [[Int]])
    |                                      `- warning: forced cast of '[[Int]]' to same type has no effect
188 |         let f: [[Int]] = (parts_b[1] as! [[Int]])
189 |         let g: [[Int]] = (parts_b[2] as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:188:38: warning: forced cast of '[[Int]]' to same type has no effect
186 |         let parts_b: [[[Int]]] = (split_matrix((matrix_b as! [[Int]])) as! [[[Int]]])
187 |         let e: [[Int]] = (parts_b[0] as! [[Int]])
188 |         let f: [[Int]] = (parts_b[1] as! [[Int]])
    |                                      `- warning: forced cast of '[[Int]]' to same type has no effect
189 |         let g: [[Int]] = (parts_b[2] as! [[Int]])
190 |         let h: [[Int]] = (parts_b[3] as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:189:38: warning: forced cast of '[[Int]]' to same type has no effect
187 |         let e: [[Int]] = (parts_b[0] as! [[Int]])
188 |         let f: [[Int]] = (parts_b[1] as! [[Int]])
189 |         let g: [[Int]] = (parts_b[2] as! [[Int]])
    |                                      `- warning: forced cast of '[[Int]]' to same type has no effect
190 |         let h: [[Int]] = (parts_b[3] as! [[Int]])
191 |         let t1: [[Int]] = (actual_strassen((a as! [[Int]]), (matrix_subtraction((f as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:190:38: warning: forced cast of '[[Int]]' to same type has no effect
188 |         let f: [[Int]] = (parts_b[1] as! [[Int]])
189 |         let g: [[Int]] = (parts_b[2] as! [[Int]])
190 |         let h: [[Int]] = (parts_b[3] as! [[Int]])
    |                                      `- warning: forced cast of '[[Int]]' to same type has no effect
191 |         let t1: [[Int]] = (actual_strassen((a as! [[Int]]), (matrix_subtraction((f as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
192 |         let t2: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (b as! [[Int]])) as! [[Int]]), (h as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:191:47: warning: forced cast of '[[Int]]' to same type has no effect
189 |         let g: [[Int]] = (parts_b[2] as! [[Int]])
190 |         let h: [[Int]] = (parts_b[3] as! [[Int]])
191 |         let t1: [[Int]] = (actual_strassen((a as! [[Int]]), (matrix_subtraction((f as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                               `- warning: forced cast of '[[Int]]' to same type has no effect
192 |         let t2: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (b as! [[Int]])) as! [[Int]]), (h as! [[Int]])) as! [[Int]])
193 |         let t3: [[Int]] = (actual_strassen((matrix_addition((c as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (e as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:191:84: warning: forced cast of '[[Int]]' to same type has no effect
189 |         let g: [[Int]] = (parts_b[2] as! [[Int]])
190 |         let h: [[Int]] = (parts_b[3] as! [[Int]])
191 |         let t1: [[Int]] = (actual_strassen((a as! [[Int]]), (matrix_subtraction((f as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                                    `- warning: forced cast of '[[Int]]' to same type has no effect
192 |         let t2: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (b as! [[Int]])) as! [[Int]]), (h as! [[Int]])) as! [[Int]])
193 |         let t3: [[Int]] = (actual_strassen((matrix_addition((c as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (e as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:191:101: warning: forced cast of '[[Int]]' to same type has no effect
189 |         let g: [[Int]] = (parts_b[2] as! [[Int]])
190 |         let h: [[Int]] = (parts_b[3] as! [[Int]])
191 |         let t1: [[Int]] = (actual_strassen((a as! [[Int]]), (matrix_subtraction((f as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                                                     `- warning: forced cast of '[[Int]]' to same type has no effect
192 |         let t2: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (b as! [[Int]])) as! [[Int]]), (h as! [[Int]])) as! [[Int]])
193 |         let t3: [[Int]] = (actual_strassen((matrix_addition((c as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (e as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:191:115: warning: forced cast of '[[Int]]' to same type has no effect
189 |         let g: [[Int]] = (parts_b[2] as! [[Int]])
190 |         let h: [[Int]] = (parts_b[3] as! [[Int]])
191 |         let t1: [[Int]] = (actual_strassen((a as! [[Int]]), (matrix_subtraction((f as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                                                                   `- warning: forced cast of '[[Int]]' to same type has no effect
192 |         let t2: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (b as! [[Int]])) as! [[Int]]), (h as! [[Int]])) as! [[Int]])
193 |         let t3: [[Int]] = (actual_strassen((matrix_addition((c as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (e as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:191:129: warning: forced cast of '[[Int]]' to same type has no effect
189 |         let g: [[Int]] = (parts_b[2] as! [[Int]])
190 |         let h: [[Int]] = (parts_b[3] as! [[Int]])
191 |         let t1: [[Int]] = (actual_strassen((a as! [[Int]]), (matrix_subtraction((f as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                                                                                 `- warning: forced cast of '[[Int]]' to same type has no effect
192 |         let t2: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (b as! [[Int]])) as! [[Int]]), (h as! [[Int]])) as! [[Int]])
193 |         let t3: [[Int]] = (actual_strassen((matrix_addition((c as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (e as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:192:64: warning: forced cast of '[[Int]]' to same type has no effect
190 |         let h: [[Int]] = (parts_b[3] as! [[Int]])
191 |         let t1: [[Int]] = (actual_strassen((a as! [[Int]]), (matrix_subtraction((f as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
192 |         let t2: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (b as! [[Int]])) as! [[Int]]), (h as! [[Int]])) as! [[Int]])
    |                                                                `- warning: forced cast of '[[Int]]' to same type has no effect
193 |         let t3: [[Int]] = (actual_strassen((matrix_addition((c as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (e as! [[Int]])) as! [[Int]])
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:192:81: warning: forced cast of '[[Int]]' to same type has no effect
190 |         let h: [[Int]] = (parts_b[3] as! [[Int]])
191 |         let t1: [[Int]] = (actual_strassen((a as! [[Int]]), (matrix_subtraction((f as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
192 |         let t2: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (b as! [[Int]])) as! [[Int]]), (h as! [[Int]])) as! [[Int]])
    |                                                                                 `- warning: forced cast of '[[Int]]' to same type has no effect
193 |         let t3: [[Int]] = (actual_strassen((matrix_addition((c as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (e as! [[Int]])) as! [[Int]])
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:192:95: warning: forced cast of '[[Int]]' to same type has no effect
190 |         let h: [[Int]] = (parts_b[3] as! [[Int]])
191 |         let t1: [[Int]] = (actual_strassen((a as! [[Int]]), (matrix_subtraction((f as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
192 |         let t2: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (b as! [[Int]])) as! [[Int]]), (h as! [[Int]])) as! [[Int]])
    |                                                                                               `- warning: forced cast of '[[Int]]' to same type has no effect
193 |         let t3: [[Int]] = (actual_strassen((matrix_addition((c as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (e as! [[Int]])) as! [[Int]])
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:192:112: warning: forced cast of '[[Int]]' to same type has no effect
190 |         let h: [[Int]] = (parts_b[3] as! [[Int]])
191 |         let t1: [[Int]] = (actual_strassen((a as! [[Int]]), (matrix_subtraction((f as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
192 |         let t2: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (b as! [[Int]])) as! [[Int]]), (h as! [[Int]])) as! [[Int]])
    |                                                                                                                `- warning: forced cast of '[[Int]]' to same type has no effect
193 |         let t3: [[Int]] = (actual_strassen((matrix_addition((c as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (e as! [[Int]])) as! [[Int]])
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:192:126: warning: forced cast of '[[Int]]' to same type has no effect
190 |         let h: [[Int]] = (parts_b[3] as! [[Int]])
191 |         let t1: [[Int]] = (actual_strassen((a as! [[Int]]), (matrix_subtraction((f as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
192 |         let t2: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (b as! [[Int]])) as! [[Int]]), (h as! [[Int]])) as! [[Int]])
    |                                                                                                                              `- warning: forced cast of '[[Int]]' to same type has no effect
193 |         let t3: [[Int]] = (actual_strassen((matrix_addition((c as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (e as! [[Int]])) as! [[Int]])
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:193:64: warning: forced cast of '[[Int]]' to same type has no effect
191 |         let t1: [[Int]] = (actual_strassen((a as! [[Int]]), (matrix_subtraction((f as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
192 |         let t2: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (b as! [[Int]])) as! [[Int]]), (h as! [[Int]])) as! [[Int]])
193 |         let t3: [[Int]] = (actual_strassen((matrix_addition((c as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (e as! [[Int]])) as! [[Int]])
    |                                                                `- warning: forced cast of '[[Int]]' to same type has no effect
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:193:81: warning: forced cast of '[[Int]]' to same type has no effect
191 |         let t1: [[Int]] = (actual_strassen((a as! [[Int]]), (matrix_subtraction((f as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
192 |         let t2: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (b as! [[Int]])) as! [[Int]]), (h as! [[Int]])) as! [[Int]])
193 |         let t3: [[Int]] = (actual_strassen((matrix_addition((c as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (e as! [[Int]])) as! [[Int]])
    |                                                                                 `- warning: forced cast of '[[Int]]' to same type has no effect
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:193:95: warning: forced cast of '[[Int]]' to same type has no effect
191 |         let t1: [[Int]] = (actual_strassen((a as! [[Int]]), (matrix_subtraction((f as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
192 |         let t2: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (b as! [[Int]])) as! [[Int]]), (h as! [[Int]])) as! [[Int]])
193 |         let t3: [[Int]] = (actual_strassen((matrix_addition((c as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (e as! [[Int]])) as! [[Int]])
    |                                                                                               `- warning: forced cast of '[[Int]]' to same type has no effect
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:193:112: warning: forced cast of '[[Int]]' to same type has no effect
191 |         let t1: [[Int]] = (actual_strassen((a as! [[Int]]), (matrix_subtraction((f as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
192 |         let t2: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (b as! [[Int]])) as! [[Int]]), (h as! [[Int]])) as! [[Int]])
193 |         let t3: [[Int]] = (actual_strassen((matrix_addition((c as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (e as! [[Int]])) as! [[Int]])
    |                                                                                                                `- warning: forced cast of '[[Int]]' to same type has no effect
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:193:126: warning: forced cast of '[[Int]]' to same type has no effect
191 |         let t1: [[Int]] = (actual_strassen((a as! [[Int]]), (matrix_subtraction((f as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
192 |         let t2: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (b as! [[Int]])) as! [[Int]]), (h as! [[Int]])) as! [[Int]])
193 |         let t3: [[Int]] = (actual_strassen((matrix_addition((c as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (e as! [[Int]])) as! [[Int]])
    |                                                                                                                              `- warning: forced cast of '[[Int]]' to same type has no effect
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:194:47: warning: forced cast of '[[Int]]' to same type has no effect
192 |         let t2: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (b as! [[Int]])) as! [[Int]]), (h as! [[Int]])) as! [[Int]])
193 |         let t3: [[Int]] = (actual_strassen((matrix_addition((c as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (e as! [[Int]])) as! [[Int]])
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                               `- warning: forced cast of '[[Int]]' to same type has no effect
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:194:84: warning: forced cast of '[[Int]]' to same type has no effect
192 |         let t2: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (b as! [[Int]])) as! [[Int]]), (h as! [[Int]])) as! [[Int]])
193 |         let t3: [[Int]] = (actual_strassen((matrix_addition((c as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (e as! [[Int]])) as! [[Int]])
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                                    `- warning: forced cast of '[[Int]]' to same type has no effect
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:194:101: warning: forced cast of '[[Int]]' to same type has no effect
192 |         let t2: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (b as! [[Int]])) as! [[Int]]), (h as! [[Int]])) as! [[Int]])
193 |         let t3: [[Int]] = (actual_strassen((matrix_addition((c as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (e as! [[Int]])) as! [[Int]])
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                                                     `- warning: forced cast of '[[Int]]' to same type has no effect
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:194:115: warning: forced cast of '[[Int]]' to same type has no effect
192 |         let t2: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (b as! [[Int]])) as! [[Int]]), (h as! [[Int]])) as! [[Int]])
193 |         let t3: [[Int]] = (actual_strassen((matrix_addition((c as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (e as! [[Int]])) as! [[Int]])
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                                                                   `- warning: forced cast of '[[Int]]' to same type has no effect
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:194:129: warning: forced cast of '[[Int]]' to same type has no effect
192 |         let t2: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (b as! [[Int]])) as! [[Int]]), (h as! [[Int]])) as! [[Int]])
193 |         let t3: [[Int]] = (actual_strassen((matrix_addition((c as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (e as! [[Int]])) as! [[Int]])
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                                                                                 `- warning: forced cast of '[[Int]]' to same type has no effect
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:195:64: warning: forced cast of '[[Int]]' to same type has no effect
193 |         let t3: [[Int]] = (actual_strassen((matrix_addition((c as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (e as! [[Int]])) as! [[Int]])
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                `- warning: forced cast of '[[Int]]' to same type has no effect
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:195:81: warning: forced cast of '[[Int]]' to same type has no effect
193 |         let t3: [[Int]] = (actual_strassen((matrix_addition((c as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (e as! [[Int]])) as! [[Int]])
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                                 `- warning: forced cast of '[[Int]]' to same type has no effect
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:195:95: warning: forced cast of '[[Int]]' to same type has no effect
193 |         let t3: [[Int]] = (actual_strassen((matrix_addition((c as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (e as! [[Int]])) as! [[Int]])
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                                               `- warning: forced cast of '[[Int]]' to same type has no effect
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:195:129: warning: forced cast of '[[Int]]' to same type has no effect
193 |         let t3: [[Int]] = (actual_strassen((matrix_addition((c as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (e as! [[Int]])) as! [[Int]])
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                                                                                 `- warning: forced cast of '[[Int]]' to same type has no effect
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:195:146: warning: forced cast of '[[Int]]' to same type has no effect
193 |         let t3: [[Int]] = (actual_strassen((matrix_addition((c as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (e as! [[Int]])) as! [[Int]])
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                                                                                                  `- warning: forced cast of '[[Int]]' to same type has no effect
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:195:160: warning: forced cast of '[[Int]]' to same type has no effect
193 |         let t3: [[Int]] = (actual_strassen((matrix_addition((c as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (e as! [[Int]])) as! [[Int]])
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                                                                                                                `- warning: forced cast of '[[Int]]' to same type has no effect
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:195:174: warning: forced cast of '[[Int]]' to same type has no effect
193 |         let t3: [[Int]] = (actual_strassen((matrix_addition((c as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (e as! [[Int]])) as! [[Int]])
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                                                                                                                              `- warning: forced cast of '[[Int]]' to same type has no effect
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:196:67: warning: forced cast of '[[Int]]' to same type has no effect
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                   `- warning: forced cast of '[[Int]]' to same type has no effect
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])
198 |         let top_left: [[Int]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]]), (t2 as! [[Int]])) as! [[Int]]), (t6 as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:196:84: warning: forced cast of '[[Int]]' to same type has no effect
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                                    `- warning: forced cast of '[[Int]]' to same type has no effect
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])
198 |         let top_left: [[Int]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]]), (t2 as! [[Int]])) as! [[Int]]), (t6 as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:196:98: warning: forced cast of '[[Int]]' to same type has no effect
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                                                  `- warning: forced cast of '[[Int]]' to same type has no effect
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])
198 |         let top_left: [[Int]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]]), (t2 as! [[Int]])) as! [[Int]]), (t6 as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:196:132: warning: forced cast of '[[Int]]' to same type has no effect
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                                                                                    `- warning: forced cast of '[[Int]]' to same type has no effect
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])
198 |         let top_left: [[Int]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]]), (t2 as! [[Int]])) as! [[Int]]), (t6 as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:196:149: warning: forced cast of '[[Int]]' to same type has no effect
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                                                                                                     `- warning: forced cast of '[[Int]]' to same type has no effect
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])
198 |         let top_left: [[Int]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]]), (t2 as! [[Int]])) as! [[Int]]), (t6 as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:196:163: warning: forced cast of '[[Int]]' to same type has no effect
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                                                                                                                   `- warning: forced cast of '[[Int]]' to same type has no effect
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])
198 |         let top_left: [[Int]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]]), (t2 as! [[Int]])) as! [[Int]]), (t6 as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:196:177: warning: forced cast of '[[Int]]' to same type has no effect
194 |         let t4: [[Int]] = (actual_strassen((d as! [[Int]]), (matrix_subtraction((g as! [[Int]]), (e as! [[Int]])) as! [[Int]])) as! [[Int]])
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                                                                                                                                 `- warning: forced cast of '[[Int]]' to same type has no effect
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])
198 |         let top_left: [[Int]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]]), (t2 as! [[Int]])) as! [[Int]]), (t6 as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:197:67: warning: forced cast of '[[Int]]' to same type has no effect
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                   `- warning: forced cast of '[[Int]]' to same type has no effect
198 |         let top_left: [[Int]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]]), (t2 as! [[Int]])) as! [[Int]]), (t6 as! [[Int]])) as! [[Int]])
199 |         let top_right: [[Int]] = (matrix_addition((t1 as! [[Int]]), (t2 as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:197:84: warning: forced cast of '[[Int]]' to same type has no effect
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                                    `- warning: forced cast of '[[Int]]' to same type has no effect
198 |         let top_left: [[Int]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]]), (t2 as! [[Int]])) as! [[Int]]), (t6 as! [[Int]])) as! [[Int]])
199 |         let top_right: [[Int]] = (matrix_addition((t1 as! [[Int]]), (t2 as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:197:98: warning: forced cast of '[[Int]]' to same type has no effect
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                                                  `- warning: forced cast of '[[Int]]' to same type has no effect
198 |         let top_left: [[Int]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]]), (t2 as! [[Int]])) as! [[Int]]), (t6 as! [[Int]])) as! [[Int]])
199 |         let top_right: [[Int]] = (matrix_addition((t1 as! [[Int]]), (t2 as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:197:132: warning: forced cast of '[[Int]]' to same type has no effect
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                                                                                    `- warning: forced cast of '[[Int]]' to same type has no effect
198 |         let top_left: [[Int]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]]), (t2 as! [[Int]])) as! [[Int]]), (t6 as! [[Int]])) as! [[Int]])
199 |         let top_right: [[Int]] = (matrix_addition((t1 as! [[Int]]), (t2 as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:197:149: warning: forced cast of '[[Int]]' to same type has no effect
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                                                                                                     `- warning: forced cast of '[[Int]]' to same type has no effect
198 |         let top_left: [[Int]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]]), (t2 as! [[Int]])) as! [[Int]]), (t6 as! [[Int]])) as! [[Int]])
199 |         let top_right: [[Int]] = (matrix_addition((t1 as! [[Int]]), (t2 as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:197:163: warning: forced cast of '[[Int]]' to same type has no effect
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                                                                                                                   `- warning: forced cast of '[[Int]]' to same type has no effect
198 |         let top_left: [[Int]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]]), (t2 as! [[Int]])) as! [[Int]]), (t6 as! [[Int]])) as! [[Int]])
199 |         let top_right: [[Int]] = (matrix_addition((t1 as! [[Int]]), (t2 as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:197:177: warning: forced cast of '[[Int]]' to same type has no effect
195 |         let t5: [[Int]] = (actual_strassen((matrix_addition((a as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])
    |                                                                                                                                                                                 `- warning: forced cast of '[[Int]]' to same type has no effect
198 |         let top_left: [[Int]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]]), (t2 as! [[Int]])) as! [[Int]]), (t6 as! [[Int]])) as! [[Int]])
199 |         let top_right: [[Int]] = (matrix_addition((t1 as! [[Int]]), (t2 as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:198:91: warning: forced cast of '[[Int]]' to same type has no effect
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])
198 |         let top_left: [[Int]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]]), (t2 as! [[Int]])) as! [[Int]]), (t6 as! [[Int]])) as! [[Int]])
    |                                                                                           `- warning: forced cast of '[[Int]]' to same type has no effect
199 |         let top_right: [[Int]] = (matrix_addition((t1 as! [[Int]]), (t2 as! [[Int]])) as! [[Int]])
200 |         let bot_left: [[Int]] = (matrix_addition((t3 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:198:109: warning: forced cast of '[[Int]]' to same type has no effect
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])
198 |         let top_left: [[Int]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]]), (t2 as! [[Int]])) as! [[Int]]), (t6 as! [[Int]])) as! [[Int]])
    |                                                                                                             `- warning: forced cast of '[[Int]]' to same type has no effect
199 |         let top_right: [[Int]] = (matrix_addition((t1 as! [[Int]]), (t2 as! [[Int]])) as! [[Int]])
200 |         let bot_left: [[Int]] = (matrix_addition((t3 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:198:123: warning: forced cast of '[[Int]]' to same type has no effect
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])
198 |         let top_left: [[Int]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]]), (t2 as! [[Int]])) as! [[Int]]), (t6 as! [[Int]])) as! [[Int]])
    |                                                                                                                           `- warning: forced cast of '[[Int]]' to same type has no effect
199 |         let top_right: [[Int]] = (matrix_addition((t1 as! [[Int]]), (t2 as! [[Int]])) as! [[Int]])
200 |         let bot_left: [[Int]] = (matrix_addition((t3 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:198:141: warning: forced cast of '[[Int]]' to same type has no effect
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])
198 |         let top_left: [[Int]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]]), (t2 as! [[Int]])) as! [[Int]]), (t6 as! [[Int]])) as! [[Int]])
    |                                                                                                                                             `- warning: forced cast of '[[Int]]' to same type has no effect
199 |         let top_right: [[Int]] = (matrix_addition((t1 as! [[Int]]), (t2 as! [[Int]])) as! [[Int]])
200 |         let bot_left: [[Int]] = (matrix_addition((t3 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:198:155: warning: forced cast of '[[Int]]' to same type has no effect
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])
198 |         let top_left: [[Int]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]]), (t2 as! [[Int]])) as! [[Int]]), (t6 as! [[Int]])) as! [[Int]])
    |                                                                                                                                                           `- warning: forced cast of '[[Int]]' to same type has no effect
199 |         let top_right: [[Int]] = (matrix_addition((t1 as! [[Int]]), (t2 as! [[Int]])) as! [[Int]])
200 |         let bot_left: [[Int]] = (matrix_addition((t3 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:198:173: warning: forced cast of '[[Int]]' to same type has no effect
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])
198 |         let top_left: [[Int]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]]), (t2 as! [[Int]])) as! [[Int]]), (t6 as! [[Int]])) as! [[Int]])
    |                                                                                                                                                                             `- warning: forced cast of '[[Int]]' to same type has no effect
199 |         let top_right: [[Int]] = (matrix_addition((t1 as! [[Int]]), (t2 as! [[Int]])) as! [[Int]])
200 |         let bot_left: [[Int]] = (matrix_addition((t3 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:198:187: warning: forced cast of '[[Int]]' to same type has no effect
196 |         let t6: [[Int]] = (actual_strassen((matrix_subtraction((b as! [[Int]]), (d as! [[Int]])) as! [[Int]]), (matrix_addition((g as! [[Int]]), (h as! [[Int]])) as! [[Int]])) as! [[Int]])
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])
198 |         let top_left: [[Int]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]]), (t2 as! [[Int]])) as! [[Int]]), (t6 as! [[Int]])) as! [[Int]])
    |                                                                                                                                                                                           `- warning: forced cast of '[[Int]]' to same type has no effect
199 |         let top_right: [[Int]] = (matrix_addition((t1 as! [[Int]]), (t2 as! [[Int]])) as! [[Int]])
200 |         let bot_left: [[Int]] = (matrix_addition((t3 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:199:55: warning: forced cast of '[[Int]]' to same type has no effect
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])
198 |         let top_left: [[Int]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]]), (t2 as! [[Int]])) as! [[Int]]), (t6 as! [[Int]])) as! [[Int]])
199 |         let top_right: [[Int]] = (matrix_addition((t1 as! [[Int]]), (t2 as! [[Int]])) as! [[Int]])
    |                                                       `- warning: forced cast of '[[Int]]' to same type has no effect
200 |         let bot_left: [[Int]] = (matrix_addition((t3 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]])
201 |         let bot_right: [[Int]] = (matrix_subtraction((matrix_subtraction((matrix_addition((t1 as! [[Int]]), (t5 as! [[Int]])) as! [[Int]]), (t3 as! [[Int]])) as! [[Int]]), (t7 as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:199:73: warning: forced cast of '[[Int]]' to same type has no effect
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])
198 |         let top_left: [[Int]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]]), (t2 as! [[Int]])) as! [[Int]]), (t6 as! [[Int]])) as! [[Int]])
199 |         let top_right: [[Int]] = (matrix_addition((t1 as! [[Int]]), (t2 as! [[Int]])) as! [[Int]])
    |                                                                         `- warning: forced cast of '[[Int]]' to same type has no effect
200 |         let bot_left: [[Int]] = (matrix_addition((t3 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]])
201 |         let bot_right: [[Int]] = (matrix_subtraction((matrix_subtraction((matrix_addition((t1 as! [[Int]]), (t5 as! [[Int]])) as! [[Int]]), (t3 as! [[Int]])) as! [[Int]]), (t7 as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:199:87: warning: forced cast of '[[Int]]' to same type has no effect
197 |         let t7: [[Int]] = (actual_strassen((matrix_subtraction((a as! [[Int]]), (c as! [[Int]])) as! [[Int]]), (matrix_addition((e as! [[Int]]), (f as! [[Int]])) as! [[Int]])) as! [[Int]])
198 |         let top_left: [[Int]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]]), (t2 as! [[Int]])) as! [[Int]]), (t6 as! [[Int]])) as! [[Int]])
199 |         let top_right: [[Int]] = (matrix_addition((t1 as! [[Int]]), (t2 as! [[Int]])) as! [[Int]])
    |                                                                                       `- warning: forced cast of '[[Int]]' to same type has no effect
200 |         let bot_left: [[Int]] = (matrix_addition((t3 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]])
201 |         let bot_right: [[Int]] = (matrix_subtraction((matrix_subtraction((matrix_addition((t1 as! [[Int]]), (t5 as! [[Int]])) as! [[Int]]), (t3 as! [[Int]])) as! [[Int]]), (t7 as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:200:54: warning: forced cast of '[[Int]]' to same type has no effect
198 |         let top_left: [[Int]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]]), (t2 as! [[Int]])) as! [[Int]]), (t6 as! [[Int]])) as! [[Int]])
199 |         let top_right: [[Int]] = (matrix_addition((t1 as! [[Int]]), (t2 as! [[Int]])) as! [[Int]])
200 |         let bot_left: [[Int]] = (matrix_addition((t3 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]])
    |                                                      `- warning: forced cast of '[[Int]]' to same type has no effect
201 |         let bot_right: [[Int]] = (matrix_subtraction((matrix_subtraction((matrix_addition((t1 as! [[Int]]), (t5 as! [[Int]])) as! [[Int]]), (t3 as! [[Int]])) as! [[Int]]), (t7 as! [[Int]])) as! [[Int]])
202 |         var new_matrix: [[Int]] = ([] as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:200:72: warning: forced cast of '[[Int]]' to same type has no effect
198 |         let top_left: [[Int]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]]), (t2 as! [[Int]])) as! [[Int]]), (t6 as! [[Int]])) as! [[Int]])
199 |         let top_right: [[Int]] = (matrix_addition((t1 as! [[Int]]), (t2 as! [[Int]])) as! [[Int]])
200 |         let bot_left: [[Int]] = (matrix_addition((t3 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]])
    |                                                                        `- warning: forced cast of '[[Int]]' to same type has no effect
201 |         let bot_right: [[Int]] = (matrix_subtraction((matrix_subtraction((matrix_addition((t1 as! [[Int]]), (t5 as! [[Int]])) as! [[Int]]), (t3 as! [[Int]])) as! [[Int]]), (t7 as! [[Int]])) as! [[Int]])
202 |         var new_matrix: [[Int]] = ([] as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:200:86: warning: forced cast of '[[Int]]' to same type has no effect
198 |         let top_left: [[Int]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]]), (t2 as! [[Int]])) as! [[Int]]), (t6 as! [[Int]])) as! [[Int]])
199 |         let top_right: [[Int]] = (matrix_addition((t1 as! [[Int]]), (t2 as! [[Int]])) as! [[Int]])
200 |         let bot_left: [[Int]] = (matrix_addition((t3 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]])
    |                                                                                      `- warning: forced cast of '[[Int]]' to same type has no effect
201 |         let bot_right: [[Int]] = (matrix_subtraction((matrix_subtraction((matrix_addition((t1 as! [[Int]]), (t5 as! [[Int]])) as! [[Int]]), (t3 as! [[Int]])) as! [[Int]]), (t7 as! [[Int]])) as! [[Int]])
202 |         var new_matrix: [[Int]] = ([] as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:201:95: warning: forced cast of '[[Int]]' to same type has no effect
199 |         let top_right: [[Int]] = (matrix_addition((t1 as! [[Int]]), (t2 as! [[Int]])) as! [[Int]])
200 |         let bot_left: [[Int]] = (matrix_addition((t3 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]])
201 |         let bot_right: [[Int]] = (matrix_subtraction((matrix_subtraction((matrix_addition((t1 as! [[Int]]), (t5 as! [[Int]])) as! [[Int]]), (t3 as! [[Int]])) as! [[Int]]), (t7 as! [[Int]])) as! [[Int]])
    |                                                                                               `- warning: forced cast of '[[Int]]' to same type has no effect
202 |         var new_matrix: [[Int]] = ([] as! [[Int]])
203 |         var i: Int = 0

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:201:113: warning: forced cast of '[[Int]]' to same type has no effect
199 |         let top_right: [[Int]] = (matrix_addition((t1 as! [[Int]]), (t2 as! [[Int]])) as! [[Int]])
200 |         let bot_left: [[Int]] = (matrix_addition((t3 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]])
201 |         let bot_right: [[Int]] = (matrix_subtraction((matrix_subtraction((matrix_addition((t1 as! [[Int]]), (t5 as! [[Int]])) as! [[Int]]), (t3 as! [[Int]])) as! [[Int]]), (t7 as! [[Int]])) as! [[Int]])
    |                                                                                                                 `- warning: forced cast of '[[Int]]' to same type has no effect
202 |         var new_matrix: [[Int]] = ([] as! [[Int]])
203 |         var i: Int = 0

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:201:127: warning: forced cast of '[[Int]]' to same type has no effect
199 |         let top_right: [[Int]] = (matrix_addition((t1 as! [[Int]]), (t2 as! [[Int]])) as! [[Int]])
200 |         let bot_left: [[Int]] = (matrix_addition((t3 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]])
201 |         let bot_right: [[Int]] = (matrix_subtraction((matrix_subtraction((matrix_addition((t1 as! [[Int]]), (t5 as! [[Int]])) as! [[Int]]), (t3 as! [[Int]])) as! [[Int]]), (t7 as! [[Int]])) as! [[Int]])
    |                                                                                                                               `- warning: forced cast of '[[Int]]' to same type has no effect
202 |         var new_matrix: [[Int]] = ([] as! [[Int]])
203 |         var i: Int = 0

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:201:145: warning: forced cast of '[[Int]]' to same type has no effect
199 |         let top_right: [[Int]] = (matrix_addition((t1 as! [[Int]]), (t2 as! [[Int]])) as! [[Int]])
200 |         let bot_left: [[Int]] = (matrix_addition((t3 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]])
201 |         let bot_right: [[Int]] = (matrix_subtraction((matrix_subtraction((matrix_addition((t1 as! [[Int]]), (t5 as! [[Int]])) as! [[Int]]), (t3 as! [[Int]])) as! [[Int]]), (t7 as! [[Int]])) as! [[Int]])
    |                                                                                                                                                 `- warning: forced cast of '[[Int]]' to same type has no effect
202 |         var new_matrix: [[Int]] = ([] as! [[Int]])
203 |         var i: Int = 0

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:201:159: warning: forced cast of '[[Int]]' to same type has no effect
199 |         let top_right: [[Int]] = (matrix_addition((t1 as! [[Int]]), (t2 as! [[Int]])) as! [[Int]])
200 |         let bot_left: [[Int]] = (matrix_addition((t3 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]])
201 |         let bot_right: [[Int]] = (matrix_subtraction((matrix_subtraction((matrix_addition((t1 as! [[Int]]), (t5 as! [[Int]])) as! [[Int]]), (t3 as! [[Int]])) as! [[Int]]), (t7 as! [[Int]])) as! [[Int]])
    |                                                                                                                                                               `- warning: forced cast of '[[Int]]' to same type has no effect
202 |         var new_matrix: [[Int]] = ([] as! [[Int]])
203 |         var i: Int = 0

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:201:177: warning: forced cast of '[[Int]]' to same type has no effect
199 |         let top_right: [[Int]] = (matrix_addition((t1 as! [[Int]]), (t2 as! [[Int]])) as! [[Int]])
200 |         let bot_left: [[Int]] = (matrix_addition((t3 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]])
201 |         let bot_right: [[Int]] = (matrix_subtraction((matrix_subtraction((matrix_addition((t1 as! [[Int]]), (t5 as! [[Int]])) as! [[Int]]), (t3 as! [[Int]])) as! [[Int]]), (t7 as! [[Int]])) as! [[Int]])
    |                                                                                                                                                                                 `- warning: forced cast of '[[Int]]' to same type has no effect
202 |         var new_matrix: [[Int]] = ([] as! [[Int]])
203 |         var i: Int = 0

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:201:191: warning: forced cast of '[[Int]]' to same type has no effect
199 |         let top_right: [[Int]] = (matrix_addition((t1 as! [[Int]]), (t2 as! [[Int]])) as! [[Int]])
200 |         let bot_left: [[Int]] = (matrix_addition((t3 as! [[Int]]), (t4 as! [[Int]])) as! [[Int]])
201 |         let bot_right: [[Int]] = (matrix_subtraction((matrix_subtraction((matrix_addition((t1 as! [[Int]]), (t5 as! [[Int]])) as! [[Int]]), (t3 as! [[Int]])) as! [[Int]]), (t7 as! [[Int]])) as! [[Int]])
    |                                                                                                                                                                                               `- warning: forced cast of '[[Int]]' to same type has no effect
202 |         var new_matrix: [[Int]] = ([] as! [[Int]])
203 |         var i: Int = 0

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:205:70: warning: forced cast of '[Int]' to same type has no effect
203 |         var i: Int = 0
204 |         while (i < _int(((top_right).count))) {
205 |             new_matrix = ((_append(new_matrix, (_concat((top_left[i] as! [Int]), (top_right[i] as! [Int])) as! [Any?])) as! [Any?]) as! [[Int]])
    |                                                                      `- warning: forced cast of '[Int]' to same type has no effect
206 |             i = _int((i &+ 1))
207 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:205:96: warning: forced cast of '[Int]' to same type has no effect
203 |         var i: Int = 0
204 |         while (i < _int(((top_right).count))) {
205 |             new_matrix = ((_append(new_matrix, (_concat((top_left[i] as! [Int]), (top_right[i] as! [Int])) as! [Any?])) as! [Any?]) as! [[Int]])
    |                                                                                                `- warning: forced cast of '[Int]' to same type has no effect
206 |             i = _int((i &+ 1))
207 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:210:70: warning: forced cast of '[Int]' to same type has no effect
208 |         i = 0
209 |         while (i < _int(((bot_right).count))) {
210 |             new_matrix = ((_append(new_matrix, (_concat((bot_left[i] as! [Int]), (bot_right[i] as! [Int])) as! [Any?])) as! [Any?]) as! [[Int]])
    |                                                                      `- warning: forced cast of '[Int]' to same type has no effect
211 |             i = _int((i &+ 1))
212 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:210:96: warning: forced cast of '[Int]' to same type has no effect
208 |         i = 0
209 |         while (i < _int(((bot_right).count))) {
210 |             new_matrix = ((_append(new_matrix, (_concat((bot_left[i] as! [Int]), (bot_right[i] as! [Int])) as! [Any?])) as! [Any?]) as! [[Int]])
    |                                                                                                `- warning: forced cast of '[Int]' to same type has no effect
211 |             i = _int((i &+ 1))
212 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:216:56: warning: forced cast of '[[Int]]' to same type has no effect
214 |     }
215 |     func strassen(_ matrix1: [[Int]], _ matrix2: [[Int]]) -> [[Int]] {
216 |         let dims1: [Int] = (matrix_dimensions((matrix1 as! [[Int]])) as! [Int])
    |                                                        `- warning: forced cast of '[[Int]]' to same type has no effect
217 |         let dims2: [Int] = (matrix_dimensions((matrix2 as! [[Int]])) as! [Int])
218 |         if ((dims1[1] as? Int ?? 0) != (dims2[0] as? Int ?? 0)) {

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:216:70: warning: forced cast of '[Int]' to same type has no effect
214 |     }
215 |     func strassen(_ matrix1: [[Int]], _ matrix2: [[Int]]) -> [[Int]] {
216 |         let dims1: [Int] = (matrix_dimensions((matrix1 as! [[Int]])) as! [Int])
    |                                                                      `- warning: forced cast of '[Int]' to same type has no effect
217 |         let dims2: [Int] = (matrix_dimensions((matrix2 as! [[Int]])) as! [Int])
218 |         if ((dims1[1] as? Int ?? 0) != (dims2[0] as? Int ?? 0)) {

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:217:56: warning: forced cast of '[[Int]]' to same type has no effect
215 |     func strassen(_ matrix1: [[Int]], _ matrix2: [[Int]]) -> [[Int]] {
216 |         let dims1: [Int] = (matrix_dimensions((matrix1 as! [[Int]])) as! [Int])
217 |         let dims2: [Int] = (matrix_dimensions((matrix2 as! [[Int]])) as! [Int])
    |                                                        `- warning: forced cast of '[[Int]]' to same type has no effect
218 |         if ((dims1[1] as? Int ?? 0) != (dims2[0] as? Int ?? 0)) {
219 |             return ([] as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:217:70: warning: forced cast of '[Int]' to same type has no effect
215 |     func strassen(_ matrix1: [[Int]], _ matrix2: [[Int]]) -> [[Int]] {
216 |         let dims1: [Int] = (matrix_dimensions((matrix1 as! [[Int]])) as! [Int])
217 |         let dims2: [Int] = (matrix_dimensions((matrix2 as! [[Int]])) as! [Int])
    |                                                                      `- warning: forced cast of '[Int]' to same type has no effect
218 |         if ((dims1[1] as? Int ?? 0) != (dims2[0] as? Int ?? 0)) {
219 |             return ([] as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:218:23: warning: conditional cast from 'Int' to 'Int' always succeeds
216 |         let dims1: [Int] = (matrix_dimensions((matrix1 as! [[Int]])) as! [Int])
217 |         let dims2: [Int] = (matrix_dimensions((matrix2 as! [[Int]])) as! [Int])
218 |         if ((dims1[1] as? Int ?? 0) != (dims2[0] as? Int ?? 0)) {
    |                       `- warning: conditional cast from 'Int' to 'Int' always succeeds
219 |             return ([] as! [[Int]])
220 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:218:50: warning: conditional cast from 'Int' to 'Int' always succeeds
216 |         let dims1: [Int] = (matrix_dimensions((matrix1 as! [[Int]])) as! [Int])
217 |         let dims2: [Int] = (matrix_dimensions((matrix2 as! [[Int]])) as! [Int])
218 |         if ((dims1[1] as? Int ?? 0) != (dims2[0] as? Int ?? 0)) {
    |                                                  `- warning: conditional cast from 'Int' to 'Int' always succeeds
219 |             return ([] as! [[Int]])
220 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:221:41: warning: conditional cast from 'Int' to 'Int' always succeeds
219 |             return ([] as! [[Int]])
220 |         }
221 |         let maximum = _int((([(dims1[0] as? Int ?? 0), (dims1[1] as? Int ?? 0), (dims2[0] as? Int ?? 0), (dims2[1] as? Int ?? 0)] as! [Int]).max()!))
    |                                         `- warning: conditional cast from 'Int' to 'Int' always succeeds
222 |         let size = _int(next_power_of_two(maximum))
223 |         let new_matrix1: [[Int]] = (pad_matrix((matrix1 as! [[Int]]), size, size) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:221:66: warning: conditional cast from 'Int' to 'Int' always succeeds
219 |             return ([] as! [[Int]])
220 |         }
221 |         let maximum = _int((([(dims1[0] as? Int ?? 0), (dims1[1] as? Int ?? 0), (dims2[0] as? Int ?? 0), (dims2[1] as? Int ?? 0)] as! [Int]).max()!))
    |                                                                  `- warning: conditional cast from 'Int' to 'Int' always succeeds
222 |         let size = _int(next_power_of_two(maximum))
223 |         let new_matrix1: [[Int]] = (pad_matrix((matrix1 as! [[Int]]), size, size) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:221:91: warning: conditional cast from 'Int' to 'Int' always succeeds
219 |             return ([] as! [[Int]])
220 |         }
221 |         let maximum = _int((([(dims1[0] as? Int ?? 0), (dims1[1] as? Int ?? 0), (dims2[0] as? Int ?? 0), (dims2[1] as? Int ?? 0)] as! [Int]).max()!))
    |                                                                                           `- warning: conditional cast from 'Int' to 'Int' always succeeds
222 |         let size = _int(next_power_of_two(maximum))
223 |         let new_matrix1: [[Int]] = (pad_matrix((matrix1 as! [[Int]]), size, size) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:221:116: warning: conditional cast from 'Int' to 'Int' always succeeds
219 |             return ([] as! [[Int]])
220 |         }
221 |         let maximum = _int((([(dims1[0] as? Int ?? 0), (dims1[1] as? Int ?? 0), (dims2[0] as? Int ?? 0), (dims2[1] as? Int ?? 0)] as! [Int]).max()!))
    |                                                                                                                    `- warning: conditional cast from 'Int' to 'Int' always succeeds
222 |         let size = _int(next_power_of_two(maximum))
223 |         let new_matrix1: [[Int]] = (pad_matrix((matrix1 as! [[Int]]), size, size) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:223:57: warning: forced cast of '[[Int]]' to same type has no effect
221 |         let maximum = _int((([(dims1[0] as? Int ?? 0), (dims1[1] as? Int ?? 0), (dims2[0] as? Int ?? 0), (dims2[1] as? Int ?? 0)] as! [Int]).max()!))
222 |         let size = _int(next_power_of_two(maximum))
223 |         let new_matrix1: [[Int]] = (pad_matrix((matrix1 as! [[Int]]), size, size) as! [[Int]])
    |                                                         `- warning: forced cast of '[[Int]]' to same type has no effect
224 |         let new_matrix2: [[Int]] = (pad_matrix((matrix2 as! [[Int]]), size, size) as! [[Int]])
225 |         let result_padded: [[Int]] = (actual_strassen((new_matrix1 as! [[Int]]), (new_matrix2 as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:223:83: warning: forced cast of '[[Int]]' to same type has no effect
221 |         let maximum = _int((([(dims1[0] as? Int ?? 0), (dims1[1] as? Int ?? 0), (dims2[0] as? Int ?? 0), (dims2[1] as? Int ?? 0)] as! [Int]).max()!))
222 |         let size = _int(next_power_of_two(maximum))
223 |         let new_matrix1: [[Int]] = (pad_matrix((matrix1 as! [[Int]]), size, size) as! [[Int]])
    |                                                                                   `- warning: forced cast of '[[Int]]' to same type has no effect
224 |         let new_matrix2: [[Int]] = (pad_matrix((matrix2 as! [[Int]]), size, size) as! [[Int]])
225 |         let result_padded: [[Int]] = (actual_strassen((new_matrix1 as! [[Int]]), (new_matrix2 as! [[Int]])) as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:224:57: warning: forced cast of '[[Int]]' to same type has no effect
222 |         let size = _int(next_power_of_two(maximum))
223 |         let new_matrix1: [[Int]] = (pad_matrix((matrix1 as! [[Int]]), size, size) as! [[Int]])
224 |         let new_matrix2: [[Int]] = (pad_matrix((matrix2 as! [[Int]]), size, size) as! [[Int]])
    |                                                         `- warning: forced cast of '[[Int]]' to same type has no effect
225 |         let result_padded: [[Int]] = (actual_strassen((new_matrix1 as! [[Int]]), (new_matrix2 as! [[Int]])) as! [[Int]])
226 |         var final_matrix: [[Int]] = ([] as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:224:83: warning: forced cast of '[[Int]]' to same type has no effect
222 |         let size = _int(next_power_of_two(maximum))
223 |         let new_matrix1: [[Int]] = (pad_matrix((matrix1 as! [[Int]]), size, size) as! [[Int]])
224 |         let new_matrix2: [[Int]] = (pad_matrix((matrix2 as! [[Int]]), size, size) as! [[Int]])
    |                                                                                   `- warning: forced cast of '[[Int]]' to same type has no effect
225 |         let result_padded: [[Int]] = (actual_strassen((new_matrix1 as! [[Int]]), (new_matrix2 as! [[Int]])) as! [[Int]])
226 |         var final_matrix: [[Int]] = ([] as! [[Int]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:225:68: warning: forced cast of '[[Int]]' to same type has no effect
223 |         let new_matrix1: [[Int]] = (pad_matrix((matrix1 as! [[Int]]), size, size) as! [[Int]])
224 |         let new_matrix2: [[Int]] = (pad_matrix((matrix2 as! [[Int]]), size, size) as! [[Int]])
225 |         let result_padded: [[Int]] = (actual_strassen((new_matrix1 as! [[Int]]), (new_matrix2 as! [[Int]])) as! [[Int]])
    |                                                                    `- warning: forced cast of '[[Int]]' to same type has no effect
226 |         var final_matrix: [[Int]] = ([] as! [[Int]])
227 |         var i: Int = 0

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:225:95: warning: forced cast of '[[Int]]' to same type has no effect
223 |         let new_matrix1: [[Int]] = (pad_matrix((matrix1 as! [[Int]]), size, size) as! [[Int]])
224 |         let new_matrix2: [[Int]] = (pad_matrix((matrix2 as! [[Int]]), size, size) as! [[Int]])
225 |         let result_padded: [[Int]] = (actual_strassen((new_matrix1 as! [[Int]]), (new_matrix2 as! [[Int]])) as! [[Int]])
    |                                                                                               `- warning: forced cast of '[[Int]]' to same type has no effect
226 |         var final_matrix: [[Int]] = ([] as! [[Int]])
227 |         var i: Int = 0

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:225:109: warning: forced cast of '[[Int]]' to same type has no effect
223 |         let new_matrix1: [[Int]] = (pad_matrix((matrix1 as! [[Int]]), size, size) as! [[Int]])
224 |         let new_matrix2: [[Int]] = (pad_matrix((matrix2 as! [[Int]]), size, size) as! [[Int]])
225 |         let result_padded: [[Int]] = (actual_strassen((new_matrix1 as! [[Int]]), (new_matrix2 as! [[Int]])) as! [[Int]])
    |                                                                                                             `- warning: forced cast of '[[Int]]' to same type has no effect
226 |         var final_matrix: [[Int]] = ([] as! [[Int]])
227 |         var i: Int = 0

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:228:30: warning: conditional cast from 'Int' to 'Int' always succeeds
226 |         var final_matrix: [[Int]] = ([] as! [[Int]])
227 |         var i: Int = 0
228 |         while (i < (dims1[0] as? Int ?? 0)) {
    |                              `- warning: conditional cast from 'Int' to 'Int' always succeeds
229 |             var row: [Int] = ([] as! [Int])
230 |             var j: Int = 0

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:231:34: warning: conditional cast from 'Int' to 'Int' always succeeds
229 |             var row: [Int] = ([] as! [Int])
230 |             var j: Int = 0
231 |             while (j < (dims2[1] as? Int ?? 0)) {
    |                                  `- warning: conditional cast from 'Int' to 'Int' always succeeds
232 |                 row = (_append(row, (result_padded[i][j] as? Int ?? 0)) as! [Int])
233 |                 j = _int((j &+ 1))

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:232:58: warning: conditional cast from 'Int' to 'Int' always succeeds
230 |             var j: Int = 0
231 |             while (j < (dims2[1] as? Int ?? 0)) {
232 |                 row = (_append(row, (result_padded[i][j] as? Int ?? 0)) as! [Int])
    |                                                          `- warning: conditional cast from 'Int' to 'Int' always succeeds
233 |                 j = _int((j &+ 1))
234 |             }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:243:47: warning: forced cast of '[[Int]]' to same type has no effect
241 |         let matrix1: [[Int]] = ([([2, 3, 4, 5] as! [Int]), ([6, 4, 3, 1] as! [Int]), ([2, 3, 6, 7] as! [Int]), ([3, 1, 2, 4] as! [Int]), ([2, 3, 4, 5] as! [Int]), ([6, 4, 3, 1] as! [Int]), ([2, 3, 6, 7] as! [Int]), ([3, 1, 2, 4] as! [Int]), ([2, 3, 4, 5] as! [Int]), ([6, 2, 3, 1] as! [Int])] as! [[Int]])
242 |         let matrix2: [[Int]] = ([([0, 2, 1, 1] as! [Int]), ([16, 2, 3, 3] as! [Int]), ([2, 2, 7, 7] as! [Int]), ([13, 11, 22, 4] as! [Int])] as! [[Int]])
243 |         let res: [[Int]] = (strassen((matrix1 as! [[Int]]), (matrix2 as! [[Int]])) as! [[Int]])
    |                                               `- warning: forced cast of '[[Int]]' to same type has no effect
244 |         print(_p("[" + res.map{ if let s = $0 as? String { "\"" + s.replacingOccurrences(of: "\"", with: "\\\"") + "\"" } else { _p($0) } }.joined(separator: ", ") + "]"))
245 |     }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:243:70: warning: forced cast of '[[Int]]' to same type has no effect
241 |         let matrix1: [[Int]] = ([([2, 3, 4, 5] as! [Int]), ([6, 4, 3, 1] as! [Int]), ([2, 3, 6, 7] as! [Int]), ([3, 1, 2, 4] as! [Int]), ([2, 3, 4, 5] as! [Int]), ([6, 4, 3, 1] as! [Int]), ([2, 3, 6, 7] as! [Int]), ([3, 1, 2, 4] as! [Int]), ([2, 3, 4, 5] as! [Int]), ([6, 2, 3, 1] as! [Int])] as! [[Int]])
242 |         let matrix2: [[Int]] = ([([0, 2, 1, 1] as! [Int]), ([16, 2, 3, 3] as! [Int]), ([2, 2, 7, 7] as! [Int]), ([13, 11, 22, 4] as! [Int])] as! [[Int]])
243 |         let res: [[Int]] = (strassen((matrix1 as! [[Int]]), (matrix2 as! [[Int]])) as! [[Int]])
    |                                                                      `- warning: forced cast of '[[Int]]' to same type has no effect
244 |         print(_p("[" + res.map{ if let s = $0 as? String { "\"" + s.replacingOccurrences(of: "\"", with: "\\\"") + "\"" } else { _p($0) } }.joined(separator: ", ") + "]"))
245 |     }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:243:84: warning: forced cast of '[[Int]]' to same type has no effect
241 |         let matrix1: [[Int]] = ([([2, 3, 4, 5] as! [Int]), ([6, 4, 3, 1] as! [Int]), ([2, 3, 6, 7] as! [Int]), ([3, 1, 2, 4] as! [Int]), ([2, 3, 4, 5] as! [Int]), ([6, 4, 3, 1] as! [Int]), ([2, 3, 6, 7] as! [Int]), ([3, 1, 2, 4] as! [Int]), ([2, 3, 4, 5] as! [Int]), ([6, 2, 3, 1] as! [Int])] as! [[Int]])
242 |         let matrix2: [[Int]] = ([([0, 2, 1, 1] as! [Int]), ([16, 2, 3, 3] as! [Int]), ([2, 2, 7, 7] as! [Int]), ([13, 11, 22, 4] as! [Int])] as! [[Int]])
243 |         let res: [[Int]] = (strassen((matrix1 as! [[Int]]), (matrix2 as! [[Int]])) as! [[Int]])
    |                                                                                    `- warning: forced cast of '[[Int]]' to same type has no effect
244 |         print(_p("[" + res.map{ if let s = $0 as? String { "\"" + s.replacingOccurrences(of: "\"", with: "\\\"") + "\"" } else { _p($0) } }.joined(separator: ", ") + "]"))
245 |     }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:244:47: warning: cast from '[Int]' to unrelated type 'String' always fails
242 |         let matrix2: [[Int]] = ([([0, 2, 1, 1] as! [Int]), ([16, 2, 3, 3] as! [Int]), ([2, 2, 7, 7] as! [Int]), ([13, 11, 22, 4] as! [Int])] as! [[Int]])
243 |         let res: [[Int]] = (strassen((matrix1 as! [[Int]]), (matrix2 as! [[Int]])) as! [[Int]])
244 |         print(_p("[" + res.map{ if let s = $0 as? String { "\"" + s.replacingOccurrences(of: "\"", with: "\\\"") + "\"" } else { _p($0) } }.joined(separator: ", ") + "]"))
    |                                               `- warning: cast from '[Int]' to unrelated type 'String' always fails
245 |     }
246 |     _ = main()

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication3153990142/001/main.swift:246:5: warning: using '_' to ignore the result of a Void-returning function is redundant
244 |         print(_p("[" + res.map{ if let s = $0 as? String { "\"" + s.replacingOccurrences(of: "\"", with: "\\\"") + "\"" } else { _p($0) } }.joined(separator: ", ") + "]"))
245 |     }
246 |     _ = main()
    |     `- warning: using '_' to ignore the result of a Void-returning function is redundant
247 |     let _benchEnd = _now()
248 |     let _benchMemEnd = _mem()
