exit status 1
/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:72:16: error: the compiler is unable to type-check this expression in reasonable time; try breaking up the expression into distinct sub-expressions
 70 |     let _benchStart = _now()
 71 |     func default_matrix_multiplication(_ a: [[Int?]], _ b: [[Int?]]) -> [[Int?]] {
 72 |         return ([([(((a[0][0] as? Int ?? 0) &* (b[0][0] as? Int ?? 0)) &+ ((a[0][1] as? Int ?? 0) &* (b[1][0] as? Int ?? 0))), (((a[0][0] as? Int ?? 0) &* (b[0][1] as? Int ?? 0)) &+ ((a[0][1] as? Int ?? 0) &* (b[1][1] as? Int ?? 0)))] as! [Int?]), ([(((a[1][0] as? Int ?? 0) &* (b[0][0] as? Int ?? 0)) &+ ((a[1][1] as? Int ?? 0) &* (b[1][0] as? Int ?? 0))), (((a[1][0] as? Int ?? 0) &* (b[0][1] as? Int ?? 0)) &+ ((a[1][1] as? Int ?? 0) &* (b[1][1] as? Int ?? 0)))] as! [Int?])] as! [[Int?]])
    |                `- error: the compiler is unable to type-check this expression in reasonable time; try breaking up the expression into distinct sub-expressions
 73 |     }
 74 |     func matrix_addition(_ matrix_a: [[Int?]], _ matrix_b: [[Int?]]) -> [[Int?]] {

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:80:43: warning: forced cast of '[Int?]' to same type has no effect
 78 |             var row: [Int?] = ([] as! [Int?])
 79 |             var j: Int = 0
 80 |             while (j < Int((((matrix_a[i] as! [Int?])).count))) {
    |                                           `- warning: forced cast of '[Int?]' to same type has no effect
 81 |                 row = (_append(row, ((matrix_a[i][j] as? Int ?? 0) &+ (matrix_b[i][j] as? Int ?? 0))) as! [Int?])
 82 |                 j = Int((j &+ 1))

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:81:54: warning: conditional downcast from 'Int?' to 'Int' does nothing
 79 |             var j: Int = 0
 80 |             while (j < Int((((matrix_a[i] as! [Int?])).count))) {
 81 |                 row = (_append(row, ((matrix_a[i][j] as? Int ?? 0) &+ (matrix_b[i][j] as? Int ?? 0))) as! [Int?])
    |                                                      `- warning: conditional downcast from 'Int?' to 'Int' does nothing
 82 |                 j = Int((j &+ 1))
 83 |             }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:81:87: warning: conditional downcast from 'Int?' to 'Int' does nothing
 79 |             var j: Int = 0
 80 |             while (j < Int((((matrix_a[i] as! [Int?])).count))) {
 81 |                 row = (_append(row, ((matrix_a[i][j] as? Int ?? 0) &+ (matrix_b[i][j] as? Int ?? 0))) as! [Int?])
    |                                                                                       `- warning: conditional downcast from 'Int?' to 'Int' does nothing
 82 |                 j = Int((j &+ 1))
 83 |             }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:95:43: warning: forced cast of '[Int?]' to same type has no effect
 93 |             var row: [Int?] = ([] as! [Int?])
 94 |             var j: Int = 0
 95 |             while (j < Int((((matrix_a[i] as! [Int?])).count))) {
    |                                           `- warning: forced cast of '[Int?]' to same type has no effect
 96 |                 row = (_append(row, ((matrix_a[i][j] as? Int ?? 0) &- (matrix_b[i][j] as? Int ?? 0))) as! [Int?])
 97 |                 j = Int((j &+ 1))

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:96:54: warning: conditional downcast from 'Int?' to 'Int' does nothing
 94 |             var j: Int = 0
 95 |             while (j < Int((((matrix_a[i] as! [Int?])).count))) {
 96 |                 row = (_append(row, ((matrix_a[i][j] as? Int ?? 0) &- (matrix_b[i][j] as? Int ?? 0))) as! [Int?])
    |                                                      `- warning: conditional downcast from 'Int?' to 'Int' does nothing
 97 |                 j = Int((j &+ 1))
 98 |             }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:96:87: warning: conditional downcast from 'Int?' to 'Int' does nothing
 94 |             var j: Int = 0
 95 |             while (j < Int((((matrix_a[i] as! [Int?])).count))) {
 96 |                 row = (_append(row, ((matrix_a[i][j] as? Int ?? 0) &- (matrix_b[i][j] as? Int ?? 0))) as! [Int?])
    |                                                                                       `- warning: conditional downcast from 'Int?' to 'Int' does nothing
 97 |                 j = Int((j &+ 1))
 98 |             }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:117:56: warning: conditional downcast from 'Int?' to 'Int' does nothing
115 |             var j: Int = 0
116 |             while (j < mid) {
117 |                 left_row = (_append(left_row, (a[i][j] as? Int ?? 0)) as! [Int?])
    |                                                        `- warning: conditional downcast from 'Int?' to 'Int' does nothing
118 |                 right_row = (_append(right_row, (a[i][(j &+ mid)] as? Int ?? 0)) as! [Int?])
119 |                 j = Int((j &+ 1))

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:118:67: warning: conditional downcast from 'Int?' to 'Int' does nothing
116 |             while (j < mid) {
117 |                 left_row = (_append(left_row, (a[i][j] as? Int ?? 0)) as! [Int?])
118 |                 right_row = (_append(right_row, (a[i][(j &+ mid)] as? Int ?? 0)) as! [Int?])
    |                                                                   `- warning: conditional downcast from 'Int?' to 'Int' does nothing
119 |                 j = Int((j &+ 1))
120 |             }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:125:18: warning: forced cast of 'Int' to same type has no effect
123 |             i = Int((i &+ 1))
124 |         }
125 |         i = (mid as! Int)
    |                  `- warning: forced cast of 'Int' to same type has no effect
126 |         while (i < n) {
127 |             var left_row: [Int?] = ([] as! [Int?])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:131:56: warning: conditional downcast from 'Int?' to 'Int' does nothing
129 |             var j: Int = 0
130 |             while (j < mid) {
131 |                 left_row = (_append(left_row, (a[i][j] as? Int ?? 0)) as! [Int?])
    |                                                        `- warning: conditional downcast from 'Int?' to 'Int' does nothing
132 |                 right_row = (_append(right_row, (a[i][(j &+ mid)] as? Int ?? 0)) as! [Int?])
133 |                 j = Int((j &+ 1))

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:132:67: warning: conditional downcast from 'Int?' to 'Int' does nothing
130 |             while (j < mid) {
131 |                 left_row = (_append(left_row, (a[i][j] as? Int ?? 0)) as! [Int?])
132 |                 right_row = (_append(right_row, (a[i][(j &+ mid)] as? Int ?? 0)) as! [Int?])
    |                                                                   `- warning: conditional downcast from 'Int?' to 'Int' does nothing
133 |                 j = Int((j &+ 1))
134 |             }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:142:58: warning: forced cast of '[Int?]' to same type has no effect
140 |     }
141 |     func matrix_dimensions(_ matrix: [[Int?]]) -> [Int?] {
142 |         return ([Int(((matrix).count)), Int((((matrix[0] as! [Int?])).count))] as! [Int?])
    |                                                          `- warning: forced cast of '[Int?]' to same type has no effect
143 |     }
144 |     func next_power_of_two(_ n: Int) -> Int {

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:159:68: warning: forced cast of '[Int?]' to same type has no effect
157 |             while (j < cols) {
158 |                 var v: Int = 0
159 |                 if ((i < Int(((mat).count))) && (j < Int((((mat[0] as! [Int?])).count)))) {
    |                                                                    `- warning: forced cast of '[Int?]' to same type has no effect
160 |                     v = (mat[i][j] as? Int ?? 0)
161 |                 }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:160:36: warning: conditional downcast from 'Int?' to 'Int' does nothing
158 |                 var v: Int = 0
159 |                 if ((i < Int(((mat).count))) && (j < Int((((mat[0] as! [Int?])).count)))) {
160 |                     v = (mat[i][j] as? Int ?? 0)
    |                                    `- warning: conditional downcast from 'Int?' to 'Int' does nothing
161 |                 }
162 |                 row = (_append(row, v) as! [Int?])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:171:43: warning: forced cast of '[[Int?]]' to same type has no effect
169 |     }
170 |     func actual_strassen(_ matrix_a: [[Int?]], _ matrix_b: [[Int?]]) -> [[Int?]] {
171 |         if (((matrix_dimensions((matrix_a as! [[Int?]])) as! [Any])[0] as? Int ?? 0) == 2) {
    |                                           `- warning: forced cast of '[[Int?]]' to same type has no effect
172 |             return (default_matrix_multiplication((matrix_a as! [[Int?]]), (matrix_b as! [[Int?]])) as! [[Int?]])
173 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:171:58: warning: forced cast from '[Int?]' to '[Any]' always succeeds; did you mean to use 'as'?
169 |     }
170 |     func actual_strassen(_ matrix_a: [[Int?]], _ matrix_b: [[Int?]]) -> [[Int?]] {
171 |         if (((matrix_dimensions((matrix_a as! [[Int?]])) as! [Any])[0] as? Int ?? 0) == 2) {
    |                                                          `- warning: forced cast from '[Int?]' to '[Any]' always succeeds; did you mean to use 'as'?
172 |             return (default_matrix_multiplication((matrix_a as! [[Int?]]), (matrix_b as! [[Int?]])) as! [[Int?]])
173 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:172:61: warning: forced cast of '[[Int?]]' to same type has no effect
170 |     func actual_strassen(_ matrix_a: [[Int?]], _ matrix_b: [[Int?]]) -> [[Int?]] {
171 |         if (((matrix_dimensions((matrix_a as! [[Int?]])) as! [Any])[0] as? Int ?? 0) == 2) {
172 |             return (default_matrix_multiplication((matrix_a as! [[Int?]]), (matrix_b as! [[Int?]])) as! [[Int?]])
    |                                                             `- warning: forced cast of '[[Int?]]' to same type has no effect
173 |         }
174 |         let parts_a: [[[Int?]]] = (split_matrix((matrix_a as! [[Int?]])) as! [[[Int?]]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:172:86: warning: forced cast of '[[Int?]]' to same type has no effect
170 |     func actual_strassen(_ matrix_a: [[Int?]], _ matrix_b: [[Int?]]) -> [[Int?]] {
171 |         if (((matrix_dimensions((matrix_a as! [[Int?]])) as! [Any])[0] as? Int ?? 0) == 2) {
172 |             return (default_matrix_multiplication((matrix_a as! [[Int?]]), (matrix_b as! [[Int?]])) as! [[Int?]])
    |                                                                                      `- warning: forced cast of '[[Int?]]' to same type has no effect
173 |         }
174 |         let parts_a: [[[Int?]]] = (split_matrix((matrix_a as! [[Int?]])) as! [[[Int?]]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:172:101: warning: forced cast of '[[Int?]]' to same type has no effect
170 |     func actual_strassen(_ matrix_a: [[Int?]], _ matrix_b: [[Int?]]) -> [[Int?]] {
171 |         if (((matrix_dimensions((matrix_a as! [[Int?]])) as! [Any])[0] as? Int ?? 0) == 2) {
172 |             return (default_matrix_multiplication((matrix_a as! [[Int?]]), (matrix_b as! [[Int?]])) as! [[Int?]])
    |                                                                                                     `- warning: forced cast of '[[Int?]]' to same type has no effect
173 |         }
174 |         let parts_a: [[[Int?]]] = (split_matrix((matrix_a as! [[Int?]])) as! [[[Int?]]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:174:59: warning: forced cast of '[[Int?]]' to same type has no effect
172 |             return (default_matrix_multiplication((matrix_a as! [[Int?]]), (matrix_b as! [[Int?]])) as! [[Int?]])
173 |         }
174 |         let parts_a: [[[Int?]]] = (split_matrix((matrix_a as! [[Int?]])) as! [[[Int?]]])
    |                                                           `- warning: forced cast of '[[Int?]]' to same type has no effect
175 |         let a: [[Int?]] = (parts_a[0] as! [[Int?]])
176 |         let b: [[Int?]] = (parts_a[1] as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:174:74: warning: forced cast of '[[[Int?]]]' to same type has no effect
172 |             return (default_matrix_multiplication((matrix_a as! [[Int?]]), (matrix_b as! [[Int?]])) as! [[Int?]])
173 |         }
174 |         let parts_a: [[[Int?]]] = (split_matrix((matrix_a as! [[Int?]])) as! [[[Int?]]])
    |                                                                          `- warning: forced cast of '[[[Int?]]]' to same type has no effect
175 |         let a: [[Int?]] = (parts_a[0] as! [[Int?]])
176 |         let b: [[Int?]] = (parts_a[1] as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:175:39: warning: forced cast of '[[Int?]]' to same type has no effect
173 |         }
174 |         let parts_a: [[[Int?]]] = (split_matrix((matrix_a as! [[Int?]])) as! [[[Int?]]])
175 |         let a: [[Int?]] = (parts_a[0] as! [[Int?]])
    |                                       `- warning: forced cast of '[[Int?]]' to same type has no effect
176 |         let b: [[Int?]] = (parts_a[1] as! [[Int?]])
177 |         let c: [[Int?]] = (parts_a[2] as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:176:39: warning: forced cast of '[[Int?]]' to same type has no effect
174 |         let parts_a: [[[Int?]]] = (split_matrix((matrix_a as! [[Int?]])) as! [[[Int?]]])
175 |         let a: [[Int?]] = (parts_a[0] as! [[Int?]])
176 |         let b: [[Int?]] = (parts_a[1] as! [[Int?]])
    |                                       `- warning: forced cast of '[[Int?]]' to same type has no effect
177 |         let c: [[Int?]] = (parts_a[2] as! [[Int?]])
178 |         let d: [[Int?]] = (parts_a[3] as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:177:39: warning: forced cast of '[[Int?]]' to same type has no effect
175 |         let a: [[Int?]] = (parts_a[0] as! [[Int?]])
176 |         let b: [[Int?]] = (parts_a[1] as! [[Int?]])
177 |         let c: [[Int?]] = (parts_a[2] as! [[Int?]])
    |                                       `- warning: forced cast of '[[Int?]]' to same type has no effect
178 |         let d: [[Int?]] = (parts_a[3] as! [[Int?]])
179 |         let parts_b: [[[Int?]]] = (split_matrix((matrix_b as! [[Int?]])) as! [[[Int?]]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:178:39: warning: forced cast of '[[Int?]]' to same type has no effect
176 |         let b: [[Int?]] = (parts_a[1] as! [[Int?]])
177 |         let c: [[Int?]] = (parts_a[2] as! [[Int?]])
178 |         let d: [[Int?]] = (parts_a[3] as! [[Int?]])
    |                                       `- warning: forced cast of '[[Int?]]' to same type has no effect
179 |         let parts_b: [[[Int?]]] = (split_matrix((matrix_b as! [[Int?]])) as! [[[Int?]]])
180 |         let e: [[Int?]] = (parts_b[0] as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:179:59: warning: forced cast of '[[Int?]]' to same type has no effect
177 |         let c: [[Int?]] = (parts_a[2] as! [[Int?]])
178 |         let d: [[Int?]] = (parts_a[3] as! [[Int?]])
179 |         let parts_b: [[[Int?]]] = (split_matrix((matrix_b as! [[Int?]])) as! [[[Int?]]])
    |                                                           `- warning: forced cast of '[[Int?]]' to same type has no effect
180 |         let e: [[Int?]] = (parts_b[0] as! [[Int?]])
181 |         let f: [[Int?]] = (parts_b[1] as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:179:74: warning: forced cast of '[[[Int?]]]' to same type has no effect
177 |         let c: [[Int?]] = (parts_a[2] as! [[Int?]])
178 |         let d: [[Int?]] = (parts_a[3] as! [[Int?]])
179 |         let parts_b: [[[Int?]]] = (split_matrix((matrix_b as! [[Int?]])) as! [[[Int?]]])
    |                                                                          `- warning: forced cast of '[[[Int?]]]' to same type has no effect
180 |         let e: [[Int?]] = (parts_b[0] as! [[Int?]])
181 |         let f: [[Int?]] = (parts_b[1] as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:180:39: warning: forced cast of '[[Int?]]' to same type has no effect
178 |         let d: [[Int?]] = (parts_a[3] as! [[Int?]])
179 |         let parts_b: [[[Int?]]] = (split_matrix((matrix_b as! [[Int?]])) as! [[[Int?]]])
180 |         let e: [[Int?]] = (parts_b[0] as! [[Int?]])
    |                                       `- warning: forced cast of '[[Int?]]' to same type has no effect
181 |         let f: [[Int?]] = (parts_b[1] as! [[Int?]])
182 |         let g: [[Int?]] = (parts_b[2] as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:181:39: warning: forced cast of '[[Int?]]' to same type has no effect
179 |         let parts_b: [[[Int?]]] = (split_matrix((matrix_b as! [[Int?]])) as! [[[Int?]]])
180 |         let e: [[Int?]] = (parts_b[0] as! [[Int?]])
181 |         let f: [[Int?]] = (parts_b[1] as! [[Int?]])
    |                                       `- warning: forced cast of '[[Int?]]' to same type has no effect
182 |         let g: [[Int?]] = (parts_b[2] as! [[Int?]])
183 |         let h: [[Int?]] = (parts_b[3] as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:182:39: warning: forced cast of '[[Int?]]' to same type has no effect
180 |         let e: [[Int?]] = (parts_b[0] as! [[Int?]])
181 |         let f: [[Int?]] = (parts_b[1] as! [[Int?]])
182 |         let g: [[Int?]] = (parts_b[2] as! [[Int?]])
    |                                       `- warning: forced cast of '[[Int?]]' to same type has no effect
183 |         let h: [[Int?]] = (parts_b[3] as! [[Int?]])
184 |         let t1: [[Int?]] = (actual_strassen((a as! [[Int?]]), (matrix_subtraction((f as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:183:39: warning: forced cast of '[[Int?]]' to same type has no effect
181 |         let f: [[Int?]] = (parts_b[1] as! [[Int?]])
182 |         let g: [[Int?]] = (parts_b[2] as! [[Int?]])
183 |         let h: [[Int?]] = (parts_b[3] as! [[Int?]])
    |                                       `- warning: forced cast of '[[Int?]]' to same type has no effect
184 |         let t1: [[Int?]] = (actual_strassen((a as! [[Int?]]), (matrix_subtraction((f as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
185 |         let t2: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (b as! [[Int?]])) as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:184:48: warning: forced cast of '[[Int?]]' to same type has no effect
182 |         let g: [[Int?]] = (parts_b[2] as! [[Int?]])
183 |         let h: [[Int?]] = (parts_b[3] as! [[Int?]])
184 |         let t1: [[Int?]] = (actual_strassen((a as! [[Int?]]), (matrix_subtraction((f as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                `- warning: forced cast of '[[Int?]]' to same type has no effect
185 |         let t2: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (b as! [[Int?]])) as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])
186 |         let t3: [[Int?]] = (actual_strassen((matrix_addition((c as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:184:86: warning: forced cast of '[[Int?]]' to same type has no effect
182 |         let g: [[Int?]] = (parts_b[2] as! [[Int?]])
183 |         let h: [[Int?]] = (parts_b[3] as! [[Int?]])
184 |         let t1: [[Int?]] = (actual_strassen((a as! [[Int?]]), (matrix_subtraction((f as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                                      `- warning: forced cast of '[[Int?]]' to same type has no effect
185 |         let t2: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (b as! [[Int?]])) as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])
186 |         let t3: [[Int?]] = (actual_strassen((matrix_addition((c as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:184:104: warning: forced cast of '[[Int?]]' to same type has no effect
182 |         let g: [[Int?]] = (parts_b[2] as! [[Int?]])
183 |         let h: [[Int?]] = (parts_b[3] as! [[Int?]])
184 |         let t1: [[Int?]] = (actual_strassen((a as! [[Int?]]), (matrix_subtraction((f as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                                                        `- warning: forced cast of '[[Int?]]' to same type has no effect
185 |         let t2: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (b as! [[Int?]])) as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])
186 |         let t3: [[Int?]] = (actual_strassen((matrix_addition((c as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:184:119: warning: forced cast of '[[Int?]]' to same type has no effect
182 |         let g: [[Int?]] = (parts_b[2] as! [[Int?]])
183 |         let h: [[Int?]] = (parts_b[3] as! [[Int?]])
184 |         let t1: [[Int?]] = (actual_strassen((a as! [[Int?]]), (matrix_subtraction((f as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                                                                       `- warning: forced cast of '[[Int?]]' to same type has no effect
185 |         let t2: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (b as! [[Int?]])) as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])
186 |         let t3: [[Int?]] = (actual_strassen((matrix_addition((c as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:184:134: warning: forced cast of '[[Int?]]' to same type has no effect
182 |         let g: [[Int?]] = (parts_b[2] as! [[Int?]])
183 |         let h: [[Int?]] = (parts_b[3] as! [[Int?]])
184 |         let t1: [[Int?]] = (actual_strassen((a as! [[Int?]]), (matrix_subtraction((f as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                                                                                      `- warning: forced cast of '[[Int?]]' to same type has no effect
185 |         let t2: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (b as! [[Int?]])) as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])
186 |         let t3: [[Int?]] = (actual_strassen((matrix_addition((c as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:185:65: warning: forced cast of '[[Int?]]' to same type has no effect
183 |         let h: [[Int?]] = (parts_b[3] as! [[Int?]])
184 |         let t1: [[Int?]] = (actual_strassen((a as! [[Int?]]), (matrix_subtraction((f as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
185 |         let t2: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (b as! [[Int?]])) as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])
    |                                                                 `- warning: forced cast of '[[Int?]]' to same type has no effect
186 |         let t3: [[Int?]] = (actual_strassen((matrix_addition((c as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:185:83: warning: forced cast of '[[Int?]]' to same type has no effect
183 |         let h: [[Int?]] = (parts_b[3] as! [[Int?]])
184 |         let t1: [[Int?]] = (actual_strassen((a as! [[Int?]]), (matrix_subtraction((f as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
185 |         let t2: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (b as! [[Int?]])) as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])
    |                                                                                   `- warning: forced cast of '[[Int?]]' to same type has no effect
186 |         let t3: [[Int?]] = (actual_strassen((matrix_addition((c as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:185:98: warning: forced cast of '[[Int?]]' to same type has no effect
183 |         let h: [[Int?]] = (parts_b[3] as! [[Int?]])
184 |         let t1: [[Int?]] = (actual_strassen((a as! [[Int?]]), (matrix_subtraction((f as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
185 |         let t2: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (b as! [[Int?]])) as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])
    |                                                                                                  `- warning: forced cast of '[[Int?]]' to same type has no effect
186 |         let t3: [[Int?]] = (actual_strassen((matrix_addition((c as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:185:116: warning: forced cast of '[[Int?]]' to same type has no effect
183 |         let h: [[Int?]] = (parts_b[3] as! [[Int?]])
184 |         let t1: [[Int?]] = (actual_strassen((a as! [[Int?]]), (matrix_subtraction((f as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
185 |         let t2: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (b as! [[Int?]])) as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])
    |                                                                                                                    `- warning: forced cast of '[[Int?]]' to same type has no effect
186 |         let t3: [[Int?]] = (actual_strassen((matrix_addition((c as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:185:131: warning: forced cast of '[[Int?]]' to same type has no effect
183 |         let h: [[Int?]] = (parts_b[3] as! [[Int?]])
184 |         let t1: [[Int?]] = (actual_strassen((a as! [[Int?]]), (matrix_subtraction((f as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
185 |         let t2: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (b as! [[Int?]])) as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])
    |                                                                                                                                   `- warning: forced cast of '[[Int?]]' to same type has no effect
186 |         let t3: [[Int?]] = (actual_strassen((matrix_addition((c as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:186:65: warning: forced cast of '[[Int?]]' to same type has no effect
184 |         let t1: [[Int?]] = (actual_strassen((a as! [[Int?]]), (matrix_subtraction((f as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
185 |         let t2: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (b as! [[Int?]])) as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])
186 |         let t3: [[Int?]] = (actual_strassen((matrix_addition((c as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])
    |                                                                 `- warning: forced cast of '[[Int?]]' to same type has no effect
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:186:83: warning: forced cast of '[[Int?]]' to same type has no effect
184 |         let t1: [[Int?]] = (actual_strassen((a as! [[Int?]]), (matrix_subtraction((f as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
185 |         let t2: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (b as! [[Int?]])) as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])
186 |         let t3: [[Int?]] = (actual_strassen((matrix_addition((c as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])
    |                                                                                   `- warning: forced cast of '[[Int?]]' to same type has no effect
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:186:98: warning: forced cast of '[[Int?]]' to same type has no effect
184 |         let t1: [[Int?]] = (actual_strassen((a as! [[Int?]]), (matrix_subtraction((f as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
185 |         let t2: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (b as! [[Int?]])) as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])
186 |         let t3: [[Int?]] = (actual_strassen((matrix_addition((c as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])
    |                                                                                                  `- warning: forced cast of '[[Int?]]' to same type has no effect
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:186:116: warning: forced cast of '[[Int?]]' to same type has no effect
184 |         let t1: [[Int?]] = (actual_strassen((a as! [[Int?]]), (matrix_subtraction((f as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
185 |         let t2: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (b as! [[Int?]])) as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])
186 |         let t3: [[Int?]] = (actual_strassen((matrix_addition((c as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])
    |                                                                                                                    `- warning: forced cast of '[[Int?]]' to same type has no effect
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:186:131: warning: forced cast of '[[Int?]]' to same type has no effect
184 |         let t1: [[Int?]] = (actual_strassen((a as! [[Int?]]), (matrix_subtraction((f as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
185 |         let t2: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (b as! [[Int?]])) as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])
186 |         let t3: [[Int?]] = (actual_strassen((matrix_addition((c as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])
    |                                                                                                                                   `- warning: forced cast of '[[Int?]]' to same type has no effect
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:187:48: warning: forced cast of '[[Int?]]' to same type has no effect
185 |         let t2: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (b as! [[Int?]])) as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])
186 |         let t3: [[Int?]] = (actual_strassen((matrix_addition((c as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                `- warning: forced cast of '[[Int?]]' to same type has no effect
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:187:86: warning: forced cast of '[[Int?]]' to same type has no effect
185 |         let t2: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (b as! [[Int?]])) as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])
186 |         let t3: [[Int?]] = (actual_strassen((matrix_addition((c as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                                      `- warning: forced cast of '[[Int?]]' to same type has no effect
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:187:104: warning: forced cast of '[[Int?]]' to same type has no effect
185 |         let t2: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (b as! [[Int?]])) as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])
186 |         let t3: [[Int?]] = (actual_strassen((matrix_addition((c as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                                                        `- warning: forced cast of '[[Int?]]' to same type has no effect
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:187:119: warning: forced cast of '[[Int?]]' to same type has no effect
185 |         let t2: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (b as! [[Int?]])) as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])
186 |         let t3: [[Int?]] = (actual_strassen((matrix_addition((c as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                                                                       `- warning: forced cast of '[[Int?]]' to same type has no effect
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:187:134: warning: forced cast of '[[Int?]]' to same type has no effect
185 |         let t2: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (b as! [[Int?]])) as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])
186 |         let t3: [[Int?]] = (actual_strassen((matrix_addition((c as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                                                                                      `- warning: forced cast of '[[Int?]]' to same type has no effect
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:188:65: warning: forced cast of '[[Int?]]' to same type has no effect
186 |         let t3: [[Int?]] = (actual_strassen((matrix_addition((c as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                 `- warning: forced cast of '[[Int?]]' to same type has no effect
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:188:83: warning: forced cast of '[[Int?]]' to same type has no effect
186 |         let t3: [[Int?]] = (actual_strassen((matrix_addition((c as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                                   `- warning: forced cast of '[[Int?]]' to same type has no effect
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:188:98: warning: forced cast of '[[Int?]]' to same type has no effect
186 |         let t3: [[Int?]] = (actual_strassen((matrix_addition((c as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                                                  `- warning: forced cast of '[[Int?]]' to same type has no effect
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:188:133: warning: forced cast of '[[Int?]]' to same type has no effect
186 |         let t3: [[Int?]] = (actual_strassen((matrix_addition((c as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                                                                                     `- warning: forced cast of '[[Int?]]' to same type has no effect
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:188:151: warning: forced cast of '[[Int?]]' to same type has no effect
186 |         let t3: [[Int?]] = (actual_strassen((matrix_addition((c as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                                                                                                       `- warning: forced cast of '[[Int?]]' to same type has no effect
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:188:166: warning: forced cast of '[[Int?]]' to same type has no effect
186 |         let t3: [[Int?]] = (actual_strassen((matrix_addition((c as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                                                                                                                      `- warning: forced cast of '[[Int?]]' to same type has no effect
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:188:181: warning: forced cast of '[[Int?]]' to same type has no effect
186 |         let t3: [[Int?]] = (actual_strassen((matrix_addition((c as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                                                                                                                                     `- warning: forced cast of '[[Int?]]' to same type has no effect
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:189:68: warning: forced cast of '[[Int?]]' to same type has no effect
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                    `- warning: forced cast of '[[Int?]]' to same type has no effect
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
191 |         let top_left: [[Int?]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]]), (t6 as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:189:86: warning: forced cast of '[[Int?]]' to same type has no effect
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                                      `- warning: forced cast of '[[Int?]]' to same type has no effect
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
191 |         let top_left: [[Int?]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]]), (t6 as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:189:101: warning: forced cast of '[[Int?]]' to same type has no effect
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                                                     `- warning: forced cast of '[[Int?]]' to same type has no effect
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
191 |         let top_left: [[Int?]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]]), (t6 as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:189:136: warning: forced cast of '[[Int?]]' to same type has no effect
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                                                                                        `- warning: forced cast of '[[Int?]]' to same type has no effect
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
191 |         let top_left: [[Int?]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]]), (t6 as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:189:154: warning: forced cast of '[[Int?]]' to same type has no effect
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                                                                                                          `- warning: forced cast of '[[Int?]]' to same type has no effect
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
191 |         let top_left: [[Int?]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]]), (t6 as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:189:169: warning: forced cast of '[[Int?]]' to same type has no effect
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                                                                                                                         `- warning: forced cast of '[[Int?]]' to same type has no effect
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
191 |         let top_left: [[Int?]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]]), (t6 as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:189:184: warning: forced cast of '[[Int?]]' to same type has no effect
187 |         let t4: [[Int?]] = (actual_strassen((d as! [[Int?]]), (matrix_subtraction((g as! [[Int?]]), (e as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                                                                                                                                        `- warning: forced cast of '[[Int?]]' to same type has no effect
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
191 |         let top_left: [[Int?]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]]), (t6 as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:190:68: warning: forced cast of '[[Int?]]' to same type has no effect
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                    `- warning: forced cast of '[[Int?]]' to same type has no effect
191 |         let top_left: [[Int?]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]]), (t6 as! [[Int?]])) as! [[Int?]])
192 |         let top_right: [[Int?]] = (matrix_addition((t1 as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:190:86: warning: forced cast of '[[Int?]]' to same type has no effect
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                                      `- warning: forced cast of '[[Int?]]' to same type has no effect
191 |         let top_left: [[Int?]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]]), (t6 as! [[Int?]])) as! [[Int?]])
192 |         let top_right: [[Int?]] = (matrix_addition((t1 as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:190:101: warning: forced cast of '[[Int?]]' to same type has no effect
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                                                     `- warning: forced cast of '[[Int?]]' to same type has no effect
191 |         let top_left: [[Int?]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]]), (t6 as! [[Int?]])) as! [[Int?]])
192 |         let top_right: [[Int?]] = (matrix_addition((t1 as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:190:136: warning: forced cast of '[[Int?]]' to same type has no effect
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                                                                                        `- warning: forced cast of '[[Int?]]' to same type has no effect
191 |         let top_left: [[Int?]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]]), (t6 as! [[Int?]])) as! [[Int?]])
192 |         let top_right: [[Int?]] = (matrix_addition((t1 as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:190:154: warning: forced cast of '[[Int?]]' to same type has no effect
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                                                                                                          `- warning: forced cast of '[[Int?]]' to same type has no effect
191 |         let top_left: [[Int?]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]]), (t6 as! [[Int?]])) as! [[Int?]])
192 |         let top_right: [[Int?]] = (matrix_addition((t1 as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:190:169: warning: forced cast of '[[Int?]]' to same type has no effect
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                                                                                                                         `- warning: forced cast of '[[Int?]]' to same type has no effect
191 |         let top_left: [[Int?]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]]), (t6 as! [[Int?]])) as! [[Int?]])
192 |         let top_right: [[Int?]] = (matrix_addition((t1 as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:190:184: warning: forced cast of '[[Int?]]' to same type has no effect
188 |         let t5: [[Int?]] = (actual_strassen((matrix_addition((a as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
    |                                                                                                                                                                                        `- warning: forced cast of '[[Int?]]' to same type has no effect
191 |         let top_left: [[Int?]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]]), (t6 as! [[Int?]])) as! [[Int?]])
192 |         let top_right: [[Int?]] = (matrix_addition((t1 as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:191:92: warning: forced cast of '[[Int?]]' to same type has no effect
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
191 |         let top_left: [[Int?]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]]), (t6 as! [[Int?]])) as! [[Int?]])
    |                                                                                            `- warning: forced cast of '[[Int?]]' to same type has no effect
192 |         let top_right: [[Int?]] = (matrix_addition((t1 as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]])
193 |         let bot_left: [[Int?]] = (matrix_addition((t3 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:191:111: warning: forced cast of '[[Int?]]' to same type has no effect
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
191 |         let top_left: [[Int?]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]]), (t6 as! [[Int?]])) as! [[Int?]])
    |                                                                                                               `- warning: forced cast of '[[Int?]]' to same type has no effect
192 |         let top_right: [[Int?]] = (matrix_addition((t1 as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]])
193 |         let bot_left: [[Int?]] = (matrix_addition((t3 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:191:126: warning: forced cast of '[[Int?]]' to same type has no effect
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
191 |         let top_left: [[Int?]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]]), (t6 as! [[Int?]])) as! [[Int?]])
    |                                                                                                                              `- warning: forced cast of '[[Int?]]' to same type has no effect
192 |         let top_right: [[Int?]] = (matrix_addition((t1 as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]])
193 |         let bot_left: [[Int?]] = (matrix_addition((t3 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:191:145: warning: forced cast of '[[Int?]]' to same type has no effect
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
191 |         let top_left: [[Int?]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]]), (t6 as! [[Int?]])) as! [[Int?]])
    |                                                                                                                                                 `- warning: forced cast of '[[Int?]]' to same type has no effect
192 |         let top_right: [[Int?]] = (matrix_addition((t1 as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]])
193 |         let bot_left: [[Int?]] = (matrix_addition((t3 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:191:160: warning: forced cast of '[[Int?]]' to same type has no effect
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
191 |         let top_left: [[Int?]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]]), (t6 as! [[Int?]])) as! [[Int?]])
    |                                                                                                                                                                `- warning: forced cast of '[[Int?]]' to same type has no effect
192 |         let top_right: [[Int?]] = (matrix_addition((t1 as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]])
193 |         let bot_left: [[Int?]] = (matrix_addition((t3 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:191:179: warning: forced cast of '[[Int?]]' to same type has no effect
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
191 |         let top_left: [[Int?]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]]), (t6 as! [[Int?]])) as! [[Int?]])
    |                                                                                                                                                                                   `- warning: forced cast of '[[Int?]]' to same type has no effect
192 |         let top_right: [[Int?]] = (matrix_addition((t1 as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]])
193 |         let bot_left: [[Int?]] = (matrix_addition((t3 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:191:194: warning: forced cast of '[[Int?]]' to same type has no effect
189 |         let t6: [[Int?]] = (actual_strassen((matrix_subtraction((b as! [[Int?]]), (d as! [[Int?]])) as! [[Int?]]), (matrix_addition((g as! [[Int?]]), (h as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
191 |         let top_left: [[Int?]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]]), (t6 as! [[Int?]])) as! [[Int?]])
    |                                                                                                                                                                                                  `- warning: forced cast of '[[Int?]]' to same type has no effect
192 |         let top_right: [[Int?]] = (matrix_addition((t1 as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]])
193 |         let bot_left: [[Int?]] = (matrix_addition((t3 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:192:56: warning: forced cast of '[[Int?]]' to same type has no effect
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
191 |         let top_left: [[Int?]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]]), (t6 as! [[Int?]])) as! [[Int?]])
192 |         let top_right: [[Int?]] = (matrix_addition((t1 as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]])
    |                                                        `- warning: forced cast of '[[Int?]]' to same type has no effect
193 |         let bot_left: [[Int?]] = (matrix_addition((t3 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]])
194 |         let bot_right: [[Int?]] = (matrix_subtraction((matrix_subtraction((matrix_addition((t1 as! [[Int?]]), (t5 as! [[Int?]])) as! [[Int?]]), (t3 as! [[Int?]])) as! [[Int?]]), (t7 as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:192:75: warning: forced cast of '[[Int?]]' to same type has no effect
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
191 |         let top_left: [[Int?]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]]), (t6 as! [[Int?]])) as! [[Int?]])
192 |         let top_right: [[Int?]] = (matrix_addition((t1 as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]])
    |                                                                           `- warning: forced cast of '[[Int?]]' to same type has no effect
193 |         let bot_left: [[Int?]] = (matrix_addition((t3 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]])
194 |         let bot_right: [[Int?]] = (matrix_subtraction((matrix_subtraction((matrix_addition((t1 as! [[Int?]]), (t5 as! [[Int?]])) as! [[Int?]]), (t3 as! [[Int?]])) as! [[Int?]]), (t7 as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:192:90: warning: forced cast of '[[Int?]]' to same type has no effect
190 |         let t7: [[Int?]] = (actual_strassen((matrix_subtraction((a as! [[Int?]]), (c as! [[Int?]])) as! [[Int?]]), (matrix_addition((e as! [[Int?]]), (f as! [[Int?]])) as! [[Int?]])) as! [[Int?]])
191 |         let top_left: [[Int?]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]]), (t6 as! [[Int?]])) as! [[Int?]])
192 |         let top_right: [[Int?]] = (matrix_addition((t1 as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]])
    |                                                                                          `- warning: forced cast of '[[Int?]]' to same type has no effect
193 |         let bot_left: [[Int?]] = (matrix_addition((t3 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]])
194 |         let bot_right: [[Int?]] = (matrix_subtraction((matrix_subtraction((matrix_addition((t1 as! [[Int?]]), (t5 as! [[Int?]])) as! [[Int?]]), (t3 as! [[Int?]])) as! [[Int?]]), (t7 as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:193:55: warning: forced cast of '[[Int?]]' to same type has no effect
191 |         let top_left: [[Int?]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]]), (t6 as! [[Int?]])) as! [[Int?]])
192 |         let top_right: [[Int?]] = (matrix_addition((t1 as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]])
193 |         let bot_left: [[Int?]] = (matrix_addition((t3 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]])
    |                                                       `- warning: forced cast of '[[Int?]]' to same type has no effect
194 |         let bot_right: [[Int?]] = (matrix_subtraction((matrix_subtraction((matrix_addition((t1 as! [[Int?]]), (t5 as! [[Int?]])) as! [[Int?]]), (t3 as! [[Int?]])) as! [[Int?]]), (t7 as! [[Int?]])) as! [[Int?]])
195 |         var new_matrix: [[Int?]] = ([] as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:193:74: warning: forced cast of '[[Int?]]' to same type has no effect
191 |         let top_left: [[Int?]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]]), (t6 as! [[Int?]])) as! [[Int?]])
192 |         let top_right: [[Int?]] = (matrix_addition((t1 as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]])
193 |         let bot_left: [[Int?]] = (matrix_addition((t3 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]])
    |                                                                          `- warning: forced cast of '[[Int?]]' to same type has no effect
194 |         let bot_right: [[Int?]] = (matrix_subtraction((matrix_subtraction((matrix_addition((t1 as! [[Int?]]), (t5 as! [[Int?]])) as! [[Int?]]), (t3 as! [[Int?]])) as! [[Int?]]), (t7 as! [[Int?]])) as! [[Int?]])
195 |         var new_matrix: [[Int?]] = ([] as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:193:89: warning: forced cast of '[[Int?]]' to same type has no effect
191 |         let top_left: [[Int?]] = (matrix_addition((matrix_subtraction((matrix_addition((t5 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]]), (t6 as! [[Int?]])) as! [[Int?]])
192 |         let top_right: [[Int?]] = (matrix_addition((t1 as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]])
193 |         let bot_left: [[Int?]] = (matrix_addition((t3 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]])
    |                                                                                         `- warning: forced cast of '[[Int?]]' to same type has no effect
194 |         let bot_right: [[Int?]] = (matrix_subtraction((matrix_subtraction((matrix_addition((t1 as! [[Int?]]), (t5 as! [[Int?]])) as! [[Int?]]), (t3 as! [[Int?]])) as! [[Int?]]), (t7 as! [[Int?]])) as! [[Int?]])
195 |         var new_matrix: [[Int?]] = ([] as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:194:96: warning: forced cast of '[[Int?]]' to same type has no effect
192 |         let top_right: [[Int?]] = (matrix_addition((t1 as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]])
193 |         let bot_left: [[Int?]] = (matrix_addition((t3 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]])
194 |         let bot_right: [[Int?]] = (matrix_subtraction((matrix_subtraction((matrix_addition((t1 as! [[Int?]]), (t5 as! [[Int?]])) as! [[Int?]]), (t3 as! [[Int?]])) as! [[Int?]]), (t7 as! [[Int?]])) as! [[Int?]])
    |                                                                                                `- warning: forced cast of '[[Int?]]' to same type has no effect
195 |         var new_matrix: [[Int?]] = ([] as! [[Int?]])
196 |         var i: Int = 0

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:194:115: warning: forced cast of '[[Int?]]' to same type has no effect
192 |         let top_right: [[Int?]] = (matrix_addition((t1 as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]])
193 |         let bot_left: [[Int?]] = (matrix_addition((t3 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]])
194 |         let bot_right: [[Int?]] = (matrix_subtraction((matrix_subtraction((matrix_addition((t1 as! [[Int?]]), (t5 as! [[Int?]])) as! [[Int?]]), (t3 as! [[Int?]])) as! [[Int?]]), (t7 as! [[Int?]])) as! [[Int?]])
    |                                                                                                                   `- warning: forced cast of '[[Int?]]' to same type has no effect
195 |         var new_matrix: [[Int?]] = ([] as! [[Int?]])
196 |         var i: Int = 0

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:194:130: warning: forced cast of '[[Int?]]' to same type has no effect
192 |         let top_right: [[Int?]] = (matrix_addition((t1 as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]])
193 |         let bot_left: [[Int?]] = (matrix_addition((t3 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]])
194 |         let bot_right: [[Int?]] = (matrix_subtraction((matrix_subtraction((matrix_addition((t1 as! [[Int?]]), (t5 as! [[Int?]])) as! [[Int?]]), (t3 as! [[Int?]])) as! [[Int?]]), (t7 as! [[Int?]])) as! [[Int?]])
    |                                                                                                                                  `- warning: forced cast of '[[Int?]]' to same type has no effect
195 |         var new_matrix: [[Int?]] = ([] as! [[Int?]])
196 |         var i: Int = 0

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:194:149: warning: forced cast of '[[Int?]]' to same type has no effect
192 |         let top_right: [[Int?]] = (matrix_addition((t1 as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]])
193 |         let bot_left: [[Int?]] = (matrix_addition((t3 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]])
194 |         let bot_right: [[Int?]] = (matrix_subtraction((matrix_subtraction((matrix_addition((t1 as! [[Int?]]), (t5 as! [[Int?]])) as! [[Int?]]), (t3 as! [[Int?]])) as! [[Int?]]), (t7 as! [[Int?]])) as! [[Int?]])
    |                                                                                                                                                     `- warning: forced cast of '[[Int?]]' to same type has no effect
195 |         var new_matrix: [[Int?]] = ([] as! [[Int?]])
196 |         var i: Int = 0

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:194:164: warning: forced cast of '[[Int?]]' to same type has no effect
192 |         let top_right: [[Int?]] = (matrix_addition((t1 as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]])
193 |         let bot_left: [[Int?]] = (matrix_addition((t3 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]])
194 |         let bot_right: [[Int?]] = (matrix_subtraction((matrix_subtraction((matrix_addition((t1 as! [[Int?]]), (t5 as! [[Int?]])) as! [[Int?]]), (t3 as! [[Int?]])) as! [[Int?]]), (t7 as! [[Int?]])) as! [[Int?]])
    |                                                                                                                                                                    `- warning: forced cast of '[[Int?]]' to same type has no effect
195 |         var new_matrix: [[Int?]] = ([] as! [[Int?]])
196 |         var i: Int = 0

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:194:183: warning: forced cast of '[[Int?]]' to same type has no effect
192 |         let top_right: [[Int?]] = (matrix_addition((t1 as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]])
193 |         let bot_left: [[Int?]] = (matrix_addition((t3 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]])
194 |         let bot_right: [[Int?]] = (matrix_subtraction((matrix_subtraction((matrix_addition((t1 as! [[Int?]]), (t5 as! [[Int?]])) as! [[Int?]]), (t3 as! [[Int?]])) as! [[Int?]]), (t7 as! [[Int?]])) as! [[Int?]])
    |                                                                                                                                                                                       `- warning: forced cast of '[[Int?]]' to same type has no effect
195 |         var new_matrix: [[Int?]] = ([] as! [[Int?]])
196 |         var i: Int = 0

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:194:198: warning: forced cast of '[[Int?]]' to same type has no effect
192 |         let top_right: [[Int?]] = (matrix_addition((t1 as! [[Int?]]), (t2 as! [[Int?]])) as! [[Int?]])
193 |         let bot_left: [[Int?]] = (matrix_addition((t3 as! [[Int?]]), (t4 as! [[Int?]])) as! [[Int?]])
194 |         let bot_right: [[Int?]] = (matrix_subtraction((matrix_subtraction((matrix_addition((t1 as! [[Int?]]), (t5 as! [[Int?]])) as! [[Int?]]), (t3 as! [[Int?]])) as! [[Int?]]), (t7 as! [[Int?]])) as! [[Int?]])
    |                                                                                                                                                                                                      `- warning: forced cast of '[[Int?]]' to same type has no effect
195 |         var new_matrix: [[Int?]] = ([] as! [[Int?]])
196 |         var i: Int = 0

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:198:70: warning: forced cast of '[Int?]' to same type has no effect
196 |         var i: Int = 0
197 |         while (i < Int(((top_right).count))) {
198 |             new_matrix = ((_append(new_matrix, (_concat((top_left[i] as! [Int?]), (top_right[i] as! [Int?])) as! [Any??])) as! [Any??]) as! [[Int?]])
    |                                                                      `- warning: forced cast of '[Int?]' to same type has no effect
199 |             i = Int((i &+ 1))
200 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:198:97: warning: forced cast of '[Int?]' to same type has no effect
196 |         var i: Int = 0
197 |         while (i < Int(((top_right).count))) {
198 |             new_matrix = ((_append(new_matrix, (_concat((top_left[i] as! [Int?]), (top_right[i] as! [Int?])) as! [Any??])) as! [Any??]) as! [[Int?]])
    |                                                                                                 `- warning: forced cast of '[Int?]' to same type has no effect
199 |             i = Int((i &+ 1))
200 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:203:70: warning: forced cast of '[Int?]' to same type has no effect
201 |         i = 0
202 |         while (i < Int(((bot_right).count))) {
203 |             new_matrix = ((_append(new_matrix, (_concat((bot_left[i] as! [Int?]), (bot_right[i] as! [Int?])) as! [Any??])) as! [Any??]) as! [[Int?]])
    |                                                                      `- warning: forced cast of '[Int?]' to same type has no effect
204 |             i = Int((i &+ 1))
205 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:203:97: warning: forced cast of '[Int?]' to same type has no effect
201 |         i = 0
202 |         while (i < Int(((bot_right).count))) {
203 |             new_matrix = ((_append(new_matrix, (_concat((bot_left[i] as! [Int?]), (bot_right[i] as! [Int?])) as! [Any??])) as! [Any??]) as! [[Int?]])
    |                                                                                                 `- warning: forced cast of '[Int?]' to same type has no effect
204 |             i = Int((i &+ 1))
205 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:209:57: warning: forced cast of '[[Int?]]' to same type has no effect
207 |     }
208 |     func strassen(_ matrix1: [[Int?]], _ matrix2: [[Int?]]) -> [[Int?]] {
209 |         let dims1: [Int?] = (matrix_dimensions((matrix1 as! [[Int?]])) as! [Int?])
    |                                                         `- warning: forced cast of '[[Int?]]' to same type has no effect
210 |         let dims2: [Int?] = (matrix_dimensions((matrix2 as! [[Int?]])) as! [Int?])
211 |         if ((dims1[1] as? Int ?? 0) != (dims2[0] as? Int ?? 0)) {

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:209:72: warning: forced cast of '[Int?]' to same type has no effect
207 |     }
208 |     func strassen(_ matrix1: [[Int?]], _ matrix2: [[Int?]]) -> [[Int?]] {
209 |         let dims1: [Int?] = (matrix_dimensions((matrix1 as! [[Int?]])) as! [Int?])
    |                                                                        `- warning: forced cast of '[Int?]' to same type has no effect
210 |         let dims2: [Int?] = (matrix_dimensions((matrix2 as! [[Int?]])) as! [Int?])
211 |         if ((dims1[1] as? Int ?? 0) != (dims2[0] as? Int ?? 0)) {

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:210:57: warning: forced cast of '[[Int?]]' to same type has no effect
208 |     func strassen(_ matrix1: [[Int?]], _ matrix2: [[Int?]]) -> [[Int?]] {
209 |         let dims1: [Int?] = (matrix_dimensions((matrix1 as! [[Int?]])) as! [Int?])
210 |         let dims2: [Int?] = (matrix_dimensions((matrix2 as! [[Int?]])) as! [Int?])
    |                                                         `- warning: forced cast of '[[Int?]]' to same type has no effect
211 |         if ((dims1[1] as? Int ?? 0) != (dims2[0] as? Int ?? 0)) {
212 |             return ([] as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:210:72: warning: forced cast of '[Int?]' to same type has no effect
208 |     func strassen(_ matrix1: [[Int?]], _ matrix2: [[Int?]]) -> [[Int?]] {
209 |         let dims1: [Int?] = (matrix_dimensions((matrix1 as! [[Int?]])) as! [Int?])
210 |         let dims2: [Int?] = (matrix_dimensions((matrix2 as! [[Int?]])) as! [Int?])
    |                                                                        `- warning: forced cast of '[Int?]' to same type has no effect
211 |         if ((dims1[1] as? Int ?? 0) != (dims2[0] as? Int ?? 0)) {
212 |             return ([] as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:211:23: warning: conditional downcast from 'Int?' to 'Int' does nothing
209 |         let dims1: [Int?] = (matrix_dimensions((matrix1 as! [[Int?]])) as! [Int?])
210 |         let dims2: [Int?] = (matrix_dimensions((matrix2 as! [[Int?]])) as! [Int?])
211 |         if ((dims1[1] as? Int ?? 0) != (dims2[0] as? Int ?? 0)) {
    |                       `- warning: conditional downcast from 'Int?' to 'Int' does nothing
212 |             return ([] as! [[Int?]])
213 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:211:50: warning: conditional downcast from 'Int?' to 'Int' does nothing
209 |         let dims1: [Int?] = (matrix_dimensions((matrix1 as! [[Int?]])) as! [Int?])
210 |         let dims2: [Int?] = (matrix_dimensions((matrix2 as! [[Int?]])) as! [Int?])
211 |         if ((dims1[1] as? Int ?? 0) != (dims2[0] as? Int ?? 0)) {
    |                                                  `- warning: conditional downcast from 'Int?' to 'Int' does nothing
212 |             return ([] as! [[Int?]])
213 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:214:147: error: value of optional type 'Int?' must be unwrapped to a value of type 'Int'
212 |             return ([] as! [[Int?]])
213 |         }
214 |         let maximum = Int((([(dims1[0] as? Int ?? 0), (dims1[1] as? Int ?? 0), (dims2[0] as? Int ?? 0), (dims2[1] as? Int ?? 0)] as! [Int?]).max()!))
    |                                                                                                                                                   |- error: value of optional type 'Int?' must be unwrapped to a value of type 'Int'
    |                                                                                                                                                   |- note: coalesce using '??' to provide a default when the optional value contains 'nil'
    |                                                                                                                                                   `- note: force-unwrap using '!' to abort execution if the optional value contains 'nil'
215 |         let size = Int(next_power_of_two(maximum))
216 |         let new_matrix1: [[Int?]] = (pad_matrix((matrix1 as! [[Int?]]), size, size) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:214:40: warning: conditional downcast from 'Int?' to 'Int' does nothing
212 |             return ([] as! [[Int?]])
213 |         }
214 |         let maximum = Int((([(dims1[0] as? Int ?? 0), (dims1[1] as? Int ?? 0), (dims2[0] as? Int ?? 0), (dims2[1] as? Int ?? 0)] as! [Int?]).max()!))
    |                                        `- warning: conditional downcast from 'Int?' to 'Int' does nothing
215 |         let size = Int(next_power_of_two(maximum))
216 |         let new_matrix1: [[Int?]] = (pad_matrix((matrix1 as! [[Int?]]), size, size) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:214:65: warning: conditional downcast from 'Int?' to 'Int' does nothing
212 |             return ([] as! [[Int?]])
213 |         }
214 |         let maximum = Int((([(dims1[0] as? Int ?? 0), (dims1[1] as? Int ?? 0), (dims2[0] as? Int ?? 0), (dims2[1] as? Int ?? 0)] as! [Int?]).max()!))
    |                                                                 `- warning: conditional downcast from 'Int?' to 'Int' does nothing
215 |         let size = Int(next_power_of_two(maximum))
216 |         let new_matrix1: [[Int?]] = (pad_matrix((matrix1 as! [[Int?]]), size, size) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:214:90: warning: conditional downcast from 'Int?' to 'Int' does nothing
212 |             return ([] as! [[Int?]])
213 |         }
214 |         let maximum = Int((([(dims1[0] as? Int ?? 0), (dims1[1] as? Int ?? 0), (dims2[0] as? Int ?? 0), (dims2[1] as? Int ?? 0)] as! [Int?]).max()!))
    |                                                                                          `- warning: conditional downcast from 'Int?' to 'Int' does nothing
215 |         let size = Int(next_power_of_two(maximum))
216 |         let new_matrix1: [[Int?]] = (pad_matrix((matrix1 as! [[Int?]]), size, size) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:214:115: warning: conditional downcast from 'Int?' to 'Int' does nothing
212 |             return ([] as! [[Int?]])
213 |         }
214 |         let maximum = Int((([(dims1[0] as? Int ?? 0), (dims1[1] as? Int ?? 0), (dims2[0] as? Int ?? 0), (dims2[1] as? Int ?? 0)] as! [Int?]).max()!))
    |                                                                                                                   `- warning: conditional downcast from 'Int?' to 'Int' does nothing
215 |         let size = Int(next_power_of_two(maximum))
216 |         let new_matrix1: [[Int?]] = (pad_matrix((matrix1 as! [[Int?]]), size, size) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:214:142: error: referencing instance method 'max()' on 'Sequence' requires that 'Int?' conform to 'Comparable'
212 |             return ([] as! [[Int?]])
213 |         }
214 |         let maximum = Int((([(dims1[0] as? Int ?? 0), (dims1[1] as? Int ?? 0), (dims2[0] as? Int ?? 0), (dims2[1] as? Int ?? 0)] as! [Int?]).max()!))
    |                                                                                                                                              |- error: referencing instance method 'max()' on 'Sequence' requires that 'Int?' conform to 'Comparable'
    |                                                                                                                                              `- note: wrapped type 'Int' satisfies this requirement; did you mean to unwrap?
215 |         let size = Int(next_power_of_two(maximum))
216 |         let new_matrix1: [[Int?]] = (pad_matrix((matrix1 as! [[Int?]]), size, size) as! [[Int?]])

Swift.Sequence:1:11: note: where 'Self.Element' = 'Int?'
1 | extension Sequence where Self.Element : Comparable {
  |           `- note: where 'Self.Element' = 'Int?'
2 |     @warn_unqualified_access
3 |     @inlinable public func min() -> Self.Element?

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:216:58: warning: forced cast of '[[Int?]]' to same type has no effect
214 |         let maximum = Int((([(dims1[0] as? Int ?? 0), (dims1[1] as? Int ?? 0), (dims2[0] as? Int ?? 0), (dims2[1] as? Int ?? 0)] as! [Int?]).max()!))
215 |         let size = Int(next_power_of_two(maximum))
216 |         let new_matrix1: [[Int?]] = (pad_matrix((matrix1 as! [[Int?]]), size, size) as! [[Int?]])
    |                                                          `- warning: forced cast of '[[Int?]]' to same type has no effect
217 |         let new_matrix2: [[Int?]] = (pad_matrix((matrix2 as! [[Int?]]), size, size) as! [[Int?]])
218 |         let result_padded: [[Int?]] = (actual_strassen((new_matrix1 as! [[Int?]]), (new_matrix2 as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:216:85: warning: forced cast of '[[Int?]]' to same type has no effect
214 |         let maximum = Int((([(dims1[0] as? Int ?? 0), (dims1[1] as? Int ?? 0), (dims2[0] as? Int ?? 0), (dims2[1] as? Int ?? 0)] as! [Int?]).max()!))
215 |         let size = Int(next_power_of_two(maximum))
216 |         let new_matrix1: [[Int?]] = (pad_matrix((matrix1 as! [[Int?]]), size, size) as! [[Int?]])
    |                                                                                     `- warning: forced cast of '[[Int?]]' to same type has no effect
217 |         let new_matrix2: [[Int?]] = (pad_matrix((matrix2 as! [[Int?]]), size, size) as! [[Int?]])
218 |         let result_padded: [[Int?]] = (actual_strassen((new_matrix1 as! [[Int?]]), (new_matrix2 as! [[Int?]])) as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:217:58: warning: forced cast of '[[Int?]]' to same type has no effect
215 |         let size = Int(next_power_of_two(maximum))
216 |         let new_matrix1: [[Int?]] = (pad_matrix((matrix1 as! [[Int?]]), size, size) as! [[Int?]])
217 |         let new_matrix2: [[Int?]] = (pad_matrix((matrix2 as! [[Int?]]), size, size) as! [[Int?]])
    |                                                          `- warning: forced cast of '[[Int?]]' to same type has no effect
218 |         let result_padded: [[Int?]] = (actual_strassen((new_matrix1 as! [[Int?]]), (new_matrix2 as! [[Int?]])) as! [[Int?]])
219 |         var final_matrix: [[Int?]] = ([] as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:217:85: warning: forced cast of '[[Int?]]' to same type has no effect
215 |         let size = Int(next_power_of_two(maximum))
216 |         let new_matrix1: [[Int?]] = (pad_matrix((matrix1 as! [[Int?]]), size, size) as! [[Int?]])
217 |         let new_matrix2: [[Int?]] = (pad_matrix((matrix2 as! [[Int?]]), size, size) as! [[Int?]])
    |                                                                                     `- warning: forced cast of '[[Int?]]' to same type has no effect
218 |         let result_padded: [[Int?]] = (actual_strassen((new_matrix1 as! [[Int?]]), (new_matrix2 as! [[Int?]])) as! [[Int?]])
219 |         var final_matrix: [[Int?]] = ([] as! [[Int?]])

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:218:69: warning: forced cast of '[[Int?]]' to same type has no effect
216 |         let new_matrix1: [[Int?]] = (pad_matrix((matrix1 as! [[Int?]]), size, size) as! [[Int?]])
217 |         let new_matrix2: [[Int?]] = (pad_matrix((matrix2 as! [[Int?]]), size, size) as! [[Int?]])
218 |         let result_padded: [[Int?]] = (actual_strassen((new_matrix1 as! [[Int?]]), (new_matrix2 as! [[Int?]])) as! [[Int?]])
    |                                                                     `- warning: forced cast of '[[Int?]]' to same type has no effect
219 |         var final_matrix: [[Int?]] = ([] as! [[Int?]])
220 |         var i: Int = 0

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:218:97: warning: forced cast of '[[Int?]]' to same type has no effect
216 |         let new_matrix1: [[Int?]] = (pad_matrix((matrix1 as! [[Int?]]), size, size) as! [[Int?]])
217 |         let new_matrix2: [[Int?]] = (pad_matrix((matrix2 as! [[Int?]]), size, size) as! [[Int?]])
218 |         let result_padded: [[Int?]] = (actual_strassen((new_matrix1 as! [[Int?]]), (new_matrix2 as! [[Int?]])) as! [[Int?]])
    |                                                                                                 `- warning: forced cast of '[[Int?]]' to same type has no effect
219 |         var final_matrix: [[Int?]] = ([] as! [[Int?]])
220 |         var i: Int = 0

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:218:112: warning: forced cast of '[[Int?]]' to same type has no effect
216 |         let new_matrix1: [[Int?]] = (pad_matrix((matrix1 as! [[Int?]]), size, size) as! [[Int?]])
217 |         let new_matrix2: [[Int?]] = (pad_matrix((matrix2 as! [[Int?]]), size, size) as! [[Int?]])
218 |         let result_padded: [[Int?]] = (actual_strassen((new_matrix1 as! [[Int?]]), (new_matrix2 as! [[Int?]])) as! [[Int?]])
    |                                                                                                                `- warning: forced cast of '[[Int?]]' to same type has no effect
219 |         var final_matrix: [[Int?]] = ([] as! [[Int?]])
220 |         var i: Int = 0

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:221:30: warning: conditional downcast from 'Int?' to 'Int' does nothing
219 |         var final_matrix: [[Int?]] = ([] as! [[Int?]])
220 |         var i: Int = 0
221 |         while (i < (dims1[0] as? Int ?? 0)) {
    |                              `- warning: conditional downcast from 'Int?' to 'Int' does nothing
222 |             var row: [Int?] = ([] as! [Int?])
223 |             var j: Int = 0

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:224:34: warning: conditional downcast from 'Int?' to 'Int' does nothing
222 |             var row: [Int?] = ([] as! [Int?])
223 |             var j: Int = 0
224 |             while (j < (dims2[1] as? Int ?? 0)) {
    |                                  `- warning: conditional downcast from 'Int?' to 'Int' does nothing
225 |                 row = (_append(row, (result_padded[i][j] as? Int ?? 0)) as! [Int?])
226 |                 j = Int((j &+ 1))

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:225:58: warning: conditional downcast from 'Int?' to 'Int' does nothing
223 |             var j: Int = 0
224 |             while (j < (dims2[1] as? Int ?? 0)) {
225 |                 row = (_append(row, (result_padded[i][j] as? Int ?? 0)) as! [Int?])
    |                                                          `- warning: conditional downcast from 'Int?' to 'Int' does nothing
226 |                 j = Int((j &+ 1))
227 |             }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:236:48: warning: forced cast of '[[Int?]]' to same type has no effect
234 |         let matrix1: [[Int?]] = ([([2, 3, 4, 5] as! [Int?]), ([6, 4, 3, 1] as! [Int?]), ([2, 3, 6, 7] as! [Int?]), ([3, 1, 2, 4] as! [Int?]), ([2, 3, 4, 5] as! [Int?]), ([6, 4, 3, 1] as! [Int?]), ([2, 3, 6, 7] as! [Int?]), ([3, 1, 2, 4] as! [Int?]), ([2, 3, 4, 5] as! [Int?]), ([6, 2, 3, 1] as! [Int?])] as! [[Int?]])
235 |         let matrix2: [[Int?]] = ([([0, 2, 1, 1] as! [Int?]), ([16, 2, 3, 3] as! [Int?]), ([2, 2, 7, 7] as! [Int?]), ([13, 11, 22, 4] as! [Int?])] as! [[Int?]])
236 |         let res: [[Int?]] = (strassen((matrix1 as! [[Int?]]), (matrix2 as! [[Int?]])) as! [[Int?]])
    |                                                `- warning: forced cast of '[[Int?]]' to same type has no effect
237 |         print(_p("[" + res.map{ if let s = $0 as? String { "\"" + s.replacingOccurrences(of: "\"", with: "\\\"") + "\"" } else { _p($0) } }.joined(separator: ", ") + "]"))
238 |     }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:236:72: warning: forced cast of '[[Int?]]' to same type has no effect
234 |         let matrix1: [[Int?]] = ([([2, 3, 4, 5] as! [Int?]), ([6, 4, 3, 1] as! [Int?]), ([2, 3, 6, 7] as! [Int?]), ([3, 1, 2, 4] as! [Int?]), ([2, 3, 4, 5] as! [Int?]), ([6, 4, 3, 1] as! [Int?]), ([2, 3, 6, 7] as! [Int?]), ([3, 1, 2, 4] as! [Int?]), ([2, 3, 4, 5] as! [Int?]), ([6, 2, 3, 1] as! [Int?])] as! [[Int?]])
235 |         let matrix2: [[Int?]] = ([([0, 2, 1, 1] as! [Int?]), ([16, 2, 3, 3] as! [Int?]), ([2, 2, 7, 7] as! [Int?]), ([13, 11, 22, 4] as! [Int?])] as! [[Int?]])
236 |         let res: [[Int?]] = (strassen((matrix1 as! [[Int?]]), (matrix2 as! [[Int?]])) as! [[Int?]])
    |                                                                        `- warning: forced cast of '[[Int?]]' to same type has no effect
237 |         print(_p("[" + res.map{ if let s = $0 as? String { "\"" + s.replacingOccurrences(of: "\"", with: "\\\"") + "\"" } else { _p($0) } }.joined(separator: ", ") + "]"))
238 |     }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:236:87: warning: forced cast of '[[Int?]]' to same type has no effect
234 |         let matrix1: [[Int?]] = ([([2, 3, 4, 5] as! [Int?]), ([6, 4, 3, 1] as! [Int?]), ([2, 3, 6, 7] as! [Int?]), ([3, 1, 2, 4] as! [Int?]), ([2, 3, 4, 5] as! [Int?]), ([6, 4, 3, 1] as! [Int?]), ([2, 3, 6, 7] as! [Int?]), ([3, 1, 2, 4] as! [Int?]), ([2, 3, 4, 5] as! [Int?]), ([6, 2, 3, 1] as! [Int?])] as! [[Int?]])
235 |         let matrix2: [[Int?]] = ([([0, 2, 1, 1] as! [Int?]), ([16, 2, 3, 3] as! [Int?]), ([2, 2, 7, 7] as! [Int?]), ([13, 11, 22, 4] as! [Int?])] as! [[Int?]])
236 |         let res: [[Int?]] = (strassen((matrix1 as! [[Int?]]), (matrix2 as! [[Int?]])) as! [[Int?]])
    |                                                                                       `- warning: forced cast of '[[Int?]]' to same type has no effect
237 |         print(_p("[" + res.map{ if let s = $0 as? String { "\"" + s.replacingOccurrences(of: "\"", with: "\\\"") + "\"" } else { _p($0) } }.joined(separator: ", ") + "]"))
238 |     }

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:237:47: warning: cast from '[Int?]' to unrelated type 'String' always fails
235 |         let matrix2: [[Int?]] = ([([0, 2, 1, 1] as! [Int?]), ([16, 2, 3, 3] as! [Int?]), ([2, 2, 7, 7] as! [Int?]), ([13, 11, 22, 4] as! [Int?])] as! [[Int?]])
236 |         let res: [[Int?]] = (strassen((matrix1 as! [[Int?]]), (matrix2 as! [[Int?]])) as! [[Int?]])
237 |         print(_p("[" + res.map{ if let s = $0 as? String { "\"" + s.replacingOccurrences(of: "\"", with: "\\\"") + "\"" } else { _p($0) } }.joined(separator: ", ") + "]"))
    |                                               `- warning: cast from '[Int?]' to unrelated type 'String' always fails
238 |     }
239 |     _ = main()

/tmp/TestSwiftTranspiler_Algorithms_Golden299_divide_and_conquer_strassen_matrix_multiplication2468174321/001/main.swift:239:5: warning: using '_' to ignore the result of a Void-returning function is redundant
237 |         print(_p("[" + res.map{ if let s = $0 as? String { "\"" + s.replacingOccurrences(of: "\"", with: "\\\"") + "\"" } else { _p($0) } }.joined(separator: ", ") + "]"))
238 |     }
239 |     _ = main()
    |     `- warning: using '_' to ignore the result of a Void-returning function is redundant
240 |     let _benchEnd = _now()
241 |     let _benchMemEnd = _mem()
