exit status 1
/tmp/TestSwiftTranspiler_Algorithms_Golden012_backtracking_n_queens_math3413524091/001/main.swift:73:24: warning: conditional cast from 'Int' to 'Int' always succeeds
 71 |         var i: Int = 0
 72 |         while (i < Int(((xs).count))) {
 73 |             if ((xs[i] as? Int ?? 0) == x) {
    |                        `- warning: conditional cast from 'Int' to 'Int' always succeeds
 74 |                 return true
 75 |             }

/tmp/TestSwiftTranspiler_Algorithms_Golden012_backtracking_n_queens_math3413524091/001/main.swift:84:36: warning: forced cast of 'String' to same type has no effect
 82 |         var i: Int = 0
 83 |         while (i < times) {
 84 |             result = ((result + s) as! String)
    |                                    `- warning: forced cast of 'String' to same type has no effect
 85 |             i = Int((i &+ 1))
 86 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden012_backtracking_n_queens_math3413524091/001/main.swift:93:31: warning: conditional cast from 'Int' to 'Int' always succeeds
 91 |         var i: Int = 0
 92 |         while (i < Int(((pos).count))) {
 93 |             let col = (pos[i] as? Int ?? 0)
    |                               `- warning: conditional cast from 'Int' to 'Int' always succeeds
 94 |             let line = ((String(describing: _repeat(". ", col)) + "Q ") + String(describing: _repeat(". ", ((n &- 1) &- col))))
 95 |             board = (_append(board, line) as! [String])

/tmp/TestSwiftTranspiler_Algorithms_Golden012_backtracking_n_queens_math3413524091/001/main.swift:104:57: warning: forced cast of '[Int]' to same type has no effect
102 |         if (row == n) {
103 |             var single: [[String]] = ([] as! [[String]])
104 |             single = (_append(single, (build_board((pos as! [Int]), n) as! [String])) as! [[String]])
    |                                                         `- warning: forced cast of '[Int]' to same type has no effect
105 |             return single
106 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden012_backtracking_n_queens_math3413524091/001/main.swift:104:72: warning: forced cast of '[String]' to same type has no effect
102 |         if (row == n) {
103 |             var single: [[String]] = ([] as! [[String]])
104 |             single = (_append(single, (build_board((pos as! [Int]), n) as! [String])) as! [[String]])
    |                                                                        `- warning: forced cast of '[String]' to same type has no effect
105 |             return single
106 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden012_backtracking_n_queens_math3413524091/001/main.swift:110:24: warning: forced cast of '[Int]' to same type has no effect
108 |         var col: Int = 0
109 |         while (col < n) {
110 |             if ((((pos as! [Int]).contains(col)) || ((dr as! [Int]).contains((row &- col)))) || ((dl as! [Int]).contains((row &+ col)))) {
    |                        `- warning: forced cast of '[Int]' to same type has no effect
111 |                 col = Int((col &+ 1))
112 |                 continue

/tmp/TestSwiftTranspiler_Algorithms_Golden012_backtracking_n_queens_math3413524091/001/main.swift:110:58: warning: forced cast of '[Int]' to same type has no effect
108 |         var col: Int = 0
109 |         while (col < n) {
110 |             if ((((pos as! [Int]).contains(col)) || ((dr as! [Int]).contains((row &- col)))) || ((dl as! [Int]).contains((row &+ col)))) {
    |                                                          `- warning: forced cast of '[Int]' to same type has no effect
111 |                 col = Int((col &+ 1))
112 |                 continue

/tmp/TestSwiftTranspiler_Algorithms_Golden012_backtracking_n_queens_math3413524091/001/main.swift:110:102: warning: forced cast of '[Int]' to same type has no effect
108 |         var col: Int = 0
109 |         while (col < n) {
110 |             if ((((pos as! [Int]).contains(col)) || ((dr as! [Int]).contains((row &- col)))) || ((dl as! [Int]).contains((row &+ col)))) {
    |                                                                                                      `- warning: forced cast of '[Int]' to same type has no effect
111 |                 col = Int((col &+ 1))
112 |                 continue

/tmp/TestSwiftTranspiler_Algorithms_Golden012_backtracking_n_queens_math3413524091/001/main.swift:114:170: warning: forced cast of '[[String]]' to same type has no effect
112 |                 continue
113 |             }
114 |             let result: [[String]] = (depth_first_search((_append(pos, col) as! [Int]), (_append(dr, (row &- col)) as! [Int]), (_append(dl, (row &+ col)) as! [Int]), n) as! [[String]])
    |                                                                                                                                                                          `- warning: forced cast of '[[String]]' to same type has no effect
115 |             boards = ((concat((boards as! [Any?]), result) as! [Any?]) as! [[String]])
116 |             col = Int((col &+ 1))

/tmp/TestSwiftTranspiler_Algorithms_Golden012_backtracking_n_queens_math3413524091/001/main.swift:115:24: error: cannot find 'concat' in scope
113 |             }
114 |             let result: [[String]] = (depth_first_search((_append(pos, col) as! [Int]), (_append(dr, (row &- col)) as! [Int]), (_append(dl, (row &+ col)) as! [Int]), n) as! [[String]])
115 |             boards = ((concat((boards as! [Any?]), result) as! [Any?]) as! [[String]])
    |                        `- error: cannot find 'concat' in scope
116 |             col = Int((col &+ 1))
117 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden012_backtracking_n_queens_math3413524091/001/main.swift:115:39: warning: forced cast from '[[String]]' to '[Any?]' always succeeds; did you mean to use 'as'?
113 |             }
114 |             let result: [[String]] = (depth_first_search((_append(pos, col) as! [Int]), (_append(dr, (row &- col)) as! [Int]), (_append(dl, (row &+ col)) as! [Int]), n) as! [[String]])
115 |             boards = ((concat((boards as! [Any?]), result) as! [Any?]) as! [[String]])
    |                                       `- warning: forced cast from '[[String]]' to '[Any?]' always succeeds; did you mean to use 'as'?
116 |             col = Int((col &+ 1))
117 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden012_backtracking_n_queens_math3413524091/001/main.swift:121:105: warning: forced cast of '[[String]]' to same type has no effect
119 |     }
120 |     func n_queens_solution(_ n: Int) -> Int {
121 |         let boards: [[String]] = (depth_first_search(([] as! [Int]), ([] as! [Int]), ([] as! [Int]), n) as! [[String]])
    |                                                                                                         `- warning: forced cast of '[[String]]' to same type has no effect
122 |         var i: Int = 0
123 |         while (i < Int(((boards).count))) {

/tmp/TestSwiftTranspiler_Algorithms_Golden012_backtracking_n_queens_math3413524091/001/main.swift:125:41: warning: forced cast of '[String]' to same type has no effect
123 |         while (i < Int(((boards).count))) {
124 |             var j: Int = 0
125 |             while (j < Int((((boards[i] as! [String])).count))) {
    |                                         `- warning: forced cast of '[String]' to same type has no effect
126 |                 print(_p((boards[i][j] as! String)))
127 |                 j = Int((j &+ 1))

/tmp/TestSwiftTranspiler_Algorithms_Golden012_backtracking_n_queens_math3413524091/001/main.swift:126:40: warning: forced cast of 'String' to same type has no effect
124 |             var j: Int = 0
125 |             while (j < Int((((boards[i] as! [String])).count))) {
126 |                 print(_p((boards[i][j] as! String)))
    |                                        `- warning: forced cast of 'String' to same type has no effect
127 |                 j = Int((j &+ 1))
128 |             }
