exit status 1
/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:115:51: warning: conditional downcast from 'Int?' to 'Int' does nothing
113 |         var i = 0
114 |         while (i < _int(((vertices).count))) {
115 |             _ = add_vertex(&g, (_idx(vertices, i) as? Int ?? 0))
    |                                                   `- warning: conditional downcast from 'Int?' to 'Int' does nothing
116 |             i = _int((i &+ 1))
117 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:115:13: warning: using '_' to ignore the result of a Void-returning function is redundant
113 |         var i = 0
114 |         while (i < _int(((vertices).count))) {
115 |             _ = add_vertex(&g, (_idx(vertices, i) as? Int ?? 0))
    |             `- warning: using '_' to ignore the result of a Void-returning function is redundant
116 |             i = _int((i &+ 1))
117 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:120:44: warning: forced cast from '[Int]?' to '[Int]' only unwraps optionals; did you mean to use '!'?
118 |         var j = 0
119 |         while (j < _int(((edges).count))) {
120 |             let e: [Int] = (_idx(edges, j) as! [Int])
    |                                            `- warning: forced cast from '[Int]?' to '[Int]' only unwraps optionals; did you mean to use '!'?
121 |             _ = add_edge(&g, (_idx(e, 0) as? Int ?? 0), (_idx(e, 1) as? Int ?? 0))
122 |             j = _int((j &+ 1))

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:121:42: warning: conditional downcast from 'Int?' to 'Int' does nothing
119 |         while (j < _int(((edges).count))) {
120 |             let e: [Int] = (_idx(edges, j) as! [Int])
121 |             _ = add_edge(&g, (_idx(e, 0) as? Int ?? 0), (_idx(e, 1) as? Int ?? 0))
    |                                          `- warning: conditional downcast from 'Int?' to 'Int' does nothing
122 |             j = _int((j &+ 1))
123 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:121:69: warning: conditional downcast from 'Int?' to 'Int' does nothing
119 |         while (j < _int(((edges).count))) {
120 |             let e: [Int] = (_idx(edges, j) as! [Int])
121 |             _ = add_edge(&g, (_idx(e, 0) as? Int ?? 0), (_idx(e, 1) as? Int ?? 0))
    |                                                                     `- warning: conditional downcast from 'Int?' to 'Int' does nothing
122 |             j = _int((j &+ 1))
123 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:121:13: warning: using '_' to ignore the result of a Void-returning function is redundant
119 |         while (j < _int(((edges).count))) {
120 |             let e: [Int] = (_idx(edges, j) as! [Int])
121 |             _ = add_edge(&g, (_idx(e, 0) as? Int ?? 0), (_idx(e, 1) as? Int ?? 0))
    |             `- warning: using '_' to ignore the result of a Void-returning function is redundant
122 |             j = _int((j &+ 1))
123 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:130:31: warning: forced cast of 'Graph' to same type has no effect
128 |     }
129 |     func add_vertex(_ g: inout Graph, _ v: Int) {
130 |         if contains_vertex((g as! Graph), v) {
    |                               `- warning: forced cast of 'Graph' to same type has no effect
131 |             _ = fatalError("vertex already exists")
132 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:136:64: warning: forced cast from '[Int]?' to '[Int]' only unwraps optionals; did you mean to use '!'?
134 |         var i = 0
135 |         while (i < _int(((matrix).count))) {
136 |             matrix = _set(matrix, i, (_append((_idx(matrix, i) as! [Int]), 0) as! [Int]))
    |                                                                `- warning: forced cast from '[Int]?' to '[Int]' only unwraps optionals; did you mean to use '!'?
137 |             i = _int((i &+ 1))
138 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:146:32: warning: forced cast of '[[Int]]' to same type has no effect
144 |         }
145 |         matrix = (_append(matrix, row) as! [[Int]])
146 |         g.adj_matrix = (matrix as! [[Int]])
    |                                `- warning: forced cast of '[[Int]]' to same type has no effect
147 |         var idx_map = g.vertex_to_index
148 |         idx_map = _set(idx_map, v, _int((_int(((matrix).count)) &- 1)))

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:149:38: warning: forced cast of '[Int : Int]' to same type has no effect
147 |         var idx_map = g.vertex_to_index
148 |         idx_map = _set(idx_map, v, _int((_int(((matrix).count)) &- 1)))
149 |         g.vertex_to_index = (idx_map as! [Int: Int])
    |                                      `- warning: forced cast of '[Int : Int]' to same type has no effect
150 |     }
151 |     func remove_key(_ m: [Int: Int], _ k: Int) -> [Int: Int] {

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:155:51: warning: conditional cast from 'Int' to 'Int' always succeeds
153 |         for key in m.keys.sorted() {
154 |             if (key != k) {
155 |                 out = _set(out, key, (m[key] ?? 0 as? Int ?? 0))
    |                                                   `- warning: conditional cast from 'Int' to 'Int' always succeeds
156 |             }
157 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:163:36: warning: conditional cast from 'Int' to 'Int' always succeeds
161 |         var out: [Int: Int] = ([:] as! [Int: Int])
162 |         for key in m.keys.sorted() {
163 |             let idx = (m[key] ?? 0 as? Int ?? 0)
    |                                    `- warning: conditional cast from 'Int' to 'Int' always succeeds
164 |             if (idx > start) {
165 |                 out = _set(out, key, _int((idx &- 1)))

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:173:33: warning: forced cast of 'Graph' to same type has no effect
171 |     }
172 |     func remove_vertex(_ g: inout Graph, _ v: Int) {
173 |         if (!contains_vertex((g as! Graph), v)) {
    |                                 `- warning: forced cast of 'Graph' to same type has no effect
174 |             _ = fatalError("vertex does not exist")
175 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:176:27: error: cannot convert value of type '[Int : Int]' to expected argument type '[[Int : Int]]'
174 |             _ = fatalError("vertex does not exist")
175 |         }
176 |         let idx = (_idx(g.vertex_to_index, v) as? Int ?? 0)
    |                           `- error: cannot convert value of type '[Int : Int]' to expected argument type '[[Int : Int]]'
177 |         var new_matrix: [[Int]] = ([] as! [[Int]])
178 |         var i = 0

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:176:47: warning: cast from '[Int : Int]?' to unrelated type 'Int' always fails
174 |             _ = fatalError("vertex does not exist")
175 |         }
176 |         let idx = (_idx(g.vertex_to_index, v) as? Int ?? 0)
    |                                               `- warning: cast from '[Int : Int]?' to unrelated type 'Int' always fails
177 |         var new_matrix: [[Int]] = ([] as! [[Int]])
178 |         var i = 0

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:181:57: warning: forced cast from '[Int]?' to '[Int]' only unwraps optionals; did you mean to use '!'?
179 |         while (i < _int(((g.adj_matrix).count))) {
180 |             if (i != idx) {
181 |                 let row: [Int] = (_idx(g.adj_matrix, i) as! [Int])
    |                                                         `- warning: forced cast from '[Int]?' to '[Int]' only unwraps optionals; did you mean to use '!'?
182 |                 var new_row: [Int] = ([] as! [Int])
183 |                 var j = 0

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:186:67: warning: conditional downcast from 'Int?' to 'Int' does nothing
184 |                 while (j < _int(((row).count))) {
185 |                     if (j != idx) {
186 |                         new_row = (_append(new_row, (_idx(row, j) as? Int ?? 0)) as! [Int])
    |                                                                   `- warning: conditional downcast from 'Int?' to 'Int' does nothing
187 |                     }
188 |                     j = _int((j &+ 1))

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:194:36: warning: forced cast of '[[Int]]' to same type has no effect
192 |             i = _int((i &+ 1))
193 |         }
194 |         g.adj_matrix = (new_matrix as! [[Int]])
    |                                    `- warning: forced cast of '[[Int]]' to same type has no effect
195 |         var m = (remove_key((g.vertex_to_index as! [Int: Int]), v) as! [Int: Int])
196 |         g.vertex_to_index = (decrement_indices((m as! [Int: Int]), idx) as! [Int: Int])

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:195:48: warning: forced cast of '[Int : Int]' to same type has no effect
193 |         }
194 |         g.adj_matrix = (new_matrix as! [[Int]])
195 |         var m = (remove_key((g.vertex_to_index as! [Int: Int]), v) as! [Int: Int])
    |                                                `- warning: forced cast of '[Int : Int]' to same type has no effect
196 |         g.vertex_to_index = (decrement_indices((m as! [Int: Int]), idx) as! [Int: Int])
197 |     }

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:195:68: warning: forced cast of '[Int : Int]' to same type has no effect
193 |         }
194 |         g.adj_matrix = (new_matrix as! [[Int]])
195 |         var m = (remove_key((g.vertex_to_index as! [Int: Int]), v) as! [Int: Int])
    |                                                                    `- warning: forced cast of '[Int : Int]' to same type has no effect
196 |         g.vertex_to_index = (decrement_indices((m as! [Int: Int]), idx) as! [Int: Int])
197 |     }

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:196:51: warning: forced cast of '[Int : Int]' to same type has no effect
194 |         g.adj_matrix = (new_matrix as! [[Int]])
195 |         var m = (remove_key((g.vertex_to_index as! [Int: Int]), v) as! [Int: Int])
196 |         g.vertex_to_index = (decrement_indices((m as! [Int: Int]), idx) as! [Int: Int])
    |                                                   `- warning: forced cast of '[Int : Int]' to same type has no effect
197 |     }
198 |     func add_edge(_ g: inout Graph, _ u: Int, _ v: Int) {

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:196:73: warning: forced cast of '[Int : Int]' to same type has no effect
194 |         g.adj_matrix = (new_matrix as! [[Int]])
195 |         var m = (remove_key((g.vertex_to_index as! [Int: Int]), v) as! [Int: Int])
196 |         g.vertex_to_index = (decrement_indices((m as! [Int: Int]), idx) as! [Int: Int])
    |                                                                         `- warning: forced cast of '[Int : Int]' to same type has no effect
197 |     }
198 |     func add_edge(_ g: inout Graph, _ u: Int, _ v: Int) {

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:199:34: warning: forced cast of 'Graph' to same type has no effect
197 |     }
198 |     func add_edge(_ g: inout Graph, _ u: Int, _ v: Int) {
199 |         if (!(contains_vertex((g as! Graph), u) && contains_vertex((g as! Graph), v))) {
    |                                  `- warning: forced cast of 'Graph' to same type has no effect
200 |             _ = fatalError("missing vertex")
201 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:199:71: warning: forced cast of 'Graph' to same type has no effect
197 |     }
198 |     func add_edge(_ g: inout Graph, _ u: Int, _ v: Int) {
199 |         if (!(contains_vertex((g as! Graph), u) && contains_vertex((g as! Graph), v))) {
    |                                                                       `- warning: forced cast of 'Graph' to same type has no effect
200 |             _ = fatalError("missing vertex")
201 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:202:25: error: cannot convert value of type '[Int : Int]' to expected argument type '[[Int : Int]]'
200 |             _ = fatalError("missing vertex")
201 |         }
202 |         let i = (_idx(g.vertex_to_index, u) as? Int ?? 0)
    |                         `- error: cannot convert value of type '[Int : Int]' to expected argument type '[[Int : Int]]'
203 |         let j = (_idx(g.vertex_to_index, v) as? Int ?? 0)
204 |         var matrix = g.adj_matrix

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:202:45: warning: cast from '[Int : Int]?' to unrelated type 'Int' always fails
200 |             _ = fatalError("missing vertex")
201 |         }
202 |         let i = (_idx(g.vertex_to_index, u) as? Int ?? 0)
    |                                             `- warning: cast from '[Int : Int]?' to unrelated type 'Int' always fails
203 |         let j = (_idx(g.vertex_to_index, v) as? Int ?? 0)
204 |         var matrix = g.adj_matrix

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:203:25: error: cannot convert value of type '[Int : Int]' to expected argument type '[[Int : Int]]'
201 |         }
202 |         let i = (_idx(g.vertex_to_index, u) as? Int ?? 0)
203 |         let j = (_idx(g.vertex_to_index, v) as? Int ?? 0)
    |                         `- error: cannot convert value of type '[Int : Int]' to expected argument type '[[Int : Int]]'
204 |         var matrix = g.adj_matrix
205 |         var _tmp5 = (_idx(matrix, i) as! [Int])

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:203:45: warning: cast from '[Int : Int]?' to unrelated type 'Int' always fails
201 |         }
202 |         let i = (_idx(g.vertex_to_index, u) as? Int ?? 0)
203 |         let j = (_idx(g.vertex_to_index, v) as? Int ?? 0)
    |                                             `- warning: cast from '[Int : Int]?' to unrelated type 'Int' always fails
204 |         var matrix = g.adj_matrix
205 |         var _tmp5 = (_idx(matrix, i) as! [Int])

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:205:38: warning: forced cast from '[Int]?' to '[Int]' only unwraps optionals; did you mean to use '!'?
203 |         let j = (_idx(g.vertex_to_index, v) as? Int ?? 0)
204 |         var matrix = g.adj_matrix
205 |         var _tmp5 = (_idx(matrix, i) as! [Int])
    |                                      `- warning: forced cast from '[Int]?' to '[Int]' only unwraps optionals; did you mean to use '!'?
206 |         _tmp5 = _set(_tmp5, j, 1)
207 |         matrix = _set(matrix, i, (_tmp5 as! [Int]))

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:209:42: warning: forced cast from '[Int]?' to '[Int]' only unwraps optionals; did you mean to use '!'?
207 |         matrix = _set(matrix, i, (_tmp5 as! [Int]))
208 |         if (!g.directed) {
209 |             var _tmp6 = (_idx(matrix, j) as! [Int])
    |                                          `- warning: forced cast from '[Int]?' to '[Int]' only unwraps optionals; did you mean to use '!'?
210 |             _tmp6 = _set(_tmp6, i, 1)
211 |             matrix = _set(matrix, j, (_tmp6 as! [Int]))

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:213:32: warning: forced cast of '[[Int]]' to same type has no effect
211 |             matrix = _set(matrix, j, (_tmp6 as! [Int]))
212 |         }
213 |         g.adj_matrix = (matrix as! [[Int]])
    |                                `- warning: forced cast of '[[Int]]' to same type has no effect
214 |     }
215 |     func remove_edge(_ g: inout Graph, _ u: Int, _ v: Int) {

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:216:34: warning: forced cast of 'Graph' to same type has no effect
214 |     }
215 |     func remove_edge(_ g: inout Graph, _ u: Int, _ v: Int) {
216 |         if (!(contains_vertex((g as! Graph), u) && contains_vertex((g as! Graph), v))) {
    |                                  `- warning: forced cast of 'Graph' to same type has no effect
217 |             _ = fatalError("missing vertex")
218 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:216:71: warning: forced cast of 'Graph' to same type has no effect
214 |     }
215 |     func remove_edge(_ g: inout Graph, _ u: Int, _ v: Int) {
216 |         if (!(contains_vertex((g as! Graph), u) && contains_vertex((g as! Graph), v))) {
    |                                                                       `- warning: forced cast of 'Graph' to same type has no effect
217 |             _ = fatalError("missing vertex")
218 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:219:25: error: cannot convert value of type '[Int : Int]' to expected argument type '[[Int : Int]]'
217 |             _ = fatalError("missing vertex")
218 |         }
219 |         let i = (_idx(g.vertex_to_index, u) as? Int ?? 0)
    |                         `- error: cannot convert value of type '[Int : Int]' to expected argument type '[[Int : Int]]'
220 |         let j = (_idx(g.vertex_to_index, v) as? Int ?? 0)
221 |         var matrix = g.adj_matrix

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:219:45: warning: cast from '[Int : Int]?' to unrelated type 'Int' always fails
217 |             _ = fatalError("missing vertex")
218 |         }
219 |         let i = (_idx(g.vertex_to_index, u) as? Int ?? 0)
    |                                             `- warning: cast from '[Int : Int]?' to unrelated type 'Int' always fails
220 |         let j = (_idx(g.vertex_to_index, v) as? Int ?? 0)
221 |         var matrix = g.adj_matrix

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:220:25: error: cannot convert value of type '[Int : Int]' to expected argument type '[[Int : Int]]'
218 |         }
219 |         let i = (_idx(g.vertex_to_index, u) as? Int ?? 0)
220 |         let j = (_idx(g.vertex_to_index, v) as? Int ?? 0)
    |                         `- error: cannot convert value of type '[Int : Int]' to expected argument type '[[Int : Int]]'
221 |         var matrix = g.adj_matrix
222 |         var _tmp7 = (_idx(matrix, i) as! [Int])

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:220:45: warning: cast from '[Int : Int]?' to unrelated type 'Int' always fails
218 |         }
219 |         let i = (_idx(g.vertex_to_index, u) as? Int ?? 0)
220 |         let j = (_idx(g.vertex_to_index, v) as? Int ?? 0)
    |                                             `- warning: cast from '[Int : Int]?' to unrelated type 'Int' always fails
221 |         var matrix = g.adj_matrix
222 |         var _tmp7 = (_idx(matrix, i) as! [Int])

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:222:38: warning: forced cast from '[Int]?' to '[Int]' only unwraps optionals; did you mean to use '!'?
220 |         let j = (_idx(g.vertex_to_index, v) as? Int ?? 0)
221 |         var matrix = g.adj_matrix
222 |         var _tmp7 = (_idx(matrix, i) as! [Int])
    |                                      `- warning: forced cast from '[Int]?' to '[Int]' only unwraps optionals; did you mean to use '!'?
223 |         _tmp7 = _set(_tmp7, j, 0)
224 |         matrix = _set(matrix, i, (_tmp7 as! [Int]))

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:226:42: warning: forced cast from '[Int]?' to '[Int]' only unwraps optionals; did you mean to use '!'?
224 |         matrix = _set(matrix, i, (_tmp7 as! [Int]))
225 |         if (!g.directed) {
226 |             var _tmp8 = (_idx(matrix, j) as! [Int])
    |                                          `- warning: forced cast from '[Int]?' to '[Int]' only unwraps optionals; did you mean to use '!'?
227 |             _tmp8 = _set(_tmp8, i, 0)
228 |             matrix = _set(matrix, j, (_tmp8 as! [Int]))

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:230:32: warning: forced cast of '[[Int]]' to same type has no effect
228 |             matrix = _set(matrix, j, (_tmp8 as! [Int]))
229 |         }
230 |         g.adj_matrix = (matrix as! [[Int]])
    |                                `- warning: forced cast of '[[Int]]' to same type has no effect
231 |     }
232 |     func contains_edge(_ g: Graph, _ u: Int, _ v: Int) -> Bool {

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:233:34: warning: forced cast of 'Graph' to same type has no effect
231 |     }
232 |     func contains_edge(_ g: Graph, _ u: Int, _ v: Int) -> Bool {
233 |         if (!(contains_vertex((g as! Graph), u) && contains_vertex((g as! Graph), v))) {
    |                                  `- warning: forced cast of 'Graph' to same type has no effect
234 |             _ = fatalError("missing vertex")
235 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:233:71: warning: forced cast of 'Graph' to same type has no effect
231 |     }
232 |     func contains_edge(_ g: Graph, _ u: Int, _ v: Int) -> Bool {
233 |         if (!(contains_vertex((g as! Graph), u) && contains_vertex((g as! Graph), v))) {
    |                                                                       `- warning: forced cast of 'Graph' to same type has no effect
234 |             _ = fatalError("missing vertex")
235 |         }

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:236:25: error: cannot convert value of type '[Int : Int]' to expected argument type '[[Int : Int]]'
234 |             _ = fatalError("missing vertex")
235 |         }
236 |         let i = (_idx(g.vertex_to_index, u) as? Int ?? 0)
    |                         `- error: cannot convert value of type '[Int : Int]' to expected argument type '[[Int : Int]]'
237 |         let j = (_idx(g.vertex_to_index, v) as? Int ?? 0)
238 |         let matrix: [[Int]] = g.adj_matrix

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:236:45: warning: cast from '[Int : Int]?' to unrelated type 'Int' always fails
234 |             _ = fatalError("missing vertex")
235 |         }
236 |         let i = (_idx(g.vertex_to_index, u) as? Int ?? 0)
    |                                             `- warning: cast from '[Int : Int]?' to unrelated type 'Int' always fails
237 |         let j = (_idx(g.vertex_to_index, v) as? Int ?? 0)
238 |         let matrix: [[Int]] = g.adj_matrix

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:237:25: error: cannot convert value of type '[Int : Int]' to expected argument type '[[Int : Int]]'
235 |         }
236 |         let i = (_idx(g.vertex_to_index, u) as? Int ?? 0)
237 |         let j = (_idx(g.vertex_to_index, v) as? Int ?? 0)
    |                         `- error: cannot convert value of type '[Int : Int]' to expected argument type '[[Int : Int]]'
238 |         let matrix: [[Int]] = g.adj_matrix
239 |         return ((_idx(_idx(matrix, i)!, j) as? Int ?? 0) == 1)

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:237:45: warning: cast from '[Int : Int]?' to unrelated type 'Int' always fails
235 |         }
236 |         let i = (_idx(g.vertex_to_index, u) as? Int ?? 0)
237 |         let j = (_idx(g.vertex_to_index, v) as? Int ?? 0)
    |                                             `- warning: cast from '[Int : Int]?' to unrelated type 'Int' always fails
238 |         let matrix: [[Int]] = g.adj_matrix
239 |         return ((_idx(_idx(matrix, i)!, j) as? Int ?? 0) == 1)

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:239:44: warning: conditional downcast from 'Int?' to 'Int' does nothing
237 |         let j = (_idx(g.vertex_to_index, v) as? Int ?? 0)
238 |         let matrix: [[Int]] = g.adj_matrix
239 |         return ((_idx(_idx(matrix, i)!, j) as? Int ?? 0) == 1)
    |                                            `- warning: conditional downcast from 'Int?' to 'Int' does nothing
240 |     }
241 |     func clear_graph(_ g: inout Graph) {

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:251:9: warning: forced cast of '[Int]' to same type has no effect
249 |         _arr = _append(_arr, 3)
250 |         return _arr
251 |     }() as! [Int]), ({
    |         `- warning: forced cast of '[Int]' to same type has no effect
252 |         var _arr: [[Int]] = []
253 |         _arr = _append(_arr, ({

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:258:13: warning: forced cast of '[Int]' to same type has no effect
256 |             _arr = _append(_arr, 2)
257 |             return _arr
258 |         }() as! [Int]))
    |             `- warning: forced cast of '[Int]' to same type has no effect
259 |         _arr = _append(_arr, ({
260 |             var _arr: [Int] = []

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:264:13: warning: forced cast of '[Int]' to same type has no effect
262 |             _arr = _append(_arr, 3)
263 |             return _arr
264 |         }() as! [Int]))
    |             `- warning: forced cast of '[Int]' to same type has no effect
265 |         return _arr
266 |     }() as! [[Int]]), false)

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:266:9: warning: forced cast of '[[Int]]' to same type has no effect
264 |         }() as! [Int]))
265 |         return _arr
266 |     }() as! [[Int]]), false)
    |         `- warning: forced cast of '[[Int]]' to same type has no effect
267 |     print(_p("[" + g.adj_matrix.map{ _p($0).replacingOccurrences(of: ", ", with: " ") }.joined(separator: " ") + "]"))
268 |     print(_p(_p(contains_edge((g as! Graph), 1, 2))))

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:268:34: warning: forced cast of 'Graph' to same type has no effect
266 |     }() as! [[Int]]), false)
267 |     print(_p("[" + g.adj_matrix.map{ _p($0).replacingOccurrences(of: ", ", with: " ") }.joined(separator: " ") + "]"))
268 |     print(_p(_p(contains_edge((g as! Graph), 1, 2))))
    |                                  `- warning: forced cast of 'Graph' to same type has no effect
269 |     print(_p(_p(contains_edge((g as! Graph), 2, 1))))
270 |     _ = remove_edge(&g, 1, 2)

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:269:34: warning: forced cast of 'Graph' to same type has no effect
267 |     print(_p("[" + g.adj_matrix.map{ _p($0).replacingOccurrences(of: ", ", with: " ") }.joined(separator: " ") + "]"))
268 |     print(_p(_p(contains_edge((g as! Graph), 1, 2))))
269 |     print(_p(_p(contains_edge((g as! Graph), 2, 1))))
    |                                  `- warning: forced cast of 'Graph' to same type has no effect
270 |     _ = remove_edge(&g, 1, 2)
271 |     print(_p(_p(contains_edge((g as! Graph), 1, 2))))

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:270:5: warning: using '_' to ignore the result of a Void-returning function is redundant
268 |     print(_p(_p(contains_edge((g as! Graph), 1, 2))))
269 |     print(_p(_p(contains_edge((g as! Graph), 2, 1))))
270 |     _ = remove_edge(&g, 1, 2)
    |     `- warning: using '_' to ignore the result of a Void-returning function is redundant
271 |     print(_p(_p(contains_edge((g as! Graph), 1, 2))))
272 |     _ = remove_vertex(&g, 2)

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:271:34: warning: forced cast of 'Graph' to same type has no effect
269 |     print(_p(_p(contains_edge((g as! Graph), 2, 1))))
270 |     _ = remove_edge(&g, 1, 2)
271 |     print(_p(_p(contains_edge((g as! Graph), 1, 2))))
    |                                  `- warning: forced cast of 'Graph' to same type has no effect
272 |     _ = remove_vertex(&g, 2)
273 |     print(_p("[" + g.adj_matrix.map{ _p($0).replacingOccurrences(of: ", ", with: " ") }.joined(separator: " ") + "]"))

/tmp/TestSwiftTranspiler_Algorithms_Golden430_graphs_graph_adjacency_matrix871058589/001/main.swift:272:5: warning: using '_' to ignore the result of a Void-returning function is redundant
270 |     _ = remove_edge(&g, 1, 2)
271 |     print(_p(_p(contains_edge((g as! Graph), 1, 2))))
272 |     _ = remove_vertex(&g, 2)
    |     `- warning: using '_' to ignore the result of a Void-returning function is redundant
273 |     print(_p("[" + g.adj_matrix.map{ _p($0).replacingOccurrences(of: ", ", with: " ") }.joined(separator: " ") + "]"))
274 |     let _benchEnd = _now()
