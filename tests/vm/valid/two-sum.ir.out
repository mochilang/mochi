func main (regs=4)
  // let result = twoSum([2,7,11,15], 9)
  Const        r0, [2, 7, 11, 15]
  Const        r1, 9
  Call2        r2, twoSum, r0, r1
  // print(result[0])
  Const        r1, 0
  Index        r3, r2, r1
  Print        r3
  // print(result[1])
  Const        r3, 1
  Index        r1, r2, r3
  Print        r1
  Return       r0

  // fun twoSum(nums: list<int>, target: int): list<int> {
func twoSum (regs=8)
  // let n = len(nums)
  Len          r2, r0
  // for i in 0..n {
  Const        r3, 0
L2:
  Less         r4, r3, r2
  JumpIfFalse  r4, L0
  // for j in i+1..n {
  Const        r4, 1
L0:
  AddInt       r5, r3, r4
  Less         r4, r5, r2
  JumpIfFalse  r4, L1
  // if nums[i] + nums[j] == target {
  Index        r4, r0, r3
  Index        r6, r0, r5
  Add          r7, r4, r6
  Equal        r6, r7, r1
  JumpIfFalse  r6, L1
  // return [i, j]
  Move         r6, r3
  Move         r7, r5
  MakeList     r5, 2, r6
  Return       r5
L1:
  // for i in 0..n {
  Add          r3, r3, r5
  Jump         L2
  // return [-1, -1]
  Const        r5, [-1, -1]
  Return       r5
