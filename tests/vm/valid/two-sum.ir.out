func main (regs=10)
  // let result = twoSum([2,7,11,15], 9)
  Const        r2, [2, 7, 11, 15]
  Const        r3, 9
  Call2        r4, twoSum, r2, r3
  // print(result[0])
  Const        r6, 0
  Index        r7, r4, r6
  Print        r7
  // print(result[1])
  Const        r8, 1
  Index        r9, r4, r8
  Print        r9
  Return       r2

  // fun twoSum(nums: list<int>, target: int): list<int> {
func twoSum (regs=26)
  // let n = len(nums)
  Len          r2, r0
  // for i in 0..n {
  Const        r4, 0
  Less         r6, r4, r2
  JumpIfFalse  r6, L0
L4:
  // for j in i+1..n {
  Const        r7, 1
  AddInt       r8, r4, r7
  Less         r10, r8, r2
  JumpIfFalse  r10, L1
  // if nums[i] + nums[j] == target {
  Index        r11, r0, r4
L3:
  Index        r12, r0, r8
  Add          r13, r11, r12
  Equal        r14, r13, r1
  JumpIfFalse  r14, L2
  // return [i, j]
  Move         r15, r4
  Move         r16, r8
  MakeList     r17, 2, r15
  Return       r17
  // for j in i+1..n {
  Jump         L3
  // for i in 0..n {
  Const        r20, 1
  Add          r21, r4, r20
L2:
  Move         r5, r21
L1:
  Jump         L4
  // return [-1, -1]
  Const        r22, [-1, -1]
  Return       r22
  Return       r0
