func main (regs=10)
  // let result = twoSum([2,7,11,15], 9)
  Const        r0, [2, 7, 11, 15]
  Const        r1, 9
  Call2        r4, twoSum, r0, r1
  Move         r5, r4
  // print(result[0])
  Const        r6, 0
  Index        r7, r5, r6
  Print        r7
  // print(result[1])
  Const        r8, 1
  Index        r9, r5, r8
  Print        r9
  Return       r0

  // fun twoSum(nums: list<int>, target: int): list<int> {
func twoSum (regs=23)
  // let n = len(nums)
  Len          r2, r0
  Move         r3, r2
  // for i in 0..n {
  Const        r5, 0
L4:
  Less         r6, r5, r3
  JumpIfFalse  r6, L0
  // for j in i+1..n {
  Const        r9, 1
L3:
  Less         r10, r9, r3
  JumpIfFalse  r10, L1
  // if nums[i] + nums[j] == target {
  Index        r11, r0, r5
  Index        r12, r0, r9
  Add          r13, r11, r12
  Equal        r14, r13, r1
  JumpIfFalse  r14, L2
  // return [i, j]
  Const        r15, 0
  Const        r16, 1
  MakeList     r17, 2, r15
  Return       r17
L2:
  // for j in i+1..n {
  Jump         L3
L1:
  // for i in 0..n {
  Const        r5, 1
  Jump         L4
L0:
  // return [-1, -1]
  Const        r22, [-1, -1]
  Return       r22
  Return       r0
