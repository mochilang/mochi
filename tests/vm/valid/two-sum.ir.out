func main (regs=4)
  // let result = twoSum([2,7,11,15], 9)
  Const        r0, [2, 7, 11, 15]
  Move         r1, r0
  Const        r0, 9
  Move         r2, r0
  Call2        r0, twoSum, r1, r2
  Move         r2, r0
  // print(result[0])
  Const        r0, 0
  Index        r3, r2, r0
  Print        r3
  // print(result[1])
  Const        r3, 1
  Index        r0, r2, r3
  Print        r0
  Return       r1

  // fun twoSum(nums: list<int>, target: int): list<int> {
func twoSum (regs=7)
  // let n = len(nums)
  Len          r0, r1
  Move         r2, r0
  // for i in 0..n {
  Const        r0, 0
  Move         r3, r0
L4:
  Less         r0, r3, r2
  JumpIfFalse  r0, L0
  // for j in i+1..n {
  Const        r0, 1
  Add          r4, r3, r0
  Move         r0, r4
L3:
  Less         r4, r0, r2
  JumpIfFalse  r4, L1
  // if nums[i] + nums[j] == target {
  Index        r4, r1, r3
  Index        r2, r1, r0
  Add          r5, r4, r2
  Equal        r2, r5, r4
  JumpIfFalse  r2, L2
  // return [i, j]
  Move         r2, r3
  Move         r4, r0
  MakeList     r5, 2, r2
  Return       r5
L2:
  // for j in i+1..n {
  Const        r5, 1
  Add          r4, r0, r5
  Move         r0, r4
  Jump         L3
L1:
  // for i in 0..n {
  Const        r4, 1
  Add          r0, r3, r4
  Move         r3, r0
  Jump         L4
L0:
  // return [-1, -1]
  Const        r0, [-1, -1]
  Return       r0
  Return       r1
