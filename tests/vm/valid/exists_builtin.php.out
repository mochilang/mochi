<?php
$data = [1, 2];
$flag = ((is_object((function() use ($data) {
	$res = [];
	foreach ((is_string($data) ? str_split($data) : $data) as $x) {
		if (!(($x == 1))) { continue; }
		$res[] = $x;
	}
	return $res;
})()) && property_exists((function() use ($data) {
	$res = [];
	foreach ((is_string($data) ? str_split($data) : $data) as $x) {
		if (!(($x == 1))) { continue; }
		$res[] = $x;
	}
	return $res;
})(), 'Items')) ? count((function() use ($data) {
	$res = [];
	foreach ((is_string($data) ? str_split($data) : $data) as $x) {
		if (!(($x == 1))) { continue; }
		$res[] = $x;
	}
	return $res;
})()->Items) : (is_array((function() use ($data) {
	$res = [];
	foreach ((is_string($data) ? str_split($data) : $data) as $x) {
		if (!(($x == 1))) { continue; }
		$res[] = $x;
	}
	return $res;
})()) ? count((function() use ($data) {
	$res = [];
	foreach ((is_string($data) ? str_split($data) : $data) as $x) {
		if (!(($x == 1))) { continue; }
		$res[] = $x;
	}
	return $res;
})()) : (is_string((function() use ($data) {
	$res = [];
	foreach ((is_string($data) ? str_split($data) : $data) as $x) {
		if (!(($x == 1))) { continue; }
		$res[] = $x;
	}
	return $res;
})()) ? strlen((function() use ($data) {
	$res = [];
	foreach ((is_string($data) ? str_split($data) : $data) as $x) {
		if (!(($x == 1))) { continue; }
		$res[] = $x;
	}
	return $res;
})()) : 0))) > 0;
_print($flag);

function _print(...$args) {
    $parts = [];
    foreach ($args as $a) {
        if (is_null($a)) { $parts[] = '<nil>'; }
        elseif (is_array($a) || is_object($a)) { $parts[] = json_encode($a); } else { $parts[] = strval($a); }
    }
    echo implode(' ', $parts), PHP_EOL;
}
