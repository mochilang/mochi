func main (regs=56)
  // let products = [
  Const        r0, [{"name": "Laptop", "price": 1500}, {"name": "Smartphone", "price": 900}, {"name": "Tablet", "price": 600}, {"name": "Monitor", "price": 300}, {"name": "Keyboard", "price": 100}, {"name": "Mouse", "price": 50}, {"name": "Headphones", "price": 200}]
  Move         r1, r0
  // let expensive = from p in products
  Const        r2, []
  IterPrep     r3, r1
  Len          r4, r3
  Const        r5, 0
L1:
  Less         r6, r5, r4
  JumpIfFalse  r6, L0
  Index        r7, r3, r5
  // sort by -p.price
  Const        r9, "price"
  Index        r10, r7, r9
  Neg          r11, r10
  Move         r12, r11
  // let expensive = from p in products
  Move         r13, r7
  MakeList     r14, 2, r12
  Append       r15, r2, r14
  Const        r16, 1
  Add          r17, r5, r16
  Jump         L1
  // sort by -p.price
  Sort         r18, r15
  // skip 1
  Const        r19, 1
  // let expensive = from p in products
  Const        r20, nil
L0:
  Slice        r21, r18, r19, r20
  Const        r22, 0
  // take 3
  Const        r23, 3
  // let expensive = from p in products
  Slice        r24, r21, r22, r23
  // print("--- Top products (excluding most expensive) ---")
  Const        r26, "--- Top products (excluding most expensive) ---"
  Print        r26
  // for item in expensive {
  IterPrep     r27, r24
  Len          r28, r27
  Const        r29, 0
  Less         r30, r29, r28
  JumpIfFalse  r30, L2
  Index        r31, r27, r29
  // print(item.name, "costs $", item.price)
  Const        r36, "name"
  Index        r37, r31, r36
  Move         r33, r37
  Const        r38, "costs $"
L3:
  Move         r34, r38
  Const        r39, "price"
  Index        r40, r31, r39
  Move         r35, r40
  PrintN       r33, 3, r33
  // for item in expensive {
  Const        r41, 1
  Add          r42, r29, r41
  Jump         L3
  Return       r0
