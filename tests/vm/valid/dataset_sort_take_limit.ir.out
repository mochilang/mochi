func main (regs=39)
  // let products = [
  Const        r0, [{"name": "Laptop", "price": 1500}, {"name": "Smartphone", "price": 900}, {"name": "Tablet", "price": 600}, {"name": "Monitor", "price": 300}, {"name": "Keyboard", "price": 100}, {"name": "Mouse", "price": 50}, {"name": "Headphones", "price": 200}]
  // let expensive = from p in products
  Const        r1, []
  // sort by -p.price
  Const        r2, "price"
  // let expensive = from p in products
  IterPrep     r3, r0
  Len          r4, r3
  Const        r6, 0
  Move         r5, r6
L1:
  LessInt      r7, r5, r4
  JumpIfFalse  r7, L0
  Index        r9, r3, r5
  // sort by -p.price
  Index        r10, r9, r2
  Neg          r12, r10
  // let expensive = from p in products
  Move         r13, r9
  MakeList     r14, 2, r12
  Append       r1, r1, r14
  Const        r16, 1
  AddInt       r5, r5, r16
  Jump         L1
L0:
  // sort by -p.price
  Sort         r1, r1
  // let expensive = from p in products
  Const        r18, nil
  Slice        r1, r1, r16, r18
  Move         r20, r6
  // take 3
  Const        r21, 3
  // let expensive = from p in products
  Slice        r1, r1, r20, r21
  // print("--- Top products (excluding most expensive) ---")
  Const        r23, "--- Top products (excluding most expensive) ---"
  Print        r23
  // for item in expensive {
  IterPrep     r24, r1
  Len          r25, r24
  Move         r26, r6
L3:
  Less         r27, r26, r25
  JumpIfFalse  r27, L2
  Index        r29, r24, r26
  // print(item.name, "costs $", item.price)
  Const        r33, "name"
  Index        r30, r29, r33
  Const        r31, "costs $"
  Index        r32, r29, r2
  PrintN       r30, 3, r30
  // for item in expensive {
  Add          r26, r26, r16
  Jump         L3
L2:
  Return       r0
