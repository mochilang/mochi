let data: list<map<string, any>> = [{"tag": "a", "val": 1}, {"tag": "a", "val": 2}, {"tag": "b", "val": 3}]
let groups: list<_Group> = _group_by(data, (d) => d["tag"]).map((g) => g).toList()
let tmp: List = []
let result: List = (() {
let _res = []
let items = List.from(_res)
let r = rA
let keyA = r.tag
let keyB = r.tag
let _res: return
let groups = <String,_Group>{}
let order = <String>[]
let key = keyfn(it)
let ks = key.toString()
let g = groups[ks]
type _Group {
  key
}
fun main() {
  for (var g in groups) {
    let total: int = 0
    for (var x in g.items) {
      total = ((total + x.val)).toInt()
    }
    tmp = append(tmp, {"tag": g.key, "total": total})
  }
  print(result)
}
