func main (regs=82)
  // let people = [
  Const        r0, [{"age": 30, "city": "Paris", "name": "Alice"}, {"age": 15, "city": "Hanoi", "name": "Bob"}, {"age": 65, "city": "Paris", "name": "Charlie"}, {"age": 45, "city": "Hanoi", "name": "Diana"}, {"age": 70, "city": "Paris", "name": "Eve"}, {"age": 22, "city": "Hanoi", "name": "Frank"}]
  // let stats = from person in people
  Const        r1, []
  IterPrep     r2, r0
  Len          r3, r2
  Const        r4, 0
  MakeMap      r5, 0, r0
  Const        r6, []
L2:
  Less         r7, r4, r3
  JumpIfFalse  r7, L0
  Index        r8, r2, r4
  Move         r9, r8
  // group by person.city into g
  Const        r10, "city"
  Index        r11, r9, r10
  Str          r12, r11
  In           r13, r12, r5
  JumpIfTrue   r13, L1
  // let stats = from person in people
  Const        r14, []
  Const        r15, "__group__"
  Const        r16, true
  Const        r17, "key"
  // group by person.city into g
  Move         r18, r11
  // let stats = from person in people
  Const        r19, "items"
  Move         r20, r14
  MakeMap      r21, 3, r15
  SetIndex     r5, r12, r21
  Append       r6, r6, r21
L1:
  Const        r23, "items"
  Index        r24, r5, r12
  Index        r25, r24, r23
  Append       r26, r25, r8
  SetIndex     r24, r23, r26
  Const        r27, 1
  Add          r4, r4, r27
  Jump         L2
L0:
  Const        r29, 0
  Len          r30, r6
L6:
  Less         r31, r29, r30
  JumpIfFalse  r31, L3
  Index        r33, r6, r29
  // city: g.key,
  Const        r34, "city"
  Const        r35, "key"
  Index        r36, r33, r35
  // count: count(g),
  Const        r37, "count"
  Count        r38, r33
  // avg_age: avg(from p in g select p.age)
  Const        r39, "avg_age"
  Const        r40, []
  IterPrep     r41, r33
  Len          r42, r41
  Const        r43, 0
L5:
  Less         r44, r43, r42
  JumpIfFalse  r44, L4
  Index        r46, r41, r43
  Const        r47, "age"
  Index        r48, r46, r47
  Append       r40, r40, r48
  Const        r50, 1
  Add          r43, r43, r50
  Jump         L5
L4:
  // select {
  MakeMap      r56, 3, r34
  // let stats = from person in people
  Append       r1, r1, r56
  Const        r58, 1
  Add          r29, r29, r58
  Jump         L6
L3:
  // print("--- People grouped by city ---")
  Const        r60, "--- People grouped by city ---"
  Print        r60
  // for s in stats {
  IterPrep     r61, r1
  Len          r62, r61
  Const        r63, 0
L8:
  Less         r64, r63, r62
  JumpIfFalse  r64, L7
  Index        r66, r61, r63
  // print(s.city, ": count =", s.count, ", avg_age =", s.avg_age)
  Const        r72, "city"
  Index        r67, r66, r72
  Const        r68, ": count ="
  Const        r75, "count"
  Index        r69, r66, r75
  Const        r70, ", avg_age ="
  Const        r78, "avg_age"
  Index        r71, r66, r78
  PrintN       r67, 5, r67
  // for s in stats {
  Const        r80, 1
  Add          r63, r63, r80
  Jump         L8
L7:
  Return       r0
