func main (regs=72)
  // let people = [
  Const        r0, [{"age": 30, "city": "Paris", "name": "Alice"}, {"age": 15, "city": "Hanoi", "name": "Bob"}, {"age": 65, "city": "Paris", "name": "Charlie"}, {"age": 45, "city": "Hanoi", "name": "Diana"}, {"age": 70, "city": "Paris", "name": "Eve"}, {"age": 22, "city": "Hanoi", "name": "Frank"}]
  // let stats = from person in people
  Const        r1, []
  // group by person.city into g
  Const        r2, "city"
  // city: g.key,
  Const        r3, "key"
  // count: count(g),
  Const        r4, "count"
  // avg_age: avg(from p in g select p.age)
  Const        r5, "avg_age"
  Const        r6, "age"
  // let stats = from person in people
  IterPrep     r7, r0
  Len          r8, r7
  Const        r9, 0
  MakeMap      r10, 0, r0
  Const        r11, []
L2:
  LessInt      r12, r9, r8
  JumpIfFalse  r12, L0
  Index        r13, r7, r9
  // group by person.city into g
  Index        r15, r13, r2
  Str          r16, r15
  In           r17, r16, r10
  JumpIfTrue   r17, L1
  // let stats = from person in people
  Const        r18, []
  Const        r19, "__group__"
  Const        r20, true
  // group by person.city into g
  Move         r21, r15
  // let stats = from person in people
  Const        r22, "items"
  Move         r23, r18
  MakeMap      r24, 3, r19
  SetIndex     r10, r16, r24
  Append       r11, r11, r24
L1:
  Index        r26, r10, r16
  Index        r27, r26, r22
  Append       r28, r27, r13
  SetIndex     r26, r22, r28
  Const        r29, 1
  AddInt       r9, r9, r29
  Jump         L2
L0:
  Const        r31, 0
  Move         r30, r31
  Len          r32, r11
L6:
  LessInt      r33, r30, r32
  JumpIfFalse  r33, L3
  Index        r35, r11, r30
  // avg_age: avg(from p in g select p.age)
  Const        r38, []
  IterPrep     r39, r35
  Len          r40, r39
  Move         r41, r31
L5:
  LessInt      r42, r41, r40
  JumpIfFalse  r42, L4
  Index        r44, r39, r41
  Index        r45, r44, r6
  Append       r38, r38, r45
  AddInt       r41, r41, r29
  Jump         L5
L4:
  // select {
  MakeMap      r51, 3, r2
  // let stats = from person in people
  Append       r1, r1, r51
  AddInt       r30, r30, r29
  Jump         L6
L3:
  // print("--- People grouped by city ---")
  Const        r53, "--- People grouped by city ---"
  Print        r53
  // for s in stats {
  IterPrep     r54, r1
  Len          r55, r54
  Const        r56, 0
L8:
  Less         r57, r56, r55
  JumpIfFalse  r57, L7
  Index        r59, r54, r56
  // print(s.city, ": count =", s.count, ", avg_age =", s.avg_age)
  Index        r60, r59, r2
  Const        r61, ": count ="
  Index        r62, r59, r4
  Const        r63, ", avg_age ="
  Index        r64, r59, r5
  PrintN       r60, 5, r60
  // for s in stats {
  Const        r70, 1
  Add          r56, r56, r70
  Jump         L8
L7:
  Return       r0
