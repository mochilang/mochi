func main (regs=84)
  // let people = [
  Const        r0, [{"age": 30, "city": "Paris", "name": "Alice"}, {"age": 15, "city": "Hanoi", "name": "Bob"}, {"age": 65, "city": "Paris", "name": "Charlie"}, {"age": 45, "city": "Hanoi", "name": "Diana"}, {"age": 70, "city": "Paris", "name": "Eve"}, {"age": 22, "city": "Hanoi", "name": "Frank"}]
  Move         r1, r0
  // let stats = from person in people
  Const        r2, []
  IterPrep     r3, r1
  Len          r4, r3
  Const        r5, 0
  MakeMap      r6, 0, r0
  Const        r7, []
L2:
  Less         r8, r5, r4
  JumpIfFalse  r8, L0
  Index        r9, r3, r5
  Move         r10, r9
  // group by person.city into g
  Const        r11, "city"
  Index        r12, r10, r11
  Str          r13, r12
  In           r14, r13, r6
  JumpIfTrue   r14, L1
  // let stats = from person in people
  Const        r15, []
  Const        r16, "__group__"
  Const        r17, true
  Const        r18, "key"
  // group by person.city into g
  Move         r19, r12
  // let stats = from person in people
  Const        r20, "items"
  Move         r21, r15
  MakeMap      r22, 3, r16
  SetIndex     r6, r13, r22
  Append       r7, r7, r22
L1:
  Const        r24, "items"
  Index        r25, r6, r13
  Index        r26, r25, r24
  Append       r27, r26, r9
  SetIndex     r25, r24, r27
  Const        r28, 1
  Add          r5, r5, r28
  Jump         L2
L0:
  Const        r30, 0
  Len          r31, r7
L6:
  Less         r32, r30, r31
  JumpIfFalse  r32, L3
  Index        r34, r7, r30
  // city: g.key,
  Const        r35, "city"
  Const        r36, "key"
  Index        r37, r34, r36
  // count: count(g),
  Const        r38, "count"
  Count        r39, r34
  // avg_age: avg(from p in g select p.age)
  Const        r40, "avg_age"
  Const        r41, []
  IterPrep     r42, r34
  Len          r43, r42
  Const        r44, 0
L5:
  Less         r45, r44, r43
  JumpIfFalse  r45, L4
  Index        r47, r42, r44
  Const        r48, "age"
  Index        r49, r47, r48
  Append       r41, r41, r49
  Const        r51, 1
  Add          r44, r44, r51
  Jump         L5
L4:
  // select {
  MakeMap      r57, 3, r35
  // let stats = from person in people
  Append       r2, r2, r57
  Const        r59, 1
  Add          r30, r30, r59
  Jump         L6
L3:
  Move         r61, r2
  // print("--- People grouped by city ---")
  Const        r62, "--- People grouped by city ---"
  Print        r62
  // for s in stats {
  IterPrep     r63, r61
  Len          r64, r63
  Const        r65, 0
L8:
  Less         r66, r65, r64
  JumpIfFalse  r66, L7
  Index        r68, r63, r65
  // print(s.city, ": count =", s.count, ", avg_age =", s.avg_age)
  Const        r74, "city"
  Index        r69, r68, r74
  Const        r70, ": count ="
  Const        r77, "count"
  Index        r71, r68, r77
  Const        r72, ", avg_age ="
  Const        r80, "avg_age"
  Index        r73, r68, r80
  PrintN       r69, 5, r69
  // for s in stats {
  Const        r82, 1
  Add          r65, r65, r82
  Jump         L8
L7:
  Return       r0
