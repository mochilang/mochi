func main (regs=97)
  // let result = from o in orders
  JumpIfFalse  r10, L0
  // left join c in customers on o.customerId == c.id
  JumpIfFalse  r14, L0
  JumpIfFalse  r21, L0
  Jump         L0
  // let result = from o in orders
  Jump         L0
  JumpIfFalse  r42, L1
  // left join c in customers on o.customerId == c.id
  JumpIfFalse  r46, L0
  JumpIfFalse  r52, L0
  Jump         L0
  // let result = from o in orders
  JumpIfTrue   r55, L0
  Jump         L0
L1:
  Move         r74, r4
  // print("--- Left Join ---")
  Const        r75, "--- Left Join ---"
  Print        r75
  // for entry in result {
  IterPrep     r76, r74
  Const        r78, 0
  JumpIfFalse  r79, L2
  Index        r80, r76, r78
  Move         r81, r80
  // print("Order", entry.orderId, "customer", entry.customer, "total", entry.total)
  Const        r88, "Order"
  Move         r82, r88
  Const        r89, "orderId"
  Index        r90, r81, r89
  Move         r83, r90
  Const        r91, "customer"
  Move         r84, r91
  Const        r92, "customer"
  Index        r93, r81, r92
  Move         r85, r93
  Const        r94, "total"
  Move         r86, r94
  Const        r95, "total"
  Index        r96, r81, r95
  Move         r87, r96
  PrintN       r82, 6, r82
  // for entry in result {
  Jump         L0
L2:
  Return       r0
