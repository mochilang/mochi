func main (regs=69)
  // let customers = [
  Const        r0, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}]
  // let orders = [
  Const        r1, [{"customerId": 1, "id": 100, "total": 250}, {"customerId": 3, "id": 101, "total": 80}]
  // let result = from o in orders
  Const        r2, []
  IterPrep     r3, r1
  Len          r4, r3
  // left join c in customers on o.customerId == c.id
  IterPrep     r5, r0
  Len          r6, r5
  Const        r7, "customerId"
  Const        r8, "id"
  // orderId: o.id,
  Const        r9, "orderId"
  // customer: c,
  Const        r10, "customer"
  // total: o.total
  Const        r11, "total"
  // let result = from o in orders
  Const        r12, 0
L4:
  LessInt      r13, r12, r4
  JumpIfFalse  r13, L0
  Index        r14, r3, r12
  Move         r15, r14
  // left join c in customers on o.customerId == c.id
  Const        r16, 0
L3:
  LessInt      r17, r16, r6
  JumpIfFalse  r17, L1
  Index        r19, r5, r16
  Index        r20, r15, r7
  Index        r21, r19, r8
  Equal        r22, r20, r21
  JumpIfFalse  r22, L2
  // select {
  MakeMap      r28, 3, r9
  // let result = from o in orders
  Append       r2, r2, r28
L2:
  // left join c in customers on o.customerId == c.id
  Const        r30, 1
  AddInt       r16, r16, r30
  Jump         L3
L1:
  // let result = from o in orders
  AddInt       r12, r12, r30
  Jump         L4
L0:
  Const        r31, 0
L10:
  LessInt      r32, r31, r4
  JumpIfFalse  r32, L5
  Index        r15, r3, r31
  Const        r34, false
  // left join c in customers on o.customerId == c.id
  Const        r35, 0
L8:
  LessInt      r36, r35, r6
  JumpIfFalse  r36, L6
  Index        r19, r5, r35
  Index        r38, r15, r7
  Index        r39, r19, r8
  Equal        r40, r38, r39
  JumpIfFalse  r40, L7
  Const        r34, true
L7:
  AddInt       r35, r35, r30
  Jump         L8
L6:
  // let result = from o in orders
  Move         r41, r34
  JumpIfTrue   r41, L9
  // select {
  MakeMap      r48, 3, r9
  // let result = from o in orders
  Append       r2, r2, r48
L9:
  AddInt       r31, r31, r30
  Jump         L10
L5:
  // print("--- Left Join ---")
  Const        r50, "--- Left Join ---"
  Print        r50
  // for entry in result {
  IterPrep     r51, r2
  Len          r52, r51
  Const        r53, 0
L12:
  Less         r54, r53, r52
  JumpIfFalse  r54, L11
  Index        r56, r51, r53
  // print("Order", entry.orderId, "customer", entry.customer, "total", entry.total)
  Const        r57, "Order"
  Index        r58, r56, r9
  Move         r59, r10
  Index        r60, r56, r10
  Move         r61, r11
  Index        r62, r56, r11
  PrintN       r57, 6, r57
  // for entry in result {
  Const        r67, 1
  Add          r53, r53, r67
  Jump         L12
L11:
  Return       r0
