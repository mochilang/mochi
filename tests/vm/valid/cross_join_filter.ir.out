func main (regs=12)
  // let nums = [1, 2, 3]
  Const        r0, [1, 2, 3]
  // let letters = ["A", "B"]
  Const        r1, ["A", "B"]
  // let pairs = from n in nums
  Const        r2, []
L5:
  // select { n: n, l: l }
  Const        r3, "n"
  Const        r4, "l"
  // let pairs = from n in nums
  IterPrep     r5, r0
  Len          r6, r5
L1:
  Const        r7, 0
  Move         r8, r7
L3:
  LessInt      r9, r8, r6
L2:
  JumpIfFalse  r9, L0
  Index        r6, r5, r8
  // where n % 2 == 0
  Const        r5, 2
  Mod          r10, r6, r5
  Equal        r5, r10, r7
  JumpIfFalse  r5, L1
  // from l in letters
  IterPrep     r5, r1
  Len          r1, r5
  Move         r10, r7
  LessInt      r7, r10, r1
  JumpIfFalse  r7, L1
  Index        r7, r5, r10
  // select { n: n, l: l }
  Const        r5, "n"
  Const        r1, "l"
  Move         r11, r5
  Move         r5, r6
  Move         r6, r1
  Move         r1, r7
  MakeMap      r7, 2, r11
  // let pairs = from n in nums
  Append       r2, r2, r7
  // from l in letters
  Const        r7, 1
  AddInt       r10, r10, r7
  Jump         L2
  // let pairs = from n in nums
  AddInt       r8, r8, r7
  Jump         L3
L0:
  // print("--- Even pairs ---")
  Const        r10, "--- Even pairs ---"
  Print        r10
  // for p in pairs {
  IterPrep     r10, r2
  Len          r2, r10
  Const        r7, 0
  Less         r9, r7, r2
  JumpIfFalse  r9, L4
  Index        r9, r10, r7
  // print(p.n, p.l)
  Index        r10, r9, r3
  Index        r3, r9, r4
  Print2       r10, r3
  // for p in pairs {
  Const        r3, 1
  Add          r7, r7, r3
  Jump         L5
L4:
  Return       r0
