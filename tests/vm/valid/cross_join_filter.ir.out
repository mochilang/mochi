func main (regs=45)
  // let nums = [1, 2, 3]
  Const        r0, [1, 2, 3]
  Move         r1, r0
  // let letters = ["A", "B"]
  Const        r3, ["A", "B"]
  // let pairs = from n in nums
  Const        r4, []
  IterPrep     r5, r1
  Len          r6, r5
  Const        r7, 0
L3:
  Less         r8, r7, r6
  JumpIfFalse  r8, L0
  Index        r10, r5, r7
  // where n % 2 == 0
  Const        r11, 2
  Mod          r12, r10, r11
  Const        r13, 0
  Equal        r14, r12, r13
  JumpIfFalse  r14, L1
  // from l in letters
  IterPrep     r15, r3
  Len          r16, r15
  Const        r17, 0
L2:
  Less         r18, r17, r16
  JumpIfFalse  r18, L1
  Index        r20, r15, r17
  // select { n: n, l: l }
  Const        r21, "n"
  Const        r22, "l"
  Move         r23, r10
  Move         r24, r20
  MakeMap      r25, 2, r21
  // let pairs = from n in nums
  Append       r4, r4, r25
  // from l in letters
  Const        r27, 1
  Add          r17, r17, r27
  Jump         L2
L1:
  // let pairs = from n in nums
  Jump         L3
L0:
  Move         r31, r4
  // print("--- Even pairs ---")
  Const        r32, "--- Even pairs ---"
  Print        r32
  // for p in pairs {
  IterPrep     r33, r31
  Len          r34, r33
  Const        r35, 0
L5:
  Less         r36, r35, r34
  JumpIfFalse  r36, L4
  Index        r38, r33, r35
  // print(p.n, p.l)
  Const        r39, "n"
  Index        r40, r38, r39
  Const        r41, "l"
  Index        r42, r38, r41
  Print2       r40, r42
  // for p in pairs {
  Const        r43, 1
  Add          r35, r35, r43
  Jump         L5
L4:
  Return       r0
