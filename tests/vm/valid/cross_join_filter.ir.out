func main (regs=40)
  // let nums = [1, 2, 3]
  Const        r0, [1, 2, 3]
  // let letters = ["A", "B"]
  Const        r1, ["A", "B"]
  // let pairs = from n in nums
  Const        r2, []
  IterPrep     r3, r0
  Len          r4, r3
  Const        r5, 0
L3:
  Less         r6, r5, r4
  JumpIfFalse  r6, L0
  Index        r8, r3, r5
  // where n % 2 == 0
  Const        r9, 2
  Mod          r10, r8, r9
  Const        r11, 0
  Equal        r12, r10, r11
  JumpIfFalse  r12, L1
  // from l in letters
  IterPrep     r13, r1
  Len          r14, r13
  Const        r15, 0
L2:
  Less         r16, r15, r14
  JumpIfFalse  r16, L1
  Index        r18, r13, r15
  // select { n: n, l: l }
  Const        r19, "n"
  Const        r20, "l"
  Move         r21, r8
  Move         r22, r18
  MakeMap      r23, 2, r19
  // let pairs = from n in nums
  Append       r2, r2, r23
  // from l in letters
  Const        r25, 1
  Add          r15, r15, r25
  Jump         L2
L1:
  // let pairs = from n in nums
  Const        r27, 1
  Add          r5, r5, r27
  Jump         L3
L0:
  // print("--- Even pairs ---")
  Const        r29, "--- Even pairs ---"
  Print        r29
  // for p in pairs {
  IterPrep     r30, r2
  Len          r31, r30
  Const        r32, 0
L5:
  Less         r33, r32, r31
  JumpIfFalse  r33, L4
  Index        r35, r30, r32
  // print(p.n, p.l)
  Index        r36, r35, r19
  Index        r37, r35, r20
  Print2       r36, r37
  // for p in pairs {
  Const        r38, 1
  Add          r32, r32, r38
  Jump         L5
L4:
  Return       r0
