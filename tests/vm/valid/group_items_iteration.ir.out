func main (regs=90)
  // let data = [
  Const        r0, [{"tag": "a", "val": 1}, {"tag": "a", "val": 2}, {"tag": "b", "val": 3}]
  Move         r1, r0
  // let groups = from d in data group by d.tag into g select g
  IterPrep     r3, r1
  Len          r4, r3
  Const        r5, 0
  MakeMap      r6, 0, r0
L2:
  Less         r8, r5, r4
  JumpIfFalse  r8, L0
  Index        r9, r3, r5
  Move         r10, r9
  Const        r11, "tag"
  Index        r12, r10, r11
  Str          r13, r12
  In           r14, r13, r6
  JumpIfTrue   r14, L1
  Const        r15, []
  Const        r16, "__group__"
  Const        r17, true
  Const        r18, "key"
  Move         r19, r12
  Const        r20, "items"
  Move         r21, r15
  MakeMap      r22, 3, r16
  SetIndex     r6, r13, r22
  Const        r24, "items"
L1:
  Index        r25, r6, r13
  Index        r26, r25, r24
  Append       r27, r26, r9
  SetIndex     r25, r24, r27
  Jump         L2
  Const        r30, 0
  Len          r31, r23
L0:
  Less         r32, r30, r31
  JumpIfFalse  r32, L3
L4:
  Jump         L4
  // for g in groups {
  IterPrep     r41, r35
  Len          r42, r41
  Const        r43, 0
  Less         r44, r43, r42
L3:
  JumpIfFalse  r44, L5
  Index        r45, r41, r43
  // for x in g.items {
  Const        r48, "items"
  Index        r49, r45, r48
  IterPrep     r50, r49
L7:
  Len          r51, r50
  Const        r52, 0
  Less         r53, r52, r51
  JumpIfFalse  r53, L6
  // tmp = append(tmp, {tag: g.key, total: total})
  Const        r61, "tag"
  Const        r62, "key"
  Index        r63, r45, r62
  Const        r64, "total"
  Move         r65, r61
  Move         r66, r63
  Move         r67, r64
  Move         r68, r58
  MakeMap      r69, 35, r65
  // for g in groups {
  Const        r71, 1
L6:
  Add          r72, r43, r71
  Move         r43, r72
  Jump         L7
  // let result = from r in tmp sort by r.tag select r
  IterPrep     r74, r70
  Len          r75, r74
  Const        r76, 0
  Less         r77, r76, r75
  JumpIfFalse  r77, L8
L5:
  Sort         r88, r73
  // print(result)
  Print        r88
  Return       r0
