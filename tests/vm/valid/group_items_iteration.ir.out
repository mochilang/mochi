func main (regs=91)
  // let data = [
  Const        r0, [{"tag": "a", "val": 1}, {"tag": "a", "val": 2}, {"tag": "b", "val": 3}]
  Move         r1, r0
  // let groups = from d in data group by d.tag into g select g
  Const        r2, []
  Const        r3, "tag"
  IterPrep     r4, r1
  Len          r5, r4
  Const        r6, 0
  MakeMap      r7, 0, r0
  Const        r9, []
  Move         r8, r9
L2:
  LessInt      r10, r6, r5
  JumpIfFalse  r10, L0
  Index        r11, r4, r6
  Move         r12, r11
  Const        r3, "tag"
  Index        r13, r12, r3
  Str          r14, r13
  In           r15, r14, r7
  JumpIfTrue   r15, L1
  Const        r9, []
  Const        r16, "__group__"
  Const        r17, true
  Const        r18, "key"
  Move         r19, r13
  Const        r20, "items"
  Move         r21, r9
  Const        r22, "count"
  Const        r23, 0
  Move         r24, r16
  Move         r25, r17
  Move         r26, r18
  Move         r27, r19
  Move         r28, r20
  Move         r29, r21
  Move         r30, r22
  Move         r31, r23
  MakeMap      r32, 4, r24
  SetIndex     r7, r14, r32
  Append       r33, r8, r32
  Move         r8, r33
L1:
  Const        r20, "items"
  Index        r34, r7, r14
  Index        r35, r34, r20
  Append       r36, r35, r11
  SetIndex     r34, r20, r36
  Const        r22, "count"
  Index        r37, r34, r22
  Const        r38, 1
  AddInt       r39, r37, r38
  SetIndex     r34, r22, r39
  Const        r38, 1
  AddInt       r6, r6, r38
  Jump         L2
L0:
  Const        r23, 0
  Move         r40, r23
  Len          r41, r8
L4:
  LessInt      r42, r40, r41
  JumpIfFalse  r42, L3
  Index        r43, r8, r40
  Move         r44, r43
  Append       r45, r2, r44
  Move         r2, r45
  Const        r38, 1
  AddInt       r40, r40, r38
  Jump         L4
L3:
  Move         r46, r2
  // var tmp = []
  Const        r9, []
  Move         r47, r9
  // for g in groups {
  IterPrep     r48, r46
  Len          r49, r48
  Const        r50, 0
L8:
  LessInt      r51, r50, r49
  JumpIfFalse  r51, L5
  Index        r52, r48, r50
  Move         r44, r52
  // var total = 0
  Const        r23, 0
  Move         r53, r23
  // for x in g.items {
  Const        r20, "items"
  Index        r54, r44, r20
  IterPrep     r55, r54
  Len          r56, r55
  Const        r57, 0
L7:
  LessInt      r58, r57, r56
  JumpIfFalse  r58, L6
  Index        r59, r55, r57
  Move         r60, r59
  // total = total + x.val
  Const        r61, "val"
  Index        r62, r60, r61
  Add          r63, r53, r62
  Move         r53, r63
  // for x in g.items {
  Const        r64, 1
  AddInt       r65, r57, r64
  Move         r57, r65
  Jump         L7
L6:
  // tmp = append(tmp, {tag: g.key, total: total})
  Const        r66, "tag"
  Const        r18, "key"
  Index        r67, r44, r18
  Const        r68, "total"
  Move         r69, r66
  Move         r70, r67
  Move         r71, r68
  Move         r72, r53
  MakeMap      r73, 2, r69
  Append       r74, r47, r73
  Move         r47, r74
  // for g in groups {
  Const        r75, 1
  AddInt       r76, r50, r75
  Move         r50, r76
  Jump         L8
L5:
  // let result = from r in tmp sort by r.tag select r
  Const        r77, []
  Const        r3, "tag"
  IterPrep     r78, r47
  Len          r79, r78
  Const        r23, 0
  Move         r80, r23
L10:
  LessInt      r81, r80, r79
  JumpIfFalse  r81, L9
  Index        r82, r78, r80
  Move         r83, r82
  Const        r3, "tag"
  Index        r86, r83, r3
  Move         r84, r86
  Move         r85, r83
  MakeList     r87, 2, r84
  Append       r88, r77, r87
  Move         r77, r88
  Const        r38, 1
  AddInt       r80, r80, r38
  Jump         L10
L9:
  Sort         r89, r77
  Move         r77, r89
  Move         r90, r77
  // print(result)
  Print        r90
  Return       r0
