func main (regs=93)
  // let data = [
  Const        r0, [{"tag": "a", "val": 1}, {"tag": "a", "val": 2}, {"tag": "b", "val": 3}]
  // let groups = from d in data group by d.tag into g select g
  Const        r1, []
  Const        r2, "tag"
  IterPrep     r3, r0
  Len          r4, r3
  Const        r5, 0
  MakeMap      r6, 0, r0
  Const        r7, []
L2:
  LessInt      r8, r5, r4
  JumpIfFalse  r8, L0
  Index        r9, r3, r5
  Index        r11, r9, r2
  Str          r12, r11
  In           r13, r12, r6
  JumpIfTrue   r13, L1
  Const        r14, []
  Const        r15, "__group__"
  Const        r16, true
  Const        r17, "key"
  Move         r18, r11
  Const        r19, "items"
  Move         r20, r14
  Const        r21, "count"
  Const        r22, 0
  Move         r23, r15
  Move         r24, r16
  Move         r25, r17
  Move         r26, r18
  Move         r27, r19
  Move         r28, r20
  Move         r29, r21
  Move         r30, r22
  MakeMap      r31, 4, r23
  SetIndex     r6, r12, r31
  Append       r7, r7, r31
L1:
  Const        r33, "items"
  Index        r34, r6, r12
  Index        r35, r34, r33
  Append       r36, r35, r9
  SetIndex     r34, r33, r36
  Const        r37, "count"
  Index        r38, r34, r37
  Const        r39, 1
  AddInt       r40, r38, r39
  SetIndex     r34, r37, r40
  AddInt       r5, r5, r39
  Jump         L2
L0:
  Const        r42, 0
  Move         r41, r42
  Len          r43, r7
L4:
  LessInt      r44, r41, r43
  JumpIfFalse  r44, L3
  Index        r46, r7, r41
  Append       r1, r1, r46
  AddInt       r41, r41, r39
  Jump         L4
L3:
  // var tmp = []
  Const        r49, []
  // for g in groups {
  IterPrep     r50, r1
  Len          r51, r50
  Const        r52, 0
L8:
  Less         r53, r52, r51
  JumpIfFalse  r53, L5
  Index        r46, r50, r52
  // var total = 0
  Move         r55, r42
  // for x in g.items {
  Index        r56, r46, r33
  IterPrep     r57, r56
  Len          r58, r57
  Const        r59, 0
L7:
  Less         r60, r59, r58
  JumpIfFalse  r60, L6
  Index        r62, r57, r59
  // total = total + x.val
  Const        r63, "val"
  Index        r64, r62, r63
  Add          r55, r55, r64
  // for x in g.items {
  Const        r66, 1
  Add          r59, r59, r66
  Jump         L7
L6:
  // tmp = append(tmp, {tag: g.key, total: total})
  Const        r68, "tag"
  Const        r69, "key"
  Index        r70, r46, r69
  Const        r71, "total"
  Move         r72, r68
  Move         r73, r70
  Move         r74, r71
  Move         r75, r55
  MakeMap      r76, 2, r72
  Append       r49, r49, r76
  // for g in groups {
  Const        r78, 1
  Add          r52, r52, r78
  Jump         L8
L5:
  // let result = from r in tmp sort by r.tag select r
  Const        r80, []
  IterPrep     r81, r49
  Len          r82, r81
  Move         r83, r42
L10:
  LessInt      r84, r83, r82
  JumpIfFalse  r84, L9
  Index        r86, r81, r83
  Index        r88, r86, r2
  Move         r89, r86
  MakeList     r90, 2, r88
  Append       r80, r80, r90
  AddInt       r83, r83, r39
  Jump         L10
L9:
  Sort         r80, r80
  // print(result)
  Print        r80
  Return       r0
