func main (regs=24)
  // let data = [
  Const        r0, [{"tag": "a", "val": 1}, {"tag": "a", "val": 2}, {"tag": "b", "val": 3}]
  // let groups = from d in data group by d.tag into g select g
  Const        r1, []
  Const        r2, "tag"
L1:
  IterPrep     r3, r0
  Len          r4, r3
  Const        r5, 0
L5:
  MakeMap      r6, 0, r0
  Move         r7, r1
L3:
  Move         r8, r5
L2:
  LessInt      r9, r5, r4
  JumpIfFalse  r9, L0
L7:
  Index        r4, r3, r5
  Index        r3, r4, r2
  Str          r10, r3
  In           r11, r10, r6
  JumpIfTrue   r11, L1
  Move         r11, r1
L8:
  Const        r12, "__group__"
L4:
  Const        r13, true
  Const        r14, "key"
  Move         r15, r3
  Const        r3, "items"
  Move         r16, r11
  Const        r17, "count"
  Move         r18, r5
  Move         r19, r12
  Move         r12, r13
  Move         r13, r14
  Move         r20, r15
  Move         r15, r3
  Move         r21, r16
  Move         r16, r17
  Move         r22, r18
  MakeMap      r23, 4, r19
  SetIndex     r6, r10, r8
  Append       r7, r7, r23
  Const        r23, 1
  AddInt       r8, r8, r23
  Move         r8, r3
  Index        r3, r6, r10
  Index        r10, r7, r3
  Index        r3, r10, r8
  Append       r6, r3, r4
  SetIndex     r10, r8, r6
  Move         r6, r17
  Index        r17, r10, r6
  AddInt       r3, r17, r23
  SetIndex     r10, r6, r3
  AddInt       r5, r5, r23
  Jump         L2
L0:
  Move         r3, r18
  Move         r18, r3
  Len          r17, r7
  LessInt      r6, r18, r17
  JumpIfFalse  r6, L3
  Index        r6, r7, r18
  Append       r1, r1, r6
  AddInt       r18, r18, r23
  Jump         L4
  // var tmp = []
  Move         r7, r11
  // for g in groups {
  IterPrep     r11, r1
  Len          r18, r11
  Const        r1, 0
  Less         r17, r1, r18
  JumpIfFalse  r17, L5
  Index        r6, r11, r1
  // var total = 0
  Move         r17, r3
  // for x in g.items {
  Index        r11, r6, r8
  IterPrep     r8, r11
  Len          r11, r8
  Move         r18, r1
  Less         r10, r18, r11
  JumpIfFalse  r10, L6
  Index        r10, r8, r18
  // total = total + x.val
  Const        r8, "val"
  Index        r11, r10, r8
  Add          r17, r17, r11
  // for x in g.items {
  Add          r18, r18, r23
  Jump         L7
L6:
  // tmp = append(tmp, {tag: g.key, total: total})
  Move         r11, r2
  Index        r8, r6, r14
  Const        r6, "total"
  Move         r14, r11
  Move         r11, r8
  Move         r8, r6
  Move         r6, r17
  MakeMap      r17, 2, r14
  Append       r7, r7, r17
  // for g in groups {
  Add          r1, r1, r23
  Jump         L8
  // let result = from r in tmp sort by r.tag select r
  Const        r17, []
  IterPrep     r6, r7
  Len          r7, r6
  Move         r8, r3
  LessInt      r3, r8, r7
  JumpIfFalse  r3, L9
  Index        r3, r6, r8
  Index        r6, r3, r2
  Move         r2, r3
  MakeList     r3, 2, r6
  Append       r17, r17, r3
  AddInt       r8, r8, r23
  Jump         L1
L9:
  Sort         r17, r17
  // print(result)
  Print        r17
  Return       r0
