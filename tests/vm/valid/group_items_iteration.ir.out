func main (regs=19)
  // let data = [
  Const        r0, [{"tag": "a", "val": 1}, {"tag": "a", "val": 2}, {"tag": "b", "val": 3}]
  // let groups = from d in data group by d.tag into g select g
  Const        r1, []
  Const        r2, "tag"
  IterPrep     r3, r0
  Len          r4, r3
  Const        r5, 0
L5:
  MakeMap      r6, 0, r0
  Const        r7, []
L3:
  Const        r8, 0
L2:
  LessInt      r9, r5, r4
  JumpIfFalse  r9, L0
L1:
  Index        r4, r3, r5
  Index        r3, r4, r2
  Str          r10, r3
  In           r11, r10, r6
  JumpIfTrue   r11, L1
  Const        r11, []
  Const        r12, "__group__"
  Const        r13, true
  Const        r14, "key"
  Move         r15, r3
  Const        r3, "items"
  Move         r16, r11
  Const        r11, "count"
  Const        r17, 0
  Move         r18, r12
  Move         r12, r13
  Move         r13, r14
  Move         r14, r15
  Move         r15, r3
  Move         r3, r16
  Move         r16, r11
  Move         r11, r17
  MakeMap      r17, 4, r18
  SetIndex     r6, r10, r8
  Append       r7, r7, r17
  Const        r17, 1
  AddInt       r8, r8, r17
  Const        r8, "items"
  Index        r11, r6, r10
  Index        r10, r7, r11
  Index        r11, r10, r8
  Append       r6, r11, r4
  SetIndex     r10, r8, r6
  Const        r6, "count"
  Index        r11, r10, r6
  AddInt       r4, r11, r17
  SetIndex     r10, r6, r4
  AddInt       r5, r5, r17
  Jump         L2
L0:
  Const        r4, 0
  Move         r11, r4
  Len          r6, r7
  LessInt      r10, r11, r6
  JumpIfFalse  r10, L3
  Index        r10, r7, r11
  Append       r1, r1, r10
  AddInt       r11, r11, r17
  Jump         L1
  // var tmp = []
  Const        r7, []
  // for g in groups {
  IterPrep     r6, r1
  Len          r11, r6
  Const        r1, 0
  Less         r9, r1, r11
  JumpIfFalse  r9, L4
  Index        r10, r6, r1
  // var total = 0
  Move         r9, r4
  // for x in g.items {
  Index        r6, r10, r8
  IterPrep     r8, r6
  Len          r6, r8
  Const        r11, 0
  Less         r5, r11, r6
  JumpIfFalse  r5, L2
  Index        r5, r8, r11
  // total = total + x.val
  Const        r8, "val"
  Index        r6, r5, r8
  Add          r9, r9, r6
  // for x in g.items {
  Const        r6, 1
  Add          r11, r11, r6
  Jump         L5
  // tmp = append(tmp, {tag: g.key, total: total})
  Const        r11, "tag"
  Const        r6, "key"
  Index        r8, r10, r6
  Const        r6, "total"
  Move         r10, r11
  Move         r11, r8
  Move         r8, r6
  Move         r6, r9
  MakeMap      r9, 2, r10
  Append       r7, r7, r9
  // for g in groups {
  Const        r9, 1
  Add          r1, r1, r9
  Jump         L2
L4:
  // let result = from r in tmp sort by r.tag select r
  Const        r9, []
  IterPrep     r1, r7
  Len          r7, r1
  Move         r6, r4
L7:
  LessInt      r4, r6, r7
  JumpIfFalse  r4, L6
  Index        r4, r1, r6
  Index        r1, r4, r2
  Move         r2, r4
  MakeList     r4, 2, r1
  Append       r9, r9, r4
  AddInt       r6, r6, r17
  Jump         L7
L6:
  Sort         r9, r9
  // print(result)
  Print        r9
  Return       r0
