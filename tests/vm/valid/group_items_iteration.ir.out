func main (regs=94)
  // let data = [
  Const        r0, [{"tag": "a", "val": 1}, {"tag": "a", "val": 2}, {"tag": "b", "val": 3}]
  // let groups = from d in data group by d.tag into g select g
  Const        r1, []
  Const        r2, "tag"
  IterPrep     r3, r0
  Len          r4, r3
  Const        r5, 0
  MakeMap      r6, 0, r0
  Move         r7, r1
L2:
  LessInt      r9, r5, r4
  JumpIfFalse  r9, L0
  Index        r10, r3, r5
  Index        r12, r10, r2
  Str          r13, r12
  In           r14, r13, r6
  JumpIfTrue   r14, L1
  Move         r15, r1
  Const        r16, "__group__"
  Const        r17, true
  Const        r18, "key"
  Move         r19, r12
  Const        r20, "items"
  Move         r21, r15
  Const        r22, "count"
  Move         r23, r5
  Move         r24, r16
  Move         r25, r17
  Move         r26, r18
  Move         r27, r19
  Move         r28, r20
  Move         r29, r21
  Move         r30, r22
  Move         r31, r23
  MakeMap      r32, 4, r24
  SetIndex     r6, r13, r32
  Append       r7, r7, r32
L1:
  Move         r34, r20
  Index        r35, r6, r13
  Index        r36, r35, r34
  Append       r37, r36, r10
  SetIndex     r35, r34, r37
  Move         r38, r22
  Index        r39, r35, r38
  Const        r40, 1
  AddInt       r41, r39, r40
  SetIndex     r35, r38, r41
  AddInt       r5, r5, r40
  Jump         L2
L0:
  Const        r43, 0
  Move         r42, r43
  Len          r44, r7
L4:
  LessInt      r45, r42, r44
  JumpIfFalse  r45, L3
  Index        r47, r7, r42
  Append       r1, r1, r47
  AddInt       r42, r42, r40
  Jump         L4
L3:
  // var tmp = []
  Move         r50, r15
  // for g in groups {
  IterPrep     r51, r1
  Len          r52, r51
  Move         r53, r43
L8:
  Less         r54, r53, r52
  JumpIfFalse  r54, L5
  Index        r47, r51, r53
  // var total = 0
  Move         r56, r43
  // for x in g.items {
  Index        r57, r47, r34
  IterPrep     r58, r57
  Len          r59, r58
  Move         r60, r43
L7:
  Less         r61, r60, r59
  JumpIfFalse  r61, L6
  Index        r63, r58, r60
  // total = total + x.val
  Const        r64, "val"
  Index        r65, r63, r64
  Add          r56, r56, r65
  // for x in g.items {
  Add          r60, r60, r40
  Jump         L7
L6:
  // tmp = append(tmp, {tag: g.key, total: total})
  Move         r69, r2
  Index        r71, r47, r18
  Const        r72, "total"
  Move         r73, r69
  Move         r74, r71
  Move         r75, r72
  Move         r76, r56
  MakeMap      r77, 2, r73
  Append       r50, r50, r77
  // for g in groups {
  Add          r53, r53, r40
  Jump         L8
L5:
  // let result = from r in tmp sort by r.tag select r
  Const        r81, []
  IterPrep     r82, r50
  Len          r83, r82
  Move         r84, r43
L10:
  LessInt      r85, r84, r83
  JumpIfFalse  r85, L9
  Index        r87, r82, r84
  Index        r89, r87, r2
  Move         r90, r87
  MakeList     r91, 2, r89
  Append       r81, r81, r91
  AddInt       r84, r84, r40
  Jump         L10
L9:
  Sort         r81, r81
  // print(result)
  Print        r81
  Return       r0
