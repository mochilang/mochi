func main (regs=79)
  // let data = [
  Const        r0, [{"tag": "a", "val": 1}, {"tag": "a", "val": 2}, {"tag": "b", "val": 3}]
  // let groups = from d in data group by d.tag into g select g
  Const        r1, []
  Const        r2, "tag"
  IterPrep     r3, r0
  Len          r4, r3
  Const        r5, 0
  MakeMap      r6, 0, r0
  Const        r7, []
L2:
  LessInt      r8, r5, r4
  JumpIfFalse  r8, L0
  Index        r9, r3, r5
  Index        r11, r9, r2
  Str          r12, r11
  In           r13, r12, r6
  JumpIfTrue   r13, L1
  Const        r14, []
  Const        r15, "__group__"
  Const        r16, true
  Const        r17, "key"
  Move         r18, r11
  Const        r19, "items"
  Move         r20, r14
  Const        r21, "count"
  Const        r22, 0
  MakeMap      r23, 4, r15
  SetIndex     r6, r12, r23
  Append       r7, r7, r23
L1:
  Index        r25, r6, r12
  Index        r26, r25, r19
  Append       r27, r26, r9
  SetIndex     r25, r19, r27
  Index        r28, r25, r21
  Const        r29, 1
  AddInt       r30, r28, r29
  SetIndex     r25, r21, r30
  AddInt       r5, r5, r29
  Jump         L2
L0:
  Move         r31, r22
  Len          r32, r7
L4:
  LessInt      r33, r31, r32
  JumpIfFalse  r33, L3
  Index        r35, r7, r31
  Append       r1, r1, r35
  AddInt       r31, r31, r29
  Jump         L4
L3:
  // var tmp = []
  Const        r38, []
  // for g in groups {
  IterPrep     r39, r1
  Len          r40, r39
  Const        r41, 0
L8:
  Less         r42, r41, r40
  JumpIfFalse  r42, L5
  Index        r35, r39, r41
  // var total = 0
  Move         r44, r22
  // for x in g.items {
  Index        r45, r35, r19
  IterPrep     r46, r45
  Len          r47, r46
  Const        r48, 0
L7:
  Less         r49, r48, r47
  JumpIfFalse  r49, L6
  Index        r51, r46, r48
  // total = total + x.val
  Const        r52, "val"
  Index        r53, r51, r52
  Add          r44, r44, r53
  // for x in g.items {
  Const        r55, 1
  Add          r48, r48, r55
  Jump         L7
L6:
  // tmp = append(tmp, {tag: g.key, total: total})
  Const        r57, "tag"
  Index        r58, r35, r17
  Const        r59, "total"
  Move         r60, r58
  MakeMap      r62, 2, r57
  Append       r38, r38, r62
  // for g in groups {
  Const        r64, 1
  Add          r41, r41, r64
  Jump         L8
L5:
  // let result = from r in tmp sort by r.tag select r
  Const        r66, []
  IterPrep     r67, r38
  Len          r68, r67
  Move         r69, r22
L10:
  LessInt      r70, r69, r68
  JumpIfFalse  r70, L9
  Index        r72, r67, r69
  Index        r74, r72, r2
  Move         r75, r72
  MakeList     r76, 2, r74
  Append       r66, r66, r76
  AddInt       r69, r69, r29
  Jump         L10
L9:
  Sort         r66, r66
  // print(result)
  Print        r66
  Return       r0
