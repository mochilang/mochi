func main (regs=66)
  // let customers = [
  Const        r0, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}, {"id": 3, "name": "Charlie"}]
  // let orders = [
  Const        r1, [{"customerId": 1, "id": 100, "total": 250}, {"customerId": 2, "id": 101, "total": 125}, {"customerId": 1, "id": 102, "total": 300}]
  // let result = from o in orders
  Const        r2, []
  IterPrep     r3, r1
  Len          r4, r3
  Const        r5, 0
L3:
  Less         r6, r5, r4
  JumpIfFalse  r6, L0
  Index        r8, r3, r5
  // from c in customers
  IterPrep     r9, r0
  Len          r10, r9
  Const        r11, 0
L2:
  Less         r12, r11, r10
  JumpIfFalse  r12, L1
  // orderId: o.id,
  Const        r15, "orderId"
  Const        r16, "id"
  Index        r17, r8, r16
  // orderCustomerId: o.customerId,
  Const        r18, "orderCustomerId"
  Const        r19, "customerId"
  Index        r20, r8, r19
  // pairedCustomerName: c.name,
  Const        r21, "pairedCustomerName"
  Const        r22, "name"
  // select {
  MakeMap      r31, 4, r15
  // let result = from o in orders
  Append       r2, r2, r31
  // from c in customers
  Const        r33, 1
  Add          r11, r11, r33
  Jump         L2
L1:
  // let result = from o in orders
  Const        r35, 1
  Add          r5, r5, r35
  Jump         L3
L0:
  // print("--- Cross Join: All order-customer pairs ---")
  Const        r37, "--- Cross Join: All order-customer pairs ---"
  Print        r37
  // for entry in result {
  IterPrep     r38, r2
  Len          r39, r38
  Const        r40, 0
L5:
  Less         r41, r40, r39
  JumpIfFalse  r41, L4
  Index        r43, r38, r40
  // print("Order", entry.orderId,
  Const        r44, "Order"
  Const        r53, "orderId"
  Index        r45, r43, r53
  // "(customerId:", entry.orderCustomerId,
  Const        r46, "(customerId:"
  Const        r56, "orderCustomerId"
  Index        r47, r43, r56
  // ", total: $", entry.orderTotal,
  Const        r48, ", total: $"
  Const        r59, "orderTotal"
  Index        r49, r43, r59
  // ") paired with", entry.pairedCustomerName)
  Const        r50, ") paired with"
  Const        r62, "pairedCustomerName"
  Index        r51, r43, r62
  // print("Order", entry.orderId,
  PrintN       r44, 8, r44
  // for entry in result {
  Const        r64, 1
  Add          r40, r40, r64
  Jump         L5
L4:
  Return       r0
