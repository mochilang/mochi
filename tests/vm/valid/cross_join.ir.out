func main (regs=21)
  // let customers = [
  Const        r0, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}, {"id": 3, "name": "Charlie"}]
  // let orders = [
  Const        r1, [{"customerId": 1, "id": 100, "total": 250}, {"customerId": 2, "id": 101, "total": 125}, {"customerId": 1, "id": 102, "total": 300}]
L1:
  // let result = from o in orders
  Const        r2, []
L5:
  // orderId: o.id,
  Const        r3, "orderId"
  Const        r4, "id"
  // orderCustomerId: o.customerId,
  Const        r5, "orderCustomerId"
  Const        r6, "customerId"
  // pairedCustomerName: c.name,
  Const        r7, "pairedCustomerName"
  Const        r8, "name"
  // orderTotal: o.total
  Const        r9, "orderTotal"
  Const        r10, "total"
  // let result = from o in orders
  IterPrep     r11, r1
L0:
  Len          r1, r11
  Const        r12, 0
L3:
  Move         r13, r12
  LessInt      r14, r13, r1
  JumpIfFalse  r14, L0
L2:
  Index        r1, r11, r13
  // from c in customers
  IterPrep     r11, r0
  Len          r15, r11
  Move         r16, r12
  LessInt      r17, r16, r15
  JumpIfFalse  r17, L1
  Index        r15, r11, r16
  // orderId: o.id,
  Move         r11, r3
  Index        r18, r1, r4
  // orderCustomerId: o.customerId,
  Move         r4, r5
  Index        r19, r1, r6
  // pairedCustomerName: c.name,
  Move         r6, r7
  Index        r20, r15, r8
  // orderTotal: o.total
  Move         r15, r9
  Index        r8, r1, r10
  // orderId: o.id,
  Move         r1, r11
  Move         r11, r18
  // orderCustomerId: o.customerId,
  Move         r18, r4
  Move         r4, r19
  // pairedCustomerName: c.name,
  Move         r19, r6
  Move         r6, r20
  // orderTotal: o.total
  Move         r20, r15
  Move         r15, r8
  // select {
  MakeMap      r8, 4, r1
  // let result = from o in orders
  Append       r2, r2, r8
  // from c in customers
  Const        r8, 1
  AddInt       r16, r16, r8
  Jump         L2
  // let result = from o in orders
  AddInt       r13, r13, r8
  Jump         L3
  // print("--- Cross Join: All order-customer pairs ---")
  Const        r17, "--- Cross Join: All order-customer pairs ---"
  Print        r17
  // for entry in result {
  IterPrep     r17, r2
  Len          r2, r17
  Move         r16, r12
  Less         r12, r16, r2
  JumpIfFalse  r12, L4
  Index        r12, r17, r16
  // print("Order", entry.orderId,
  Const        r17, "Order"
  Index        r2, r12, r3
  // "(customerId:", entry.orderCustomerId,
  Const        r3, "(customerId:"
  Index        r14, r12, r5
  // ", total: $", entry.orderTotal,
  Const        r5, ", total: $"
  Index        r13, r12, r9
  // ") paired with", entry.pairedCustomerName)
  Const        r9, ") paired with"
  Index        r15, r12, r7
  // print("Order", entry.orderId,
  PrintN       r17, 8, r17
  // for entry in result {
  Add          r16, r16, r8
  Jump         L5
L4:
  Return       r0
