func main (regs=64)
  // let customers = [
  Const        r0, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}, {"id": 3, "name": "Charlie"}]
  // let orders = [
  Const        r1, [{"customerId": 1, "id": 100, "total": 250}, {"customerId": 2, "id": 101, "total": 125}, {"customerId": 1, "id": 102, "total": 300}]
  // let result = from o in orders
  Const        r2, []
  // orderId: o.id,
  Const        r3, "orderId"
  Const        r4, "id"
  // orderCustomerId: o.customerId,
  Const        r5, "orderCustomerId"
  Const        r6, "customerId"
  // pairedCustomerName: c.name,
  Const        r7, "pairedCustomerName"
  Const        r8, "name"
  // orderTotal: o.total
  Const        r9, "orderTotal"
  Const        r10, "total"
  // let result = from o in orders
  IterPrep     r11, r1
  Len          r12, r11
  Const        r14, 0
  Move         r13, r14
L3:
  LessInt      r15, r13, r12
  JumpIfFalse  r15, L0
  Index        r17, r11, r13
  // from c in customers
  IterPrep     r18, r0
  Len          r19, r18
  Move         r20, r14
L2:
  LessInt      r21, r20, r19
  JumpIfFalse  r21, L1
  Index        r23, r18, r20
  // orderId: o.id,
  Const        r24, "orderId"
  Index        r25, r17, r4
  // orderCustomerId: o.customerId,
  Const        r26, "orderCustomerId"
  Index        r27, r17, r6
  // pairedCustomerName: c.name,
  Const        r28, "pairedCustomerName"
  Index        r29, r23, r8
  // orderTotal: o.total
  Const        r30, "orderTotal"
  Index        r31, r17, r10
  // select {
  MakeMap      r36, 4, r24
  // let result = from o in orders
  Append       r2, r2, r36
  // from c in customers
  Const        r38, 1
  AddInt       r20, r20, r38
  Jump         L2
L1:
  // let result = from o in orders
  AddInt       r13, r13, r38
  Jump         L3
L0:
  // print("--- Cross Join: All order-customer pairs ---")
  Const        r39, "--- Cross Join: All order-customer pairs ---"
  Print        r39
  // for entry in result {
  IterPrep     r40, r2
  Len          r41, r40
  Const        r42, 0
L5:
  Less         r43, r42, r41
  JumpIfFalse  r43, L4
  Index        r45, r40, r42
  // print("Order", entry.orderId,
  Const        r46, "Order"
  Index        r47, r45, r3
  // "(customerId:", entry.orderCustomerId,
  Const        r48, "(customerId:"
  Index        r49, r45, r5
  // ", total: $", entry.orderTotal,
  Const        r50, ", total: $"
  Index        r51, r45, r9
  // ") paired with", entry.pairedCustomerName)
  Const        r52, ") paired with"
  Index        r53, r45, r7
  // print("Order", entry.orderId,
  PrintN       r46, 8, r46
  // for entry in result {
  Const        r62, 1
  Add          r42, r42, r62
  Jump         L5
L4:
  Return       r0
