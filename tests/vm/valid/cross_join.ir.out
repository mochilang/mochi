func main (regs=69)
  // let customers = [
  Const        r0, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}, {"id": 3, "name": "Charlie"}]
  Move         r1, r0
  // let orders = [
  Const        r3, [{"customerId": 1, "id": 100, "total": 250}, {"customerId": 2, "id": 101, "total": 125}, {"customerId": 1, "id": 102, "total": 300}]
  // let result = from o in orders
  Const        r4, []
  IterPrep     r5, r3
  Len          r6, r5
  Const        r7, 0
L3:
  Less         r8, r7, r6
  JumpIfFalse  r8, L0
  Index        r10, r5, r7
  // from c in customers
  IterPrep     r11, r1
  Len          r12, r11
  Const        r13, 0
L2:
  Less         r14, r13, r12
  JumpIfFalse  r14, L1
  // orderId: o.id,
  Const        r17, "orderId"
  Const        r18, "id"
  Index        r19, r10, r18
  // orderCustomerId: o.customerId,
  Const        r20, "orderCustomerId"
  Const        r21, "customerId"
  Index        r22, r10, r21
  // pairedCustomerName: c.name,
  Const        r23, "pairedCustomerName"
  Const        r24, "name"
  // select {
  MakeMap      r33, 4, r17
  // let result = from o in orders
  Append       r4, r4, r33
  // from c in customers
  Jump         L2
L1:
  // let result = from o in orders
  Jump         L3
L0:
  Move         r39, r4
  // print("--- Cross Join: All order-customer pairs ---")
  Const        r40, "--- Cross Join: All order-customer pairs ---"
  Print        r40
  // for entry in result {
  IterPrep     r41, r39
  Len          r42, r41
  Const        r43, 0
L5:
  Less         r44, r43, r42
  JumpIfFalse  r44, L4
  Index        r46, r41, r43
  // print("Order", entry.orderId,
  Const        r47, "Order"
  Const        r56, "orderId"
  Index        r48, r46, r56
  // "(customerId:", entry.orderCustomerId,
  Const        r49, "(customerId:"
  Const        r59, "orderCustomerId"
  Index        r50, r46, r59
  // ", total: $", entry.orderTotal,
  Const        r51, ", total: $"
  Const        r62, "orderTotal"
  Index        r52, r46, r62
  // ") paired with", entry.pairedCustomerName)
  Const        r53, ") paired with"
  Const        r65, "pairedCustomerName"
  Index        r54, r46, r65
  // print("Order", entry.orderId,
  PrintN       r47, 8, r47
  // for entry in result {
  Const        r67, 1
  Add          r43, r43, r67
  Jump         L5
L4:
  Return       r0
