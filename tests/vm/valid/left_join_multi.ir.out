func main (regs=73)
  // let customers = [
  Const        r0, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}]
  // let orders = [
  Const        r1, [{"customerId": 1, "id": 100}, {"customerId": 2, "id": 101}]
  // let items = [
  Const        r2, [{"orderId": 100, "sku": "a"}]
  // let result = from o in orders
  Const        r3, []
  // select { orderId: o.id, name: c.name, item: i }
  Const        r4, "orderId"
  Const        r5, "id"
  Const        r6, "name"
  Const        r7, "item"
  // let result = from o in orders
  IterPrep     r8, r1
  Len          r9, r8
  Const        r11, 0
  Move         r10, r11
L7:
  LessInt      r12, r10, r9
  JumpIfFalse  r12, L0
  Index        r14, r8, r10
  // join from c in customers on o.customerId == c.id
  IterPrep     r15, r0
  Len          r16, r15
  Const        r17, "customerId"
  Move         r18, r11
L6:
  LessInt      r19, r18, r16
  JumpIfFalse  r19, L1
  Index        r21, r15, r18
  Index        r22, r14, r17
  Index        r23, r21, r5
  Equal        r24, r22, r23
  JumpIfFalse  r24, L2
  // left join i in items on o.id == i.orderId
  IterPrep     r25, r2
  Len          r26, r25
  Move         r27, r11
L5:
  LessInt      r28, r27, r26
  JumpIfFalse  r28, L3
  Index        r30, r25, r27
  Const        r31, false
  Index        r32, r14, r5
  Index        r33, r30, r4
  Equal        r34, r32, r33
  JumpIfFalse  r34, L4
  Const        r31, true
  // select { orderId: o.id, name: c.name, item: i }
  Const        r35, "orderId"
  Index        r36, r14, r5
  Const        r37, "name"
  Index        r38, r21, r6
  Const        r39, "item"
  Move         r40, r36
  MakeMap      r43, 3, r35
  // let result = from o in orders
  Append       r3, r3, r43
L4:
  // left join i in items on o.id == i.orderId
  Const        r45, 1
  Add          r27, r27, r45
  Jump         L5
L3:
  Move         r46, r31
  JumpIfTrue   r46, L2
  // select { orderId: o.id, name: c.name, item: i }
  Const        r48, "orderId"
  Index        r49, r14, r5
  Const        r50, "name"
  Index        r51, r21, r6
  Const        r52, "item"
  Move         r53, r49
  MakeMap      r56, 3, r48
  // let result = from o in orders
  Append       r3, r3, r56
L2:
  // join from c in customers on o.customerId == c.id
  Add          r18, r18, r45
  Jump         L6
L1:
  // let result = from o in orders
  AddInt       r10, r10, r45
  Jump         L7
L0:
  // print("--- Left Join Multi ---")
  Const        r58, "--- Left Join Multi ---"
  Print        r58
  // for r in result {
  IterPrep     r59, r3
  Len          r60, r59
  Const        r61, 0
L9:
  Less         r62, r61, r60
  JumpIfFalse  r62, L8
  Index        r64, r59, r61
  // print(r.orderId, r.name, r.item)
  Index        r65, r64, r4
  Index        r66, r64, r6
  Index        r67, r64, r7
  PrintN       r65, 3, r65
  // for r in result {
  Const        r71, 1
  Add          r61, r61, r71
  Jump         L9
L8:
  Return       r0
