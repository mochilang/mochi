func main (regs=79)
  // let customers = [
  Const        r0, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}]
  // let orders = [
  Const        r1, [{"customerId": 1, "id": 100}, {"customerId": 2, "id": 101}]
  // let items = [
  Const        r2, [{"orderId": 100, "sku": "a"}]
  // let result = from o in orders
  Const        r3, []
  IterPrep     r4, r1
  Len          r5, r4
  Const        r7, 0
  Move         r6, r7
L7:
  Less         r8, r6, r5
  JumpIfFalse  r8, L0
  Index        r10, r4, r6
  // join from c in customers on o.customerId == c.id
  IterPrep     r11, r0
  Len          r12, r11
  Move         r13, r7
L6:
  Less         r14, r13, r12
  JumpIfFalse  r14, L1
  Index        r16, r11, r13
  Const        r17, "customerId"
  Index        r18, r10, r17
  Const        r19, "id"
  Index        r20, r16, r19
  Equal        r21, r18, r20
  JumpIfFalse  r21, L2
  // left join i in items on o.id == i.orderId
  IterPrep     r22, r2
  Len          r23, r22
  Move         r24, r7
L5:
  Less         r25, r24, r23
  JumpIfFalse  r25, L3
  Index        r27, r22, r24
  Const        r28, false
  Const        r29, "id"
  Index        r30, r10, r29
  Const        r31, "orderId"
  Index        r32, r27, r31
  Equal        r33, r30, r32
  JumpIfFalse  r33, L4
  Const        r28, true
  // select { orderId: o.id, name: c.name, item: i }
  Const        r34, "orderId"
  Const        r35, "id"
  Index        r36, r10, r35
  Const        r37, "name"
  Const        r38, "name"
  Index        r39, r16, r38
  MakeMap      r44, 3, r34
  // let result = from o in orders
  Append       r3, r3, r44
L4:
  // left join i in items on o.id == i.orderId
  Const        r46, 1
  Add          r24, r24, r46
  Jump         L5
L3:
  Move         r48, r28
  JumpIfTrue   r48, L2
  // select { orderId: o.id, name: c.name, item: i }
  MakeMap      r57, 3, r34
  // let result = from o in orders
  Append       r3, r3, r57
L2:
  // join from c in customers on o.customerId == c.id
  Add          r13, r13, r46
  Jump         L6
L1:
  // let result = from o in orders
  Add          r6, r6, r46
  Jump         L7
L0:
  // print("--- Left Join Multi ---")
  Const        r61, "--- Left Join Multi ---"
  Print        r61
  // for r in result {
  IterPrep     r62, r3
  Len          r63, r62
  Const        r64, 0
L9:
  Less         r65, r64, r63
  JumpIfFalse  r65, L8
  Index        r67, r62, r64
  // print(r.orderId, r.name, r.item)
  Const        r71, "orderId"
  Index        r68, r67, r71
  Const        r73, "name"
  Index        r69, r67, r73
  Const        r75, "item"
  Index        r70, r67, r75
  PrintN       r68, 3, r68
  // for r in result {
  Const        r77, 1
  Add          r64, r64, r77
  Jump         L9
L8:
  Return       r0
