func main (regs=83)
  // let customers = [
  Const        r0, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}]
  Const        r1, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}]
  // let orders = [
  Const        r3, [{"customerId": 1, "id": 100}, {"customerId": 2, "id": 101}]
  // let items = [
  Const        r5, [{"orderId": 100, "sku": "a"}]
  // let result = from o in orders
  Const        r6, []
  IterPrep     r7, r3
  Len          r8, r7
  Const        r9, 0
L7:
  Less         r10, r9, r8
  JumpIfFalse  r10, L0
  Index        r11, r7, r9
  Move         r12, r11
  // join from c in customers on o.customerId == c.id
  IterPrep     r13, r1
  Len          r14, r13
  Const        r15, 0
L6:
  Less         r16, r15, r14
  JumpIfFalse  r16, L1
  Index        r17, r13, r15
  Const        r18, "customerId"
  Index        r19, r12, r18
  Const        r20, "id"
  Index        r21, r17, r20
  Equal        r22, r19, r21
  JumpIfFalse  r22, L2
  // left join i in items on o.id == i.orderId
  IterPrep     r23, r5
  Len          r24, r23
  Const        r25, 0
L5:
  Less         r26, r25, r24
  JumpIfFalse  r26, L3
  Index        r27, r23, r25
  Const        r28, false
  Const        r29, "id"
  Index        r30, r12, r29
  Const        r31, "orderId"
  Index        r32, r27, r31
  Equal        r33, r30, r32
  JumpIfFalse  r33, L4
  Const        r28, true
  // select { orderId: o.id, name: c.name, item: i }
  Const        r35, "id"
  Index        r36, r12, r35
  Const        r38, "name"
  Index        r39, r17, r38
  Const        r41, "orderId"
  Move         r42, r36
  Const        r43, "name"
  Move         r44, r39
  Const        r45, "item"
  Move         r46, r27
  MakeMap      r47, 3, r41
  // let result = from o in orders
  Append       r48, r6, r47
  Move         r6, r48
L4:
  Const        r49, 1
  // left join i in items on o.id == i.orderId
  AddInt       r25, r25, r49
  Jump         L5
L3:
  JumpIfTrue   r28, L2
  // select { orderId: o.id, name: c.name, item: i }
  Const        r52, "id"
  Index        r53, r12, r52
  Const        r55, "name"
  Index        r56, r17, r55
  Const        r58, "orderId"
  Move         r59, r53
  Const        r60, "name"
  Move         r61, r56
  Const        r62, "item"
  Const        r63, nil
  MakeMap      r64, 3, r58
  // let result = from o in orders
  Append       r65, r6, r64
  Move         r6, r65
L2:
  // join from c in customers on o.customerId == c.id
  Jump         L6
L1:
  // let result = from o in orders
  AddInt       r9, r9, r49
  Jump         L7
L0:
  Move         r66, r6
  // print("--- Left Join Multi ---")
  Const        r67, "--- Left Join Multi ---"
  Print        r67
  // for r in result {
  IterPrep     r68, r66
  Len          r69, r68
  Const        r70, 0
L9:
  Less         r71, r70, r69
  JumpIfFalse  r71, L8
  Index        r72, r68, r70
  Move         r73, r72
  // print(r.orderId, r.name, r.item)
  Const        r77, "orderId"
  Index        r78, r73, r77
  Move         r74, r78
  Const        r79, "name"
  Index        r80, r73, r79
  Move         r75, r80
  Const        r81, "item"
  Index        r82, r73, r81
  Move         r76, r82
  PrintN       r74, 3, r74
  // for r in result {
  AddInt       r70, r70, r49
  Jump         L9
L8:
  Return       r0
