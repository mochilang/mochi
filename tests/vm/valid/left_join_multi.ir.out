func main (regs=79)
  // let customers = [
  Const        r0, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}]
  // let orders = [
  Const        r1, [{"customerId": 1, "id": 100}, {"customerId": 2, "id": 101}]
  // let items = [
  Const        r2, [{"orderId": 100, "sku": "a"}]
  // let result = from o in orders
  Const        r3, []
  // select { orderId: o.id, name: c.name, item: i }
  Const        r4, "orderId"
  Const        r5, "id"
  Const        r6, "name"
  Const        r7, "item"
  // let result = from o in orders
  IterPrep     r8, r1
  Len          r9, r8
  Const        r11, 0
  Move         r10, r11
L7:
  LessInt      r12, r10, r9
  JumpIfFalse  r12, L0
  Index        r14, r8, r10
  // join from c in customers on o.customerId == c.id
  IterPrep     r15, r0
  Len          r16, r15
  Const        r17, "customerId"
  Move         r18, r11
L6:
  LessInt      r19, r18, r16
  JumpIfFalse  r19, L1
  Index        r21, r15, r18
  Index        r22, r14, r17
  Index        r23, r21, r5
  Equal        r24, r22, r23
  JumpIfFalse  r24, L2
  // left join i in items on o.id == i.orderId
  IterPrep     r25, r2
  Len          r26, r25
  Move         r27, r11
L5:
  LessInt      r28, r27, r26
  JumpIfFalse  r28, L3
  Index        r30, r25, r27
  Const        r31, false
  Index        r32, r14, r5
  Index        r33, r30, r4
  Equal        r34, r32, r33
  JumpIfFalse  r34, L4
  Const        r31, true
  // select { orderId: o.id, name: c.name, item: i }
  Const        r35, "orderId"
  Index        r36, r14, r5
  Const        r37, "name"
  Index        r38, r21, r6
  Const        r39, "item"
  Move         r40, r35
  Move         r41, r36
  Move         r42, r37
  Move         r43, r38
  Move         r44, r39
  Move         r45, r30
  MakeMap      r46, 3, r40
  // let result = from o in orders
  Append       r3, r3, r46
L4:
  // left join i in items on o.id == i.orderId
  Const        r48, 1
  Add          r27, r27, r48
  Jump         L5
L3:
  Move         r49, r31
  JumpIfTrue   r49, L2
  Const        r30, nil
  // select { orderId: o.id, name: c.name, item: i }
  Const        r51, "orderId"
  Index        r52, r14, r5
  Const        r53, "name"
  Index        r54, r21, r6
  Const        r55, "item"
  Move         r56, r51
  Move         r57, r52
  Move         r58, r53
  Move         r59, r54
  Move         r60, r55
  Move         r61, r30
  MakeMap      r62, 3, r56
  // let result = from o in orders
  Append       r3, r3, r62
L2:
  // join from c in customers on o.customerId == c.id
  Add          r18, r18, r48
  Jump         L6
L1:
  // let result = from o in orders
  AddInt       r10, r10, r48
  Jump         L7
L0:
  // print("--- Left Join Multi ---")
  Const        r64, "--- Left Join Multi ---"
  Print        r64
  // for r in result {
  IterPrep     r65, r3
  Len          r66, r65
  Const        r67, 0
L9:
  Less         r68, r67, r66
  JumpIfFalse  r68, L8
  Index        r70, r65, r67
  // print(r.orderId, r.name, r.item)
  Index        r71, r70, r4
  Index        r72, r70, r6
  Index        r73, r70, r7
  PrintN       r71, 3, r71
  // for r in result {
  Const        r77, 1
  Add          r67, r67, r77
  Jump         L9
L8:
  Return       r0
