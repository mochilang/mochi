func main (regs=86)
  // let customers = [
  Const        r0, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}]
  Const        r1, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}]
  // let orders = [
  Const        r3, [{"customerId": 1, "id": 100}, {"customerId": 2, "id": 101}]
  // let items = [
  Const        r5, [{"orderId": 100, "sku": "a"}]
  // let result = from o in orders
  Const        r6, []
  IterPrep     r7, r3
  Len          r8, r7
  Const        r9, 0
L7:
  Less         r10, r9, r8
  JumpIfFalse  r10, L0
  Index        r11, r7, r9
  Move         r12, r11
  // join from c in customers on o.customerId == c.id
  IterPrep     r13, r1
  Len          r14, r13
  Const        r15, 0
L6:
  Less         r16, r15, r14
  JumpIfFalse  r16, L1
  Index        r17, r13, r15
  Move         r18, r17
  Const        r19, "customerId"
  Index        r20, r12, r19
  Const        r21, "id"
  Index        r22, r18, r21
  Equal        r23, r20, r22
  JumpIfFalse  r23, L2
  // left join i in items on o.id == i.orderId
  IterPrep     r24, r5
  Len          r25, r24
  Const        r26, 0
L5:
  Less         r27, r26, r25
  JumpIfFalse  r27, L3
  Index        r28, r24, r26
  Move         r29, r28
  Const        r31, "id"
  Index        r32, r12, r31
  Const        r33, "orderId"
  Index        r34, r29, r33
  Equal        r35, r32, r34
  JumpIfFalse  r35, L4
  // select { orderId: o.id, name: c.name, item: i }
  Const        r37, "id"
  Index        r38, r12, r37
  Const        r40, "name"
  Index        r41, r18, r40
  Const        r43, "orderId"
  Move         r44, r38
  Const        r45, "name"
  Move         r46, r41
  Const        r47, "item"
  Move         r48, r29
  MakeMap      r49, 3, r43
  // let result = from o in orders
  Append       r50, r6, r49
  Move         r6, r50
L4:
  Const        r51, 1
  // left join i in items on o.id == i.orderId
  AddInt       r26, r26, r51
  Jump         L5
L3:
  Jump         L2
  // select { orderId: o.id, name: c.name, item: i }
  Const        r55, "id"
  Index        r56, r12, r55
  Const        r58, "name"
  Index        r59, r18, r58
  Const        r61, "orderId"
  Move         r62, r56
  Const        r63, "name"
  Move         r64, r59
  Const        r65, "item"
  Const        r66, nil
  MakeMap      r67, 3, r61
  // let result = from o in orders
  Append       r68, r6, r67
  Move         r6, r68
L2:
  // join from c in customers on o.customerId == c.id
  Jump         L6
L1:
  // let result = from o in orders
  AddInt       r9, r9, r51
  Jump         L7
L0:
  Move         r69, r6
  // print("--- Left Join Multi ---")
  Const        r70, "--- Left Join Multi ---"
  Print        r70
  // for r in result {
  IterPrep     r71, r69
  Len          r72, r71
  Const        r73, 0
L9:
  Less         r74, r73, r72
  JumpIfFalse  r74, L8
  Index        r75, r71, r73
  Move         r76, r75
  // print(r.orderId, r.name, r.item)
  Const        r80, "orderId"
  Index        r81, r76, r80
  Move         r77, r81
  Const        r82, "name"
  Index        r83, r76, r82
  Move         r78, r83
  Const        r84, "item"
  Index        r85, r76, r84
  Move         r79, r85
  PrintN       r77, 3, r77
  // for r in result {
  AddInt       r73, r73, r51
  Jump         L9
L8:
  Return       r0
