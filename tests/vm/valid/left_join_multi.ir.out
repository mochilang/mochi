func main (regs=80)
  // let customers = [
  Const        r0, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}]
  // let orders = [
  Const        r1, [{"customerId": 1, "id": 100}, {"customerId": 2, "id": 101}]
  // let items = [
  Const        r2, [{"orderId": 100, "sku": "a"}]
  // let result = from o in orders
  Const        r3, []
  IterPrep     r4, r1
  Len          r5, r4
  Const        r6, 0
L7:
  Less         r7, r6, r5
  JumpIfFalse  r7, L0
  Index        r9, r4, r6
  // join from c in customers on o.customerId == c.id
  IterPrep     r10, r0
  Len          r11, r10
  Const        r12, 0
L6:
  Less         r13, r12, r11
  JumpIfFalse  r13, L1
  Index        r15, r10, r12
  Const        r16, "customerId"
  Index        r17, r9, r16
  Const        r18, "id"
  Index        r19, r15, r18
  Equal        r20, r17, r19
  JumpIfFalse  r20, L2
  // left join i in items on o.id == i.orderId
  IterPrep     r21, r2
  Len          r22, r21
  Const        r23, 0
L5:
  Less         r24, r23, r22
  JumpIfFalse  r24, L3
  Index        r26, r21, r23
  Const        r27, false
  Const        r28, "id"
  Index        r29, r9, r28
  Const        r30, "orderId"
  Index        r31, r26, r30
  Equal        r32, r29, r31
  JumpIfFalse  r32, L4
  Const        r27, true
  // select { orderId: o.id, name: c.name, item: i }
  Const        r33, "orderId"
  Const        r34, "id"
  Index        r35, r9, r34
  Const        r36, "name"
  Const        r37, "name"
  Index        r38, r15, r37
  MakeMap      r43, 3, r33
  // let result = from o in orders
  Append       r3, r3, r43
L4:
  // left join i in items on o.id == i.orderId
  Const        r45, 1
  Add          r23, r23, r45
  Jump         L5
L3:
  Move         r47, r27
  JumpIfTrue   r47, L2
  // select { orderId: o.id, name: c.name, item: i }
  MakeMap      r56, 3, r33
  // let result = from o in orders
  Append       r3, r3, r56
L2:
  // join from c in customers on o.customerId == c.id
  Const        r58, 1
  Add          r12, r12, r58
  Jump         L6
L1:
  // let result = from o in orders
  Const        r60, 1
  Add          r6, r6, r60
  Jump         L7
L0:
  // print("--- Left Join Multi ---")
  Const        r62, "--- Left Join Multi ---"
  Print        r62
  // for r in result {
  IterPrep     r63, r3
  Len          r64, r63
  Const        r65, 0
L9:
  Less         r66, r65, r64
  JumpIfFalse  r66, L8
  Index        r68, r63, r65
  // print(r.orderId, r.name, r.item)
  Const        r72, "orderId"
  Index        r69, r68, r72
  Const        r74, "name"
  Index        r70, r68, r74
  Const        r76, "item"
  Index        r71, r68, r76
  PrintN       r69, 3, r69
  // for r in result {
  Const        r78, 1
  Add          r65, r65, r78
  Jump         L9
L8:
  Return       r0
