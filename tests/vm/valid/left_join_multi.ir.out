func main (regs=23)
  // let customers = [
  Const        r0, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}]
  // let orders = [
  Const        r1, [{"customerId": 1, "id": 100}, {"customerId": 2, "id": 101}]
  // let items = [
  Const        r2, [{"orderId": 100, "sku": "a"}]
  // let result = from o in orders
  Const        r3, []
L1:
  // select { orderId: o.id, name: c.name, item: i }
  Const        r4, "orderId"
L3:
  Const        r5, "id"
  Const        r6, "name"
  Const        r7, "item"
  // let result = from o in orders
  IterPrep     r8, r1
L2:
  Len          r1, r8
  Const        r9, 0
L6:
  Move         r10, r9
  LessInt      r11, r10, r1
L4:
  JumpIfFalse  r11, L0
  Index        r1, r8, r10
L5:
  // join from c in customers on o.customerId == c.id
  IterPrep     r8, r0
  Len          r12, r8
  Const        r13, "customerId"
  Move         r14, r9
  LessInt      r15, r14, r12
  JumpIfFalse  r15, L1
  Index        r12, r8, r14
  Index        r8, r1, r13
  Index        r13, r12, r5
  Equal        r16, r8, r13
  JumpIfFalse  r16, L2
  // left join i in items on o.id == i.orderId
  IterPrep     r16, r2
  Len          r2, r16
  Move         r13, r9
  LessInt      r8, r13, r2
  JumpIfFalse  r8, L3
  Index        r8, r16, r13
  Const        r16, false
  Index        r2, r1, r5
  Index        r17, r8, r4
  Equal        r18, r2, r17
  JumpIfFalse  r18, L4
  Const        r16, true
  // select { orderId: o.id, name: c.name, item: i }
  Move         r18, r4
  Index        r17, r1, r5
  Move         r2, r6
  Index        r19, r12, r6
  Move         r20, r7
  Move         r21, r18
  Move         r18, r17
  Move         r17, r2
  Move         r2, r19
  Move         r19, r20
  Move         r20, r8
  MakeMap      r22, 3, r21
  // let result = from o in orders
  Append       r3, r3, r22
  // left join i in items on o.id == i.orderId
  Const        r22, 1
  Add          r13, r13, r22
  Jump         L4
  Move         r13, r16
  JumpIfTrue   r13, L2
  Const        r8, nil
  // select { orderId: o.id, name: c.name, item: i }
  Move         r13, r4
  Index        r16, r1, r5
  Move         r1, r6
  Index        r5, r12, r6
  Move         r12, r7
  Move         r20, r13
  Move         r13, r16
  Move         r16, r1
  Move         r1, r5
  Move         r5, r12
  Move         r12, r8
  MakeMap      r8, 3, r20
  // let result = from o in orders
  Append       r3, r3, r8
  // join from c in customers on o.customerId == c.id
  Add          r14, r14, r22
  Jump         L5
  // let result = from o in orders
  AddInt       r10, r10, r22
  Jump         L6
L0:
  // print("--- Left Join Multi ---")
  Const        r8, "--- Left Join Multi ---"
  Print        r8
  // for r in result {
  IterPrep     r8, r3
  Len          r3, r8
  Move         r12, r9
L8:
  Less         r9, r12, r3
  JumpIfFalse  r9, L7
  Index        r9, r8, r12
  // print(r.orderId, r.name, r.item)
  Index        r8, r9, r4
  Index        r4, r9, r6
  Index        r6, r9, r7
  PrintN       r8, 3, r8
  // for r in result {
  Add          r12, r12, r22
  Jump         L8
L7:
  Return       r0
