func main (regs=84)
  // let customers = [
  Const        r0, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}]
  Move         r1, r0
  // let orders = [
  Const        r3, [{"customerId": 1, "id": 100}, {"customerId": 2, "id": 101}]
  // let items = [
  Const        r5, [{"orderId": 100, "sku": "a"}]
  // let result = from o in orders
  Const        r6, []
  IterPrep     r7, r3
  Len          r8, r7
  Const        r9, 0
L7:
  Less         r10, r9, r8
  JumpIfFalse  r10, L0
  Index        r12, r7, r9
  // join from c in customers on o.customerId == c.id
  IterPrep     r13, r1
  Len          r14, r13
  Const        r15, 0
L6:
  Less         r16, r15, r14
  JumpIfFalse  r16, L1
  Index        r18, r13, r15
  Const        r19, "customerId"
  Index        r20, r12, r19
  Const        r21, "id"
  Index        r22, r18, r21
  Equal        r23, r20, r22
  JumpIfFalse  r23, L2
  // left join i in items on o.id == i.orderId
  IterPrep     r24, r5
  Len          r25, r24
  Const        r26, 0
L5:
  Less         r27, r26, r25
  JumpIfFalse  r27, L3
  Index        r29, r24, r26
  Const        r30, false
  Const        r31, "id"
  Index        r32, r12, r31
  Const        r33, "orderId"
  Index        r34, r29, r33
  Equal        r35, r32, r34
  JumpIfFalse  r35, L4
  Const        r30, true
  // select { orderId: o.id, name: c.name, item: i }
  Const        r36, "orderId"
  Const        r37, "id"
  Index        r38, r12, r37
  Const        r39, "name"
  Const        r40, "name"
  Index        r41, r18, r40
  MakeMap      r46, 3, r36
  // let result = from o in orders
  Append       r6, r6, r46
L4:
  // left join i in items on o.id == i.orderId
  Jump         L5
L3:
  Move         r50, r30
  JumpIfTrue   r50, L2
  // select { orderId: o.id, name: c.name, item: i }
  MakeMap      r59, 3, r36
  // let result = from o in orders
  Append       r6, r6, r59
L2:
  // join from c in customers on o.customerId == c.id
  Const        r61, 1
  Add          r15, r15, r61
  Jump         L6
L1:
  // let result = from o in orders
  Const        r63, 1
  Add          r9, r9, r63
  Jump         L7
L0:
  Move         r65, r6
  // print("--- Left Join Multi ---")
  Const        r66, "--- Left Join Multi ---"
  Print        r66
  // for r in result {
  IterPrep     r67, r65
  Len          r68, r67
  Const        r69, 0
L9:
  Less         r70, r69, r68
  JumpIfFalse  r70, L8
  Index        r72, r67, r69
  // print(r.orderId, r.name, r.item)
  Const        r76, "orderId"
  Index        r73, r72, r76
  Const        r78, "name"
  Index        r74, r72, r78
  Const        r80, "item"
  Index        r75, r72, r80
  PrintN       r73, 3, r73
  // for r in result {
  Const        r82, 1
  Add          r69, r69, r82
  Jump         L9
L8:
  Return       r0
