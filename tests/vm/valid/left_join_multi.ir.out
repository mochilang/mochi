func main (regs=85)
  // let customers = [
  Const        r0, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}]
  Const        r1, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}]
  // let orders = [
  Const        r3, [{"customerId": 1, "id": 100}, {"customerId": 2, "id": 101}]
  // let items = [
  Const        r5, [{"orderId": 100, "sku": "a"}]
  // let result = from o in orders
  Const        r6, []
  IterPrep     r7, r3
  Len          r8, r7
  Const        r9, 0
L7:
  Less         r10, r9, r8
  JumpIfFalse  r10, L0
  Index        r11, r7, r9
  Move         r12, r11
  // join from c in customers on o.customerId == c.id
  IterPrep     r13, r1
  Len          r14, r13
  Const        r15, 0
L6:
  Less         r16, r15, r14
  JumpIfFalse  r16, L1
  Index        r17, r13, r15
  Const        r18, "customerId"
  Index        r19, r12, r18
  Const        r20, "id"
  Index        r21, r17, r20
  Equal        r22, r19, r21
  JumpIfFalse  r22, L2
  // left join i in items on o.id == i.orderId
  IterPrep     r23, r5
  Len          r24, r23
  Const        r25, 0
L5:
  Less         r26, r25, r24
  JumpIfFalse  r26, L3
  Index        r27, r23, r25
  Const        r28, false
  Const        r30, "id"
  Index        r31, r12, r30
  Const        r32, "orderId"
  Index        r33, r27, r32
  Equal        r34, r31, r33
  JumpIfFalse  r34, L4
  Const        r28, true
  // select { orderId: o.id, name: c.name, item: i }
  Const        r37, "id"
  Index        r38, r12, r37
  Const        r40, "name"
  Index        r41, r17, r40
  Const        r43, "orderId"
  Move         r44, r38
  Const        r45, "name"
  Move         r46, r41
  Const        r47, "item"
  Move         r48, r27
  MakeMap      r49, 3, r43
  // let result = from o in orders
  Append       r50, r6, r49
  Move         r6, r50
L4:
  Const        r51, 1
  // left join i in items on o.id == i.orderId
  AddInt       r25, r25, r51
  Jump         L5
L3:
  JumpIfTrue   r28, L2
  // select { orderId: o.id, name: c.name, item: i }
  Const        r54, "id"
  Index        r55, r12, r54
  Const        r57, "name"
  Index        r58, r17, r57
  Const        r60, "orderId"
  Move         r61, r55
  Const        r62, "name"
  Move         r63, r58
  Const        r64, "item"
  Const        r65, nil
  MakeMap      r66, 3, r60
  // let result = from o in orders
  Append       r67, r6, r66
  Move         r6, r67
L2:
  // join from c in customers on o.customerId == c.id
  Jump         L6
L1:
  // let result = from o in orders
  AddInt       r9, r9, r51
  Jump         L7
L0:
  Move         r68, r6
  // print("--- Left Join Multi ---")
  Const        r69, "--- Left Join Multi ---"
  Print        r69
  // for r in result {
  IterPrep     r70, r68
  Len          r71, r70
  Const        r72, 0
L9:
  Less         r73, r72, r71
  JumpIfFalse  r73, L8
  Index        r74, r70, r72
  Move         r75, r74
  // print(r.orderId, r.name, r.item)
  Const        r79, "orderId"
  Index        r80, r75, r79
  Move         r76, r80
  Const        r81, "name"
  Index        r82, r75, r81
  Move         r77, r82
  Const        r83, "item"
  Index        r84, r75, r83
  Move         r78, r84
  PrintN       r76, 3, r76
  // for r in result {
  AddInt       r72, r72, r51
  Jump         L9
L8:
  Return       r0
