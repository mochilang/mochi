let _structParsers: map<string, Function> = {}
let left: Tree
let value: int
let right: Tree
let t: Node = Node(left: Leaf, value: 1, right: Node(left: Leaf, value: 2, right: Leaf))
fun sum_tree(t: Tree): int {
  return (() {
  let _t = t
  if (_t is Leaf) { return 0; }
  if (_t is Node) { return ((left, value, right) { return ((sum_tree(left) + value) + sum_tree(right)); })((_t as Node).left, (_t as Node).value, (_t as Node).right); }
  return null
  })()
}
fun main() {
  print(sum_tree(t))
}
