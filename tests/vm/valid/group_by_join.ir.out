func main (regs=81)
  // let customers = [
  Const        r0, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}]
  // let orders = [
  Const        r1, [{"customerId": 1, "id": 100}, {"customerId": 1, "id": 101}, {"customerId": 2, "id": 102}]
  // let stats = from o in orders
  Const        r2, []
  MakeMap      r3, 0, r0
  Const        r4, []
  IterPrep     r5, r1
  Len          r6, r5
  Const        r7, 0
L5:
  Less         r8, r7, r6
  JumpIfFalse  r8, L0
  Index        r10, r5, r7
  // join from c in customers on o.customerId == c.id
  IterPrep     r11, r0
  Len          r12, r11
  Const        r13, 0
L4:
  Less         r14, r13, r12
  JumpIfFalse  r14, L1
  Index        r16, r11, r13
  Const        r17, "customerId"
  Index        r18, r10, r17
  Const        r19, "id"
  Index        r20, r16, r19
  Equal        r21, r18, r20
  JumpIfFalse  r21, L2
  // let stats = from o in orders
  Const        r22, "o"
  Move         r23, r10
  Const        r24, "c"
  Move         r25, r16
  MakeMap      r26, 2, r22
  // group by c.name into g
  Const        r27, "name"
  Index        r28, r16, r27
  Str          r29, r28
  In           r30, r29, r3
  JumpIfTrue   r30, L3
  // let stats = from o in orders
  Const        r31, []
  Const        r32, "__group__"
  Const        r33, true
  Const        r34, "key"
  // group by c.name into g
  Move         r35, r28
  // let stats = from o in orders
  Const        r36, "items"
  Move         r37, r31
  MakeMap      r38, 3, r32
  SetIndex     r3, r29, r38
  Append       r4, r4, r38
L3:
  Const        r40, "items"
  Index        r41, r3, r29
  Index        r42, r41, r40
  Append       r43, r42, r26
  SetIndex     r41, r40, r43
L2:
  // join from c in customers on o.customerId == c.id
  Const        r44, 1
  Add          r13, r13, r44
  Jump         L4
L1:
  // let stats = from o in orders
  Const        r46, 1
  Add          r7, r7, r46
  Jump         L5
L0:
  Const        r48, 0
  Len          r49, r4
L7:
  Less         r50, r48, r49
  JumpIfFalse  r50, L6
  Index        r52, r4, r48
  // name: g.key,
  Const        r53, "name"
  Const        r54, "key"
  Index        r55, r52, r54
  // count: count(g)
  Const        r56, "count"
  // select {
  MakeMap      r60, 2, r53
  // let stats = from o in orders
  Append       r2, r2, r60
  Const        r62, 1
  Add          r48, r48, r62
  Jump         L7
L6:
  // print("--- Orders per customer ---")
  Const        r64, "--- Orders per customer ---"
  Print        r64
  // for s in stats {
  IterPrep     r65, r2
  Len          r66, r65
  Const        r67, 0
L9:
  Less         r68, r67, r66
  JumpIfFalse  r68, L8
  Index        r70, r65, r67
  // print(s.name, "orders:", s.count)
  Const        r74, "name"
  Index        r71, r70, r74
  Const        r72, "orders:"
  Const        r77, "count"
  Index        r73, r70, r77
  PrintN       r71, 3, r71
  // for s in stats {
  Const        r79, 1
  Add          r67, r67, r79
  Jump         L9
L8:
  Return       r0
