func main (regs=84)
  // let customers = [
  Const        r0, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}]
  Move         r1, r0
  // let orders = [
  Const        r2, [{"customerId": 1, "id": 100}, {"customerId": 1, "id": 101}, {"customerId": 2, "id": 102}]
  Move         r3, r2
  // let stats = from o in orders
  MakeMap      r5, 0, r0
  IterPrep     r7, r3
  Const        r9, 0
  JumpIfFalse  r10, L0
  Index        r11, r7, r9
  Move         r12, r11
  // join from c in customers on o.customerId == c.id
  IterPrep     r13, r1
  Const        r15, 0
  JumpIfFalse  r16, L0
  Index        r17, r13, r15
  Move         r18, r17
  JumpIfFalse  r23, L0
  // let stats = from o in orders
  Const        r24, "o"
  Move         r25, r12
  Const        r26, "c"
  Move         r27, r18
  MakeMap      r28, 2, r24
  // group by c.name into g
  Const        r29, "name"
  Index        r30, r18, r29
  Str          r31, r30
  JumpIfTrue   r32, L1
  // let stats = from o in orders
  Const        r33, []
  Const        r34, "__group__"
  Const        r35, true
  Const        r36, "key"
  // group by c.name into g
  Move         r37, r30
  // let stats = from o in orders
  Const        r38, "items"
  Move         r39, r33
  MakeMap      r40, 3, r34
  SetIndex     r5, r31, r40
L1:
  Const        r42, "items"
  Index        r43, r5, r31
  Index        r44, r43, r42
  Append       r45, r44, r28
  SetIndex     r43, r42, r45
  // join from c in customers on o.customerId == c.id
  Jump         L0
  // let stats = from o in orders
  Jump         L0
  JumpIfFalse  r52, L2
  Jump         L0
L2:
  Move         r68, r4
  // print("--- Orders per customer ---")
  Const        r69, "--- Orders per customer ---"
  Print        r69
  // for s in stats {
  IterPrep     r70, r68
  Const        r72, 0
  JumpIfFalse  r73, L3
  Index        r74, r70, r72
  Move         r75, r74
  // print(s.name, "orders:", s.count)
  Const        r79, "name"
  Index        r80, r75, r79
  Move         r76, r80
  Const        r81, "orders:"
  Move         r77, r81
  Const        r82, "count"
  Index        r83, r75, r82
  Move         r78, r83
  PrintN       r76, 3, r76
  // for s in stats {
  Jump         L0
L3:
  Return       r0
