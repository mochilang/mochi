func main (regs=71)
  // let customers = [
  Const        r0, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}]
  // let orders = [
  Const        r1, [{"customerId": 1, "id": 100}, {"customerId": 1, "id": 101}, {"customerId": 2, "id": 102}]
  // let stats = from o in orders
  Const        r2, []
  // group by c.name into g
  Const        r3, "name"
  // name: g.key,
  Const        r4, "key"
  // count: count(g)
  Const        r5, "count"
  // let stats = from o in orders
  MakeMap      r6, 0, r0
  Const        r7, []
  IterPrep     r8, r1
  Len          r9, r8
  Const        r10, 0
L5:
  LessInt      r11, r10, r9
  JumpIfFalse  r11, L0
  Index        r13, r8, r10
  // join from c in customers on o.customerId == c.id
  IterPrep     r14, r0
  Len          r15, r14
  Const        r16, 0
L4:
  LessInt      r17, r16, r15
  JumpIfFalse  r17, L1
  Index        r19, r14, r16
  Const        r20, "customerId"
  Index        r21, r13, r20
  Const        r22, "id"
  Index        r23, r19, r22
  Equal        r24, r21, r23
  JumpIfFalse  r24, L2
  // group by c.name into g
  Index        r30, r19, r3
  Str          r31, r30
  In           r32, r31, r6
  JumpIfTrue   r32, L3
  // let stats = from o in orders
  Const        r33, "__group__"
  Const        r34, true
  // group by c.name into g
  Move         r35, r30
  // let stats = from o in orders
  Const        r36, 0
  MakeMap      r37, 3, r33
  SetIndex     r6, r31, r37
  Append       r38, r7, r37
  Move         r7, r38
L3:
  Index        r39, r6, r31
  Index        r40, r39, r5
  Const        r41, 1
  AddInt       r42, r40, r41
  SetIndex     r39, r5, r42
L2:
  // join from c in customers on o.customerId == c.id
  AddInt       r16, r16, r41
  Jump         L4
L1:
  // let stats = from o in orders
  AddInt       r10, r10, r41
  Jump         L5
L0:
  Move         r43, r36
  Len          r44, r7
L7:
  LessInt      r45, r43, r44
  JumpIfFalse  r45, L6
  Index        r47, r7, r43
  // name: g.key,
  Const        r48, "name"
  Index        r49, r47, r4
  // count: count(g)
  Const        r50, "count"
  Index        r51, r47, r5
  // select {
  MakeMap      r54, 2, r48
  // let stats = from o in orders
  Append       r2, r2, r54
  AddInt       r43, r43, r41
  Jump         L7
L6:
  // print("--- Orders per customer ---")
  Const        r56, "--- Orders per customer ---"
  Print        r56
  // for s in stats {
  IterPrep     r57, r2
  Len          r58, r57
  Const        r59, 0
L9:
  Less         r60, r59, r58
  JumpIfFalse  r60, L8
  Index        r62, r57, r59
  // print(s.name, "orders:", s.count)
  Index        r63, r62, r3
  Const        r64, "orders:"
  Index        r65, r62, r5
  PrintN       r63, 3, r63
  // for s in stats {
  Const        r69, 1
  Add          r59, r59, r69
  Jump         L9
L8:
  Return       r0
