func main (regs=77)
  // let customers = [
  Const        r0, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}]
  // let orders = [
  Const        r1, [{"customerId": 1, "id": 100}, {"customerId": 1, "id": 101}, {"customerId": 2, "id": 102}]
  // let stats = from o in orders
  Const        r2, []
  MakeMap      r3, 0, r0
  Const        r4, []
  IterPrep     r5, r1
  Len          r6, r5
  Const        r7, 0
L5:
  Less         r8, r7, r6
  JumpIfFalse  r8, L0
  Index        r10, r5, r7
  // join from c in customers on o.customerId == c.id
  IterPrep     r11, r0
  Len          r12, r11
  Const        r13, 0
L4:
  Less         r14, r13, r12
  JumpIfFalse  r14, L1
  Index        r16, r11, r13
  Const        r17, "customerId"
  Index        r18, r10, r17
  Const        r19, "id"
  Index        r20, r16, r19
  Equal        r21, r18, r20
  JumpIfFalse  r21, L2
  // let stats = from o in orders
  Const        r22, "o"
  Move         r23, r10
  Const        r24, "c"
  Move         r25, r16
  MakeMap      r26, 2, r22
  // group by c.name into g
  Const        r27, "name"
  Index        r28, r16, r27
  Str          r29, r28
  In           r30, r29, r3
  JumpIfTrue   r30, L3
  // let stats = from o in orders
  Const        r31, []
  Const        r32, "__group__"
  Const        r33, true
  Const        r34, "key"
  // group by c.name into g
  Move         r35, r28
  // let stats = from o in orders
  Const        r36, "items"
  Move         r37, r31
  MakeMap      r38, 3, r32
  SetIndex     r3, r29, r38
  Append       r4, r4, r38
L3:
  Index        r40, r3, r29
  Index        r41, r40, r36
  Append       r42, r41, r26
  SetIndex     r40, r36, r42
L2:
  // join from c in customers on o.customerId == c.id
  Const        r43, 1
  Add          r13, r13, r43
  Jump         L4
L1:
  // let stats = from o in orders
  Const        r45, 1
  Add          r7, r7, r45
  Jump         L5
L0:
  Const        r47, 0
  Len          r49, r4
L7:
  Less         r50, r47, r49
  JumpIfFalse  r50, L6
  // count: count(g)
  Const        r54, "count"
  // select {
  MakeMap      r58, 2, r27
  // let stats = from o in orders
  Append       r2, r2, r58
  Const        r60, 1
  Add          r47, r47, r60
  Jump         L7
L6:
  // print("--- Orders per customer ---")
  Const        r62, "--- Orders per customer ---"
  Print        r62
  // for s in stats {
  IterPrep     r63, r2
  Len          r64, r63
  Const        r65, 0
L9:
  Less         r66, r65, r64
  JumpIfFalse  r66, L8
  Index        r68, r63, r65
  // print(s.name, "orders:", s.count)
  Index        r69, r68, r27
  Const        r70, "orders:"
  Index        r71, r68, r54
  PrintN       r69, 3, r69
  // for s in stats {
  Const        r75, 1
  Add          r65, r65, r75
  Jump         L9
L8:
  Return       r0
