func main (regs=28)
  // let customers = [
  Const        r0, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}, {"id": 3, "name": "Charlie"}]
  // let orders = [
  Const        r1, [{"customerId": 1, "id": 100}, {"customerId": 1, "id": 101}, {"customerId": 2, "id": 102}]
  // let stats = from c in customers
  Const        r2, []
L8:
  // group by c.name into g
  Const        r3, "name"
  // name: g.key,
  Const        r4, "key"
  // count: count(from r in g where r.o select r)
  Const        r5, "count"
  Const        r6, "o"
  // let stats = from c in customers
  MakeMap      r7, 0, r0
  Const        r8, []
  IterPrep     r9, r0
L2:
  Len          r10, r9
  Const        r11, 0
L6:
  LessInt      r12, r11, r10
  JumpIfFalse  r12, L0
L4:
  Index        r10, r9, r11
  // left join o in orders on o.customerId == c.id
  IterPrep     r9, r1
L1:
  Len          r1, r9
  Const        r13, 0
L5:
  LessInt      r14, r13, r1
  JumpIfFalse  r14, L1
  Index        r1, r9, r13
  Const        r9, false
  Const        r15, "customerId"
  Index        r16, r1, r15
  Const        r15, "id"
L3:
  Index        r17, r10, r15
L0:
  Equal        r15, r16, r17
  JumpIfFalse  r15, L2
  Const        r9, true
  // let stats = from c in customers
  Const        r15, "c"
  Move         r17, r10
  Move         r16, r1
  MakeMap      r1, 2, r15
  // group by c.name into g
  Index        r18, r10, r3
  Str          r19, r18
  In           r20, r19, r7
  JumpIfTrue   r20, L3
  // let stats = from c in customers
  Const        r20, []
  Const        r21, "__group__"
  Const        r22, true
  Const        r23, "key"
  // group by c.name into g
  Move         r24, r18
  // let stats = from c in customers
  Const        r18, "items"
  Move         r25, r20
  Const        r20, "count"
  Const        r26, 0
  Move         r27, r21
  Move         r21, r22
  Move         r22, r23
  Move         r23, r24
  Move         r24, r18
  Move         r18, r25
  Move         r25, r20
  Move         r20, r26
  MakeMap      r26, 4, r27
  SetIndex     r7, r19, r26
  Append       r8, r8, r26
  Const        r26, "items"
  Index        r20, r7, r19
  Index        r19, r20, r26
  Append       r25, r19, r1
  SetIndex     r20, r26, r25
  Index        r25, r20, r5
  Const        r19, 1
  AddInt       r18, r25, r19
  SetIndex     r20, r5, r18
  // left join o in orders on o.customerId == c.id
  AddInt       r13, r13, r19
  Jump         L4
  Move         r18, r9
  JumpIfTrue   r18, L5
  // let stats = from c in customers
  MakeMap      r18, 2, r15
  // group by c.name into g
  Index        r1, r10, r3
  Str          r10, r1
  In           r16, r10, r7
  JumpIfTrue   r16, L6
  // let stats = from c in customers
  Const        r16, []
  Const        r17, "__group__"
  Const        r15, true
  Const        r9, "key"
  // group by c.name into g
  Move         r25, r1
  // let stats = from c in customers
  Const        r1, "items"
  Move         r20, r16
  Const        r16, "count"
  Const        r14, 0
  Move         r13, r17
  Move         r17, r15
  Move         r15, r9
  Move         r9, r25
  Move         r25, r1
  Move         r1, r20
  Move         r20, r16
  Move         r16, r14
  MakeMap      r14, 4, r13
  SetIndex     r7, r10, r14
  Append       r8, r8, r14
  Index        r14, r7, r10
  Index        r10, r14, r26
  Append       r7, r10, r18
  SetIndex     r14, r26, r7
  Index        r7, r14, r5
  AddInt       r10, r7, r19
  SetIndex     r14, r5, r10
  AddInt       r11, r11, r19
  Jump         L6
  Const        r10, 0
  Move         r7, r10
  Len          r14, r8
  LessInt      r12, r7, r14
  JumpIfFalse  r12, L7
  Index        r12, r8, r7
  // name: g.key,
  Const        r8, "name"
  Index        r14, r12, r4
  // count: count(from r in g where r.o select r)
  Const        r4, "count"
  Const        r11, []
  IterPrep     r18, r12
  Len          r12, r18
  Move         r26, r10
  LessInt      r10, r26, r12
  JumpIfFalse  r10, L8
  Index        r10, r18, r26
  Index        r18, r10, r6
  JumpIfFalse  r18, L4
  Append       r11, r11, r10
  AddInt       r26, r26, r19
  Jump         L5
  Count        r26, r11
  // name: g.key,
  Move         r11, r8
  Move         r8, r14
  // count: count(from r in g where r.o select r)
  Move         r14, r4
  Move         r4, r26
  // select {
  MakeMap      r26, 2, r11
  // let stats = from c in customers
  Append       r2, r2, r26
  AddInt       r7, r7, r19
  Jump         L2
L7:
  // print("--- Group Left Join ---")
  Const        r18, "--- Group Left Join ---"
  Print        r18
  // for s in stats {
  IterPrep     r26, r2
  Len          r2, r26
  Const        r4, 0
L10:
  Less         r14, r4, r2
  JumpIfFalse  r14, L9
  Index        r14, r26, r4
  // print(s.name, "orders:", s.count)
  Index        r26, r14, r3
  Const        r3, "orders:"
  Index        r2, r14, r5
  PrintN       r26, 3, r26
  // for s in stats {
  Const        r2, 1
  Add          r4, r4, r2
  Jump         L10
L9:
  Return       r0
