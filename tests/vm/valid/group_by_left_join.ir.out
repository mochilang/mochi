func main (regs=132)
  // let customers = [
  Const        r0, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}, {"id": 3, "name": "Charlie"}]
  // let orders = [
  Const        r1, [{"customerId": 1, "id": 100}, {"customerId": 1, "id": 101}, {"customerId": 2, "id": 102}]
  // let stats = from c in customers
  Const        r2, []
  // group by c.name into g
  Const        r3, "name"
  // name: g.key,
  Const        r4, "key"
  // count: count(from r in g where r.o select r)
  Const        r5, "count"
  Const        r6, "o"
  // let stats = from c in customers
  MakeMap      r7, 0, r0
  Const        r8, []
  IterPrep     r9, r0
  Len          r10, r9
  Const        r11, 0
L7:
  LessInt      r12, r11, r10
  JumpIfFalse  r12, L0
  Index        r14, r9, r11
  // left join o in orders on o.customerId == c.id
  IterPrep     r15, r1
  Len          r16, r15
  Const        r17, 0
L4:
  LessInt      r18, r17, r16
  JumpIfFalse  r18, L1
  Index        r20, r15, r17
  Const        r21, false
  Const        r22, "customerId"
  Index        r23, r20, r22
  Const        r24, "id"
  Index        r25, r14, r24
  Equal        r26, r23, r25
  JumpIfFalse  r26, L2
  Const        r21, true
  // let stats = from c in customers
  Const        r27, "c"
  Move         r28, r14
  Move         r29, r20
  MakeMap      r30, 2, r27
  // group by c.name into g
  Index        r31, r14, r3
  Str          r32, r31
  In           r33, r32, r7
  JumpIfTrue   r33, L3
  // let stats = from c in customers
  Const        r34, []
  Const        r35, "__group__"
  Const        r36, true
  Const        r37, "key"
  // group by c.name into g
  Move         r38, r31
  // let stats = from c in customers
  Const        r39, "items"
  Move         r40, r34
  Const        r41, "count"
  Const        r42, 0
  Move         r43, r35
  Move         r44, r36
  Move         r45, r37
  Move         r46, r38
  Move         r47, r39
  Move         r48, r40
  Move         r49, r41
  Move         r50, r42
  MakeMap      r51, 4, r43
  SetIndex     r7, r32, r51
  Append       r8, r8, r51
L3:
  Const        r53, "items"
  Index        r54, r7, r32
  Index        r55, r54, r53
  Append       r56, r55, r30
  SetIndex     r54, r53, r56
  Index        r57, r54, r5
  Const        r58, 1
  AddInt       r59, r57, r58
  SetIndex     r54, r5, r59
L2:
  // left join o in orders on o.customerId == c.id
  AddInt       r17, r17, r58
  Jump         L4
L1:
  Move         r60, r21
  JumpIfTrue   r60, L5
  // let stats = from c in customers
  MakeMap      r64, 2, r27
  // group by c.name into g
  Index        r65, r14, r3
  Str          r66, r65
  In           r67, r66, r7
  JumpIfTrue   r67, L6
  // let stats = from c in customers
  Const        r68, []
  Const        r69, "__group__"
  Const        r70, true
  Const        r71, "key"
  // group by c.name into g
  Move         r72, r65
  // let stats = from c in customers
  Const        r73, "items"
  Move         r74, r68
  Const        r75, "count"
  Const        r76, 0
  Move         r77, r69
  Move         r78, r70
  Move         r79, r71
  Move         r80, r72
  Move         r81, r73
  Move         r82, r74
  Move         r83, r75
  Move         r84, r76
  MakeMap      r85, 4, r77
  SetIndex     r7, r66, r85
  Append       r8, r8, r85
L6:
  Index        r87, r7, r66
  Index        r88, r87, r53
  Append       r89, r88, r64
  SetIndex     r87, r53, r89
  Index        r90, r87, r5
  AddInt       r91, r90, r58
  SetIndex     r87, r5, r91
L5:
  AddInt       r11, r11, r58
  Jump         L7
L0:
  Const        r93, 0
  Move         r92, r93
  Len          r94, r8
L12:
  LessInt      r95, r92, r94
  JumpIfFalse  r95, L8
  Index        r97, r8, r92
  // name: g.key,
  Const        r98, "name"
  Index        r99, r97, r4
  // count: count(from r in g where r.o select r)
  Const        r100, "count"
  Const        r101, []
  IterPrep     r102, r97
  Len          r103, r102
  Move         r104, r93
L11:
  LessInt      r105, r104, r103
  JumpIfFalse  r105, L9
  Index        r107, r102, r104
  Index        r108, r107, r6
  JumpIfFalse  r108, L10
  Append       r101, r101, r107
L10:
  AddInt       r104, r104, r58
  Jump         L11
L9:
  Count        r110, r101
  // name: g.key,
  Move         r111, r98
  Move         r112, r99
  // count: count(from r in g where r.o select r)
  Move         r113, r100
  Move         r114, r110
  // select {
  MakeMap      r115, 2, r111
  // let stats = from c in customers
  Append       r2, r2, r115
  AddInt       r92, r92, r58
  Jump         L12
L8:
  // print("--- Group Left Join ---")
  Const        r117, "--- Group Left Join ---"
  Print        r117
  // for s in stats {
  IterPrep     r118, r2
  Len          r119, r118
  Const        r120, 0
L14:
  Less         r121, r120, r119
  JumpIfFalse  r121, L13
  Index        r123, r118, r120
  // print(s.name, "orders:", s.count)
  Index        r124, r123, r3
  Const        r125, "orders:"
  Index        r126, r123, r5
  PrintN       r124, 3, r124
  // for s in stats {
  Const        r130, 1
  Add          r120, r120, r130
  Jump         L14
L13:
  Return       r0
