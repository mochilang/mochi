func main (regs=118)
  // let customers = [
  Const        r0, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}, {"id": 3, "name": "Charlie"}]
  // let orders = [
  Const        r1, [{"customerId": 1, "id": 100}, {"customerId": 1, "id": 101}, {"customerId": 2, "id": 102}]
  // let stats = from c in customers
  Const        r2, []
  MakeMap      r3, 0, r0
  Const        r4, []
  IterPrep     r5, r0
  Len          r6, r5
  Const        r7, 0
L7:
  Less         r8, r7, r6
  JumpIfFalse  r8, L0
  Index        r10, r5, r7
  // left join o in orders on o.customerId == c.id
  IterPrep     r11, r1
  Len          r12, r11
  Const        r13, 0
L4:
  Less         r14, r13, r12
  JumpIfFalse  r14, L1
  Index        r16, r11, r13
  Const        r17, false
  Const        r18, "customerId"
  Index        r19, r16, r18
  Const        r20, "id"
  Index        r21, r10, r20
  Equal        r22, r19, r21
  JumpIfFalse  r22, L2
  Const        r17, true
  // let stats = from c in customers
  Const        r23, "c"
  Move         r24, r10
  Const        r25, "o"
  Move         r26, r16
  MakeMap      r27, 2, r23
  // group by c.name into g
  Const        r28, "name"
  Index        r29, r10, r28
  Str          r30, r29
  In           r31, r30, r3
  JumpIfTrue   r31, L3
  // let stats = from c in customers
  Const        r32, []
  Const        r33, "__group__"
  Const        r34, true
  Const        r35, "key"
  // group by c.name into g
  Move         r36, r29
  // let stats = from c in customers
  Const        r37, "items"
  Move         r38, r32
  MakeMap      r39, 3, r33
  SetIndex     r3, r30, r39
  Append       r4, r4, r39
L3:
  Const        r41, "items"
  Index        r42, r3, r30
  Index        r43, r42, r41
  Append       r44, r43, r27
  SetIndex     r42, r41, r44
L2:
  // left join o in orders on o.customerId == c.id
  Const        r45, 1
  Add          r13, r13, r45
  Jump         L4
L1:
  Move         r47, r17
  JumpIfTrue   r47, L5
  Const        r16, nil
  // let stats = from c in customers
  Const        r49, "c"
  Move         r50, r10
  Const        r51, "o"
  Move         r52, r16
  MakeMap      r53, 2, r49
  // group by c.name into g
  Const        r54, "name"
  Index        r55, r10, r54
  Str          r56, r55
  In           r57, r56, r3
  JumpIfTrue   r57, L6
  // let stats = from c in customers
  Const        r58, []
  Const        r59, "__group__"
  Const        r60, true
  Const        r61, "key"
  // group by c.name into g
  Move         r62, r55
  // let stats = from c in customers
  Const        r63, "items"
  Move         r64, r58
  MakeMap      r65, 3, r59
  SetIndex     r3, r56, r65
  Append       r4, r4, r65
L6:
  Const        r67, "items"
  Index        r68, r3, r56
  Index        r69, r68, r67
  Append       r70, r69, r53
  SetIndex     r68, r67, r70
L5:
  Const        r71, 1
  Add          r7, r7, r71
  Jump         L7
L0:
  Const        r73, 0
  Len          r74, r4
L12:
  Less         r75, r73, r74
  JumpIfFalse  r75, L8
  Index        r77, r4, r73
  // name: g.key,
  Const        r78, "name"
  Const        r79, "key"
  Index        r80, r77, r79
  // count: count(from r in g where r.o select r)
  Const        r81, "count"
  Const        r82, []
  IterPrep     r83, r77
  Len          r84, r83
  Const        r85, 0
L11:
  Less         r86, r85, r84
  JumpIfFalse  r86, L9
  Index        r88, r83, r85
  Const        r89, "o"
  Index        r90, r88, r89
  JumpIfFalse  r90, L10
  Append       r82, r82, r88
L10:
  Const        r92, 1
  Add          r85, r85, r92
  Jump         L11
L9:
  // select {
  MakeMap      r97, 2, r78
  // let stats = from c in customers
  Append       r2, r2, r97
  Const        r99, 1
  Add          r73, r73, r99
  Jump         L12
L8:
  // print("--- Group Left Join ---")
  Const        r101, "--- Group Left Join ---"
  Print        r101
  // for s in stats {
  IterPrep     r102, r2
  Len          r103, r102
  Const        r104, 0
L14:
  Less         r105, r104, r103
  JumpIfFalse  r105, L13
  Index        r107, r102, r104
  // print(s.name, "orders:", s.count)
  Const        r111, "name"
  Index        r108, r107, r111
  Const        r109, "orders:"
  Const        r114, "count"
  Index        r110, r107, r114
  PrintN       r108, 3, r108
  // for s in stats {
  Const        r116, 1
  Add          r104, r104, r116
  Jump         L14
L13:
  Return       r0
