func main (regs=77)
  // let items = [
  Const        r0, [{"cat": "a", "val": 3}, {"cat": "a", "val": 1}, {"cat": "b", "val": 5}, {"cat": "b", "val": 2}]
  // from i in items
  Const        r1, []
  // group by i.cat into g
  Const        r2, "cat"
  // cat: g.key,
  Const        r3, "key"
  // total: sum(from x in g select x.val)
  Const        r5, "val"
  // from i in items
  IterPrep     r6, r0
  Len          r7, r6
  Const        r8, 0
  MakeMap      r9, 0, r0
  Const        r10, []
L2:
  LessInt      r11, r8, r7
  JumpIfFalse  r11, L0
  Index        r12, r6, r8
  // group by i.cat into g
  Index        r14, r12, r2
  Str          r15, r14
  In           r16, r15, r9
  JumpIfTrue   r16, L1
  // from i in items
  Const        r17, []
  Const        r18, "__group__"
  Const        r19, true
  // group by i.cat into g
  Move         r20, r14
  // from i in items
  Const        r21, "items"
  Move         r22, r17
  Const        r23, "count"
  Const        r24, 0
  Move         r25, r18
  Move         r26, r19
  Move         r27, r3
  Move         r28, r20
  Move         r29, r21
  Move         r30, r22
  Move         r31, r23
  Move         r32, r24
  MakeMap      r33, 4, r25
  SetIndex     r9, r15, r33
L1:
  Index        r35, r9, r15
  Index        r36, r35, r21
  Append       r37, r36, r12
  SetIndex     r35, r21, r37
  Index        r38, r35, r23
  Const        r39, 1
  AddInt       r40, r38, r39
  SetIndex     r35, r23, r40
  AddInt       r8, r8, r39
  Jump         L2
L0:
  Move         r41, r24
  Const        r42, 0
L8:
  LessInt      r43, r41, r42
  JumpIfFalse  r43, L3
  Index        r45, r10, r41
  // cat: g.key,
  Const        r46, "cat"
  Index        r47, r45, r3
  // total: sum(from x in g select x.val)
  Const        r48, "total"
  Const        r49, []
  IterPrep     r50, r45
  Len          r51, r50
  Move         r52, r24
L5:
  LessInt      r53, r52, r51
  JumpIfFalse  r53, L4
  Index        r55, r50, r52
  Index        r56, r55, r5
  Append       r49, r49, r56
  AddInt       r52, r52, r39
  Jump         L5
L4:
  // select {
  MakeMap      r61, 2, r46
  // sort by -sum(from x in g select x.val)
  Const        r62, []
  IterPrep     r63, r45
  Len          r64, r63
  Move         r65, r24
L7:
  LessInt      r66, r65, r64
  JumpIfFalse  r66, L6
  Index        r55, r63, r65
  Index        r68, r55, r5
  Append       r62, r62, r68
  AddInt       r65, r65, r39
  Jump         L7
L6:
  Sum          r70, r62
  Neg          r72, r70
  // from i in items
  Move         r73, r61
  MakeList     r74, 2, r72
  Append       r1, r1, r74
  AddInt       r41, r41, r39
  Jump         L8
L3:
  // sort by -sum(from x in g select x.val)
  Sort         r1, r1
  // print(grouped)
  Print        r1
  Return       r0
