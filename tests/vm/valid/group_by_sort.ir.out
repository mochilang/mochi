func main (regs=64)
  // let items = [
  Const        r0, [{"cat": "a", "val": 3}, {"cat": "a", "val": 1}, {"cat": "b", "val": 5}, {"cat": "b", "val": 2}]
  // from i in items
  Const        r1, []
  // group by i.cat into g
  Const        r2, "cat"
  // cat: g.key,
  Const        r3, "key"
  // total: sum(from x in g select x.val)
  Const        r4, "total"
  Const        r5, "val"
  // from i in items
  IterPrep     r6, r0
  Len          r7, r6
  Const        r8, 0
  MakeMap      r9, 0, r0
  Const        r10, []
L2:
  LessInt      r11, r8, r7
  JumpIfFalse  r11, L0
  Index        r12, r6, r8
  // group by i.cat into g
  Index        r14, r12, r2
  Str          r15, r14
  In           r16, r15, r9
  JumpIfTrue   r16, L1
  // from i in items
  Const        r17, []
  Const        r18, "__group__"
  Const        r19, true
  // group by i.cat into g
  Move         r20, r14
  // from i in items
  Const        r21, "items"
  Move         r22, r17
  MakeMap      r23, 3, r18
  SetIndex     r9, r15, r23
  Append       r10, r10, r23
L1:
  Index        r25, r9, r15
  Index        r26, r25, r21
  Append       r27, r26, r12
  SetIndex     r25, r21, r27
  Const        r28, 1
  AddInt       r8, r8, r28
  Jump         L2
L0:
  Const        r30, 0
  Move         r29, r30
  Len          r31, r10
L8:
  LessInt      r32, r29, r31
  JumpIfFalse  r32, L3
  Index        r34, r10, r29
  // total: sum(from x in g select x.val)
  Const        r36, []
  IterPrep     r37, r34
  Len          r38, r37
  Move         r39, r30
L5:
  LessInt      r40, r39, r38
  JumpIfFalse  r40, L4
  Index        r42, r37, r39
  Index        r43, r42, r5
  Append       r36, r36, r43
  AddInt       r39, r39, r28
  Jump         L5
L4:
  // select {
  MakeMap      r48, 2, r2
  // sort by -sum(from x in g select x.val)
  Const        r49, []
  IterPrep     r50, r34
  Len          r51, r50
  Move         r52, r30
L7:
  LessInt      r53, r52, r51
  JumpIfFalse  r53, L6
  Index        r42, r50, r52
  Index        r55, r42, r5
  Append       r49, r49, r55
  AddInt       r52, r52, r28
  Jump         L7
L6:
  Sum          r57, r49
  Neg          r59, r57
  // from i in items
  Move         r60, r48
  MakeList     r61, 2, r59
  Append       r1, r1, r61
  AddInt       r29, r29, r28
  Jump         L8
L3:
  // sort by -sum(from x in g select x.val)
  Sort         r1, r1
  // print(grouped)
  Print        r1
  Return       r0
