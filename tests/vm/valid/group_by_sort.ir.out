func main (regs=26)
  // let items = [
  Const        r0, [{"cat": "a", "val": 3}, {"cat": "a", "val": 1}, {"cat": "b", "val": 5}, {"cat": "b", "val": 2}]
  // from i in items
  Const        r1, []
L0:
  // group by i.cat into g
  Const        r2, "cat"
  // cat: g.key,
  Const        r3, "key"
L4:
  // total: sum(from x in g select x.val)
  Const        r4, "total"
  Const        r5, "val"
L1:
  // from i in items
  IterPrep     r6, r0
  Len          r7, r6
  Const        r8, 0
  MakeMap      r9, 0, r0
  Move         r10, r1
  Move         r11, r8
L2:
  LessInt      r12, r8, r7
  JumpIfFalse  r12, L0
L7:
  Index        r7, r6, r8
  // group by i.cat into g
  Index        r6, r7, r2
  Str          r13, r6
  In           r14, r13, r9
  JumpIfTrue   r14, L1
  // from i in items
  Move         r14, r1
L5:
  Const        r15, "__group__"
  Const        r16, true
  Move         r17, r3
  // group by i.cat into g
  Move         r18, r6
  // from i in items
  Const        r6, "items"
  Move         r19, r14
  Const        r20, "count"
  Move         r21, r8
  Move         r22, r15
  Move         r15, r16
  Move         r16, r17
  Move         r17, r18
  Move         r18, r6
  Move         r23, r19
  Move         r19, r20
  Move         r24, r21
  MakeMap      r25, 4, r22
  SetIndex     r9, r13, r11
  Append       r10, r10, r25
  Const        r25, 1
  AddInt       r11, r11, r25
  Move         r11, r6
  Index        r6, r9, r13
  Index        r13, r10, r6
  Index        r6, r13, r11
  Append       r9, r6, r7
  SetIndex     r13, r11, r9
  Move         r9, r20
  Index        r20, r13, r9
  AddInt       r6, r20, r25
  SetIndex     r13, r9, r6
  AddInt       r8, r8, r25
  Jump         L2
  Move         r6, r21
  Move         r21, r6
  Len          r20, r10
  LessInt      r9, r21, r20
  JumpIfFalse  r9, L3
  Index        r9, r10, r21
  // cat: g.key,
  Move         r10, r2
  Index        r2, r9, r3
  // total: sum(from x in g select x.val)
  Move         r3, r4
  Move         r4, r14
  IterPrep     r14, r9
  Len          r20, r14
  Move         r13, r6
  LessInt      r12, r13, r20
  JumpIfFalse  r12, L4
  Index        r12, r14, r13
  Index        r20, r12, r5
  Append       r4, r4, r20
  AddInt       r13, r13, r25
  Jump         L5
  Sum          r13, r4
  // cat: g.key,
  Move         r4, r10
  Move         r20, r2
  // total: sum(from x in g select x.val)
  Move         r2, r3
  Move         r3, r13
  // select {
  MakeMap      r13, 2, r4
  // sort by -sum(from x in g select x.val)
  Move         r3, r1
  IterPrep     r2, r9
  Len          r9, r2
  Move         r4, r6
  LessInt      r6, r4, r9
  JumpIfFalse  r6, L6
  Index        r12, r2, r4
  Index        r6, r12, r5
  Append       r3, r3, r6
  AddInt       r4, r4, r25
  Jump         L1
L6:
  Sum          r6, r3
  Neg          r3, r6
  // from i in items
  Move         r6, r13
  MakeList     r13, 2, r3
  Append       r1, r1, r13
  AddInt       r21, r21, r25
  Jump         L7
L3:
  // sort by -sum(from x in g select x.val)
  Sort         r1, r1
  // print(grouped)
  Print        r1
  Return       r0
