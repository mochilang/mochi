func main (regs=73)
  // let items = [
  Const        r0, [{"cat": "a", "val": 3}, {"cat": "a", "val": 1}, {"cat": "b", "val": 5}, {"cat": "b", "val": 2}]
  // from i in items
  Const        r1, []
  IterPrep     r2, r0
  Len          r3, r2
  Const        r4, 0
  MakeMap      r5, 0, r0
  Const        r6, []
L2:
  Less         r7, r4, r3
  JumpIfFalse  r7, L0
  Index        r8, r2, r4
  Move         r9, r8
  // group by i.cat into g
  Const        r10, "cat"
  Index        r11, r9, r10
  Str          r12, r11
  In           r13, r12, r5
  JumpIfTrue   r13, L1
  // from i in items
  Const        r14, []
  Const        r15, "__group__"
  Const        r16, true
  Const        r17, "key"
  // group by i.cat into g
  Move         r18, r11
  // from i in items
  Const        r19, "items"
  Move         r20, r14
  MakeMap      r21, 3, r15
  SetIndex     r5, r12, r21
  Append       r6, r6, r21
L1:
  Index        r23, r5, r12
  Index        r24, r23, r19
  Append       r25, r24, r8
  SetIndex     r23, r19, r25
  Const        r26, 1
  Add          r4, r4, r26
  Jump         L2
L0:
  Const        r28, 0
  Len          r30, r6
L8:
  Less         r31, r28, r30
  JumpIfFalse  r31, L3
  Index        r33, r6, r28
  // cat: g.key,
  Const        r34, "cat"
  Const        r35, "key"
  Index        r36, r33, r35
  // total: sum(from x in g select x.val)
  Const        r37, "total"
  Const        r38, []
  IterPrep     r39, r33
  Len          r40, r39
  Const        r41, 0
L5:
  Less         r42, r41, r40
  JumpIfFalse  r42, L4
  Index        r44, r39, r41
  Const        r45, "val"
  Index        r46, r44, r45
  Append       r38, r38, r46
  Const        r48, 1
  Add          r41, r41, r48
  Jump         L5
L4:
  // select {
  MakeMap      r53, 2, r34
  // sort by -sum(from x in g select x.val)
  Const        r54, []
  IterPrep     r55, r33
  Len          r56, r55
  Const        r57, 0
L7:
  Less         r58, r57, r56
  JumpIfFalse  r58, L6
  Index        r44, r55, r57
  Const        r60, "val"
  Index        r61, r44, r60
  Append       r54, r54, r61
  Const        r63, 1
  Add          r57, r57, r63
  Jump         L7
L6:
  Sum          r65, r54
  Neg          r67, r65
  // from i in items
  Move         r68, r53
  MakeList     r69, 2, r67
  Append       r1, r1, r69
  Add          r28, r28, r26
  Jump         L8
L3:
  // sort by -sum(from x in g select x.val)
  Sort         r1, r1
  // print(grouped)
  Print        r1
  Return       r0
