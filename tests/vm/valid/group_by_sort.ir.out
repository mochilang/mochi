func main (regs=72)
  // let items = [
  Const        r0, [{"cat": "a", "val": 3}, {"cat": "a", "val": 1}, {"cat": "b", "val": 5}, {"cat": "b", "val": 2}]
  Const        r1, [{"cat": "a", "val": 3}, {"cat": "a", "val": 1}, {"cat": "b", "val": 5}, {"cat": "b", "val": 2}]
  // from i in items
  Const        r2, []
  IterPrep     r3, r1
  Len          r4, r3
  Const        r5, 0
  MakeMap      r6, 0, r0
  Const        r7, []
L2:
  Less         r8, r5, r4
  JumpIfFalse  r8, L0
  Index        r9, r3, r5
  Move         r10, r9
  // group by i.cat into g
  Const        r11, "cat"
  Index        r12, r10, r11
  Str          r13, r12
  In           r14, r13, r6
  JumpIfTrue   r14, L1
  Const        r16, "__group__"
  Const        r17, true
  Const        r18, "key"
  Move         r19, r12
  Const        r20, "items"
  // from i in items
  Const        r21, []
  MakeMap      r22, 3, r16
  SetIndex     r6, r13, r22
  Append       r23, r7, r22
  Move         r7, r23
L1:
  Index        r24, r6, r13
  Index        r25, r24, r20
  Append       r26, r25, r9
  SetIndex     r24, r20, r26
  Const        r27, 1
  AddInt       r5, r5, r27
  Jump         L2
L0:
  Const        r28, 0
  Len          r29, r7
L8:
  Less         r30, r28, r29
  JumpIfFalse  r30, L3
  Index        r31, r7, r28
  Move         r32, r31
  // cat: g.key,
  Const        r34, "key"
  Index        r35, r32, r34
  // total: sum(from x in g select x.val)
  Const        r37, []
  IterPrep     r38, r32
  Len          r39, r38
  Const        r40, 0
L5:
  Less         r41, r40, r39
  JumpIfFalse  r41, L4
  Index        r42, r38, r40
  Move         r43, r42
  Const        r44, "val"
  Index        r45, r43, r44
  Append       r46, r37, r45
  Move         r37, r46
  AddInt       r40, r40, r27
  Jump         L5
L4:
  Sum          r47, r37
  // cat: g.key,
  Const        r48, "cat"
  Move         r49, r35
  // total: sum(from x in g select x.val)
  Const        r50, "total"
  Move         r51, r47
  // select {
  MakeMap      r52, 2, r48
  // sort by -sum(from x in g select x.val)
  Const        r53, []
  IterPrep     r54, r32
  Len          r55, r54
  Const        r56, 0
L7:
  Less         r57, r56, r55
  JumpIfFalse  r57, L6
  Index        r58, r54, r56
  Move         r43, r58
  Const        r59, "val"
  Index        r60, r43, r59
  Append       r61, r53, r60
  Move         r53, r61
  AddInt       r56, r56, r27
  Jump         L7
L6:
  Sum          r62, r53
  Neg          r63, r62
  Move         r64, r63
  // from i in items
  Move         r65, r52
  MakeList     r66, 2, r64
  Append       r67, r2, r66
  Move         r2, r67
  Const        r28, 1
  Jump         L8
L3:
  // sort by -sum(from x in g select x.val)
  Sort         r70, r2
  // from i in items
  Move         r2, r70
  // let grouped =
  Move         r71, r2
  // print(grouped)
  Print        r71
  Return       r0
