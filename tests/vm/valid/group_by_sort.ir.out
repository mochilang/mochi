func main (regs=84)
  // let items = [
  Const        r0, [{"cat": "a", "val": 3}, {"cat": "a", "val": 1}, {"cat": "b", "val": 5}, {"cat": "b", "val": 2}]
  Move         r1, r0
  // from i in items
  Const        r2, []
  IterPrep     r3, r1
  Len          r4, r3
  Const        r5, 0
  MakeMap      r6, 0, r0
  Const        r7, []
L2:
  Less         r8, r5, r4
  JumpIfFalse  r8, L0
  Index        r9, r3, r5
  Move         r10, r9
  // group by i.cat into g
  Const        r11, "cat"
  Index        r12, r10, r11
  Str          r13, r12
  In           r14, r13, r6
  JumpIfTrue   r14, L1
  // from i in items
  Const        r15, []
  Const        r16, "__group__"
  Const        r17, true
  Const        r18, "key"
  // group by i.cat into g
  Move         r19, r12
  // from i in items
  Const        r20, "items"
  Move         r21, r15
  // group by i.cat into g
  Const        r22, "cat"
  Move         r23, r12
  // from i in items
  MakeMap      r24, 4, r16
  SetIndex     r6, r13, r24
  Append       r25, r7, r24
  Move         r7, r25
L1:
  Const        r26, "items"
  Index        r27, r6, r13
  Index        r28, r27, r26
  Append       r29, r28, r9
  SetIndex     r27, r26, r29
  Const        r30, 1
  Add          r31, r5, r30
  Move         r5, r31
  Jump         L2
L0:
  Const        r32, 0
  Len          r33, r7
L8:
  Less         r34, r32, r33
  JumpIfFalse  r34, L3
  Index        r35, r7, r32
  Move         r36, r35
  Const        r37, "cat"
  Index        r38, r35, r37
  Const        r39, "cat"
  Index        r40, r35, r39
  // cat: g.key,
  Const        r41, "cat"
  Const        r42, "key"
  Index        r43, r36, r42
  // total: sum(from x in g select x.val)
  Const        r44, "total"
  Const        r45, []
  IterPrep     r46, r36
  Len          r47, r46
  Const        r48, 0
L5:
  Less         r49, r48, r47
  JumpIfFalse  r49, L4
  Index        r50, r46, r48
  Move         r51, r50
  Const        r52, "val"
  Index        r53, r51, r52
  Append       r54, r45, r53
  Move         r45, r54
  Const        r55, 1
  Add          r56, r48, r55
  Move         r48, r56
  Jump         L5
L4:
  Sum          57,45,0,0
  // cat: g.key,
  Move         r58, r41
  Move         r59, r43
  // total: sum(from x in g select x.val)
  Move         r60, r44
  Move         r61, r57
  // select {
  MakeMap      r62, 2, r58
  // sort by -sum(from x in g select x.val)
  Const        r63, []
  IterPrep     r64, r36
  Len          r65, r64
  Const        r66, 0
L7:
  Less         r67, r66, r65
  JumpIfFalse  r67, L6
  Index        r68, r64, r66
  Move         r51, r68
  Const        r69, "val"
  Index        r70, r51, r69
  Append       r71, r63, r70
  Move         r63, r71
  Const        r72, 1
  Add          r73, r66, r72
  Move         r66, r73
  Jump         L7
L6:
  Sum          74,63,0,0
  Neg          r75, r74
  Move         r76, r75
  // from i in items
  Move         r77, r62
  MakeList     r78, 2, r76
  Append       r79, r2, r78
  Move         r2, r79
  Const        r80, 1
  Add          r81, r32, r80
  Move         r32, r81
  Jump         L8
L3:
  // sort by -sum(from x in g select x.val)
  Sort         82,2,0,0
  // from i in items
  Move         r2, r82
  // let grouped =
  Move         r83, r2
  // print(grouped)
  Print        r83
  Return       r0

