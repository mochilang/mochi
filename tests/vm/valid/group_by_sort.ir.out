func main (regs=69)
  // let items = [
  Const        r0, [{"cat": "a", "val": 3}, {"cat": "a", "val": 1}, {"cat": "b", "val": 5}, {"cat": "b", "val": 2}]
  // from i in items
  Const        r1, []
  // group by i.cat into g
  Const        r2, "cat"
  // cat: g.key,
  Const        r3, "key"
  // total: sum(from x in g select x.val)
  Const        r5, "val"
  // from i in items
  IterPrep     r6, r0
  Len          r7, r6
  Const        r8, 0
  MakeMap      r9, 0, r0
  Const        r10, []
L2:
  LessInt      r11, r8, r7
  JumpIfFalse  r11, L0
  Index        r12, r6, r8
  // group by i.cat into g
  Index        r14, r12, r2
  Str          r15, r14
  In           r16, r15, r9
  JumpIfTrue   r16, L1
  // from i in items
  Const        r17, []
  Const        r18, "__group__"
  Const        r19, true
  // group by i.cat into g
  Move         r20, r14
  // from i in items
  Const        r21, "items"
  Move         r22, r17
  Const        r23, "count"
  Const        r24, 0
  MakeMap      r25, 4, r18
  SetIndex     r9, r15, r25
L1:
  Index        r27, r9, r15
  Index        r28, r27, r21
  Append       r29, r28, r12
  SetIndex     r27, r21, r29
  Index        r30, r27, r23
  Const        r31, 1
  AddInt       r32, r30, r31
  SetIndex     r27, r23, r32
  AddInt       r8, r8, r31
  Jump         L2
L0:
  Move         r33, r24
  Const        r34, 0
L8:
  LessInt      r35, r33, r34
  JumpIfFalse  r35, L3
  Index        r37, r10, r33
  // cat: g.key,
  Const        r38, "cat"
  Index        r39, r37, r3
  // total: sum(from x in g select x.val)
  Const        r40, "total"
  Const        r41, []
  IterPrep     r42, r37
  Len          r43, r42
  Move         r44, r24
L5:
  LessInt      r45, r44, r43
  JumpIfFalse  r45, L4
  Index        r47, r42, r44
  Index        r48, r47, r5
  Append       r41, r41, r48
  AddInt       r44, r44, r31
  Jump         L5
L4:
  // select {
  MakeMap      r53, 2, r38
  // sort by -sum(from x in g select x.val)
  Const        r54, []
  IterPrep     r55, r37
  Len          r56, r55
  Move         r57, r24
L7:
  LessInt      r58, r57, r56
  JumpIfFalse  r58, L6
  Index        r47, r55, r57
  Index        r60, r47, r5
  Append       r54, r54, r60
  AddInt       r57, r57, r31
  Jump         L7
L6:
  Sum          r62, r54
  Neg          r64, r62
  // from i in items
  Move         r65, r53
  MakeList     r66, 2, r64
  Append       r1, r1, r66
  AddInt       r33, r33, r31
  Jump         L8
L3:
  // sort by -sum(from x in g select x.val)
  Sort         r1, r1
  // print(grouped)
  Print        r1
  Return       r0
