func main (regs=53)
  // let items = [
  Const        r0, [{"cat": "a", "val": 3}, {"cat": "a", "val": 1}, {"cat": "b", "val": 5}, {"cat": "b", "val": 2}]
  // from i in items
  Const        r1, []
  // total: sum(from x in g select x.val)
  Const        r2, "val"
  // group by i.cat into g
  Const        r3, "cat"
  // cat: g.key,
  Const        r4, "key"
  // from i in items
  IterPrep     r6, r0
  Len          r7, r6
  Const        r8, 0
  MakeMap      r9, 0, r0
  Const        r10, []
L2:
  LessInt      r11, r8, r7
  JumpIfFalse  r11, L0
  Index        r12, r6, r8
  // group by i.cat into g
  Index        r14, r12, r3
  Str          r15, r14
  In           r16, r15, r9
  JumpIfTrue   r16, L1
  // from i in items
  Const        r17, "__group__"
  Const        r18, true
  // group by i.cat into g
  Move         r19, r14
  // from i in items
  Const        r20, "__agg1"
  Const        r21, 0
  Const        r22, "__agg0"
  MakeMap      r23, 4, r17
  SetIndex     r9, r15, r23
  Append       r24, r10, r23
L1:
  Index        r25, r9, r15
  Index        r26, r25, r22
  // total: sum(from x in g select x.val)
  Index        r27, r12, r2
  // from i in items
  Add          r28, r26, r27
  SetIndex     r25, r22, r28
  Index        r29, r25, r20
  // sort by -sum(from x in g select x.val)
  Index        r30, r12, r2
  // from i in items
  Add          r31, r29, r30
  SetIndex     r25, r20, r31
  Const        r32, 1
  AddInt       r8, r8, r32
  Jump         L2
L0:
  Const        r33, 0
  Const        r35, 0
L4:
  LessInt      r36, r33, r35
  JumpIfFalse  r36, L3
  Index        r38, r10, r33
  // cat: g.key,
  Const        r39, "cat"
  Index        r40, r38, r4
  // total: sum(from x in g select x.val)
  Const        r41, "total"
  Index        r42, r38, r22
  // select {
  MakeMap      r45, 2, r39
  // sort by -sum(from x in g select x.val)
  Index        r46, r38, r20
  Neg          r48, r46
  // from i in items
  Move         r49, r45
  MakeList     r50, 2, r48
  Append       r1, r1, r50
  AddInt       r33, r33, r32
  Jump         L4
L3:
  // sort by -sum(from x in g select x.val)
  Sort         r1, r1
  // print(grouped)
  Print        r1
  Return       r0
