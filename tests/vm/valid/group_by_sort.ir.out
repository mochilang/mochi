func main (regs=70)
  // let items = [
  Const        r0, [{"cat": "a", "val": 3}, {"cat": "a", "val": 1}, {"cat": "b", "val": 5}, {"cat": "b", "val": 2}]
  // from i in items
  Const        r1, []
  IterPrep     r2, r0
  Len          r3, r2
  Const        r4, 0
  MakeMap      r5, 0, r0
  Const        r6, []
L2:
  Less         r7, r4, r3
  JumpIfFalse  r7, L0
  Index        r8, r2, r4
  Move         r9, r8
  // group by i.cat into g
  Const        r10, "cat"
  Index        r11, r9, r10
  Str          r12, r11
  In           r13, r12, r5
  JumpIfTrue   r13, L1
  // from i in items
  Const        r14, []
  Const        r15, "__group__"
  Const        r16, true
  Const        r17, "key"
  // group by i.cat into g
  Move         r18, r11
  // from i in items
  Const        r19, "items"
  Move         r20, r14
  MakeMap      r21, 3, r15
  SetIndex     r5, r12, r21
  Append       r6, r6, r21
L1:
  Index        r23, r5, r12
  Index        r24, r23, r19
  Append       r25, r24, r8
  SetIndex     r23, r19, r25
  Const        r26, 1
  Add          r4, r4, r26
  Jump         L2
L0:
  Const        r28, 0
  Len          r30, r6
L8:
  Less         r31, r28, r30
  JumpIfFalse  r31, L3
  Index        r33, r6, r28
  // total: sum(from x in g select x.val)
  Const        r36, []
  IterPrep     r37, r33
  Len          r38, r37
  Const        r39, 0
L5:
  Less         r40, r39, r38
  JumpIfFalse  r40, L4
  Index        r42, r37, r39
  Const        r43, "val"
  Index        r44, r42, r43
  Append       r36, r36, r44
  Const        r46, 1
  Add          r39, r39, r46
  Jump         L5
L4:
  // select {
  MakeMap      r51, 2, r10
  // sort by -sum(from x in g select x.val)
  Const        r52, []
  IterPrep     r53, r33
  Len          r54, r53
  Const        r55, 0
L7:
  Less         r56, r55, r54
  JumpIfFalse  r56, L6
  Index        r42, r53, r55
  Index        r58, r42, r43
  Append       r52, r52, r58
  Const        r60, 1
  Add          r55, r55, r60
  Jump         L7
L6:
  Sum          r62, r52
  Neg          r64, r62
  // from i in items
  Move         r65, r51
  MakeList     r66, 2, r64
  Append       r1, r1, r66
  Add          r28, r28, r26
  Jump         L8
L3:
  // sort by -sum(from x in g select x.val)
  Sort         r1, r1
  // print(grouped)
  Print        r1
  Return       r0
