func main (regs=73)
  // let items = [
  Const        r0, [{"cat": "a", "val": 3}, {"cat": "a", "val": 1}, {"cat": "b", "val": 5}, {"cat": "b", "val": 2}]
  Const        r1, [{"cat": "a", "val": 3}, {"cat": "a", "val": 1}, {"cat": "b", "val": 5}, {"cat": "b", "val": 2}]
  // from i in items
  Const        r2, []
  IterPrep     r3, r1
  Len          r4, r3
  Const        r5, 0
  MakeMap      r6, 0, r0
  Const        r7, []
L2:
  Less         r8, r5, r4
  JumpIfFalse  r8, L0
  Index        r9, r3, r5
  Move         r10, r9
  // group by i.cat into g
  Const        r11, "cat"
  Index        r12, r10, r11
  Str          r13, r12
  In           r14, r13, r6
  JumpIfTrue   r14, L1
  // from i in items
  Const        r16, "__group__"
  Const        r17, true
  Const        r18, "key"
  // group by i.cat into g
  Move         r19, r12
  // from i in items
  Const        r20, "items"
  Const        r21, []
  MakeMap      r22, 3, r16
  SetIndex     r6, r13, r22
  Append       r23, r7, r22
  Move         r7, r23
L1:
  Const        r24, "items"
  Index        r25, r6, r13
  Index        r26, r25, r24
  Append       r27, r26, r9
  SetIndex     r25, r24, r27
  Const        r28, 1
  AddInt       r5, r5, r28
  Jump         L2
L0:
  Const        r29, 0
  Len          r30, r7
L8:
  Less         r31, r29, r30
  JumpIfFalse  r31, L3
  Index        r32, r7, r29
  Move         r33, r32
  // cat: g.key,
  Const        r35, "key"
  Index        r36, r33, r35
  // total: sum(from x in g select x.val)
  Const        r38, []
  IterPrep     r39, r33
  Len          r40, r39
  Const        r41, 0
L5:
  Less         r42, r41, r40
  JumpIfFalse  r42, L4
  Index        r43, r39, r41
  Move         r44, r43
  Const        r45, "val"
  Index        r46, r44, r45
  Append       r47, r38, r46
  Move         r38, r47
  AddInt       r41, r41, r28
  Jump         L5
L4:
  Sum          r48, r38
  // cat: g.key,
  Const        r49, "cat"
  Move         r50, r36
  // total: sum(from x in g select x.val)
  Const        r51, "total"
  Move         r52, r48
  // select {
  MakeMap      r53, 2, r49
  // sort by -sum(from x in g select x.val)
  Const        r54, []
  IterPrep     r55, r33
  Len          r56, r55
  Const        r57, 0
L7:
  Less         r58, r57, r56
  JumpIfFalse  r58, L6
  Index        r59, r55, r57
  Move         r44, r59
  Const        r60, "val"
  Index        r61, r44, r60
  Append       r62, r54, r61
  Move         r54, r62
  AddInt       r57, r57, r28
  Jump         L7
L6:
  Sum          r63, r54
  Neg          r64, r63
  Move         r65, r64
  // from i in items
  Move         r66, r53
  MakeList     r67, 2, r65
  Append       r68, r2, r67
  Move         r2, r68
  Const        r29, 1
  Jump         L8
L3:
  // sort by -sum(from x in g select x.val)
  Sort         r71, r2
  // from i in items
  Move         r2, r71
  // let grouped =
  Move         r72, r2
  // print(grouped)
  Print        r72
  Return       r0
