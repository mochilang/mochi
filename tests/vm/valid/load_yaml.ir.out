func main (regs=53)
  // let people = load "../interpreter/valid/people.yaml" as Person with { format: "yaml" }
  Const        r0, "../interpreter/valid/people.yaml"
  Const        r2, {"format": "yaml"}
  Load         3,0,2,0
  // let adults = from p in people
  Const        r5, []
  IterPrep     r6, r3
  Len          r7, r6
  Const        r8, 0
  Less         r9, r8, r7
  JumpIfFalse  r9, L0
L2:
  Index        r10, r6, r8
  // where p.age >= 18
  Const        r12, "age"
  Index        r13, r10, r12
  Const        r14, 18
  LessEq       r15, r14, r13
  JumpIfFalse  r15, L1
  // select { name: p.name, email: p.email }
  Const        r16, "name"
  Const        r17, "name"
  Index        r18, r10, r17
  Const        r19, "email"
  Const        r20, "email"
  Index        r21, r10, r20
  Move         r22, r16
  Move         r23, r18
  Move         r24, r19
  Move         r25, r21
  MakeMap      r26, 2, r22
  // let adults = from p in people
  Append       r27, r5, r26
  Const        r28, 1
  Add          r29, r8, r28
  Jump         L2
  // for a in adults {
  IterPrep     r31, r27
L1:
  Len          r32, r31
  Const        r33, 0
  Less         r34, r33, r32
  JumpIfFalse  r34, L3
L0:
  Index        r35, r31, r33
  // print(a.name, a.email)
  Const        r37, "name"
  Index        r38, r35, r37
  Const        r39, "email"
L4:
  Index        r40, r35, r39
  Print2       r38, r40
  // for a in adults {
  Const        r41, 1
  Add          r42, r33, r41
  Jump         L4
  Return       r0
