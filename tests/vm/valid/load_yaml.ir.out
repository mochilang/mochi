func main (regs=35)
  // let people = load "../interpreter/valid/people.yaml" as Person with { format: "yaml" }
  Const        r0, "../interpreter/valid/people.yaml"
  Const        r2, {"format": "yaml"}
  Load         3,0,2,0
  // let adults = from p in people
  Const        r4, []
  // where p.age >= 18
  Const        r5, "age"
  // select { name: p.name, email: p.email }
  Const        r6, "name"
  Const        r7, "email"
  // let adults = from p in people
  IterPrep     r8, r3
  Len          r9, r8
  Const        r10, 0
L2:
  LessInt      r12, r10, r9
  JumpIfFalse  r12, L0
  Index        r14, r8, r10
  // where p.age >= 18
  Index        r15, r14, r5
  Const        r16, 18
  LessEq       r17, r16, r15
  JumpIfFalse  r17, L1
  // select { name: p.name, email: p.email }
  MakeMap      r22, 2, r6
  // let adults = from p in people
  Append       r4, r4, r22
L1:
  Jump         L2
L0:
  // for a in adults {
  IterPrep     r25, r4
  Len          r26, r25
  Const        r27, 0
L4:
  Less         r28, r27, r26
  JumpIfFalse  r28, L3
  Index        r30, r25, r27
  // print(a.name, a.email)
  Index        r31, r30, r6
  Index        r32, r30, r7
  Print2       r31, r32
  // for a in adults {
  Const        r33, 1
  Add          r27, r27, r33
  Jump         L4
L3:
  Return       r0
