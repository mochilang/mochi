func main (regs=35)
  // let people = load "../interpreter/valid/people.yaml" as Person with { format: "yaml" }
  Const        r0, "../interpreter/valid/people.yaml"
  Const        r1, {"format": "yaml"}
  Load         3,0,1,0
  // let adults = from p in people
  Const        r4, []
  IterPrep     r5, r3
  Len          r6, r5
  Const        r7, 0
L2:
  Less         r8, r7, r6
  JumpIfFalse  r8, L0
  Index        r10, r5, r7
  // where p.age >= 18
  Const        r11, "age"
  Index        r12, r10, r11
  Const        r13, 18
  LessEq       r14, r13, r12
  JumpIfFalse  r14, L1
  // select { name: p.name, email: p.email }
  Const        r15, "name"
  Index        r16, r10, r15
  Const        r17, "email"
  Index        r18, r10, r17
  MakeMap      r21, 2, r15
  // let adults = from p in people
  Append       r4, r4, r21
L1:
  Jump         L2
L0:
  // for a in adults {
  IterPrep     r25, r4
  Len          r26, r25
  Const        r27, 0
L4:
  Less         r28, r27, r26
  JumpIfFalse  r28, L3
  Index        r30, r25, r27
  // print(a.name, a.email)
  Index        r31, r30, r15
  Index        r32, r30, r17
  Print2       r31, r32
  // for a in adults {
  Const        r33, 1
  Add          r27, r27, r33
  Jump         L4
L3:
  Return       r0
