func main (regs=40)
  // let people = load "../interpreter/valid/people.yaml" as Person with { format: "yaml" }
  Const        r0, "../interpreter/valid/people.yaml"
  Const        r1, {"format": "yaml"}
  Load         3,0,1,0
  Move         r4, r3
  // let adults = from p in people
  Const        r5, []
  IterPrep     r6, r4
  Len          r7, r6
  Const        r8, 0
L2:
  Less         r9, r8, r7
  JumpIfFalse  r9, L0
  Index        r10, r6, r8
  Move         r11, r10
  // where p.age >= 18
  Const        r12, "age"
  Index        r13, r11, r12
  Const        r14, 18
  LessEq       r15, r14, r13
  JumpIfFalse  r15, L1
  // select { name: p.name, email: p.email }
  Const        r17, "name"
  Index        r18, r11, r17
  Const        r20, "email"
  Index        r21, r11, r20
  Const        r22, "name"
  Move         r23, r18
  Const        r24, "email"
  Move         r25, r21
  MakeMap      r26, 2, r22
  // let adults = from p in people
  Append       r27, r5, r26
  Move         r5, r27
L1:
  Const        r28, 1
  Jump         L2
L0:
  Move         r29, r5
  // for a in adults {
  IterPrep     r30, r29
  Len          r31, r30
  Const        r32, 0
L4:
  Less         r33, r32, r31
  JumpIfFalse  r33, L3
  Index        r34, r30, r32
  Move         r35, r34
  // print(a.name, a.email)
  Const        r36, "name"
  Index        r37, r35, r36
  Const        r38, "email"
  Index        r39, r35, r38
  Print2       r37, r39
  // for a in adults {
  AddInt       r32, r32, r28
  Jump         L4
L3:
  Return       r0
