func main (regs=39)
  // let people = load "../interpreter/valid/people.yaml" as Person with { format: "yaml" }
  Const        r0, "../interpreter/valid/people.yaml"
  Const        r1, {"format": "yaml"}
  Load         2,0,1,0
  Move         r3, r2
  // let adults = from p in people
  Const        r4, []
  IterPrep     r5, r3
  Len          r6, r5
  Const        r7, 0
L2:
  Less         r8, r7, r6
  JumpIfFalse  r8, L0
  Index        r9, r5, r7
  Move         r10, r9
  // where p.age >= 18
  Const        r11, "age"
  Index        r12, r10, r11
  Const        r13, 18
  LessEq       r14, r13, r12
  JumpIfFalse  r14, L1
  // select { name: p.name, email: p.email }
  Const        r16, "name"
  Index        r17, r10, r16
  Const        r19, "email"
  Index        r20, r10, r19
  Const        r21, "name"
  Move         r22, r17
  Const        r23, "email"
  Move         r24, r20
  MakeMap      r25, 2, r21
  // let adults = from p in people
  Append       r26, r4, r25
  Move         r4, r26
L1:
  Const        r27, 1
  AddInt       r7, r7, r27
  Jump         L2
L0:
  Move         r28, r4
  // for a in adults {
  IterPrep     r29, r28
  Len          r30, r29
  Const        r31, 0
L4:
  Less         r32, r31, r30
  JumpIfFalse  r32, L3
  Index        r33, r29, r31
  Move         r34, r33
  // print(a.name, a.email)
  Const        r35, "name"
  Index        r36, r34, r35
  Const        r37, "email"
  Index        r38, r34, r37
  Print2       r36, r38
  // for a in adults {
  AddInt       r31, r31, r27
  Jump         L4
L3:
  Return       r0
