func main (regs=39)
  // let people = load "../interpreter/valid/people.yaml" as Person with { format: "yaml" }
  Const        r0, "../interpreter/valid/people.yaml"
  Const        r2, {"format": "yaml"}
  Load         3,0,2,0
  // let adults = from p in people
  Const        r4, []
  // where p.age >= 18
  Const        r5, "age"
  // select { name: p.name, email: p.email }
  Const        r6, "name"
  Const        r7, "email"
  // let adults = from p in people
  IterPrep     r8, r3
  Len          r9, r8
  Const        r11, 0
  Move         r10, r11
L2:
  LessInt      r12, r10, r9
  JumpIfFalse  r12, L0
  Index        r14, r8, r10
  // where p.age >= 18
  Index        r15, r14, r5
  Const        r16, 18
  LessEq       r17, r16, r15
  JumpIfFalse  r17, L1
  // select { name: p.name, email: p.email }
  Move         r18, r6
  Index        r19, r14, r6
  Move         r20, r7
  Index        r21, r14, r7
  Move         r22, r18
  Move         r23, r19
  Move         r24, r20
  Move         r25, r21
  MakeMap      r26, 2, r22
  // let adults = from p in people
  Append       r4, r4, r26
L1:
  Const        r28, 1
  AddInt       r10, r10, r28
  Jump         L2
L0:
  // for a in adults {
  IterPrep     r29, r4
  Len          r30, r29
  Move         r31, r11
L4:
  Less         r32, r31, r30
  JumpIfFalse  r32, L3
  Index        r34, r29, r31
  // print(a.name, a.email)
  Index        r35, r34, r6
  Index        r36, r34, r7
  Print2       r35, r36
  // for a in adults {
  Add          r31, r31, r28
  Jump         L4
L3:
  Return       r0
