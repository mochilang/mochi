func main (regs=39)
  // let people = load "../interpreter/valid/people.yaml" as Person with { format: "yaml" }
  Const        r0, "../interpreter/valid/people.yaml"
  Const        r1, {"format": "yaml"}
  Load         3,0,1,0
  // let adults = from p in people
  Const        r4, []
  IterPrep     r5, r3
  Len          r6, r5
  Const        r7, 0
L2:
  Less         r8, r7, r6
  JumpIfFalse  r8, L0
  Index        r10, r5, r7
  // where p.age >= 18
  Const        r11, "age"
  Index        r12, r10, r11
  Const        r13, 18
  LessEq       r14, r13, r12
  JumpIfFalse  r14, L1
  // select { name: p.name, email: p.email }
  Const        r15, "name"
  Const        r16, "name"
  Index        r17, r10, r16
  Const        r18, "email"
  MakeMap      r23, 2, r15
  // let adults = from p in people
  Append       r4, r4, r23
L1:
  Jump         L2
L0:
  // for a in adults {
  IterPrep     r27, r4
  Len          r28, r27
  Const        r29, 0
L4:
  Less         r30, r29, r28
  JumpIfFalse  r30, L3
  Index        r32, r27, r29
  // print(a.name, a.email)
  Const        r33, "name"
  Index        r34, r32, r33
  Const        r35, "email"
  Index        r36, r32, r35
  Print2       r34, r36
  // for a in adults {
  Const        r37, 1
  Add          r29, r29, r37
  Jump         L4
L3:
  Return       r0
