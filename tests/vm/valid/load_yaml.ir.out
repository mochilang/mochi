func main (regs=41)
  // let people = load "../interpreter/valid/people.yaml" as Person with { format: "yaml" }
  Const        r0, "../interpreter/valid/people.yaml"
  Const        r1, {"format": "yaml"}
  Load         4,0,1,0
  // let adults = from p in people
  Const        r5, []
  IterPrep     r6, r4
  Len          r7, r6
  Const        r8, 0
L2:
  Less         r9, r8, r7
  JumpIfFalse  r9, L0
  Index        r11, r6, r8
  // where p.age >= 18
  Const        r12, "age"
  Index        r13, r11, r12
  Const        r14, 18
  LessEq       r15, r14, r13
  JumpIfFalse  r15, L1
  // select { name: p.name, email: p.email }
  Const        r16, "name"
  Const        r17, "name"
  Index        r18, r11, r17
  Const        r19, "email"
  MakeMap      r24, 2, r16
  // let adults = from p in people
  Append       r5, r5, r24
L1:
  Const        r26, 1
  Add          r8, r8, r26
  Jump         L2
L0:
  // for a in adults {
  IterPrep     r29, r5
  Len          r30, r29
  Const        r31, 0
L4:
  Less         r32, r31, r30
  JumpIfFalse  r32, L3
  Index        r34, r29, r31
  // print(a.name, a.email)
  Const        r35, "name"
  Index        r36, r34, r35
  Const        r37, "email"
  Index        r38, r34, r37
  Print2       r36, r38
  // for a in adults {
  Jump         L4
L3:
  Return       r0
