func main (regs=37)
  // let people = load "../interpreter/valid/people.yaml" as Person with { format: "yaml" }
  Const        r0, "../interpreter/valid/people.yaml"
  Const        r2, {"format": "yaml"}
  Load         3,0,2,0
  // let adults = from p in people
  Const        r4, []
  // where p.age >= 18
  Const        r5, "age"
  // select { name: p.name, email: p.email }
  Const        r6, "name"
  Const        r7, "email"
  // let adults = from p in people
  IterPrep     r8, r3
  Len          r9, r8
  Const        r10, 0
L2:
  LessInt      r12, r10, r9
  JumpIfFalse  r12, L0
  Index        r14, r8, r10
  // where p.age >= 18
  Index        r15, r14, r5
  Const        r16, 18
  LessEq       r17, r16, r15
  JumpIfFalse  r17, L1
  // select { name: p.name, email: p.email }
  Const        r18, "name"
  Index        r19, r14, r6
  Const        r20, "email"
  Index        r21, r14, r7
  MakeMap      r24, 2, r18
  // let adults = from p in people
  Append       r4, r4, r24
L1:
  Jump         L2
L0:
  // for a in adults {
  IterPrep     r27, r4
  Len          r28, r27
  Const        r29, 0
L4:
  Less         r30, r29, r28
  JumpIfFalse  r30, L3
  Index        r32, r27, r29
  // print(a.name, a.email)
  Index        r33, r32, r6
  Index        r34, r32, r7
  Print2       r33, r34
  // for a in adults {
  Const        r35, 1
  Add          r29, r29, r35
  Jump         L4
L3:
  Return       r0
