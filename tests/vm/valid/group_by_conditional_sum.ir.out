func main (regs=84)
  // let items = [
  Const        r0, [{"cat": "a", "flag": true, "val": 10}, {"cat": "a", "flag": false, "val": 5}, {"cat": "b", "flag": true, "val": 20}]
  Move         r1, r0
  // from i in items
  IterPrep     r3, r1
  Const        r5, 0
  MakeMap      r6, 0, r0
  JumpIfFalse  r8, L0
  Index        r9, r3, r5
  Move         r10, r9
  // group by i.cat into g
  Const        r11, "cat"
  Index        r12, r10, r11
  Str          r13, r12
  JumpIfTrue   r14, L1
  // from i in items
  Const        r15, []
  Const        r16, "__group__"
  Const        r17, true
  Const        r18, "key"
  // group by i.cat into g
  Move         r19, r12
  // from i in items
  Const        r20, "items"
  Move         r21, r15
  MakeMap      r22, 3, r16
  SetIndex     r6, r13, r22
L1:
  Const        r24, "items"
  Index        r25, r6, r13
  Index        r26, r25, r24
  Append       r27, r26, r9
  SetIndex     r25, r24, r27
  Jump         L0
  JumpIfFalse  r32, L2
  // sum(from x in g select if x.flag { x.val } else { 0 }) /
  JumpIfFalse  r43, L0
  JumpIfFalse  r47, L0
  Jump         L0
  Jump         L0
  // sum(from x in g select x.val)
  JumpIfFalse  r60, L0
  Jump         L0
  // from i in items
  Jump         L0
L2:
  // sort by g.key
  Sort         82,2,0,0
  // from i in items
  Move         r2, r82
  // let result =
  Move         r83, r2
  // print(result)
  Print        r83
  Return       r0
