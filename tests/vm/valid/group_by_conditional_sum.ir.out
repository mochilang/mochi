func main (regs=70)
  // let items = [
  Const        r0, [{"cat": "a", "flag": true, "val": 10}, {"cat": "a", "flag": false, "val": 5}, {"cat": "b", "flag": true, "val": 20}]
  // from i in items
  Const        r1, []
  // group by i.cat into g
  Const        r2, "cat"
  // cat: g.key,
  Const        r3, "key"
  // sum(from x in g select if x.flag { x.val } else { 0 }) /
  Const        r5, "flag"
  Const        r6, "val"
  // from i in items
  IterPrep     r7, r0
  Len          r8, r7
  Const        r9, 0
  MakeMap      r10, 0, r0
  Const        r11, []
L2:
  LessInt      r12, r9, r8
  JumpIfFalse  r12, L0
  Index        r13, r7, r9
  // group by i.cat into g
  Index        r15, r13, r2
  Str          r16, r15
  In           r17, r16, r10
  JumpIfTrue   r17, L1
  // from i in items
  Const        r18, []
  Const        r19, "__group__"
  Const        r20, true
  // group by i.cat into g
  Move         r21, r15
  // from i in items
  Const        r22, "items"
  Move         r23, r18
  MakeMap      r24, 3, r19
  SetIndex     r10, r16, r24
L1:
  Index        r26, r10, r16
  Index        r27, r26, r22
  Append       r28, r27, r13
  SetIndex     r26, r22, r28
  Const        r29, 1
  AddInt       r9, r9, r29
  Jump         L2
L0:
  Const        r31, 0
  Move         r30, r31
  Const        r32, 0
L9:
  LessInt      r33, r30, r32
  JumpIfFalse  r33, L3
  Index        r35, r11, r30
  // cat: g.key,
  Const        r36, "cat"
  Index        r37, r35, r3
  // share:
  Const        r38, "share"
  // sum(from x in g select if x.flag { x.val } else { 0 }) /
  Const        r39, []
  IterPrep     r40, r35
  Len          r41, r40
  Move         r42, r31
L6:
  LessInt      r43, r42, r41
  JumpIfFalse  r43, L4
  Index        r45, r40, r42
  Index        r46, r45, r5
  JumpIfFalse  r46, L5
L5:
  Append       r39, r39, r31
  AddInt       r42, r42, r29
  Jump         L6
L4:
  // sum(from x in g select x.val)
  Const        r51, []
  IterPrep     r52, r35
  Len          r53, r52
  Move         r54, r31
L8:
  LessInt      r55, r54, r53
  JumpIfFalse  r55, L7
  Index        r45, r52, r54
  Index        r57, r45, r6
  Append       r51, r51, r57
  AddInt       r54, r54, r29
  Jump         L8
L7:
  // select {
  MakeMap      r63, 2, r36
  // sort by g.key
  Index        r65, r35, r3
  // from i in items
  Move         r66, r63
  MakeList     r67, 2, r65
  Append       r1, r1, r67
  AddInt       r30, r30, r29
  Jump         L9
L3:
  // sort by g.key
  Sort         r1, r1
  // print(result)
  Print        r1
  Return       r0
