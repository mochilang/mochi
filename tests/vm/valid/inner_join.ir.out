func main (regs=63)
  // let customers = [
  Const        r0, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}, {"id": 3, "name": "Charlie"}]
  Move         r1, r0
  // let orders = [
  Const        r2, [{"customerId": 1, "id": 100, "total": 250}, {"customerId": 2, "id": 101, "total": 125}, {"customerId": 1, "id": 102, "total": 300}, {"customerId": 4, "id": 103, "total": 80}]
  Move         r3, r2
  // let result = from o in orders
  Const        r4, []
  IterPrep     r5, r3
  Len          r6, r5
  // join from c in customers on o.customerId == c.id
  IterPrep     r7, r1
  Len          r8, r7
  Const        r9, "customerId"
  Const        r10, "id"
  // select { orderId: o.id, customerName: c.name, total: o.total }
  Const        r11, "orderId"
  Const        r10, "id"
  Const        r12, "customerName"
  Const        r13, "name"
  Const        r14, "total"
  Const        r14, "total"
  // let result = from o in orders
  Const        r15, 0
L4:
  LessInt      r16, r15, r6
  JumpIfFalse  r16, L0
  Index        r17, r5, r15
  Move         r18, r17
  // join from c in customers on o.customerId == c.id
  Const        r19, 0
L3:
  LessInt      r20, r19, r8
  JumpIfFalse  r20, L1
  Index        r21, r7, r19
  Move         r22, r21
  Const        r9, "customerId"
  Index        r23, r18, r9
  Const        r10, "id"
  Index        r24, r22, r10
  Equal        r25, r23, r24
  JumpIfFalse  r25, L2
  // select { orderId: o.id, customerName: c.name, total: o.total }
  Const        r26, "orderId"
  Const        r10, "id"
  Index        r27, r18, r10
  Const        r28, "customerName"
  Const        r13, "name"
  Index        r29, r22, r13
  Const        r30, "total"
  Const        r14, "total"
  Index        r31, r18, r14
  Move         r32, r26
  Move         r33, r27
  Move         r34, r28
  Move         r35, r29
  Move         r36, r30
  Move         r37, r31
  MakeMap      r38, 3, r32
  // let result = from o in orders
  Append       r39, r4, r38
  Move         r4, r39
L2:
  // join from c in customers on o.customerId == c.id
  Const        r40, 1
  AddInt       r19, r19, r40
  Jump         L3
L1:
  // let result = from o in orders
  Const        r40, 1
  AddInt       r15, r15, r40
  Jump         L4
L0:
  Move         r41, r4
  // print("--- Orders with customer info ---")
  Const        r42, "--- Orders with customer info ---"
  Print        r42
  // for entry in result {
  IterPrep     r43, r41
  Len          r44, r43
  Const        r45, 0
L6:
  LessInt      r46, r45, r44
  JumpIfFalse  r46, L5
  Index        r47, r43, r45
  Move         r48, r47
  // print("Order", entry.orderId, "by", entry.customerName, "- $", entry.total)
  Const        r55, "Order"
  Move         r49, r55
  Const        r11, "orderId"
  Index        r56, r48, r11
  Move         r50, r56
  Const        r57, "by"
  Move         r51, r57
  Const        r12, "customerName"
  Index        r58, r48, r12
  Move         r52, r58
  Const        r59, "- $"
  Move         r53, r59
  Const        r14, "total"
  Index        r60, r48, r14
  Move         r54, r60
  PrintN       r49, 6, r49
  // for entry in result {
  Const        r61, 1
  AddInt       r62, r45, r61
  Move         r45, r62
  Jump         L6
L5:
  Return       r0
