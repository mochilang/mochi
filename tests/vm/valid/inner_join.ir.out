func main (regs=62)
  // let customers = [
  Const        r0, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}, {"id": 3, "name": "Charlie"}]
  // let orders = [
  Const        r1, [{"customerId": 1, "id": 100, "total": 250}, {"customerId": 2, "id": 101, "total": 125}, {"customerId": 1, "id": 102, "total": 300}, {"customerId": 4, "id": 103, "total": 80}]
  // let result = from o in orders
  Const        r2, []
  IterPrep     r3, r1
  Len          r4, r3
  // join from c in customers on o.customerId == c.id
  IterPrep     r5, r0
  Len          r6, r5
  // let result = from o in orders
  Const        r7, 0
L4:
  Less         r8, r7, r4
  JumpIfFalse  r8, L0
  Index        r10, r3, r7
  // join from c in customers on o.customerId == c.id
  Const        r11, 0
L3:
  Less         r12, r11, r6
  JumpIfFalse  r12, L1
  Index        r14, r5, r11
  Const        r15, "customerId"
  Index        r16, r10, r15
  Const        r17, "id"
  Index        r18, r14, r17
  Equal        r19, r16, r18
  JumpIfFalse  r19, L2
  // select { orderId: o.id, customerName: c.name, total: o.total }
  Const        r20, "orderId"
  Const        r21, "id"
  Index        r22, r10, r21
  Const        r23, "customerName"
  Const        r24, "name"
  Index        r25, r14, r24
  MakeMap      r32, 3, r20
  // let result = from o in orders
  Append       r2, r2, r32
L2:
  // join from c in customers on o.customerId == c.id
  Const        r34, 1
  Add          r11, r11, r34
  Jump         L3
L1:
  // let result = from o in orders
  Const        r36, 1
  Add          r7, r7, r36
  Jump         L4
L0:
  // print("--- Orders with customer info ---")
  Const        r38, "--- Orders with customer info ---"
  Print        r38
  // for entry in result {
  IterPrep     r39, r2
  Len          r40, r39
  Const        r41, 0
L6:
  Less         r42, r41, r40
  JumpIfFalse  r42, L5
  Index        r44, r39, r41
  // print("Order", entry.orderId, "by", entry.customerName, "- $", entry.total)
  Const        r45, "Order"
  Const        r52, "orderId"
  Index        r46, r44, r52
  Const        r47, "by"
  Const        r55, "customerName"
  Index        r48, r44, r55
  Const        r49, "- $"
  Const        r58, "total"
  Index        r50, r44, r58
  PrintN       r45, 6, r45
  // for entry in result {
  Jump         L6
L5:
  Return       r0
