func main (regs=58)
  // let nums = [1, 2]
  Const        r0, [1, 2]
  Move         r1, r0
  // let letters = ["A", "B"]
  Const        r3, ["A", "B"]
  // let bools = [true, false]
  Const        r5, [true, false]
  // let combos = from n in nums
  Const        r6, []
  IterPrep     r7, r1
  Len          r8, r7
  Const        r9, 0
L5:
  Less         r10, r9, r8
  JumpIfFalse  r10, L0
  Index        r12, r7, r9
  // from l in letters
  IterPrep     r13, r3
  Len          r14, r13
  Const        r15, 0
L4:
  Less         r16, r15, r14
  JumpIfFalse  r16, L1
  Index        r18, r13, r15
  // from b in bools
  IterPrep     r19, r5
  Len          r20, r19
  Const        r21, 0
L3:
  Less         r22, r21, r20
  JumpIfFalse  r22, L2
  Index        r24, r19, r21
  // select {n: n, l: l, b: b}
  Const        r25, "n"
  Const        r26, "l"
  Const        r27, "b"
  Move         r28, r12
  Move         r29, r18
  Move         r30, r24
  MakeMap      r31, 3, r25
  // let combos = from n in nums
  Append       r6, r6, r31
  // from b in bools
  Const        r33, 1
  Add          r21, r21, r33
  Jump         L3
L2:
  // from l in letters
  Const        r35, 1
  Add          r15, r15, r35
  Jump         L4
L1:
  // let combos = from n in nums
  Const        r37, 1
  Add          r9, r9, r37
  Jump         L5
L0:
  Move         r39, r6
  // print("--- Cross Join of three lists ---")
  Const        r40, "--- Cross Join of three lists ---"
  Print        r40
  // for c in combos {
  IterPrep     r41, r39
  Len          r42, r41
  Const        r43, 0
L7:
  Less         r44, r43, r42
  JumpIfFalse  r44, L6
  Index        r46, r41, r43
  // print(c.n, c.l, c.b)
  Const        r50, "n"
  Index        r47, r46, r50
  Const        r52, "l"
  Index        r48, r46, r52
  Const        r54, "b"
  Index        r49, r46, r54
  PrintN       r47, 3, r47
  // for c in combos {
  Const        r56, 1
  Add          r43, r43, r56
  Jump         L7
L6:
  Return       r0
