func main (regs=47)
  // let nums = [1, 2]
  Const        r0, [1, 2]
  // let letters = ["A", "B"]
  Const        r1, ["A", "B"]
  // let bools = [true, false]
  Const        r2, [true, false]
  // let combos = from n in nums
  Const        r3, []
  // select {n: n, l: l, b: b}
  Const        r4, "n"
  Const        r5, "l"
  Const        r6, "b"
  // let combos = from n in nums
  IterPrep     r7, r0
  Len          r8, r7
  Const        r10, 0
  Move         r9, r10
L5:
  LessInt      r11, r9, r8
  JumpIfFalse  r11, L0
  // from l in letters
  IterPrep     r14, r1
  Len          r15, r14
L4:
  LessInt      r17, r10, r15
  JumpIfFalse  r17, L1
  // from b in bools
  IterPrep     r20, r2
  Len          r21, r20
  Move         r22, r10
L3:
  LessInt      r23, r22, r21
  JumpIfFalse  r23, L2
  // select {n: n, l: l, b: b}
  MakeMap      r29, 3, r4
  // let combos = from n in nums
  Append       r3, r3, r29
  // from b in bools
  Const        r31, 1
  AddInt       r22, r22, r31
  Jump         L3
L2:
  // from l in letters
  Jump         L4
L1:
  // let combos = from n in nums
  AddInt       r9, r9, r31
  Jump         L5
L0:
  // print("--- Cross Join of three lists ---")
  Const        r32, "--- Cross Join of three lists ---"
  Print        r32
  // for c in combos {
  IterPrep     r33, r3
  Len          r34, r33
  Const        r35, 0
L7:
  Less         r36, r35, r34
  JumpIfFalse  r36, L6
  Index        r38, r33, r35
  // print(c.n, c.l, c.b)
  Index        r39, r38, r4
  Index        r40, r38, r5
  Index        r41, r38, r6
  PrintN       r39, 3, r39
  // for c in combos {
  Jump         L7
L6:
  Return       r0
