func main (regs=50)
  // let nums = [1, 2]
  Const        r0, [1, 2]
  // let letters = ["A", "B"]
  Const        r1, ["A", "B"]
  // let bools = [true, false]
  Const        r2, [true, false]
  // let combos = from n in nums
  Const        r3, []
  // select {n: n, l: l, b: b}
  Const        r4, "n"
  Const        r5, "l"
  Const        r6, "b"
  // let combos = from n in nums
  IterPrep     r7, r0
  Len          r8, r7
  Const        r10, 0
  Move         r9, r10
L5:
  LessInt      r11, r9, r8
  JumpIfFalse  r11, L0
  Index        r13, r7, r9
  // from l in letters
  IterPrep     r14, r1
  Len          r15, r14
  Move         r16, r10
L4:
  LessInt      r17, r16, r15
  JumpIfFalse  r17, L1
  Index        r19, r14, r16
  // from b in bools
  IterPrep     r20, r2
  Len          r21, r20
  Move         r22, r10
L3:
  LessInt      r23, r22, r21
  JumpIfFalse  r23, L2
  Index        r25, r20, r22
  // select {n: n, l: l, b: b}
  Const        r26, "n"
  Const        r27, "l"
  Const        r28, "b"
  Move         r29, r13
  Move         r30, r19
  Move         r31, r25
  MakeMap      r32, 3, r26
  // let combos = from n in nums
  Append       r3, r3, r32
  // from b in bools
  Const        r34, 1
  AddInt       r22, r22, r34
  Jump         L3
L2:
  // from l in letters
  AddInt       r16, r16, r34
  Jump         L4
L1:
  // let combos = from n in nums
  AddInt       r9, r9, r34
  Jump         L5
L0:
  // print("--- Cross Join of three lists ---")
  Const        r35, "--- Cross Join of three lists ---"
  Print        r35
  // for c in combos {
  IterPrep     r36, r3
  Len          r37, r36
  Const        r38, 0
L7:
  Less         r39, r38, r37
  JumpIfFalse  r39, L6
  Index        r41, r36, r38
  // print(c.n, c.l, c.b)
  Index        r42, r41, r4
  Index        r43, r41, r5
  Index        r44, r41, r6
  PrintN       r42, 3, r42
  // for c in combos {
  Const        r48, 1
  Add          r38, r38, r48
  Jump         L7
L6:
  Return       r0
