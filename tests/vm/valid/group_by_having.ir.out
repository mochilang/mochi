func main (regs=48)
  // let people = [
  Const        r0, [{"city": "Paris", "name": "Alice"}, {"city": "Hanoi", "name": "Bob"}, {"city": "Paris", "name": "Charlie"}, {"city": "Hanoi", "name": "Diana"}, {"city": "Paris", "name": "Eve"}, {"city": "Hanoi", "name": "Frank"}, {"city": "Paris", "name": "George"}]
  // from p in people
  Const        r1, []
  IterPrep     r2, r0
  Len          r3, r2
  Const        r4, 0
  MakeMap      r5, 0, r0
  Const        r6, []
L2:
  Less         r7, r4, r3
  JumpIfFalse  r7, L0
  Index        r8, r2, r4
  Move         r9, r8
  // group by p.city into g
  Const        r10, "city"
  Index        r11, r9, r10
  Str          r12, r11
  In           r13, r12, r5
  JumpIfTrue   r13, L1
  // from p in people
  Const        r14, []
  Const        r15, "__group__"
  Const        r16, true
  Const        r17, "key"
  // group by p.city into g
  Move         r18, r11
  // from p in people
  Const        r19, "items"
  Move         r20, r14
  MakeMap      r21, 3, r15
  SetIndex     r5, r12, r21
  Append       r6, r6, r21
L1:
  Const        r23, "items"
  Index        r24, r5, r12
  Index        r25, r24, r23
  Append       r26, r25, r8
  SetIndex     r24, r23, r26
  Const        r27, 1
  Add          r4, r4, r27
  Jump         L2
L0:
  Const        r29, 0
  Len          r30, r6
L4:
  Less         r31, r29, r30
  JumpIfFalse  r31, L3
  Index        r33, r6, r29
  // having count(g) >= 4
  Count        r34, r33
  Const        r35, 4
  LessEqInt    r36, r35, r34
  JumpIfFalse  r36, L3
  // select { city: g.key, num: count(g) }
  Const        r37, "city"
  Const        r38, "key"
  Index        r39, r33, r38
  Const        r40, "num"
  MakeMap      r44, 2, r37
  // from p in people
  Append       r1, r1, r44
  Const        r46, 1
  Add          r29, r29, r46
  Jump         L4
L3:
  // json(big)
  JSON         r1
  Return       r0
