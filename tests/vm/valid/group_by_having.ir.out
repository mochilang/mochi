func main (regs=51)
  // let people = [
  Const        r0, [{"city": "Paris", "name": "Alice"}, {"city": "Hanoi", "name": "Bob"}, {"city": "Paris", "name": "Charlie"}, {"city": "Hanoi", "name": "Diana"}, {"city": "Paris", "name": "Eve"}, {"city": "Hanoi", "name": "Frank"}, {"city": "Paris", "name": "George"}]
  Const        r1, [{"city": "Paris", "name": "Alice"}, {"city": "Hanoi", "name": "Bob"}, {"city": "Paris", "name": "Charlie"}, {"city": "Hanoi", "name": "Diana"}, {"city": "Paris", "name": "Eve"}, {"city": "Hanoi", "name": "Frank"}, {"city": "Paris", "name": "George"}]
  // from p in people
  Const        r2, []
  IterPrep     r3, r1
  Len          r4, r3
  Const        r5, 0
  MakeMap      r6, 0, r0
  Const        r7, []
L2:
  Less         r8, r5, r4
  JumpIfFalse  r8, L0
  Index        r9, r3, r5
  Move         r10, r9
  // group by p.city into g
  Const        r11, "city"
  Index        r12, r10, r11
  Str          r13, r12
  In           r14, r13, r6
  JumpIfTrue   r14, L1
  // from p in people
  Const        r16, "__group__"
  Const        r17, true
  Const        r18, "key"
  // group by p.city into g
  Move         r19, r12
  // from p in people
  Const        r20, "items"
  Const        r21, []
  MakeMap      r22, 3, r16
  SetIndex     r6, r13, r22
  Append       r23, r7, r22
  Move         r7, r23
L1:
  Const        r24, "items"
  Index        r25, r6, r13
  Index        r26, r25, r24
  Append       r27, r26, r9
  SetIndex     r25, r24, r27
  Const        r28, 1
  AddInt       r5, r5, r28
  Jump         L2
L0:
  Const        r29, 0
  Len          r30, r7
L4:
  Less         r31, r29, r30
  JumpIfFalse  r31, L3
  Index        r32, r7, r29
  Move         r33, r32
  // having count(g) >= 4
  Count        r34, r33
  Const        r35, 4
  LessEqInt    r36, r35, r34
  JumpIfFalse  r36, L3
  // select { city: g.key, num: count(g) }
  Const        r38, "key"
  Index        r39, r33, r38
  Count        r41, r33
  Const        r42, "city"
  Move         r43, r39
  Const        r44, "num"
  Move         r45, r41
  MakeMap      r46, 2, r42
  // from p in people
  Append       r47, r2, r46
  Move         r2, r47
  Const        r29, 1
  Jump         L4
L3:
  // let big =
  Move         r50, r2
  // json(big)
  JSON         r50
  Return       r0
