func main (regs=63)
  // let people = [
  Const        r0, [{"age": 30, "name": "Alice"}, {"age": 15, "name": "Bob"}, {"age": 65, "name": "Charlie"}, {"age": 45, "name": "Diana"}]
  Move         r1, r0
  // let adults = from person in people
  Const        r2, []
  IterPrep     r3, r1
  Len          r4, r3
  Const        r5, 0
L2:
  Less         r6, r5, r4
  JumpIfFalse  r6, L0
  Index        r7, r3, r5
  Move         r8, r7
  // where person.age >= 18
  Const        r9, "age"
  Index        r10, r8, r9
  Const        r11, 18
  LessEq       r12, r11, r10
  JumpIfFalse  r12, L1
  // name: person.name,
  Const        r13, "name"
  Const        r14, "name"
  Index        r15, r8, r14
  // age: person.age,
  Const        r16, "age"
  Const        r17, "age"
  Index        r18, r8, r17
  // is_senior: person.age >= 60
  Const        r19, "is_senior"
  Const        r20, "age"
  Index        r21, r8, r20
  Const        r22, 60
  LessEq       r23, r22, r21
  // name: person.name,
  Move         r24, r13
  Move         r25, r15
  // age: person.age,
  Move         r26, r16
  Move         r27, r18
  // is_senior: person.age >= 60
  Move         r28, r19
  Move         r29, r23
  // select {
  MakeMap      r30, 3, r24
  // let adults = from person in people
  Append       r31, r2, r30
  Move         r2, r31
L1:
  Const        r32, 1
  Add          r33, r5, r32
  Move         r5, r33
  Jump         L2
L0:
  Move         r34, r2
  // print("--- Adults ---")
  Const        r35, "--- Adults ---"
  Print        r35
  // for person in adults {
  IterPrep     r36, r34
  Len          r37, r36
  Const        r38, 0
L6:
  Less         r39, r38, r37
  JumpIfFalse  r39, L3
  Index        r40, r36, r38
  Move         r8, r40
  // if person.is_senior {
  Const        r41, "is_senior"
  Index        r42, r8, r41
  JumpIfFalse  r42, L4
  // print(person.name, "is", person.age, " (senior)")
  Const        r47, "name"
  Index        r48, r8, r47
  Move         r43, r48
  Const        r49, "is"
  Move         r44, r49
  Const        r50, "age"
  Index        r51, r8, r50
  Move         r45, r51
  Const        r52, " (senior)"
  Move         r46, r52
  PrintN       r43, 4, r43
  // if person.is_senior {
  Jump         L5
L4:
  // print(person.name, "is", person.age)
  Const        r56, "name"
  Index        r57, r8, r56
  Move         r53, r57
  Const        r58, "is"
  Move         r54, r58
  Const        r59, "age"
  Index        r60, r8, r59
  Move         r55, r60
  PrintN       r53, 3, r53
L5:
  // for person in adults {
  Const        r61, 1
  Add          r62, r38, r61
  Move         r38, r62
  Jump         L6
L3:
  Return       r0
