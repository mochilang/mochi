func main (regs=54)
  // let people = [
  Const        r0, [{"age": 30, "name": "Alice"}, {"age": 15, "name": "Bob"}, {"age": 65, "name": "Charlie"}, {"age": 45, "name": "Diana"}]
  Const        r1, [{"age": 30, "name": "Alice"}, {"age": 15, "name": "Bob"}, {"age": 65, "name": "Charlie"}, {"age": 45, "name": "Diana"}]
  // let adults = from person in people
  Const        r2, []
  IterPrep     r3, r1
  Len          r4, r3
  Const        r5, 0
L2:
  Less         r6, r5, r4
  JumpIfFalse  r6, L0
  Index        r7, r3, r5
  Move         r8, r7
  // where person.age >= 18
  Const        r9, "age"
  Index        r10, r8, r9
  Const        r11, 18
  LessEq       r12, r11, r10
  JumpIfFalse  r12, L1
  // name: person.name,
  Const        r14, "name"
  Index        r15, r8, r14
  // age: person.age,
  Const        r17, "age"
  Index        r18, r8, r17
  // is_senior: person.age >= 60
  Const        r20, "age"
  Index        r21, r8, r20
  Const        r22, 60
  LessEq       r23, r22, r21
  // name: person.name,
  Const        r24, "name"
  Move         r25, r15
  // age: person.age,
  Const        r26, "age"
  Move         r27, r18
  // is_senior: person.age >= 60
  Const        r28, "is_senior"
  Move         r29, r23
  // select {
  MakeMap      r30, 3, r24
  // let adults = from person in people
  Append       r31, r2, r30
  Move         r2, r31
L1:
  Const        r32, 1
  AddInt       r5, r5, r32
  Jump         L2
L0:
  Move         r33, r2
  // print("--- Adults ---")
  Const        r34, "--- Adults ---"
  Print        r34
  // for person in adults {
  IterPrep     r35, r33
  Len          r36, r35
  Const        r37, 0
L5:
  Less         r38, r37, r36
  JumpIfFalse  r38, L3
  Index        r39, r35, r37
  Move         r8, r39
  // print(person.name, "is", person.age,
  Const        r44, "name"
  Index        r45, r8, r44
  Move         r40, r45
  Const        r41, "is"
  Const        r47, "age"
  Index        r48, r8, r47
  Move         r42, r48
  // if person.is_senior { " (senior)" } else { "" })
  Const        r49, "is_senior"
  Index        r50, r8, r49
  JumpIfFalse  r50, L4
L4:
  Const        r43, ""
  // print(person.name, "is", person.age,
  PrintN       r40, 4, r40
  // for person in adults {
  AddInt       r37, r37, r32
  Jump         L5
L3:
  Return       r0
