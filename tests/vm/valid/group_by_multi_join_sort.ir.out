func main (regs=213)
  // let nation = [
  Const        r0, [{"n_name": "BRAZIL", "n_nationkey": 1}]
  // let customer = [
  Const        r1, [{"c_acctbal": 100, "c_address": "123 St", "c_comment": "Loyal", "c_custkey": 1, "c_name": "Alice", "c_nationkey": 1, "c_phone": "123-456"}]
  // let orders = [
  Const        r2, [{"o_custkey": 1, "o_orderdate": "1993-10-15", "o_orderkey": 1000}, {"o_custkey": 1, "o_orderdate": "1994-01-02", "o_orderkey": 2000}]
  // let lineitem = [
  Const        r3, [{"l_discount": 0.1, "l_extendedprice": 1000, "l_orderkey": 1000, "l_returnflag": "R"}, {"l_discount": 0, "l_extendedprice": 500, "l_orderkey": 2000, "l_returnflag": "N"}]
  // let start_date = "1993-10-01"
  Const        r4, "1993-10-01"
  // let end_date = "1994-01-01"
  Const        r5, "1994-01-01"
  // from c in customer
  Const        r6, []
  MakeMap      r7, 0, r0
  Const        r8, []
  IterPrep     r9, r1
  Len          r10, r9
  Const        r11, 0
L11:
  Less         r12, r11, r10
  JumpIfFalse  r12, L0
  Index        r14, r9, r11
  // join o in orders on o.o_custkey == c.c_custkey
  IterPrep     r15, r2
  Len          r16, r15
  Const        r17, 0
L10:
  Less         r18, r17, r16
  JumpIfFalse  r18, L1
  Index        r20, r15, r17
  Const        r21, "o_custkey"
  Index        r22, r20, r21
  Const        r23, "c_custkey"
  Index        r24, r14, r23
  Equal        r25, r22, r24
  JumpIfFalse  r25, L2
  // join l in lineitem on l.l_orderkey == o.o_orderkey
  IterPrep     r26, r3
  Len          r27, r26
  Const        r28, 0
L9:
  Less         r29, r28, r27
  JumpIfFalse  r29, L2
  Index        r31, r26, r28
  Const        r32, "l_orderkey"
  Index        r33, r31, r32
  Const        r34, "o_orderkey"
  Index        r35, r20, r34
  Equal        r36, r33, r35
  JumpIfFalse  r36, L3
  // join n in nation on n.n_nationkey == c.c_nationkey
  IterPrep     r37, r0
  Len          r38, r37
  Const        r39, 0
L8:
  Less         r40, r39, r38
  JumpIfFalse  r40, L3
  Index        r42, r37, r39
  Const        r43, "n_nationkey"
  Index        r44, r42, r43
  Const        r45, "c_nationkey"
  Index        r46, r14, r45
  Equal        r47, r44, r46
  JumpIfFalse  r47, L4
  // where o.o_orderdate >= start_date &&
  Const        r48, "o_orderdate"
  Index        r49, r20, r48
  LessEq       r50, r4, r49
  // o.o_orderdate < end_date &&
  Const        r51, "o_orderdate"
  Index        r52, r20, r51
  Less         r53, r52, r5
  // l.l_returnflag == "R"
  Const        r54, "l_returnflag"
  Index        r55, r31, r54
  Const        r56, "R"
  Equal        r57, r55, r56
  // where o.o_orderdate >= start_date &&
  Move         r58, r50
  JumpIfFalse  r58, L5
L5:
  // o.o_orderdate < end_date &&
  Move         r59, r53
  JumpIfFalse  r59, L6
  Move         r59, r57
L6:
  // where o.o_orderdate >= start_date &&
  JumpIfFalse  r59, L4
  // from c in customer
  Const        r60, "c"
  Move         r61, r14
  Const        r62, "o"
  Move         r63, r20
  Const        r64, "l"
  Move         r65, r31
  Const        r66, "n"
  Move         r67, r42
  MakeMap      r68, 4, r60
  // c_custkey: c.c_custkey,
  Const        r69, "c_custkey"
  Const        r70, "c_custkey"
  Index        r71, r14, r70
  // c_name: c.c_name,
  Const        r72, "c_name"
  Const        r73, "c_name"
  Index        r74, r14, r73
  // c_acctbal: c.c_acctbal,
  Const        r75, "c_acctbal"
  Const        r76, "c_acctbal"
  Index        r77, r14, r76
  // c_address: c.c_address,
  Const        r78, "c_address"
  Const        r79, "c_address"
  Index        r80, r14, r79
  // c_phone: c.c_phone,
  Const        r81, "c_phone"
  Const        r82, "c_phone"
  Index        r83, r14, r82
  // c_comment: c.c_comment,
  Const        r84, "c_comment"
  // group by {
  MakeMap      r97, 7, r69
  Str          r98, r97
  In           r99, r98, r7
  JumpIfTrue   r99, L7
  // from c in customer
  Const        r100, []
  Const        r101, "__group__"
  Const        r102, true
  Const        r103, "key"
  // group by {
  Move         r104, r97
  // from c in customer
  Const        r105, "items"
  Move         r106, r100
  MakeMap      r107, 3, r101
  SetIndex     r7, r98, r107
  Append       r8, r8, r107
L7:
  Index        r109, r7, r98
  Index        r110, r109, r105
  Append       r111, r110, r68
  SetIndex     r109, r105, r111
L4:
  // join n in nation on n.n_nationkey == c.c_nationkey
  Const        r112, 1
  Add          r39, r39, r112
  Jump         L8
L3:
  // join l in lineitem on l.l_orderkey == o.o_orderkey
  Const        r114, 1
  Add          r28, r28, r114
  Jump         L9
L2:
  // join o in orders on o.o_custkey == c.c_custkey
  Const        r116, 1
  Add          r17, r17, r116
  Jump         L10
L1:
  // from c in customer
  Const        r118, 1
  Add          r11, r11, r118
  Jump         L11
L0:
  Const        r120, 0
  Len          r122, r8
L17:
  Less         r123, r120, r122
  JumpIfFalse  r123, L12
  Index        r125, r8, r120
  // revenue: sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount)),
  Const        r135, []
  IterPrep     r136, r125
  Len          r137, r136
  Const        r138, 0
L14:
  Less         r139, r138, r137
  JumpIfFalse  r139, L13
  Index        r141, r136, r138
  Const        r142, "l"
  Index        r143, r141, r142
  Const        r144, "l_extendedprice"
  Index        r145, r143, r144
  Const        r146, 1
  Const        r147, "l"
  Index        r148, r141, r147
  Const        r149, "l_discount"
  Index        r150, r148, r149
  Sub          r151, r146, r150
  Mul          r152, r145, r151
  Append       r135, r135, r152
  Const        r154, 1
  Add          r138, r138, r154
  Jump         L14
L13:
  // select {
  MakeMap      r185, 8, r69
  // sort by -sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount))
  Const        r186, []
  IterPrep     r187, r125
  Len          r188, r187
  Const        r189, 0
L16:
  Less         r190, r189, r188
  JumpIfFalse  r190, L15
  Index        r141, r187, r189
  Const        r192, "l"
  Index        r193, r141, r192
  Const        r194, "l_extendedprice"
  Index        r195, r193, r194
  Const        r196, "l"
  Index        r197, r141, r196
  Const        r198, "l_discount"
  Index        r199, r197, r198
  Sub          r200, r146, r199
  Mul          r201, r195, r200
  Append       r186, r186, r201
  Const        r203, 1
  Add          r189, r189, r203
  Jump         L16
L15:
  Sum          r205, r186
  Neg          r207, r205
  // from c in customer
  Move         r208, r185
  MakeList     r209, 2, r207
  Append       r6, r6, r209
  Add          r120, r120, r146
  Jump         L17
L12:
  // sort by -sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount))
  Sort         r6, r6
  // print(result)
  Print        r6
  Return       r0
