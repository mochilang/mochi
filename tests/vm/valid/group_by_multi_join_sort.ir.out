func main (regs=218)
  // let nation = [
  Const        r0, [{"n_name": "BRAZIL", "n_nationkey": 1}]
  // let customer = [
  Const        r1, [{"c_acctbal": 100, "c_address": "123 St", "c_comment": "Loyal", "c_custkey": 1, "c_name": "Alice", "c_nationkey": 1, "c_phone": "123-456"}]
  // let orders = [
  Const        r2, [{"o_custkey": 1, "o_orderdate": "1993-10-15", "o_orderkey": 1000}, {"o_custkey": 1, "o_orderdate": "1994-01-02", "o_orderkey": 2000}]
  // let lineitem = [
  Const        r3, [{"l_discount": 0.1, "l_extendedprice": 1000, "l_orderkey": 1000, "l_returnflag": "R"}, {"l_discount": 0, "l_extendedprice": 500, "l_orderkey": 2000, "l_returnflag": "N"}]
  // let start_date = "1993-10-01"
  Const        r4, "1993-10-01"
  // let end_date = "1994-01-01"
  Const        r5, "1994-01-01"
  // from c in customer
  Const        r6, []
  // c_custkey: c.c_custkey,
  Const        r7, "c_custkey"
  // c_name: c.c_name,
  Const        r8, "c_name"
  // c_acctbal: c.c_acctbal,
  Const        r9, "c_acctbal"
  // c_address: c.c_address,
  Const        r10, "c_address"
  // c_phone: c.c_phone,
  Const        r11, "c_phone"
  // c_comment: c.c_comment,
  Const        r12, "c_comment"
  // n_name: n.n_name
  Const        r13, "n_name"
  // where o.o_orderdate >= start_date &&
  Const        r14, "o_orderdate"
  // l.l_returnflag == "R"
  Const        r15, "l_returnflag"
  // c_custkey: g.key.c_custkey,
  Const        r16, "key"
  // revenue: sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount)),
  Const        r17, "revenue"
  Const        r18, "l"
  Const        r19, "l_extendedprice"
  Const        r20, "l_discount"
  // from c in customer
  MakeMap      r21, 0, r0
  Move         r22, r6
  IterPrep     r24, r1
  Len          r25, r24
  Const        r26, 0
L1:
  LessInt      r27, r26, r25
  JumpIfFalse  r27, L0
  Index        r29, r24, r26
  // join o in orders on o.o_custkey == c.c_custkey
  IterPrep     r30, r2
  Len          r31, r30
  Move         r32, r26
L2:
  LessInt      r33, r32, r31
  JumpIfFalse  r33, L1
  Index        r35, r30, r32
  Const        r36, "o_custkey"
  Index        r37, r35, r36
  Index        r38, r29, r7
  Equal        r39, r37, r38
  JumpIfFalse  r39, L2
  // join l in lineitem on l.l_orderkey == o.o_orderkey
  IterPrep     r40, r3
  Len          r41, r40
  Move         r42, r26
L9:
  LessInt      r43, r42, r41
  JumpIfFalse  r43, L2
  Index        r45, r40, r42
  Const        r46, "l_orderkey"
  Index        r47, r45, r46
  Const        r48, "o_orderkey"
  Index        r49, r35, r48
  Equal        r50, r47, r49
  JumpIfFalse  r50, L3
  // join n in nation on n.n_nationkey == c.c_nationkey
  IterPrep     r51, r0
  Len          r52, r51
  Move         r53, r42
L8:
  LessInt      r54, r53, r52
  JumpIfFalse  r54, L3
  Index        r56, r51, r53
  Const        r57, "n_nationkey"
  Index        r58, r56, r57
  Const        r59, "c_nationkey"
  Index        r60, r29, r59
  Equal        r61, r58, r60
  JumpIfFalse  r61, L4
  // where o.o_orderdate >= start_date &&
  Index        r62, r35, r14
  LessEq       r63, r4, r62
  // o.o_orderdate < end_date &&
  Index        r64, r35, r14
  Less         r65, r64, r5
  // l.l_returnflag == "R"
  Index        r66, r45, r15
  Const        r67, "R"
  Equal        r68, r66, r67
  // where o.o_orderdate >= start_date &&
  Move         r69, r63
  JumpIfFalse  r69, L5
L5:
  // o.o_orderdate < end_date &&
  Move         r70, r65
  JumpIfFalse  r70, L6
  Move         r70, r68
L6:
  // where o.o_orderdate >= start_date &&
  JumpIfFalse  r70, L4
  // from c in customer
  Const        r71, "c"
  Move         r72, r29
  Const        r73, "o"
  Move         r74, r35
  Move         r75, r18
  Move         r76, r45
  Const        r77, "n"
  Move         r78, r56
  MakeMap      r79, 4, r71
  // c_custkey: c.c_custkey,
  Move         r80, r7
  Index        r81, r29, r7
  // c_name: c.c_name,
  Move         r82, r8
  Index        r83, r29, r8
  // c_acctbal: c.c_acctbal,
  Move         r84, r9
  Index        r85, r29, r9
  // c_address: c.c_address,
  Move         r86, r10
  Index        r87, r29, r10
  // c_phone: c.c_phone,
  Move         r88, r11
  Index        r89, r29, r11
  // c_comment: c.c_comment,
  Move         r90, r12
  Index        r91, r29, r12
  // n_name: n.n_name
  Move         r92, r13
  Index        r93, r56, r13
  // c_custkey: c.c_custkey,
  Move         r94, r80
  Move         r95, r81
  // c_name: c.c_name,
  Move         r96, r82
  Move         r97, r83
  // c_acctbal: c.c_acctbal,
  Move         r98, r84
  Move         r99, r85
  // c_address: c.c_address,
  Move         r100, r86
  Move         r101, r87
  // c_phone: c.c_phone,
  Move         r102, r88
  Move         r103, r89
  // c_comment: c.c_comment,
  Move         r104, r90
  Move         r105, r91
  // n_name: n.n_name
  Move         r106, r92
  Move         r107, r93
  // group by {
  MakeMap      r108, 7, r94
  Str          r109, r108
  In           r110, r109, r21
  JumpIfTrue   r110, L7
  // from c in customer
  Move         r111, r6
  Const        r112, "__group__"
  Const        r113, true
  Move         r114, r16
  // group by {
  Move         r115, r108
  // from c in customer
  Const        r116, "items"
  Move         r117, r111
  Const        r118, "count"
  Move         r119, r26
  Move         r120, r112
  Move         r121, r113
  Move         r122, r114
  Move         r123, r115
  Move         r124, r116
  Move         r125, r117
  Move         r126, r118
  Move         r127, r119
  MakeMap      r128, 4, r120
  SetIndex     r21, r109, r128
  Append       r22, r22, r128
L7:
  Move         r130, r116
  Index        r131, r21, r109
  Index        r132, r131, r130
  Append       r133, r132, r79
  SetIndex     r131, r130, r133
  Move         r134, r118
  Index        r135, r131, r134
  Const        r136, 1
  AddInt       r137, r135, r136
  SetIndex     r131, r134, r137
L4:
  // join n in nation on n.n_nationkey == c.c_nationkey
  AddInt       r53, r53, r136
  Jump         L8
L3:
  // join l in lineitem on l.l_orderkey == o.o_orderkey
  AddInt       r42, r42, r136
  Jump         L9
L0:
  // from c in customer
  Move         r139, r119
  Move         r138, r139
  Len          r140, r22
L15:
  LessInt      r141, r138, r140
  JumpIfFalse  r141, L10
  Index        r143, r22, r138
  // c_custkey: g.key.c_custkey,
  Move         r144, r7
  Index        r145, r143, r16
  Index        r146, r145, r7
  // c_name: g.key.c_name,
  Move         r147, r8
  Index        r148, r143, r16
  Index        r149, r148, r8
  // revenue: sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount)),
  Move         r150, r17
  Move         r151, r111
  IterPrep     r152, r143
  Len          r153, r152
  Move         r154, r139
L12:
  LessInt      r155, r154, r153
  JumpIfFalse  r155, L11
  Index        r157, r152, r154
  Index        r158, r157, r18
  Index        r159, r158, r19
  Index        r160, r157, r18
  Index        r161, r160, r20
  Sub          r162, r136, r161
  Mul          r163, r159, r162
  Append       r151, r151, r163
  AddInt       r154, r154, r136
  Jump         L12
L11:
  Sum          r165, r151
  // c_acctbal: g.key.c_acctbal,
  Move         r166, r9
  Index        r167, r143, r16
  Index        r168, r167, r9
  // n_name: g.key.n_name,
  Move         r169, r13
  Index        r170, r143, r16
  Index        r171, r170, r13
  // c_address: g.key.c_address,
  Move         r172, r10
  Index        r173, r143, r16
  Index        r174, r173, r10
  // c_phone: g.key.c_phone,
  Move         r175, r11
  Index        r176, r143, r16
  Index        r177, r176, r11
  // c_comment: g.key.c_comment
  Move         r178, r12
  Index        r179, r143, r16
  Index        r180, r179, r12
  // c_custkey: g.key.c_custkey,
  Move         r181, r144
  Move         r182, r146
  // c_name: g.key.c_name,
  Move         r183, r147
  Move         r184, r149
  // revenue: sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount)),
  Move         r185, r150
  Move         r186, r165
  // c_acctbal: g.key.c_acctbal,
  Move         r187, r166
  Move         r188, r168
  // n_name: g.key.n_name,
  Move         r189, r169
  Move         r190, r171
  // c_address: g.key.c_address,
  Move         r191, r172
  Move         r192, r174
  // c_phone: g.key.c_phone,
  Move         r193, r175
  Move         r194, r177
  // c_comment: g.key.c_comment
  Move         r195, r178
  Move         r196, r180
  // select {
  MakeMap      r197, 8, r181
  // sort by -sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount))
  Move         r198, r6
  IterPrep     r199, r143
  Len          r200, r199
  Move         r201, r139
L14:
  LessInt      r202, r201, r200
  JumpIfFalse  r202, L13
  Index        r157, r199, r201
  Index        r204, r157, r18
  Index        r205, r204, r19
  Index        r206, r157, r18
  Index        r207, r206, r20
  Sub          r208, r136, r207
  Mul          r209, r205, r208
  Append       r198, r198, r209
  AddInt       r201, r201, r136
  Jump         L14
L13:
  Sum          r211, r198
  Neg          r213, r211
  // from c in customer
  Move         r214, r197
  MakeList     r215, 2, r213
  Append       r6, r6, r215
  AddInt       r138, r138, r136
  Jump         L15
L10:
  // sort by -sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount))
  Sort         r6, r6
  // print(result)
  Print        r6
  Return       r0
