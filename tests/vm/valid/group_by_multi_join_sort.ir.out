func main (regs=227)
  // let nation = [
  Const        r0, [{"n_name": "BRAZIL", "n_nationkey": 1}]
  Const        r1, [{"n_name": "BRAZIL", "n_nationkey": 1}]
  // let customer = [
  Const        r3, [{"c_acctbal": 100, "c_address": "123 St", "c_comment": "Loyal", "c_custkey": 1, "c_name": "Alice", "c_nationkey": 1, "c_phone": "123-456"}]
  // let orders = [
  Const        r5, [{"o_custkey": 1, "o_orderdate": "1993-10-15", "o_orderkey": 1000}, {"o_custkey": 1, "o_orderdate": "1994-01-02", "o_orderkey": 2000}]
  // let lineitem = [
  Const        r7, [{"l_discount": 0.1, "l_extendedprice": 1000, "l_orderkey": 1000, "l_returnflag": "R"}, {"l_discount": 0, "l_extendedprice": 500, "l_orderkey": 2000, "l_returnflag": "N"}]
  // let start_date = "1993-10-01"
  Const        r9, "1993-10-01"
  // let end_date = "1994-01-01"
  Const        r11, "1994-01-01"
  // from c in customer
  Const        r12, []
  MakeMap      r13, 0, r0
  Const        r14, []
  IterPrep     r15, r3
  Len          r16, r15
  Const        r17, 0
L11:
  Less         r18, r17, r16
  JumpIfFalse  r18, L0
  Index        r19, r15, r17
  Move         r20, r19
  // join o in orders on o.o_custkey == c.c_custkey
  IterPrep     r21, r5
  Len          r22, r21
  Const        r23, 0
L10:
  Less         r24, r23, r22
  JumpIfFalse  r24, L1
  Index        r25, r21, r23
  Const        r26, "o_custkey"
  Index        r27, r25, r26
  Const        r28, "c_custkey"
  Index        r29, r20, r28
  Equal        r30, r27, r29
  JumpIfFalse  r30, L2
  // join l in lineitem on l.l_orderkey == o.o_orderkey
  IterPrep     r31, r7
  Len          r32, r31
  Const        r33, 0
L9:
  Less         r34, r33, r32
  JumpIfFalse  r34, L2
  Index        r35, r31, r33
  Const        r36, "l_orderkey"
  Index        r37, r35, r36
  Const        r38, "o_orderkey"
  Index        r39, r25, r38
  Equal        r40, r37, r39
  JumpIfFalse  r40, L3
  // join n in nation on n.n_nationkey == c.c_nationkey
  IterPrep     r41, r1
  Len          r42, r41
  Const        r43, 0
L8:
  Less         r44, r43, r42
  JumpIfFalse  r44, L3
  Index        r45, r41, r43
  Const        r46, "n_nationkey"
  Index        r47, r45, r46
  Const        r48, "c_nationkey"
  Index        r49, r20, r48
  Equal        r50, r47, r49
  JumpIfFalse  r50, L4
  // where o.o_orderdate >= start_date &&
  Const        r51, "o_orderdate"
  Index        r52, r25, r51
  LessEq       r53, r9, r52
  // o.o_orderdate < end_date &&
  Const        r54, "o_orderdate"
  Index        r55, r25, r54
  Less         r56, r55, r11
  // l.l_returnflag == "R"
  Const        r57, "l_returnflag"
  Index        r58, r35, r57
  Const        r59, "R"
  Equal        r60, r58, r59
  // where o.o_orderdate >= start_date &&
  Move         r61, r53
  JumpIfFalse  r61, L5
  Move         r61, r56
L5:
  // o.o_orderdate < end_date &&
  Move         r62, r61
  JumpIfFalse  r62, L6
  Move         r62, r60
L6:
  // where o.o_orderdate >= start_date &&
  JumpIfFalse  r62, L4
  // from c in customer
  Const        r63, "c"
  Move         r64, r20
  Const        r65, "o"
  Move         r66, r25
  Const        r67, "l"
  Move         r68, r35
  Const        r69, "n"
  Move         r70, r45
  MakeMap      r71, 4, r63
  // c_custkey: c.c_custkey,
  Const        r73, "c_custkey"
  Index        r74, r20, r73
  // c_name: c.c_name,
  Const        r76, "c_name"
  Index        r77, r20, r76
  // c_acctbal: c.c_acctbal,
  Const        r79, "c_acctbal"
  Index        r80, r20, r79
  // c_address: c.c_address,
  Const        r82, "c_address"
  Index        r83, r20, r82
  // c_phone: c.c_phone,
  Const        r85, "c_phone"
  Index        r86, r20, r85
  // c_comment: c.c_comment,
  Const        r88, "c_comment"
  Index        r89, r20, r88
  // n_name: n.n_name
  Const        r91, "n_name"
  Index        r92, r45, r91
  // c_custkey: c.c_custkey,
  Const        r93, "c_custkey"
  Move         r94, r74
  // c_name: c.c_name,
  Const        r95, "c_name"
  Move         r96, r77
  // c_acctbal: c.c_acctbal,
  Const        r97, "c_acctbal"
  Move         r98, r80
  // c_address: c.c_address,
  Const        r99, "c_address"
  Move         r100, r83
  // c_phone: c.c_phone,
  Const        r101, "c_phone"
  Move         r102, r86
  // c_comment: c.c_comment,
  Const        r103, "c_comment"
  Move         r104, r89
  // n_name: n.n_name
  Const        r105, "n_name"
  Move         r106, r92
  // group by {
  MakeMap      r107, 7, r93
  Str          r108, r107
  In           r109, r108, r13
  JumpIfTrue   r109, L7
  Const        r111, "__group__"
  Const        r112, true
  Const        r113, "key"
  Move         r114, r107
  Const        r115, "items"
  // from c in customer
  Const        r116, []
  MakeMap      r117, 3, r111
  SetIndex     r13, r108, r117
  Append       r118, r14, r117
  Move         r14, r118
L7:
  Index        r119, r13, r108
  Index        r120, r119, r115
  Append       r121, r120, r71
  SetIndex     r119, r115, r121
L4:
  Const        r122, 1
  // join n in nation on n.n_nationkey == c.c_nationkey
  AddInt       r43, r43, r122
  Jump         L8
L3:
  // join l in lineitem on l.l_orderkey == o.o_orderkey
  AddInt       r33, r33, r122
  Jump         L9
L2:
  // join o in orders on o.o_custkey == c.c_custkey
  AddInt       r23, r23, r122
  Jump         L10
L1:
  // from c in customer
  AddInt       r17, r17, r122
  Jump         L11
L0:
  Const        r123, 0
  Len          r124, r14
L17:
  Less         r125, r123, r124
  JumpIfFalse  r125, L12
  Index        r126, r14, r123
  Move         r127, r126
  // c_custkey: g.key.c_custkey,
  Const        r129, "key"
  Index        r130, r127, r129
  Const        r131, "c_custkey"
  Index        r132, r130, r131
  // c_name: g.key.c_name,
  Const        r134, "key"
  Index        r135, r127, r134
  Const        r136, "c_name"
  Index        r137, r135, r136
  // revenue: sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount)),
  Const        r139, []
  IterPrep     r140, r127
  Len          r141, r140
  Const        r142, 0
L14:
  Less         r143, r142, r141
  JumpIfFalse  r143, L13
  Index        r144, r140, r142
  Move         r145, r144
  Const        r146, "l"
  Index        r147, r145, r146
  Const        r148, "l_extendedprice"
  Index        r149, r147, r148
  Const        r150, 1
  Const        r151, "l"
  Index        r152, r145, r151
  Const        r153, "l_discount"
  Index        r154, r152, r153
  Sub          r155, r150, r154
  Mul          r156, r149, r155
  Append       r157, r139, r156
  Move         r139, r157
  AddInt       r142, r142, r122
  Jump         L14
L13:
  Sum          r158, r139
  // c_acctbal: g.key.c_acctbal,
  Const        r160, "key"
  Index        r161, r127, r160
  Const        r162, "c_acctbal"
  Index        r163, r161, r162
  // n_name: g.key.n_name,
  Const        r165, "key"
  Index        r166, r127, r165
  Const        r167, "n_name"
  Index        r168, r166, r167
  // c_address: g.key.c_address,
  Const        r170, "key"
  Index        r171, r127, r170
  Const        r172, "c_address"
  Index        r173, r171, r172
  // c_phone: g.key.c_phone,
  Const        r175, "key"
  Index        r176, r127, r175
  Const        r177, "c_phone"
  Index        r178, r176, r177
  // c_comment: g.key.c_comment
  Const        r180, "key"
  Index        r181, r127, r180
  Const        r182, "c_comment"
  Index        r183, r181, r182
  // c_custkey: g.key.c_custkey,
  Const        r184, "c_custkey"
  Move         r185, r132
  // c_name: g.key.c_name,
  Const        r186, "c_name"
  Move         r187, r137
  // revenue: sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount)),
  Const        r188, "revenue"
  Move         r189, r158
  // c_acctbal: g.key.c_acctbal,
  Const        r190, "c_acctbal"
  Move         r191, r163
  // n_name: g.key.n_name,
  Const        r192, "n_name"
  Move         r193, r168
  // c_address: g.key.c_address,
  Const        r194, "c_address"
  Move         r195, r173
  // c_phone: g.key.c_phone,
  Const        r196, "c_phone"
  Move         r197, r178
  // c_comment: g.key.c_comment
  Const        r198, "c_comment"
  Move         r199, r183
  // select {
  MakeMap      r200, 8, r184
  // sort by -sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount))
  Const        r201, []
  IterPrep     r202, r127
  Len          r203, r202
  Const        r204, 0
L16:
  Less         r205, r204, r203
  JumpIfFalse  r205, L15
  Index        r206, r202, r204
  Move         r145, r206
  Const        r207, "l"
  Index        r208, r145, r207
  Const        r209, "l_extendedprice"
  Index        r210, r208, r209
  Const        r211, 1
  Const        r212, "l"
  Index        r213, r145, r212
  Const        r214, "l_discount"
  Index        r215, r213, r214
  Sub          r216, r211, r215
  Mul          r217, r210, r216
  Append       r218, r201, r217
  Move         r201, r218
  AddInt       r204, r204, r122
  Jump         L16
L15:
  Sum          r219, r201
  Neg          r220, r219
  Move         r221, r220
  // from c in customer
  Move         r222, r200
  MakeList     r223, 2, r221
  Append       r224, r12, r223
  Move         r12, r224
  AddInt       r123, r123, r122
  Jump         L17
L12:
  // sort by -sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount))
  Sort         r225, r12
  // from c in customer
  Move         r12, r225
  // let result =
  Move         r226, r12
  // print(result)
  Print        r226
  Return       r0
