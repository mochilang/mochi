func main (regs=226)
  // let nation = [
  Const        r0, [{"n_name": "BRAZIL", "n_nationkey": 1}]
  Move         r1, r0
  // let customer = [
  Const        r2, [{"c_acctbal": 100.0, "c_address": "123 St", "c_comment": "Loyal", "c_custkey": 1, "c_name": "Alice", "c_nationkey": 1, "c_phone": "123-456"}]
  Move         r3, r2
  // let orders = [
  Const        r4, [{"o_custkey": 1, "o_orderdate": "1993-10-15", "o_orderkey": 1000}, {"o_custkey": 1, "o_orderdate": "1994-01-02", "o_orderkey": 2000}]
  Move         r5, r4
  // let lineitem = [
  Const        r6, [{"l_discount": 0.1, "l_extendedprice": 1000.0, "l_orderkey": 1000, "l_returnflag": "R"}, {"l_discount": 0.0, "l_extendedprice": 500.0, "l_orderkey": 2000, "l_returnflag": "N"}]
  Move         r7, r6
  // let start_date = "1993-10-01"
  Const        r8, "1993-10-01"
  Move         r9, r8
  // let end_date = "1994-01-01"
  Const        r10, "1994-01-01"
  Move         r11, r10
  // from c in customer
  Const        r12, []
  // c_custkey: c.c_custkey,
  Const        r13, "c_custkey"
  Const        r13, "c_custkey"
  // c_name: c.c_name,
  Const        r14, "c_name"
  Const        r14, "c_name"
  // c_acctbal: c.c_acctbal,
  Const        r15, "c_acctbal"
  Const        r15, "c_acctbal"
  // c_address: c.c_address,
  Const        r16, "c_address"
  Const        r16, "c_address"
  // c_phone: c.c_phone,
  Const        r17, "c_phone"
  Const        r17, "c_phone"
  // c_comment: c.c_comment,
  Const        r18, "c_comment"
  Const        r18, "c_comment"
  // n_name: n.n_name
  Const        r19, "n_name"
  Const        r19, "n_name"
  // where o.o_orderdate >= start_date &&
  Const        r20, "o_orderdate"
  // o.o_orderdate < end_date &&
  Const        r20, "o_orderdate"
  // l.l_returnflag == "R"
  Const        r21, "l_returnflag"
  // c_custkey: g.key.c_custkey,
  Const        r13, "c_custkey"
  Const        r22, "key"
  Const        r13, "c_custkey"
  // c_name: g.key.c_name,
  Const        r14, "c_name"
  Const        r22, "key"
  Const        r14, "c_name"
  // revenue: sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount)),
  Const        r23, "revenue"
  Const        r24, "l"
  Const        r25, "l_extendedprice"
  Const        r24, "l"
  Const        r26, "l_discount"
  // c_acctbal: g.key.c_acctbal,
  Const        r15, "c_acctbal"
  Const        r22, "key"
  Const        r15, "c_acctbal"
  // n_name: g.key.n_name,
  Const        r19, "n_name"
  Const        r22, "key"
  Const        r19, "n_name"
  // c_address: g.key.c_address,
  Const        r16, "c_address"
  Const        r22, "key"
  Const        r16, "c_address"
  // c_phone: g.key.c_phone,
  Const        r17, "c_phone"
  Const        r22, "key"
  Const        r17, "c_phone"
  // c_comment: g.key.c_comment
  Const        r18, "c_comment"
  Const        r22, "key"
  Const        r18, "c_comment"
  // sort by -sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount))
  Const        r24, "l"
  Const        r25, "l_extendedprice"
  Const        r24, "l"
  Const        r26, "l_discount"
  // from c in customer
  MakeMap      r27, 0, r0
  Const        r29, []
  Move         r28, r29
  IterPrep     r30, r3
  Len          r31, r30
  Const        r32, 0
L10:
  LessInt      r33, r32, r31
  JumpIfFalse  r33, L0
  Index        r34, r30, r32
  Move         r35, r34
  // join o in orders on o.o_custkey == c.c_custkey
  IterPrep     r36, r5
  Len          r37, r36
  Const        r38, 0
L9:
  LessInt      r39, r38, r37
  JumpIfFalse  r39, L1
  Index        r40, r36, r38
  Move         r41, r40
  Const        r42, "o_custkey"
  Index        r43, r41, r42
  Const        r13, "c_custkey"
  Index        r44, r35, r13
  Equal        r45, r43, r44
  JumpIfFalse  r45, L2
  // join l in lineitem on l.l_orderkey == o.o_orderkey
  IterPrep     r46, r7
  Len          r47, r46
  Const        r48, 0
L8:
  LessInt      r49, r48, r47
  JumpIfFalse  r49, L2
  Index        r50, r46, r48
  Move         r51, r50
  Const        r52, "l_orderkey"
  Index        r53, r51, r52
  Const        r54, "o_orderkey"
  Index        r55, r41, r54
  Equal        r56, r53, r55
  JumpIfFalse  r56, L3
  // join n in nation on n.n_nationkey == c.c_nationkey
  IterPrep     r57, r1
  Len          r58, r57
  Const        r59, 0
L7:
  LessInt      r60, r59, r58
  JumpIfFalse  r60, L3
  Index        r61, r57, r59
  Move         r62, r61
  Const        r63, "n_nationkey"
  Index        r64, r62, r63
  Const        r65, "c_nationkey"
  Index        r66, r35, r65
  Equal        r67, r64, r66
  JumpIfFalse  r67, L4
  // where o.o_orderdate >= start_date &&
  Const        r20, "o_orderdate"
  Index        r68, r41, r20
  Const        r8, "1993-10-01"
  LessEq       r69, r8, r68
  // o.o_orderdate < end_date &&
  Const        r20, "o_orderdate"
  Index        r70, r41, r20
  Const        r10, "1994-01-01"
  Less         r71, r70, r10
  // l.l_returnflag == "R"
  Const        r21, "l_returnflag"
  Index        r72, r51, r21
  Const        r73, "R"
  Equal        r74, r72, r73
  // where o.o_orderdate >= start_date &&
  Move         r75, r69
  JumpIfFalse  r75, L5
  Move         r75, r71
  // o.o_orderdate < end_date &&
  JumpIfFalse  r75, L5
  Move         r75, r74
L5:
  // where o.o_orderdate >= start_date &&
  JumpIfFalse  r75, L4
  // from c in customer
  Const        r76, "c"
  Move         r77, r35
  Const        r78, "o"
  Move         r79, r41
  Const        r24, "l"
  Move         r80, r51
  Const        r81, "n"
  Move         r82, r62
  Move         r83, r76
  Move         r84, r77
  Move         r85, r78
  Move         r86, r79
  Move         r87, r24
  Move         r88, r80
  Move         r89, r81
  Move         r90, r82
  MakeMap      r91, 4, r83
  // c_custkey: c.c_custkey,
  Const        r92, "c_custkey"
  Const        r13, "c_custkey"
  Index        r93, r35, r13
  // c_name: c.c_name,
  Const        r94, "c_name"
  Const        r14, "c_name"
  Index        r95, r35, r14
  // c_acctbal: c.c_acctbal,
  Const        r96, "c_acctbal"
  Const        r15, "c_acctbal"
  Index        r97, r35, r15
  // c_address: c.c_address,
  Const        r98, "c_address"
  Const        r16, "c_address"
  Index        r99, r35, r16
  // c_phone: c.c_phone,
  Const        r100, "c_phone"
  Const        r17, "c_phone"
  Index        r101, r35, r17
  // c_comment: c.c_comment,
  Const        r102, "c_comment"
  Const        r18, "c_comment"
  Index        r103, r35, r18
  // n_name: n.n_name
  Const        r104, "n_name"
  Const        r19, "n_name"
  Index        r105, r62, r19
  // c_custkey: c.c_custkey,
  Move         r106, r92
  Move         r107, r93
  // c_name: c.c_name,
  Move         r108, r94
  Move         r109, r95
  // c_acctbal: c.c_acctbal,
  Move         r110, r96
  Move         r111, r97
  // c_address: c.c_address,
  Move         r112, r98
  Move         r113, r99
  // c_phone: c.c_phone,
  Move         r114, r100
  Move         r115, r101
  // c_comment: c.c_comment,
  Move         r116, r102
  Move         r117, r103
  // n_name: n.n_name
  Move         r118, r104
  Move         r119, r105
  // group by {
  MakeMap      r120, 7, r106
  Str          r121, r120
  In           r122, r121, r27
  JumpIfTrue   r122, L6
  // from c in customer
  Const        r29, []
  Const        r123, "__group__"
  Const        r124, true
  Const        r22, "key"
  // group by {
  Move         r125, r120
  // from c in customer
  Const        r126, "items"
  Move         r127, r29
  Const        r128, "count"
  Const        r129, 0
  Move         r130, r123
  Move         r131, r124
  Move         r132, r22
  Move         r133, r125
  Move         r134, r126
  Move         r135, r127
  Move         r136, r128
  Move         r137, r129
  MakeMap      r138, 4, r130
  SetIndex     r27, r121, r138
  Append       r139, r28, r138
  Move         r28, r139
L6:
  Const        r126, "items"
  Index        r140, r27, r121
  Index        r141, r140, r126
  Append       r142, r141, r91
  SetIndex     r140, r126, r142
  Const        r128, "count"
  Index        r143, r140, r128
  Const        r144, 1
  AddInt       r145, r143, r144
  SetIndex     r140, r128, r145
L4:
  // join n in nation on n.n_nationkey == c.c_nationkey
  Const        r144, 1
  AddInt       r59, r59, r144
  Jump         L7
L3:
  // join l in lineitem on l.l_orderkey == o.o_orderkey
  Const        r144, 1
  AddInt       r48, r48, r144
  Jump         L8
L2:
  // join o in orders on o.o_custkey == c.c_custkey
  Const        r144, 1
  AddInt       r38, r38, r144
  Jump         L9
L1:
  // from c in customer
  Const        r144, 1
  AddInt       r32, r32, r144
  Jump         L10
L0:
  Const        r129, 0
  Move         r146, r129
  Len          r147, r28
L16:
  LessInt      r148, r146, r147
  JumpIfFalse  r148, L11
  Index        r149, r28, r146
  Move         r150, r149
  // c_custkey: g.key.c_custkey,
  Const        r151, "c_custkey"
  Const        r22, "key"
  Index        r152, r150, r22
  Const        r13, "c_custkey"
  Index        r153, r152, r13
  // c_name: g.key.c_name,
  Const        r154, "c_name"
  Const        r22, "key"
  Index        r155, r150, r22
  Const        r14, "c_name"
  Index        r156, r155, r14
  // revenue: sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount)),
  Const        r157, "revenue"
  Const        r158, []
  Const        r24, "l"
  Const        r25, "l_extendedprice"
  Const        r24, "l"
  Const        r26, "l_discount"
  IterPrep     r159, r150
  Len          r160, r159
  Const        r129, 0
  Move         r161, r129
L13:
  LessInt      r162, r161, r160
  JumpIfFalse  r162, L12
  Index        r163, r159, r161
  Move         r164, r163
  Const        r24, "l"
  Index        r165, r164, r24
  Const        r25, "l_extendedprice"
  Index        r166, r165, r25
  Const        r144, 1
  Const        r24, "l"
  Index        r167, r164, r24
  Const        r26, "l_discount"
  Index        r168, r167, r26
  Sub          r169, r144, r168
  Mul          r170, r166, r169
  Append       r171, r158, r170
  Move         r158, r171
  Const        r144, 1
  AddInt       r161, r161, r144
  Jump         L13
L12:
  Sum          r172, r158
  // c_acctbal: g.key.c_acctbal,
  Const        r173, "c_acctbal"
  Const        r22, "key"
  Index        r174, r150, r22
  Const        r15, "c_acctbal"
  Index        r175, r174, r15
  // n_name: g.key.n_name,
  Const        r176, "n_name"
  Const        r22, "key"
  Index        r177, r150, r22
  Const        r19, "n_name"
  Index        r178, r177, r19
  // c_address: g.key.c_address,
  Const        r179, "c_address"
  Const        r22, "key"
  Index        r180, r150, r22
  Const        r16, "c_address"
  Index        r181, r180, r16
  // c_phone: g.key.c_phone,
  Const        r182, "c_phone"
  Const        r22, "key"
  Index        r183, r150, r22
  Const        r17, "c_phone"
  Index        r184, r183, r17
  // c_comment: g.key.c_comment
  Const        r185, "c_comment"
  Const        r22, "key"
  Index        r186, r150, r22
  Const        r18, "c_comment"
  Index        r187, r186, r18
  // c_custkey: g.key.c_custkey,
  Move         r188, r151
  Move         r189, r153
  // c_name: g.key.c_name,
  Move         r190, r154
  Move         r191, r156
  // revenue: sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount)),
  Move         r192, r157
  Move         r193, r172
  // c_acctbal: g.key.c_acctbal,
  Move         r194, r173
  Move         r195, r175
  // n_name: g.key.n_name,
  Move         r196, r176
  Move         r197, r178
  // c_address: g.key.c_address,
  Move         r198, r179
  Move         r199, r181
  // c_phone: g.key.c_phone,
  Move         r200, r182
  Move         r201, r184
  // c_comment: g.key.c_comment
  Move         r202, r185
  Move         r203, r187
  // select {
  MakeMap      r204, 8, r188
  // sort by -sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount))
  Const        r207, []
  Const        r24, "l"
  Const        r25, "l_extendedprice"
  Const        r24, "l"
  Const        r26, "l_discount"
  IterPrep     r208, r150
  Len          r209, r208
  Const        r129, 0
  Move         r210, r129
L15:
  LessInt      r211, r210, r209
  JumpIfFalse  r211, L14
  Index        r212, r208, r210
  Move         r164, r212
  Const        r24, "l"
  Index        r213, r164, r24
  Const        r25, "l_extendedprice"
  Index        r214, r213, r25
  Const        r144, 1
  Const        r24, "l"
  Index        r215, r164, r24
  Const        r26, "l_discount"
  Index        r216, r215, r26
  Sub          r217, r144, r216
  Mul          r218, r214, r217
  Append       r219, r207, r218
  Move         r207, r219
  Const        r144, 1
  AddInt       r210, r210, r144
  Jump         L15
L14:
  Sum          r220, r207
  Neg          r221, r220
  Move         r205, r221
  // from c in customer
  Move         r206, r204
  MakeList     r222, 2, r205
  Append       r223, r12, r222
  Move         r12, r223
  Const        r144, 1
  AddInt       r146, r146, r144
  Jump         L16
L11:
  // sort by -sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount))
  Sort         r224, r12
  // from c in customer
  Move         r12, r224
  // let result =
  Move         r225, r12
  // print(result)
  Print        r225
  Return       r0
