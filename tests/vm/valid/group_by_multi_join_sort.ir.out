func main (regs=186)
  // let nation = [
  Const        r0, [{"n_name": "BRAZIL", "n_nationkey": 1}]
  // let customer = [
  Const        r1, [{"c_acctbal": 100, "c_address": "123 St", "c_comment": "Loyal", "c_custkey": 1, "c_name": "Alice", "c_nationkey": 1, "c_phone": "123-456"}]
  // let orders = [
  Const        r2, [{"o_custkey": 1, "o_orderdate": "1993-10-15", "o_orderkey": 1000}, {"o_custkey": 1, "o_orderdate": "1994-01-02", "o_orderkey": 2000}]
  // let lineitem = [
  Const        r3, [{"l_discount": 0.1, "l_extendedprice": 1000, "l_orderkey": 1000, "l_returnflag": "R"}, {"l_discount": 0, "l_extendedprice": 500, "l_orderkey": 2000, "l_returnflag": "N"}]
  // let start_date = "1993-10-01"
  Const        r4, "1993-10-01"
  // let end_date = "1994-01-01"
  Const        r5, "1994-01-01"
  // from c in customer
  Const        r6, []
  // c_custkey: c.c_custkey,
  Const        r7, "c_custkey"
  // c_name: c.c_name,
  Const        r8, "c_name"
  // c_acctbal: c.c_acctbal,
  Const        r9, "c_acctbal"
  // c_address: c.c_address,
  Const        r10, "c_address"
  // c_phone: c.c_phone,
  Const        r11, "c_phone"
  // c_comment: c.c_comment,
  Const        r12, "c_comment"
  // n_name: n.n_name
  Const        r13, "n_name"
  // where o.o_orderdate >= start_date &&
  Const        r14, "o_orderdate"
  // l.l_returnflag == "R"
  Const        r15, "l_returnflag"
  // c_custkey: g.key.c_custkey,
  Const        r16, "key"
  // revenue: sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount)),
  Const        r18, "l"
  Const        r19, "l_extendedprice"
  Const        r20, "l_discount"
  // from c in customer
  MakeMap      r21, 0, r0
  Const        r22, []
  IterPrep     r23, r1
  Len          r24, r23
  Const        r25, 0
L11:
  LessInt      r26, r25, r24
  JumpIfFalse  r26, L0
  Index        r28, r23, r25
  // join o in orders on o.o_custkey == c.c_custkey
  IterPrep     r29, r2
  Len          r30, r29
  Const        r31, 0
L10:
  LessInt      r32, r31, r30
  JumpIfFalse  r32, L1
  Index        r34, r29, r31
  Const        r35, "o_custkey"
  Index        r36, r34, r35
  Index        r37, r28, r7
  Equal        r38, r36, r37
  JumpIfFalse  r38, L2
  // join l in lineitem on l.l_orderkey == o.o_orderkey
  IterPrep     r39, r3
  Len          r40, r39
  Const        r41, 0
L9:
  LessInt      r42, r41, r40
  JumpIfFalse  r42, L2
  Index        r44, r39, r41
  Const        r45, "l_orderkey"
  Index        r46, r44, r45
  Const        r47, "o_orderkey"
  Index        r48, r34, r47
  Equal        r49, r46, r48
  JumpIfFalse  r49, L3
  // join n in nation on n.n_nationkey == c.c_nationkey
  IterPrep     r50, r0
  Len          r51, r50
  Const        r52, 0
L8:
  LessInt      r53, r52, r51
  JumpIfFalse  r53, L3
  Index        r55, r50, r52
  Const        r56, "n_nationkey"
  Index        r57, r55, r56
  Const        r58, "c_nationkey"
  Index        r59, r28, r58
  Equal        r60, r57, r59
  JumpIfFalse  r60, L4
  // where o.o_orderdate >= start_date &&
  Index        r61, r34, r14
  LessEq       r62, r4, r61
  // o.o_orderdate < end_date &&
  Index        r63, r34, r14
  Less         r64, r63, r5
  // l.l_returnflag == "R"
  Index        r65, r44, r15
  Const        r66, "R"
  Equal        r67, r65, r66
  // where o.o_orderdate >= start_date &&
  Move         r68, r62
  JumpIfFalse  r68, L5
L5:
  // o.o_orderdate < end_date &&
  Move         r69, r64
  JumpIfFalse  r69, L6
  Move         r69, r67
L6:
  // where o.o_orderdate >= start_date &&
  JumpIfFalse  r69, L4
  // from c in customer
  Const        r70, "c"
  Move         r71, r28
  Const        r72, "o"
  Move         r73, r34
  Move         r74, r44
  Const        r75, "n"
  Move         r76, r55
  MakeMap      r77, 4, r70
  // c_custkey: c.c_custkey,
  Const        r78, "c_custkey"
  Index        r79, r28, r7
  // c_name: c.c_name,
  Const        r80, "c_name"
  Index        r81, r28, r8
  // c_acctbal: c.c_acctbal,
  Const        r82, "c_acctbal"
  Index        r83, r28, r9
  // c_address: c.c_address,
  Const        r84, "c_address"
  Index        r85, r28, r10
  // c_phone: c.c_phone,
  Const        r86, "c_phone"
  Index        r87, r28, r11
  // c_comment: c.c_comment,
  Const        r88, "c_comment"
  Index        r89, r28, r12
  // n_name: n.n_name
  Const        r90, "n_name"
  Index        r91, r55, r13
  // group by {
  MakeMap      r99, 7, r78
  Str          r100, r99
  In           r101, r100, r21
  JumpIfTrue   r101, L7
  // from c in customer
  Const        r102, []
  Const        r103, "__group__"
  Const        r104, true
  // group by {
  Move         r105, r99
  // from c in customer
  Const        r106, "items"
  Move         r107, r102
  MakeMap      r108, 3, r103
  SetIndex     r21, r100, r108
  Append       r22, r22, r108
L7:
  Index        r110, r21, r100
  Index        r111, r110, r106
  Append       r112, r111, r77
  SetIndex     r110, r106, r112
L4:
  // join n in nation on n.n_nationkey == c.c_nationkey
  Const        r113, 1
  AddInt       r52, r52, r113
  Jump         L8
L3:
  // join l in lineitem on l.l_orderkey == o.o_orderkey
  AddInt       r41, r41, r113
  Jump         L9
L2:
  // join o in orders on o.o_custkey == c.c_custkey
  Jump         L10
L1:
  // from c in customer
  Jump         L11
L0:
  Const        r115, 0
  Move         r114, r115
  Len          r116, r22
L17:
  LessInt      r117, r114, r116
  JumpIfFalse  r117, L12
  Index        r119, r22, r114
  // c_custkey: g.key.c_custkey,
  Const        r120, "c_custkey"
  Index        r121, r119, r16
  Index        r122, r121, r7
  // c_name: g.key.c_name,
  Const        r123, "c_name"
  Index        r124, r119, r16
  Index        r125, r124, r8
  // revenue: sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount)),
  Const        r126, "revenue"
  Const        r127, []
  IterPrep     r128, r119
  Len          r129, r128
  Move         r130, r115
L14:
  LessInt      r131, r130, r129
  JumpIfFalse  r131, L13
  Index        r132, r128, r130
  Move         r133, r132
  Index        r134, r133, r18
  Index        r135, r134, r19
  Index        r136, r133, r18
  Index        r137, r136, r20
  Sub          r138, r113, r137
  Mul          r139, r135, r138
  Append       r127, r127, r139
  AddInt       r130, r130, r113
  Jump         L14
L13:
  // select {
  MakeMap      r165, 8, r120
  // sort by -sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount))
  Const        r166, []
  IterPrep     r167, r119
  Len          r168, r167
  Move         r169, r115
L16:
  LessInt      r170, r169, r168
  JumpIfFalse  r170, L15
  Index        r133, r167, r169
  Index        r172, r133, r18
  Index        r173, r172, r19
  Index        r174, r133, r18
  Index        r175, r174, r20
  Sub          r176, r113, r175
  Mul          r177, r173, r176
  Append       r166, r166, r177
  AddInt       r169, r169, r113
  Jump         L16
L15:
  Sum          r179, r166
  Neg          r181, r179
  // from c in customer
  Move         r182, r165
  MakeList     r183, 2, r181
  Append       r6, r6, r183
  AddInt       r114, r114, r113
  Jump         L17
L12:
  // sort by -sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount))
  Sort         r6, r6
  // print(result)
  Print        r6
  Return       r0
