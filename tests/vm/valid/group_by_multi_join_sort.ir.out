func main (regs=178)
  // let nation = [
  Const        r0, [{"n_name": "BRAZIL", "n_nationkey": 1}]
  // let customer = [
  Const        r1, [{"c_acctbal": 100, "c_address": "123 St", "c_comment": "Loyal", "c_custkey": 1, "c_name": "Alice", "c_nationkey": 1, "c_phone": "123-456"}]
  // let orders = [
  Const        r2, [{"o_custkey": 1, "o_orderdate": "1993-10-15", "o_orderkey": 1000}, {"o_custkey": 1, "o_orderdate": "1994-01-02", "o_orderkey": 2000}]
  // let lineitem = [
  Const        r3, [{"l_discount": 0.1, "l_extendedprice": 1000, "l_orderkey": 1000, "l_returnflag": "R"}, {"l_discount": 0, "l_extendedprice": 500, "l_orderkey": 2000, "l_returnflag": "N"}]
  // let start_date = "1993-10-01"
  Const        r4, "1993-10-01"
  // let end_date = "1994-01-01"
  Const        r5, "1994-01-01"
  // from c in customer
  Const        r6, []
  // sort by -sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount))
  Const        r7, "l"
  Const        r8, "l_extendedprice"
  Const        r9, "l_discount"
  // c_custkey: c.c_custkey,
  Const        r10, "c_custkey"
  // c_name: c.c_name,
  Const        r11, "c_name"
  // c_acctbal: c.c_acctbal,
  Const        r12, "c_acctbal"
  // c_address: c.c_address,
  Const        r13, "c_address"
  // c_phone: c.c_phone,
  Const        r14, "c_phone"
  // c_comment: c.c_comment,
  Const        r15, "c_comment"
  // n_name: n.n_name
  Const        r16, "n_name"
  // where o.o_orderdate >= start_date &&
  Const        r17, "o_orderdate"
  // l.l_returnflag == "R"
  Const        r18, "l_returnflag"
  // c_custkey: g.key.c_custkey,
  Const        r19, "key"
  // from c in customer
  MakeMap      r21, 0, r0
  Const        r22, []
  IterPrep     r23, r1
  Len          r24, r23
  Const        r25, 0
L11:
  LessInt      r26, r25, r24
  JumpIfFalse  r26, L0
  Index        r28, r23, r25
  // join o in orders on o.o_custkey == c.c_custkey
  IterPrep     r29, r2
  Len          r30, r29
  Const        r31, 0
L10:
  LessInt      r32, r31, r30
  JumpIfFalse  r32, L1
  Index        r34, r29, r31
  Const        r35, "o_custkey"
  Index        r36, r34, r35
  Index        r37, r28, r10
  Equal        r38, r36, r37
  JumpIfFalse  r38, L2
  // join l in lineitem on l.l_orderkey == o.o_orderkey
  IterPrep     r39, r3
  Len          r40, r39
  Const        r41, 0
L9:
  LessInt      r42, r41, r40
  JumpIfFalse  r42, L2
  Index        r44, r39, r41
  Const        r45, "l_orderkey"
  Index        r46, r44, r45
  Const        r47, "o_orderkey"
  Index        r48, r34, r47
  Equal        r49, r46, r48
  JumpIfFalse  r49, L3
  // join n in nation on n.n_nationkey == c.c_nationkey
  IterPrep     r50, r0
  Len          r51, r50
  Const        r52, 0
L8:
  LessInt      r53, r52, r51
  JumpIfFalse  r53, L3
  Index        r55, r50, r52
  Const        r56, "n_nationkey"
  Index        r57, r55, r56
  Const        r58, "c_nationkey"
  Index        r59, r28, r58
  Equal        r60, r57, r59
  JumpIfFalse  r60, L4
  // where o.o_orderdate >= start_date &&
  Index        r61, r34, r17
  LessEq       r62, r4, r61
  // o.o_orderdate < end_date &&
  Index        r63, r34, r17
  Less         r64, r63, r5
  // l.l_returnflag == "R"
  Index        r65, r44, r18
  Const        r66, "R"
  Equal        r67, r65, r66
  // where o.o_orderdate >= start_date &&
  Move         r68, r62
  JumpIfFalse  r68, L5
L5:
  // o.o_orderdate < end_date &&
  Move         r69, r64
  JumpIfFalse  r69, L6
  Move         r69, r67
L6:
  // where o.o_orderdate >= start_date &&
  JumpIfFalse  r69, L4
  // from c in customer
  Const        r70, "c"
  Move         r71, r28
  Const        r72, "o"
  Move         r73, r34
  Move         r74, r44
  Const        r75, "n"
  Move         r76, r55
  MakeMap      r77, 4, r70
  // c_custkey: c.c_custkey,
  Const        r78, "c_custkey"
  Index        r79, r28, r10
  // c_name: c.c_name,
  Const        r80, "c_name"
  Index        r81, r28, r11
  // c_acctbal: c.c_acctbal,
  Const        r82, "c_acctbal"
  Index        r83, r28, r12
  // c_address: c.c_address,
  Const        r84, "c_address"
  Index        r85, r28, r13
  // c_phone: c.c_phone,
  Const        r86, "c_phone"
  Index        r87, r28, r14
  // c_comment: c.c_comment,
  Const        r88, "c_comment"
  Index        r89, r28, r15
  // n_name: n.n_name
  Const        r90, "n_name"
  Index        r91, r55, r16
  // group by {
  MakeMap      r99, 7, r78
  Str          r100, r99
  In           r101, r100, r21
  JumpIfTrue   r101, L7
  // from c in customer
  Const        r102, "__group__"
  Const        r103, true
  // group by {
  Move         r104, r99
  // from c in customer
  Const        r105, []
  Const        r106, "items"
  Move         r107, r105
  Const        r108, "__agg1"
  Const        r109, 0
  Const        r110, "__agg0"
  MakeMap      r111, 5, r102
  SetIndex     r21, r100, r111
  Append       r22, r22, r111
L7:
  Index        r113, r21, r100
  Index        r114, r113, r106
  Append       r115, r114, r77
  SetIndex     r113, r106, r115
  Index        r116, r113, r108
  // revenue: sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount)),
  Index        r117, r77, r7
  Index        r118, r117, r8
  Const        r119, 1
  Index        r120, r77, r7
  Index        r121, r120, r9
  Sub          r122, r119, r121
  Mul          r123, r118, r122
  // from c in customer
  Add          r124, r116, r123
  SetIndex     r113, r108, r124
  Index        r125, r113, r110
  // sort by -sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount))
  Index        r126, r77, r7
  Index        r127, r126, r8
  Index        r128, r77, r7
  Index        r129, r128, r9
  Sub          r130, r119, r129
  Mul          r131, r127, r130
  // from c in customer
  Add          r132, r125, r131
  SetIndex     r113, r110, r132
L4:
  // join n in nation on n.n_nationkey == c.c_nationkey
  AddInt       r52, r52, r119
  Jump         L8
L3:
  // join l in lineitem on l.l_orderkey == o.o_orderkey
  AddInt       r41, r41, r119
  Jump         L9
L2:
  // join o in orders on o.o_custkey == c.c_custkey
  Jump         L10
L1:
  // from c in customer
  Jump         L11
L0:
  Const        r133, 0
  Len          r135, r22
L13:
  LessInt      r136, r133, r135
  JumpIfFalse  r136, L12
  Index        r138, r22, r133
  // c_custkey: g.key.c_custkey,
  Const        r139, "c_custkey"
  Index        r140, r138, r19
  Index        r141, r140, r10
  // c_name: g.key.c_name,
  Const        r142, "c_name"
  Index        r143, r138, r19
  Index        r144, r143, r11
  // revenue: sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount)),
  Const        r145, "revenue"
  Index        r146, r138, r108
  // c_acctbal: g.key.c_acctbal,
  Const        r147, "c_acctbal"
  Index        r148, r138, r19
  Index        r149, r148, r12
  // n_name: g.key.n_name,
  Const        r150, "n_name"
  Index        r151, r138, r19
  Index        r152, r151, r16
  // c_address: g.key.c_address,
  Const        r153, "c_address"
  Index        r154, r138, r19
  // select {
  MakeMap      r170, 8, r139
  // sort by -sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount))
  Index        r171, r138, r110
  Neg          r173, r171
  // from c in customer
  Move         r174, r170
  MakeList     r175, 2, r173
  Append       r6, r6, r175
  AddInt       r133, r133, r119
  Jump         L13
L12:
  // sort by -sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount))
  Sort         r6, r6
  // print(result)
  Print        r6
  Return       r0
