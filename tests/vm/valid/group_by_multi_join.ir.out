func main (regs=120)
  // from ps in partsupp
  Const        r6, []
  JumpIfFalse  r10, L0
  // join s in suppliers on s.id == ps.supplier
  JumpIfFalse  r16, L1
  JumpIfFalse  r23, L1
  // join n in nations on n.id == s.nation
  JumpIfFalse  r27, L1
  JumpIfFalse  r34, L1
  // where n.name == "A"
  JumpIfFalse  r38, L1
  // join n in nations on n.id == s.nation
  Jump         L1
  // join s in suppliers on s.id == ps.supplier
  Jump         L1
  // from ps in partsupp
  Jump         L1
L0:
  // let filtered =
  Move         r60, r6
  // from x in filtered
  IterPrep     r62, r60
  Const        r64, 0
  MakeMap      r65, 0, r0
  JumpIfFalse  r67, L1
  Index        r68, r62, r64
  Move         r69, r68
  // group by x.part into g
  Const        r70, "part"
  Index        r71, r69, r70
  Str          r72, r71
  JumpIfTrue   r73, L2
  // from x in filtered
  Const        r74, []
  Const        r75, "__group__"
  Const        r76, true
  Const        r77, "key"
  // group by x.part into g
  Move         r78, r71
  // from x in filtered
  Const        r79, "items"
  Move         r80, r74
  MakeMap      r81, 3, r75
  SetIndex     r65, r72, r81
L2:
  Const        r83, "items"
  Index        r84, r65, r72
  Index        r85, r84, r83
  Append       r86, r85, r68
  SetIndex     r84, r83, r86
  Jump         L1
  JumpIfFalse  r91, L3
  // total: sum(from r in g select r.value)
  JumpIfFalse  r102, L1
  Jump         L1
  // from x in filtered
  Jump         L1
L3:
  // let grouped =
  Move         r119, r61
  // print(grouped)
  Print        r119
  Return       r0
