func main (regs=62)
  // let customers = [
  Const        r0, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}]
  Const        r1, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}]
  // let orders = [
  Const        r3, [{"customerId": 1, "id": 100}, {"customerId": 2, "id": 101}]
  // let items = [
  Const        r5, [{"orderId": 100, "sku": "a"}, {"orderId": 101, "sku": "b"}]
  // let result = from o in orders
  Const        r6, []
  IterPrep     r7, r3
  Len          r8, r7
  Const        r9, 0
L6:
  Less         r10, r9, r8
  JumpIfFalse  r10, L0
  Index        r11, r7, r9
  Move         r12, r11
  // join from c in customers on o.customerId == c.id
  IterPrep     r13, r1
  Len          r14, r13
  Const        r15, 0
L5:
  Less         r16, r15, r14
  JumpIfFalse  r16, L1
  Index        r17, r13, r15
  Const        r18, "customerId"
  Index        r19, r12, r18
  Const        r20, "id"
  Index        r21, r17, r20
  Equal        r22, r19, r21
  JumpIfFalse  r22, L2
  // join from i in items on o.id == i.orderId
  IterPrep     r23, r5
  Len          r24, r23
  Const        r25, 0
L4:
  Less         r26, r25, r24
  JumpIfFalse  r26, L2
  Index        r27, r23, r25
  Const        r28, "id"
  Index        r29, r12, r28
  Const        r30, "orderId"
  Index        r31, r27, r30
  Equal        r32, r29, r31
  JumpIfFalse  r32, L3
  // select { name: c.name, sku: i.sku }
  Const        r34, "name"
  Index        r35, r17, r34
  Const        r37, "sku"
  Index        r38, r27, r37
  Const        r39, "name"
  Move         r40, r35
  Const        r41, "sku"
  Move         r42, r38
  MakeMap      r43, 2, r39
  // let result = from o in orders
  Append       r44, r6, r43
  Move         r6, r44
L3:
  Const        r45, 1
  // join from i in items on o.id == i.orderId
  AddInt       r25, r25, r45
  Jump         L4
L2:
  // join from c in customers on o.customerId == c.id
  Jump         L5
L1:
  // let result = from o in orders
  AddInt       r9, r9, r45
  Jump         L6
L0:
  Move         r46, r6
  // print("--- Multi Join ---")
  Const        r47, "--- Multi Join ---"
  Print        r47
  // for r in result {
  IterPrep     r48, r46
  Len          r49, r48
  Const        r50, 0
L8:
  Less         r51, r50, r49
  JumpIfFalse  r51, L7
  Index        r52, r48, r50
  Move         r53, r52
  // print(r.name, "bought item", r.sku)
  Const        r57, "name"
  Index        r58, r53, r57
  Move         r54, r58
  Const        r55, "bought item"
  Const        r60, "sku"
  Index        r61, r53, r60
  Move         r56, r61
  PrintN       r54, 3, r54
  // for r in result {
  AddInt       r50, r50, r45
  Jump         L8
L7:
  Return       r0
