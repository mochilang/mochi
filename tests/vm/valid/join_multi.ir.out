func main (regs=65)
  // let customers = [
  Const        r0, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}]
  // let orders = [
  Const        r1, [{"customerId": 1, "id": 100}, {"customerId": 2, "id": 101}]
  // let items = [
  Const        r2, [{"orderId": 100, "sku": "a"}, {"orderId": 101, "sku": "b"}]
  // let result = from o in orders
  Const        r3, []
  IterPrep     r4, r1
  Len          r5, r4
  Const        r6, 0
L6:
  Less         r7, r6, r5
  JumpIfFalse  r7, L0
  Index        r9, r4, r6
  // join from c in customers on o.customerId == c.id
  IterPrep     r10, r0
  Len          r11, r10
  Const        r12, 0
L5:
  Less         r13, r12, r11
  JumpIfFalse  r13, L1
  Index        r15, r10, r12
  Const        r16, "customerId"
  Index        r17, r9, r16
  Const        r18, "id"
  Index        r19, r15, r18
  Equal        r20, r17, r19
  JumpIfFalse  r20, L2
  // join from i in items on o.id == i.orderId
  IterPrep     r21, r2
  Len          r22, r21
  Const        r23, 0
L4:
  Less         r24, r23, r22
  JumpIfFalse  r24, L2
  Index        r26, r21, r23
  Const        r27, "id"
  Index        r28, r9, r27
  Const        r29, "orderId"
  Index        r30, r26, r29
  Equal        r31, r28, r30
  JumpIfFalse  r31, L3
  // select { name: c.name, sku: i.sku }
  Const        r32, "name"
  Const        r33, "name"
  Index        r34, r15, r33
  Const        r35, "sku"
  MakeMap      r40, 2, r32
  // let result = from o in orders
  Append       r3, r3, r40
L3:
  // join from i in items on o.id == i.orderId
  Const        r42, 1
  Add          r23, r23, r42
  Jump         L4
L2:
  // join from c in customers on o.customerId == c.id
  Const        r44, 1
  Add          r12, r12, r44
  Jump         L5
L1:
  // let result = from o in orders
  Const        r46, 1
  Add          r6, r6, r46
  Jump         L6
L0:
  // print("--- Multi Join ---")
  Const        r48, "--- Multi Join ---"
  Print        r48
  // for r in result {
  IterPrep     r49, r3
  Len          r50, r49
  Const        r51, 0
L8:
  Less         r52, r51, r50
  JumpIfFalse  r52, L7
  Index        r54, r49, r51
  // print(r.name, "bought item", r.sku)
  Const        r58, "name"
  Index        r55, r54, r58
  Const        r56, "bought item"
  Const        r61, "sku"
  Index        r57, r54, r61
  PrintN       r55, 3, r55
  // for r in result {
  Const        r63, 1
  Add          r51, r51, r63
  Jump         L8
L7:
  Return       r0
