func main (regs=58)
  // let customers = [
  Const        r0, [{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}]
  // let orders = [
  Const        r1, [{"customerId": 1, "id": 100}, {"customerId": 2, "id": 101}]
  // let items = [
  Const        r2, [{"orderId": 100, "sku": "a"}, {"orderId": 101, "sku": "b"}]
  // let result = from o in orders
  Const        r3, []
  // select { name: c.name, sku: i.sku }
  Const        r4, "name"
  Const        r5, "sku"
  // let result = from o in orders
  IterPrep     r6, r1
  Len          r7, r6
  Const        r9, 0
  Move         r8, r9
L6:
  LessInt      r10, r8, r7
  JumpIfFalse  r10, L0
  Index        r12, r6, r8
  // join from c in customers on o.customerId == c.id
  IterPrep     r13, r0
  Len          r14, r13
  Const        r15, "customerId"
  Const        r16, "id"
  Move         r17, r9
L5:
  LessInt      r18, r17, r14
  JumpIfFalse  r18, L1
  Index        r20, r13, r17
  Index        r21, r12, r15
  Index        r22, r20, r16
  Equal        r23, r21, r22
  JumpIfFalse  r23, L2
  // join from i in items on o.id == i.orderId
  IterPrep     r24, r2
  Len          r25, r24
  Const        r26, "orderId"
  Move         r27, r9
L4:
  LessInt      r28, r27, r25
  JumpIfFalse  r28, L2
  Index        r30, r24, r27
  Index        r31, r12, r16
  Index        r32, r30, r26
  Equal        r33, r31, r32
  JumpIfFalse  r33, L3
  // select { name: c.name, sku: i.sku }
  Const        r34, "name"
  Index        r35, r20, r4
  Const        r36, "sku"
  Index        r37, r30, r5
  MakeMap      r40, 2, r34
  // let result = from o in orders
  Append       r3, r3, r40
L3:
  // join from i in items on o.id == i.orderId
  Const        r42, 1
  Add          r27, r27, r42
  Jump         L4
L2:
  // join from c in customers on o.customerId == c.id
  Add          r17, r17, r42
  Jump         L5
L1:
  // let result = from o in orders
  AddInt       r8, r8, r42
  Jump         L6
L0:
  // print("--- Multi Join ---")
  Const        r43, "--- Multi Join ---"
  Print        r43
  // for r in result {
  IterPrep     r44, r3
  Len          r45, r44
  Const        r46, 0
L8:
  Less         r47, r46, r45
  JumpIfFalse  r47, L7
  Index        r49, r44, r46
  // print(r.name, "bought item", r.sku)
  Index        r50, r49, r4
  Const        r51, "bought item"
  Index        r52, r49, r5
  PrintN       r50, 3, r50
  // for r in result {
  Const        r56, 1
  Add          r46, r46, r56
  Jump         L8
L7:
  Return       r0
