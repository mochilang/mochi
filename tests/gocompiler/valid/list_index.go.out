package main

import (
	"fmt"
)

func main() {
	var xs = []any{10, 20, 30}
	fmt.Println(_index(xs, 1))
}

func _index(v any, k any) any {
    switch s := v.(type) {
    case []any:
        i, ok := k.(int)
        if !ok {
            panic("invalid list index")
        }
        if i < 0 {
            i += len(s)
        }
        if i < 0 || i >= len(s) {
            panic("index out of range")
        }
        return s[i]
    case string:
        i, ok := k.(int)
        if !ok {
            panic("invalid string index")
        }
        runes := []rune(s)
        if i < 0 {
            i += len(runes)
        }
        if i < 0 || i >= len(runes) {
            panic("index out of range")
        }
        return string(runes[i])
    case map[string]any:
        ks, ok := k.(string)
        if !ok {
            panic("invalid map key")
        }
        return s[ks]
    default:
        panic("invalid index target")
    }
}