// Solution for SPOJ KPMATRIX - Matrix
// https://www.spoj.com/problems/KPMATRIX/

fun readInts(line: string): list<int> {
  var nums: list<int> = []
  var cur = ""
  var i = 0
  while i < len(line) {
    let ch = line[i:i+1]
    if ch == " " { if len(cur) > 0 { nums = append(nums, cur as int); cur = "" } }
    else { cur = cur + ch }
    i = i + 1
  }
  if len(cur) > 0 { nums = append(nums, cur as int) }
  return nums
}

fun main() {
  let firstLine = input()
  if firstLine == "" { return }
  let nm = readInts(firstLine)
  let n = nm[0]
  let m = nm[1]
  var mat: list<list<int>> = []
  var i = 0
  while i < n {
    var line = input()
    while line == "" { line = input() }
    mat = append(mat, readInts(line))
    i = i + 1
  }
  var last = input()
  while last == "" { last = input() }
  let ab = readInts(last)
  let a = ab[0]
  let b = ab[1]
  // prefix sums
  var ps: list<list<int>> = []
  i = 0
  while i <= n {
    var row: list<int> = []
    var j = 0
    while j <= m { row = append(row, 0); j = j + 1 }
    ps = append(ps, row)
    i = i + 1
  }
  i = 0
  while i < n {
    var j = 0
    while j < m {
      ps[i+1][j+1] = ps[i][j+1] + ps[i+1][j] - ps[i][j] + mat[i][j]
      j = j + 1
    }
    i = i + 1
  }
  var cnt = 0
  var r1 = 0
  while r1 < n {
    var r2 = r1
    while r2 < n {
      var c1 = 0
      while c1 < m {
        var c2 = c1
        while c2 < m {
          let sum = ps[r2+1][c2+1] - ps[r1][c2+1] - ps[r2+1][c1] + ps[r1][c1]
          if sum >= a && sum <= b { cnt = cnt + 1 }
          c2 = c2 + 1
        }
        c1 = c1 + 1
      }
      r2 = r2 + 1
    }
    r1 = r1 + 1
  }
  print(cnt)
}

main()
