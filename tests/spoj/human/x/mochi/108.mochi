/*
SPOJ: MORSE - Decoding Morse Sequences
https://www.spoj.com/problems/MORSE/
*/

fun parseInt(s: string): int {
  let digits = {"0":0,"1":1,"2":2,"3":3,"4":4,"5":5,"6":6,"7":7,"8":8,"9":9}
  var i = 0
  var n = 0
  while i < len(s) {
    n = n * 10 + (digits[s[i:i+1]] as int)
    i = i + 1
  }
  return n
}

fun makeIntList(n: int, value: int): list<int> {
  var res: list<int> = []
  var i = 0
  while i < n {
    res = append(res, value)
    i = i + 1
  }
  return res
}

let morse = {
  "A":".-","B":"-...","C":"-.-.","D":"-..",
  "E":".","F":"..-.","G":"--.","H":"....",
  "I":"..","J":".---","K":"-.-","L":".-..",
  "M":"--","N":"-.","O":"---","P":".--.",
  "Q":"--.-","R":".-.","S":"...","T":"-",
  "U":"..-","V":"...-","W":".--","X":"-..-",
  "Y":"-.--","Z":"--.."
}

fun encode(word: string): string {
  var res = ""
  var i = 0
  while i < len(word) {
    let ch = word[i:i+1]
    res = res + (morse[ch] as string)
    i = i + 1
  }
  return res
}

fun main() {
  let dLine = input()
  if dLine == "" { return }
  let d = parseInt(dLine)
  var case = 0
  while case < d {
    let seq = input()
    let n = parseInt(input())
    var codes: map<string,int> = {}
    var lens: list<int> = []
    var lenSeen: map<int,int> = {}
    var idx = 0
    while idx < n {
      let w = input()
      let code = encode(w)
      if codes[code] != nil {
        codes[code] = (codes[code] as int) + 1
      } else {
        codes[code] = 1
      }
      let Lc = len(code)
      if lenSeen[Lc] == nil {
        lens = append(lens, Lc)
        lenSeen[Lc] = 1
      }
      idx = idx + 1
    }
    var dp = makeIntList(len(seq) + 1, 0)
    dp[0] = 1
    var i = 0
    while i < len(seq) {
      if dp[i] > 0 {
        var k = 0
        while k < len(lens) {
          let L = lens[k]
          if i + L <= len(seq) {
            let sub = seq[i:i+L]
            if codes[sub] != nil {
              dp[i+L] = dp[i+L] + dp[i] * (codes[sub] as int)
            }
          }
          k = k + 1
        }
      }
      i = i + 1
    }
    print(dp[len(seq)])
    case = case + 1
  }
}

main()
