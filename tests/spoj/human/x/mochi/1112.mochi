// Solution for SPOJ NSTEPS - Number Steps
// https://www.spoj.com/problems/NSTEPS/

let digits = {
  "0":0,"1":1,"2":2,"3":3,"4":4,
  "5":5,"6":6,"7":7,"8":8,"9":9,
}

fun parseIntStr(str: string): int {
  var i = 0
  var n = 0
  while i < len(str) {
    n = n * 10 + (digits[str[i:i+1]] as int)
    i = i + 1
  }
  return n
}

fun parseInts(line: string): list<int> {
  var nums: list<int> = []
  var i = 0
  var num = 0
  var has = false
  while i < len(line) {
    let ch = line[i:i+1]
    if ch == " " {
      if has {
        nums = append(nums, num)
        num = 0
        has = false
      }
    } else {
      num = num * 10 + (digits[ch] as int)
      has = true
    }
    i = i + 1
  }
  if has { nums = append(nums, num) }
  return nums
}

fun main() {
  let tLine = input()
  if tLine == "" { return }
  let t = parseIntStr(tLine)
  var count = 0
  while count < t {
    let line = input()
    if line == "" { continue }
    let nums = parseInts(line)
    let x = nums[0]
    let y = nums[1]
    var out: string
    if x == y {
      if x % 2 == 0 {
        out = str(x + y)
      } else {
        out = str(x + y - 1)
      }
    } else if x == y + 2 {
      if x % 2 == 0 {
        out = str(x + y)
      } else {
        out = str(x + y - 1)
      }
    } else {
      out = "No Number"
    }
    print(out)
    count = count + 1
  }
}

main()
