// Solution for SPOJ BACKUP - Backup Files
// https://www.spoj.com/problems/BACKUP/

fun main() {
  let tLine = input()
  let t = tLine as int
  var case = 0
  while case < t {
    var line = input()
    while line == "" {
      line = input()
    }
    let parts = split(line, " ")
    let n = (parts[0]) as int
    let k = (parts[1]) as int
    var pos: list<int> = []
    var i = 0
    while i < n {
      var s = input()
      if s == "" {
        continue
      }
      pos = append(pos, s as int)
      i = i + 1
    }
    let inf = 1000000000000000
    var prev: list<int> = []
    var prev2: list<int> = []
    var j = 0
    while j <= k {
      if j == 0 {
        prev = append(prev, 0)
      } else {
        prev = append(prev, inf)
      }
      prev2 = append(prev2, inf)
      j = j + 1
    }
    i = 1
    while i <= n {
      var curr: list<int> = []
      j = 0
      while j <= k {
        curr = append(curr, prev[j])
        j = j + 1
      }
      if i >= 2 {
        let diff = (pos[i-1] as int) - (pos[i-2] as int)
        j = 1
        while j <= k {
          let cand = (prev2[j-1] as int) + diff
          if cand < (curr[j] as int) {
            curr[j] = cand
          }
          j = j + 1
        }
      }
      prev2 = prev
      prev = curr
      i = i + 1
    }
    print(str(prev[k]))
    case = case + 1
  }
}

main()
