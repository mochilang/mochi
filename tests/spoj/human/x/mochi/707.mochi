// Solution for SPOJ TFSETS - Triple-Free Sets
// https://www.spoj.com/problems/TFSETS/

let MOD = 1000000001

let powNums = [1,2,3,4,6,8,9,12,16,18,24,27,32,36,48,54,64,72,81,96,108,128,144,162,192,216,243,256,288,324,384,432,486,512,576,648,729,768,864,972,1024,1152,1296,1458,1536,1728,1944,2048,2187,2304,2592,2916,3072,3456,3888,4096,4374,4608,5184,5832,6144,6561,6912,7776,8192,8748,9216,10368,11664,12288,13122,13824,15552,16384,17496,18432,19683,20736,23328,24576,26244,27648,31104,32768,34992,36864,39366,41472,46656,49152,52488,55296,59049,62208,65536,69984,73728,78732,82944,93312,98304]
let Hvals = [2,3,5,8,12,19,33,49,78,114,172,294,467,703,1055,1559,2478,3718,6394,9616,14366,22827,34363,50543,75935,114316,196149,311714,468492,702436,1055706,1585526,2336786,3713369,5584289,8390475,14409962,21653776,32557779,48738745,77452142,116437300,175099856,257850206,387496684,582226892,875754843,391672638,389191466,592286425,398891564,87893797,154145863,266640053,452360683,625056365,264516690,619865276,238569609,345745088,124243652,403748297,646714199,905024632,793465262,308848199,605636282,290598246,46709814,38105878,281874215,760246709,93099279,41593891,790530768,692325370,784426746,185693996,77303869,897362654,929177580,380774435,630418830,127649001,920357089,334124113,358039273,43598907,649146845,542555108,576282892,289862284,385341741,147796640,960758401,834024535,396043521,732355928,802195667,699887506,570710481]

fun getH(q: int): int {
  var l = 0
  var r = len(powNums) - 1
  var ans = 0
  while l <= r {
    let mid = (l + r) / 2
    if powNums[mid] <= q {
      ans = mid
      l = mid + 1
    } else {
      r = mid - 1
    }
  }
  return Hvals[ans]
}

fun countCoprime(n: int): int {
  return n - (n / 2) - (n / 3) + (n / 6)
}

fun powMod(base: int, exp: int): int {
  var res = 1
  var b = base % MOD
  var e = exp
  while e > 0 {
    if e % 2 == 1 { res = (res * b) % MOD }
    b = (b * b) % MOD
    e = e / 2
  }
  return res
}

fun solve(n: int): int {
  var res = 1
  var l = 1
  while l <= n {
    let q = n / l
    let r = n / q
    let g = countCoprime(r) - countCoprime(l-1)
    let h = getH(q)
    res = (res * powMod(h, g)) % MOD
    l = r + 1
  }
  return res
}

fun main() {
  let tLine = input()
  if tLine == "" { return }
  let T = tLine as int
  var i = 0
  while i < T {
    let line = input()
    let n = line as int
    let ans = solve(n)
    print(str(ans))
    i = i + 1
  }
}

main()
