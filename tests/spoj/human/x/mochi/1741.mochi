// Solution for SPOJ TETRIS3D - Tetris 3D
// https://www.spoj.com/problems/TETRIS3D/

fun splitInts(line: string): list<int> {
  var parts: list<int> = []
  var cur = ""
  var i = 0
  while i < len(line) {
    let ch = line[i:i+1]
    if ch == " " {
      if len(cur) > 0 {
        parts = append(parts, int(cur))
        cur = ""
      }
    } else {
      cur = cur + ch
    }
    i = i + 1
  }
  if len(cur) > 0 { parts = append(parts, int(cur)) }
  return parts
}

fun main() {
  let first = input()
  if first == nil || first == "" { return }
  let header = splitInts(first)
  let D = header[0]
  let S = header[1]
  let N = header[2]
  var grid: list<list<int>> = []
  var x = 0
  while x < D {
    var row: list<int> = []
    var y = 0
    while y < S {
      row = append(row, 0)
      y = y + 1
    }
    grid = append(grid, row)
    x = x + 1
  }
  var ans = 0
  var i = 0
  while i < N {
    var line = input()
    if line == "" { continue }
    let vals = splitInts(line)
    let d = vals[0]
    let s = vals[1]
    let w = vals[2]
    let xs = vals[3]
    let ys = vals[4]
    var hmax = 0
    var xx = xs
    while xx < xs + d {
      var yy = ys
      while yy < ys + s {
        let h = grid[xx][yy]
        if h > hmax { hmax = h }
        yy = yy + 1
      }
      xx = xx + 1
    }
    let newH = hmax + w
    xx = xs
    while xx < xs + d {
      var yy = ys
      while yy < ys + s {
        grid[xx][yy] = newH
        yy = yy + 1
      }
      xx = xx + 1
    }
    if newH > ans { ans = newH }
    i = i + 1
  }
  print(str(ans))
}

main()
