// Solution for SPOJ ABWORDS - AB-words
// https://www.spoj.com/problems/ABWORDS/

fun sortStrings(arr: list<string>): list<string> {
  var i = 1
  while i < len(arr) {
    var j = i
    while j > 0 && arr[j-1] > arr[j] {
      let tmp = arr[j-1]
      arr[j-1] = arr[j]
      arr[j] = tmp
      j = j - 1
    }
    i = i + 1
  }
  return arr
}

fun canon(s: string): string {
  if len(s) == 0 { return "" }
  var parts: list<string> = []
  var bal = 0
  var start = 0
  var i = 0
  while i < len(s) {
    let ch = s[i:i+1]
    if ch == "a" {
      bal = bal + 1
    } else {
      bal = bal - 1
    }
    if bal == 0 {
      let seg = s[start:i+1]
      let inner = canon(seg[1:len(seg)-1])
      parts = append(parts, "a" + inner + "b")
      start = i + 1
    }
    i = i + 1
  }
  parts = sortStrings(parts)
  var res = ""
  i = 0
  while i < len(parts) {
    res = res + parts[i]
    i = i + 1
  }
  return res
}

fun readNonEmpty(): string {
  var line = input()
  while line == "" {
    line = input()
    if line == nil { return nil }
  }
  return line
}

fun main() {
  let tLine = readNonEmpty()
  if tLine == nil { return }
  let t = int(tLine)
  var case = 0
  while case < t {
    let nLine = readNonEmpty()
    if nLine == nil { break }
    let n = int(nLine)
    var seen: map<string,bool> = {}
    var count = 0
    var i = 0
    while i < n {
      var w = readNonEmpty()
      let c = canon(w)
      if !seen[c] {
        seen[c] = true
        count = count + 1
      }
      i = i + 1
    }
    print(str(count))
    case = case + 1
  }
}

main()
