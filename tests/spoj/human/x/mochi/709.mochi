// Solution for SPOJ NICEDAY - The day of the competitors
// https://www.spoj.com/problems/NICEDAY/

let digits = {
  "0":0,"1":1,"2":2,"3":3,"4":4,
  "5":5,"6":6,"7":7,"8":8,"9":9,
}

fun splitSpaces(s: string): list<string> {
  var parts: list<string> = []
  var cur: string = ""
  var i = 0
  while i < len(s) {
    let ch = s[i:i+1]
    if ch == " " || ch == "\t" || ch == "\r" || ch == "\n" {
      if len(cur) > 0 { parts = append(parts, cur); cur = "" }
    } else {
      cur = cur + ch
    }
    i = i + 1
  }
  if len(cur) > 0 { parts = append(parts, cur) }
  return parts
}

fun parseIntStr(str: string): int {
  var i = 0
  var neg = false
  if len(str) > 0 && str[0:1] == "-" {
    neg = true
    i = 1
  }
  var n = 0
  while i < len(str) {
    n = n * 10 + (digits[str[i:i+1]] as int)
    i = i + 1
  }
  if neg { n = -n }
  return n
}

var tokens: list<string> = []
fun nextInt(): int {
  while len(tokens) == 0 {
    let line = input()
    if line == nil { return 0 }
    let parts = splitSpaces(line)
    var j = 0
    while j < len(parts) {
      tokens = append(tokens, parts[j])
      j = j + 1
    }
  }
  let v = parseIntStr(tokens[0])
  tokens = tokens[1:len(tokens)]
  return v
}

type Contestant {
  a: int,
  b: int,
  c: int,
}

fun main() {
  let t = nextInt()
  var case = 0
  while case < t {
    let n = nextInt()
    var cons: list<Contestant> = []
    var i = 0
    while i < n {
      let a = nextInt()
      let b = nextInt()
      let c = nextInt()
      cons = append(cons, Contestant{a:a,b:b,c:c})
      i = i + 1
    }
    var cnt = 0
    i = 0
    while i < n {
      var good = true
      var j = 0
      while j < n {
        if i != j {
          let oi = cons[j]
          let ci = cons[i]
          if oi.a < ci.a && oi.b < ci.b && oi.c < ci.c {
            good = false
            break
          }
        }
        j = j + 1
      }
      if good { cnt = cnt + 1 }
      i = i + 1
    }
    print(cnt)
    case = case + 1
  }
}

main()
