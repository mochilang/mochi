// Solution for SPOJ ADDREV - Adding Reversed Numbers
// https://www.spoj.com/problems/ADDREV/

let digits = {
  "0":0,"1":1,"2":2,"3":3,"4":4,
  "5":5,"6":6,"7":7,"8":8,"9":9,
}

fun parseRev(str: string): int {
  var n = 0
  var base = 1
  var i = 0
  while i < len(str) {
    n = n + (digits[str[i:i+1]] as int) * base
    base = base * 10
    i = i + 1
  }
  return n
}

fun reverseInt(n: int): int {
  var rev = 0
  while n > 0 {
    rev = rev * 10 + (n % 10)
    n = n / 10
  }
  return rev
}

fun main() {
  let tStr = input()
  if tStr == "" { return }
  let t = parseRev(tStr) // tStr is normal but parseRev works similarly
  var case = 0
  while case < t {
    let line = input()
    var idx = 0
    var aStr = ""
    while idx < len(line) && line[idx:idx+1] != " " {
      aStr = aStr + line[idx:idx+1]
      idx = idx + 1
    }
    idx = idx + 1
    var bStr = ""
    while idx < len(line) {
      bStr = bStr + line[idx:idx+1]
      idx = idx + 1
    }
    let a = parseRev(aStr)
    let b = parseRev(bStr)
    let sum = a + b
    let res = reverseInt(sum)
    print(res)
    case = case + 1
  }
}

main()
