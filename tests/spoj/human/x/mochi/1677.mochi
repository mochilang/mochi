// Solution for SPOJ HALLOW - Halloween treats
// https://www.spoj.com/problems/HALLOW/

let digits = {
  "0":0,"1":1,"2":2,"3":3,"4":4,
  "5":5,"6":6,"7":7,"8":8,"9":9,
}

fun parseIntStr(str: string): int {
  var i = 0
  var n = 0
  while i < len(str) {
    n = n * 10 + (digits[str[i:i+1]] as int)
    i = i + 1
  }
  return n
}

fun intToString(n: int): string {
  if n == 0 { return "0" }
  let ds = ["0","1","2","3","4","5","6","7","8","9"]
  var s = ""
  var m = n
  while m > 0 {
    let d = m % 10
    s = ds[d] + s
    m = m / 10
  }
  return s
}

fun splitSpaces(s: string): list<string> {
  var parts: list<string> = []
  var cur = ""
  var i = 0
  while i < len(s) {
    let ch = s[i:i+1]
    if ch == " " || ch == "\t" || ch == "\r" || ch == "\n" {
      if len(cur) > 0 { parts = append(parts, cur); cur = "" }
    } else {
      cur = cur + ch
    }
    i = i + 1
  }
  if len(cur) > 0 { parts = append(parts, cur) }
  return parts
}

fun parseInts(line: string): list<int> {
  let parts = splitSpaces(line)
  var nums: list<int> = []
  var i = 0
  while i < len(parts) {
    nums = append(nums, parseIntStr(parts[i]))
    i = i + 1
  }
  return nums
}

fun solve(c: int, nums: list<int>): string {
  var first: list<int> = []
  var i = 0
  while i < c {
    first = append(first, 0-1)
    i = i + 1
  }
  first[0] = 0
  var pref = 0
  var idx = 1
  while idx <= len(nums) {
    pref = (pref + nums[idx-1]) % c
    if first[pref] != 0-1 {
      var res = ""
      var j = first[pref] + 1
      while j <= idx {
        if res != "" { res = res + " " }
        res = res + intToString(j)
        j = j + 1
      }
      return res
    }
    first[pref] = idx
    idx = idx + 1
  }
  return "no sweets"
}

fun main() {
  while true {
    let line = input()
    if line == "" { break }
    let parts = splitSpaces(line)
    if len(parts) < 2 { continue }
    let c = parseIntStr(parts[0])
    let n = parseIntStr(parts[1])
    if c == 0 && n == 0 { break }
    let numsLine = input()
    let nums = parseInts(numsLine)
    print(solve(c, nums))
  }
}

main()
