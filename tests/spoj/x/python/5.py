# Code generated by Mochi transpiler.
# Version 0.10.74, generated on 2025-08-26 14:25 +0700
import sys
if hasattr(sys, "set_int_max_str_digits"):
    sys.set_int_max_str_digits(0)
if hasattr(sys, "setrecursionlimit"):
    sys.setrecursionlimit(1000000)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


def _append(lst, v):
    lst = [] if lst is None else lst[:]
    lst.append(v)
    return lst


import builtins
def _str(v):
    return builtins.str(v)


def _set_index(lst, idx, val):
    if lst is None:
        lst = []
    if idx >= len(lst):
        lst.extend([None] * (idx - len(lst) + 1))
    lst[idx] = val
    return lst

def next_pal(s):
    digitMap = {"0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9}
    n = len(s)
    num = []
    for i in range(0, n):
        num = _append(num, int(digitMap.get(s[i:i + 1], 0)))
    all9 = True
    for d in num:
        if d != 9:
            all9 = False
            break
    if all9:
        res = "1"
        for _ in range(0, (n - 1)):
            res = res + "0"
        res = res + "1"
        return res
    left = (n // 2) - 1
    right = (n // 2 if n % 2 == 0 else (n // 2) + 1)
    while left >= 0 and right < n and num[left] == num[right]:
        left = left - 1
        right = right + 1
    smaller = left < 0 or num[left] < num[right]
    left = (n // 2) - 1
    right = (n // 2 if n % 2 == 0 else (n // 2) + 1)
    while left >= 0:
        num[right] = num[left]
        left = left - 1
        right = right + 1
    if smaller:
        carry = 1
        left = (n // 2) - 1
        if n % 2 == 1:
            mid = n // 2
            num[mid] = num[mid] + carry
            carry = num[mid] // 10
            num[mid] = num[mid] % 10
            right = mid + 1
        else:
            right = n // 2
        while left >= 0:
            num[left] = num[left] + carry
            carry = num[left] // 10
            num[left] = num[left] % 10
            num[right] = num[left]
            left = left - 1
            right = right + 1
    out = ""
    for d in num:
        out = out + _str(d)
    return out
def parseIntStr(str_):
    digits = {"0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9}
    i = 0
    n = 0
    while i < len(str_):
        n = n * 10 + (int(digits.get(str_[i:i + 1], 0)))
        i = i + 1
    return n
def main():
    tStr = input()
    if tStr == "":
        return
    t = parseIntStr(tStr)
    for _ in range(0, t):
        s = input()
        print(next_pal(s))
main()

