// https://www.spoj.com/problems/PALIN/

fun next_pal(s: string): string {
  let digitMap = {
    "0": 0,
    "1": 1,
    "2": 2,
    "3": 3,
    "4": 4,
    "5": 5,
    "6": 6,
    "7": 7,
    "8": 8,
    "9": 9,
  }
  var n = len(s)
  var num: list<int> = []
  for i in 0..n {
    num = append(num, digitMap[s[i:i+1]] as int)
  }
  var all9 = true
  for d in num {
    if d != 9 {
      all9 = false
      break
    }
  }
  if all9 {
    var res = "1"
    for _ in 0..(n-1) {
      res = res + "0"
    }
    res = res + "1"
    return res
  }
  var left = n/2 - 1
  var right = if n % 2 == 0 { n/2 } else { n/2 + 1 }
  while left >= 0 && right < n && num[left] == num[right] {
    left = left - 1
    right = right + 1
  }
  var smaller = left < 0 || num[left] < num[right]
  left = n/2 - 1
  right = if n % 2 == 0 { n/2 } else { n/2 + 1 }
  while left >= 0 {
    num[right] = num[left]
    left = left - 1
    right = right + 1
  }
  if smaller {
    var carry = 1
    left = n/2 - 1
    if n % 2 == 1 {
      var mid = n/2
      num[mid] = num[mid] + carry
      carry = num[mid] / 10
      num[mid] = num[mid] % 10
      right = mid + 1
    } else {
      right = n/2
    }
    while left >= 0 {
      num[left] = num[left] + carry
      carry = num[left] / 10
      num[left] = num[left] % 10
      num[right] = num[left]
      left = left - 1
      right = right + 1
    }
  }
  var out = ""
  for d in num {
    out = out + str(d)
  }
  return out
}

fun parseIntStr(str: string): int {
  let digits = {
    "0": 0,
    "1": 1,
    "2": 2,
    "3": 3,
    "4": 4,
    "5": 5,
    "6": 6,
    "7": 7,
    "8": 8,
    "9": 9,
  }
  var i = 0
  var n = 0
  while i < len(str) {
    n = n * 10 + (digits[str[i:i+1]] as int)
    i = i + 1
  }
  return n
}

fun main() {
  let tStr = input()
  if tStr == "" { return }
  let t = parseIntStr(tStr)
  for _ in 0..t {
    let s = input()
    print(next_pal(s))
  }
}

main()
