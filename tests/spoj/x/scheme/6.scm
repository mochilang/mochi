;; Generated by Mochi Scheme transpiler on 2025-08-26 14:25 +0700
(import (scheme base))
(import (scheme time))
(import (chibi string))
(import (only (scheme char) string-upcase string-downcase))
(import (srfi 69))
(import (srfi 1))
(define _list list)
(define (void) '())
(import (chibi io))
(import (chibi time))
(define (_mem) (* 1024 (resource-usage-max-rss (get-resource-usage resource-usage/self))))
(import (chibi json))
(define (to-str x)
  (cond ((pair? x)
         (string-append "[" (string-join (map to-str x) ", ") "]"))
        ((hash-table? x)
         (let* ((ks (hash-table-keys x))
                (pairs (map (lambda (k)
                              (string-append (to-str k) ": " (to-str (hash-table-ref x k))))
                            ks)))
           (string-append "{" (string-join pairs ", ") "}")))
        ((null? x) "[]")
        ((string? x) (let ((out (open-output-string))) (json-write x out) (get-output-string out)))
        ((boolean? x) (if x "true" "false"))
       ((number? x)
        (if (integer? x)
            (number->string (inexact->exact x))
            (number->string (exact->inexact x))))
        (else (number->string x))))
(define (to-str-space x)
  (cond ((pair? x)
         (string-append "[" (string-join (map to-str-space x) " ") "]"))
        ((string? x) x)
        (else (to-str x))))
(define (upper s) (string-upcase s))
(define (lower s) (string-downcase s))
(define (_floor x) (cond ((string? x) (let ((n (string->number x))) (if n (floor n) 0))) ((boolean? x) (if x 1 0)) (else (floor x))))
(define (fmod a b) (- a (* (_floor (/ a b)) b)))
(define (_mod a b) (if (and (integer? a) (integer? b)) (modulo a b) (fmod a b)))
(define (_div a b) (if (and (integer? a) (integer? b) (exact? a) (exact? b)) (quotient a b) (/ a b)))
(define (_gt a b) (cond ((and (number? a) (number? b)) (> a b)) ((and (string? a) (string? b)) (string>? a b)) (else (> a b))))
(define (_lt a b) (cond ((and (number? a) (number? b)) (< a b)) ((and (string? a) (string? b)) (string<? a b)) (else (< a b))))
(define (_ge a b) (cond ((and (number? a) (number? b)) (>= a b)) ((and (string? a) (string? b)) (string>=? a b)) (else (>= a b))))
(define (_le a b) (cond ((and (number? a) (number? b)) (<= a b)) ((and (string? a) (string? b)) (string<=? a b)) (else (<= a b))))
(define (_eq a b) (cond ((and (number? a) (number? b)) (if (or (inexact? a) (inexact? b)) (if (<= (max (abs a) (abs b)) 1e-9) (= a b) (< (abs (- a b)) (* 1e-9 (max (abs a) (abs b))))) (= a b))) ((and (string? a) (string? b)) (string=? a b)) (else (equal? a b))))
(define (_add a b)
  (cond ((and (number? a) (number? b)) (+ a b))
        ((string? a) (string-append a (to-str b)))
        ((string? b) (string-append (to-str a) b))
        ((and (list? a) (list? b)) (append a b))
        (else (+ a b))))
(define (indexOf s sub) (let ((cur (string-contains s sub)))   (if cur (string-cursor->index s cur) -1)))
(define (_display . args) (apply display args))
(define (panic msg) (error msg))
(define (padStart s width pad)
  (let loop ((out s))
    (if (< (string-length out) width)
        (loop (string-append pad out))
        out)))
(define (_substring s start end)
  (let* ((len (string-length s))
         (s0 (max 0 (min len start)))
         (e0 (max s0 (min len end))))
    (substring s s0 e0)))
(define (_repeat s n)
  (let loop ((i 0) (out ""))
    (if (< i n)
        (loop (+ i 1) (string-append out s))
        out)))
(define (slice seq start end)
  (let* ((len (if (string? seq) (string-length seq) (length seq)))
         (s (if (< start 0) (+ len start) start))
         (e (if (< end 0) (+ len end) end)))
    (set! s (max 0 (min len s)))
    (set! e (max 0 (min len e)))
    (when (< e s) (set! e s))
    (if (string? seq)
        (_substring seq s e)
        (take (drop seq s) (- e s)))))
(define (_parseIntStr s base)
  (let* ((b (if (number? base) base 10))
         (n (string->number (if (list? s) (list->string s) s) b)))
    (if n (inexact->exact (truncate n)) 0)))
(define (_split s sep)
  (let* ((str (if (string? s) s (list->string s)))
         (del (cond ((char? sep) sep)
                     ((string? sep) (if (= (string-length sep) 1)
                                       (string-ref sep 0)
                                       sep))
                     (else sep))))
    (cond
     ((and (string? del) (string=? del ""))
      (map string (string->list str)))
     ((char? del)
      (string-split str del))
     (else
        (let loop ((r str) (acc '()))
          (let ((cur (string-contains r del)))
            (if cur
                (let ((idx (string-cursor->index r cur)))
                  (loop (_substring r (+ idx (string-length del)) (string-length r))
                        (cons (_substring r 0 idx) acc)))
                (reverse (cons r acc)))))))))
(define (_len x)
  (cond ((string? x) (string-length x))
        ((hash-table? x) (hash-table-size x))
        ((and (pair? x) (vector? (cdr x))) (car x))
        ((list? x) (length x))
        ((vector? x) (vector-length x))
        (else 0)))

(define (_list . args)
  (let* ((n (length args))
         (cap (max 4 n))
         (vec (make-vector cap)))
    (let loop ((i 0) (xs args))
      (when (< i n)
        (vector-set! vec i (car xs))
        (loop (+ i 1) (cdr xs))))
    (cons n vec)))

;; Access an element from a dynamic array returning 0 when out of range.
(define (list-ref-safe lst idx)
  (let* ((i (inexact->exact idx))
         (len (if (pair? lst) (car lst) 0)))
    (if (and (pair? lst) (>= i 0) (< i len))
        (vector-ref (cdr lst) i)
        0)))

;; Set an element in a dynamic array when index is within bounds.
(define (list-set-safe! lst idx val)
  (let* ((i (inexact->exact idx))
         (len (if (pair? lst) (car lst) 0)))
    (when (and (pair? lst) (>= i 0) (< i len))
      (vector-set! (cdr lst) i val))))

;; Amortized O(1) append for dynamic arrays backed by growable vectors.
(define (_append lst val)
  (let* ((len (car lst))
         (vec (cdr lst))
         (cap (vector-length vec)))
    (when (>= len cap)
      (let* ((new-cap (if (= cap 0) 4 (* 2 cap)))
             (new-vec (make-vector new-cap)))
        (let loop ((i 0))
          (when (< i len)
            (vector-set! new-vec i (vector-ref vec i))
            (loop (+ i 1))))
        (set-cdr! lst new-vec)
        (set! vec new-vec)))
    (vector-set! vec len val)
    (set-car! lst (+ len 1))
    lst))

;; Convert dynamic array to Scheme list for iteration constructs.
(define (_to-list lst)
  (let* ((len (car lst))
         (vec (cdr lst)))
    (let loop ((i (- len 1)) (acc '()))
      (if (< i 0) acc
          (loop (- i 1) (cons (vector-ref vec i) acc))))))

(define (_alist->hash-table arr)
  (alist->hash-table (_to-list arr)))
(define (_input)
  (let ((l (read-line)))
    (if (eof-object? l) "" l)))
(
  let (
    (
      start35 (
        current-jiffy
      )
    )
     (
      jps38 (
        jiffies-per-second
      )
    )
  )
   (
    begin (
      let (
        (
          digitMap (
            _alist->hash-table (
              _list (
                cons "0" 0
              )
               (
                cons "1" 1
              )
               (
                cons "2" 2
              )
               (
                cons "3" 3
              )
               (
                cons "4" 4
              )
               (
                cons "5" 5
              )
               (
                cons "6" 6
              )
               (
                cons "7" 7
              )
               (
                cons "8" 8
              )
               (
                cons "9" 9
              )
            )
          )
        )
      )
       (
        begin (
          define (
            repeat s n
          )
           (
            let (
              (
                r ""
              )
            )
             (
              begin (
                call/cc (
                  lambda (
                    break2
                  )
                   (
                    letrec (
                      (
                        loop1 (
                          lambda (
                            _
                          )
                           (
                            if (
                              < _ n
                            )
                             (
                              begin (
                                begin (
                                  set! r (
                                    string-append r s
                                  )
                                )
                              )
                               (
                                loop1 (
                                  + _ 1
                                )
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop1 0
                    )
                  )
                )
              )
               r
            )
          )
        )
         (
          define (
            add_str a b
          )
           (
            let (
              (
                i (
                  - (
                    _len a
                  )
                   1
                )
              )
            )
             (
              begin (
                let (
                  (
                    j (
                      - (
                        _len b
                      )
                       1
                    )
                  )
                )
                 (
                  begin (
                    let (
                      (
                        carry 0
                      )
                    )
                     (
                      begin (
                        let (
                          (
                            res ""
                          )
                        )
                         (
                          begin (
                            letrec (
                              (
                                loop3 (
                                  lambda (
                                    
                                  )
                                   (
                                    if (
                                      or (
                                        or (
                                          >= i 0
                                        )
                                         (
                                          >= j 0
                                        )
                                      )
                                       (
                                        > carry 0
                                      )
                                    )
                                     (
                                      begin (
                                        let (
                                          (
                                            da 0
                                          )
                                        )
                                         (
                                          begin (
                                            if (
                                              >= i 0
                                            )
                                             (
                                              begin (
                                                set! da (
                                                  let (
                                                    (
                                                      v4 (
                                                        cond (
                                                          (
                                                            string? digitMap
                                                          )
                                                           (
                                                            _substring digitMap (
                                                              _substring a i (
                                                                + i 1
                                                              )
                                                            )
                                                             (
                                                              + (
                                                                _substring a i (
                                                                  + i 1
                                                                )
                                                              )
                                                               1
                                                            )
                                                          )
                                                        )
                                                         (
                                                          (
                                                            hash-table? digitMap
                                                          )
                                                           (
                                                            hash-table-ref digitMap (
                                                              _substring a i (
                                                                + i 1
                                                              )
                                                            )
                                                          )
                                                        )
                                                         (
                                                          else (
                                                            list-ref-safe digitMap (
                                                              _substring a i (
                                                                + i 1
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                   (
                                                    cond (
                                                      (
                                                        string? v4
                                                      )
                                                       (
                                                        inexact->exact (
                                                          _floor (
                                                            string->number v4
                                                          )
                                                        )
                                                      )
                                                    )
                                                     (
                                                      (
                                                        boolean? v4
                                                      )
                                                       (
                                                        if v4 1 0
                                                      )
                                                    )
                                                     (
                                                      else (
                                                        inexact->exact (
                                                          _floor v4
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                             (
                                              void
                                            )
                                          )
                                           (
                                            let (
                                              (
                                                db 0
                                              )
                                            )
                                             (
                                              begin (
                                                if (
                                                  >= j 0
                                                )
                                                 (
                                                  begin (
                                                    set! db (
                                                      let (
                                                        (
                                                          v5 (
                                                            cond (
                                                              (
                                                                string? digitMap
                                                              )
                                                               (
                                                                _substring digitMap (
                                                                  _substring b j (
                                                                    + j 1
                                                                  )
                                                                )
                                                                 (
                                                                  + (
                                                                    _substring b j (
                                                                      + j 1
                                                                    )
                                                                  )
                                                                   1
                                                                )
                                                              )
                                                            )
                                                             (
                                                              (
                                                                hash-table? digitMap
                                                              )
                                                               (
                                                                hash-table-ref digitMap (
                                                                  _substring b j (
                                                                    + j 1
                                                                  )
                                                                )
                                                              )
                                                            )
                                                             (
                                                              else (
                                                                list-ref-safe digitMap (
                                                                  _substring b j (
                                                                    + j 1
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                       (
                                                        cond (
                                                          (
                                                            string? v5
                                                          )
                                                           (
                                                            inexact->exact (
                                                              _floor (
                                                                string->number v5
                                                              )
                                                            )
                                                          )
                                                        )
                                                         (
                                                          (
                                                            boolean? v5
                                                          )
                                                           (
                                                            if v5 1 0
                                                          )
                                                        )
                                                         (
                                                          else (
                                                            inexact->exact (
                                                              _floor v5
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                                 (
                                                  void
                                                )
                                              )
                                               (
                                                let (
                                                  (
                                                    sum (
                                                      + (
                                                        + da db
                                                      )
                                                       carry
                                                    )
                                                  )
                                                )
                                                 (
                                                  begin (
                                                    set! res (
                                                      string-append (
                                                        to-str-space (
                                                          _mod sum 10
                                                        )
                                                      )
                                                       res
                                                    )
                                                  )
                                                   (
                                                    set! carry (
                                                      _div sum 10
                                                    )
                                                  )
                                                   (
                                                    set! i (
                                                      - i 1
                                                    )
                                                  )
                                                   (
                                                    set! j (
                                                      - j 1
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                       (
                                        loop3
                                      )
                                    )
                                     (
                                      void
                                    )
                                  )
                                )
                              )
                            )
                             (
                              loop3
                            )
                          )
                           res
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
         (
          define (
            sub_str a b
          )
           (
            call/cc (
              lambda (
                ret6
              )
               (
                let (
                  (
                    i (
                      - (
                        _len a
                      )
                       1
                    )
                  )
                )
                 (
                  begin (
                    let (
                      (
                        j (
                          - (
                            _len b
                          )
                           1
                        )
                      )
                    )
                     (
                      begin (
                        let (
                          (
                            borrow 0
                          )
                        )
                         (
                          begin (
                            let (
                              (
                                res ""
                              )
                            )
                             (
                              begin (
                                letrec (
                                  (
                                    loop7 (
                                      lambda (
                                        
                                      )
                                       (
                                        if (
                                          >= i 0
                                        )
                                         (
                                          begin (
                                            let (
                                              (
                                                da (
                                                  - (
                                                    let (
                                                      (
                                                        v8 (
                                                          cond (
                                                            (
                                                              string? digitMap
                                                            )
                                                             (
                                                              _substring digitMap (
                                                                _substring a i (
                                                                  + i 1
                                                                )
                                                              )
                                                               (
                                                                + (
                                                                  _substring a i (
                                                                    + i 1
                                                                  )
                                                                )
                                                                 1
                                                              )
                                                            )
                                                          )
                                                           (
                                                            (
                                                              hash-table? digitMap
                                                            )
                                                             (
                                                              hash-table-ref digitMap (
                                                                _substring a i (
                                                                  + i 1
                                                                )
                                                              )
                                                            )
                                                          )
                                                           (
                                                            else (
                                                              list-ref-safe digitMap (
                                                                _substring a i (
                                                                  + i 1
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                     (
                                                      cond (
                                                        (
                                                          string? v8
                                                        )
                                                         (
                                                          inexact->exact (
                                                            _floor (
                                                              string->number v8
                                                            )
                                                          )
                                                        )
                                                      )
                                                       (
                                                        (
                                                          boolean? v8
                                                        )
                                                         (
                                                          if v8 1 0
                                                        )
                                                      )
                                                       (
                                                        else (
                                                          inexact->exact (
                                                            _floor v8
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                   borrow
                                                )
                                              )
                                            )
                                             (
                                              begin (
                                                let (
                                                  (
                                                    db 0
                                                  )
                                                )
                                                 (
                                                  begin (
                                                    if (
                                                      >= j 0
                                                    )
                                                     (
                                                      begin (
                                                        set! db (
                                                          let (
                                                            (
                                                              v9 (
                                                                cond (
                                                                  (
                                                                    string? digitMap
                                                                  )
                                                                   (
                                                                    _substring digitMap (
                                                                      _substring b j (
                                                                        + j 1
                                                                      )
                                                                    )
                                                                     (
                                                                      + (
                                                                        _substring b j (
                                                                          + j 1
                                                                        )
                                                                      )
                                                                       1
                                                                    )
                                                                  )
                                                                )
                                                                 (
                                                                  (
                                                                    hash-table? digitMap
                                                                  )
                                                                   (
                                                                    hash-table-ref digitMap (
                                                                      _substring b j (
                                                                        + j 1
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                                 (
                                                                  else (
                                                                    list-ref-safe digitMap (
                                                                      _substring b j (
                                                                        + j 1
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                           (
                                                            cond (
                                                              (
                                                                string? v9
                                                              )
                                                               (
                                                                inexact->exact (
                                                                  _floor (
                                                                    string->number v9
                                                                  )
                                                                )
                                                              )
                                                            )
                                                             (
                                                              (
                                                                boolean? v9
                                                              )
                                                               (
                                                                if v9 1 0
                                                              )
                                                            )
                                                             (
                                                              else (
                                                                inexact->exact (
                                                                  _floor v9
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                     (
                                                      void
                                                    )
                                                  )
                                                   (
                                                    if (
                                                      < da db
                                                    )
                                                     (
                                                      begin (
                                                        set! da (
                                                          + da 10
                                                        )
                                                      )
                                                       (
                                                        set! borrow 1
                                                      )
                                                    )
                                                     (
                                                      begin (
                                                        set! borrow 0
                                                      )
                                                    )
                                                  )
                                                   (
                                                    let (
                                                      (
                                                        diff (
                                                          - da db
                                                        )
                                                      )
                                                    )
                                                     (
                                                      begin (
                                                        set! res (
                                                          string-append (
                                                            to-str-space diff
                                                          )
                                                           res
                                                        )
                                                      )
                                                       (
                                                        set! i (
                                                          - i 1
                                                        )
                                                      )
                                                       (
                                                        set! j (
                                                          - j 1
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                           (
                                            loop7
                                          )
                                        )
                                         (
                                          void
                                        )
                                      )
                                    )
                                  )
                                )
                                 (
                                  loop7
                                )
                              )
                               (
                                let (
                                  (
                                    k 0
                                  )
                                )
                                 (
                                  begin (
                                    letrec (
                                      (
                                        loop10 (
                                          lambda (
                                            
                                          )
                                           (
                                            if (
                                              and (
                                                < k (
                                                  _len res
                                                )
                                              )
                                               (
                                                _eq (
                                                  _substring res k (
                                                    + k 1
                                                  )
                                                )
                                                 "0"
                                              )
                                            )
                                             (
                                              begin (
                                                set! k (
                                                  + k 1
                                                )
                                              )
                                               (
                                                loop10
                                              )
                                            )
                                             (
                                              void
                                            )
                                          )
                                        )
                                      )
                                    )
                                     (
                                      loop10
                                    )
                                  )
                                   (
                                    if (
                                      _eq k (
                                        _len res
                                      )
                                    )
                                     (
                                      begin (
                                        ret6 "0"
                                      )
                                    )
                                     (
                                      void
                                    )
                                  )
                                   (
                                    ret6 (
                                      _substring res k (
                                        string-length res
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
         (
          define (
            mul_digit a d
          )
           (
            call/cc (
              lambda (
                ret11
              )
               (
                begin (
                  if (
                    _eq d 0
                  )
                   (
                    begin (
                      ret11 "0"
                    )
                  )
                   (
                    void
                  )
                )
                 (
                  let (
                    (
                      i (
                        - (
                          _len a
                        )
                         1
                      )
                    )
                  )
                   (
                    begin (
                      let (
                        (
                          carry 0
                        )
                      )
                       (
                        begin (
                          let (
                            (
                              res ""
                            )
                          )
                           (
                            begin (
                              letrec (
                                (
                                  loop12 (
                                    lambda (
                                      
                                    )
                                     (
                                      if (
                                        >= i 0
                                      )
                                       (
                                        begin (
                                          let (
                                            (
                                              prod (
                                                + (
                                                  * (
                                                    let (
                                                      (
                                                        v13 (
                                                          cond (
                                                            (
                                                              string? digitMap
                                                            )
                                                             (
                                                              _substring digitMap (
                                                                _substring a i (
                                                                  + i 1
                                                                )
                                                              )
                                                               (
                                                                + (
                                                                  _substring a i (
                                                                    + i 1
                                                                  )
                                                                )
                                                                 1
                                                              )
                                                            )
                                                          )
                                                           (
                                                            (
                                                              hash-table? digitMap
                                                            )
                                                             (
                                                              hash-table-ref digitMap (
                                                                _substring a i (
                                                                  + i 1
                                                                )
                                                              )
                                                            )
                                                          )
                                                           (
                                                            else (
                                                              list-ref-safe digitMap (
                                                                _substring a i (
                                                                  + i 1
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                     (
                                                      cond (
                                                        (
                                                          string? v13
                                                        )
                                                         (
                                                          inexact->exact (
                                                            _floor (
                                                              string->number v13
                                                            )
                                                          )
                                                        )
                                                      )
                                                       (
                                                        (
                                                          boolean? v13
                                                        )
                                                         (
                                                          if v13 1 0
                                                        )
                                                      )
                                                       (
                                                        else (
                                                          inexact->exact (
                                                            _floor v13
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                   d
                                                )
                                                 carry
                                              )
                                            )
                                          )
                                           (
                                            begin (
                                              set! res (
                                                string-append (
                                                  to-str-space (
                                                    _mod prod 10
                                                  )
                                                )
                                                 res
                                              )
                                            )
                                             (
                                              set! carry (
                                                _div prod 10
                                              )
                                            )
                                             (
                                              set! i (
                                                - i 1
                                              )
                                            )
                                          )
                                        )
                                         (
                                          loop12
                                        )
                                      )
                                       (
                                        void
                                      )
                                    )
                                  )
                                )
                              )
                               (
                                loop12
                              )
                            )
                             (
                              if (
                                > carry 0
                              )
                               (
                                begin (
                                  set! res (
                                    string-append (
                                      to-str-space carry
                                    )
                                     res
                                  )
                                )
                              )
                               (
                                void
                              )
                            )
                             (
                              let (
                                (
                                  k 0
                                )
                              )
                               (
                                begin (
                                  letrec (
                                    (
                                      loop14 (
                                        lambda (
                                          
                                        )
                                         (
                                          if (
                                            and (
                                              < k (
                                                _len res
                                              )
                                            )
                                             (
                                              _eq (
                                                _substring res k (
                                                  + k 1
                                                )
                                              )
                                               "0"
                                            )
                                          )
                                           (
                                            begin (
                                              set! k (
                                                + k 1
                                              )
                                            )
                                             (
                                              loop14
                                            )
                                          )
                                           (
                                            void
                                          )
                                        )
                                      )
                                    )
                                  )
                                   (
                                    loop14
                                  )
                                )
                                 (
                                  if (
                                    _eq k (
                                      _len res
                                    )
                                  )
                                   (
                                    begin (
                                      ret11 "0"
                                    )
                                  )
                                   (
                                    void
                                  )
                                )
                                 (
                                  ret11 (
                                    _substring res k (
                                      string-length res
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
         (
          define (
            mul_str a b
          )
           (
            let (
              (
                result "0"
              )
            )
             (
              begin (
                let (
                  (
                    shift 0
                  )
                )
                 (
                  begin (
                    let (
                      (
                        parts (
                          _list
                        )
                      )
                    )
                     (
                      begin (
                        let (
                          (
                            i (
                              - (
                                _len b
                              )
                               1
                            )
                          )
                        )
                         (
                          begin (
                            letrec (
                              (
                                loop15 (
                                  lambda (
                                    
                                  )
                                   (
                                    if (
                                      >= i 0
                                    )
                                     (
                                      begin (
                                        let (
                                          (
                                            d (
                                              let (
                                                (
                                                  v16 (
                                                    cond (
                                                      (
                                                        string? digitMap
                                                      )
                                                       (
                                                        _substring digitMap (
                                                          _substring b i (
                                                            + i 1
                                                          )
                                                        )
                                                         (
                                                          + (
                                                            _substring b i (
                                                              + i 1
                                                            )
                                                          )
                                                           1
                                                        )
                                                      )
                                                    )
                                                     (
                                                      (
                                                        hash-table? digitMap
                                                      )
                                                       (
                                                        hash-table-ref digitMap (
                                                          _substring b i (
                                                            + i 1
                                                          )
                                                        )
                                                      )
                                                    )
                                                     (
                                                      else (
                                                        list-ref-safe digitMap (
                                                          _substring b i (
                                                            + i 1
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                               (
                                                cond (
                                                  (
                                                    string? v16
                                                  )
                                                   (
                                                    inexact->exact (
                                                      _floor (
                                                        string->number v16
                                                      )
                                                    )
                                                  )
                                                )
                                                 (
                                                  (
                                                    boolean? v16
                                                  )
                                                   (
                                                    if v16 1 0
                                                  )
                                                )
                                                 (
                                                  else (
                                                    inexact->exact (
                                                      _floor v16
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                         (
                                          begin (
                                            let (
                                              (
                                                part (
                                                  mul_digit a d
                                                )
                                              )
                                            )
                                             (
                                              begin (
                                                set! parts (
                                                  _append parts (
                                                    _alist->hash-table (
                                                      _list (
                                                        cons "val" part
                                                      )
                                                       (
                                                        cons "shift" shift
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                               (
                                                let (
                                                  (
                                                    shifted part
                                                  )
                                                )
                                                 (
                                                  begin (
                                                    call/cc (
                                                      lambda (
                                                        break18
                                                      )
                                                       (
                                                        letrec (
                                                          (
                                                            loop17 (
                                                              lambda (
                                                                _
                                                              )
                                                               (
                                                                if (
                                                                  < _ shift
                                                                )
                                                                 (
                                                                  begin (
                                                                    begin (
                                                                      set! shifted (
                                                                        string-append shifted "0"
                                                                      )
                                                                    )
                                                                  )
                                                                   (
                                                                    loop17 (
                                                                      + _ 1
                                                                    )
                                                                  )
                                                                )
                                                                 (
                                                                  void
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                         (
                                                          loop17 0
                                                        )
                                                      )
                                                    )
                                                  )
                                                   (
                                                    set! result (
                                                      add_str result shifted
                                                    )
                                                  )
                                                   (
                                                    set! shift (
                                                      + shift 1
                                                    )
                                                  )
                                                   (
                                                    set! i (
                                                      - i 1
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                       (
                                        loop15
                                      )
                                    )
                                     (
                                      void
                                    )
                                  )
                                )
                              )
                            )
                             (
                              loop15
                            )
                          )
                           (
                            _alist->hash-table (
                              _list (
                                cons "res" result
                              )
                               (
                                cons "parts" parts
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
         (
          define (
            pad_left s total
          )
           (
            let (
              (
                r ""
              )
            )
             (
              begin (
                call/cc (
                  lambda (
                    break20
                  )
                   (
                    letrec (
                      (
                        loop19 (
                          lambda (
                            _
                          )
                           (
                            if (
                              < _ (
                                - total (
                                  _len s
                                )
                              )
                            )
                             (
                              begin (
                                begin (
                                  set! r (
                                    string-append r " "
                                  )
                                )
                              )
                               (
                                loop19 (
                                  + _ 1
                                )
                              )
                            )
                             (
                              void
                            )
                          )
                        )
                      )
                    )
                     (
                      loop19 0
                    )
                  )
                )
              )
               (
                string-append r s
              )
            )
          )
        )
         (
          define (
            main
          )
           (
            call/cc (
              lambda (
                ret21
              )
               (
                let (
                  (
                    tStr (
                      _input
                    )
                  )
                )
                 (
                  begin (
                    if (
                      _eq tStr ""
                    )
                     (
                      begin (
                        ret21 (
                          void
                        )
                      )
                    )
                     (
                      void
                    )
                  )
                   (
                    let (
                      (
                        t (
                          let (
                            (
                              v22 tStr
                            )
                          )
                           (
                            cond (
                              (
                                string? v22
                              )
                               (
                                exact (
                                  _floor (
                                    string->number v22
                                  )
                                )
                              )
                            )
                             (
                              (
                                boolean? v22
                              )
                               (
                                if v22 1 0
                              )
                            )
                             (
                              else (
                                exact (
                                  _floor v22
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                     (
                      begin (
                        call/cc (
                          lambda (
                            break24
                          )
                           (
                            letrec (
                              (
                                loop23 (
                                  lambda (
                                    _
                                  )
                                   (
                                    if (
                                      < _ t
                                    )
                                     (
                                      begin (
                                        begin (
                                          let (
                                            (
                                              line (
                                                _input
                                              )
                                            )
                                          )
                                           (
                                            begin (
                                              if (
                                                _eq line ""
                                              )
                                               (
                                                begin (
                                                  loop23 (
                                                    + _ 1
                                                  )
                                                )
                                              )
                                               (
                                                void
                                              )
                                            )
                                             (
                                              let (
                                                (
                                                  idx 0
                                                )
                                              )
                                               (
                                                begin (
                                                  call/cc (
                                                    lambda (
                                                      break26
                                                    )
                                                     (
                                                      letrec (
                                                        (
                                                          loop25 (
                                                            lambda (
                                                              
                                                            )
                                                             (
                                                              if (
                                                                < idx (
                                                                  _len line
                                                                )
                                                              )
                                                               (
                                                                begin (
                                                                  let (
                                                                    (
                                                                      ch (
                                                                        _substring line idx (
                                                                          + idx 1
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                   (
                                                                    begin (
                                                                      if (
                                                                        or (
                                                                          or (
                                                                            _eq ch "+"
                                                                          )
                                                                           (
                                                                            _eq ch "-"
                                                                          )
                                                                        )
                                                                         (
                                                                          _eq ch "*"
                                                                        )
                                                                      )
                                                                       (
                                                                        begin (
                                                                          break26 (
                                                                            void
                                                                          )
                                                                        )
                                                                      )
                                                                       (
                                                                        void
                                                                      )
                                                                    )
                                                                     (
                                                                      set! idx (
                                                                        + idx 1
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                                 (
                                                                  loop25
                                                                )
                                                              )
                                                               (
                                                                void
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                       (
                                                        loop25
                                                      )
                                                    )
                                                  )
                                                )
                                                 (
                                                  let (
                                                    (
                                                      a (
                                                        _substring line 0 idx
                                                      )
                                                    )
                                                  )
                                                   (
                                                    begin (
                                                      let (
                                                        (
                                                          op (
                                                            _substring line idx (
                                                              + idx 1
                                                            )
                                                          )
                                                        )
                                                      )
                                                       (
                                                        begin (
                                                          let (
                                                            (
                                                              b (
                                                                _substring line (
                                                                  + idx 1
                                                                )
                                                                 (
                                                                  string-length line
                                                                )
                                                              )
                                                            )
                                                          )
                                                           (
                                                            begin (
                                                              let (
                                                                (
                                                                  res ""
                                                                )
                                                              )
                                                               (
                                                                begin (
                                                                  let (
                                                                    (
                                                                      parts (
                                                                        _list
                                                                      )
                                                                    )
                                                                  )
                                                                   (
                                                                    begin (
                                                                      if (
                                                                        _eq op "+"
                                                                      )
                                                                       (
                                                                        begin (
                                                                          set! res (
                                                                            add_str a b
                                                                          )
                                                                        )
                                                                      )
                                                                       (
                                                                        if (
                                                                          _eq op "-"
                                                                        )
                                                                         (
                                                                          begin (
                                                                            set! res (
                                                                              sub_str a b
                                                                            )
                                                                          )
                                                                        )
                                                                         (
                                                                          begin (
                                                                            let (
                                                                              (
                                                                                r (
                                                                                  mul_str a b
                                                                                )
                                                                              )
                                                                            )
                                                                             (
                                                                              begin (
                                                                                set! res (
                                                                                  to-str (
                                                                                    cond (
                                                                                      (
                                                                                        string? r
                                                                                      )
                                                                                       (
                                                                                        _substring r "res" (
                                                                                          + "res" 1
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                     (
                                                                                      (
                                                                                        hash-table? r
                                                                                      )
                                                                                       (
                                                                                        hash-table-ref r "res"
                                                                                      )
                                                                                    )
                                                                                     (
                                                                                      else (
                                                                                        list-ref-safe r "res"
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                               (
                                                                                set! parts (
                                                                                  cond (
                                                                                    (
                                                                                      string? r
                                                                                    )
                                                                                     (
                                                                                      _substring r "parts" (
                                                                                        + "parts" 1
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                   (
                                                                                    (
                                                                                      hash-table? r
                                                                                    )
                                                                                     (
                                                                                      hash-table-ref r "parts"
                                                                                    )
                                                                                  )
                                                                                   (
                                                                                    else (
                                                                                      list-ref-safe r "parts"
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                     (
                                                                      let (
                                                                        (
                                                                          width (
                                                                            _len a
                                                                          )
                                                                        )
                                                                      )
                                                                       (
                                                                        begin (
                                                                          let (
                                                                            (
                                                                              secondLen (
                                                                                + (
                                                                                  _len b
                                                                                )
                                                                                 1
                                                                              )
                                                                            )
                                                                          )
                                                                           (
                                                                            begin (
                                                                              if (
                                                                                > secondLen width
                                                                              )
                                                                               (
                                                                                begin (
                                                                                  set! width secondLen
                                                                                )
                                                                              )
                                                                               (
                                                                                void
                                                                              )
                                                                            )
                                                                             (
                                                                              if (
                                                                                > (
                                                                                  _len res
                                                                                )
                                                                                 width
                                                                              )
                                                                               (
                                                                                begin (
                                                                                  set! width (
                                                                                    _len res
                                                                                  )
                                                                                )
                                                                              )
                                                                               (
                                                                                void
                                                                              )
                                                                            )
                                                                             (
                                                                              call/cc (
                                                                                lambda (
                                                                                  break28
                                                                                )
                                                                                 (
                                                                                  letrec (
                                                                                    (
                                                                                      loop27 (
                                                                                        lambda (
                                                                                          xs
                                                                                        )
                                                                                         (
                                                                                          if (
                                                                                            null? xs
                                                                                          )
                                                                                           (
                                                                                            void
                                                                                          )
                                                                                           (
                                                                                            begin (
                                                                                              let (
                                                                                                (
                                                                                                  p (
                                                                                                    car xs
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                               (
                                                                                                begin (
                                                                                                  let (
                                                                                                    (
                                                                                                      l (
                                                                                                        + (
                                                                                                          _len (
                                                                                                            to-str (
                                                                                                              cond (
                                                                                                                (
                                                                                                                  string? p
                                                                                                                )
                                                                                                                 (
                                                                                                                  _substring p "val" (
                                                                                                                    + "val" 1
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                               (
                                                                                                                (
                                                                                                                  hash-table? p
                                                                                                                )
                                                                                                                 (
                                                                                                                  hash-table-ref p "val"
                                                                                                                )
                                                                                                              )
                                                                                                               (
                                                                                                                else (
                                                                                                                  list-ref-safe p "val"
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                         (
                                                                                                          let (
                                                                                                            (
                                                                                                              v29 (
                                                                                                                cond (
                                                                                                                  (
                                                                                                                    string? p
                                                                                                                  )
                                                                                                                   (
                                                                                                                    _substring p "shift" (
                                                                                                                      + "shift" 1
                                                                                                                    )
                                                                                                                  )
                                                                                                                )
                                                                                                                 (
                                                                                                                  (
                                                                                                                    hash-table? p
                                                                                                                  )
                                                                                                                   (
                                                                                                                    hash-table-ref p "shift"
                                                                                                                  )
                                                                                                                )
                                                                                                                 (
                                                                                                                  else (
                                                                                                                    list-ref-safe p "shift"
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                           (
                                                                                                            cond (
                                                                                                              (
                                                                                                                string? v29
                                                                                                              )
                                                                                                               (
                                                                                                                inexact->exact (
                                                                                                                  _floor (
                                                                                                                    string->number v29
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                             (
                                                                                                              (
                                                                                                                boolean? v29
                                                                                                              )
                                                                                                               (
                                                                                                                if v29 1 0
                                                                                                              )
                                                                                                            )
                                                                                                             (
                                                                                                              else (
                                                                                                                inexact->exact (
                                                                                                                  _floor v29
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                   (
                                                                                                    begin (
                                                                                                      if (
                                                                                                        > l width
                                                                                                      )
                                                                                                       (
                                                                                                        begin (
                                                                                                          set! width l
                                                                                                        )
                                                                                                      )
                                                                                                       (
                                                                                                        void
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                             (
                                                                                              loop27 (
                                                                                                cdr xs
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                   (
                                                                                    loop27 (
                                                                                      _to-list parts
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                             (
                                                                              _display (
                                                                                if (
                                                                                  string? (
                                                                                    pad_left a width
                                                                                  )
                                                                                )
                                                                                 (
                                                                                  pad_left a width
                                                                                )
                                                                                 (
                                                                                  to-str (
                                                                                    pad_left a width
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                             (
                                                                              newline
                                                                            )
                                                                             (
                                                                              _display (
                                                                                if (
                                                                                  string? (
                                                                                    pad_left (
                                                                                      string-append op b
                                                                                    )
                                                                                     width
                                                                                  )
                                                                                )
                                                                                 (
                                                                                  pad_left (
                                                                                    string-append op b
                                                                                  )
                                                                                   width
                                                                                )
                                                                                 (
                                                                                  to-str (
                                                                                    pad_left (
                                                                                      string-append op b
                                                                                    )
                                                                                     width
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                             (
                                                                              newline
                                                                            )
                                                                             (
                                                                              let (
                                                                                (
                                                                                  dash1 0
                                                                                )
                                                                              )
                                                                               (
                                                                                begin (
                                                                                  if (
                                                                                    _eq op "*"
                                                                                  )
                                                                                   (
                                                                                    begin (
                                                                                      if (
                                                                                        > (
                                                                                          _len parts
                                                                                        )
                                                                                         0
                                                                                      )
                                                                                       (
                                                                                        begin (
                                                                                          set! dash1 (
                                                                                            + (
                                                                                              _len b
                                                                                            )
                                                                                             1
                                                                                          )
                                                                                        )
                                                                                         (
                                                                                          let (
                                                                                            (
                                                                                              firstPart (
                                                                                                to-str (
                                                                                                  cond (
                                                                                                    (
                                                                                                      string? (
                                                                                                        list-ref-safe parts 0
                                                                                                      )
                                                                                                    )
                                                                                                     (
                                                                                                      _substring (
                                                                                                        list-ref-safe parts 0
                                                                                                      )
                                                                                                       "val" (
                                                                                                        + "val" 1
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                   (
                                                                                                    (
                                                                                                      hash-table? (
                                                                                                        list-ref-safe parts 0
                                                                                                      )
                                                                                                    )
                                                                                                     (
                                                                                                      hash-table-ref (
                                                                                                        list-ref-safe parts 0
                                                                                                      )
                                                                                                       "val"
                                                                                                    )
                                                                                                  )
                                                                                                   (
                                                                                                    else (
                                                                                                      list-ref-safe (
                                                                                                        list-ref-safe parts 0
                                                                                                      )
                                                                                                       "val"
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                           (
                                                                                            begin (
                                                                                              if (
                                                                                                > (
                                                                                                  _len firstPart
                                                                                                )
                                                                                                 dash1
                                                                                              )
                                                                                               (
                                                                                                begin (
                                                                                                  set! dash1 (
                                                                                                    _len firstPart
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                               (
                                                                                                void
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                       (
                                                                                        begin (
                                                                                          set! dash1 (
                                                                                            + (
                                                                                              _len b
                                                                                            )
                                                                                             1
                                                                                          )
                                                                                        )
                                                                                         (
                                                                                          if (
                                                                                            > (
                                                                                              _len res
                                                                                            )
                                                                                             dash1
                                                                                          )
                                                                                           (
                                                                                            begin (
                                                                                              set! dash1 (
                                                                                                _len res
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                           (
                                                                                            void
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                   (
                                                                                    begin (
                                                                                      set! dash1 (
                                                                                        + (
                                                                                          _len b
                                                                                        )
                                                                                         1
                                                                                      )
                                                                                    )
                                                                                     (
                                                                                      if (
                                                                                        > (
                                                                                          _len res
                                                                                        )
                                                                                         dash1
                                                                                      )
                                                                                       (
                                                                                        begin (
                                                                                          set! dash1 (
                                                                                            _len res
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                       (
                                                                                        void
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                                 (
                                                                                  _display (
                                                                                    if (
                                                                                      string? (
                                                                                        pad_left (
                                                                                          repeat "-" dash1
                                                                                        )
                                                                                         width
                                                                                      )
                                                                                    )
                                                                                     (
                                                                                      pad_left (
                                                                                        repeat "-" dash1
                                                                                      )
                                                                                       width
                                                                                    )
                                                                                     (
                                                                                      to-str (
                                                                                        pad_left (
                                                                                          repeat "-" dash1
                                                                                        )
                                                                                         width
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                                 (
                                                                                  newline
                                                                                )
                                                                                 (
                                                                                  if (
                                                                                    and (
                                                                                      _eq op "*"
                                                                                    )
                                                                                     (
                                                                                      > (
                                                                                        _len b
                                                                                      )
                                                                                       1
                                                                                    )
                                                                                  )
                                                                                   (
                                                                                    begin (
                                                                                      call/cc (
                                                                                        lambda (
                                                                                          break31
                                                                                        )
                                                                                         (
                                                                                          letrec (
                                                                                            (
                                                                                              loop30 (
                                                                                                lambda (
                                                                                                  xs
                                                                                                )
                                                                                                 (
                                                                                                  if (
                                                                                                    null? xs
                                                                                                  )
                                                                                                   (
                                                                                                    void
                                                                                                  )
                                                                                                   (
                                                                                                    begin (
                                                                                                      let (
                                                                                                        (
                                                                                                          p (
                                                                                                            car xs
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                       (
                                                                                                        begin (
                                                                                                          let (
                                                                                                            (
                                                                                                              val (
                                                                                                                to-str (
                                                                                                                  cond (
                                                                                                                    (
                                                                                                                      string? p
                                                                                                                    )
                                                                                                                     (
                                                                                                                      _substring p "val" (
                                                                                                                        + "val" 1
                                                                                                                      )
                                                                                                                    )
                                                                                                                  )
                                                                                                                   (
                                                                                                                    (
                                                                                                                      hash-table? p
                                                                                                                    )
                                                                                                                     (
                                                                                                                      hash-table-ref p "val"
                                                                                                                    )
                                                                                                                  )
                                                                                                                   (
                                                                                                                    else (
                                                                                                                      list-ref-safe p "val"
                                                                                                                    )
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                           (
                                                                                                            begin (
                                                                                                              let (
                                                                                                                (
                                                                                                                  shift (
                                                                                                                    let (
                                                                                                                      (
                                                                                                                        v32 (
                                                                                                                          cond (
                                                                                                                            (
                                                                                                                              string? p
                                                                                                                            )
                                                                                                                             (
                                                                                                                              _substring p "shift" (
                                                                                                                                + "shift" 1
                                                                                                                              )
                                                                                                                            )
                                                                                                                          )
                                                                                                                           (
                                                                                                                            (
                                                                                                                              hash-table? p
                                                                                                                            )
                                                                                                                             (
                                                                                                                              hash-table-ref p "shift"
                                                                                                                            )
                                                                                                                          )
                                                                                                                           (
                                                                                                                            else (
                                                                                                                              list-ref-safe p "shift"
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )
                                                                                                                    )
                                                                                                                     (
                                                                                                                      cond (
                                                                                                                        (
                                                                                                                          string? v32
                                                                                                                        )
                                                                                                                         (
                                                                                                                          inexact->exact (
                                                                                                                            _floor (
                                                                                                                              string->number v32
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )
                                                                                                                       (
                                                                                                                        (
                                                                                                                          boolean? v32
                                                                                                                        )
                                                                                                                         (
                                                                                                                          if v32 1 0
                                                                                                                        )
                                                                                                                      )
                                                                                                                       (
                                                                                                                        else (
                                                                                                                          inexact->exact (
                                                                                                                            _floor v32
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )
                                                                                                                    )
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                               (
                                                                                                                begin (
                                                                                                                  let (
                                                                                                                    (
                                                                                                                      spaces (
                                                                                                                        - (
                                                                                                                          - width shift
                                                                                                                        )
                                                                                                                         (
                                                                                                                          _len val
                                                                                                                        )
                                                                                                                      )
                                                                                                                    )
                                                                                                                  )
                                                                                                                   (
                                                                                                                    begin (
                                                                                                                      let (
                                                                                                                        (
                                                                                                                          line ""
                                                                                                                        )
                                                                                                                      )
                                                                                                                       (
                                                                                                                        begin (
                                                                                                                          call/cc (
                                                                                                                            lambda (
                                                                                                                              break34
                                                                                                                            )
                                                                                                                             (
                                                                                                                              letrec (
                                                                                                                                (
                                                                                                                                  loop33 (
                                                                                                                                    lambda (
                                                                                                                                      _
                                                                                                                                    )
                                                                                                                                     (
                                                                                                                                      if (
                                                                                                                                        < _ spaces
                                                                                                                                      )
                                                                                                                                       (
                                                                                                                                        begin (
                                                                                                                                          begin (
                                                                                                                                            set! line (
                                                                                                                                              string-append line " "
                                                                                                                                            )
                                                                                                                                          )
                                                                                                                                        )
                                                                                                                                         (
                                                                                                                                          loop33 (
                                                                                                                                            + _ 1
                                                                                                                                          )
                                                                                                                                        )
                                                                                                                                      )
                                                                                                                                       (
                                                                                                                                        void
                                                                                                                                      )
                                                                                                                                    )
                                                                                                                                  )
                                                                                                                                )
                                                                                                                              )
                                                                                                                               (
                                                                                                                                loop33 0
                                                                                                                              )
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                         (
                                                                                                                          set! line (
                                                                                                                            string-append line val
                                                                                                                          )
                                                                                                                        )
                                                                                                                         (
                                                                                                                          _display (
                                                                                                                            if (
                                                                                                                              string? line
                                                                                                                            )
                                                                                                                             line (
                                                                                                                              to-str line
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                         (
                                                                                                                          newline
                                                                                                                        )
                                                                                                                      )
                                                                                                                    )
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                     (
                                                                                                      loop30 (
                                                                                                        cdr xs
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                           (
                                                                                            loop30 (
                                                                                              _to-list parts
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                     (
                                                                                      _display (
                                                                                        if (
                                                                                          string? (
                                                                                            pad_left (
                                                                                              repeat "-" (
                                                                                                _len res
                                                                                              )
                                                                                            )
                                                                                             width
                                                                                          )
                                                                                        )
                                                                                         (
                                                                                          pad_left (
                                                                                            repeat "-" (
                                                                                              _len res
                                                                                            )
                                                                                          )
                                                                                           width
                                                                                        )
                                                                                         (
                                                                                          to-str (
                                                                                            pad_left (
                                                                                              repeat "-" (
                                                                                                _len res
                                                                                              )
                                                                                            )
                                                                                             width
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                     (
                                                                                      newline
                                                                                    )
                                                                                  )
                                                                                   (
                                                                                    void
                                                                                  )
                                                                                )
                                                                                 (
                                                                                  _display (
                                                                                    if (
                                                                                      string? (
                                                                                        pad_left res width
                                                                                      )
                                                                                    )
                                                                                     (
                                                                                      pad_left res width
                                                                                    )
                                                                                     (
                                                                                      to-str (
                                                                                        pad_left res width
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                                 (
                                                                                  newline
                                                                                )
                                                                                 (
                                                                                  _display (
                                                                                    if (
                                                                                      string? ""
                                                                                    )
                                                                                     "" (
                                                                                      to-str ""
                                                                                    )
                                                                                  )
                                                                                )
                                                                                 (
                                                                                  newline
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                       (
                                        loop23 (
                                          + _ 1
                                        )
                                      )
                                    )
                                     (
                                      void
                                    )
                                  )
                                )
                              )
                            )
                             (
                              loop23 0
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
         (
          main
        )
      )
    )
     (
      let (
        (
          end36 (
            current-jiffy
          )
        )
      )
       (
        let (
          (
            dur37 (
              quotient (
                * (
                  - end36 start35
                )
                 1000000
              )
               jps38
            )
          )
        )
         (
          begin (
            _display (
              string-append "{\n  \"duration_us\": " (
                number->string dur37
              )
               ",\n  \"memory_bytes\": " (
                number->string (
                  _mem
                )
              )
               ",\n  \"name\": \"main\"\n}"
            )
          )
           (
            newline
          )
        )
      )
    )
  )
)
