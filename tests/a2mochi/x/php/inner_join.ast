(program
  (let customers
    (list
      (map
        (entry (string id) (int 1))
        (entry (string name) (string Alice))
      )
      (map
        (entry (string id) (int 2))
        (entry (string name) (string Bob))
      )
      (map
        (entry (string id) (int 3))
        (entry (string name) (string Charlie))
      )
    )
  )
  (let orders
    (list
      (map
        (entry (string id) (int 100))
        (entry (string customerId) (int 1))
        (entry (string total) (int 250))
      )
      (map
        (entry (string id) (int 101))
        (entry (string customerId) (int 2))
        (entry (string total) (int 125))
      )
      (map
        (entry (string id) (int 102))
        (entry (string customerId) (int 1))
        (entry (string total) (int 300))
      )
      (map
        (entry (string id) (int 103))
        (entry (string customerId) (int 4))
        (entry (string total) (int 80))
      )
    )
  )
  (let result (list))
  (for o
    (in (selector orders))
    (block
      (for c
        (in (selector customers))
        (block
          (if
            (binary ==
              (index
                (group
                  (cast
                    (selector o)
                    (type map (type string) (type any))
                  )
                )
                (string customerId)
              )
              (index
                (group
                  (cast
                    (selector c)
                    (type map (type string) (type any))
                  )
                )
                (string id)
              )
            )
            (block)
          )
        )
      )
    )
  )
  (call print (string "--- Orders with customer info ---"))
  (for entry
    (in (selector result))
    (block
      (call print
        (string Order)
        (index
          (group
            (cast
              (selector entry)
              (type map (type string) (type any))
            )
          )
          (string orderId)
        )
        (string " by")
        (index
          (group
            (cast
              (selector entry)
              (type map (type string) (type any))
            )
          )
          (string customerName)
        )
        (string " - $")
        (index
          (group
            (cast
              (selector entry)
              (type map (type string) (type any))
            )
          )
          (string total)
        )
      )
    )
  )
)
