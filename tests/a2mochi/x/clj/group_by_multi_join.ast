(program
  (list
    (selector defrecord)
    (selector Partsupp)
    (list (selector part) (selector supplier) (selector cost) (selector qty))
  )
  (list
    (selector defrecord)
    (selector Suppliers)
    (list (selector id) (selector nation))
  )
  (list
    (selector defrecord)
    (selector Nations)
    (list (selector id) (selector name))
  )
  (let nations)
  (let suppliers)
  (let partsupp)
  (let filtered
    (list
      (selector for)
      (list
        (selector ps)
        (selector partsupp)
        (selector s)
        (selector suppliers)
        (selector n)
        (selector nations)
        (selector when)
        (binary &&
          (binary &&
            (binary ==
              (list (selector id) (selector s))
              (list (selector supplier) (selector ps))
            )
            (binary ==
              (list (selector id) (selector n))
              (list (selector nation) (selector s))
            )
          )
          (binary ==
            (list (selector name) (selector n))
            (selector A)
          )
        )
      )
      (map
        (kv
          (selector part)
          (list (selector part) (selector ps))
        )
        (kv
          (selector value)
          (binary *
            (list (selector cost) (selector ps))
            (list (selector qty) (selector ps))
          )
        )
      )
    )
  )
  (let grouped
    (list
      (selector for)
      (list
        (selector g)
        (list (selector for) (selector g))
      )
      (map
        (kv
          (selector part)
          (list (selector key) (selector g))
        )
        (kv
          (selector total)
          (call sum
            (list
              (selector for)
              (list
                (selector r)
                (list (selector items) (selector g))
              )
              (list (selector value) (selector r))
            )
          )
        )
      )
    )
  )
  (fun main
    (block
      (call print (selector grouped))
    )
  )
  (call main)
)
