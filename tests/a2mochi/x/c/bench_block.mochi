// Generated by a2mochi vdev on 2025-07-29 11:24:28 GMT
/*
// Generated by Mochi 0.10.32 on 2025-07-24 19:09 +0000
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <malloc.h>


#include <time.h>
#include <stdlib.h>
static int seeded_now = 0;
static long long now_seed = 0;
static long long _now(void) {
    if (!seeded_now) {
        const char *s = getenv("MOCHI_NOW_SEED");
        if (s && *s) {
            now_seed = atoll(s);
            seeded_now = 1;
        }
    }
    if (seeded_now) {
        now_seed = (now_seed * 1664525 + 1013904223) % 2147483647;
        return now_seed;
    }
    struct timespec ts;
    clock_gettime(CLOCK_REALTIME, &ts);
    return (long long)(ts.tv_sec * 1000000000LL + ts.tv_nsec);
}

static long long _mem(void) {
    struct mallinfo mi = mallinfo();
    return (long long)mi.uordblks;
}

int main(void) {
    {
        long long __start = _now();
        long long __mem_start = _mem();
        int n = 1000;
        int s = 0;
        for (int i = 1; i < n; i++) {
            s = s + i;
        }
        long long __end = _now();
        long long __mem_end = _mem();
        long long __dur_us = (__end - __start) / 1000;
        long long __mem_bytes = __mem_end - __mem_start;
        printf("{\n  \"duration_us\": %-lld,\n  \"memory_bytes\": %-lld,\n  \"name\": \"simple\"\n}\n", __dur_us, __mem_bytes);
    }
    return 0;
}
*/
__start = _now()
__mem_start = _mem()
n = 1000
s = 0
for i in range(1, n) {
  s = (s + i)
}
__end = _now()
__mem_end = _mem()
__dur_us = (((__end - __start)) / 1000)
__mem_bytes = (__mem_end - __mem_start)
print(__mem_bytes)
