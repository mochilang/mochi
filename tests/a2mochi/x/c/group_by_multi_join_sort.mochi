// Generated by a2mochi vdev on 2025-07-29 16:28:25 GMT
/*
// Generated by Mochi 0.10.32 on 2025-07-21 21:13 +0700
#include <stdio.h>
#include <string.h>
#include <math.h>

typedef struct Anon10 Anon10;
typedef struct Anon11 Anon11;
typedef struct Anon12 Anon12;
typedef struct Anon9 Anon9;
typedef struct Customer Customer;
typedef struct Data2 Data2;
typedef struct Data4 Data4;
typedef struct Data6 Data6;
typedef struct Data8 Data8;
typedef struct Lineitem Lineitem;
typedef struct Nation Nation;
typedef struct Orders Orders;
typedef struct ResultItem ResultItem;

struct Anon10 {
    int o_custkey;
    const char* o_orderdate;
    int o_orderkey;
};

struct Anon11 {
    int l_discount;
    double l_extendedprice;
    int l_orderkey;
    const char* l_returnflag;
};

struct Anon12 {
    const char* n_name;
    int n_nationkey;
};

struct Anon9 {
    double c_acctbal;
    const char* c_address;
    const char* c_comment;
    int c_custkey;
    const char* c_name;
    int c_nationkey;
    const char* c_phone;
};

struct Customer {
    int c_custkey;
    const char* c_name;
    double c_acctbal;
    int c_nationkey;
    const char* c_address;
    const char* c_phone;
    const char* c_comment;
};

struct Data2 {
    int n_nationkey;
    const char* n_name;
};

struct Data4 {
    int c_custkey;
    const char* c_name;
    double c_acctbal;
    int c_nationkey;
    const char* c_address;
    const char* c_phone;
    const char* c_comment;
};

struct Data6 {
    int o_orderkey;
    int o_custkey;
    const char* o_orderdate;
};

struct Data8 {
    int l_orderkey;
    const char* l_returnflag;
    double l_extendedprice;
    double l_discount;
};

struct Lineitem {
    int l_orderkey;
    const char* l_returnflag;
    double l_extendedprice;
    double l_discount;
};

struct Nation {
    int n_nationkey;
    const char* n_name;
};

struct Orders {
    int o_orderkey;
    int o_custkey;
    const char* o_orderdate;
};

struct ResultItem {
    int c_custkey;
    const char* c_name;
    double revenue;
    double c_acctbal;
    const char* n_name;
    const char* c_address;
    const char* c_phone;
    const char* c_comment;
};

Nation nation[] = { (Nation){.n_nationkey = 1, .n_name = "BRAZIL"} };
Customer customer[] = { (Customer){.c_custkey = 1, .c_name = "Alice", .c_acctbal = 100, .c_nationkey = 1, .c_address = "123 St", .c_phone = "123-456", .c_comment = "Loyal"} };
Orders orders[] = { (Orders){.o_orderkey = 1000, .o_custkey = 1, .o_orderdate = "1993-10-15"}, (Orders){.o_orderkey = 2000, .o_custkey = 1, .o_orderdate = "1994-01-02"} };
Lineitem lineitem[] = { (Lineitem){.l_orderkey = 1000, .l_returnflag = "R", .l_extendedprice = 1000, .l_discount = 0.1}, (Lineitem){.l_orderkey = 2000, .l_returnflag = "N", .l_extendedprice = 500, .l_discount = 0} };
const char* start_date = "1993-10-01";
const char* end_date = "1994-01-01";

int main(void) {
    struct ResultItem {int c_custkey; const char* c_name; double revenue; double c_acctbal; const char* n_name; const char* c_address; const char* c_phone; const char* c_comment;};
    ResultItem result[4]; size_t result_len = 0;
    for(size_t i=0;i<1;i++){ Customer c=customer[i];
      for(size_t j=0;j<2;j++){ Orders o=orders[j]; if(o.o_custkey==c.c_custkey){
        for(size_t k=0;k<2;k++){ Lineitem l=lineitem[k]; if(l.l_orderkey==o.o_orderkey){
          for(size_t m=0;m<1;m++){ Nation n=nation[m]; if(n.n_nationkey==c.c_nationkey){
            if(strcmp(o.o_orderdate,start_date)>=0 && strcmp(o.o_orderdate,end_date)<0 && strcmp(l.l_returnflag,"R")==0){
              double rev=l.l_extendedprice*(1-l.l_discount);
              size_t idx=0; int found=0;
              for(; idx<result_len; idx++){ if(result[idx].c_custkey==c.c_custkey){ found=1; break; } }
              if(found){ result[idx].revenue += rev; } else { result[result_len++] = (ResultItem){c.c_custkey,c.c_name,rev,c.c_acctbal,n.n_name,c.c_address,c.c_phone,c.c_comment}; }
            }
          }}
        }}
      }
    }
    }
    for(size_t a=0;a<result_len;a++){ for(size_t b=a+1;b<result_len;b++){ if(result[a].revenue < result[b].revenue){ ResultItem tmp=result[a]; result[a]=result[b]; result[b]=tmp; } }}
    }
    for(size_t i=0;i<result_len;i++){ ResultItem r=result[i]; printf("{\"c_custkey\": %d, \"c_name\": %s, \"revenue\": %g, \"c_acctbal\": %g, \"n_name\": %s, \"c_address\": %s, \"c_phone\": %s, \"c_comment\": %s}%s", r.c_custkey, r.c_name, r.revenue, r.c_acctbal, r.n_name, r.c_address, r.c_phone, r.c_comment, i+1<result_len?" " : ""); }
    puts("");
    return 0;
}
*/
let nation = { (Nation){.n_nationkey = 1, .n_name = "BRAZIL"} }
let customer = ({ (Customer){.c_custkey = 1, .c_name = "Alice", .c_acctbal = 100, .c_nationkey = 1, .c_address = "123 St", .c_phone = "123 - 456", .c_comment = "Loyal"} })
let orders = ({ (Orders){.o_orderkey = 1000, .o_custkey = 1, .o_orderdate = "1993 - (10 - (15"}, (Orders){.o_orderkey = 2000, .o_custkey = 1, .o_orderdate = "1994 - (1 - 02"} }))))
let lineitem = { (Lineitem){.l_orderkey = 1000, .l_returnflag = "R", .l_extendedprice = 1000, .l_discount = 0.1}, (Lineitem){.l_orderkey = 2000, .l_returnflag = "N", .l_extendedprice = 500, .l_discount = 0} }
let start_date = "1993-10-01"
let end_date = "1994-01-01"
for i in 0..1 {
  for j in 0..2 {
    for k in 0..2 {
      for m in 0..1 {
        if (strcmp(o.o_orderdate, start_date) >= (false && (strcmp(o.o_orderdate, end_date) < (false && (strcmp(l.l_returnflag, "R") == 0))))) {
          let rev = (l.l_extendedprice * (1 - l.l_discount))
          let idx: int
          if (found){ result[idx].revenue + (= rev; } else { result[result_len + ( + ] = (ResultItem))) {
          } else {
          }
        } else {
        }
      }
    }
    for a in 0..result_len {
    }
  }
}
