parse error: parse error: 27:3: unexpected token "c_name" (expected ":" TypeRef)
type Anon1 {
  n_nationkey: int
  n_name: string
}
type Anon2 {
  c_custkey: int
  c_name: string
  c_acctbal: float
  c_nationkey: int
  c_address: string
  c_phone: string
  c_comment: string
}
type Anon3 {
  o_orderkey: int
  o_custkey: int
  o_orderdate: string
}
type Anon4 {
  l_orderkey: int
  l_returnflag: string
  l_extendedprice: float
  l_discount: float
}
type Anon5 {
  c_custkey
  c_name
  revenue
  c_acctbal
  n_name
  c_address
  c_phone
  c_comment
}
fun sumq0(arr0: int): int {
Result = 0
for x in arr0 {
Result = Result + (x.l.l_extendedprice * (1 - x.l.l_discount))
}
}
fun sumq1(arr1: int): int {
Result = 0
for x in arr1 {
Result = Result + (x.l.l_extendedprice * (1 - x.l.l_discount))
}
}
var nation: list<anon1> = []
var customer: list<anon2> = []
var orders: list<anon3> = []
var lineitem: list<anon4> = []
var start_date: string = ""
var end_date: string = ""
var i6: int = 0
var j7: int = 0
var tmp8: Anon5 = nil
var result: list<anon5> = []
var c: Anon2 = nil
var l: Anon4 = nil
var o: Anon3 = nil
var n: Anon1 = nil
nation = [{n_nationkey: 1, n_name: "BRAZIL"}]
customer = [{c_custkey: 1, c_name: "Alice", c_acctbal: 100, c_nationkey: 1, c_address: "123 St", c_phone: "123-456", c_comment: "Loyal"}]
orders = [{o_orderkey: 1000, o_custkey: 1, o_orderdate: "1993-10-15"}, {o_orderkey: 2000, o_custkey: 1, o_orderdate: "1994-01-02"}]
lineitem = [{l_orderkey: 1000, l_returnflag: "R", l_extendedprice: 1000, l_discount: 0.1}, {l_orderkey: 2000, l_returnflag: "N", l_extendedprice: 500, l_discount: 0}]
start_date = "1993-10-01"
end_date = "1994-01-01"
result = []
for c in customer {
for o in orders {
for l in lineitem {
for n in nation {
if (((o.o_custkey == c.c_custkey) && (l.l_orderkey == o.o_orderkey)) && (n.n_nationkey == c.c_nationkey)) && (((o.o_orderdate >= start_date) && (o.o_orderdate < end_date)) && (l.l_returnflag == "R")) {
result = concat(result, [(c_custkey: g.key.c_custkey; c_name: g.key.c_name; revenue: sumq0(g); c_acctbal: g.key.c_acctbal; n_name: g.key.n_name; c_address: g.key.c_address; c_phone: g.key.c_phone; c_comment: g.key.c_comment)])
}
}
}
}
}
for i6 in 0..((len(result) - 1 - 1)) + 1 {
for j7 in i6 + 1..((len(result) - 1)) + 1 {
if sumq1(g) < sumq1(g) {
tmp8 = result[i6]
result[i6] = result[j7]
result[j7] = tmp8
}
}
}
print(result)