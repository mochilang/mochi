// Generated by Mochi v0.10.47 on 2025-07-29 15:20:07 GMT+7
fun inc(c) {
  c.n = (c.n + 1)
}
var c = {"n": 0}
inc(fun(_t) {
    let _c = []
    for v in values(_t) {
      _c.k = v
    }
    return _c
}(c))
fun(v: int) {
    fun encode(x) {
      if type(x) == "table" {
        if len(x) > 0 {
          let parts = ["["]
          for val in x {
            parts[(len(parts) + 1)] = encode(val)
            if i < len(x) {
              parts[(len(parts) + 1)] = ", "
            }
          }
          parts[(len(parts) + 1)] = "]"
          return table.concat(parts)
        } else {
          let keys = []
          for k in x {
            table.insert(keys, k)
          }
          table.sort(keys, fun(a: int, b: int): bool => str(a) < str(b))
          let parts = ["{"]
          for k in keys {
            parts[(len(parts) + 1)] = "'" + str(k) + "': " + encode(x.k)
            if i < len(keys) {
              parts[(len(parts) + 1)] = ", "
            }
          }
          parts[(len(parts) + 1)] = "}"
          return table.concat(parts)
        }
      } else if type(x) == "string" {
        return "'" + x + "'"
      } else {
        return str(x)
      }
    }
    print(encode(v))
}(c.n)
