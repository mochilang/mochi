// Mochi 0.10.48 2025-07-29 18:54:26 GMT+7
/*
# Code generated by Mochi transpiler.
# Version 0.10.36, generated on 2025-07-22 17:46 +0700
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict

@dataclass
class People:
    name: str
    age: int

people = [People("Alice", 30), People("Bob", 15), People("Charlie", 65), People("Diana", 45)]
@dataclass
class Adult:
    name: str
    age: int
    is_senior: bool

adults = [Adult(person.name, person.age, person.age >= 60) for person in people if person.age >= 18]
print("--- Adults ---")
for person in adults:
    print(person.name, "is", person.age, (" (senior)" if person.is_senior else ""))

*/
type People {
  name: string
  age: int
}
var people: list<People> = [People{name: "Alice", age: 30}, People{name: "Bob", age: 15}, People{name: "Charlie", age: 65}, People{name: "Diana", age: 45}]
type Adult {
  name: string
  age: int
  is_senior: bool
}
var adults = from person in people where person.age >= 18 select Adult{name: person.name, age: person.age, is_senior: person.age >= 60}
print("--- Adults ---")
for person in adults {
  print(person.name, "is", person.age, if person.is_senior then " (senior)" else "")
}
