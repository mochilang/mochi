// Mochi 0.10.48 2025-07-30 00:58:38 GMT+7
/*
# Code generated by Mochi transpiler.
# Version 0.10.36, generated on 2025-07-22 17:46 +0700
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict

@dataclass
class Product:
    name: str
    price: int

products = [Product("Laptop", 1500), Product("Smartphone", 900), Product("Tablet", 600), Product("Monitor", 300), Product("Keyboard", 100), Product("Mouse", 50), Product("Headphones", 200)]
expensive = [p for p in sorted([p for p in products], key=lambda p: p.price, reverse=True)][1:1 + 3]
print("--- Top products (excluding most expensive) ---")
for item in expensive:
    print(item.name, "costs $", item.price)

*/
type Product {
  name: string
  price: int
}
var products: list<Product> = [Product{name: "Laptop", price: 1500}, Product{name: "Smartphone", price: 900}, Product{name: "Tablet", price: 600}, Product{name: "Monitor", price: 300}, Product{name: "Keyboard", price: 100}, Product{name: "Mouse", price: 50}, Product{name: "Headphones", price: 200}]
var expensive = from p in from p in products select p sort by -p.price skip 1 take 3 select p
print("--- Top products (excluding most expensive) ---")
for item in expensive {
  print(item.name, "costs $", item.price)
}
