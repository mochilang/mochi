var customers = [{"id": 1, "name": "Alice"} as Customer, {"id": 2, "name": "Bob"} as Customer, {"id": 3, "name": "Charlie"} as Customer]
type Customer {
  id: int
  name: string
}
var orders = [{"id": 100, "customerId": 1, "total": 250} as Order, {"id": 101, "customerId": 2, "total": 125} as Order, {"id": 102, "customerId": 1, "total": 300} as Order]
type Order {
  id: int
  customerId: int
  total: int
}
type Result {
  orderId: int
  orderCustomerId: int
  pairedCustomerName: string
  orderTotal: int
}
let result = from o in orders
               from c in customers
               select {"orderId": o.id, "orderCustomerId": o.customerId, "pairedCustomerName": c.name, "orderTotal": o.total} as Result
print("--- Cross Join: All order-customer pairs ---")
for entry in result {
  print("Order", entry.orderId, "(customerId:", entry.orderCustomerId, ", total: $", entry.orderTotal, ") paired with", entry.pairedCustomerName)
}
