(program
  (let customers
    (list
      (map
        (entry (selector id) (int 1))
        (entry (selector name) (string Alice))
      )
      (map
        (entry (selector id) (int 2))
        (entry (selector name) (string Bob))
      )
    )
  )
  (let orders
    (list
      (map
        (entry (selector id) (int 100))
        (entry (selector customerId) (int 1))
      )
      (map
        (entry (selector id) (int 101))
        (entry (selector customerId) (int 1))
      )
      (map
        (entry (selector id) (int 102))
        (entry (selector customerId) (int 2))
      )
    )
  )
  (let stats
    (query o
      (source (selector orders))
      (join c
        (source (selector customers))
        (on
          (binary ==
            (selector customerId (selector o))
            (selector id (selector c))
          )
        )
      )
      (group_by
        (selector name (selector c))
        (into g)
      )
      (select
        (map
          (entry
            (selector name)
            (selector key (selector g))
          )
          (entry
            (selector count)
            (call count (selector g))
          )
        )
      )
    )
  )
  (call print (string "--- Orders per customer ---"))
  (for s
    (in (selector stats))
    (block
      (call print
        (selector name (selector s))
        (string "orders:")
        (selector count (selector s))
      )
    )
  )
)
