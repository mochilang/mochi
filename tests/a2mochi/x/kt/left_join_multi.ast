(program
  (let customers
    (list
      (map
        (entry (selector id) (int 1))
        (entry (selector name) (string Alice))
      )
      (map
        (entry (selector id) (int 2))
        (entry (selector name) (string Bob))
      )
    )
  )
  (let orders
    (list
      (map
        (entry (selector id) (int 100))
        (entry (selector customerId) (int 1))
      )
      (map
        (entry (selector id) (int 101))
        (entry (selector customerId) (int 2))
      )
    )
  )
  (let items
    (list
      (map
        (entry (selector orderId) (int 100))
        (entry (selector sku) (string a))
      )
    )
  )
  (let result
    (query o
      (source (selector orders))
      (join c
        (source (selector customers))
        (on
          (binary ==
            (selector customerId (selector o))
            (selector id (selector c))
          )
        )
      )
      (left_join i
        (source (selector items))
        (on
          (binary ==
            (selector id (selector o))
            (selector orderId (selector i))
          )
        )
      )
      (select
        (map
          (entry
            (selector orderId)
            (selector id (selector o))
          )
          (entry
            (selector name)
            (selector name (selector c))
          )
          (entry (selector item) (selector i))
        )
      )
    )
  )
  (call print (string "--- Left Join Multi ---"))
  (for r
    (in (selector result))
    (block
      (call print
        (selector orderId (selector r))
        (selector name (selector r))
        (selector item (selector r))
      )
    )
  )
)
