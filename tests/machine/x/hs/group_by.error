
tests/machine/x/hs/group_by.hs:181:110: error:
    • No instance for (Integral Double) arising from a use of ‘avg’
    • In the first argument of ‘VDouble’, namely
        ‘(avg
            [fromMaybe (error "missing") (Map.lookup "age" (p)) | p <- g])’
      In the expression:
        VDouble
          (avg [fromMaybe (error "missing") (Map.lookup "age" (p)) | p <- g])
      In the expression:
        ("avg_age", 
         VDouble
           (avg
              [fromMaybe (error "missing") (Map.lookup "age" (p)) | p <- g]))
    |
181 | stats = [Map.fromList [("city", VString (key (g))), ("count", VInt (length (items g))), ("avg_age", VDouble (avg [fromMaybe (error "missing") (Map.lookup "age" (p)) | p <- g]))] | g <- _group_by people (\person -> fromMaybe (error "missing") (Map.lookup "city" person)), let g = g]
    |                                                                                                              ^^^

tests/machine/x/hs/group_by.hs:181:186: error:
    • No instance for (Ord AnyValue) arising from a use of ‘_group_by’
    • In the expression:
        _group_by
          people
          (\ person
             -> fromMaybe (error "missing") (Map.lookup "city" person))
      In a stmt of a list comprehension:
        g <- _group_by
               people
               (\ person
                  -> fromMaybe (error "missing") (Map.lookup "city" person))
      In the expression:
        [Map.fromList
           [("city", VString (key (g))), ("count", VInt (length (items g))),
            ("avg_age", 
             VDouble
               (avg
                  [fromMaybe (error "missing") (Map.lookup "age" (p)) | p <- g]))] |
           g <- _group_by
                  people
                  (\ person
                     -> fromMaybe (error "missing") (Map.lookup "city" person)),
           let g = g]
    |
181 | stats = [Map.fromList [("city", VString (key (g))), ("count", VInt (length (items g))), ("avg_age", VDouble (avg [fromMaybe (error "missing") (Map.lookup "age" (p)) | p <- g]))] | g <- _group_by people (\person -> fromMaybe (error "missing") (Map.lookup "city" person)), let g = g]
    |                                                                                                                                                                                          ^^^^^^^^^
