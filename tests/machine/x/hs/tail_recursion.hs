-- Code generated by Mochi compiler; DO NOT EDIT.
{-# LANGUAGE DeriveGeneric #-}

module Main where

import Data.List (intercalate, isPrefixOf)
import qualified Data.List as List
import qualified Data.Map as Map
import Data.Maybe (fromMaybe)
import Data.Time.Clock.POSIX (getPOSIXTime)

sum_rec :: Int -> Int -> Int
sum_rec n acc = fromMaybe (0) $
  case if (_asInt (n) == 0) then Just (acc) else Nothing of Just v -> Just v; Nothing -> Just (sum_rec (_asInt (n) - 1) (acc + n))

main :: IO ()
main = do
  print (sum_rec 10 0)
