-- Code generated by Mochi compiler; DO NOT EDIT.
{-# LANGUAGE DeriveGeneric #-}

module Main where

import Data.List (intercalate, isInfixOf, isPrefixOf)
import qualified Data.List as List
import qualified Data.Map as Map
import Data.Maybe (fromMaybe)
import Data.Time.Clock.POSIX (getPOSIXTime)

classify :: Int -> String
classify n = (case n of 0 -> "zero"; 1 -> "one"; _ -> "many")

x = 2

label = (case x of 1 -> "one"; 2 -> "two"; 3 -> "three"; _ -> "unknown")

day = "sun"

mood = (case day of "mon" -> "tired"; "fri" -> "excited"; "sun" -> "relaxed"; _ -> "normal")

ok = True

status = (case ok of True -> "confirmed"; False -> "denied")

main :: IO ()
main = do
  putStrLn (label)
  putStrLn (mood)
  putStrLn (status)
  putStrLn (classify 0)
  putStrLn (classify 5)
