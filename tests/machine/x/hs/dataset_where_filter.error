
/workspace/mochi/tests/machine/x/hs/dataset_where_filter.hs:181:90: error:
    • Couldn't match type ‘AnyValue’ with ‘[Char]’
      Expected: Map.Map String String
        Actual: Map.Map String AnyValue
    • In the second argument of ‘Map.lookup’, namely ‘person’
      In the second argument of ‘fromMaybe’, namely
        ‘(Map.lookup "name" person)’
      In the first argument of ‘VString’, namely
        ‘(fromMaybe (error "missing") (Map.lookup "name" person))’
    |
181 | adults = [Map.fromList [("name", VString (fromMaybe (error "missing") (Map.lookup "name" person))), ("age", VString (fromMaybe (error "missing") (Map.lookup "age" person))), ("is_senior", VBool ((fromMaybe (error "missing") (Map.lookup "age" person) >= 60)))] | person <- filter (\person -> (fromMaybe (error "missing") (Map.lookup "age" person) >= 18)) people]
    |                                                                                          ^^^^^^

/workspace/mochi/tests/machine/x/hs/dataset_where_filter.hs:181:164: error:
    • Couldn't match type ‘AnyValue’ with ‘[Char]’
      Expected: Map.Map String String
        Actual: Map.Map String AnyValue
    • In the second argument of ‘Map.lookup’, namely ‘person’
      In the second argument of ‘fromMaybe’, namely
        ‘(Map.lookup "age" person)’
      In the first argument of ‘VString’, namely
        ‘(fromMaybe (error "missing") (Map.lookup "age" person))’
    |
181 | adults = [Map.fromList [("name", VString (fromMaybe (error "missing") (Map.lookup "name" person))), ("age", VString (fromMaybe (error "missing") (Map.lookup "age" person))), ("is_senior", VBool ((fromMaybe (error "missing") (Map.lookup "age" person) >= 60)))] | person <- filter (\person -> (fromMaybe (error "missing") (Map.lookup "age" person) >= 18)) people]
    |                                                                                                                                                                    ^^^^^^

/workspace/mochi/tests/machine/x/hs/dataset_where_filter.hs:186:40: error:
    • Couldn't match expected type: t0 -> Maybe AnyValue -> String
                  with actual type: [Char]
    • The function ‘show’ is applied to three value arguments,
        but its type ‘(a0 -> Maybe a0 -> a0) -> [Char]’ has only one
      In the expression:
        show fromMaybe (error "missing") (Map.lookup "name" person)
      In the first argument of ‘unwords’, namely
        ‘[show fromMaybe (error "missing") (Map.lookup "name" person),
          "is", show fromMaybe (error "missing") (Map.lookup "age" person),
          0]’
    |
186 |   mapM_ (\person -> putStrLn (unwords [show fromMaybe (error "missing") (Map.lookup "name" person), "is", show fromMaybe (error "missing") (Map.lookup "age" person), 0])) adults
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/workspace/mochi/tests/machine/x/hs/dataset_where_filter.hs:186:107: error:
    • Couldn't match expected type: t1 -> Maybe AnyValue -> String
                  with actual type: [Char]
    • The function ‘show’ is applied to three value arguments,
        but its type ‘(a1 -> Maybe a1 -> a1) -> [Char]’ has only one
      In the expression:
        show fromMaybe (error "missing") (Map.lookup "age" person)
      In the first argument of ‘unwords’, namely
        ‘[show fromMaybe (error "missing") (Map.lookup "name" person),
          "is", show fromMaybe (error "missing") (Map.lookup "age" person),
          0]’
    |
186 |   mapM_ (\person -> putStrLn (unwords [show fromMaybe (error "missing") (Map.lookup "name" person), "is", show fromMaybe (error "missing") (Map.lookup "age" person), 0])) adults
    |                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Context around line 181:
  179| people = [Map.fromList [("name", VString ("Alice")), ("age", VInt (30))], Map.fromList [("name", VString ("Bob")), ("age", VInt (15))], Map.fromList [("name", VString ("Charlie")), ("age", VInt (65))], Map.fromList [("name", VString ("Diana")), ("age", VInt (45))]]
  180| 
  181| adults = [Map.fromList [("name", VString (fromMaybe (error "missing") (Map.lookup "name" person))), ("age", VString (fromMaybe (error "missing") (Map.lookup "age" person))), ("is_senior", VBool ((fromMaybe (error "missing") (Map.lookup "age" person) >= 60)))] | person <- filter (\person -> (fromMaybe (error "missing") (Map.lookup "age" person) >= 18)) people]
  182| 
  183| main :: IO ()
