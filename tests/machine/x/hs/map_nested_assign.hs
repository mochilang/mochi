-- Code generated by Mochi compiler; DO NOT EDIT.
{-# LANGUAGE DeriveGeneric #-}

module Main where

import Data.List (intercalate, isInfixOf, isPrefixOf)
import qualified Data.List as List
import qualified Data.Map as Map
import Data.Maybe (fromMaybe)
import Data.Time.Clock.POSIX (getPOSIXTime)

_data = Map.fromList [("outer", Map.fromList [("inner", 1)])]

main :: IO ()
main = do
  let _data = Map.adjust (\m -> Map.insert "inner" 2 m) "outer" _data
  print (fromMaybe (error "missing") (Map.lookup "inner" fromMaybe (error "missing") (Map.lookup "outer" _data)))

