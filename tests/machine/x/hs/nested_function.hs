-- Code generated by Mochi compiler; DO NOT EDIT.
{-# LANGUAGE DeriveGeneric #-}

module Main where

import Data.List (intercalate, isInfixOf, isPrefixOf)
import qualified Data.List as List
import qualified Data.Map as Map
import Data.Maybe (fromMaybe)
import Data.Time.Clock.POSIX (getPOSIXTime)

outer :: Int -> Int
outer x =
  fromMaybe (0) $
    (let inner = (\y -> fromMaybe ((x + y)) $ Nothing) in Just (inner 5))

main :: IO ()
main = do
  print (outer 3)
