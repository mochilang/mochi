(define (twoSum nums target)
  (call/cc (lambda (return)
    (define n '())
    (set! n (length nums))
    (let loop ((i 0))
      (if (< i n)
        (begin
          (let loop ((j (+ i 1)))
            (if (< j n)
              (begin
                (when (equal? (+ (list-ref nums i) (list-ref nums j)) target)
                  (return (list i j))
                )
                (loop (+ j 1))
              )
            '()
          )
        )
        (loop (+ i 1))
      )
    '()
  )
)
(return (list (- 1) (- 1)))
))
)

(define result (twoSum (list 2 7 11 15) 9))
(begin (display (list-ref result 0)) (newline))
(begin (display (list-ref result 1)) (newline))
