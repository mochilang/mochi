(define (map-get m k)
    (let ((p (assoc k m)))
        (if p (cdr p) '()))
)
(define (map-set m k v)
    (let ((p (assoc k m)))
        (if p
            (begin (set-cdr! p v) m)
            (cons (cons k v) m)))
)

(define r 3.0)
(define area (* (map-get math 'pi) ((map-get math 'pow) r 2.0)))
(define root ((map-get math 'sqrt) 49.0))
(define sin45 ((map-get math 'sin) (/ (map-get math 'pi) 4.0)))
(define log_e ((map-get math 'log) (map-get math 'e)))
(begin (display "Circle area with r =") (display " ") (display r) (display " ") (display "=>") (display " ") (display area) (newline))
(begin (display "Square root of 49:") (display " ") (display root) (newline))
(begin (display "sin(Ï€/4):") (display " ") (display sin45) (newline))
(begin (display "log(e):") (display " ") (display log_e) (newline))
