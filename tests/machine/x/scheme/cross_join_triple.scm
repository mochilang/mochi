; Generated by Mochi compiler v0.10.27 on 2025-07-17T08:55:59Z
(define (map-get m k)
    (let ((p (assoc k m)))
        (if p (cdr p) '()))
)
(define (map-set m k v)
    (let ((p (assoc k m)))
        (if p
            (begin (set-cdr! p v) m)
            (cons (cons k v) m)))
)

(define bools '())
(define combos '())
(define letters '())
(define nums '())
(set! nums (list 1 2))
(set! letters (list "A" "B"))
(set! bools (list #t #f))
(set! combos (let ((_res '()))
  (for-each (lambda (n)
    (for-each (lambda (l)
      (for-each (lambda (b)
        (set! _res (append _res (list (list (cons 'n n) (cons 'l l) (cons 'b b)))))
      ) (if (string? bools) (string->list bools) bools))
    ) (if (string? letters) (string->list letters) letters))
  ) (if (string? nums) (string->list nums) nums))
  _res))
(begin (display "--- Cross Join of three lists ---") (newline))
(let loop ((c_idx 0))
  (if (< c_idx (length combos))
    (begin
      (let ((c (list-ref combos c_idx)))
        (begin (display (map-get c 'n)) (display " ") (display (map-get c 'l)) (display " ") (display (map-get c 'b)) (newline))
      )
      (loop (+ c_idx 1))
    )
  '()
  )
)
