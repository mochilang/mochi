; Generated by Mochi compiler v0.10.27 on 2025-07-17T18:03:55Z
(define (_union_all a b)
  (append a b))

(define (_union a b)
  (let ((res a))
    (for-each (lambda (it)
                (when (not (member it res))
                  (set! res (append res (list it)))))
              b)
    res))

(define (_except a b)
  (let ((res '()))
    (for-each (lambda (it)
                (when (not (member it b))
                  (set! res (append res (list it)))))
              a)
    res))

(define (_intersect a b)
  (let ((res '()))
    (for-each (lambda (it)
                (when (and (member it b) (not (member it res)))
                  (set! res (append res (list it)))))
              a)
    res))

(begin (display (_union (list 1 2) (list 2 3))) (newline))
(begin (display (_except (list 1 2 3) (list 2))) (newline))
(begin (display (_intersect (list 1 2 3) (list 2 4))) (newline))
(begin (display (length (_union_all (list 1 2) (list 2 3)))) (newline))
