//go:build ignore

// Generated by Mochi compiler v0.10.26 on 2025-07-16T15:34:05Z

package main

import (
	"fmt"
)

type Customer struct {
	ID   int    `json:"id"`
	Name string `json:"name"`
}

type Order struct {
	ID         int `json:"id"`
	CustomerID int `json:"customerId"`
	Total      int `json:"total"`
}

type Result struct {
	OrderID      int    `json:"orderId"`
	CustomerName string `json:"customerName"`
	Total        int    `json:"total"`
}

type v = Result

func main() {
	customers := []Customer{Customer{
		ID:   1,
		Name: "Alice",
	}, Customer{
		ID:   2,
		Name: "Bob",
	}, Customer{
		ID:   3,
		Name: "Charlie",
	}}
	orders := []Order{
		Order{
			ID:         100,
			CustomerID: 1,
			Total:      250,
		},
		Order{
			ID:         101,
			CustomerID: 2,
			Total:      125,
		},
		Order{
			ID:         102,
			CustomerID: 1,
			Total:      300,
		},
		Order{
			ID:         103,
			CustomerID: 4,
			Total:      80,
		},
	}
	result := func() []Result {
		results := []Result{}
		for _, o := range orders {
			for _, c := range customers {
				if !(o.CustomerID == c.ID) {
					continue
				}
				results = append(results, Result{
					OrderID:      o.ID,
					CustomerName: c.Name,
					Total:        o.Total,
				})
			}
		}
		return results
	}()
	fmt.Println("--- Orders with customer info ---")
	for _, entry := range result {
		fmt.Println("Order", entry.OrderID, "by", entry.CustomerName, "- $", entry.Total)
	}
}
