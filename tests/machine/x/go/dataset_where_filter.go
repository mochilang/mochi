//go:build ignore

// Generated by Mochi compiler v0.10.26 on 2025-07-16T15:33:53Z

package main

import (
	"fmt"
)

type Adult struct {
	Name      string `json:"name"`
	Age       int    `json:"age"`
	Is_senior bool   `json:"is_senior"`
}

type People struct {
	Name string `json:"name"`
	Age  int    `json:"age"`
}

type v map[string]any

func main() {
	people := []People{
		People{
			Name: "Alice",
			Age:  30,
		},
		People{
			Name: "Bob",
			Age:  15,
		},
		People{
			Name: "Charlie",
			Age:  65,
		},
		People{
			Name: "Diana",
			Age:  45,
		},
	}
	adults := func() []Adult {
		results := []Adult{}
		for _, person := range people {
			if person.Age >= 18 {
				if person.Age >= 18 {
					results = append(results, Adult{
						Name:      person.Name,
						Age:       person.Age,
						Is_senior: (person.Age >= 60),
					})
				}
			}
		}
		return results
	}()
	fmt.Println("--- Adults ---")
	for _, person := range adults {
		fmt.Println(person.Name, "is", person.Age, func() string {
			if person.Is_senior {
				return " (senior)"
			} else {
				return ""
			}
		}())
	}
}
