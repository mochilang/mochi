//go:build ignore

// Generated by Mochi compiler v0.10.25 on 2025-07-14T03:02:11Z

package main

import (
	"fmt"
)

func main() {
	customers := []Customer{Customer{
		Id:   1,
		Name: "Alice",
	}, Customer{
		Id:   2,
		Name: "Bob",
	}}
	orders := []Order{Order{
		Id:         100,
		CustomerId: 1,
		Total:      250,
	}, Order{
		Id:         101,
		CustomerId: 3,
		Total:      80,
	}}
	result := func() []Result {
		customerMap := make(map[int]Customer)
		for _, c := range customers {
			customerMap[c.Id] = c
		}
		var result []Result
		for _, o := range orders {
			r := Result{OrderID: o.Id, Total: o.Total}
			if v, ok := customerMap[o.CustomerId]; ok {
				r.Customer = &v
			} else {
				r.Customer = nil
			}
			result = append(result, r)
		}
		return result
	}()
	fmt.Println("--- Left Join ---")
	for _, entry := range result {
		if entry.Customer != nil {
			fmt.Printf("Order %d customer {id: %d, name: %q} total %d\n", entry.OrderId, entry.Customer.ID, entry.Customer.Name, entry.Total)
		} else {
			fmt.Printf("Order %d customer <nil> total %d\n", entry.OrderId, entry.Total)
		}

	}
}
