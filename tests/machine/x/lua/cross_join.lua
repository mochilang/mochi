-- Generated by Mochi compiler v0.10.26 on 2025-07-16T15:40:35Z
function __print(...)
    local n = select('#', ...)
    for ai = 1, n do
        if ai > 1 then io.write(' ') end
        local a = select(ai, ...)
        if type(a) == 'table' and (a[1] ~= nil or #a > 0) then
            for i = 1, #a do
                if i > 1 then io.write(' ') end
                io.write(__str(a[i]))
            end
        else
            io.write(__str(a))
        end
    end
    io.write('\n')
end
function __str(v)
    local t = type(v)
    if t == 'table' then
        if v[1] ~= nil or #v > 0 then
            local parts = {}
            for i=1,#v do parts[#parts+1] = __str(v[i]) end
            return '['..table.concat(parts, ' ')..']'
        else
            local keys = {}
            for k in pairs(v) do keys[#keys+1] = k end
            table.sort(keys, function(a,b) return tostring(a)<tostring(b) end)
            local parts = {}
            for _,k in ipairs(keys) do parts[#parts+1] = __str(k)..':'..__str(v[k]) end
            return '{'..table.concat(parts, ',')..'}'
        end
    else
        if v == nil then return '<nil>' end
        if type(v) == 'number' then
            if math.type and math.type(v) == 'float' then
                return string.format('%.16g', v)
            end
        end
        return tostring(v)
    end
end
customers = {{["id"]=1, ["name"]="Alice"}, {["id"]=2, ["name"]="Bob"}, {["id"]=3, ["name"]="Charlie"}}
orders = {{["id"]=100, ["customerId"]=1, ["total"]=250}, {["id"]=101, ["customerId"]=2, ["total"]=125}, {["id"]=102, ["customerId"]=1, ["total"]=300}}
result = (function()
    local _res = {}
    for _, o in ipairs(orders) do
        for _, c in ipairs(customers) do
            _res[#_res+1] = {["orderId"]=o.id, ["orderCustomerId"]=o.customerId, ["pairedCustomerName"]=c.name, ["orderTotal"]=o.total}
        end
    end
    return _res
end)()
__print("--- Cross Join: All order-customer pairs ---")
for _, entry in ipairs(result) do
    print(__str("Order") .. " " .. __str(entry.orderId) .. " " .. __str("(customerId:") .. " " .. __str(entry.orderCustomerId) .. " " .. __str(", total: $") .. " " .. __str(entry.orderTotal) .. " " .. __str(") paired with") .. " " .. __str(entry.pairedCustomerName))
end
