-- Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
function __add(a, b)
    if type(a) == 'table' and type(b) == 'table' then
        local out = {}
        for i = 1, #a do out[#out+1] = a[i] end
        for i = 1, #b do out[#out+1] = b[i] end
        return out
    elseif type(a) == 'string' or type(b) == 'string' then
        return tostring(a) .. tostring(b)
    else
        return a + b
    end
end
function __index(obj, i)
    if type(obj) == 'string' then
        return __indexString(obj, i)
    elseif type(obj) == 'table' then
        if obj[1] ~= nil or #obj > 0 then
            return obj[(i)+1]
        else
            return obj[i]
        end
    else
        error('cannot index')
    end
end
function __indexString(s, i)
    local len = #s
    if i < 0 then
        i = len + i + 1
    else
        i = i + 1
    end
    if i < 1 or i > len then error('index out of range') end
    return string.sub(s, i, i)
end
function twoSum(nums, target)
    local n = #nums;
    for i = 0, (n)-1 do
        for j = __add(i, 1), (n)-1 do
            if (__add(__index(nums, i), __index(nums, j)) == target) then
                return {i, j}
            end
        end
    end
    return {-1, -1}
end

result = twoSum({2, 7, 11, 15}, 9);
print(tostring(result[(0)+1]));
print(tostring(result[(1)+1]));
