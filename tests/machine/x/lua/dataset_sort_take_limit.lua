-- Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
function __to_string(v)
    local t = type(v)
    if t == 'string' then return v end
    if t == 'number' or t == 'boolean' then return tostring(v) end
    if t ~= 'table' then return tostring(v) end
    if v[1] ~= nil or #v > 0 then
        local parts = {}
        for i=1,#v do parts[#parts+1] = __to_string(v[i]) end
        return '['..table.concat(parts, ', ')..']'
    end
    local keys = {}
    for k in pairs(v) do if k ~= '__name' then keys[#keys+1]=k end end
    table.sort(keys, function(a,b) return tostring(a)<tostring(b) end)
    local parts = {}
    for _,k in ipairs(keys) do parts[#parts+1] = tostring(k)..': '..__to_string(v[k]) end
    local body = table.concat(parts, ', ')
    if v.__name then return v.__name..' {'..body..'}' end
    return '{'..body..'}'
end
products = {{["name"]="Laptop", ["price"]=1500}, {["name"]="Smartphone", ["price"]=900}, {["name"]="Tablet", ["price"]=600}, {["name"]="Monitor", ["price"]=300}, {["name"]="Keyboard", ["price"]=100}, {["name"]="Mouse", ["price"]=50}, {["name"]="Headphones", ["price"]=200}};
expensive = (function()
    local _res = {}
    for _, p in ipairs(products) do
        _res[#_res+1] = {__key = -p.price, __val = p}
    end
    local items = _res
    table.sort(items, function(a,b)
        local ak, bk = a.__key, b.__key
        if type(ak)=='number' and type(bk)=='number' then return ak < bk end
        if type(ak)=='string' and type(bk)=='string' then return ak < bk end
        return tostring(ak) < tostring(bk)
    end)
    local tmp = {}
    for _, it in ipairs(items) do tmp[#tmp+1] = it.__val end
    items = tmp
    local skip = 1
    if skip < #items then
        for i=1,skip do table.remove(items,1) end
    else
        items = {}
    end
    local take = 3
    if take < #items then
        for i=#items, take+1, -1 do table.remove(items) end
    end
    _res = items
    return _res
end)();
print("--- Top products (excluding most expensive) ---");
for _, item in ipairs(expensive) do
    print(table.concat({__to_string(item.name), "costs $", __to_string(item.price)}, ' '));
end
