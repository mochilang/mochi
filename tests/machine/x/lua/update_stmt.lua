-- Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
function __run_tests(tests)
    local function format_duration(d)
        if d < 1e-6 then return string.format('%dns', math.floor(d*1e9)) end
        if d < 1e-3 then return string.format('%.1fÂµs', d*1e6) end
        if d < 1 then return string.format('%.1fms', d*1e3) end
        return string.format('%.2fs', d)
    end
    local failures = 0
    for _, t in ipairs(tests) do
        io.write('   test ' .. t.name .. ' ...')
        local start = os.clock()
        local ok, err = pcall(t.fn)
        local dur = os.clock() - start
        if ok then
            io.write(' ok (' .. format_duration(dur) .. ')\n')
        else
            io.write(' fail ' .. tostring(err) .. ' (' .. format_duration(dur) .. ')\n')
            failures = failures + 1
        end
    end
    if failures > 0 then
        io.write('\n[FAIL] ' .. failures .. ' test(s) failed.\n')
    end
end
Person = {}
Person.__index = Person
function Person.new(o)
    o = o or {}
    setmetatable(o, Person)
    return o
end

function test_update_adult_status()
    if not ((people == {{name="Alice", age=17, status="minor"}, {name="Bob", age=26, status="adult"}, {name="Charlie", age=19, status="adult"}, {name="Diana", age=16, status="minor"}})) then error('expect failed') end
end

people = {{name="Alice", age=17, status="minor"}, {name="Bob", age=25, status="unknown"}, {name="Charlie", age=18, status="unknown"}, {name="Diana", age=16, status="minor"}};
for _i0 = 1, #people do
    local _it0 = people[_i0]
    local name = _it0["name"]
    local age = _it0["age"]
    local status = _it0["status"]
    if (age >= 18) then
        _it0["status"] = "adult"
        _it0["age"] = (age + 1)
    end
    people[_i0] = _it0
end
print("ok");
local __tests = {
    {name="update adult status", fn=test_update_adult_status},
}
