-- Generated by Mochi compiler v0.10.27 on 2006-01-02T15:04:05Z
function __eq(a, b)
    if type(a) ~= type(b) then return false end
    if type(a) == 'number' then return math.abs(a-b) < 1e-9 end
    if type(a) ~= 'table' then return a == b end
    if (a[1] ~= nil or #a > 0) and (b[1] ~= nil or #b > 0) then
        if #a ~= #b then return false end
        for i = 1, #a do if not __eq(a[i], b[i]) then return false end end
        return true
    end
    for k, v in pairs(a) do if not __eq(v, b[k]) then return false end end
    for k, _ in pairs(b) do if a[k] == nil then return false end end
    return true
end
function __print(...)
    local n = select('#', ...)
    if n == 1 then
        local v = ...
        if type(v) == 'table' and (v[1] ~= nil or #v > 0) then
            local parts = {}
            for i=1,#v do parts[#parts+1] = __str(v[i]) end
            print(table.concat(parts, ' '))
            return
        end
    end
    local parts = {}
    for i=1,n do parts[#parts+1] = __str(select(i, ...)) end
    local out = table.concat(parts, ' ')
    out = string.gsub(out, ' +$', '')
    print(out)
end
function __str(v)
    local t = type(v)
    if t == 'table' then
        if v[1] ~= nil or #v > 0 then
            local parts = {}
            for i=1,#v do parts[#parts+1] = __str(v[i]) end
            return '['..table.concat(parts, ' ')..']'
        else
            local keys = {}
            for k in pairs(v) do keys[#keys+1] = k end
            table.sort(keys, function(a,b) return tostring(a)<tostring(b) end)
            local parts = {}
            for _,k in ipairs(keys) do parts[#parts+1] = __str(k)..':'..__str(v[k]) end
            return '{'..table.concat(parts, ',')..'}'
        end
    else
        if t == 'boolean' then return (v and 'True' or 'False') end
        return tostring(v)
    end
end
a = (10 - 3)
b = (2 + 2)
__print(a)
__print(__eq(a, 7))
__print((b < 5))
