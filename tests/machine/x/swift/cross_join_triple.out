/workspace/mochi/tests/machine/x/swift/cross_join_triple.swift:7:11: warning: expression implicitly coerced from 'Any?' to 'Any'
5 | print("--- Cross Join of three lists ---")
6 | for c in combos {
7 |     print(c["n"], c["l"], c["b"])
  |           ||- note: provide a default value to avoid this warning
  |           ||- note: force-unwrap the value to avoid this warning
  |           |`- note: explicitly cast to 'Any' with 'as Any' to silence this warning
  |           `- warning: expression implicitly coerced from 'Any?' to 'Any'
8 | }
9 | 

/workspace/mochi/tests/machine/x/swift/cross_join_triple.swift:7:19: warning: expression implicitly coerced from 'Any?' to 'Any'
5 | print("--- Cross Join of three lists ---")
6 | for c in combos {
7 |     print(c["n"], c["l"], c["b"])
  |                   ||- note: provide a default value to avoid this warning
  |                   ||- note: force-unwrap the value to avoid this warning
  |                   |`- note: explicitly cast to 'Any' with 'as Any' to silence this warning
  |                   `- warning: expression implicitly coerced from 'Any?' to 'Any'
8 | }
9 | 

/workspace/mochi/tests/machine/x/swift/cross_join_triple.swift:7:27: warning: expression implicitly coerced from 'Any?' to 'Any'
5 | print("--- Cross Join of three lists ---")
6 | for c in combos {
7 |     print(c["n"], c["l"], c["b"])
  |                           ||- note: provide a default value to avoid this warning
  |                           ||- note: force-unwrap the value to avoid this warning
  |                           |`- note: explicitly cast to 'Any' with 'as Any' to silence this warning
  |                           `- warning: expression implicitly coerced from 'Any?' to 'Any'
8 | }
9 | 
--- Cross Join of three lists ---
Optional(1) Optional("A") Optional(true)
Optional(1) Optional("A") Optional(false)
Optional(1) Optional("B") Optional(true)
Optional(1) Optional("B") Optional(false)
Optional(2) Optional("A") Optional(true)
Optional(2) Optional("A") Optional(false)
Optional(2) Optional("B") Optional(true)
Optional(2) Optional("B") Optional(false)
