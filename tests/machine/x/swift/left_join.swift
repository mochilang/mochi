// Generated by Mochi compiler v0.10.27 on 2006-01-02T15:04:05Z
struct Customer: Equatable {
    var id: Int
    var name: String
}

struct OJoin {
    var customer: Customer?
    var orderId: Int?
    var total: Int?
}

struct Order: Equatable {
    var customerId: Int
    var id: Int
    var total: Int
}

struct Result: Equatable {
    var customer: Customer
    var orderId: Int
    var total: Int
}

var customers = [Customer(id: 1, name: "Alice"), Customer(id: 2, name: "Bob")]
var orders = [Order(customerId: 1, id: 100, total: 250), Order(customerId: 3, id: 101, total: 80)]
var result = ({
	var _res: [OJoin] = []
	let _src = orders
	let _join = customers
	for o in _src {
		var _m = false
		for c in _join {
			if !(o.customerId == c.id) { continue }
			_m = true
			_res.append(OJoin(customer: c, orderId: o.id, total: o.total))
		}
		if !_m {
			let c: Customer? = nil
			_res.append(OJoin(customer: c, orderId: o.id, total: o.total))
		}
	}
	return _res
}())
print("--- Left Join ---")
for entry in result {
    print("Order", entry.orderId, "customer", entry.customer, "total", entry.total)
}
