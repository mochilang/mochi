// Generated by Mochi TypeScript compiler

function twoSum(nums: number[], target: number): number[] {
  let n = nums.length;
  for (let i: number = 0; i < n; i++) {
    for (let j: number = i + 1; j < n; j++) {
      if (((nums[i] + nums[j]) == target)) {
        return [
          i,
          j,
        ];
      }
    }
  }
  return [
    -1,
    -1,
  ];
}

let result: number[];

function main(): void {
  result = twoSum([
    2,
    7,
    11,
    15,
  ], 9);
  console.log(_fmt(result[0]));
  console.log(_fmt(result[1]));
}
function _fmt(v: any): string {
  if (Array.isArray(v)) return v.map(_fmt).join(" ");
  if (v && typeof v === "object") {
    const keys = Object.keys(v).sort();
    const parts = keys.map((k) => k + ":" + _fmt(v[k]));
    return "map[" + parts.join(" ") + "]";
  }
  return String(v);
}

main();
