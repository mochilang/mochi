// Generated by Mochi compiler v0.10.27 on 1970-01-01T00:00:00Z
// Source: /workspace/mochi/tests/vm/valid/right_join.mochi

let customers: Record<string, any>[];
let orders: { [key: string]: number }[];
let result: Record<string, any>[];

function main(): void {
  customers = [
    {
      "id": 1,
      "name": "Alice",
    },
    {
      "id": 2,
      "name": "Bob",
    },
    {
      "id": 3,
      "name": "Charlie",
    },
    {
      "id": 4,
      "name": "Diana",
    },
  ];
  orders = [
    {
      "id": 100,
      "customerId": 1,
      "total": 250,
    },
    {
      "id": 101,
      "customerId": 2,
      "total": 125,
    },
    {
      "id": 102,
      "customerId": 1,
      "total": 300,
    },
  ];
  result = (() => {
    const _src = customers;
    const _join = orders;
    const _res = [];
    for (const o of _join) {
      let _m = false;
      for (const c of _src) {
        if (!(o.customerId == c.id)) continue;
        _m = true;
        _res.push({
          "customerName": c.name,
          "order": o,
        });
      }
      if (!_m) {
        const c = null;
        _res.push({
          "customerName": c.name,
          "order": o,
        });
      }
    }
    return _res;
  })();
  _print("--- Right Join using syntax ---");
  for (const entry of result) {
    if (entry.order) {
      _print(
        "Customer",
        entry.customerName,
        "has order",
        entry.order.id,
        "- $",
        entry.order.total,
      );
    } else {
      _print("Customer", entry.customerName, "has no orders");
    }
  }
}
function _print(...args: unknown[]): void {
  const out = args.map((a) => {
    if (Array.isArray(a)) return a.join(" ");
    if (typeof a === "boolean") return a ? "1" : "0";
    return String(a);
  }).join(" ").trimEnd();
  console.log(out);
}

main();
