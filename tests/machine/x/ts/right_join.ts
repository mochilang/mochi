// Generated by Mochi TypeScript compiler

let customers: any[];
let orders: any[];
let result: any[];

function main(): void {
  customers = [
    {
      "id": 1,
      "name": "Alice",
    },
    {
      "id": 2,
      "name": "Bob",
    },
    {
      "id": 3,
      "name": "Charlie",
    },
    {
      "id": 4,
      "name": "Diana",
    },
  ];
  orders = [
    {
      "id": 100,
      "customerId": 1,
      "total": 250,
    },
    {
      "id": 101,
      "customerId": 2,
      "total": 125,
    },
    {
      "id": 102,
      "customerId": 1,
      "total": 300,
    },
  ];
  result = (() => {
    const _src = customers;
    const _join = orders;
    const _res = [];
    for (const o of _join) {
      let _m = false;
      for (const c of _src) {
        if (!(o.customerId == c.id)) continue;
        _m = true;
        _res.push({
          "customerName": c.name,
          "order": o,
        });
      }
      if (!_m) {
        const c = null;
        _res.push({
          "customerName": c.name,
          "order": o,
        });
      }
    }
    return _res;
  })();
  console.log("--- Right Join using syntax ---");
  for (const entry of result) {
    if (entry.order) {
      console.log(
        "Customer",
        entry.customerName,
        "has order",
        entry.order.id,
        "- $",
        entry.order.total,
      );
    } else {
      console.log("Customer", entry.customerName, "has no orders");
    }
  }
}
main();
