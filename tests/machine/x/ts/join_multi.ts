// Generated by Mochi compiler v0.10.27 on 1970-01-01T00:00:00Z
// Source: /workspace/mochi/tests/vm/valid/join_multi.mochi

let customers: Record<string, any>[];
let items: Record<string, any>[];
let orders: { [key: string]: number }[];
let result: Record<string, any>[];

function main(): void {
  customers = [
    {
      "id": 1,
      "name": "Alice",
    },
    {
      "id": 2,
      "name": "Bob",
    },
  ];
  orders = [
    {
      "id": 100,
      "customerId": 1,
    },
    {
      "id": 101,
      "customerId": 2,
    },
  ];
  items = [
    {
      "orderId": 100,
      "sku": "a",
    },
    {
      "orderId": 101,
      "sku": "b",
    },
  ];
  result = (() => {
    const _src = orders;
    const _res = [];
    for (const o of _src) {
      for (const c of customers) {
        if (!(o.customerId == c.id)) continue;
        for (const i of items) {
          if (!(o.id == i.orderId)) continue;
          _res.push({
            "name": c.name,
            "sku": i.sku,
          });
        }
      }
    }
    return _res;
  })();
  _print("--- Multi Join ---");
  for (const r of result) {
    _print(r.name, "bought item", r.sku);
  }
}
function _print(...args: unknown[]): void {
  const out = args.map((a) => {
    if (Array.isArray(a)) return a.join(" ");
    if (typeof a === "boolean") return a ? "1" : "0";
    return String(a);
  }).join(" ").trimEnd();
  console.log(out);
}

main();
