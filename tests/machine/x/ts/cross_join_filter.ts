// Generated by Mochi TypeScript compiler

let letters: string[];
let nums: number[];
let pairs: { [key: string]: any }[];

function main(): void {
  nums = [
    1,
    2,
    3,
  ];
  letters = [
    "A",
    "B",
  ];
  pairs = (() => {
    const _src = nums;
    const _res = [];
    for (const n of _src) {
      for (const l of letters) {
        if (!((n % 2) == 0)) continue;
        _res.push({
          "n": n,
          "l": l,
        });
      }
    }
    return _res;
  })();
  console.log(_fmt("--- Even pairs ---"));
  for (const p of pairs) {
    console.log(_fmt(p.n), _fmt(p.l));
  }
}
function _fmt(v: any): string {
  if (Array.isArray(v)) return v.map(_fmt).join(" ");
  if (v && typeof v === "object") {
    const keys = Object.keys(v).sort();
    const parts = keys.map((k) => k + ":" + _fmt(v[k]));
    return "map[" + parts.join(" ") + "]";
  }
  return String(v);
}

main();
