// Generated by Mochi TypeScript compiler

let data: any[];
let sorted: { [key: string]: number }[];

function main(): void {
  data = [
    {
      "a": 1,
      "b": 2,
    },
    {
      "a": 1,
      "b": 1,
    },
    {
      "a": 0,
      "b": 5,
    },
  ];
  sorted = (() => {
    const _src = data;
    var _items = [];
    for (const x of _src) {
      _items.push({ x: x });
    }
    let _pairs = _items.map((it) => {
      const x = it;
      return {
        item: it,
        key: {
          "a": x.a,
          "b": x.b,
        },
      };
    });
    _pairs.sort((a, b) => {
      const ak = a.key;
      const bk = b.key;
      if (typeof ak === "number" && typeof bk === "number") return ak - bk;
      if (typeof ak === "string" && typeof bk === "string") {
        return ak < bk
          ? -1
          : (ak > bk ? 1 : 0);
      }
      return String(ak) < String(bk) ? -1 : (String(ak) > String(bk) ? 1 : 0);
    });
    _items = _pairs.map((p) => p.item);
    const _res = [];
    for (const _it of _items) {
      const x = _it.x;
      _res.push(x);
    }
    return _res;
  })();
  console.log(Array.isArray(sorted) ? sorted.join(" ") : sorted);
}
main();
