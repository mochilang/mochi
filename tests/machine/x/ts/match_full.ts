// Generated by Mochi compiler v0.10.26 on 1970-01-01T00:00:00Z
// Source: /workspace/mochi/tests/vm/valid/match_full.mochi

function classify(n: number): string {
  return (() => {
    const _t = n;
    if (_equal(_t, 0)) return "zero";
    if (_equal(_t, 1)) return "one";
    return "many";
  })();
}

let day: string;
let label: string;
let mood: string;
let ok: boolean;
let status: string;
let x: number;

function main(): void {
  x = 2;
  label = (() => {
    const _t = x;
    if (_equal(_t, 1)) return "one";
    if (_equal(_t, 2)) return "two";
    if (_equal(_t, 3)) return "three";
    return "unknown";
  })();
  _print(label);
  day = "sun";
  mood = (() => {
    const _t = day;
    if (_equal(_t, "mon")) return "tired";
    if (_equal(_t, "fri")) return "excited";
    if (_equal(_t, "sun")) return "relaxed";
    return "normal";
  })();
  _print(mood);
  ok = true;
  status = (() => {
    const _t = ok;
    if (_equal(_t, true)) return "confirmed";
    if (_equal(_t, false)) return "denied";
    return undefined;
  })();
  _print(status);
  _print(classify(0));
  _print(classify(5));
}
function _equal(a: any, b: any): boolean {
  if (typeof a === "number" && typeof b === "number") {
    return Math.abs(a - b) < 1e-9;
  }
  if (Array.isArray(a) && Array.isArray(b)) {
    if (a.length !== b.length) return false;
    for (let i = 0; i < a.length; i++) if (!_equal(a[i], b[i])) return false;
    return true;
  }
  if (a && b && typeof a === "object" && typeof b === "object") {
    const ak = Object.keys(a);
    const bk = Object.keys(b);
    if (ak.length !== bk.length) return false;
    for (const k of ak) {
      if (!bk.includes(k) || !_equal((a as any)[k], (b as any)[k])) {
        return false;
      }
    }
    return true;
  }
  return a === b;
}

function _print(...args: any[]): void {
  const out = args.map((a) => {
    if (Array.isArray(a)) return a.join(" ");
    if (a && typeof a === "object") return JSON.stringify(a);
    return String(a);
  }).join(" ").trimEnd();
  console.log(out);
}

main();
