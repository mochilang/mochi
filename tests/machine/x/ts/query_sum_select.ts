// Generated by Mochi TypeScript compiler

let nums: number[];
let result: number[];

function main(): void {
  nums = [
    1,
    2,
    3,
  ];
  result = (() => {
    const _items = nums.filter((n) => (n > 1)).map((n) => n);
    return _sum(_items);
  })();
  console.log(Array.isArray(result) ? result.join(" ") : result);
}
function _sum(v: any): number {
  let list: any[] | null = null;
  if (Array.isArray(v)) list = v;
  else if (v && typeof v === "object") {
    if (Array.isArray((v as any).items)) list = (v as any).items;
    else if (Array.isArray((v as any).Items)) list = (v as any).Items;
  }
  if (!list || list.length === 0) return 0;
  let sum = 0;
  for (const n of list) sum += Number(n);
  return sum;
}

main();
