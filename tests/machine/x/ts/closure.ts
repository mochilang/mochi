// Generated by Mochi TypeScript compiler

function makeAdder(n: number): (p0: number) => number {
  return function (x: number): number {
    return (x + n);
  };
}

let add10: (p0: number) => number;

function main(): void {
  add10 = makeAdder(10);
  console.log(_fmt(add10(7)));
}
function _fmt(v: any): string {
  if (Array.isArray(v)) return v.map(_fmt).join(" ");
  if (v && typeof v === "object") {
    const keys = Object.keys(v).sort();
    const parts = keys.map((k) => k + ":" + _fmt(v[k]));
    return "map[" + parts.join(" ") + "]";
  }
  return String(v);
}

main();
