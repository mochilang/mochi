// Generated by Mochi compiler v0.10.27 on 1970-01-01T00:00:00Z
// Source: /workspace/mochi/tests/vm/valid/tree_sum.mochi

type Leaf = {
  __name: "Leaf";
};

type _Node = {
  __name: "Node";
  left: Tree;
  value: number;
  right: Tree;
};

type Tree = Leaf | _Node;

function sum_tree(t: Tree): number {
  return (() => {
    const _t = t;
    if (_t.__name === "Leaf") return 0;
    if (_t.__name === "Node") {
      return ((
        left,
        value,
        right,
      ) => ((sum_tree(left) + value) + sum_tree(right)))(
        _t.left,
        _t.value,
        _t.right,
      );
    }
    return undefined;
  })();
}

let t: _Node;

function main(): void {
  t = {
    __name: "Node",
    left: { __name: "Leaf" },
    value: 1,
    right: {
      __name: "Node",
      left: { __name: "Leaf" },
      value: 2,
      right: { __name: "Leaf" },
    },
  };
  _print(sum_tree(t));
}
function _print(...args: unknown[]): void {
  const out = args.map((a) => {
    if (Array.isArray(a)) return a.join(" ");
    if (typeof a === "boolean") return a ? "1" : "0";
    return String(a);
  }).join(" ").trimEnd();
  console.log(out);
}

main();
