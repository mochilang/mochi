// Generated by Mochi compiler v0.10.26 on 1970-01-01T00:00:00Z
// Source: /workspace/mochi/tests/vm/valid/inner_join.mochi

let customers: Record<string, any>[];
let orders: { [key: string]: number }[];
let result: { [key: string]: number }[];

function main(): void {
  customers = [
    {
      "id": 1,
      "name": "Alice",
    },
    {
      "id": 2,
      "name": "Bob",
    },
    {
      "id": 3,
      "name": "Charlie",
    },
  ];
  orders = [
    {
      "id": 100,
      "customerId": 1,
      "total": 250,
    },
    {
      "id": 101,
      "customerId": 2,
      "total": 125,
    },
    {
      "id": 102,
      "customerId": 1,
      "total": 300,
    },
    {
      "id": 103,
      "customerId": 4,
      "total": 80,
    },
  ];
  result = (() => {
    const _src = orders;
    const _join = customers;
    const _pairs = _hashJoin(_src, _join, (o) => o.customerId, (c) => c.id);
    const _res = [];
    for (const _p of _pairs) {
      const o = _p[0];
      const c = _p[1];
      _res.push({
        "orderId": o.id,
        "customerName": c.name,
        "total": o.total,
      });
    }
    return _res;
  })();
  _print("--- Orders with customer info ---");
  for (const entry of result) {
    _print(
      "Order",
      entry.orderId,
      "by",
      entry.customerName,
      "- $",
      entry.total,
    );
  }
}
function _hashJoin(
  left: any[],
  right: any[],
  lk: (v: any) => any,
  rk: (v: any) => any,
): any[] {
  const idx = new Map<any, any[]>();
  for (const r of right) {
    const k = rk(r);
    const arr = idx.get(k);
    if (arr) arr.push(r);
    else idx.set(k, [r]);
  }
  const out: any[] = [];
  for (const l of left) {
    const arr = idx.get(lk(l));
    if (!arr) continue;
    for (const r of arr) out.push([l, r]);
  }
  return out;
}

function _print(...args: any[]): void {
  const out = args.map((a) => {
    if (Array.isArray(a)) return a.join(" ");
    if (a && typeof a === "object") return JSON.stringify(a);
    return String(a);
  }).join(" ").trimEnd();
  console.log(out);
}

main();
