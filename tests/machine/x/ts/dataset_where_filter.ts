// Generated by Mochi TypeScript compiler

let adults: { [key: string]: any }[];
let people: _[];

function main(): void {
  people = [
    {
      "name": "Alice",
      "age": 30,
    },
    {
      "name": "Bob",
      "age": 15,
    },
    {
      "name": "Charlie",
      "age": 65,
    },
    {
      "name": "Diana",
      "age": 45,
    },
  ];
  adults = people.filter((person) => (person.age >= 18)).map((person) => ({
    "name": person.name,
    "age": person.age,
    "is_senior": (person.age >= 60),
  }));
  console.log(_fmt("--- Adults ---"));
  for (const person of adults) {
    console.log(
      _fmt(person.name),
      _fmt("is"),
      _fmt(person.age),
      _fmt(person.is_senior ? " (senior)" : ""),
    );
  }
}
function _fmt(v: any): string {
  if (Array.isArray(v)) return v.map(_fmt).join(" ");
  if (v && typeof v === "object") {
    const keys = Object.keys(v).sort();
    const parts = keys.map((k) => k + ":" + _fmt(v[k]));
    return "map[" + parts.join(" ") + "]";
  }
  return String(v);
}

main();
