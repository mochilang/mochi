// Generated by Mochi TypeScript compiler

let customers: any[];
let orders: any[];
let stats: any[];

function main(): void {
  customers = [
    {
      "id": 1,
      "name": "Alice",
    },
    {
      "id": 2,
      "name": "Bob",
    },
  ];
  orders = [
    {
      "id": 100,
      "customerId": 1,
    },
    {
      "id": 101,
      "customerId": 1,
    },
    {
      "id": 102,
      "customerId": 2,
    },
  ];
  stats = (() => {
    const _src = orders;
    const _map = new Map<string, any>();
    const _order: string[] = [];
    var _items = [];
    for (const o of _src) {
      for (const c of customers) {
        if (!(o.customerId == c.id)) continue;
        const _key = c.name;
        const _ks = JSON.stringify(_key);
        let _g = _map.get(_ks);
        if (!_g) {
          _g = { key: _key, items: [] };
          _map.set(_ks, _g);
          _order.push(_ks);
        }
        _g.items.push({ ...o, ...c, o: o, c: c });
      }
    }
    let _groups = _order.map((k) => _map.get(k)!);
    const _res = [];
    for (const g of _groups) {
      _res.push({
        "name": g.key,
        "count": _count(g),
      });
    }
    return _res;
  })();
  console.log("--- Orders per customer ---");
  for (const s of stats) {
    console.log(s.name, "orders:", s.count);
  }
}
function _count(v: any): number {
  if (Array.isArray(v)) return v.length;
  if (v && typeof v === "object") {
    if (Array.isArray((v as any).items)) return (v as any).items.length;
    if (Array.isArray((v as any).Items)) return (v as any).Items.length;
  }
  return 0;
}

main();
