; Generated by Mochi compiler v0.10.27 on 2025-07-17T16:35:41Z
(ns main)

(defn _print [& args]
  (letfn [(pv [v]
            (cond
              (true? v) (print 1)
              (false? v) (print 0)
              (sequential? v) (doseq [[i x] (map-indexed vector v)]
                                (when (> i 0) (print " "))
                                (pv x))
              :else (print v)))]
    (doseq [[i a] (map-indexed vector args)]
      (when (> i 0) (print " "))
      (pv a))
    (println)))
(defn _union_all [a b]
  (vec (concat a b)))
(defn _union [a b]
  (vec (distinct (concat a b))))
(defn _except [a b]
  (vec (remove (set b) a)))
(defn _intersect [a b]
  (vec (distinct (filter (set b) a))))
(defn -main []
  (_print (_union [1 2] [2 3]))
  (_print (_except [1 2 3] [2]))
  (_print (_intersect [1 2 3] [2 4]))
  (_print (count (_union_all [1 2] [2 3])))
)

(-main)
