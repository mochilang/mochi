" Generated by Mochi compiler v0.10.26 on 2025-07-16T16:27:27Z
"
| customers orders result |
customers := {Dictionary from: {'id' -> 1. 'name' -> 'Alice'}. Dictionary from: {'id' -> 2. 'name' -> 'Bob'}. Dictionary from: {'id' -> 3. 'name' -> 'Charlie'}. Dictionary from: {'id' -> 4. 'name' -> 'Diana'}}.
orders := {Dictionary from: {'id' -> 100. 'customerId' -> 1. 'total' -> 250}. Dictionary from: {'id' -> 101. 'customerId' -> 2. 'total' -> 125}. Dictionary from: {'id' -> 102. 'customerId' -> 1. 'total' -> 300}. Dictionary from: {'id' -> 103. 'customerId' -> 5. 'total' -> 80}}.
result := [ | tmp |
  tmp := OrderedCollection new.
  orders do: [:o |
    customers do: [:c |
      ((o.customerId = c.id)) ifTrue: [
        tmp add: Dictionary from: {'order' -> o. 'customer' -> c}.
      ].
    ].
  ].
  tmp
] value.
Transcript show: '--- Outer Join using syntax ---'; cr.
result do: [:row |
  (row.order) ifTrue: [
    (row.customer) ifTrue: [
      Transcript show: 'Order'; show: ' '; show: (row.order.id) printString; show: ' '; show: 'by'; show: ' '; show: (row.customer.name) printString; show: ' '; show: '- $'; show: ' '; show: (row.order.total) printString; cr.
    ] ifFalse: [
      Transcript show: 'Order'; show: ' '; show: (row.order.id) printString; show: ' '; show: 'by'; show: ' '; show: 'Unknown'; show: ' '; show: '- $'; show: ' '; show: (row.order.total) printString; cr.
    ].
  ] ifFalse: [
    Transcript show: 'Customer'; show: ' '; show: (row.customer.name) printString; show: ' '; show: 'has no orders'; cr.
  ].
]
.
