" Generated by Mochi compiler v0.10.26 on 2025-07-16T17:40:19Z
"
| customers orders result |
customers := {Dictionary from: {'id' -> 1. 'name' -> 'Alice'}. Dictionary from: {'id' -> 2. 'name' -> 'Bob'}. Dictionary from: {'id' -> 3. 'name' -> 'Charlie'}. Dictionary from: {'id' -> 4. 'name' -> 'Diana'}}.
orders := {Dictionary from: {'id' -> 100. 'customerId' -> 1. 'total' -> 250}. Dictionary from: {'id' -> 101. 'customerId' -> 2. 'total' -> 125}. Dictionary from: {'id' -> 102. 'customerId' -> 1. 'total' -> 300}}.
result := [ | tmp |
  tmp := OrderedCollection new.
  customers do: [:c |
    orders do: [:o |
      ((o.customerId = c.id)) ifTrue: [
        tmp add: Dictionary from: {'customerName' -> c.name. 'order' -> o}.
      ].
    ].
  ].
  tmp
] value.
Transcript show: '--- Right Join using syntax ---'; cr.
result do: [:entry |
  (entry.order) ifTrue: [
    Transcript show: 'Customer'; show: ' '; show: (entry.customerName) printString; show: ' '; show: 'has order'; show: ' '; show: (entry.order.id) printString; show: ' '; show: '- $'; show: ' '; show: (entry.order.total) printString; cr.
  ] ifFalse: [
    Transcript show: 'Customer'; show: ' '; show: (entry.customerName) printString; show: ' '; show: 'has no orders'; cr.
  ].
]
.
