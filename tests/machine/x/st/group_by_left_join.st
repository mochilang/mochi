" Generated by Mochi compiler v0.10.26 on 2025-07-16T17:40:19Z
"
| customers orders stats |
customers := {Dictionary from: {'id' -> 1. 'name' -> 'Alice'}. Dictionary from: {'id' -> 2. 'name' -> 'Bob'}. Dictionary from: {'id' -> 3. 'name' -> 'Charlie'}}.
orders := {Dictionary from: {'id' -> 100. 'customerId' -> 1}. Dictionary from: {'id' -> 101. 'customerId' -> 1}. Dictionary from: {'id' -> 102. 'customerId' -> 2}}.
stats := [ | groups res |
  groups := Dictionary new.
  customers do: [:c |
    orders do: [:o |
      ((o.customerId = c.id)) ifTrue: [
        | g k |
        k := c.name.
        g := groups at: k ifAbsentPut: [OrderedCollection new].
        g add: c.
      ]
    ]
  ]
  res := OrderedCollection new.
  groups keysAndValuesDo: [:k :items |
    | g |
    g := Dictionary from: {#key->k. #items->items}.
    res add: Dictionary from: {'name' -> g.key. 'count' -> ([ | tmp |
  tmp := OrderedCollection new.
  g do: [:r |
    (r.o) ifTrue: [
      tmp add: r.
    ].
  ].
  tmp
] value size)}.
  ].
  res
] value.
Transcript show: '--- Group Left Join ---'; cr.
stats do: [:s |
  Transcript show: (s.name) printString; show: ' '; show: 'orders:'; show: ' '; show: (s.count) printString; cr.
]
.
