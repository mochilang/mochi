" Generated by Mochi compiler v0.10.26 on 2025-07-16T16:27:27Z
"
| people stats |
people := {Dictionary from: {'name' -> 'Alice'. 'age' -> 30. 'city' -> 'Paris'}. Dictionary from: {'name' -> 'Bob'. 'age' -> 15. 'city' -> 'Hanoi'}. Dictionary from: {'name' -> 'Charlie'. 'age' -> 65. 'city' -> 'Paris'}. Dictionary from: {'name' -> 'Diana'. 'age' -> 45. 'city' -> 'Hanoi'}. Dictionary from: {'name' -> 'Eve'. 'age' -> 70. 'city' -> 'Paris'}. Dictionary from: {'name' -> 'Frank'. 'age' -> 22. 'city' -> 'Hanoi'}}.
stats := [ | groups res |
  groups := Dictionary new.
  people do: [:person |
    | g k |
    k := person.city.
    g := groups at: k ifAbsentPut: [OrderedCollection new].
    g add: person.
  ]
  res := OrderedCollection new.
  groups keysAndValuesDo: [:k :items |
    | g |
    g := Dictionary from: {#key->k. #items->items}.
    res add: Dictionary from: {'city' -> g.key. 'count' -> (g size). 'avg_age' -> (([ | tmp |
  tmp := OrderedCollection new.
  g do: [:p |
    tmp add: p.age.
  ].
  tmp
] value inject: 0 into: [:s :x | s + x]) / [ | tmp |
  tmp := OrderedCollection new.
  g do: [:p |
    tmp add: p.age.
  ].
  tmp
] value size)}.
  ].
  res
] value.
Transcript show: '--- People grouped by city ---'; cr.
stats do: [:s |
  Transcript show: (s.city) printString; show: ' '; show: ': count ='; show: ' '; show: (s.count) printString; show: ' '; show: ', avg_age ='; show: ' '; show: (s.avg_age) printString; cr.
]
.
