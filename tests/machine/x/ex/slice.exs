# Generated by Mochi compiler v0.10.27 on 2025-07-17T07:51:59Z
defmodule Main do
  def main do
    _print_list(Enum.slice([1, 2, 3], 1, 3 - 1))
    _print_list(Enum.slice([1, 2, 3], 0, 2 - 0))
    IO.puts(_slice_string("hello", 1, 4))
  end

  defp _print_list(v) do
    Enum.with_index(v)
    |> Enum.each(fn {it, i} ->
      if i > 0, do: IO.write(" ")
      IO.write(inspect(it))
    end)

    IO.puts("")
  end

  defp _slice_string(s, i, j) do
    chars = String.graphemes(s)
    n = length(chars)
    start = if i < 0, do: i + n, else: i
    finish = if j < 0, do: j + n, else: j
    start = if start < 0, do: 0, else: start
    finish = if finish > n, do: n, else: finish
    finish = if finish < start, do: start, else: finish
    Enum.slice(chars, start, finish - start) |> Enum.join()
  end
end

Main.main()
