# Generated by Mochi compiler v0.10.27 on 2025-07-17T08:51:17Z
defmodule Person do
  @type t :: %__MODULE__{name: String.t(), age: integer()}
  defstruct name: nil, age: nil
end

defmodule Book do
  @type t :: %__MODULE__{title: String.t(), author: Person}
  defstruct title: nil, author: nil
end

defmodule Main do
  @book %Book{title: "Go", author: %Person{name: "Bob", age: 42}}
  def main do
    _print([@book.author.name])
  end

  defp _fmt(v) do
    cond do
      is_list(v) ->
        Enum.map_join(v, " ", &_fmt/1)

      v == nil ->
        "null"

      is_float(v) ->
        if v == Float.floor(v), do: Integer.to_string(trunc(v)), else: Float.to_string(v)

      is_boolean(v) ->
        if v, do: "1", else: "0"

      is_map(v) ->
        "[object Object]"

      true ->
        to_string(v)
    end
  end

  defp _print(args) do
    IO.puts(Enum.map_join(args, " ", &_fmt/1))
  end
end

Main.main()
