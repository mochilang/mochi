# Generated by Mochi compiler v0.10.27 on 2025-07-17T08:50:00Z
defmodule Main do
  def main do
    # data :: list(map())
    data = [%{a: 1, b: 2}, %{a: 1, b: 1}, %{a: 0, b: 5}]
    # sorted :: list(map())
    sorted = for x <- Enum.sort_by(data, fn x -> %{a: x.a, b: x.b} end), do: x
    _print([sorted])
  end

  defp _fmt(v) do
    cond do
      is_list(v) ->
        Enum.map_join(v, " ", &_fmt/1)

      v == nil ->
        "null"

      is_float(v) ->
        if v == Float.floor(v), do: Integer.to_string(trunc(v)), else: Float.to_string(v)

      is_boolean(v) ->
        if v, do: "1", else: "0"

      is_map(v) ->
        "[object Object]"

      true ->
        to_string(v)
    end
  end

  defp _print(args) do
    IO.puts(Enum.map_join(args, " ", &_fmt/1))
  end
end

Main.main()
