# Generated by Mochi Elixir compiler
defmodule Main do
  @customers [%{id: 1, name: "Alice"}, %{id: 2, name: "Bob"}, %{id: 3, name: "Charlie"}]
  @orders [%{id: 100, customerId: 1, total: 250}, %{id: 101, customerId: 2, total: 125}, %{id: 102, customerId: 1, total: 300}, %{id: 103, customerId: 4, total: 80}]
  def main do
    # result :: list(map())
    result = for o <- @orders, c <- @customers, (o.customerId == c.id), do: %{orderId: o.id, customerName: c.name, total: o.total}
    IO.inspect("--- Orders with customer info ---")
    for entry <- result do
      IO.puts(Enum.join(Enum.map(["Order", entry.orderId, "by", entry.customerName, "- $", entry.total], &inspect(&1)), " "))
    end
  end
  end
Main.main()
