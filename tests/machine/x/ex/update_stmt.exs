# Generated by Mochi Elixir compiler
defmodule Person do
  @type t :: %__MODULE__{name: String.t(), age: integer(), status: String.t()}
  defstruct name: nil, age: nil, status: nil
end

defmodule Main do
  def main do
    # people :: list(Person)
    people = [
      %Person{name: "Alice", age: 17, status: "minor"},
      %Person{name: "Bob", age: 25, status: "unknown"},
      %Person{name: "Charlie", age: 18, status: "unknown"},
      %Person{name: "Diana", age: 16, status: "minor"}
    ]

    people =
      Enum.map(people, fn it ->
        %{name: name, age: age, status: status} = it

        if age >= 18 do
          %{it | status: "adult", age: age + 1}
        else
          it
        end
      end)

    IO.puts("ok")
  end
end

Main.main()
