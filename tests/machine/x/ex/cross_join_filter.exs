# Generated by Mochi compiler v0.10.27 on 2025-07-17T08:47:54Z
defmodule Main do
  @nums [1, 2, 3]
  @letters ["A", "B"]
  def main do
    # pairs :: list(map())
    pairs = for n <- @nums, l <- @letters, rem(n, 2) == 0, do: %{n: n, l: l}
    _print(["--- Even pairs ---"])

    for p <- pairs do
      _print([p.n, p.l])
    end
  end

  defp _fmt(v) do
    cond do
      is_list(v) ->
        Enum.map_join(v, " ", &_fmt/1)

      v == nil ->
        "null"

      is_float(v) ->
        if v == Float.floor(v), do: Integer.to_string(trunc(v)), else: Float.to_string(v)

      is_boolean(v) ->
        if v, do: "1", else: "0"

      is_map(v) ->
        "[object Object]"

      true ->
        to_string(v)
    end
  end

  defp _print(args) do
    IO.puts(Enum.map_join(args, " ", &_fmt/1))
  end
end

Main.main()
