# Generated by Mochi compiler v0.10.27 on 2025-07-17T12:11:05Z
defmodule Main do
  def main do
    IO.inspect(Enum.uniq([1, 2] ++ [2, 3]))
    IO.inspect(Enum.reject([1, 2, 3], fn x -> Enum.member?([2], x) end))
    IO.inspect(Enum.filter([1, 2, 3], fn x -> Enum.member?([2, 4], x) end) |> Enum.uniq())
    IO.inspect(_length([1, 2] ++ [2, 3]))
  end

  defp _length(v) do
    cond do
      is_binary(v) -> String.length(v)
      is_list(v) -> length(v)
      is_map(v) and Map.has_key?(v, :items) -> length(Map.get(v, :items))
      is_map(v) -> map_size(v)
      true -> raise "len expects list, map or string"
    end
  end
end

Main.main()
