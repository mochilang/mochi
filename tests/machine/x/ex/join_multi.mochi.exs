# Generated by Mochi Elixir compiler
defmodule Main do
  def main do
    # customers :: list(map())
    customers = [%{id: 1, name: "Alice"}, %{id: 2, name: "Bob"}]
    # orders :: list(map())
    orders = [%{id: 100, customerId: 1}, %{id: 101, customerId: 2}]
    # items :: list(map())
    items = [%{orderId: 100, sku: "a"}, %{orderId: 101, sku: "b"}]
    # result :: list(map())
    result =
      for o <- orders,
          c <- customers,
          i <- items,
          o.customerId == c.id && o.id == i.orderId,
          do: %{name: c.name, sku: i.sku}

    IO.inspect("--- Multi Join ---")

    for r <- result do
      IO.puts(Enum.join(Enum.map([r.name, "bought item", r.sku], &inspect(&1)), " "))
    end
  end
end

Main.main()
