# Generated by Mochi Elixir compiler
defmodule Main do
  def main do
    IO.inspect(_sum([1, 2, 3]))
  end
  defp _sum(v) do
  list = cond do
    is_map(v) and Map.has_key?(v, :items) -> Map.get(v, :items)
    is_list(v) -> v
    true -> raise "sum() expects list or group"
  end
  Enum.sum(list)
end

  end
Main.main()
