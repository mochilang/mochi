# Generated by Mochi compiler v0.10.27 on 2025-07-17T08:50:58Z
defmodule Main do
  @spec sum_rec(integer(), integer()) :: integer()
  def sum_rec(n, acc) do
    try do
      if n == 0 do
        throw({:return, acc})
      end

      throw({:return, sum_rec(n - 1, acc + n)})
    catch
      {:return, v} -> v
    end
  end

  def main do
    _print([sum_rec(10, 0)])
  end

  defp _fmt(v) do
    cond do
      is_list(v) ->
        Enum.map_join(v, " ", &_fmt/1)

      v == nil ->
        "null"

      is_float(v) ->
        if v == Float.floor(v), do: Integer.to_string(trunc(v)), else: Float.to_string(v)

      is_boolean(v) ->
        if v, do: "1", else: "0"

      is_map(v) ->
        "[object Object]"

      true ->
        to_string(v)
    end
  end

  defp _print(args) do
    IO.puts(Enum.map_join(args, " ", &_fmt/1))
  end
end

Main.main()
