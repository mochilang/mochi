# Generated by Mochi compiler v0.10.28 on 2025-07-18T03:27:36Z
defmodule Main do
  @spec twoSum(list(integer()), integer()) :: list(integer())
  def twoSum(nums, target) do
    try do
      n = length(nums)

      for i <- 0..(n - 1) do
        for j <- (i + 1)..(n - 1) do
          if Enum.at(nums, i) + Enum.at(nums, j) == target do
            throw({:return, [i, j]})
          end
        end
      end

      throw({:return, [-1, -1]})
    catch
      {:return, v} -> v
    end
  end

  def main do
    # result :: list(integer())
    result = twoSum([2, 7, 11, 15], 9)
    IO.inspect(Enum.at(result, 0))
    IO.inspect(Enum.at(result, 1))
  end
end

Main.main()
