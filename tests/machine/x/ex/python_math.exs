# Generated by Mochi compiler v0.10.27 on 2025-07-17T08:50:17Z
defmodule Main do
  @r 3
  def main do
    # area :: float()
    area = :math.pi() * :math.pow(@r, 2)
    # root :: float()
    root = :math.sqrt(49)
    # sin45 :: float()
    sin45 = :math.sin(:math.pi() / 4)
    # log_e :: float()
    log_e = :math.log(:math.exp(1))
    _print(["Circle area with r =", @r, "=>", area])
    _print(["Square root of 49:", root])
    _print(["sin(Ï€/4):", sin45])
    _print(["log(e):", log_e])
  end

  defp _fmt(v) do
    cond do
      is_list(v) ->
        Enum.map_join(v, " ", &_fmt/1)

      v == nil ->
        "null"

      is_float(v) ->
        if v == Float.floor(v), do: Integer.to_string(trunc(v)), else: Float.to_string(v)

      is_boolean(v) ->
        if v, do: "1", else: "0"

      is_map(v) ->
        "[object Object]"

      true ->
        to_string(v)
    end
  end

  defp _print(args) do
    IO.puts(Enum.map_join(args, " ", &_fmt/1))
  end
end

Main.main()
