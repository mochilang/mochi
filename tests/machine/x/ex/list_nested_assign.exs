# Generated by Mochi compiler v0.10.27 on 2025-07-17T08:49:22Z
defmodule Main do
  def main do
    # matrix :: list(list(integer()))
    matrix = [[1, 2], [3, 4]]
    _ = matrix
    matrix = List.update_at(matrix, 1, fn it -> List.replace_at(it, 0, 5) end)
    _print([Enum.at(Enum.at(matrix, 1), 0)])
  end

  defp _fmt(v) do
    cond do
      is_list(v) ->
        Enum.map_join(v, " ", &_fmt/1)

      v == nil ->
        "null"

      is_float(v) ->
        if v == Float.floor(v), do: Integer.to_string(trunc(v)), else: Float.to_string(v)

      is_boolean(v) ->
        if v, do: "1", else: "0"

      is_map(v) ->
        "[object Object]"

      true ->
        to_string(v)
    end
  end

  defp _print(args) do
    IO.puts(Enum.map_join(args, " ", &_fmt/1))
  end
end

Main.main()
