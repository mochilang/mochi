# Generated by Mochi compiler v0.10.26 on 2025-07-16T16:28:27Z
defmodule Main do
  def main do
    # customers :: list(map())
    customers = [%{id: 1, name: "Alice"}, %{id: 2, name: "Bob"}]
    # orders :: list(map())
    orders = [%{id: 100, customerId: 1}, %{id: 101, customerId: 2}]
    # items :: list(map())
    items = [%{orderId: 100, sku: "a"}]
    # result :: list(map())
    result =
      for o <- orders, c <- customers, o.customerId == c.id do
        i = Enum.find(items, fn i -> o.id == i.orderId end)
        %{orderId: o.id, name: c.name, item: i}
      end

    IO.puts("--- Left Join Multi ---")

    for r <- result do
      IO.puts(Enum.join(Enum.map([r.orderId, r.name, r.item], &inspect(&1)), " "))
    end
  end
end

Main.main()
