# Generated by Mochi Elixir compiler
defmodule Main do
  def main do
    # prefix :: String.t()
    prefix = "fore"
    # s1 :: String.t()
    s1 = "forest"
    IO.puts(_slice_string(s1, 0, length(prefix)) == prefix)
    # s2 :: String.t()
    s2 = "desert"
    IO.puts(_slice_string(s2, 0, length(prefix)) == prefix)
  end

  defp _slice_string(s, i, j) do
    chars = String.graphemes(s)
    n = length(chars)
    start = if i < 0, do: i + n, else: i
    finish = if j < 0, do: j + n, else: j
    start = if start < 0, do: 0, else: start
    finish = if finish > n, do: n, else: finish
    finish = if finish < start, do: start, else: finish
    Enum.slice(chars, start, finish - start) |> Enum.join()
  end
end

Main.main()
