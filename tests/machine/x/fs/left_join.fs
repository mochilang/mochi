// Generated by Mochi compiler v0.10.28 on 2025-07-18T04:05:12Z
open System

type Anon1 = {
    id: int
    name: string
}
type Anon2 = {
    id: int
    customerId: int
    total: int
}
type Anon3 = {
    orderId: obj
    customer: obj option
    total: obj
}
type Anon4 = {
    orderId: int
    customer: Anon1 option
    total: int
}
let customers: Anon1 list = [{ id = 1; name = "Alice" }; { id = 2; name = "Bob" }]
let orders: Anon2 list = [{ id = 100; customerId = 1; total = 250 }; { id = 101; customerId = 3; total = 80 }]
let result: Anon4 list = [ for o in orders do 
  let c = List.tryFind (fun c -> o.customerId = c.id) customers
  yield { orderId = o.id; customer = c; total = o.total } ]
printfn "%s" "--- Left Join ---"
for entry in result do
    printfn "Order %d customer %A total %d" entry.orderId entry.customer entry.total
