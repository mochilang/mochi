#lang racket
(define customers (list (hash 'id 1 'name "Alice") (hash 'id 2 'name "Bob")))
(define orders (list (hash 'id 100 'customerId 1) (hash 'id 101 'customerId 1) (hash 'id 102 'customerId 2)))
(define stats (let ([groups (make-hash)])
  (for* ([o orders] [c customers] #:when (and (equal? (hash-ref o 'customerId) (hash-ref c 'id)))) (let ([key (hash-ref c 'name)] [bucket (hash-ref groups key '())]) (hash-set! groups key (cons (hash 'o o 'c c) bucket))))
  (define _groups (for/list ([k (hash-keys groups)]) (hash 'key k 'items (hash-ref groups k))))
  (for/list ([g _groups]) (hash 'name (hash-ref g 'key) 'count (length (hash-ref g 'items))))))
(displayln "--- Orders per customer ---")
(for ([s (if (hash? stats) (hash-keys stats) stats)])
(displayln (string-join (map ~a (list (hash-ref s 'name) "orders:" (hash-ref s 'count))) " "))
)
