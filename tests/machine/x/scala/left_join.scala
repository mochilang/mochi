// Generated by Mochi compiler v0.10.27 on 1970-01-01T00:00:00Z
object left_join {
  case class Customer(id: Int, name: String)
  case class Order(id: Int, customerId: Int, total: Int)
  case class Result(orderId: Int, customer: Option[Customer], total: Int)
  case class Result1(orderId: Int, customer: Customer, total: Int)

  def main(args: Array[String]): Unit = {
    val customers = List(Customer(id = 1, name = "Alice"), Customer(id = 2, name = "Bob"))
    val orders = List(Order(id = 100, customerId = 1, total = 250), Order(id = 101, customerId = 3, total = 80))
    val result = for { o <- orders; c = customers.find(c => o.customerId == (c.id).asInstanceOf[Int]) } yield Result(orderId = o.id, customer = c, total = o.total)
    println("--- Left Join ---")
    for(entry <- result) {
      println(s"Order ${entry.orderId} customer ${entry.customer} total ${entry.total}")
    }
  }
}
