exit status 1
/workspace/mochi/tests/machine/x/scala/group_by_join.scala:5: error: value customerId is not a member of scala.collection.immutable.Map[String,Int]
    val stats = ((for { o <- orders; c <- customers; if (o.customerId).asInstanceOf[Int] == (c.id).asInstanceOf[Int] } yield (c.name, (o, c))).groupBy(_._1).map{ case(k,list) => (k, list.map(_._2)) }.toList).map{ case(gKey,gItems) => { val g = (gKey, gItems); Map("name" -> (g._1), "count" -> ((g)._2.size)) } }.toList
                                                           ^
/workspace/mochi/tests/machine/x/scala/group_by_join.scala:5: error: value id is not a member of scala.collection.immutable.Map[String,Any]
    val stats = ((for { o <- orders; c <- customers; if (o.customerId).asInstanceOf[Int] == (c.id).asInstanceOf[Int] } yield (c.name, (o, c))).groupBy(_._1).map{ case(k,list) => (k, list.map(_._2)) }.toList).map{ case(gKey,gItems) => { val g = (gKey, gItems); Map("name" -> (g._1), "count" -> ((g)._2.size)) } }.toList
                                                                                               ^
/workspace/mochi/tests/machine/x/scala/group_by_join.scala:5: error: value map is not a member of Any
    val stats = ((for { o <- orders; c <- customers; if (o.customerId).asInstanceOf[Int] == (c.id).asInstanceOf[Int] } yield (c.name, (o, c))).groupBy(_._1).map{ case(k,list) => (k, list.map(_._2)) }.toList).map{ case(gKey,gItems) => { val g = (gKey, gItems); Map("name" -> (g._1), "count" -> ((g)._2.size)) } }.toList
                                                                                                                                                                                           ^
/workspace/mochi/tests/machine/x/scala/group_by_join.scala:5: error: value size is not a member of Any
    val stats = ((for { o <- orders; c <- customers; if (o.customerId).asInstanceOf[Int] == (c.id).asInstanceOf[Int] } yield (c.name, (o, c))).groupBy(_._1).map{ case(k,list) => (k, list.map(_._2)) }.toList).map{ case(gKey,gItems) => { val g = (gKey, gItems); Map("name" -> (g._1), "count" -> ((g)._2.size)) } }.toList
                                                                                                                                                                                                                                                                                                             ^
four errors found
