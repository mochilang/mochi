exit status 1
/workspace/mochi/tests/machine/x/scala/group_by_multi_join_sort.scala:15: error: value l is not a member of (group_by_multi_join_sort.Customer, group_by_multi_join_sort.Order, group_by_multi_join_sort.Lineitem, group_by_multi_join_sort.Nation)
  val result = (((for { c <- customer; o <- orders; if (o.o_custkey).asInstanceOf[Int] == c.c_custkey; l <- lineitem; if (l.l_orderkey).asInstanceOf[Int] == o.o_orderkey; n <- nation; if (n.n_nationkey).asInstanceOf[Int] == c.c_nationkey; if o.o_orderdate >= start_date && o.o_orderdate < end_date && l.l_returnflag == "R" } yield (Result(c_custkey = c.c_custkey, c_name = c.c_name, c_acctbal = c.c_acctbal, c_address = c.c_address, c_phone = c.c_phone, c_comment = c.c_comment, n_name = n.n_name), (c, o, l, n))).groupBy(_._1).map{ case(k,list) => (k, list.map(_._2)) }.toList).sortBy(g => -(for { x <- g._2 } yield (x.l.l_extendedprice).asInstanceOf[Int] * ((1 - (x.l.l_discount).asInstanceOf[Int])).asInstanceOf[Int]).sum)).map{ case(gKey,gItems) => { val g = (gKey, gItems); Result1(c_custkey = g.key.c_custkey, c_name = g.key.c_name, revenue = (for { x <- g._2 } yield (x.l.l_extendedprice).asInstanceOf[Int] * ((1 - (x.l.l_discount).asInstanceOf[Int])).asInstanceOf[Int]).sum, c_acctbal = g.key.c_acctbal, n_name = g.key.n_name, c_address = g.key.c_address, c_phone = g.key.c_phone, c_comment = g.key.c_comment) } }.toList

/workspace/mochi/tests/machine/x/scala/group_by_multi_join_sort.scala:15: error: value l is not a member of (group_by_multi_join_sort.Customer, group_by_multi_join_sort.Order, group_by_multi_join_sort.Lineitem, group_by_multi_join_sort.Nation)
  val result = (((for { c <- customer; o <- orders; if (o.o_custkey).asInstanceOf[Int] == c.c_custkey; l <- lineitem; if (l.l_orderkey).asInstanceOf[Int] == o.o_orderkey; n <- nation; if (n.n_nationkey).asInstanceOf[Int] == c.c_nationkey; if o.o_orderdate >= start_date && o.o_orderdate < end_date && l.l_returnflag == "R" } yield (Result(c_custkey = c.c_custkey, c_name = c.c_name, c_acctbal = c.c_acctbal, c_address = c.c_address, c_phone = c.c_phone, c_comment = c.c_comment, n_name = n.n_name), (c, o, l, n))).groupBy(_._1).map{ case(k,list) => (k, list.map(_._2)) }.toList).sortBy(g => -(for { x <- g._2 } yield (x.l.l_extendedprice).asInstanceOf[Int] * ((1 - (x.l.l_discount).asInstanceOf[Int])).asInstanceOf[Int]).sum)).map{ case(gKey,gItems) => { val g = (gKey, gItems); Result1(c_custkey = g.key.c_custkey, c_name = g.key.c_name, revenue = (for { x <- g._2 } yield (x.l.l_extendedprice).asInstanceOf[Int] * ((1 - (x.l.l_discount).asInstanceOf[Int])).asInstanceOf[Int]).sum, c_acctbal = g.key.c_acctbal, n_name = g.key.n_name, c_address = g.key.c_address, c_phone = g.key.c_phone, c_comment = g.key.c_comment) } }.toList

/workspace/mochi/tests/machine/x/scala/group_by_multi_join_sort.scala:15: error: value key is not a member of (Any, Any)
  val result = (((for { c <- customer; o <- orders; if (o.o_custkey).asInstanceOf[Int] == c.c_custkey; l <- lineitem; if (l.l_orderkey).asInstanceOf[Int] == o.o_orderkey; n <- nation; if (n.n_nationkey).asInstanceOf[Int] == c.c_nationkey; if o.o_orderdate >= start_date && o.o_orderdate < end_date && l.l_returnflag == "R" } yield (Result(c_custkey = c.c_custkey, c_name = c.c_name, c_acctbal = c.c_acctbal, c_address = c.c_address, c_phone = c.c_phone, c_comment = c.c_comment, n_name = n.n_name), (c, o, l, n))).groupBy(_._1).map{ case(k,list) => (k, list.map(_._2)) }.toList).sortBy(g => -(for { x <- g._2 } yield (x.l.l_extendedprice).asInstanceOf[Int] * ((1 - (x.l.l_discount).asInstanceOf[Int])).asInstanceOf[Int]).sum)).map{ case(gKey,gItems) => { val g = (gKey, gItems); Result1(c_custkey = g.key.c_custkey, c_name = g.key.c_name, revenue = (for { x <- g._2 } yield (x.l.l_extendedprice).asInstanceOf[Int] * ((1 - (x.l.l_discount).asInstanceOf[Int])).asInstanceOf[Int]).sum, c_acctbal = g.key.c_acctbal, n_name = g.key.n_name, c_address = g.key.c_address, c_phone = g.key.c_phone, c_comment = g.key.c_comment) } }.toList

/workspace/mochi/tests/machine/x/scala/group_by_multi_join_sort.scala:15: error: value key is not a member of (Any, Any)
  val result = (((for { c <- customer; o <- orders; if (o.o_custkey).asInstanceOf[Int] == c.c_custkey; l <- lineitem; if (l.l_orderkey).asInstanceOf[Int] == o.o_orderkey; n <- nation; if (n.n_nationkey).asInstanceOf[Int] == c.c_nationkey; if o.o_orderdate >= start_date && o.o_orderdate < end_date && l.l_returnflag == "R" } yield (Result(c_custkey = c.c_custkey, c_name = c.c_name, c_acctbal = c.c_acctbal, c_address = c.c_address, c_phone = c.c_phone, c_comment = c.c_comment, n_name = n.n_name), (c, o, l, n))).groupBy(_._1).map{ case(k,list) => (k, list.map(_._2)) }.toList).sortBy(g => -(for { x <- g._2 } yield (x.l.l_extendedprice).asInstanceOf[Int] * ((1 - (x.l.l_discount).asInstanceOf[Int])).asInstanceOf[Int]).sum)).map{ case(gKey,gItems) => { val g = (gKey, gItems); Result1(c_custkey = g.key.c_custkey, c_name = g.key.c_name, revenue = (for { x <- g._2 } yield (x.l.l_extendedprice).asInstanceOf[Int] * ((1 - (x.l.l_discount).asInstanceOf[Int])).asInstanceOf[Int]).sum, c_acctbal = g.key.c_acctbal, n_name = g.key.n_name, c_address = g.key.c_address, c_phone = g.key.c_phone, c_comment = g.key.c_comment) } }.toList

/workspace/mochi/tests/machine/x/scala/group_by_multi_join_sort.scala:15: error: value map is not a member of Any
  val result = (((for { c <- customer; o <- orders; if (o.o_custkey).asInstanceOf[Int] == c.c_custkey; l <- lineitem; if (l.l_orderkey).asInstanceOf[Int] == o.o_orderkey; n <- nation; if (n.n_nationkey).asInstanceOf[Int] == c.c_nationkey; if o.o_orderdate >= start_date && o.o_orderdate < end_date && l.l_returnflag == "R" } yield (Result(c_custkey = c.c_custkey, c_name = c.c_name, c_acctbal = c.c_acctbal, c_address = c.c_address, c_phone = c.c_phone, c_comment = c.c_comment, n_name = n.n_name), (c, o, l, n))).groupBy(_._1).map{ case(k,list) => (k, list.map(_._2)) }.toList).sortBy(g => -(for { x <- g._2 } yield (x.l.l_extendedprice).asInstanceOf[Int] * ((1 - (x.l.l_discount).asInstanceOf[Int])).asInstanceOf[Int]).sum)).map{ case(gKey,gItems) => { val g = (gKey, gItems); Result1(c_custkey = g.key.c_custkey, c_name = g.key.c_name, revenue = (for { x <- g._2 } yield (x.l.l_extendedprice).asInstanceOf[Int] * ((1 - (x.l.l_discount).asInstanceOf[Int])).asInstanceOf[Int]).sum, c_acctbal = g.key.c_acctbal, n_name = g.key.n_name, c_address = g.key.c_address, c_phone = g.key.c_phone, c_comment = g.key.c_comment) } }.toList

/workspace/mochi/tests/machine/x/scala/group_by_multi_join_sort.scala:15: error: value key is not a member of (Any, Any)
  val result = (((for { c <- customer; o <- orders; if (o.o_custkey).asInstanceOf[Int] == c.c_custkey; l <- lineitem; if (l.l_orderkey).asInstanceOf[Int] == o.o_orderkey; n <- nation; if (n.n_nationkey).asInstanceOf[Int] == c.c_nationkey; if o.o_orderdate >= start_date && o.o_orderdate < end_date && l.l_returnflag == "R" } yield (Result(c_custkey = c.c_custkey, c_name = c.c_name, c_acctbal = c.c_acctbal, c_address = c.c_address, c_phone = c.c_phone, c_comment = c.c_comment, n_name = n.n_name), (c, o, l, n))).groupBy(_._1).map{ case(k,list) => (k, list.map(_._2)) }.toList).sortBy(g => -(for { x <- g._2 } yield (x.l.l_extendedprice).asInstanceOf[Int] * ((1 - (x.l.l_discount).asInstanceOf[Int])).asInstanceOf[Int]).sum)).map{ case(gKey,gItems) => { val g = (gKey, gItems); Result1(c_custkey = g.key.c_custkey, c_name = g.key.c_name, revenue = (for { x <- g._2 } yield (x.l.l_extendedprice).asInstanceOf[Int] * ((1 - (x.l.l_discount).asInstanceOf[Int])).asInstanceOf[Int]).sum, c_acctbal = g.key.c_acctbal, n_name = g.key.n_name, c_address = g.key.c_address, c_phone = g.key.c_phone, c_comment = g.key.c_comment) } }.toList

/workspace/mochi/tests/machine/x/scala/group_by_multi_join_sort.scala:15: error: value key is not a member of (Any, Any)
  val result = (((for { c <- customer; o <- orders; if (o.o_custkey).asInstanceOf[Int] == c.c_custkey; l <- lineitem; if (l.l_orderkey).asInstanceOf[Int] == o.o_orderkey; n <- nation; if (n.n_nationkey).asInstanceOf[Int] == c.c_nationkey; if o.o_orderdate >= start_date && o.o_orderdate < end_date && l.l_returnflag == "R" } yield (Result(c_custkey = c.c_custkey, c_name = c.c_name, c_acctbal = c.c_acctbal, c_address = c.c_address, c_phone = c.c_phone, c_comment = c.c_comment, n_name = n.n_name), (c, o, l, n))).groupBy(_._1).map{ case(k,list) => (k, list.map(_._2)) }.toList).sortBy(g => -(for { x <- g._2 } yield (x.l.l_extendedprice).asInstanceOf[Int] * ((1 - (x.l.l_discount).asInstanceOf[Int])).asInstanceOf[Int]).sum)).map{ case(gKey,gItems) => { val g = (gKey, gItems); Result1(c_custkey = g.key.c_custkey, c_name = g.key.c_name, revenue = (for { x <- g._2 } yield (x.l.l_extendedprice).asInstanceOf[Int] * ((1 - (x.l.l_discount).asInstanceOf[Int])).asInstanceOf[Int]).sum, c_acctbal = g.key.c_acctbal, n_name = g.key.n_name, c_address = g.key.c_address, c_phone = g.key.c_phone, c_comment = g.key.c_comment) } }.toList

/workspace/mochi/tests/machine/x/scala/group_by_multi_join_sort.scala:15: error: value key is not a member of (Any, Any)
  val result = (((for { c <- customer; o <- orders; if (o.o_custkey).asInstanceOf[Int] == c.c_custkey; l <- lineitem; if (l.l_orderkey).asInstanceOf[Int] == o.o_orderkey; n <- nation; if (n.n_nationkey).asInstanceOf[Int] == c.c_nationkey; if o.o_orderdate >= start_date && o.o_orderdate < end_date && l.l_returnflag == "R" } yield (Result(c_custkey = c.c_custkey, c_name = c.c_name, c_acctbal = c.c_acctbal, c_address = c.c_address, c_phone = c.c_phone, c_comment = c.c_comment, n_name = n.n_name), (c, o, l, n))).groupBy(_._1).map{ case(k,list) => (k, list.map(_._2)) }.toList).sortBy(g => -(for { x <- g._2 } yield (x.l.l_extendedprice).asInstanceOf[Int] * ((1 - (x.l.l_discount).asInstanceOf[Int])).asInstanceOf[Int]).sum)).map{ case(gKey,gItems) => { val g = (gKey, gItems); Result1(c_custkey = g.key.c_custkey, c_name = g.key.c_name, revenue = (for { x <- g._2 } yield (x.l.l_extendedprice).asInstanceOf[Int] * ((1 - (x.l.l_discount).asInstanceOf[Int])).asInstanceOf[Int]).sum, c_acctbal = g.key.c_acctbal, n_name = g.key.n_name, c_address = g.key.c_address, c_phone = g.key.c_phone, c_comment = g.key.c_comment) } }.toList

/workspace/mochi/tests/machine/x/scala/group_by_multi_join_sort.scala:15: error: value key is not a member of (Any, Any)
  val result = (((for { c <- customer; o <- orders; if (o.o_custkey).asInstanceOf[Int] == c.c_custkey; l <- lineitem; if (l.l_orderkey).asInstanceOf[Int] == o.o_orderkey; n <- nation; if (n.n_nationkey).asInstanceOf[Int] == c.c_nationkey; if o.o_orderdate >= start_date && o.o_orderdate < end_date && l.l_returnflag == "R" } yield (Result(c_custkey = c.c_custkey, c_name = c.c_name, c_acctbal = c.c_acctbal, c_address = c.c_address, c_phone = c.c_phone, c_comment = c.c_comment, n_name = n.n_name), (c, o, l, n))).groupBy(_._1).map{ case(k,list) => (k, list.map(_._2)) }.toList).sortBy(g => -(for { x <- g._2 } yield (x.l.l_extendedprice).asInstanceOf[Int] * ((1 - (x.l.l_discount).asInstanceOf[Int])).asInstanceOf[Int]).sum)).map{ case(gKey,gItems) => { val g = (gKey, gItems); Result1(c_custkey = g.key.c_custkey, c_name = g.key.c_name, revenue = (for { x <- g._2 } yield (x.l.l_extendedprice).asInstanceOf[Int] * ((1 - (x.l.l_discount).asInstanceOf[Int])).asInstanceOf[Int]).sum, c_acctbal = g.key.c_acctbal, n_name = g.key.n_name, c_address = g.key.c_address, c_phone = g.key.c_phone, c_comment = g.key.c_comment) } }.toList

/workspace/mochi/tests/machine/x/scala/group_by_multi_join_sort.scala:15: error: value key is not a member of (Any, Any)
  val result = (((for { c <- customer; o <- orders; if (o.o_custkey).asInstanceOf[Int] == c.c_custkey; l <- lineitem; if (l.l_orderkey).asInstanceOf[Int] == o.o_orderkey; n <- nation; if (n.n_nationkey).asInstanceOf[Int] == c.c_nationkey; if o.o_orderdate >= start_date && o.o_orderdate < end_date && l.l_returnflag == "R" } yield (Result(c_custkey = c.c_custkey, c_name = c.c_name, c_acctbal = c.c_acctbal, c_address = c.c_address, c_phone = c.c_phone, c_comment = c.c_comment, n_name = n.n_name), (c, o, l, n))).groupBy(_._1).map{ case(k,list) => (k, list.map(_._2)) }.toList).sortBy(g => -(for { x <- g._2 } yield (x.l.l_extendedprice).asInstanceOf[Int] * ((1 - (x.l.l_discount).asInstanceOf[Int])).asInstanceOf[Int]).sum)).map{ case(gKey,gItems) => { val g = (gKey, gItems); Result1(c_custkey = g.key.c_custkey, c_name = g.key.c_name, revenue = (for { x <- g._2 } yield (x.l.l_extendedprice).asInstanceOf[Int] * ((1 - (x.l.l_discount).asInstanceOf[Int])).asInstanceOf[Int]).sum, c_acctbal = g.key.c_acctbal, n_name = g.key.n_name, c_address = g.key.c_address, c_phone = g.key.c_phone, c_comment = g.key.c_comment) } }.toList
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ^
10 errors found
