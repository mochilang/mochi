#!/usr/bin/env escript
%% Generated by Mochi compiler v0.10.27 on 2025-07-17T08:48:28Z
% join_multi.erl - generated from join_multi.mochi

main(_) ->
    Customers = [#{id => 1, name => "Alice"}, #{id => 2, name => "Bob"}],
    Orders = [#{id => 100, customerId => 1}, #{id => 101, customerId => 2}],
    Items = [#{orderId => 100, sku => "a"}, #{orderId => 101, sku => "b"}],
    Result = [#{name => mochi_get(name, C), sku => mochi_get(sku, I)} || O <- Orders, C <- Customers, I <- Items, (mochi_get(customerId, O) == mochi_get(id, C)), (mochi_get(id, O) == mochi_get(orderId, I))],
    io:format("~p~n", ["--- Multi Join ---"]),
    lists:foreach(fun(R) -> io:format("~p ~p ~p~n", [mochi_get(name, R), "bought item", mochi_get(sku, R)]) end, Result).

mochi_get(K, M) ->
    case maps:find(K, M) of
        {ok, V} -> V;
        error ->
            Name = atom_to_list(K),
            case string:tokens(Name, "_") of
                [Pref|_] ->
                    P = list_to_atom(Pref),
                    case maps:find(P, M) of
                        {ok, Sub} when is_map(Sub) -> maps:get(K, Sub, undefined);
                        _ -> undefined
                    end;
                _ -> undefined
            end
        end.
