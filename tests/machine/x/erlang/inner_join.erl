#!/usr/bin/env escript
%% Generated by Mochi compiler v0.10.27 on 2025-07-17T07:14:47Z
% inner_join.erl - generated from inner_join.mochi

main(_) ->
    Customers = [#{id => 1, name => "Alice"}, #{id => 2, name => "Bob"}, #{id => 3, name => "Charlie"}],
    Orders = [#{id => 100, customerId => 1, total => 250}, #{id => 101, customerId => 2, total => 125}, #{id => 102, customerId => 1, total => 300}, #{id => 103, customerId => 4, total => 80}],
    Result = [#{orderId => mochi_get(id, O), customerName => mochi_get(name, C), total => mochi_get(total, O)} || O <- Orders, C <- Customers, (mochi_get(customerId, O) == mochi_get(id, C))],
    io:format("~p~n", ["--- Orders with customer info ---"]),
    lists:foreach(fun(Entry) -> io:format("~p ~p ~p ~p ~p ~p~n", ["Order", mochi_get(orderId, Entry), "by", mochi_get(customerName, Entry), "- $", mochi_get(total, Entry)]) end, Result).

mochi_get(K, M) ->
    case maps:find(K, M) of
        {ok, V} -> V;
        error ->
            Name = atom_to_list(K),
            case string:tokens(Name, "_") of
                [Pref|_] ->
                    P = list_to_atom(Pref),
                    case maps:find(P, M) of
                        {ok, Sub} when is_map(Sub) -> maps:get(K, Sub, undefined);
                        _ -> undefined
                    end;
                _ -> undefined
            end
        end.
