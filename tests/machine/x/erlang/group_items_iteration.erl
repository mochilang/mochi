#!/usr/bin/env escript
% Generated by Mochi compiler v0.10.27 on 2025-07-17T01:32:33Z
% group_items_iteration.erl - generated from group_items_iteration.mochi

main(_) ->
    Data = [#{tag => "a", val => 1}, #{tag => "a", val => 2}, #{tag => "b", val => 3}],
    Groups = [#{key => Key0, items => Val0} || {Key0, Val0} <- maps:to_list(lists:foldl(fun({Key0, Val0}, Acc0) -> L = maps:get(Key0, Acc0, []), maps:put(Key0, [Val0 | L], Acc0) end, #{}, [{mochi_get(tag, D), D} || D <- Data]))],
    Tmp0 = [],
    {Tmp1} = lists:foldl(fun(G, {Tmp}) -> Total0 = 0, {Total1} = lists:foldl(fun(X, {Total}) -> Total1 = (Total + mochi_get(val, X)), {Total1} end, {Total0}, mochi_get(items, G)), Tmp1 = Tmp ++ [#{tag => mochi_get(key, G), total => Total1}], {Tmp1} end, {Tmp0}, Groups),
    Result = [V || {_, V} <- lists:keysort(1, [{mochi_get(tag, R), R} || R <- Tmp1])],
    io:format("~p~n", [Result]).

mochi_get(K, M) ->
    case maps:find(K, M) of
        {ok, V} -> V;
        error ->
            Name = atom_to_list(K),
            case string:tokens(Name, "_") of
                [Pref|_] ->
                    P = list_to_atom(Pref),
                    case maps:find(P, M) of
                        {ok, Sub} when is_map(Sub) -> maps:get(K, Sub, undefined);
                        _ -> undefined
                    end;
                _ -> undefined
            end
        end.
