#!/usr/bin/env escript
% Generated by Mochi compiler v0.10.27 on 2025-07-17T01:32:32Z
% group_by_multi_join_sort.erl - generated from group_by_multi_join_sort.mochi

main(_) ->
    Nation = [#{n_nationkey => 1, n_name => "BRAZIL"}],
    Customer = [#{c_custkey => 1, c_name => "Alice", c_acctbal => 100, c_nationkey => 1, c_address => "123 St", c_phone => "123-456", c_comment => "Loyal"}],
    Orders = [#{o_orderkey => 1000, o_custkey => 1, o_orderdate => "1993-10-15"}, #{o_orderkey => 2000, o_custkey => 1, o_orderdate => "1994-01-02"}],
    Lineitem = [#{l_orderkey => 1000, l_returnflag => "R", l_extendedprice => 1000, l_discount => 0.1}, #{l_orderkey => 2000, l_returnflag => "N", l_extendedprice => 500, l_discount => 0}],
    Result = [V || {_, V} <- lists:keysort(1, [{-lists:sum([(mochi_get(l_extendedprice, mochi_get(l, X)) * ((1 - mochi_get(l_discount, mochi_get(l, X))))) || X <- Val0]), #{c_custkey => mochi_get(c_custkey, Key0), c_name => mochi_get(c_name, Key0), revenue => lists:sum([(mochi_get(l_extendedprice, mochi_get(l, X)) * ((1 - mochi_get(l_discount, mochi_get(l, X))))) || X <- Val0]), c_acctbal => mochi_get(c_acctbal, Key0), n_name => mochi_get(n_name, Key0), c_address => mochi_get(c_address, Key0), c_phone => mochi_get(c_phone, Key0), c_comment => mochi_get(c_comment, Key0)}} || {Key0, Val0} <- maps:to_list(lists:foldl(fun({Key0, Val0}, Acc0) -> L = maps:get(Key0, Acc0, []), maps:put(Key0, [Val0 | L], Acc0) end, #{}, [{#{c_custkey => mochi_get(c_custkey, C), c_name => mochi_get(c_name, C), c_acctbal => mochi_get(c_acctbal, C), c_address => mochi_get(c_address, C), c_phone => mochi_get(c_phone, C), c_comment => mochi_get(c_comment, C), n_name => mochi_get(n_name, N)}, #{c => C, o => O, l => L, n => N}} || C <- Customer, O <- Orders, L <- Lineitem, N <- Nation, (mochi_get(o_custkey, O) == mochi_get(c_custkey, C)), (mochi_get(l_orderkey, L) == mochi_get(o_orderkey, O)), (mochi_get(n_nationkey, N) == mochi_get(c_nationkey, C)), (((mochi_get(o_orderdate, O) >= "1993-10-01") andalso (mochi_get(o_orderdate, O) < "1994-01-01")) andalso (mochi_get(l_returnflag, L) == "R"))]))])],
    io:format("~p~n", [Result]).

mochi_get(K, M) ->
    case maps:find(K, M) of
        {ok, V} -> V;
        error ->
            Name = atom_to_list(K),
            case string:tokens(Name, "_") of
                [Pref|_] ->
                    P = list_to_atom(Pref),
                    case maps:find(P, M) of
                        {ok, Sub} when is_map(Sub) -> maps:get(K, Sub, undefined);
                        _ -> undefined
                    end;
                _ -> undefined
            end
        end.
