// Generated by Mochi compiler v0.10.28 on 1970-01-01T00:00:00Z
// dataset_where_filter.mochi
import java.util.*;

class People {
    String name;
    int age;
    People(String name, int age) {
        this.name = name;
        this.age = age;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof People other)) return false;
        return Objects.equals(this.name, other.name) && Objects.equals(this.age, other.age);
    }
    @Override public int hashCode() {
        return Objects.hash(name, age);
    }
    int size() { return 2; }
}
class Adult {
    String name;
    int age;
    boolean is_senior;
    Adult(String name, int age, boolean is_senior) {
        this.name = name;
        this.age = age;
        this.is_senior = is_senior;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Adult other)) return false;
        return Objects.equals(this.name, other.name) && Objects.equals(this.age, other.age) && Objects.equals(this.is_senior, other.is_senior);
    }
    @Override public int hashCode() {
        return Objects.hash(name, age, is_senior);
    }
    int size() { return 3; }
}
public class DatasetWhereFilter {
    public static void main(String[] args) {
        List<People> people = new ArrayList<>(Arrays.asList(new People("Alice", 30), new People("Bob", 15), new People("Charlie", 65), new People("Diana", 45)));
        List<Adult> adults = (new java.util.function.Supplier<List<Adult>>(){public List<Adult> get(){
    List<Adult> res0 = new ArrayList<>();
    for (var person : people) {
        if (!(person.age >= 18)) continue;
        res0.add(new Adult(person.name, person.age, person.age >= 60));
    }
    return res0;
}}).get();
        System.out.println("--- Adults ---");
        for (Adult person : adults) {
            System.out.println(person.name + " " + "is" + " " + person.age + " " + (person.is_senior ? " (senior)" : ""));
        }
    }
}
