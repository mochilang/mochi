# Generated by Mochi compiler v0.10.26 on 2025-07-16T17:31:58Z
from __future__ import annotations
import dataclasses


@dataclasses.dataclass
class Auto1:
    a: int
    b: int

    def __getitem__(self, key):
        return getattr(self, key)


from typing import Any, TypeVar, Generic, Callable

T = TypeVar("T")
K = TypeVar("K")


def _fmt(v):
    if isinstance(v, list):
        return " ".join((_fmt(x) for x in v))
    if v is None:
        return "null"
    if isinstance(v, float) and v.is_integer():
        return str(int(v))
    if isinstance(v, dict) or hasattr(v, "__dataclass_fields__"):
        return "[object Object]"
    return str(v)


print(_fmt(len(Auto1(_=1, _=2))))
