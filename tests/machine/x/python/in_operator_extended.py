# Generated by Mochi compiler v0.10.26 on 2025-07-16T17:09:07Z
from __future__ import annotations
import dataclasses


@dataclasses.dataclass
class Auto1:
    a: int

    def __getitem__(self, key):
        return getattr(self, key)


from typing import Any, TypeVar, Generic, Callable

T = TypeVar("T")
K = TypeVar("K")


def _fmt(v):
    if isinstance(v, list):
        return " ".join((_fmt(x) for x in v))
    if isinstance(v, float) and v.is_integer():
        return str(int(v))
    return str(v)


xs = [1, 2, 3]
ys = [x for x in xs if x % 2 == 1]
print(_fmt(str(1 in ys).lower()))
print(_fmt(str(2 in ys).lower()))
m = Auto1(a=1)
print(_fmt(str("a" in m).lower()))
print(_fmt(str("b" in m).lower()))
s = "hello"
print(_fmt(str("ell" in s).lower()))
print(_fmt(str("foo" in s).lower()))
