# Generated by Mochi Python compiler
from __future__ import annotations

import typing

from typing import Any, TypeVar, Generic, Callable

T = TypeVar("T")
K = TypeVar("K")


def _sort_key(k):
    if isinstance(k, (list, tuple, dict)):
        return str(k)
    return k


data: list[dict[str, int]] = None
_sorted: list[dict[str, int]] = None


def main():
    global data
    data = [{"a": 1, "b": 2}, {"a": 1, "b": 1}, {"a": 0, "b": 5}]
    global _sorted
    _sorted = [
        x
        for x in sorted(
            [x for x in data], key=lambda x: _sort_key({"a": x["a"], "b": x["b"]})
        )
    ]
    print(*_sorted)


if __name__ == "__main__":
    main()
