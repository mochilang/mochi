# Generated by Mochi compiler v0.10.25 on 2025-07-13T05:18:22Z
from __future__ import annotations
import dataclasses


@dataclasses.dataclass
class Data:
    a: object
    b: object

    def __getitem__(self, key):
        return getattr(self, key)


from typing import Any, TypeVar, Generic, Callable

T = TypeVar("T")
K = TypeVar("K")


def _sort_key(k):
    if isinstance(k, (list, tuple, dict)):
        return str(k)
    return k


data = [Data(a=1, b=2), Data(a=1, b=1), Data(a=0, b=5)]
_sorted = [
    x
    for x in sorted(
        [x for x in data], key=lambda x: _sort_key({"a": x["a"], "b": x["b"]})
    )
]
print(_sorted)
