# Generated by Mochi compiler v0.10.26 on 2025-07-16T17:08:56Z
from __future__ import annotations

testpkg = {"Add": lambda a, b: a + b, "Pi": 3.14, "Answer": 42}
from typing import Any, TypeVar, Generic, Callable

T = TypeVar("T")
K = TypeVar("K")


def _fmt(v):
    if isinstance(v, list):
        return " ".join((_fmt(x) for x in v))
    if isinstance(v, float) and v.is_integer():
        return str(int(v))
    return str(v)


print(
    _fmt(
        (testpkg.get("Add") if isinstance(testpkg, dict) else getattr(testpkg, "Add"))(
            2, 3
        )
    )
)
print(_fmt(testpkg.get("Pi") if isinstance(testpkg, dict) else getattr(testpkg, "Pi")))
print(
    _fmt(
        testpkg.get("Answer")
        if isinstance(testpkg, dict)
        else getattr(testpkg, "Answer")
    )
)
