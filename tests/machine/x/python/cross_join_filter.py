# Generated by Mochi compiler v0.10.26 on 2025-07-16T17:08:49Z
from __future__ import annotations
import dataclasses


@dataclasses.dataclass
class Auto1:
    n: int
    l: str

    def __getitem__(self, key):
        return getattr(self, key)


from typing import Any, TypeVar, Generic, Callable

T = TypeVar("T")
K = TypeVar("K")


def _fmt(v):
    if isinstance(v, list):
        return " ".join((_fmt(x) for x in v))
    if isinstance(v, float) and v.is_integer():
        return str(int(v))
    return str(v)


nums = [1, 2, 3]
letters = ["A", "B"]
pairs = [Auto1(n=n, l=l) for n in nums if n % 2 == 0 for l in letters]
print(_fmt("--- Even pairs ---"))
for p in pairs:
    print(" ".join([_fmt(p.n), _fmt(p.l)]))
