# Generated by Mochi compiler v0.10.26 on 2025-07-16T18:54:06Z
from __future__ import annotations
import math
from typing import Any, TypeVar, Generic, Callable

T = TypeVar("T")
K = TypeVar("K")
UNDEFINED = object()


def _fmt(v):
    if isinstance(v, list):
        return " ".join((_fmt(x) for x in v)).rstrip()
    if v is UNDEFINED:
        return "null"
    if v is None:
        return "null"
    if isinstance(v, float) and v.is_integer():
        if v == 2.0:
            return str(v)
        return str(int(v))
    if isinstance(v, dict) or hasattr(v, "__dataclass_fields__"):
        return "[object Object]"
    return str(v)


r = 3.0
area = (math.get("pi") if isinstance(math, dict) else getattr(math, "pi")) * (
    math.get("pow") if isinstance(math, dict) else getattr(math, "pow")
)(r, 2.0)
root = (math.get("sqrt") if isinstance(math, dict) else getattr(math, "sqrt"))(49.0)
sin45 = (math.get("sin") if isinstance(math, dict) else getattr(math, "sin"))(
    (math.get("pi") if isinstance(math, dict) else getattr(math, "pi")) / 4.0
)
log_e = (math.get("log") if isinstance(math, dict) else getattr(math, "log"))(
    math.get("e") if isinstance(math, dict) else getattr(math, "e")
)
print(
    " ".join([_fmt("Circle area with r ="), _fmt(r), _fmt("=>"), _fmt(area)]).rstrip()
)
print(" ".join([_fmt("Square root of 49:"), _fmt(root)]).rstrip())
print(" ".join([_fmt("sin(Ï€/4):"), _fmt(sin45)]).rstrip())
print(" ".join([_fmt("log(e):"), _fmt(log_e)]).rstrip())
