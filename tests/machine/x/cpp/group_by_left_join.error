/workspace/mochi/tests/machine/x/cpp/group_by_left_join.cpp: In lambda function:
/workspace/mochi/tests/machine/x/cpp/group_by_left_join.cpp:100:58: error: no match for ‘operator!=’ (operand types are ‘Order’ and ‘Order’)
  100 |                                               if (!((r.o != Order{})))
      |                                                      ~~~ ^~ ~~~~~~~
      |                                                        |    |
      |                                                        |    Order
      |                                                        Order
/workspace/mochi/tests/machine/x/cpp/group_by_left_join.cpp: In function ‘int main()’:
/workspace/mochi/tests/machine/x/cpp/group_by_left_join.cpp:109:5: error: conversion from ‘vector<__struct5>’ to non-scalar type ‘vector<Stat>’ requested
   56 |   std::vector<Stat> stats = ([&]() {
      |                             ~~~~~~~~
   57 |     std::vector<__struct4> __groups;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   58 |     for (auto c : customers) {
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~
   59 |       {
      |       ~
   60 |         bool __matched0 = false;
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
   61 |         for (auto o : orders) {
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   62 |           if (!((o.customerId == c.id)))
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |             continue;
      |             ~~~~~~~~~
   64 |           __matched0 = true;
      |           ~~~~~~~~~~~~~~~~~~
   65 |           auto __key = c.name;
      |           ~~~~~~~~~~~~~~~~~~~~
   66 |           bool __found = false;
      |           ~~~~~~~~~~~~~~~~~~~~~
   67 |           for (auto &__g : __groups) {
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   68 |             if (__any_eq(__g.key, __key)) {
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   69 |               __g.items.push_back(Stat{c, o});
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   70 |               __found = true;
      |               ~~~~~~~~~~~~~~~
   71 |               break;
      |               ~~~~~~
   72 |             }
      |             ~
   73 |           }
      |           ~
   74 |           if (!__found) {
      |           ~~~~~~~~~~~~~~~
   75 |             __groups.push_back(__struct4{__key, std::vector<Stat>{Stat{c, o}}});
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |           }
      |           ~
   77 |         }
      |         ~
   78 |         if (!__matched0) {
      |         ~~~~~~~~~~~~~~~~~~
   79 |           auto o = std::decay_t<decltype(*(orders).begin())>{};
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |           auto __key = c.name;
      |           ~~~~~~~~~~~~~~~~~~~~
   81 |           bool __found = false;
      |           ~~~~~~~~~~~~~~~~~~~~~
   82 |           for (auto &__g : __groups) {
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   83 |             if (__any_eq(__g.key, __key)) {
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   84 |               __g.items.push_back(Stat{c, o});
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   85 |               __found = true;
      |               ~~~~~~~~~~~~~~~
   86 |               break;
      |               ~~~~~~
   87 |             }
      |             ~
   88 |           }
      |           ~
   89 |           if (!__found) {
      |           ~~~~~~~~~~~~~~~
   90 |             __groups.push_back(__struct4{__key, std::vector<Stat>{Stat{c, o}}});
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   91 |           }
      |           ~
   92 |         }
      |         ~
   93 |       }
      |       ~
   94 |     }
      |     ~
   95 |     std::vector<__struct5> __items;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   96 |     for (auto &g : __groups) {
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~
   97 |       __items.push_back(__struct5{g.key, ((int)([&]() {
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   98 |                                             std::vector<Stat> __items;
      |                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~
   99 |                                             for (auto r : g.items) {
      |                                             ~~~~~~~~~~~~~~~~~~~~~~~~
  100 |                                               if (!((r.o != Order{})))
      |                                               ~~~~~~~~~~~~~~~~~~~~~~~~
  101 |                                                 continue;
      |                                                 ~~~~~~~~~
  102 |                                               __items.push_back(r);
      |                                               ~~~~~~~~~~~~~~~~~~~~~
  103 |                                             }
      |                                             ~
  104 |                                             return __items;
      |                                             ~~~~~~~~~~~~~~~
  105 |                                           })()
      |                                           ~~~~
  106 |                                               .size())});
      |                                               ~~~~~~~~~~~
  107 |     }
      |     ~
  108 |     return __items;
      |     ~~~~~~~~~~~~~~~
  109 |   })();
      |   ~~^~
/workspace/mochi/tests/machine/x/cpp/group_by_left_join.cpp:113:22: error: ‘struct Stat’ has no member named ‘name’
  113 |       std::cout << s.name;
      |                      ^~~~
/workspace/mochi/tests/machine/x/cpp/group_by_left_join.cpp:117:22: error: ‘struct Stat’ has no member named ‘count’
  117 |       std::cout << s.count;
      |                      ^~~~~
