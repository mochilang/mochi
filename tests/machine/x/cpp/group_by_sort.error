line 58: ../../../tests/machine/x/cpp/group_by_sort.cpp: In lambda function:
../../../tests/machine/x/cpp/group_by_sort.cpp:58:37: error: lambda-expression in unevaluated context only available with ‘-std=c++20’ or ‘-std=gnu++20’
   58 |   std::vector<std::pair<decltype((-([&](auto v) {
      |                                     ^
../../../tests/machine/x/cpp/group_by_sort.cpp:61:29: error: lambda-expression in unevaluated context only available with ‘-std=c++20’ or ‘-std=gnu++20’
   61 |                         })(([&]() {
      |                             ^
../../../tests/machine/x/cpp/group_by_sort.cpp:69:25: error: template argument 1 is invalid
   69 |                         __struct3>>
      |                         ^~~~~~~~~
../../../tests/machine/x/cpp/group_by_sort.cpp:69:34: error: template argument 1 is invalid
   69 |                         __struct3>>
      |                                  ^~
../../../tests/machine/x/cpp/group_by_sort.cpp:69:34: error: template argument 2 is invalid
../../../tests/machine/x/cpp/group_by_sort.cpp:72:13: error: request for member ‘push_back’ in ‘__items’, which is of non-class type ‘int’
   72 |     __items.push_back(
      |             ^~~~~~~~~
../../../tests/machine/x/cpp/group_by_sort.cpp:84:16: warning: narrowing conversion of ‘<lambda closure object><lambda()>::<lambda(auto:3)>().<lambda()>::<lambda(auto:3)>(<lambda()>::<lambda()>())’ from ‘int’ to ‘bool’ [-Wnarrowing]
   82 |              g.key, ([&](auto v) {
      |                     ~~~~~~~~~~~~~~
   83 |                return std::accumulate(v.begin(), v.end(), 0);
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   84 |              })(([&]() {
      |              ~~^~~~~~~~~
   85 |                std::vector<decltype(std::declval<__struct1>().val)> __items;
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   86 |                for (auto x : g.items) {
      |                ~~~~~~~~~~~~~~~~~~~~~~~~
   87 |                  __items.push_back(x.val);
      |                  ~~~~~~~~~~~~~~~~~~~~~~~~~
   88 |                }
      |                ~
   89 |                return __items;
      |                ~~~~~~~~~~~~~~~
   90 |              })())}});
      |              ~~~~~
../../../tests/machine/x/cpp/group_by_sort.cpp:92:21: error: request for member ‘begin’ in ‘__items’, which is of non-class type ‘int’
   92 |   std::sort(__items.begin(), __items.end(),
      |                     ^~~~~
../../../tests/machine/x/cpp/group_by_sort.cpp:92:38: error: request for member ‘end’ in ‘__items’, which is of non-class type ‘int’
   92 |   std::sort(__items.begin(), __items.end(),
      |                                      ^~~
../../../tests/machine/x/cpp/group_by_sort.cpp:95:18: error: ‘begin’ was not declared in this scope; did you mean ‘std::begin’?
   95 |   for (auto &p : __items)
      |                  ^~~~~~~
      |                  std::begin
In file included from /usr/include/c++/13/string:53,
                 from /usr/include/c++/13/bits/locale_classes.h:40,
                 from /usr/include/c++/13/bits/ios_base.h:41,
                 from /usr/include/c++/13/ios:44,
                 from /usr/include/c++/13/ostream:40,
                 from /usr/include/c++/13/iostream:41,
                 from ../../../tests/machine/x/cpp/group_by_sort.cpp:2:
/usr/include/c++/13/bits/range_access.h:114:37: note: ‘std::begin’ declared here
  114 |   template<typename _Tp> const _Tp* begin(const valarray<_Tp>&) noexcept;
      |                                     ^~~~~
../../../tests/machine/x/cpp/group_by_sort.cpp:95:18: error: ‘end’ was not declared in this scope; did you mean ‘std::end’?
   95 |   for (auto &p : __items)
      |                  ^~~~~~~
      |                  std::end
/usr/include/c++/13/bits/range_access.h:116:37: note: ‘std::end’ declared here
  116 |   template<typename _Tp> const _Tp* end(const valarray<_Tp>&) noexcept;
      |                                     ^~~

 57 |   }
 58 |   std::vector<std::pair<decltype((-([&](auto v) {
 59 |                           return std::accumulate(
