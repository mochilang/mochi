line 74: ../../../tests/machine/x/cpp/group_items_iteration.cpp: In instantiation of ‘main()::<lambda(auto:1)> [with auto:1 = std::vector<int>]’:
../../../tests/machine/x/cpp/group_items_iteration.cpp:74:7:   required from here
../../../tests/machine/x/cpp/group_items_iteration.cpp:72:18: error: no matching function for call to ‘std::vector<int>::push_back(__struct3)’
   72 |       v.push_back(__struct3{g.key, total});
      |       ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/13/vector:66,
                 from ../../../tests/machine/x/cpp/group_items_iteration.cpp:4:
/usr/include/c++/13/bits/stl_vector.h:1281:7: note: candidate: ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; value_type = int]’
 1281 |       push_back(const value_type& __x)
      |       ^~~~~~~~~
/usr/include/c++/13/bits/stl_vector.h:1281:35: note:   no known conversion for argument 1 from ‘__struct3’ to ‘const std::vector<int>::value_type&’ {aka ‘const int&’}
 1281 |       push_back(const value_type& __x)
      |                 ~~~~~~~~~~~~~~~~~~^~~
/usr/include/c++/13/bits/stl_vector.h:1298:7: note: candidate: ‘void std::vector<_Tp, _Alloc>::push_back(value_type&&) [with _Tp = int; _Alloc = std::allocator<int>; value_type = int]’
 1298 |       push_back(value_type&& __x)
      |       ^~~~~~~~~
/usr/include/c++/13/bits/stl_vector.h:1298:30: note:   no known conversion for argument 1 from ‘__struct3’ to ‘std::vector<int>::value_type&&’ {aka ‘int&&’}
 1298 |       push_back(value_type&& __x)
      |                 ~~~~~~~~~~~~~^~~
../../../tests/machine/x/cpp/group_items_iteration.cpp: In lambda function:
../../../tests/machine/x/cpp/group_items_iteration.cpp:80:28: error: request for member ‘tag’ in ‘r’, which is of non-class type ‘int’
   80 |       __items.push_back({r.tag, r});
      |                            ^~~
../../../tests/machine/x/cpp/group_items_iteration.cpp:80:24: error: no matching function for call to ‘std::vector<std::pair<std::__cxx11::basic_string<char>, __struct3> >::push_back(<brace-enclosed initializer list>)’
   80 |       __items.push_back({r.tag, r});
      |       ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
/usr/include/c++/13/bits/stl_vector.h:1281:7: note: candidate: ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::pair<std::__cxx11::basic_string<char>, __struct3>; _Alloc = std::allocator<std::pair<std::__cxx11::basic_string<char>, __struct3> >; value_type = std::pair<std::__cxx11::basic_string<char>, __struct3>]’
 1281 |       push_back(const value_type& __x)
      |       ^~~~~~~~~
/usr/include/c++/13/bits/stl_vector.h:1281:35: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const std::vector<std::pair<std::__cxx11::basic_string<char>, __struct3> >::value_type&’ {aka ‘const std::pair<std::__cxx11::basic_string<char>, __struct3>&’}
 1281 |       push_back(const value_type& __x)
      |                 ~~~~~~~~~~~~~~~~~~^~~
/usr/include/c++/13/bits/stl_vector.h:1298:7: note: candidate: ‘void std::vector<_Tp, _Alloc>::push_back(value_type&&) [with _Tp = std::pair<std::__cxx11::basic_string<char>, __struct3>; _Alloc = std::allocator<std::pair<std::__cxx11::basic_string<char>, __struct3> >; value_type = std::pair<std::__cxx11::basic_string<char>, __struct3>]’
 1298 |       push_back(value_type&& __x)
      |       ^~~~~~~~~
/usr/include/c++/13/bits/stl_vector.h:1298:30: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘std::vector<std::pair<std::__cxx11::basic_string<char>, __struct3> >::value_type&&’ {aka ‘std::pair<std::__cxx11::basic_string<char>, __struct3>&&’}
 1298 |       push_back(value_type&& __x)
      |                 ~~~~~~~~~~~~~^~~

 73 |       return v;
 74 |     })(tmp);
 75 |   }
