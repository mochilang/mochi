// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
#include <iostream>
#include <string>
#include <vector>

struct Customer {
  int id;
  decltype(std::string("Alice")) name;
};
struct Order {
  int id;
  int customerId;
};
struct Item {
  int orderId;
  decltype(std::string("a")) sku;
};
struct Result {
  decltype(o.id) orderId;
  decltype(c.name) name;
  decltype(i) item;
};
int main() {
  std::vector<Customer> customers = {Customer{1, std::string("Alice")},
                                     Customer{2, std::string("Bob")}};
  std::vector<Order> orders = {Order{100, 1}, Order{101, 2}};
  std::vector<Item> items = {Item{100, std::string("a")}};
  std::vector<Result> result = ([&]() {
    std::vector<Result> __items;
    for (auto o : orders) {
      for (auto c : customers) {
        if (!((o.customerId == c.id)))
          continue;
        {
          bool __matched1 = false;
          for (auto i : items) {
            if (!((o.id == i.orderId)))
              continue;
            __matched1 = true;
            __items.push_back(Result{o.id, c.name, i});
          }
          if (!__matched1) {
            auto i = std::decay_t<decltype(*(items).begin())>{};
            __items.push_back(Result{o.id, c.name, i});
          }
        }
      }
    }
    return __items;
  })();
  std::cout << std::string("--- Left Join Multi ---") << std::endl;
  for (auto r : result) {
    {
      std::cout << r.orderId;
      std::cout << ' ';
      std::cout << r.name;
      std::cout << ' ';
      std::cout << r.item;
      std::cout << std::endl;
    }
  }
  return 0;
}
