line 16: ../../../tests/machine/x/cpp/order_by_map.cpp: In lambda function:
../../../tests/machine/x/cpp/order_by_map.cpp:16:22: error: no matching function for call to ‘std::vector<std::pair<int, __struct1> >::push_back(<brace-enclosed initializer list>)’
   16 |     __items.push_back({__struct1{x.a, x.b}, x});
      |     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/13/vector:66,
                 from ../../../tests/machine/x/cpp/order_by_map.cpp:4:
/usr/include/c++/13/bits/stl_vector.h:1281:7: note: candidate: ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::pair<int, __struct1>; _Alloc = std::allocator<std::pair<int, __struct1> >; value_type = std::pair<int, __struct1>]’
 1281 |       push_back(const value_type& __x)
      |       ^~~~~~~~~
/usr/include/c++/13/bits/stl_vector.h:1281:35: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const std::vector<std::pair<int, __struct1> >::value_type&’ {aka ‘const std::pair<int, __struct1>&’}
 1281 |       push_back(const value_type& __x)
      |                 ~~~~~~~~~~~~~~~~~~^~~
/usr/include/c++/13/bits/stl_vector.h:1298:7: note: candidate: ‘void std::vector<_Tp, _Alloc>::push_back(value_type&&) [with _Tp = std::pair<int, __struct1>; _Alloc = std::allocator<std::pair<int, __struct1> >; value_type = std::pair<int, __struct1>]’
 1298 |       push_back(value_type&& __x)
      |       ^~~~~~~~~
/usr/include/c++/13/bits/stl_vector.h:1298:30: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘std::vector<std::pair<int, __struct1> >::value_type&&’ {aka ‘std::pair<int, __struct1>&&’}
 1298 |       push_back(value_type&& __x)
      |                 ~~~~~~~~~~~~~^~~

 15 |   for (auto x : data) {
 16 |     __items.push_back({__struct1{x.a, x.b}, x});
 17 |   }
