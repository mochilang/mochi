// Generated by Mochi compiler v0.10.27 on 2025-07-17T11:53:04Z
import 'dart:io';

var customers = [
  {'id': 1, 'name': 'Alice'},
  {'id': 2, 'name': 'Bob'},
];

var orders = [
  {'id': 100, 'customerId': 1, 'total': 250},
  {'id': 101, 'customerId': 3, 'total': 80},
];

var result = (() {
  var _q0 = <dynamic>[];
  for (var o in orders) {
    var _jt1 = <dynamic>[];
    for (var c in customers) {
      if (!(_equal(o['customerId'], c['id']))) continue;
      _jt1.add(c);
    }
    if (_jt1.isEmpty) _jt1.add(null);
    for (var c in _jt1) {
      _q0.add({
  'orderId': o['id'],
  'customer': c,
  'total': o['total'],
});
    }
  }
  return _q0;
})();

void main() {
  print('--- Left Join ---');
  for (var entry in result) {
    _print(['Order', entry['orderId'], 'customer', entry['customer'], 'total', entry['total']]);
  }
}

bool _equal(dynamic a, dynamic b) {
    if (a is List && b is List) {
        if (a.length != b.length) return false;
        for (var i = 0; i < a.length; i++) { if (!_equal(a[i], b[i])) return false; }
        return true;
    }
    if (a is Map && b is Map) {
        if (a.length != b.length) return false;
        for (var k in a.keys) { if (!b.containsKey(k) || !_equal(a[k], b[k])) return false; }
        return true;
    }
    return a == b;
}

void _print(List<dynamic> args) {
    for (var i = 0; i < args.length; i++) {
        if (i > 0) stdout.write(' ');
        var v = args[i];
        if (v is List) {
            stdout.write(v.join(' '));
        } else if (v is double && v == v.roundToDouble()) {
            stdout.write(v.toInt());
        } else {
            stdout.write(v);
        }
    }
    stdout.writeln();
}
