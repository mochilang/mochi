// Generated by Mochi compiler v0.10.27 on 2025-07-17T11:53:04Z
import 'dart:io';
import 'dart:convert';

var customers = [
  {'id': 1, 'name': 'Alice'},
  {'id': 2, 'name': 'Bob'},
  {'id': 3, 'name': 'Charlie'},
];

var orders = [
  {'id': 100, 'customerId': 1},
  {'id': 101, 'customerId': 1},
  {'id': 102, 'customerId': 2},
];

var stats = (() {
  var _q0 = <dynamic>[];
  var _g1 = <String, List<dynamic>>{};
  for (var c in customers) {
    var _jt2 = <dynamic>[];
    for (var o in orders) {
      if (!(_equal(o['customerId'], c['id']))) continue;
      _jt2.add(o);
    }
    if (_jt2.isEmpty) _jt2.add(null);
    for (var o in _jt2) {
      var _k4 = c['name'];
      var _k4_s = jsonEncode(_k4);
      _g1.putIfAbsent(_k4_s, () => <dynamic>[]).add({'c': c, 'o': o});
    }
  }
  for (var entry in _g1.entries) {
    var g = entry.value;
    var _k4 = jsonDecode(entry.key);
    _q0.add({
  'name': _k4,
  'count': (() {
  var _q5 = <dynamic>[];
  for (var r in g) {
    if (r['o'] == null) continue;
    _q5.add(r);
  }
  return _q5;
})().length,
});
  }
  return _q0;
})();

void main() {
  print('--- Group Left Join ---');
  for (var s in stats) {
    _print([s['name'], 'orders:', s['count']]);
  }
}

bool _equal(dynamic a, dynamic b) {
    if (a is List && b is List) {
        if (a.length != b.length) return false;
        for (var i = 0; i < a.length; i++) { if (!_equal(a[i], b[i])) return false; }
        return true;
    }
    if (a is Map && b is Map) {
        if (a.length != b.length) return false;
        for (var k in a.keys) { if (!b.containsKey(k) || !_equal(a[k], b[k])) return false; }
        return true;
    }
    return a == b;
}

void _print(List<dynamic> args) {
    for (var i = 0; i < args.length; i++) {
        if (i > 0) stdout.write(' ');
        var v = args[i];
        if (v is List) {
            stdout.write(v.join(' '));
        } else if (v is double && v == v.roundToDouble()) {
            stdout.write(v.toInt());
        } else {
            stdout.write(v);
        }
    }
    stdout.writeln();
}
