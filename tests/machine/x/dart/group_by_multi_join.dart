// Generated by Mochi compiler v0.10.27 on 2025-07-17T11:53:04Z
import 'dart:convert';

var nations = [
  {'id': 1, 'name': 'A'},
  {'id': 2, 'name': 'B'},
];

var suppliers = [
  {'id': 1, 'nation': 1},
  {'id': 2, 'nation': 2},
];

var partsupp = [
  {
  '_part': 100,
  'supplier': 1,
  'cost': 10,
  'qty': 2,
},
  {
  '_part': 100,
  'supplier': 2,
  'cost': 20,
  'qty': 1,
},
  {
  '_part': 200,
  'supplier': 1,
  'cost': 5,
  'qty': 3,
},
];

var filtered = (() {
  var _q0 = <dynamic>[];
  for (var ps in partsupp) {
    for (var s in suppliers) {
      if (!(s['id'] == ps['supplier'])) continue;
      for (var n in nations) {
        if (!(n['id'] == s['nation'])) continue;
        if (!(n['name'] == 'A')) continue;
        _q0.add({
  '_part': ps['_part'],
  'value': (ps['cost'] as num) * (ps['qty'] as num),
});
      }
    }
  }
  return _q0;
})();

var grouped = (() {
  var _q1 = <dynamic>[];
  var _g2 = <String, List<dynamic>>{};
  for (var x in filtered) {
    var _k4 = x['_part'];
    var _k4_s = jsonEncode(_k4);
    _g2.putIfAbsent(_k4_s, () => <dynamic>[]).add(x);
  }
  for (var entry in _g2.entries) {
    var g = entry.value;
    var _k4 = jsonDecode(entry.key);
    _q1.add({
  '_part': _k4,
  'total': _sum(g.map((r) => r['value'])),
});
  }
  return _q1;
})();

void main() {
  print(grouped);
}

dynamic _min(dynamic v) {
    List<dynamic>? list;
    if (v is List) list = v;
    else if (v is Map && v['items'] is List) list = (v['items'] as List);
    else if (v is Map && v['Items'] is List) list = (v['Items'] as List);
    else { try { var it = (v as dynamic).items; if (it is List) list = it; } catch (_) {} }
    if (list == null || list.isEmpty) return 0;
    var m = list[0];
    for (var n in list) { if ((n as Comparable).compareTo(m) < 0) m = n; }
    return m;
}

num _sum(dynamic v) {
    Iterable<dynamic>? list;
    if (v is Iterable) list = v;
    else if (v is Map && v['items'] is Iterable) list = (v['items'] as Iterable);
    else if (v is Map && v['Items'] is Iterable) list = (v['Items'] as Iterable);
    else { try { var it = (v as dynamic).items; if (it is Iterable) list = it; } catch (_) {} }
    if (list == null) return 0;
    num s = 0;
    for (var n in list) s += (n as num);
    return s;
}
