// Generated by Mochi compiler v0.10.24 on 2025-07-13T01:47:01Z
import 'dart:convert';

var customer = [
  {'c_custkey': 1, 'c_mktsegment': 'BUILDING'},
  {'c_custkey': 2, 'c_mktsegment': 'AUTOMOBILE'},
];

var orders = [
  {
    'o_orderkey': 100,
    'o_custkey': 1,
    'o_orderdate': '1995-03-14',
    'o_shippriority': 1,
  },
  {
    'o_orderkey': 200,
    'o_custkey': 2,
    'o_orderdate': '1995-03-10',
    'o_shippriority': 2,
  },
];

var lineitem = [
  {
    'l_orderkey': 100,
    'l_extendedprice': 1000,
    'l_discount': 0.05,
    'l_shipdate': '1995-03-16',
  },
  {
    'l_orderkey': 100,
    'l_extendedprice': 500,
    'l_discount': 0,
    'l_shipdate': '1995-03-20',
  },
  {
    'l_orderkey': 200,
    'l_extendedprice': 1000,
    'l_discount': 0.1,
    'l_shipdate': '1995-03-14',
  },
];

var cutoff = '1995-03-15';

var segment = 'BUILDING';

var building_customers = (() {
  var _q0 = <dynamic>[];
  for (var c in customer) {
    if (!(c['c_mktsegment'] == segment)) continue;
    _q0.add(c);
  }
  return _q0;
})();

var valid_orders = (() {
  var _q1 = <dynamic>[];
  for (var o in orders) {
    for (var c in building_customers) {
      if (!(o['o_custkey'] == c['c_custkey'])) continue;
      if (!(o['o_orderdate'].toString().compareTo(cutoff) < 0)) continue;
      _q1.add(o);
    }
  }
  return _q1;
})();

var valid_lineitems = (() {
  var _q2 = <dynamic>[];
  for (var l in lineitem) {
    if (!(l['l_shipdate'].toString().compareTo(cutoff) > 0)) continue;
    _q2.add(l);
  }
  return _q2;
})();

var order_line_join = (() {
  var _q3 = <dynamic>[];
  var _g4 = <String, List<dynamic>>{};
  for (var o in valid_orders) {
    for (var l in valid_lineitems) {
      if (!(l['l_orderkey'] == o['o_orderkey'])) continue;
      var _k7 = {
        'o_orderkey': o['o_orderkey'],
        'o_orderdate': o['o_orderdate'],
        'o_shippriority': o['o_shippriority'],
      };
      var _k7_s = jsonEncode(_k7);
      _g4.putIfAbsent(_k7_s, () => <dynamic>[]).add({'o': o, 'l': l});
    }
  }
  for (var entry in _g4.entries) {
    var g = entry.value;
    var _k7 = jsonDecode(entry.key);
    _q3.add([
      [
        -(() {
          var _t11 = (() {
            var _q10 = <dynamic>[];
            for (var r in g) {
              _q10.add(
                (r['l']['l_extendedprice'] as num) *
                    ((1 - (r['l']['l_discount'] as num)) as num),
              );
            }
            return _q10;
          })();
          return _t11.reduce((a, b) => a + b);
        })(),
        _k7['o_orderdate'],
      ],
      {
        'l_orderkey': _k7['o_orderkey'],
        'revenue': (() {
          var _t9 = (() {
            var _q8 = <dynamic>[];
            for (var r in g) {
              _q8.add(
                (r['l']['l_extendedprice'] as num) *
                    ((1 - (r['l']['l_discount'] as num)) as num),
              );
            }
            return _q8;
          })();
          return _t9.reduce((a, b) => a + b);
        })(),
        'o_orderdate': _k7['o_orderdate'],
        'o_shippriority': _k7['o_shippriority'],
      },
    ]);
  }
  _q3.sort(
    (a, b) => (jsonEncode(a[0]) as Comparable).compareTo(jsonEncode(b[0])),
  );
  _q3 = [for (var x in _q3) x[1]];
  return _q3;
})();

void main() {
  print(jsonEncode(order_line_join));
}
