// Generated by Mochi C# compiler
using System;
using System.Collections.Generic;
using System.Linq;

public class Program {
    public static void Main() {
        var nations = new dynamic[] { new Dictionary<string, dynamic> { { "id", 1 }, { "name", "A" } }, new Dictionary<string, dynamic> { { "id", 2 }, { "name", "B" } } };
        var suppliers = new dynamic[] { new Dictionary<string, long> { { "id", 1 }, { "nation", 1 } }, new Dictionary<string, long> { { "id", 2 }, { "nation", 2 } } };
        var partsupp = new dynamic[] { new Dictionary<string, dynamic> { { "part", 100 }, { "supplier", 1 }, { "cost", 10.000000 }, { "qty", 2 } }, new Dictionary<string, dynamic> { { "part", 100 }, { "supplier", 2 }, { "cost", 20.000000 }, { "qty", 1 } }, new Dictionary<string, dynamic> { { "part", 200 }, { "supplier", 1 }, { "cost", 5.000000 }, { "qty", 3 } } };
        var filtered = new Func<List<Dictionary<string, dynamic>>>(() => {
    var _res = new List<Dictionary<string, dynamic>>();
    foreach (var ps in partsupp) {
        foreach (var s in suppliers) {
            if (!((s["id"] == ps["supplier"]))) continue;
            foreach (var n in nations) {
                if (!((n["id"] == s["nation"]))) continue;
                if (!((n["name"] == "A"))) continue;
                _res.Add(new Dictionary<string, dynamic> { { "part", ps["part"] }, { "value", (ps["cost"] * ps["qty"]) } });
            }
        }
    }
    return _res;
})();
        var grouped = filtered.GroupBy(x => x["part"]).Select(g => new Dictionary<string, dynamic> { { "part", g.Key }, { "total", _sum(g.Select(r => r["value"])) } }).ToList();
        Console.WriteLine(grouped);
    }
    static double _sum(dynamic v) {
        if (v == null) return 0.0;
        double _sum = 0;
        foreach (var it in v) {
            _sum += Convert.ToDouble(it);
        }
        return _sum;
    }
    
}
