// Generated by Mochi C# compiler
using System;
using System.Collections.Generic;
using System.Linq;

public class Program {
    public static void Main() {
        var items = new Dictionary<string, dynamic>[] { new Dictionary<string, dynamic> { { "cat", "a" }, { "val", 10 }, { "flag", true } }, new Dictionary<string, dynamic> { { "cat", "a" }, { "val", 5 }, { "flag", false } }, new Dictionary<string, dynamic> { { "cat", "b" }, { "val", 20 }, { "flag", true } } };
        var result = items.GroupBy(i => i["cat"]).Select(g => new Dictionary<string, dynamic> { { "cat", g.Key }, { "share", (_sum(g.Select(x => (x["flag"] ? x["val"] : 0))) / _sum(g.Select(x => x["val"]))) } }).OrderBy(g => g.Key).ToList();
        Console.WriteLine(result);
    }
    static double _sum(dynamic v) {
        if (v == null) return 0.0;
        double _sum = 0;
        foreach (var it in v) {
            _sum += Convert.ToDouble(it);
        }
        return _sum;
    }
    
}
