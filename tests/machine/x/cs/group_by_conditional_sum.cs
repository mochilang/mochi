// Generated by Mochi C# compiler
using System;
using System.Collections.Generic;
using System.Linq;

public class Program {
    public static void Main() {
        var items = new Dictionary<string, dynamic>[] { new Dictionary<string, dynamic> { { "cat", "a" }, { "val", 10 }, { "flag", true } }, new Dictionary<string, dynamic> { { "cat", "a" }, { "val", 5 }, { "flag", false } }, new Dictionary<string, dynamic> { { "cat", "b" }, { "val", 20 }, { "flag", true } } };
        var result = items.GroupBy(i => i["cat"]).Select(g => new Dictionary<string, dynamic> { { "cat", g.Key }, { "share", (Enumerable.Sum(g.Select(x => (x["flag"] ? x["val"] : 0)).Select(_tmp2=>Convert.ToDouble(_tmp2))) / Enumerable.Sum(g.Select(x => x["val"]).Select(_tmp3=>Convert.ToDouble(_tmp3)))) } }).OrderBy(g => g.Key).ToList();
        Console.WriteLine(result);
    }
}
