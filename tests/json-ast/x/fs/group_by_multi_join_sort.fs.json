{
  "source": "// Generated 2025-07-22 04:52 +0700\n\ntype Anon1 = {\n    n_nationkey: int\n    n_name: string\n}\ntype Anon2 = {\n    n_nationkey: int\n    n_name: string\n}\ntype Anon3 = {\n    c_custkey: int\n    c_name: string\n    c_acctbal: float\n    c_nationkey: int\n    c_address: string\n    c_phone: string\n    c_comment: string\n}\ntype Anon4 = {\n    c_custkey: int\n    c_name: string\n    c_acctbal: float\n    c_nationkey: int\n    c_address: string\n    c_phone: string\n    c_comment: string\n}\ntype Anon5 = {\n    o_orderkey: int\n    o_custkey: int\n    o_orderdate: string\n}\ntype Anon6 = {\n    o_orderkey: int\n    o_custkey: int\n    o_orderdate: string\n}\ntype Anon7 = {\n    l_orderkey: int\n    l_returnflag: string\n    l_extendedprice: float\n    l_discount: float\n}\ntype Anon8 = {\n    l_orderkey: int\n    l_returnflag: string\n    l_extendedprice: float\n    l_discount: float\n}\ntype Anon9 = {\n    c_custkey: obj\n    c_name: obj\n    c_acctbal: obj\n    c_address: obj\n    c_phone: obj\n    c_comment: obj\n    n_name: obj\n}\ntype Anon10 = {\n    c_custkey: obj\n    c_name: obj\n    revenue: float\n    c_acctbal: obj\n    n_name: obj\n    c_address: obj\n    c_phone: obj\n    c_comment: obj\n}\ntype Anon11 = {\n    c: Anon4\n    o: Anon6\n    l: Anon8\n    n: Anon2\n}\ntype Anon12 = {\n    key: Anon9\n    items: Anon11 list\n}\ntype Anon13 = {\n    c_custkey: obj\n    c_name: obj\n    revenue: float\n    c_acctbal: obj\n    n_name: obj\n    c_address: obj\n    c_phone: obj\n    c_comment: obj\n}\nlet nation: Anon2 list = [{ n_nationkey = 1; n_name = \"BRAZIL\" }]\nlet customer: Anon4 list = [{ c_custkey = 1; c_name = \"Alice\"; c_acctbal = 100.0; c_nationkey = 1; c_address = \"123 St\"; c_phone = \"123-456\"; c_comment = \"Loyal\" }]\nlet orders: Anon6 list = [{ o_orderkey = 1000; o_custkey = 1; o_orderdate = \"1993-10-15\" }; { o_orderkey = 2000; o_custkey = 1; o_orderdate = \"1994-01-02\" }]\nlet lineitem: Anon8 list = [{ l_orderkey = 1000; l_returnflag = \"R\"; l_extendedprice = 1000.0; l_discount = 0.1 }; { l_orderkey = 2000; l_returnflag = \"N\"; l_extendedprice = 500.0; l_discount = 0.0 }]\nlet start_date: string = \"1993-10-01\"\nlet end_date: string = \"1994-01-01\"\nlet result: Anon13 list = [ for (key, items) in List.groupBy (fun { c = c; o = o; l = l; n = n } -\u003e { c_custkey = c.c_custkey; c_name = c.c_name; c_acctbal = c.c_acctbal; c_address = c.c_address; c_phone = c.c_phone; c_comment = c.c_comment; n_name = n.n_name }) [ for c in customer do for o in orders do if (o.o_custkey) = (c.c_custkey) then for l in lineitem do if (l.l_orderkey) = (o.o_orderkey) then for n in nation do if (n.n_nationkey) = (c.c_nationkey) then if (((o.o_orderdate) \u003e= start_date) \u0026\u0026 ((o.o_orderdate) \u003c end_date)) \u0026\u0026 ((l.l_returnflag) = \"R\") then yield { c = c; o = o; l = l; n = n } : Anon11 ] do\n    let g : Anon12 = { key = key; items = items }\n    yield { c_custkey = g.key.c_custkey; c_name = g.key.c_name; revenue = List.sum [ for x in g.items do yield (x.l.l_extendedprice) * (1 - (x.l.l_discount)) ]; c_acctbal = g.key.c_acctbal; n_name = g.key.n_name; c_address = g.key.c_address; c_phone = g.key.c_phone; c_comment = g.key.c_comment } ]\nprintfn \"%s\" ((\"[\" + (String.concat \", \" (List.map string result))) + \"]\")\n",
  "vars": [
    {
      "name": "nation",
      "expr": "[{ n_nationkey = 1; n_name = \"BRAZIL\" }]",
      "mutable": false,
      "type": "Anon2 list",
      "line": 0,
      "raw": ""
    },
    {
      "name": "customer",
      "expr": "[{ c_custkey = 1; c_name = \"Alice\"; c_acctbal = 100.0; c_nationkey = 1; c_address = \"123 St\"; c_phone = \"123-456\"; c_comment = \"Loyal\" }]",
      "mutable": false,
      "type": "Anon4 list",
      "line": 0,
      "raw": ""
    },
    {
      "name": "orders",
      "expr": "[{ o_orderkey = 1000; o_custkey = 1; o_orderdate = \"1993-10-15\" }; { o_orderkey = 2000; o_custkey = 1; o_orderdate = \"1994-01-02\" }]",
      "mutable": false,
      "type": "Anon6 list",
      "line": 0,
      "raw": ""
    },
    {
      "name": "lineitem",
      "expr": "[{ l_orderkey = 1000; l_returnflag = \"R\"; l_extendedprice = 1000.0; l_discount = 0.1 }; { l_orderkey = 2000; l_returnflag = \"N\"; l_extendedprice = 500.0; l_discount = 0.0 }]",
      "mutable": false,
      "type": "Anon8 list",
      "line": 0,
      "raw": ""
    },
    {
      "name": "start_date",
      "expr": "\"1993-10-01\"",
      "mutable": false,
      "type": "string",
      "line": 0,
      "raw": ""
    },
    {
      "name": "end_date",
      "expr": "\"1994-01-01\"",
      "mutable": false,
      "type": "string",
      "line": 0,
      "raw": ""
    },
    {
      "name": "result",
      "expr": "[ for (key, items) in List.groupBy (fun { c = c; o = o; l = l; n = n } -\u003e { c_custkey = c.c_custkey; c_name = c.c_name; c_acctbal = c.c_acctbal; c_address = c.c_address; c_phone = c.c_phone; c_comment = c.c_comment; n_name = n.n_name }) [ for c in customer do for o in orders do if (o.o_custkey) = (c.c_custkey) then for l in lineitem do if (l.l_orderkey) = (o.o_orderkey) then for n in nation do if (n.n_nationkey) = (c.c_nationkey) then if (((o.o_orderdate) \u003e= start_date) \u0026\u0026 ((o.o_orderdate) \u003c end_date)) \u0026\u0026 ((l.l_returnflag) = \"R\") then yield { c = c; o = o; l = l; n = n } : Anon11 ] do",
      "mutable": false,
      "type": "Anon13 list",
      "line": 0,
      "raw": ""
    }
  ],
  "prints": null,
  "stmts": [
    {
      "name": "g",
      "params": [
        {
          "name": ":",
          "type": ""
        },
        {
          "name": "Anon12",
          "type": ""
        }
      ],
      "ret": "",
      "body": [
        {
          "expr": "{ key = key; items = items }",
          "line": 0,
          "raw": ""
        }
      ],
      "line": 0,
      "raw": ""
    },
    {
      "expr": "((\"[\" + (String.concat \", \" (List.map string result))) + \"]\")",
      "line": 0,
      "raw": ""
    }
  ]
}
