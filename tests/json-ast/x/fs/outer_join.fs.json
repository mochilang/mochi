{
  "source": "// Generated 2025-07-21 18:37 +0700\n\ntype Anon1 = {\n    mutable id: int\n    mutable name: string\n}\ntype Anon2 = {\n    mutable id: int\n    mutable name: string\n}\ntype Anon3 = {\n    mutable id: int\n    mutable customerId: int\n    mutable total: int\n}\ntype Anon4 = {\n    mutable id: int\n    mutable customerId: int\n    mutable total: int\n}\ntype Anon5 = {\n    mutable order: obj\n    mutable customer: obj\n}\ntype Anon6 = {\n    mutable order: obj\n    mutable customer: obj\n}\nlet customers: Anon2 list = [{ id = 1; name = \"Alice\" }; { id = 2; name = \"Bob\" }; { id = 3; name = \"Charlie\" }; { id = 4; name = \"Diana\" }]\nlet orders: Anon4 list = [{ id = 100; customerId = 1; total = 250 }; { id = 101; customerId = 2; total = 125 }; { id = 102; customerId = 1; total = 300 }; { id = 103; customerId = 5; total = 80 }]\nlet result: Anon6 list = [ for o in orders do for c in customers do if (o.customerId) = (c.id) then yield { order = o; customer = c } ]\nprintfn \"%s\" (string \"--- Outer Join using syntax ---\")\nfor row in result do\nif row.order then\nif row.customer then\nprintfn \"%s\" (String.concat \" \" [string \"Order\"; string (row.order.id); string \"by\"; string (row.customer.name); string \"- $\"; string (row.order.total)])\nelse\nprintfn \"%s\" (String.concat \" \" [string \"Order\"; string (row.order.id); string \"by\"; string \"Unknown\"; string \"- $\"; string (row.order.total)])\nelse\nprintfn \"%s\" (String.concat \" \" [string \"Customer\"; string (row.customer.name); string \"has no orders\"])\n",
  "vars": [
    {
      "name": "customers",
      "expr": "[{ id = 1; name = \"Alice\" }; { id = 2; name = \"Bob\" }; { id = 3; name = \"Charlie\" }; { id = 4; name = \"Diana\" }]",
      "mutable": false,
      "type": "Anon2 list",
      "line": 0,
      "raw": ""
    },
    {
      "name": "orders",
      "expr": "[{ id = 100; customerId = 1; total = 250 }; { id = 101; customerId = 2; total = 125 }; { id = 102; customerId = 1; total = 300 }; { id = 103; customerId = 5; total = 80 }]",
      "mutable": false,
      "type": "Anon4 list",
      "line": 0,
      "raw": ""
    },
    {
      "name": "result",
      "expr": "[ for o in orders do for c in customers do if (o.customerId) = (c.id) then yield { order = o; customer = c } ]",
      "mutable": false,
      "type": "Anon6 list",
      "line": 0,
      "raw": ""
    }
  ],
  "prints": [
    "(string \"--- Outer Join using syntax ---\")"
  ],
  "stmts": [
    {
      "var": "row",
      "expr": "result",
      "body": [
        {
          "cond": "row.order",
          "then": [
            {
              "expr": "if row.customer then",
              "line": 0,
              "raw": ""
            }
          ],
          "else": null,
          "line": 0,
          "raw": ""
        },
        {
          "expr": "(String.concat \" \" [string \"Order\"; string (row.order.id); string \"by\"; string (row.customer.name); string \"- $\"; string (row.order.total)])",
          "line": 0,
          "raw": ""
        },
        {
          "expr": "else",
          "line": 0,
          "raw": ""
        },
        {
          "expr": "(String.concat \" \" [string \"Order\"; string (row.order.id); string \"by\"; string \"Unknown\"; string \"- $\"; string (row.order.total)])",
          "line": 0,
          "raw": ""
        },
        {
          "expr": "else",
          "line": 0,
          "raw": ""
        },
        {
          "expr": "(String.concat \" \" [string \"Customer\"; string (row.customer.name); string \"has no orders\"])",
          "line": 0,
          "raw": ""
        }
      ],
      "line": 0,
      "raw": ""
    }
  ]
}
