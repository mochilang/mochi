{
  "nodes": [
    {
      "kind": "type",
      "name": "Result",
      "node": "InterfaceDeclaration",
      "fields": [
        {
          "name": "a",
          "typ": "number"
        }
      ],
      "start": 3,
      "end": 3,
      "endCol": 37,
      "snippet": "export interface Result { a: number }",
      "startOff": 61,
      "endOff": 98,
      "doc": "// Generated by Mochi v0.10.35 on 2025-07-22 16:40:19 GMT+7"
    },
    {
      "kind": "type",
      "name": "M",
      "node": "InterfaceDeclaration",
      "fields": [
        {
          "name": "a",
          "typ": "number"
        }
      ],
      "start": 4,
      "end": 4,
      "endCol": 32,
      "snippet": "export interface M { a: number }",
      "startOff": 99,
      "endOff": 131
    },
    {
      "kind": "var",
      "name": "xs",
      "node": "VariableDeclaration",
      "ret": "number[]",
      "value": "[1, 2, 3]",
      "start": 5,
      "end": 5,
      "endCol": 31,
      "snippet": "const xs: number[] = [1, 2, 3];",
      "startOff": 132,
      "endOff": 163
    },
    {
      "kind": "var",
      "name": "ys",
      "node": "VariableDeclaration",
      "ret": "number[]",
      "value": "(() =\u003e {\n  const result = []\n  for (const x of xs) {\n    if (((x % 2) == 1)) {\n      result.push(x)\n    }\n  }\n  const out = result\n  return out\n})()",
      "start": 6,
      "end": 15,
      "endCol": 5,
      "snippet": "const ys: number[] = (() =\u003e {\n  const result = []\n  for (const x of xs) {\n    if (((x % 2) == 1)) {\n      result.push(x)\n    }\n  }\n  const out = result\n  return out\n})();",
      "startOff": 164,
      "endOff": 334
    },
    {
      "kind": "expr",
      "name": "",
      "node": "ExpressionStatement",
      "expr": "console.log(+ys.includes(1))",
      "start": 16,
      "end": 16,
      "endCol": 29,
      "snippet": "console.log(+ys.includes(1));",
      "startOff": 335,
      "endOff": 364
    },
    {
      "kind": "expr",
      "name": "",
      "node": "ExpressionStatement",
      "expr": "console.log(+ys.includes(2))",
      "start": 17,
      "end": 17,
      "endCol": 29,
      "snippet": "console.log(+ys.includes(2));",
      "startOff": 365,
      "endOff": 394
    },
    {
      "kind": "var",
      "name": "m",
      "node": "VariableDeclaration",
      "ret": "M",
      "value": "{a: 1}",
      "start": 18,
      "end": 18,
      "endCol": 20,
      "snippet": "const m: M = {a: 1};",
      "startOff": 395,
      "endOff": 415
    },
    {
      "kind": "expr",
      "name": "",
      "node": "ExpressionStatement",
      "expr": "console.log(+(\"a\" in m))",
      "start": 19,
      "end": 19,
      "endCol": 25,
      "snippet": "console.log(+(\"a\" in m));",
      "startOff": 416,
      "endOff": 441
    },
    {
      "kind": "expr",
      "name": "",
      "node": "ExpressionStatement",
      "expr": "console.log(+(\"b\" in m))",
      "start": 20,
      "end": 20,
      "endCol": 25,
      "snippet": "console.log(+(\"b\" in m));",
      "startOff": 442,
      "endOff": 467
    },
    {
      "kind": "var",
      "name": "s",
      "node": "VariableDeclaration",
      "ret": "string",
      "value": "\"hello\"",
      "start": 21,
      "end": 21,
      "endCol": 26,
      "snippet": "const s: string = \"hello\";",
      "startOff": 468,
      "endOff": 494
    },
    {
      "kind": "expr",
      "name": "",
      "node": "ExpressionStatement",
      "expr": "console.log(+s.includes(\"ell\"))",
      "start": 22,
      "end": 22,
      "endCol": 32,
      "snippet": "console.log(+s.includes(\"ell\"));",
      "startOff": 495,
      "endOff": 527
    },
    {
      "kind": "expr",
      "name": "",
      "node": "ExpressionStatement",
      "expr": "console.log(+s.includes(\"foo\"))",
      "start": 23,
      "end": 23,
      "endCol": 32,
      "snippet": "console.log(+s.includes(\"foo\"));",
      "startOff": 528,
      "endOff": 560
    }
  ]
}
