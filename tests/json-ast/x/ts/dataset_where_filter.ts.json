{
  "nodes": [
    {
      "kind": "type",
      "name": "Result",
      "node": "InterfaceDeclaration",
      "fields": [
        {
          "name": "name",
          "typ": "string"
        },
        {
          "name": "age",
          "typ": "number"
        }
      ],
      "start": 3,
      "end": 3,
      "endCol": 53,
      "snippet": "export interface Result { name: string; age: number }",
      "startOff": 61,
      "endOff": 114,
      "doc": "// Generated by Mochi v0.10.35 on 2025-07-22 14:07:02 GMT+7"
    },
    {
      "kind": "type",
      "name": "People",
      "node": "InterfaceDeclaration",
      "fields": [
        {
          "name": "name",
          "typ": "string"
        },
        {
          "name": "age",
          "typ": "number"
        }
      ],
      "start": 4,
      "end": 4,
      "endCol": 53,
      "snippet": "export interface People { name: string; age: number }",
      "startOff": 115,
      "endOff": 168
    },
    {
      "kind": "var",
      "name": "people",
      "node": "VariableDeclaration",
      "ret": "People[]",
      "value": "[{name: \"Alice\", age: 30}, {name: \"Bob\", age: 15}, {name: \"Charlie\", age: 65}, {name: \"Diana\", age: 45}]",
      "start": 5,
      "end": 5,
      "endCol": 130,
      "snippet": "const people: People[] = [{name: \"Alice\", age: 30}, {name: \"Bob\", age: 15}, {name: \"Charlie\", age: 65}, {name: \"Diana\", age: 45}];",
      "startOff": 169,
      "endOff": 299
    },
    {
      "kind": "var",
      "name": "adults",
      "node": "VariableDeclaration",
      "ret": "Result[]",
      "value": "(() =\u003e {\n  const result: Result[] = []\n  for (const person of people) {\n    if ((person[\"age\"] \u003e= 18)) {\n      result.push({name: person[\"name\"], age: person[\"age\"], is_senior: (person[\"age\"] \u003e= 60)})\n    }\n  }\n  const out = result\n  return out\n})()",
      "start": 6,
      "end": 15,
      "endCol": 5,
      "snippet": "const adults: Result[] = (() =\u003e {\n  const result: Result[] = []\n  for (const person of people) {\n    if ((person[\"age\"] \u003e= 18)) {\n      result.push({name: person[\"name\"], age: person[\"age\"], is_senior: (person[\"age\"] \u003e= 60)})\n    }\n  }\n  const out = result\n  return out\n})();",
      "startOff": 300,
      "endOff": 575
    },
    {
      "kind": "expr",
      "name": "",
      "node": "ExpressionStatement",
      "expr": "console.log(String(\"--- Adults ---\"))",
      "start": 16,
      "end": 16,
      "endCol": 38,
      "snippet": "console.log(String(\"--- Adults ---\"));",
      "startOff": 576,
      "endOff": 614
    },
    {
      "kind": "forof",
      "name": "",
      "node": "ForOfStatement",
      "body": "\n  console.log((String(person[\"name\"]) + \" \" + String(\"is\") + \" \" + String(person[\"age\"]) + \" \" + String((person[\"is_senior\"] ? \" (senior)\" : \"\"))).trim());\n",
      "iter": "person",
      "list": "adults",
      "bodyNodes": [
        {
          "kind": "expr",
          "name": "",
          "node": "ExpressionStatement",
          "expr": "console.log((String(person[\"name\"]) + \" \" + String(\"is\") + \" \" + String(person[\"age\"]) + \" \" + String((person[\"is_senior\"] ? \" (senior)\" : \"\"))).trim())",
          "start": 2,
          "startCol": 2,
          "end": 2,
          "endCol": 155,
          "snippet": "console.log((String(person[\"name\"]) + \" \" + String(\"is\") + \" \" + String(person[\"age\"]) + \" \" + String((person[\"is_senior\"] ? \" (senior)\" : \"\"))).trim());",
          "startOff": 3,
          "endOff": 156
        }
      ],
      "start": 17,
      "end": 19,
      "endCol": 1,
      "snippet": "for (const person of adults) {\n  console.log((String(person[\"name\"]) + \" \" + String(\"is\") + \" \" + String(person[\"age\"]) + \" \" + String((person[\"is_senior\"] ? \" (senior)\" : \"\"))).trim());\n}",
      "startOff": 615,
      "endOff": 803
    }
  ]
}
