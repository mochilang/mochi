{
  "nodes": [
    {
      "kind": "expr",
      "name": "",
      "node": "ExpressionStatement",
      "expr": "console.log(String(\"[\" + (Array.from(new Set([...[1, 2], ...[2, 3]]))).join(\", \") + \"]\"))",
      "start": 3,
      "end": 3,
      "endCol": 90,
      "snippet": "console.log(String(\"[\" + (Array.from(new Set([...[1, 2], ...[2, 3]]))).join(\", \") + \"]\"));",
      "startOff": 61,
      "endOff": 151,
      "doc": "// Generated by Mochi v0.10.35 on 2025-07-22 14:07:07 GMT+7"
    },
    {
      "kind": "expr",
      "name": "",
      "node": "ExpressionStatement",
      "expr": "console.log(String(\"[\" + ([1, 2, 3].filter(x =\u003e ![2].includes(x))).join(\", \") + \"]\"))",
      "start": 4,
      "end": 4,
      "endCol": 86,
      "snippet": "console.log(String(\"[\" + ([1, 2, 3].filter(x =\u003e ![2].includes(x))).join(\", \") + \"]\"));",
      "startOff": 152,
      "endOff": 238
    },
    {
      "kind": "expr",
      "name": "",
      "node": "ExpressionStatement",
      "expr": "console.log(String(\"[\" + ([1, 2, 3].filter(x =\u003e [2, 4].includes(x))).join(\", \") + \"]\"))",
      "start": 5,
      "end": 5,
      "endCol": 88,
      "snippet": "console.log(String(\"[\" + ([1, 2, 3].filter(x =\u003e [2, 4].includes(x))).join(\", \") + \"]\"));",
      "startOff": 239,
      "endOff": 327
    },
    {
      "kind": "expr",
      "name": "",
      "node": "ExpressionStatement",
      "expr": "console.log(String((Array.isArray([...[1, 2], ...[2, 3]]) || typeof [...[1, 2], ...[2, 3]] === 'string' ? [...[1, 2], ...[2, 3]].length : Object.keys([...[1, 2], ...[2, 3]] ?? {}).length)))",
      "start": 6,
      "end": 6,
      "endCol": 190,
      "snippet": "console.log(String((Array.isArray([...[1, 2], ...[2, 3]]) || typeof [...[1, 2], ...[2, 3]] === 'string' ? [...[1, 2], ...[2, 3]].length : Object.keys([...[1, 2], ...[2, 3]] ?? {}).length)));",
      "startOff": 328,
      "endOff": 518
    }
  ]
}
