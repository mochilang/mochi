{
  "nodes": [
    {
      "kind": "type",
      "name": "Item",
      "node": "InterfaceDeclaration",
      "fields": [
        {
          "name": "n",
          "typ": "number"
        },
        {
          "name": "v",
          "typ": "string"
        }
      ],
      "start": 3,
      "end": 3,
      "endCol": 46,
      "snippet": "export interface Item { n: number; v: string }",
      "startOff": 61,
      "endOff": 107,
      "doc": "// Generated by Mochi v0.10.36 on 2025-07-22 17:16:19 GMT+7"
    },
    {
      "kind": "var",
      "name": "items",
      "node": "VariableDeclaration",
      "ret": "Item[]",
      "value": "[{n: 1, v: \"a\"}, {n: 1, v: \"b\"}, {n: 2, v: \"c\"}]",
      "start": 4,
      "end": 4,
      "endCol": 71,
      "snippet": "const items: Item[] = [{n: 1, v: \"a\"}, {n: 1, v: \"b\"}, {n: 2, v: \"c\"}];",
      "startOff": 108,
      "endOff": 179
    },
    {
      "kind": "var",
      "name": "result",
      "node": "VariableDeclaration",
      "ret": "any[]",
      "value": "(() =\u003e {\n  const result = []\n  for (const i of items) {\n    result.push({k: i.n, v: i.v})\n  }\n  result.sort((a, b) =\u003e a.k.n \u003c b.k.n ? -1 : a.k.n \u003e b.k.n ? 1 : 0)\n  const out = result.map(r =\u003e r.v)\n  return out\n})()",
      "start": 5,
      "end": 13,
      "endCol": 5,
      "snippet": "const result: any[] = (() =\u003e {\n  const result = []\n  for (const i of items) {\n    result.push({k: i.n, v: i.v})\n  }\n  result.sort((a, b) =\u003e a.k.n \u003c b.k.n ? -1 : a.k.n \u003e b.k.n ? 1 : 0)\n  const out = result.map(r =\u003e r.v)\n  return out\n})();",
      "startOff": 180,
      "endOff": 417
    },
    {
      "kind": "expr",
      "name": "",
      "node": "ExpressionStatement",
      "expr": "console.log(\"[\" + (result).join(\", \") + \"]\")",
      "start": 14,
      "end": 14,
      "endCol": 45,
      "snippet": "console.log(\"[\" + (result).join(\", \") + \"]\");",
      "startOff": 418,
      "endOff": 463
    }
  ]
}
