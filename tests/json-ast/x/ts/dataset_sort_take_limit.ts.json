{
  "nodes": [
    {
      "kind": "type",
      "name": "Result",
      "node": "InterfaceDeclaration",
      "fields": [
        {
          "name": "name",
          "typ": "string"
        },
        {
          "name": "price",
          "typ": "number"
        }
      ],
      "start": 3,
      "end": 3,
      "endCol": 55,
      "snippet": "export interface Result { name: string; price: number }",
      "startOff": 61,
      "endOff": 116,
      "doc": "// Generated by Mochi v0.10.35 on 2025-07-22 14:07:02 GMT+7"
    },
    {
      "kind": "type",
      "name": "Product",
      "node": "InterfaceDeclaration",
      "fields": [
        {
          "name": "name",
          "typ": "string"
        },
        {
          "name": "price",
          "typ": "number"
        }
      ],
      "start": 4,
      "end": 4,
      "endCol": 56,
      "snippet": "export interface Product { name: string; price: number }",
      "startOff": 117,
      "endOff": 173
    },
    {
      "kind": "var",
      "name": "products",
      "node": "VariableDeclaration",
      "ret": "Product[]",
      "value": "[{name: \"Laptop\", price: 1500}, {name: \"Smartphone\", price: 900}, {name: \"Tablet\", price: 600}, {name: \"Monitor\", price: 300}, {name: \"Keyboard\", price: 100}, {name: \"Mouse\", price: 50}, {name: \"Headphones\", price: 200}]",
      "start": 5,
      "end": 5,
      "endCol": 249,
      "snippet": "const products: Product[] = [{name: \"Laptop\", price: 1500}, {name: \"Smartphone\", price: 900}, {name: \"Tablet\", price: 600}, {name: \"Monitor\", price: 300}, {name: \"Keyboard\", price: 100}, {name: \"Mouse\", price: 50}, {name: \"Headphones\", price: 200}];",
      "startOff": 174,
      "endOff": 423
    },
    {
      "kind": "var",
      "name": "expensive",
      "node": "VariableDeclaration",
      "ret": "Record\u003cstring, any\u003e[]",
      "value": "(() =\u003e {\n  const result = []\n  for (const p of products) {\n    result.push({k: -p[\"price\"], v: p})\n  }\n  result.sort((a, b) =\u003e {const ak = a.k; const bk = b.k; if (ak \u003c bk) return -1; if (ak \u003e bk) return 1; const sak = JSON.stringify(ak); const sbk = JSON.stringify(bk); return sak \u003c sbk ? -1 : sak \u003e sbk ? 1 : 0})\n  const out = result.map(r =\u003e r.v)\n  return out.slice(1, (1 + 3))\n})()",
      "start": 6,
      "end": 14,
      "endCol": 5,
      "snippet": "const expensive: Record\u003cstring, any\u003e[] = (() =\u003e {\n  const result = []\n  for (const p of products) {\n    result.push({k: -p[\"price\"], v: p})\n  }\n  result.sort((a, b) =\u003e {const ak = a.k; const bk = b.k; if (ak \u003c bk) return -1; if (ak \u003e bk) return 1; const sak = JSON.stringify(ak); const sbk = JSON.stringify(bk); return sak \u003c sbk ? -1 : sak \u003e sbk ? 1 : 0})\n  const out = result.map(r =\u003e r.v)\n  return out.slice(1, (1 + 3))\n})();",
      "startOff": 424,
      "endOff": 851
    },
    {
      "kind": "expr",
      "name": "",
      "node": "ExpressionStatement",
      "expr": "console.log(String(\"--- Top products (excluding most expensive) ---\"))",
      "start": 15,
      "end": 15,
      "endCol": 71,
      "snippet": "console.log(String(\"--- Top products (excluding most expensive) ---\"));",
      "startOff": 852,
      "endOff": 923
    },
    {
      "kind": "forof",
      "name": "",
      "node": "ForOfStatement",
      "body": "\n  console.log((String(item[\"name\"]) + \" \" + String(\"costs $\") + \" \" + String(item[\"price\"])).trim());\n",
      "iter": "item",
      "list": "expensive",
      "bodyNodes": [
        {
          "kind": "expr",
          "name": "",
          "node": "ExpressionStatement",
          "expr": "console.log((String(item[\"name\"]) + \" \" + String(\"costs $\") + \" \" + String(item[\"price\"])).trim())",
          "start": 2,
          "startCol": 2,
          "end": 2,
          "endCol": 101,
          "snippet": "console.log((String(item[\"name\"]) + \" \" + String(\"costs $\") + \" \" + String(item[\"price\"])).trim());",
          "startOff": 3,
          "endOff": 102
        }
      ],
      "start": 16,
      "end": 18,
      "endCol": 1,
      "snippet": "for (const item of expensive) {\n  console.log((String(item[\"name\"]) + \" \" + String(\"costs $\") + \" \" + String(item[\"price\"])).trim());\n}",
      "startOff": 924,
      "endOff": 1059
    }
  ]
}
