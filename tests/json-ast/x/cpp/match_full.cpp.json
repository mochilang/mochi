{
  "funcs": [
    {
      "Name": "classify",
      "Params": [
        {
          "Name": "n",
          "Typ": "int"
        }
      ],
      "Ret": "string",
      "Body": "{\n    return ((n == 0) ? std::string(\"zero\") : ((n == 1) ? std::string(\"one\") : std::string(\"many\")));\n"
    },
    {
      "Name": "main",
      "Params": null,
      "Ret": "int",
      "Body": "{\n    std::cout \u003c\u003c std::boolalpha \u003c\u003c label \u003c\u003c std::endl;\n    std::cout \u003c\u003c std::boolalpha \u003c\u003c mood \u003c\u003c std::endl;\n    std::cout \u003c\u003c std::boolalpha \u003c\u003c status \u003c\u003c std::endl;\n    std::cout \u003c\u003c std::boolalpha \u003c\u003c classify(0) \u003c\u003c std::endl;\n    std::cout \u003c\u003c std::boolalpha \u003c\u003c classify(5) \u003c\u003c std::endl;\n    return 0;\n"
    }
  ],
  "enums": null,
  "structs": null,
  "globals": [
    {
      "Name": "x",
      "Typ": "",
      "Value": "2"
    },
    {
      "Name": "label",
      "Typ": "",
      "Value": "(x == 1) ? std::string(\"one\") : ((x == 2) ? std::string(\"two\") : ((x == 3) ? std::string(\"three\") : std::string(\"unknown\"))"
    },
    {
      "Name": "day",
      "Typ": "",
      "Value": "std::string(\"sun\""
    },
    {
      "Name": "mood",
      "Typ": "",
      "Value": "(day == std::string(\"mon\")) ? std::string(\"tired\") : ((day == std::string(\"fri\")) ? std::string(\"excited\") : ((day == std::string(\"sun\")) ? std::string(\"relaxed\") : std::string(\"normal\"))"
    },
    {
      "Name": "ok",
      "Typ": "",
      "Value": ""
    },
    {
      "Name": "auto",
      "Typ": "",
      "Value": ""
    }
  ],
  "source": "// Generated by Mochi transpiler v0.10.33 on 2025-07-21 18:20:11 GMT+7\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003csstream\u003e\n#include \u003ciomanip\u003e\n\n\nstd::string classify(int n) {\n    return ((n == 0) ? std::string(\"zero\") : ((n == 1) ? std::string(\"one\") : std::string(\"many\")));\n}\n\nauto x = 2;\nauto label = ((x == 1) ? std::string(\"one\") : ((x == 2) ? std::string(\"two\") : ((x == 3) ? std::string(\"three\") : std::string(\"unknown\"))));\nauto day = std::string(\"sun\");\nauto mood = ((day == std::string(\"mon\")) ? std::string(\"tired\") : ((day == std::string(\"fri\")) ? std::string(\"excited\") : ((day == std::string(\"sun\")) ? std::string(\"relaxed\") : std::string(\"normal\"))));\nauto ok = true;\nauto status = ((ok == true) ? std::string(\"confirmed\") : ((ok == false) ? std::string(\"denied\") : ));\n\nint main() {\n    std::cout \u003c\u003c std::boolalpha \u003c\u003c label \u003c\u003c std::endl;\n    std::cout \u003c\u003c std::boolalpha \u003c\u003c mood \u003c\u003c std::endl;\n    std::cout \u003c\u003c std::boolalpha \u003c\u003c status \u003c\u003c std::endl;\n    std::cout \u003c\u003c std::boolalpha \u003c\u003c classify(0) \u003c\u003c std::endl;\n    std::cout \u003c\u003c std::boolalpha \u003c\u003c classify(5) \u003c\u003c std::endl;\n    return 0;\n}\n"
}