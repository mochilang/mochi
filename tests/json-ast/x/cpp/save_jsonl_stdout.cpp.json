{
  "funcs": [
    {
      "Name": "operator\u003c\u003c",
      "Params": [
        {
          "Name": "os",
          "Typ": "std::ostream"
        },
        {
          "Name": "v",
          "Typ": "PeopleItem"
        }
      ],
      "Ret": "std::ostream",
      "Body": "{\n    os \u003c\u003c '{' \u003c\u003c \"'name': \"\u003c\u003c \"'\" \u003c\u003c v.name \u003c\u003c \"'\"\n \u003c\u003c \", \" \u003c\u003c \"'age': \"\u003c\u003c v.age\n \u003c\u003c '}';\n    return os;\n"
    },
    {
      "Name": "main",
      "Params": null,
      "Ret": "int",
      "Body": "{\n    for (const auto\u0026 _row : people) {\n        std::ostringstream __buf;\n        __buf \u003c\u003c _row;\n        auto __line = __buf.str();\n        for(auto\u0026 ch: __line) if(ch=='\\'') ch='\"';\n        std::cout \u003c\u003c __line \u003c\u003c std::endl;\n    }\n    return 0;\n"
    }
  ],
  "enums": null,
  "structs": [
    {
      "Name": "PeopleItem",
      "Fields": [
        {
          "Name": "name",
          "Typ": "string"
        },
        {
          "Name": "age",
          "Typ": "int"
        }
      ]
    }
  ],
  "globals": [
    {
      "Name": "people",
      "Typ": "list\u003cPeopleItem\u003e",
      "Value": "std::vector{PeopleItem{.name = std::string(\"Alice\"), .age = 30}, PeopleItem{.name = std::string(\"Bob\"), .age = 25}}"
    }
  ],
  "source": "// Generated by Mochi transpiler v0.10.35 on 2025-07-22 14:09:55 GMT+7\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cvector\u003e\n#include \u003cmap\u003e\n#include \u003csstream\u003e\n#include \u003ciomanip\u003e\n#include \u003coptional\u003e\n\n\nstruct PeopleItem {\n    std::string name;\n    int age;\n    auto operator\u003c=\u003e(const PeopleItem\u0026) const = default;\n};\n\nstd::ostream\u0026 operator\u003c\u003c(std::ostream\u0026 os, const PeopleItem\u0026 v) {\n    os \u003c\u003c '{' \u003c\u003c \"'name': \"\u003c\u003c \"'\" \u003c\u003c v.name \u003c\u003c \"'\"\n \u003c\u003c \", \" \u003c\u003c \"'age': \"\u003c\u003c v.age\n \u003c\u003c '}';\n    return os;\n}\n\nstd::vector\u003cPeopleItem\u003e people = std::vector{PeopleItem{.name = std::string(\"Alice\"), .age = 30}, PeopleItem{.name = std::string(\"Bob\"), .age = 25}};\n\nint main() {\n    for (const auto\u0026 _row : people) {\n        std::ostringstream __buf;\n        __buf \u003c\u003c _row;\n        auto __line = __buf.str();\n        for(auto\u0026 ch: __line) if(ch=='\\'') ch='\"';\n        std::cout \u003c\u003c __line \u003c\u003c std::endl;\n    }\n    return 0;\n}\n"
}