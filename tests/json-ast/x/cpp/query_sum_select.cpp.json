{
  "funcs": [
    {
      "Name": "main",
      "Params": null,
      "Ret": "int",
      "Body": "{\n    std::cout \u003c\u003c std::boolalpha \u003c\u003c result \u003c\u003c std::endl;\n    return 0;\n"
    }
  ],
  "enums": null,
  "structs": null,
  "globals": [
    {
      "Name": "nums",
      "Typ": "",
      "Value": "std::vector{1, 2, 3}"
    },
    {
      "Name": "std::vector\u003cauto\u003e",
      "Typ": "",
      "Value": ""
    }
  ],
  "source": "// Generated by Mochi transpiler v0.10.33 on 2025-07-21 18:20:15 GMT+7\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cvector\u003e\n#include \u003cnumeric\u003e\n#include \u003csstream\u003e\n#include \u003ciomanip\u003e\n\n\nauto nums = std::vector{1, 2, 3};\nstd::vector\u003cauto\u003e result = ([]{ std::vector\u003cauto\u003e __items;\nfor (auto n : nums) {\n    if((n \u003e 1)) {\n        __items.push_back(std::accumulate(n.begin(), n.end(), 0));\n    }\n}\nreturn __items; }());\n\nint main() {\n    std::cout \u003c\u003c std::boolalpha \u003c\u003c result \u003c\u003c std::endl;\n    return 0;\n}\n"
}