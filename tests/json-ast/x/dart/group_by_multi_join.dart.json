{
  "functions": [
    {
      "name": "main",
      "params": [],
      "ret": "void",
      "body": [
        "  let nations: list\u003cNation\u003e = [Nation(id: 1, name: \"A\"), Nation(id: 2, name: \"B\")]",
        "  let suppliers: list\u003cSupplier\u003e = [Supplier(id: 1, nation: 1), Supplier(id: 2, nation: 2)]",
        "  let partsupp: list\u003cPartsupp\u003e = [Partsupp(part: 100, supplier: 1, cost: 10.0, qty: 2), Partsupp(part: 100, supplier: 2, cost: 20.0, qty: 1), Partsupp(part: 200, supplier: 1, cost: 5.0, qty: 3)]",
        "  let filtered: list\u003cFiltered\u003e = [for (var ps in partsupp) for (var s in suppliers) for (var n in nations) if (s.id == ps.supplier \u0026\u0026 n.id == s.nation \u0026\u0026 n.name == \"A\") Filtered(part: ps.part, value: ps.cost * ps.qty)]",
        "  let grouped: list\u003cS1\u003e = (() {",
        "  let groups = \u003cString, Map\u003cString, dynamic\u003e\u003e{}",
        "  for (var x in filtered) {",
        "    let key = x.part",
        "    let ks = key.toString()",
        "    let g = groups[ks]",
        "    if (g == null) {",
        "      let g = {'key': key, 'items': []}",
        "      groups[ks] = g",
        "    }",
        "    (g['items'] as List).add(x)",
        "  }",
        "  let _list = groups.values.toList()",
        "  let res = \u003cS1\u003e[]",
        "  for (var g in _list) {",
        "    res.add(S1(part: g[\"key\"], total: [for (var r in g[\"items\"]) r.value].isEmpty ? 0 : ([for (var r in g[\"items\"]) r.value].reduce((a, b) =\u003e a + b))))",
        "  }",
        "  return res",
        "  })();",
        "  print(\"[\" + grouped.join(', ') + \"]\")"
      ],
      "start": 34,
      "end": 59
    }
  ],
  "classes": [
    {
      "name": "S1",
      "fields": [
        {
          "name": "part",
          "type": "dynamic"
        },
        {
          "name": "total",
          "type": "num"
        }
      ],
      "start": 2,
      "end": 6,
      "doc": "Generated by Mochi transpiler"
    },
    {
      "name": "Nation",
      "fields": [
        {
          "name": "id",
          "type": "int"
        },
        {
          "name": "name",
          "type": "String"
        }
      ],
      "start": 7,
      "end": 12
    },
    {
      "name": "Supplier",
      "fields": [
        {
          "name": "id",
          "type": "int"
        },
        {
          "name": "nation",
          "type": "int"
        }
      ],
      "start": 13,
      "end": 18
    },
    {
      "name": "Partsupp",
      "fields": [
        {
          "name": "part",
          "type": "int"
        },
        {
          "name": "supplier",
          "type": "int"
        },
        {
          "name": "cost",
          "type": "num"
        },
        {
          "name": "qty",
          "type": "int"
        }
      ],
      "start": 19,
      "end": 26
    },
    {
      "name": "Filtered",
      "fields": [
        {
          "name": "part",
          "type": "int"
        },
        {
          "name": "value",
          "type": "num"
        }
      ],
      "start": 27,
      "end": 32
    }
  ]
}
