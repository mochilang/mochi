{
  "functions": [
    {
      "name": "main",
      "params": [],
      "ret": "void",
      "body": [
        "  let nation: list\u003cNation\u003e = [Nation(n_nationkey: 1, n_name: \"BRAZIL\")]",
        "  let customer: list\u003cCustomer\u003e = [Customer(c_custkey: 1, c_name: \"Alice\", c_acctbal: 100.0, c_nationkey: 1, c_address: \"123 St\", c_phone: \"123-456\", c_comment: \"Loyal\")]",
        "  let orders: list\u003cOrder\u003e = [Order(o_orderkey: 1000, o_custkey: 1, o_orderdate: \"1993-10-15\"), Order(o_orderkey: 2000, o_custkey: 1, o_orderdate: \"1994-01-02\")]",
        "  let lineitem: list\u003cLineitem\u003e = [Lineitem(l_orderkey: 1000, l_returnflag: \"R\", l_extendedprice: 1000.0, l_discount: 0.1), Lineitem(l_orderkey: 2000, l_returnflag: \"N\", l_extendedprice: 500.0, l_discount: 0.0)]",
        "  let start_date: string = \"1993-10-01\"",
        "  let end_date: string = \"1994-01-01\"",
        "  let result: list\u003cS1\u003e = (() {",
        "  let groups = \u003cString, Map\u003cString, dynamic\u003e\u003e{}",
        "  for (var c in customer) {",
        "    for (var o in orders) {",
        "      for (var l in lineitem) {",
        "        for (var n in nation) {",
        "          if (!(o.o_custkey == c.c_custkey \u0026\u0026 l.l_orderkey == o.o_orderkey \u0026\u0026 n.n_nationkey == c.c_nationkey \u0026\u0026 o.o_orderdate \u003e= start_date \u0026\u0026 o.o_orderdate \u003c end_date \u0026\u0026 l.l_returnflag == \"R\")) continue",
        "          let key = {\"c_custkey\": c.c_custkey, \"c_name\": c.c_name, \"c_acctbal\": c.c_acctbal, \"c_address\": c.c_address, \"c_phone\": c.c_phone, \"c_comment\": c.c_comment, \"n_name\": n.n_name}",
        "          let ks = key.toString()",
        "          let g = groups[ks]",
        "          if (g == null) {",
        "            let g = {'key': key, 'items': []}",
        "            groups[ks] = g",
        "          }",
        "          (g['items'] as List).add({\"c\": c, \"o\": o, \"l\": l, \"n\": n})",
        "        }",
        "      }",
        "    }",
        "  }",
        "  let _list = groups.values.toList()",
        "  _list.sort(((a, b) =\u003e [for (var x in b.items) x.l.l_extendedprice * (1 - x.l.l_discount)].isEmpty ? 0 : ([for (var x in b.items) x.l.l_extendedprice * (1 - x.l.l_discount)].reduce((a, b) =\u003e a + b)).compareTo([for (var x in a.items) x.l.l_extendedprice * (1 - x.l.l_discount)].isEmpty ? 0 : ([for (var x in a.items) x.l.l_extendedprice * (1 - x.l.l_discount)].reduce((a, b) =\u003e a + b)))))",
        "  let res = \u003cS1\u003e[]",
        "  for (var g in _list) {",
        "    res.add(S1(c_custkey: g[\"key\"].c_custkey, c_name: g[\"key\"].c_name, revenue: [for (var x in g[\"items\"]) x.l.l_extendedprice * (1 - x.l.l_discount)].isEmpty ? 0 : ([for (var x in g[\"items\"]) x.l.l_extendedprice * (1 - x.l.l_discount)].reduce((a, b) =\u003e a + b)), c_acctbal: g[\"key\"].c_acctbal, n_name: g[\"key\"].n_name, c_address: g[\"key\"].c_address, c_phone: g[\"key\"].c_phone, c_comment: g[\"key\"].c_comment))",
        "  }",
        "  return res",
        "  })();",
        "  print(\"[\" + result.join(', ') + \"]\")"
      ],
      "start": 46,
      "end": 81
    }
  ],
  "classes": [
    {
      "name": "S1",
      "fields": [
        {
          "name": "c_custkey",
          "type": "dynamic"
        },
        {
          "name": "c_name",
          "type": "dynamic"
        },
        {
          "name": "revenue",
          "type": "num"
        },
        {
          "name": "c_acctbal",
          "type": "dynamic"
        },
        {
          "name": "n_name",
          "type": "dynamic"
        },
        {
          "name": "c_address",
          "type": "dynamic"
        },
        {
          "name": "c_phone",
          "type": "dynamic"
        },
        {
          "name": "c_comment",
          "type": "dynamic"
        }
      ],
      "start": 2,
      "end": 12,
      "doc": "Generated by Mochi transpiler"
    },
    {
      "name": "Nation",
      "fields": [
        {
          "name": "n_nationkey",
          "type": "int"
        },
        {
          "name": "n_name",
          "type": "String"
        }
      ],
      "start": 13,
      "end": 18
    },
    {
      "name": "Customer",
      "fields": [
        {
          "name": "c_custkey",
          "type": "int"
        },
        {
          "name": "c_name",
          "type": "String"
        },
        {
          "name": "c_acctbal",
          "type": "num"
        },
        {
          "name": "c_nationkey",
          "type": "int"
        },
        {
          "name": "c_address",
          "type": "String"
        },
        {
          "name": "c_phone",
          "type": "String"
        },
        {
          "name": "c_comment",
          "type": "String"
        }
      ],
      "start": 19,
      "end": 29
    },
    {
      "name": "Order",
      "fields": [
        {
          "name": "o_orderkey",
          "type": "int"
        },
        {
          "name": "o_custkey",
          "type": "int"
        },
        {
          "name": "o_orderdate",
          "type": "String"
        }
      ],
      "start": 30,
      "end": 36
    },
    {
      "name": "Lineitem",
      "fields": [
        {
          "name": "l_orderkey",
          "type": "int"
        },
        {
          "name": "l_returnflag",
          "type": "String"
        },
        {
          "name": "l_extendedprice",
          "type": "num"
        },
        {
          "name": "l_discount",
          "type": "num"
        }
      ],
      "start": 37,
      "end": 44
    }
  ]
}
