{
  "types": [
    {
      "name": "Counter",
      "kind": "struct",
      "access": "",
      "startline": 4,
      "endline": 7,
      "fields": [
        {
          "name": "n",
          "type": "int",
          "access": "public",
          "line": 5,
          "value": "",
          "static": false,
          "doc": ""
        }
      ],
      "methods": [
        {
          "name": "ToString",
          "params": [],
          "ret": "string",
          "access": "public",
          "static": false,
          "ast": {
            "kind": "block"
          },
          "startline": 6,
          "endline": 6,
          "doc": ""
        }
      ],
      "doc": ""
    },
    {
      "name": "Program",
      "kind": "class",
      "access": "",
      "startline": 8,
      "endline": 18,
      "fields": [
        {
          "name": "c",
          "type": "Counter",
          "access": "",
          "line": 9,
          "value": "new Counter{n = 0}",
          "ast": {
            "kind": "new",
            "value": "Counter",
            "children": [
              {
                "kind": "init",
                "children": [
                  {
                    "kind": "field",
                    "value": "n",
                    "children": [
                      {
                        "kind": "literal",
                        "value": "0"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "static": true,
          "doc": ""
        }
      ],
      "methods": [
        {
          "name": "inc",
          "params": [
            {
              "name": "c",
              "type": "Counter"
            }
          ],
          "ret": "void",
          "access": "",
          "static": true,
          "ast": {
            "kind": "block",
            "children": [
              {
                "kind": "assign",
                "children": [
                  {
                    "kind": "member",
                    "value": "n",
                    "children": [
                      {
                        "kind": "ident",
                        "value": "c"
                      }
                    ]
                  },
                  {
                    "kind": "binary",
                    "value": "+",
                    "children": [
                      {
                        "kind": "member",
                        "value": "n",
                        "children": [
                          {
                            "kind": "ident",
                            "value": "c"
                          }
                        ]
                      },
                      {
                        "kind": "literal",
                        "value": "1"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "startline": 10,
          "endline": 12,
          "doc": ""
        },
        {
          "name": "Main",
          "params": [],
          "ret": "void",
          "access": "",
          "static": true,
          "ast": {
            "kind": "block",
            "children": [
              {
                "kind": "call",
                "value": "inc",
                "children": [
                  {
                    "kind": "ident",
                    "value": "c"
                  }
                ]
              },
              {
                "kind": "call",
                "value": "print",
                "children": [
                  {
                    "kind": "member",
                    "value": "n",
                    "children": [
                      {
                        "kind": "ident",
                        "value": "c"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "startline": 14,
          "endline": 17,
          "doc": ""
        }
      ],
      "doc": ""
    }
  ]
}
