{
  "types": [
    {
      "name": "Program",
      "kind": "class",
      "access": "",
      "startline": 5,
      "endline": 11,
      "fields": [
        {
          "name": "data",
          "type": "int[]",
          "access": "",
          "line": 6,
          "value": "new int[]{1, 2}",
          "ast": {
            "kind": "array",
            "children": [
              {
                "kind": "literal",
                "value": "1"
              },
              {
                "kind": "literal",
                "value": "2"
              }
            ]
          },
          "static": true,
          "doc": ""
        },
        {
          "name": "flag",
          "type": "bool",
          "access": "",
          "line": 7,
          "value": "((from x in data where (x == 1) select x).ToArray().Any())",
          "ast": {
            "kind": "call",
            "value": "Any",
            "children": [
              {
                "kind": "call",
                "value": "ToArray",
                "children": [
                  {
                    "kind": "unknown"
                  }
                ]
              }
            ]
          },
          "static": true,
          "doc": ""
        }
      ],
      "methods": [
        {
          "name": "Main",
          "params": [],
          "ret": "void",
          "access": "",
          "static": true,
          "ast": {
            "kind": "block",
            "children": [
              {
                "kind": "call",
                "value": "print",
                "children": [
                  {
                    "kind": "cond",
                    "children": [
                      {
                        "kind": "ident",
                        "value": "flag"
                      },
                      {
                        "kind": "literal",
                        "value": "true"
                      },
                      {
                        "kind": "literal",
                        "value": "false"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "startline": 8,
          "endline": 10,
          "doc": ""
        }
      ],
      "doc": ""
    }
  ]
}
