{
  "Types": [
    {
      "Name": "Customer",
      "Kind": "struct",
      "Access": "",
      "StartLine": 6,
      "EndLine": 10,
      "Fields": [
        {
          "Name": "id",
          "Type": "int",
          "Access": "public",
          "Line": 7,
          "Value": "",
          "Static": false,
          "Doc": ""
        },
        {
          "Name": "name",
          "Type": "string",
          "Access": "public",
          "Line": 8,
          "Value": "",
          "Static": false,
          "Doc": ""
        }
      ],
      "Methods": [
        {
          "Name": "ToString",
          "Params": [],
          "Ret": "string",
          "Access": "public",
          "Static": false,
          "Body": [],
          "Ast": {
            "Kind": "block"
          },
          "StartLine": 9,
          "EndLine": 9,
          "Doc": ""
        }
      ],
      "Doc": ""
    },
    {
      "Name": "Order",
      "Kind": "struct",
      "Access": "",
      "StartLine": 11,
      "EndLine": 15,
      "Fields": [
        {
          "Name": "id",
          "Type": "int",
          "Access": "public",
          "Line": 12,
          "Value": "",
          "Static": false,
          "Doc": ""
        },
        {
          "Name": "customerId",
          "Type": "int",
          "Access": "public",
          "Line": 13,
          "Value": "",
          "Static": false,
          "Doc": ""
        }
      ],
      "Methods": [
        {
          "Name": "ToString",
          "Params": [],
          "Ret": "string",
          "Access": "public",
          "Static": false,
          "Body": [],
          "Ast": {
            "Kind": "block"
          },
          "StartLine": 14,
          "EndLine": 14,
          "Doc": ""
        }
      ],
      "Doc": ""
    },
    {
      "Name": "GRow",
      "Kind": "struct",
      "Access": "",
      "StartLine": 16,
      "EndLine": 20,
      "Fields": [
        {
          "Name": "c",
          "Type": "Customer",
          "Access": "public",
          "Line": 17,
          "Value": "",
          "Static": false,
          "Doc": ""
        },
        {
          "Name": "o",
          "Type": "Order",
          "Access": "public",
          "Line": 18,
          "Value": "",
          "Static": false,
          "Doc": ""
        }
      ],
      "Methods": [
        {
          "Name": "ToString",
          "Params": [],
          "Ret": "string",
          "Access": "public",
          "Static": false,
          "Body": [],
          "Ast": {
            "Kind": "block"
          },
          "StartLine": 19,
          "EndLine": 19,
          "Doc": ""
        }
      ],
      "Doc": ""
    },
    {
      "Name": "GGroup",
      "Kind": "struct",
      "Access": "",
      "StartLine": 21,
      "EndLine": 25,
      "Fields": [
        {
          "Name": "key",
          "Type": "string",
          "Access": "public",
          "Line": 22,
          "Value": "",
          "Static": false,
          "Doc": ""
        },
        {
          "Name": "items",
          "Type": "GRow[]",
          "Access": "public",
          "Line": 23,
          "Value": "",
          "Static": false,
          "Doc": ""
        }
      ],
      "Methods": [
        {
          "Name": "ToString",
          "Params": [],
          "Ret": "string",
          "Access": "public",
          "Static": false,
          "Body": [],
          "Ast": {
            "Kind": "block"
          },
          "StartLine": 24,
          "EndLine": 24,
          "Doc": ""
        }
      ],
      "Doc": ""
    },
    {
      "Name": "GResult",
      "Kind": "struct",
      "Access": "",
      "StartLine": 26,
      "EndLine": 30,
      "Fields": [
        {
          "Name": "name",
          "Type": "string",
          "Access": "public",
          "Line": 27,
          "Value": "",
          "Static": false,
          "Doc": ""
        },
        {
          "Name": "count",
          "Type": "int",
          "Access": "public",
          "Line": 28,
          "Value": "",
          "Static": false,
          "Doc": ""
        }
      ],
      "Methods": [
        {
          "Name": "ToString",
          "Params": [],
          "Ret": "string",
          "Access": "public",
          "Static": false,
          "Body": [],
          "Ast": {
            "Kind": "block"
          },
          "StartLine": 29,
          "EndLine": 29,
          "Doc": ""
        }
      ],
      "Doc": ""
    },
    {
      "Name": "Program",
      "Kind": "class",
      "Access": "",
      "StartLine": 31,
      "EndLine": 41,
      "Fields": [
        {
          "Name": "customers",
          "Type": "Customer[]",
          "Access": "",
          "Line": 32,
          "Value": "new Customer[]{new Customer{id = 1, name = \"Alice\"}, new Customer{id = 2, name = \"Bob\"}, new Customer{id = 3, name = \"Charlie\"}}",
          "Ast": {
            "Kind": "array",
            "Children": [
              {
                "Kind": "new",
                "Value": "Customer",
                "Children": [
                  {
                    "Kind": "init",
                    "Children": [
                      {
                        "Kind": "field",
                        "Value": "id",
                        "Children": [
                          {
                            "Kind": "literal",
                            "Value": "1"
                          }
                        ]
                      },
                      {
                        "Kind": "field",
                        "Value": "name",
                        "Children": [
                          {
                            "Kind": "literal",
                            "Value": "Alice"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "Kind": "new",
                "Value": "Customer",
                "Children": [
                  {
                    "Kind": "init",
                    "Children": [
                      {
                        "Kind": "field",
                        "Value": "id",
                        "Children": [
                          {
                            "Kind": "literal",
                            "Value": "2"
                          }
                        ]
                      },
                      {
                        "Kind": "field",
                        "Value": "name",
                        "Children": [
                          {
                            "Kind": "literal",
                            "Value": "Bob"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "Kind": "new",
                "Value": "Customer",
                "Children": [
                  {
                    "Kind": "init",
                    "Children": [
                      {
                        "Kind": "field",
                        "Value": "id",
                        "Children": [
                          {
                            "Kind": "literal",
                            "Value": "3"
                          }
                        ]
                      },
                      {
                        "Kind": "field",
                        "Value": "name",
                        "Children": [
                          {
                            "Kind": "literal",
                            "Value": "Charlie"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "Static": true,
          "Doc": ""
        },
        {
          "Name": "orders",
          "Type": "Order[]",
          "Access": "",
          "Line": 33,
          "Value": "new Order[]{new Order{id = 100, customerId = 1}, new Order{id = 101, customerId = 1}, new Order{id = 102, customerId = 2}}",
          "Ast": {
            "Kind": "array",
            "Children": [
              {
                "Kind": "new",
                "Value": "Order",
                "Children": [
                  {
                    "Kind": "init",
                    "Children": [
                      {
                        "Kind": "field",
                        "Value": "id",
                        "Children": [
                          {
                            "Kind": "literal",
                            "Value": "100"
                          }
                        ]
                      },
                      {
                        "Kind": "field",
                        "Value": "customerId",
                        "Children": [
                          {
                            "Kind": "literal",
                            "Value": "1"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "Kind": "new",
                "Value": "Order",
                "Children": [
                  {
                    "Kind": "init",
                    "Children": [
                      {
                        "Kind": "field",
                        "Value": "id",
                        "Children": [
                          {
                            "Kind": "literal",
                            "Value": "101"
                          }
                        ]
                      },
                      {
                        "Kind": "field",
                        "Value": "customerId",
                        "Children": [
                          {
                            "Kind": "literal",
                            "Value": "1"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "Kind": "new",
                "Value": "Order",
                "Children": [
                  {
                    "Kind": "init",
                    "Children": [
                      {
                        "Kind": "field",
                        "Value": "id",
                        "Children": [
                          {
                            "Kind": "literal",
                            "Value": "102"
                          }
                        ]
                      },
                      {
                        "Kind": "field",
                        "Value": "customerId",
                        "Children": [
                          {
                            "Kind": "literal",
                            "Value": "2"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "Static": true,
          "Doc": ""
        },
        {
          "Name": "stats",
          "Type": "GResult[]",
          "Access": "",
          "Line": 34,
          "Value": "(from c in customers join o in orders on c.id equals o.customerId into oTmp from o in oTmp.DefaultIfEmpty() group new GRow{c = c, o = o} by c.name into gTmp let g = new GGroup{ key = gTmp.Key, items = gTmp.ToArray() } select new GResult{name = g.key, count = (from r in g.items where r.o select r).ToArray().Length}).ToArray()",
          "Ast": {
            "Kind": "call",
            "Value": "ToArray",
            "Children": [
              {
                "Kind": "unknown"
              }
            ]
          },
          "Static": true,
          "Doc": ""
        }
      ],
      "Methods": [
        {
          "Name": "Main",
          "Params": [],
          "Ret": "void",
          "Access": "",
          "Static": true,
          "Body": [
            "        Console.WriteLine(\"--- Group Left Join ---\");",
            "        foreach (var s in stats) {",
            "    Console.WriteLine((\"[\" + (string.Join(\",\", new object[]{s.name, \"orders:\", s.count}) + \"]\")));",
            "}"
          ],
          "Ast": {
            "Kind": "block",
            "Children": [
              {
                "Kind": "call",
                "Value": "print",
                "Children": [
                  {
                    "Kind": "literal",
                    "Value": "--- Group Left Join ---"
                  }
                ]
              },
              {
                "Kind": "for",
                "Value": "s",
                "Children": [
                  {
                    "Kind": "range",
                    "Children": [
                      {
                        "Kind": "ident",
                        "Value": "stats"
                      }
                    ]
                  },
                  {
                    "Kind": "block",
                    "Children": [
                      {
                        "Kind": "call",
                        "Value": "print",
                        "Children": [
                          {
                            "Kind": "binary",
                            "Value": "+",
                            "Children": [
                              {
                                "Kind": "literal",
                                "Value": "["
                              },
                              {
                                "Kind": "binary",
                                "Value": "+",
                                "Children": [
                                  {
                                    "Kind": "call",
                                    "Value": "Join",
                                    "Children": [
                                      {
                                        "Kind": "ident",
                                        "Value": "string"
                                      },
                                      {
                                        "Kind": "literal",
                                        "Value": ","
                                      },
                                      {
                                        "Kind": "array",
                                        "Children": [
                                          {
                                            "Kind": "member",
                                            "Value": "name",
                                            "Children": [
                                              {
                                                "Kind": "ident",
                                                "Value": "s"
                                              }
                                            ]
                                          },
                                          {
                                            "Kind": "literal",
                                            "Value": "orders:"
                                          },
                                          {
                                            "Kind": "member",
                                            "Value": "count",
                                            "Children": [
                                              {
                                                "Kind": "ident",
                                                "Value": "s"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Kind": "literal",
                                    "Value": "]"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "StartLine": 35,
          "EndLine": 40,
          "Doc": ""
        }
      ],
      "Doc": ""
    }
  ],
  "Src": "// Generated by Mochi 0.10.34 on 2025-07-21 22:29 +0700\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nstruct Customer {\n    public int id;\n    public string name;\n    public override string ToString() =\u003e $\"{{'id': {id}, 'name': '{name}'}}\";\n}\nstruct Order {\n    public int id;\n    public int customerId;\n    public override string ToString() =\u003e $\"{{'id': {id}, 'customerId': {customerId}}}\";\n}\nstruct GRow {\n    public Customer c;\n    public Order o;\n    public override string ToString() =\u003e $\"{{'c': {c}, 'o': {o}}}\";\n}\nstruct GGroup {\n    public string key;\n    public GRow[] items;\n    public override string ToString() =\u003e $\"{{'key': '{key}', 'items': {items}}}\";\n}\nstruct GResult {\n    public string name;\n    public int count;\n    public override string ToString() =\u003e $\"{{'name': '{name}', 'count': {count}}}\";\n}\nclass Program {\n    static Customer[] customers = new Customer[]{new Customer{id = 1, name = \"Alice\"}, new Customer{id = 2, name = \"Bob\"}, new Customer{id = 3, name = \"Charlie\"}};\n    static Order[] orders = new Order[]{new Order{id = 100, customerId = 1}, new Order{id = 101, customerId = 1}, new Order{id = 102, customerId = 2}};\n    static GResult[] stats = (from c in customers join o in orders on c.id equals o.customerId into oTmp from o in oTmp.DefaultIfEmpty() group new GRow{c = c, o = o} by c.name into gTmp let g = new GGroup{ key = gTmp.Key, items = gTmp.ToArray() } select new GResult{name = g.key, count = (from r in g.items where r.o select r).ToArray().Length}).ToArray();\n    static void Main() {\n        Console.WriteLine(\"--- Group Left Join ---\");\n        foreach (var s in stats) {\n    Console.WriteLine((\"[\" + (string.Join(\",\", new object[]{s.name, \"orders:\", s.count}) + \"]\")));\n}\n    }\n}\n"
}
