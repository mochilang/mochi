{
  "types": [
    {
      "name": "NResult",
      "kind": "struct",
      "access": "",
      "startline": 6,
      "endline": 10,
      "fields": [
        {
          "name": "n",
          "type": "int",
          "access": "public",
          "line": 7,
          "value": "",
          "static": false,
          "doc": ""
        },
        {
          "name": "l",
          "type": "string",
          "access": "public",
          "line": 8,
          "value": "",
          "static": false,
          "doc": ""
        }
      ],
      "methods": [
        {
          "name": "ToString",
          "params": [],
          "ret": "string",
          "access": "public",
          "static": false,
          "ast": {
            "kind": "block"
          },
          "startline": 9,
          "endline": 9,
          "doc": ""
        }
      ],
      "doc": ""
    },
    {
      "name": "Program",
      "kind": "class",
      "access": "",
      "startline": 11,
      "endline": 21,
      "fields": [
        {
          "name": "nums",
          "type": "int[]",
          "access": "",
          "line": 12,
          "value": "new int[]{1, 2, 3}",
          "ast": {
            "kind": "array",
            "children": [
              {
                "kind": "literal",
                "value": "1"
              },
              {
                "kind": "literal",
                "value": "2"
              },
              {
                "kind": "literal",
                "value": "3"
              }
            ]
          },
          "static": true,
          "doc": ""
        },
        {
          "name": "letters",
          "type": "string[]",
          "access": "",
          "line": 13,
          "value": "new string[]{\"A\", \"B\"}",
          "ast": {
            "kind": "array",
            "children": [
              {
                "kind": "literal",
                "value": "A"
              },
              {
                "kind": "literal",
                "value": "B"
              }
            ]
          },
          "static": true,
          "doc": ""
        },
        {
          "name": "pairs",
          "type": "NResult[]",
          "access": "",
          "line": 14,
          "value": "(from n in nums from l in letters where ((n % 2) == 0) select new NResult{n = n, l = l}).ToArray()",
          "ast": {
            "kind": "call",
            "value": "ToArray",
            "children": [
              {
                "kind": "unknown"
              }
            ]
          },
          "static": true,
          "doc": ""
        }
      ],
      "methods": [
        {
          "name": "Main",
          "params": [],
          "ret": "void",
          "access": "",
          "static": true,
          "ast": {
            "kind": "block",
            "children": [
              {
                "kind": "call",
                "value": "print",
                "children": [
                  {
                    "kind": "literal",
                    "value": "--- Even pairs ---"
                  }
                ]
              },
              {
                "kind": "for",
                "value": "p",
                "children": [
                  {
                    "kind": "range",
                    "children": [
                      {
                        "kind": "ident",
                        "value": "pairs"
                      }
                    ]
                  },
                  {
                    "kind": "block",
                    "children": [
                      {
                        "kind": "call",
                        "value": "print",
                        "children": [
                          {
                            "kind": "call",
                            "value": "TrimEnd",
                            "children": [
                              {
                                "kind": "call",
                                "value": "Join",
                                "children": [
                                  {
                                    "kind": "ident",
                                    "value": "string"
                                  },
                                  {
                                    "kind": "literal",
                                    "value": " "
                                  },
                                  {
                                    "kind": "array",
                                    "children": [
                                      {
                                        "kind": "member",
                                        "value": "n",
                                        "children": [
                                          {
                                            "kind": "ident",
                                            "value": "p"
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "member",
                                        "value": "l",
                                        "children": [
                                          {
                                            "kind": "ident",
                                            "value": "p"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "startline": 15,
          "endline": 20,
          "doc": ""
        }
      ],
      "doc": ""
    }
  ]
}
