{
  "body": [
    {
      "kind": "VarDecl",
      "name": "customers",
      "type": "Data1[]",
      "expr": {
        "kind": "NEW_ARRAY",
        "text": "new Data1[]{new Data1(1, \"Alice\"), new Data1(2, \"Bob\"), new Data1(3, \"Charlie\")}"
      }
    },
    {
      "kind": "VarDecl",
      "name": "orders",
      "type": "Data2[]",
      "expr": {
        "kind": "NEW_ARRAY",
        "text": "new Data2[]{new Data2(100, 1), new Data2(101, 1), new Data2(102, 2)}"
      }
    },
    {
      "kind": "VarDecl",
      "name": "stats",
      "type": "java.util.List\u003cResult5\u003e",
      "expr": {
        "kind": "NEW_CLASS",
        "text": "new java.util.ArrayList\u003cResult5\u003e(){\n    {\n        java.util.LinkedHashMap\u003cString, Group3\u003e _groups = new java.util.LinkedHashMap\u003c\u003e();\n        java.util.ArrayList\u003cResult5\u003e _tmp = new java.util.ArrayList\u003c\u003e();\n        for (/*missing*/ c : customers) {\n            for (/*missing*/ o : orders) {\n                if (o.customerId == ((Integer)(c.get(\"id\")))) {\n                    /*missing*/ _k = ((Integer)(c.get(\"name\")));\n                    String _ks = String.valueOf(_k);\n                    Group3 g = _groups.get(_ks);\n                    if (g == null) {\n                        g = new Group3(_k, new java.util.ArrayList\u003c\u003e());\n                        _groups.put(_ks, g);\n                    }\n                    g.items.add(new Item3(c, o));\n                }\n            }\n        }\n        java.util.ArrayList\u003cGroup3\u003e list = new java.util.ArrayList\u003c\u003e(_groups.values());\n        int skip = 0;\n        int take = -1;\n        for (int i = 0; i \u003c list.size(); i++) {\n            if (i \u003c skip) continue;\n            if (take \u003e= 0 \u0026\u0026 i \u003e= skip + take) break;\n            /*missing*/ g = (Group3)list.get(i);\n            _tmp.add(new Result5(g.key, new java.util.ArrayList\u003cItem3\u003e(){\n                {\n                    java.util.ArrayList\u003cItem3\u003e _tmp = new java.util.ArrayList\u003c\u003e();\n                    for (/*missing*/ r : g.items) {\n                        if (r.o) {\n                            _tmp.add(r);\n                        }\n                    }\n                    java.util.ArrayList\u003cItem3\u003e list = _tmp;\n                    int skip = 0;\n                    int take = -1;\n                    for (int i = 0; i \u003c list.size(); i++) {\n                        if (i \u003c skip) continue;\n                        if (take \u003e= 0 \u0026\u0026 i \u003e= skip + take) break;\n                        _tmp.add((Item3)list.get(i));\n                    }\n                    addAll(_tmp);\n                }\n            }.length));\n        }\n        addAll(_tmp);\n    }\n}"
      }
    },
    {
      "kind": "Print",
      "expr": {
        "kind": "String",
        "value": "--- Group Left Join ---"
      }
    },
    {
      "kind": "ForEach",
      "name": "s",
      "expr": {
        "kind": "Ident",
        "name": "stats"
      },
      "body": [
        {
          "kind": "Print",
          "expr": {
            "kind": "Binary",
            "left": {
              "kind": "Binary",
              "left": {
                "kind": "Member",
                "name": "name",
                "expr": {
                  "kind": "Ident",
                  "name": "s"
                }
              },
              "right": {
                "kind": "String",
                "value": " orders: "
              },
              "op": "PLUS"
            },
            "right": {
              "kind": "Member",
              "name": "count",
              "expr": {
                "kind": "Ident",
                "name": "s"
              }
            },
            "op": "PLUS"
          }
        }
      ]
    }
  ]
}
