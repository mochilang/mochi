{
  "body": [
    {
      "kind": "VarDecl",
      "name": "data",
      "type": "Data1[]",
      "expr": {
        "kind": "NEW_ARRAY",
        "text": "new Data1[]{new Data1(\"a\", 1), new Data1(\"a\", 2), new Data1(\"b\", 3)}"
      }
    },
    {
      "kind": "VarDecl",
      "name": "groups",
      "type": "java.util.List\u003cData1\u003e",
      "expr": {
        "kind": "NEW_CLASS",
        "text": "new java.util.ArrayList\u003cData1\u003e(){\n    {\n        java.util.LinkedHashMap\u003cString, Group2\u003e _groups = new java.util.LinkedHashMap\u003c\u003e();\n        java.util.ArrayList\u003cData1\u003e _tmp = new java.util.ArrayList\u003c\u003e();\n        for (/*missing*/ d : data) {\n            /*missing*/ _k = ((Integer)(d.get(\"tag\")));\n            String _ks = String.valueOf(_k);\n            Group2 g = _groups.get(_ks);\n            if (g == null) {\n                g = new Group2(_k, new java.util.ArrayList\u003c\u003e());\n                _groups.put(_ks, g);\n            }\n            g.items.add(d);\n        }\n        java.util.ArrayList\u003cGroup2\u003e list = new java.util.ArrayList\u003c\u003e(_groups.values());\n        int skip = 0;\n        int take = -1;\n        for (int i = 0; i \u003c list.size(); i++) {\n            if (i \u003c skip) continue;\n            if (take \u003e= 0 \u0026\u0026 i \u003e= skip + take) break;\n            /*missing*/ g = (Group2)list.get(i);\n            _tmp.add(g);\n        }\n        addAll(_tmp);\n    }\n}"
      }
    },
    {
      "kind": "VarDecl",
      "name": "tmp",
      "type": "Object[]",
      "expr": {
        "kind": "NEW_ARRAY",
        "text": "new int[]{}"
      }
    },
    {
      "kind": "VarDecl",
      "name": "result",
      "type": "java.util.List\u003cObject\u003e",
      "expr": {
        "kind": "NEW_CLASS",
        "text": "new java.util.ArrayList\u003cObject\u003e(){\n    {\n        java.util.ArrayList\u003cObject\u003e _tmp = new java.util.ArrayList\u003c\u003e();\n        for (/*missing*/ r : tmp) {\n            _tmp.add(r);\n        }\n        java.util.ArrayList\u003cObject\u003e list = _tmp;\n        list.sort((a,b)-\u003e{\n            Comparable _va = (Comparable)(a.tag);\n            Comparable _vb = (Comparable)(b.tag);\n            return _va.compareTo(_vb);\n        });\n        int skip = 0;\n        int take = -1;\n        for (int i = 0; i \u003c list.size(); i++) {\n            if (i \u003c skip) continue;\n            if (take \u003e= 0 \u0026\u0026 i \u003e= skip + take) break;\n            _tmp.add((Object)list.get(i));\n        }\n        addAll(_tmp);\n    }\n}"
      }
    },
    {
      "kind": "ForEach",
      "name": "g",
      "expr": {
        "kind": "Ident",
        "name": "groups"
      },
      "body": [
        {
          "kind": "VarDecl",
          "name": "total",
          "type": "int",
          "expr": {
            "kind": "Literal",
            "value": "0"
          }
        },
        {
          "kind": "ForEach",
          "name": "x",
          "expr": {
            "kind": "Member",
            "name": "items",
            "expr": {
              "kind": "Ident",
              "name": "g"
            }
          },
          "body": [
            {
              "kind": "Assign",
              "name": "total",
              "target": {
                "kind": "Ident",
                "name": "total"
              },
              "expr": {
                "kind": "Binary",
                "left": {
                  "kind": "Ident",
                  "name": "total"
                },
                "right": {
                  "kind": "Member",
                  "name": "val",
                  "expr": {
                    "kind": "Ident",
                    "name": "x"
                  }
                },
                "op": "PLUS"
              }
            }
          ]
        },
        {
          "kind": "Assign",
          "name": "tmp",
          "target": {
            "kind": "Ident",
            "name": "tmp"
          },
          "expr": {
            "kind": "Call",
            "target": {
              "kind": "Member",
              "name": "toArray",
              "expr": {
                "kind": "Call",
                "target": {
                  "kind": "Member",
                  "name": "concat",
                  "expr": {
                    "kind": "Member",
                    "name": "Stream",
                    "expr": {
                      "kind": "Member",
                      "name": "stream",
                      "expr": {
                        "kind": "Member",
                        "name": "util",
                        "expr": {
                          "kind": "Ident",
                          "name": "java"
                        }
                      }
                    }
                  }
                },
                "args": [
                  {
                    "kind": "Call",
                    "target": {
                      "kind": "Member",
                      "name": "stream",
                      "expr": {
                        "kind": "Member",
                        "name": "Arrays",
                        "expr": {
                          "kind": "Member",
                          "name": "util",
                          "expr": {
                            "kind": "Ident",
                            "name": "java"
                          }
                        }
                      }
                    },
                    "args": [
                      {
                        "kind": "Ident",
                        "name": "tmp"
                      }
                    ]
                  },
                  {
                    "kind": "Call",
                    "target": {
                      "kind": "Member",
                      "name": "of",
                      "expr": {
                        "kind": "Member",
                        "name": "Stream",
                        "expr": {
                          "kind": "Member",
                          "name": "stream",
                          "expr": {
                            "kind": "Member",
                            "name": "util",
                            "expr": {
                              "kind": "Ident",
                              "name": "java"
                            }
                          }
                        }
                      }
                    },
                    "args": [
                      {
                        "kind": "NEW_CLASS",
                        "text": "new Data3(g.key, total)"
                      }
                    ]
                  }
                ]
              }
            },
            "args": [
              {
                "kind": "MEMBER_REFERENCE",
                "text": "Object[]::new"
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "Print",
      "expr": {
        "kind": "Call",
        "target": {
          "kind": "Member",
          "name": "collect",
          "expr": {
            "kind": "Call",
            "target": {
              "kind": "Member",
              "name": "map",
              "expr": {
                "kind": "Call",
                "target": {
                  "kind": "Member",
                  "name": "stream",
                  "expr": {
                    "kind": "Cast",
                    "value": "java.util.List\u003c?\u003e",
                    "expr": {
                      "kind": "Ident",
                      "name": "result"
                    }
                  }
                }
              }
            },
            "args": [
              {
                "kind": "MEMBER_REFERENCE",
                "text": "String::valueOf"
              }
            ]
          }
        },
        "args": [
          {
            "kind": "Call",
            "target": {
              "kind": "Member",
              "name": "joining",
              "expr": {
                "kind": "Member",
                "name": "Collectors",
                "expr": {
                  "kind": "Member",
                  "name": "stream",
                  "expr": {
                    "kind": "Member",
                    "name": "util",
                    "expr": {
                      "kind": "Ident",
                      "name": "java"
                    }
                  }
                }
              }
            },
            "args": [
              {
                "kind": "String",
                "value": " "
              }
            ]
          }
        ]
      }
    }
  ]
}
