{
  "funcs": [
    {
      "name": "twoSum",
      "params": [
        "nums",
        "target"
      ],
      "body": "let n = List.length nums in\n  let res = ref [-1; -1] in\n  let stop = ref false in\n  for i = 0 to n - 1 do\n    for j = i + 1 to n - 1 do\n      if List.nth nums i + List.nth nums j = target then (\n        res := [i; j];\n        stop := true\n      )\n    done;\n    if !stop then raise Exit\n  done;\n  !res",
      "line": 3,
      "col": 1,
      "endLine": 16,
      "endCol": 7,
      "snippet": "let twoSum nums target =\n  let n = List.length nums in\n  let res = ref [-1; -1] in\n  let stop = ref false in\n  for i = 0 to n - 1 do\n    for j = i + 1 to n - 1 do\n      if List.nth nums i + List.nth nums j = target then (\n        res := [i; j];\n        stop := true\n      )\n    done;\n    if !stop then raise Exit\n  done;\n  !res"
    }
  ],
  "prints": [
    {
      "expr": "print_endline (string_of_int (List.nth result 0));\n  print_endline (string_of_int (List.nth result 1))",
      "line": 20,
      "col": 1,
      "endLine": 22,
      "endCol": 52,
      "snippet": "let () =\n  print_endline (string_of_int (List.nth result 0));\n  print_endline (string_of_int (List.nth result 1))"
    }
  ],
  "types": [],
  "vars": [
    {
      "name": "result",
      "expr": "twoSum [2;7;11;15] 9",
      "mutable": false,
      "line": 18,
      "col": 1,
      "endLine": 18,
      "endCol": 34,
      "snippet": "let result = twoSum [2;7;11;15] 9"
    }
  ]
}
