{
  "funcs": [
    {
      "name": "__show",
      "params": [
        "v"
      ],
      "body": "let open Obj in\n  let rec list_aux o =\n    if is_int o \u0026\u0026 (magic (obj o) : int) = 0 then \"\" else\n      let hd = field o 0 in\n      let tl = field o 1 in\n      let rest = list_aux tl in\n      if rest = \"\" then __show (obj hd) else __show (obj hd) ^ \"; \" ^ rest\n  in\n  let r = repr v in\n  if is_int r then string_of_int (magic v) else\n  match tag r with\n  | 0 -\u003e if size r = 0 then \"[]\" else \"[\" ^ list_aux r ^ \"]\"\n  | 252 -\u003e (magic v : string)\n  | 253 -\u003e string_of_float (magic v)\n  | _ -\u003e \"\u003cvalue\u003e\"",
      "line": 4,
      "col": 1,
      "endLine": 19,
      "endCol": 19,
      "snippet": "let rec __show v =\n  let open Obj in\n  let rec list_aux o =\n    if is_int o \u0026\u0026 (magic (obj o) : int) = 0 then \"\" else\n      let hd = field o 0 in\n      let tl = field o 1 in\n      let rest = list_aux tl in\n      if rest = \"\" then __show (obj hd) else __show (obj hd) ^ \"; \" ^ rest\n  in\n  let r = repr v in\n  if is_int r then string_of_int (magic v) else\n  match tag r with\n  | 0 -\u003e if size r = 0 then \"[]\" else \"[\" ^ list_aux r ^ \"]\"\n  | 252 -\u003e (magic v : string)\n  | 253 -\u003e string_of_float (magic v)\n  | _ -\u003e \"\u003cvalue\u003e\""
    },
    {
      "name": "_now",
      "params": [
        "()"
      ],
      "body": "if not !_now_seeded then (\n    match Sys.getenv_opt \"MOCHI_NOW_SEED\" with\n    | Some s -\u003e (try _now_seed := int_of_string s; _now_seeded := true with _ -\u003e ())\n    | None -\u003e ()\n  );\n  if !_now_seeded then (\n    _now_seed := (!(_now_seed) * 1664525 + 1013904223) mod 2147483647;\n    !_now_seed\n  ) else int_of_float (Sys.time () *. 1000000000.)",
      "line": 25,
      "col": 1,
      "endLine": 34,
      "endCol": 51,
      "snippet": "let _now () =\n  if not !_now_seeded then (\n    match Sys.getenv_opt \"MOCHI_NOW_SEED\" with\n    | Some s -\u003e (try _now_seed := int_of_string s; _now_seeded := true with _ -\u003e ())\n    | None -\u003e ()\n  );\n  if !_now_seeded then (\n    _now_seed := (!(_now_seed) * 1664525 + 1013904223) mod 2147483647;\n    !_now_seed\n  ) else int_of_float (Sys.time () *. 1000000000.)"
    }
  ],
  "prints": [
    {
      "expr": "_now_seeded := true;\n  _now_seed := 1;\n  let start = _now () in\n  let n = 1000 in\n  let s = ref (0) in\n  (try for i = 1 to (n - 1) do\n    try\n  s := (!s + i);\n    with Continue -\u003e ()\n  done with Break -\u003e ());\n  let finish = _now () in\n  Printf.printf \"{\\n  \\\"duration_us\\\": %d,\\n  \\\"memory_bytes\\\": 0,\\n  \\\"name\\\": \\\"%s\\\"\\n}\\n\" ((finish - start) / 1000) \"simple\"",
      "line": 41,
      "col": 1,
      "endLine": 53,
      "endCol": 129,
      "snippet": "let () =\n  _now_seeded := true;\n  _now_seed := 1;\n  let start = _now () in\n  let n = 1000 in\n  let s = ref (0) in\n  (try for i = 1 to (n - 1) do\n    try\n  s := (!s + i);\n    with Continue -\u003e ()\n  done with Break -\u003e ());\n  let finish = _now () in\n  Printf.printf \"{\\n  \\\"duration_us\\\": %d,\\n  \\\"memory_bytes\\\": 0,\\n  \\\"name\\\": \\\"%s\\\"\\n}\\n\" ((finish - start) / 1000) \"simple\";"
    }
  ],
  "types": [],
  "vars": [
    {
      "name": "_now_seed",
      "expr": "0",
      "mutable": true,
      "line": 22,
      "col": 1,
      "endLine": 22,
      "endCol": 22,
      "snippet": "let _now_seed = ref 0"
    },
    {
      "name": "_now_seeded",
      "expr": "false",
      "mutable": true,
      "line": 23,
      "col": 1,
      "endLine": 23,
      "endCol": 28,
      "snippet": "let _now_seeded = ref false"
    }
  ]
}
