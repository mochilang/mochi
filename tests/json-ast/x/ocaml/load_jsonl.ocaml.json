{
  "funcs": [],
  "prints": [
    {
      "expr": "let people = [[(\"age\", Obj.repr 30); (\"email\", Obj.repr \"alice@example.com\"); (\"name\", Obj.repr \"Alice\")]; [(\"age\", Obj.repr 15); (\"email\", Obj.repr \"bob@example.com\"); (\"name\", Obj.repr \"Bob\")]; [(\"age\", Obj.repr 20); (\"email\", Obj.repr \"charlie@example.com\"); (\"name\", Obj.repr \"Charlie\")]] in\n  let adults = (List.filter_map (fun p -\u003e if ((Obj.obj (List.assoc \"age\" p) : int) \u003e= 18) then Some ([(\"name\", Obj.repr (Obj.obj (List.assoc \"name\" p) : string)); (\"email\", Obj.repr (Obj.obj (List.assoc \"email\" p) : string))]) else None) people) in\n  (try List.iter (fun a -\u003e\n    try\n  print_endline (String.concat \" \" [(Obj.obj (List.assoc \"name\" a) : string); (Obj.obj (List.assoc \"email\" a) : string)]);\n    with Continue -\u003e ()) adults with Break -\u003e ())",
      "line": 6,
      "col": 1,
      "endLine": 12,
      "endCol": 50,
      "snippet": "let () =\n  let people = [[(\"age\", Obj.repr 30); (\"email\", Obj.repr \"alice@example.com\"); (\"name\", Obj.repr \"Alice\")]; [(\"age\", Obj.repr 15); (\"email\", Obj.repr \"bob@example.com\"); (\"name\", Obj.repr \"Bob\")]; [(\"age\", Obj.repr 20); (\"email\", Obj.repr \"charlie@example.com\"); (\"name\", Obj.repr \"Charlie\")]] in\n  let adults = (List.filter_map (fun p -\u003e if ((Obj.obj (List.assoc \"age\" p) : int) \u003e= 18) then Some ([(\"name\", Obj.repr (Obj.obj (List.assoc \"name\" p) : string)); (\"email\", Obj.repr (Obj.obj (List.assoc \"email\" p) : string))]) else None) people) in\n  (try List.iter (fun a -\u003e\n    try\n  print_endline (String.concat \" \" [(Obj.obj (List.assoc \"name\" a) : string); (Obj.obj (List.assoc \"email\" a) : string)]);\n    with Continue -\u003e ()) adults with Break -\u003e ())"
    }
  ],
  "types": [],
  "vars": []
}
