{
  "tree": "Block(List(Import(Select(Select(Ident(TermName(\"scala\")), TermName(\"collection\")), TermName(\"mutable\")), List(ImportSelector(TermName(\"ArrayBuffer\"), 93, TermName(\"ArrayBuffer\"), 93), ImportSelector(TermName(\"Map\"), 106, TermName(\"Map\"), 106))), ModuleDef(Modifiers(), TermName(\"Main\"), Template(List(Select(Ident(scala), TypeName(\"AnyRef\"))), noSelfType, List(DefDef(Modifiers(), termNames.CONSTRUCTOR, List(), List(List()), TypeTree(), Block(List(pendingSuperCall), Literal(Constant(())))), DefDef(Modifiers(), TermName(\"main\"), List(), List(List(ValDef(Modifiers(PARAM), TermName(\"args\"), AppliedTypeTree(Ident(TypeName(\"Array\")), List(Ident(TypeName(\"String\")))), EmptyTree))), Ident(TypeName(\"Unit\")), Block(List(ValDef(Modifiers(), TermName(\"rawName\"), Ident(TypeName(\"String\")), Literal(Constant(\"   alice  \"))), ValDef(Modifiers(), TermName(\"radius\"), Ident(TypeName(\"Double\")), Literal(Constant(3.0))), ValDef(Modifiers(), TermName(\"name\"), TypeTree(), Apply(Select(Apply(Select(Ident(TermName(\"rawName\")), TermName(\"trim\")), List()), TermName(\"toUpperCase\")), List())), ValDef(Modifiers(), TermName(\"area\"), TypeTree(), Apply(Select(Select(Ident(TermName(\"math\")), TermName(\"Pi\")), TermName(\"$times\")), List(Apply(Select(Ident(TermName(\"math\")), TermName(\"pow\")), List(Ident(TermName(\"radius\")), Literal(Constant(2.0))))))), Apply(Ident(TermName(\"println\")), List(Apply(Select(Apply(Ident(TermName(\"List\")), List(Literal(Constant(\"Hello\")), Apply(Select(Ident(TermName(\"name\")), TermName(\"$plus\")), List(Literal(Constant(\"!\")))))), TermName(\"mkString\")), List(Literal(Constant(\" \"))))))), Apply(Ident(TermName(\"println\")), List(Apply(Select(Apply(Ident(TermName(\"List\")), List(Literal(Constant(\"The area of a circle with radius\")), Ident(TermName(\"radius\")), Literal(Constant(\"is\")), Ident(TermName(\"area\")))), TermName(\"mkString\")), List(Literal(Constant(\" \")))))))))))), Literal(Constant(())))"
}
