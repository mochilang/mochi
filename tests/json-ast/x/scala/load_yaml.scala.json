{
  "tree": "Block(List(Import(Select(Select(Ident(TermName(\"scala\")), TermName(\"collection\")), TermName(\"mutable\")), List(ImportSelector(TermName(\"ArrayBuffer\"), 93, TermName(\"ArrayBuffer\"), 93), ImportSelector(TermName(\"Map\"), 106, TermName(\"Map\"), 106))), ModuleDef(Modifiers(), TermName(\"Main\"), Template(List(Select(Ident(scala), TypeName(\"AnyRef\"))), noSelfType, List(DefDef(Modifiers(), termNames.CONSTRUCTOR, List(), List(List()), TypeTree(), Block(List(pendingSuperCall), Literal(Constant(())))), ClassDef(Modifiers(CASE), TypeName(\"QueryItem\"), List(), Template(List(Select(Ident(scala), TypeName(\"Product\")), Select(Ident(scala), TypeName(\"Serializable\"))), noSelfType, List(ValDef(Modifiers(CASEACCESSOR | PARAMACCESSOR), TermName(\"name\"), Ident(TypeName(\"Any\")), EmptyTree), ValDef(Modifiers(CASEACCESSOR | PARAMACCESSOR), TermName(\"email\"), Ident(TypeName(\"Any\")), EmptyTree), DefDef(Modifiers(), termNames.CONSTRUCTOR, List(), List(List(ValDef(Modifiers(PARAM | PARAMACCESSOR), TermName(\"name\"), Ident(TypeName(\"Any\")), EmptyTree), ValDef(Modifiers(PARAM | PARAMACCESSOR), TermName(\"email\"), Ident(TypeName(\"Any\")), EmptyTree))), TypeTree(), Block(List(pendingSuperCall), Literal(Constant(()))))))), ClassDef(Modifiers(CASE), TypeName(\"Person\"), List(), Template(List(Select(Ident(scala), TypeName(\"Product\")), Select(Ident(scala), TypeName(\"Serializable\"))), noSelfType, List(ValDef(Modifiers(CASEACCESSOR | PARAMACCESSOR), TermName(\"name\"), Ident(TypeName(\"String\")), EmptyTree), ValDef(Modifiers(CASEACCESSOR | PARAMACCESSOR), TermName(\"age\"), Ident(TypeName(\"Int\")), EmptyTree), ValDef(Modifiers(CASEACCESSOR | PARAMACCESSOR), TermName(\"email\"), Ident(TypeName(\"String\")), EmptyTree), DefDef(Modifiers(), termNames.CONSTRUCTOR, List(), List(List(ValDef(Modifiers(PARAM | PARAMACCESSOR), TermName(\"name\"), Ident(TypeName(\"String\")), EmptyTree), ValDef(Modifiers(PARAM | PARAMACCESSOR), TermName(\"age\"), Ident(TypeName(\"Int\")), EmptyTree), ValDef(Modifiers(PARAM | PARAMACCESSOR), TermName(\"email\"), Ident(TypeName(\"String\")), EmptyTree))), TypeTree(), Block(List(pendingSuperCall), Literal(Constant(()))))))), DefDef(Modifiers(), TermName(\"main\"), List(), List(List(ValDef(Modifiers(PARAM), TermName(\"args\"), AppliedTypeTree(Ident(TypeName(\"Array\")), List(Ident(TypeName(\"String\")))), EmptyTree))), Ident(TypeName(\"Unit\")), Block(List(ValDef(Modifiers(), TermName(\"people\"), AppliedTypeTree(Ident(TypeName(\"ArrayBuffer\")), List(Ident(TypeName(\"Person\")))), Apply(Ident(TermName(\"ArrayBuffer\")), List(Apply(Ident(TermName(\"Person\")), List(Literal(Constant(\"Alice\")), Literal(Constant(30)), Literal(Constant(\"alice@example.com\")))), Apply(Ident(TermName(\"Person\")), List(Literal(Constant(\"Bob\")), Literal(Constant(15)), Literal(Constant(\"bob@example.com\")))), Apply(Ident(TermName(\"Person\")), List(Literal(Constant(\"Charlie\")), Literal(Constant(20)), Literal(Constant(\"charlie@example.com\"))))))), ValDef(Modifiers(), TermName(\"adults\"), AppliedTypeTree(Ident(TypeName(\"ArrayBuffer\")), List(Ident(TypeName(\"QueryItem\")))), Apply(Select(Apply(Select(Ident(TermName(\"people\")), TermName(\"withFilter\")), List(Function(List(ValDef(Modifiers(PARAM), TermName(\"p\"), TypeTree(), EmptyTree)), Apply(Select(Select(Ident(TermName(\"p\")), TermName(\"age\")), TermName(\"$greater$eq\")), List(Literal(Constant(18))))))), TermName(\"map\")), List(Function(List(ValDef(Modifiers(PARAM), TermName(\"p\"), TypeTree(), EmptyTree)), Apply(Ident(TermName(\"QueryItem\")), List(Select(Ident(TermName(\"p\")), TermName(\"name\")), Select(Ident(TermName(\"p\")), TermName(\"email\"))))))))), Apply(Select(Ident(TermName(\"adults\")), TermName(\"foreach\")), List(Function(List(ValDef(Modifiers(PARAM), TermName(\"a\"), TypeTree(), EmptyTree)), Apply(Ident(TermName(\"println\")), List(Apply(Select(Apply(Ident(TermName(\"List\")), List(Select(Ident(TermName(\"a\")), TermName(\"name\")), Select(Ident(TermName(\"a\")), TermName(\"email\")))), TermName(\"mkString\")), List(Literal(Constant(\" \"))))))))))))))), Literal(Constant(())))"
}
