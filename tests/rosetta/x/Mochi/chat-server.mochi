// Mochi implementation of Rosetta "Chat server" task
// This is a simplified simulation of a chat server using in-memory lists.

fun removeName(names: list<string>, name: string): list<string> {
  var out: list<string> = []
  for n in names {
    if n != name {
      out = append(out, n)
    }
  }
  return out
}

fun main() {
  var clients: list<string> = []

  fun broadcast(msg: string) {
    // In a real chat server this would send to all connected clients.
    print(msg)
  }

  fun add(name: string) {
    clients = append(clients, name)
    broadcast("+++ \"" + name + "\" connected +++\n")
  }

  fun send(name: string, msg: string) {
    broadcast(name + "> " + msg + "\n")
  }

  fun remove(name: string) {
    clients = removeName(clients, name)
    broadcast("--- \"" + name + "\" disconnected ---\n")
  }

  add("Alice")
  add("Bob")
  send("Alice", "Hello Bob!")
  send("Bob", "Hi Alice!")
  remove("Bob")
  remove("Alice")
  broadcast("Server stopping!\n")
}

main()
