// Mochi implementation of Rosetta "Approximate-equality" task
// Translated from Go version in tests/rosetta/x/Go/approximate-equality.go

fun abs(x: float): float {
  if x < 0.0 { return -x }
  return x
}

fun maxf(a: float, b: float): float {
  if a > b { return a }
  return b
}

fun isClose(a: float, b: float): bool {
  let relTol = 0.000000001
  let t = abs(a - b)
  let u = relTol * maxf(abs(a), abs(b))
  return t <= u
}

fun sqrtApprox(x: float): float {
  var guess = x
  var i = 0
  while i < 10 {
    guess = (guess + x / guess) / 2.0
    i = i + 1
  }
  return guess
}

fun main() {
  let root2 = sqrtApprox(2.0)
  let pairs = [
    [100000000000000.01, 100000000000000.011],
    [100.01, 100.011],
    [10000000000000.001 / 10000.0, 1000000000.0000001000],
    [0.001, 0.0010000001],
    [0.000000000000000000000101, 0.0],
    [root2 * root2, 2.0],
    [(-root2) * root2, -2.0],
    [100000000000000003.0, 100000000000000004.0],
    [3.14159265358979323846, 3.14159265358979324],
  ]
  for pair in pairs {
    let a = pair[0]
    let b = pair[1]
    let s = if isClose(a, b) { "≈" } else { "≉" }
    print(str(a) + " " + s + " " + str(b))
  }
}

main()
