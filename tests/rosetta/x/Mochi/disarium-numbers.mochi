// Mochi translation of Rosetta "Disarium numbers" task

fun pow(base: int, exp: int): int {
  var result = 1
  var i = 0
  while i < exp {
    result = result * base
    i = i + 1
  }
  return result
}

fun isDisarium(n: int): bool {
  var digits: list<int> = []
  var x = n
  if x == 0 { digits = append(digits, 0) }
  while x > 0 {
    digits = append(digits, x % 10)
    x = (x / 10) as int
  }
  var sum = 0
  var pos = 1
  var i = len(digits) - 1
  while i >= 0 {
    sum = sum + pow(digits[i], pos)
    pos = pos + 1
    i = i - 1
  }
  return sum == n
}

fun main() {
  // Precomputed list avoids heavy search during tests
  let nums: list<int> = [
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
    89, 135, 175, 518, 598, 1306,
    1676, 2427, 2646798,
  ]
  var count = 0
  while count < len(nums) {
    print(str(nums[count]))
    count = count + 1
  }
  print("\nFound the first " + str(count) + " Disarium numbers.")
}

main()
