fun ln(x: float): float {
  var k = 0.0
  var v = x
  while v >= 2.0 {
    v = v / 2.0
    k = k + 1.0
  }
  while v < 1.0 {
    v = v * 2.0
    k = k - 1.0
  }
  let z = (v - 1.0) / (v + 1.0)
  var zpow = z
  var sum = z
  var i = 3
  while i <= 9 {
    zpow = zpow * z * z
    sum = sum + zpow / (i as float)
    i = i + 2
  }
  let ln2 = 0.6931471805599453
  return (k * ln2) + 2.0 * sum
}

fun harmonic(n: int): float {
  var sum = 0.0
  var i = 1
  while i <= n {
    sum = sum + 1.0 / (i as float)
    i = i + 1
  }
  return sum
}

fun main() {
  let n = 100000
  let gamma = harmonic(n) - ln(n as float)
  print(str(gamma))
}

main()
