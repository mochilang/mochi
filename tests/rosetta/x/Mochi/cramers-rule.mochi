// Mochi translation of Rosetta Cramer's rule task
// Solves a system of linear equations using Cramer's rule

fun det(m: list<list<float>>): float {
  let n = len(m)
  if n == 1 { return m[0][0] }
  var total = 0.0
  var sign = 1.0
  var c = 0
  while c < n {
    var sub: list<list<float>> = []
    var r = 1
    while r < n {
      var row: list<float> = []
      var cc = 0
      while cc < n {
        if cc != c { row = append(row, m[r][cc]) }
        cc = cc + 1
      }
      sub = append(sub, row)
      r = r + 1
    }
    total = total + sign * m[0][c] * det(sub)
    sign = sign * (-1.0)
    c = c + 1
  }
  return total
}

fun replaceCol(m: list<list<float>>, col: int, v: list<float>): list<list<float>> {
  var res: list<list<float>> = []
  var r = 0
  while r < len(m) {
    var row: list<float> = []
    var c = 0
    while c < len(m[r]) {
      if c == col { row = append(row, v[r]) } else { row = append(row, m[r][c]) }
      c = c + 1
    }
    res = append(res, row)
    r = r + 1
  }
  return res
}

let m = [
  [2.0, -1.0, 5.0, 1.0],
  [3.0, 2.0, 2.0, -6.0],
  [1.0, 3.0, 3.0, -1.0],
  [5.0, -2.0, -3.0, 3.0],
]

let v = [-3.0, -32.0, -47.0, 49.0]

let d = det(m)
var x: list<float> = []
var i = 0
while i < len(v) {
  let mc = replaceCol(m, i, v)
  x = append(x, det(mc) / d)
  i = i + 1
}
var s = "["
var j = 0
while j < len(x) {
  s = s + str(x[j])
  if j < len(x)-1 { s = s + " " }
  j = j + 1
}
s = s + "]"
print(s)
