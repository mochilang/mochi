// Calculate circular mean time of day from HH:MM:SS strings
let PI = 3.141592653589793

fun sinApprox(x: float): float {
  var term = x
  var sum = x
  var n = 1
  while n <= 8 {
    let denom = ((2*n) * (2*n + 1)) as float
    term = -term * x * x / denom
    sum = sum + term
    n = n + 1
  }
  return sum
}

fun cosApprox(x: float): float {
  var term = 1.0
  var sum = 1.0
  var n = 1
  while n <= 8 {
    let denom = ((2*n - 1) * (2*n)) as float
    term = -term * x * x / denom
    sum = sum + term
    n = n + 1
  }
  return sum
}

fun atanApprox(x: float): float {
  if x > 1.0 { return PI/2.0 - x/(x*x + 0.28) }
  if x < (-1.0) { return -PI/2.0 - x/(x*x + 0.28) }
  return x/(1.0 + 0.28*x*x)
}

fun atan2Approx(y: float, x: float): float {
  if x > 0.0 { return atanApprox(y/x) }
  if x < 0.0 {
    if y >= 0.0 { return atanApprox(y/x) + PI }
    return atanApprox(y/x) - PI
  }
  if y > 0.0 { return PI/2.0 }
  if y < 0.0 { return -PI/2.0 }
  return 0.0
}

fun digit(ch: string): int {
  let digits = "0123456789"
  var i = 0
  while i < len(digits) {
    if substring(digits, i, i+1) == ch { return i }
    i = i + 1
  }
  return 0
}

fun parseTwo(s: string, idx: int): int {
  return digit(substring(s, idx, idx+1))*10 + digit(substring(s, idx+1, idx+2))
}

fun parseSec(s: string): float {
  let h = parseTwo(s, 0)
  let m = parseTwo(s, 3)
  let sec = parseTwo(s, 6)
  return ((h*60 + m)*60 + sec) as float
}

fun pad(n: int): string {
  if n < 10 { return "0" + str(n) }
  return str(n)
}

fun meanTime(times: list<string>): string {
  var ssum = 0.0
  var csum = 0.0
  var i = 0
  while i < len(times) {
    let sec = parseSec(times[i])
    let ang = sec * 2.0 * PI / 86400.0
    ssum = ssum + sinApprox(ang)
    csum = csum + cosApprox(ang)
    i = i + 1
  }
  var theta = atan2Approx(ssum, csum)
  var frac = theta / (2.0 * PI)
  while frac < 0.0 { frac = frac + 1.0 }
  let total = frac * 86400.0
  let si = total as int
  let h = (si / 3600) as int
  let m = ((si % 3600) / 60) as int
  let s = (si % 60) as int
  return pad(h) + ":" + pad(m) + ":" + pad(s)
}

fun main() {
  let inputs = ["23:00:17", "23:40:20", "00:12:45", "00:17:19"]
  print(meanTime(inputs))
}

main()
