fun indexOf(s: string, ch: string): int {
  var i = 0
  while i < len(s) {
    if substring(s, i, i+1) == ch {
      return i
    }
    i = i + 1
  }
  return -1
}

fun ord(ch: string): int {
  let upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
  let lower = "abcdefghijklmnopqrstuvwxyz"
  var idx = indexOf(upper, ch)
  if idx >= 0 { return 65 + idx }
  idx = indexOf(lower, ch)
  if idx >= 0 { return 97 + idx }
  return 0
}

fun chr(n: int): string {
  let upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
  let lower = "abcdefghijklmnopqrstuvwxyz"
  if n >= 65 && n < 91 { return upper[n-65:n-64] }
  if n >= 97 && n < 123 { return lower[n-97:n-96] }
  return "?"
}

fun shiftRune(r: string, k: int): string {
  if r >= "a" && r <= "z" {
    return chr(((ord(r)-97 + k) % 26) + 97)
  }
  if r >= "A" && r <= "Z" {
    return chr(((ord(r)-65 + k) % 26) + 65)
  }
  return r
}

fun encipher(s: string, k: int): string {
  var out = ""
  var i = 0
  while i < len(s) {
    out = out + shiftRune(s[i:i+1], k)
    i = i + 1
  }
  return out
}

fun decipher(s: string, k: int): string {
  return encipher(s, (26 - k % 26) % 26)
}

fun main() {
  let pt = "The five boxing wizards jump quickly"
  print("Plaintext: " + pt)
  for key in [0,1,7,25,26] {
    if key < 1 || key > 25 {
      print("Key " + str(key) + " invalid")
      continue
    }
    let ct = encipher(pt, key)
    print("Key " + str(key))
    print("  Enciphered: " + ct)
    print("  Deciphered: " + decipher(ct, key))
  }
}

main()
