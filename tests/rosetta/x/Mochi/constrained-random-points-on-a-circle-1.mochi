// Mochi implementation of Rosetta "Constrained random points on a circle" task (version 1)

let nPts = 100
let rMin = 10
let rMax = 15

let span = rMax + 1 + rMax
var rows: list<list<string>> = []
var r = 0
while r < span {
  var row: list<string> = []
  var c = 0
  while c < span * 2 {
    row = append(row, " ")
    c = c + 1
  }
  rows = append(rows, row)
  r = r + 1
}

var u = 0
var seen: map<string, bool> = {}
let min2 = rMin * rMin
let max2 = rMax * rMax
var n = 0
while n < nPts {
  var x = now() % span - rMax
  var y = now() % span - rMax
  let rs = x * x + y * y
  if rs < min2 || rs > max2 { continue }
  n = n + 1
  let row = y + rMax
  let col = (x + rMax) * 2
  rows[row][col] = "*"
  let key = str(row) + "," + str(col)
  if !seen[key] {
    seen[key] = true
    u = u + 1
  }
}

var i = 0
while i < span {
  var line = ""
  var j = 0
  while j < span * 2 {
    line = line + rows[i][j]
    j = j + 1
  }
  print(line)
  i = i + 1
}
print(str(u) + " unique points")
