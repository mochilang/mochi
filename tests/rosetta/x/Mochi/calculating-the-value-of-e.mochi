let epsilon = 0.000000000000001

fun absf(x: float): float {
  if x < 0.0 { return -x }
  return x
}

fun pow10(n: int): float {
  var r: float = 1.0
  var i = 0
  while i < n {
    r = r * 10.0
    i = i + 1
  }
  return r
}

fun formatFloat(f: float, prec: int): string {
  let scale = pow10(prec)
  let scaled = (f * scale) + 0.5
  var n = (scaled as int)
  var digits = str(n)
  while len(digits) <= prec {
    digits = "0" + digits
  }
  let intPart = substring(digits, 0, len(digits)-prec)
  let fracPart = substring(digits, len(digits)-prec, len(digits))
  return intPart + "." + fracPart
}

var factval = 1
var e: float = 2.0
var n = 2
var term: float = 1.0
while true {
  factval = factval * n
  n = n + 1
  term = 1.0 / (factval as float)
  e = e + term
  if absf(term) < epsilon { break }
}

print("e = " + formatFloat(e, 15))
