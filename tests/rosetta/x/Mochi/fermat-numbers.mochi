// Compute the first eight Fermat numbers and their prime factors.

fun pow_int(base: int, exp: int): int {
  var result = 1
  var b = base
  var e = exp
  while e > 0 {
    if e % 2 == 1 { result = result * b }
    b = b * b
    e = (e / 2) as int
  }
  return result
}

fun pow_big(base: bigint, exp: int): bigint {
  var result: bigint = 1
  var b: bigint = base
  var e = exp
  while e > 0 {
    if e % 2 == 1 { result = result * b }
    b = b * b
    e = (e / 2) as int
  }
  return result
}

fun parseBigInt(str: string): bigint {
  var i = 0
  var neg = false
  if len(str) > 0 && substring(str, 0, 1) == "-" {
    neg = true
    i = 1
  }
  var n: bigint = 0
  while i < len(str) {
    let ch = substring(str, i, i+1)
    let d = ch as int
    n = n * (10 as bigint) + (d as bigint)
    i = i + 1
  }
  if neg { n = -n }
  return n
}

fun fermat(n: int): bigint {
  let p = pow_int(2, n)
  return pow_big(2 as bigint, p) + (1 as bigint)
}

fun primeFactorsBig(n: bigint): list<bigint> {
  var factors: list<bigint> = []
  var m: bigint = n
  var d: bigint = 2
  while m % d == 0 {
    factors = append(factors, d)
    m = m / d
  }
  d = 3
  while d * d <= m {
    while m % d == 0 {
      factors = append(factors, d)
      m = m / d
    }
    d = d + 2
  }
  if m > 1 { factors = append(factors, m) }
  return factors
}

fun show_list(xs: list<bigint>): string {
  var line = ""
  var i = 0
  while i < len(xs) {
    line = line + str(xs[i])
    if i < len(xs) - 1 { line = line + " " }
    i = i + 1
  }
  return line
}

fun main() {
  var nums: list<bigint> = []
  for i in 0..8 { nums = append(nums, fermat(i)) }
  print("First 8 Fermat numbers:")
  for n in nums { print(str(n)) }

  let extra: map<int,list<bigint>> = {
    6: [274177 as bigint, 67280421310721 as bigint],
    7: [
      parseBigInt("59649589127497217"),
      parseBigInt("5704689200685129054721"),
    ],
  }

  print("\nFactors:")
  var i = 0
  while i < len(nums) {
    var facs: list<bigint> = []
    if i <= 5 {
      facs = primeFactorsBig(nums[i])
    } else {
      facs = extra[i]
    }
    print("F" + str(i) + " = " + show_list(facs))
    i = i + 1
  }
}

main()
