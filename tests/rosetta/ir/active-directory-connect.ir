func main (regs=1)
  Return       r0

  // fun connect(client: LDAPClient): bool {
func connect (regs=10)
  // return client.Host != "" && client.Port > 0
  Const        r1, "Host"
  Index        r2, r0, r1
  Const        r3, "Port"
  Index        r4, r0, r3
  Const        r5, 0
  Less         r6, r5, r4
  Const        r7, ""
  NotEqual     r8, r2, r7
  Move         r9, r8
  JumpIfFalse  r9, L0
  Move         r9, r6
L0:
  Return       r9

  // fun main() {
func main (regs=38)
  // Base: "dc=example,dc=com",
  Const        r0, "dc=example,dc=com"
  // Host: "ldap.example.com",
  Const        r1, "ldap.example.com"
  // Port: 389,
  Const        r2, 389
  // UseSSL: false,
  Const        r3, false
  // BindDN: "uid=readonlyuser,ou=People,dc=example,dc=com",
  Const        r4, "uid=readonlyuser,ou=People,dc=example,dc=com"
  // BindPassword: "readonlypassword",
  Const        r5, "readonlypassword"
  // UserFilter: "(uid=%s)",
  Const        r6, "(uid=%s)"
  // GroupFilter: "(memberUid=%s)",
  Const        r7, "(memberUid=%s)"
  // Attributes: ["givenName", "sn", "mail", "uid"],
  Const        r8, ["givenName", "sn", "mail", "uid"]
  // let client = LDAPClient{
  Const        r9, "__name"
  Const        r10, "LDAPClient"
  // Base: "dc=example,dc=com",
  Const        r11, "Base"
  Move         r12, r0
  // Host: "ldap.example.com",
  Const        r13, "Host"
  Move         r14, r1
  // Port: 389,
  Const        r15, "Port"
  Move         r16, r2
  // UseSSL: false,
  Const        r17, "UseSSL"
  Move         r18, r3
  // BindDN: "uid=readonlyuser,ou=People,dc=example,dc=com",
  Const        r19, "BindDN"
  Move         r20, r4
  // BindPassword: "readonlypassword",
  Const        r21, "BindPassword"
  Move         r22, r5
  // UserFilter: "(uid=%s)",
  Const        r23, "UserFilter"
  Move         r24, r6
  // GroupFilter: "(memberUid=%s)",
  Const        r25, "GroupFilter"
  Move         r26, r7
  // Attributes: ["givenName", "sn", "mail", "uid"],
  Const        r27, "Attributes"
  Move         r28, r8
  // let client = LDAPClient{
  MakeMap      r29, 10, r9
  Move         r30, r29
  // if connect(client) {
  Move         r31, r30
  Call         r32, connect, r31
  JumpIfFalse  r32, L0
  // print("Connected to " + client.Host)
  Const        r33, "Connected to "
  Const        r34, "Host"
  Index        r35, r30, r34
  Add          r36, r33, r35
  Print        r36
  // if connect(client) {
  Jump         L1
L0:
  // print("Failed to connect")
  Const        r37, "Failed to connect"
  Print        r37
L1:
  Return       r0
