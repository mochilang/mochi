func main (regs=85)
  // let nPts = 100
  Const        r12, 100
  Move         r0, r12
  SetGlobal    0,0,0,0
  // let rMin = 10
  Const        r13, 10
  Move         r1, r13
  SetGlobal    1,1,0,0
  // let rMax = 15
  Const        r14, 15
  Move         r2, r14
  SetGlobal    2,2,0,0
  // let span = rMax + 1 + rMax
  Const        r15, 1
  AddInt       r16, r2, r15
  AddInt       r17, r16, r2
  Cast         r18, r17, bigint
  Move         r3, r18
  SetGlobal    3,3,0,0
  // var rows: list<list<string>> = []
  Const        r19, []
  Move         r4, r19
  SetGlobal    4,4,0,0
  // var r = 0
  Const        r20, 0
  Move         r5, r20
  SetGlobal    5,5,0,0
L3:
  // while r < span {
  Less         r21, r5, r3
  JumpIfFalse  r21, L0
  // var row: list<string> = []
  Const        r19, []
  Move         r22, r19
  // var c = 0
  Const        r20, 0
  Move         r23, r20
L2:
  // while c < span * 2 {
  Const        r24, 2
  Mul          r25, r3, r24
  Less         r26, r23, r25
  JumpIfFalse  r26, L1
  // row = append(row, " ")
  Const        r27, " "
  Append       r28, r22, r27
  Move         r22, r28
  // c = c + 1
  Const        r15, 1
  AddInt       r29, r23, r15
  Move         r23, r29
  // while c < span * 2 {
  Jump         L2
L1:
  // rows = append(rows, row)
  Append       r30, r4, r22
  Move         r4, r30
  SetGlobal    4,4,0,0
  // r = r + 1
  Const        r15, 1
  AddInt       r31, r5, r15
  Move         r5, r31
  SetGlobal    5,5,0,0
  // while r < span {
  Jump         L3
L0:
  // var u = 0
  Const        r20, 0
  Move         r6, r20
  SetGlobal    6,6,0,0
  // var seen: map<string, bool> = {}
  Const        r32, {}
  Move         r7, r32
  SetGlobal    7,7,0,0
  // let min2 = rMin * rMin
  Const        r33, 100
  Cast         r34, r33, bigint
  Move         r8, r34
  SetGlobal    8,8,0,0
  // let max2 = rMax * rMax
  Const        r35, 225
  Cast         r36, r35, bigint
  Move         r9, r36
  SetGlobal    9,9,0,0
  // var n = 0
  Const        r20, 0
  Move         r10, r20
  SetGlobal    10,10,0,0
L7:
  // while n < nPts {
  LessInt      r37, r10, r0
  JumpIfFalse  r37, L4
  // var x = now() % span - rMax
  Now          r38
  Mod          r39, r38, r3
  Sub          r40, r39, r2
  Move         r41, r40
  // var y = now() % span - rMax
  Now          r42
  Mod          r43, r42, r3
  Sub          r44, r43, r2
  Move         r45, r44
  // let rs = x * x + y * y
  Mul          r46, r41, r41
  Mul          r47, r45, r45
  Add          r48, r46, r47
  Move         r49, r48
  // if rs < min2 || rs > max2 { continue }
  Less         r50, r49, r8
  Less         r51, r9, r49
  Move         r52, r50
  JumpIfTrue   r52, L5
  Move         r52, r51
L5:
  JumpIfFalse  r52, L6
  Jump         L7
L6:
  // n = n + 1
  Const        r15, 1
  AddInt       r53, r10, r15
  Move         r10, r53
  SetGlobal    10,10,0,0
  // let row = y + rMax
  Add          r54, r45, r2
  Move         r55, r54
  // let col = (x + rMax) * 2
  Add          r56, r41, r2
  Const        r24, 2
  Mul          r57, r56, r24
  Move         r58, r57
  // rows[row][col] = "*"
  Index        r59, r4, r55
  Const        r60, "*"
  SetIndex     r59, r58, r60
  SetGlobal    4,4,0,0
  // let key = str(row) + "," + str(col)
  Str          r61, r55
  Const        r62, ","
  Add          r63, r61, r62
  Str          r64, r58
  Add          r65, r63, r64
  Move         r66, r65
  // if !seen[key] {
  Index        r67, r7, r66
  Not          r68, r67
  JumpIfFalse  r68, L7
  // seen[key] = true
  Const        r69, true
  SetIndex     r7, r66, r69
  SetGlobal    7,7,0,0
  // u = u + 1
  Const        r15, 1
  AddInt       r70, r6, r15
  Move         r6, r70
  SetGlobal    6,6,0,0
  // while n < nPts {
  Jump         L7
L4:
  // var i = 0
  Const        r20, 0
  Move         r11, r20
  SetGlobal    11,11,0,0
L11:
  // while i < span {
  Less         r71, r11, r3
  JumpIfFalse  r71, L8
  // var line = ""
  Const        r72, ""
  Move         r73, r72
  // var j = 0
  Const        r20, 0
  Move         r74, r20
L10:
  // while j < span * 2 {
  Const        r24, 2
  Mul          r75, r3, r24
  Less         r76, r74, r75
  JumpIfFalse  r76, L9
  // line = line + rows[i][j]
  Index        r77, r4, r11
  Index        r78, r77, r74
  Add          r79, r73, r78
  Move         r73, r79
  // j = j + 1
  Const        r15, 1
  AddInt       r80, r74, r15
  Move         r74, r80
  // while j < span * 2 {
  Jump         L10
L9:
  // print(line)
  Print        r73
  // i = i + 1
  Const        r15, 1
  AddInt       r81, r11, r15
  Move         r11, r81
  SetGlobal    11,11,0,0
  // while i < span {
  Jump         L11
L8:
  // print(str(u) + " unique points")
  Str          r82, r6
  Const        r83, " unique points"
  Add          r84, r82, r83
  Print        r84
  Return       r0
