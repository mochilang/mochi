func main (regs=1)
  // main()
  Call         r0, main, 
  Return       r0

  // fun isInt(s: string): bool {
func isInt (regs=19)
  // if len(s) == 0 { return false }
  Len          r1, r0
  Const        r2, 0
  EqualInt     r3, r1, r2
  JumpIfFalse  r3, L0
  Const        r4, false
  Return       r4
L0:
  // for ch in s { if ch < "0" || ch > "9" { return false } }
  IterPrep     r5, r0
  Len          r6, r5
  Const        r7, 0
L4:
  LessInt      r8, r7, r6
  JumpIfFalse  r8, L1
  Index        r9, r5, r7
  Move         r10, r9
  Const        r11, "0"
  Less         r12, r10, r11
  Const        r13, "9"
  Less         r14, r13, r10
  Move         r15, r12
  JumpIfTrue   r15, L2
  Move         r15, r14
L2:
  JumpIfFalse  r15, L3
  Const        r4, false
  Return       r4
L3:
  Const        r16, 1
  AddInt       r17, r7, r16
  Move         r7, r17
  Jump         L4
L1:
  // return true
  Const        r18, true
  Return       r18

  // fun main() {
func main (regs=22)
  // print("Are these strings integers?")
  Const        r0, "Are these strings integers?"
  Print        r0
  // let v = "1"
  Const        r1, "1"
  Move         r2, r1
  // var b = false
  Const        r3, false
  Move         r4, r3
  // if isInt(v) { b = true }
  Move         r5, r2
  Call         r6, isInt, r5
  JumpIfFalse  r6, L0
  Const        r7, true
  Move         r4, r7
L0:
  // print("  " + v + " -> " + str(b))
  Const        r8, "  "
  Add          r9, r8, r2
  Const        r10, " -> "
  Add          r11, r9, r10
  Str          r12, r4
  Add          r13, r11, r12
  Print        r13
  // let i = "one"
  Const        r14, "one"
  Move         r15, r14
  // print("  " + i + " -> " + str(isInt(i)))
  Const        r8, "  "
  Add          r16, r8, r15
  Const        r10, " -> "
  Add          r17, r16, r10
  Move         r18, r15
  Call         r19, isInt, r18
  Str          r20, r19
  Add          r21, r17, r20
  Print        r21
  Return       r0
