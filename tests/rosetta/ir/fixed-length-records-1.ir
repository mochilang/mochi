func __main (regs=28)
  // repeat("abcdefgh", 10),
  Const        r6, "abcdefgh"
  Move         r4, r6
  Const        r7, 10
  Move         r5, r7
  Call2        r8, repeat, r4, r5
  Move         r1, r8
  // repeat("ijklmnop", 10),
  Const        r11, "ijklmnop"
  Move         r9, r11
  Const        r7, 10
  Move         r10, r7
  Call2        r12, repeat, r9, r10
  Move         r2, r12
  // repeat("qrstuvwx", 10),
  Const        r15, "qrstuvwx"
  Move         r13, r15
  Const        r7, 10
  Move         r14, r7
  Call2        r16, repeat, r13, r14
  Move         r3, r16
  // var records = [
  MakeList     r17, 3, r1
  Move         r0, r17
  SetGlobal    0,0,0,0
  // for r in records {
  IterPrep     r18, r0
  Len          r19, r18
  Const        r20, 0
L1:
  LessInt      r21, r20, r19
  JumpIfFalse  r21, L0
  Index        r22, r18, r20
  Move         r23, r22
  // print(reverseStr(r))
  Move         r24, r23
  Call         r25, reverseStr, r24
  Print        r25
  // for r in records {
  Const        r26, 1
  AddInt       r27, r20, r26
  Move         r20, r27
  Jump         L1
L0:
  Return       r0

  // fun repeat(s: string, n: int): string {
func repeat (regs=11)
  // var out = ""
  Const        r3, ""
  Move         r4, r3
  // var i = 0
  Const        r5, 0
  Move         r6, r5
L1:
  // while i < n {
  Less         r7, r6, r2
  JumpIfFalse  r7, L0
  // out = out + s
  Add          r8, r4, r1
  Move         r4, r8
  // i = i + 1
  Const        r9, 1
  AddInt       r10, r6, r9
  Move         r6, r10
  // while i < n {
  Jump         L1
L0:
  // return out
  Return       r4

  // fun reverseStr(s: string): string {
func reverseStr (regs=16)
  // var out = ""
  Const        r2, ""
  Move         r3, r2
  // var i = len(s) - 1
  Len          r4, r1
  Const        r5, 1
  SubInt       r6, r4, r5
  Move         r7, r6
L1:
  // while i >= 0 {
  Const        r8, 0
  LessEqInt    r9, r8, r7
  JumpIfFalse  r9, L0
  // out = out + s[i:i+1]
  Move         r10, r7
  Const        r5, 1
  AddInt       r12, r7, r5
  Move         r11, r12
  Slice        r13, r1, r10, r11
  Add          r14, r3, r13
  Move         r3, r14
  // i = i - 1
  Const        r5, 1
  SubInt       r15, r7, r5
  Move         r7, r15
  // while i >= 0 {
  Jump         L1
L0:
  // return out
  Return       r3
