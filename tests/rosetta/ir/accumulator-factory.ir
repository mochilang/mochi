func main (regs=1)
  Return       r0

  // fun accumulator(sum: any): fun(any) {
func accumulator (regs=7)
  // var store: list<any> = [sum]
  Move         r1, r0
  MakeList     r2, 1, r1
  Move         r3, r2
  // fun add(nv: any): any {
  Move         r4, r3
  Move         r5, r0
  MakeClosure  r6, add, 2, r4
  // return add
  Return       r6

  // fun add(nv: any): any {
func add (regs=7)
  // store[0] = store[0] + nv
  Const        r3, 0
  Index        r4, r0, r3
  Add          r5, r4, r2
  Const        r3, 0
  SetIndex     r0, r3, r5
  // return store[0]
  Const        r3, 0
  Index        r6, r0, r3
  Return       r6

  // fun main() {
func main (regs=14)
  // let x = accumulator(1)
  Const        r1, 1
  Move         r0, r1
  Call         r2, accumulator, r0
  Move         r3, r2
  // x(5)
  Const        r5, 5
  Move         r4, r5
  CallV        r6, r3, 1, r4
  // accumulator(3)
  Const        r8, 3
  Move         r7, r8
  Call         r9, accumulator, r7
  // print(str(x(2.3)))
  Const        r11, 2.3
  Move         r10, r11
  CallV        r12, r3, 1, r10
  Str          r13, r12
  Print        r13
  Return       r0
