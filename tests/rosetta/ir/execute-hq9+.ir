func main (regs=1)
  // main()
  Call         r0, main, 
  Return       r0

  // fun bottles(n: int): string {
func bottles (regs=10)
  // if n == 0 { return "No more bottles" }
  Const        r1, 0
  Equal        r2, r0, r1
  JumpIfFalse  r2, L0
  Const        r3, "No more bottles"
  Return       r3
L0:
  // if n == 1 { return "1 bottle" }
  Const        r4, 1
  Equal        r5, r0, r4
  JumpIfFalse  r5, L1
  Const        r6, "1 bottle"
  Return       r6
L1:
  // return str(n) + " bottles"
  Str          r7, r0
  Const        r8, " bottles"
  Add          r9, r7, r8
  Return       r9

  // fun sing99() {
func sing99 (regs=19)
  // var i = 99
  Const        r0, 99
  Move         r1, r0
L1:
  // while i > 0 {
  Const        r2, 0
  LessInt      r3, r2, r1
  JumpIfFalse  r3, L0
  // print(bottles(i) + " of beer on the wall")
  Move         r4, r1
  Call         r5, bottles, r4
  Const        r6, " of beer on the wall"
  Add          r7, r5, r6
  Print        r7
  // print(bottles(i) + " of beer")
  Move         r8, r1
  Call         r9, bottles, r8
  Const        r10, " of beer"
  Add          r11, r9, r10
  Print        r11
  // print("Take one down, pass it around")
  Const        r12, "Take one down, pass it around"
  Print        r12
  // print(bottles(i - 1) + " of beer on the wall")
  Const        r14, 1
  SubInt       r15, r1, r14
  Move         r13, r15
  Call         r16, bottles, r13
  Const        r6, " of beer on the wall"
  Add          r17, r16, r6
  Print        r17
  // i = i - 1
  Const        r14, 1
  SubInt       r18, r1, r14
  Move         r1, r18
  // while i > 0 {
  Jump         L1
L0:
  Return       r0

  // fun run(code: string) {
func run (regs=22)
  // var acc = 0
  Const        r1, 0
  Move         r2, r1
  // var i = 0
  Const        r1, 0
  Move         r3, r1
L5:
  // while i < len(code) {
  Len          r4, r0
  LessInt      r5, r3, r4
  JumpIfFalse  r5, L0
  // let ch = substring(code, i, i + 1)
  Const        r6, 1
  AddInt       r7, r3, r6
  Slice        r8, r0, r3, r7
  Move         r9, r8
  // if ch == "H" { print("Hello, World!") }
  Const        r10, "H"
  Equal        r11, r9, r10
  JumpIfFalse  r11, L1
  Const        r12, "Hello, World!"
  Print        r12
  Jump         L2
L1:
  // else if ch == "Q" { print(code) }
  Const        r13, "Q"
  Equal        r14, r9, r13
  JumpIfFalse  r14, L3
  Print        r0
  Jump         L2
L3:
  // else if ch == "9" { sing99() }
  Const        r15, "9"
  Equal        r16, r9, r15
  JumpIfFalse  r16, L4
  Call         r17, sing99, 
  Jump         L2
L4:
  // else if ch == "+" { acc = acc + 1 }
  Const        r18, "+"
  Equal        r19, r9, r18
  JumpIfFalse  r19, L2
  Const        r6, 1
  AddInt       r20, r2, r6
  Move         r2, r20
L2:
  // i = i + 1
  Const        r6, 1
  AddInt       r21, r3, r6
  Move         r3, r21
  // while i < len(code) {
  Jump         L5
L0:
  Return       r0

  // fun main() {
func main (regs=4)
  // let code = input()
  Input        r0
  Move         r1, r0
  // run(code)
  Move         r2, r1
  Call         r3, run, r2
  Return       r0
