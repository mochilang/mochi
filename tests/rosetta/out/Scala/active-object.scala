// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
object active_object {
  val PI = 3.141592653589793
  def sinApprox(x: Double): Double = {
    var term = x
    var sum = x
    var n = 1
    while (n <= 12) {
      val denom = ((2 * n) * (2 * n + 1)).toDouble
      term = -term * x * x / denom
      sum += term
      n += 1
    }
    return sum
  }
  
  def main(args: Array[String]): Unit = {
    val dt = 0.01
    var s = 0
    var t1 = 0
    var k1 = sinApprox(0)
    var i = 1
    while (i <= 200) {
      val t2 = (i.toDouble) * dt
      val k2 = sinApprox(t2 * PI)
      s = s + (k1 + k2) * 0.5 * (t2 - t1)
      t1 = t2
      k1 = k2
      i += 1
    }
    var i2 = 1
    while (i2 <= 50) {
      val t2 = 2 + (i2.toDouble) * dt
      val k2 = 0
      s = s + (k1 + k2) * 0.5 * (t2 - t1)
      t1 = t2
      k1 = k2
      i2 += 1
    }
    println(s)
  }
}
