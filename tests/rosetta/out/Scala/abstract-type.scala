// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
sealed trait Beast
case class Dog(kind: String, name: String) extends Beast
case class Cat(kind: String, name: String) extends Beast

object abstract_type {
  def beastKind(b: Beast): String = b match {
    case Dog(k, _) => k
    case Cat(k, _) => k
  }
  
  def beastName(b: Beast): String = b match {
    case Dog(_, n) => n
    case Cat(_, n) => n
  }
  
  def beastCry(b: Beast): String = b match {
    case Dog(_, _) => "Woof"
    case Cat(_, _) => "Meow"
  }
  
  def bprint(b: Beast) = {
    println(beastName(b) + ", who's a " + beastKind(b) + ", cries: \"" + beastCry(b) + "\".")
  }
  
  def main() = {
    val d: Beast = Dog(kind = "labrador", name = "Max")
    val c: Beast = Cat(kind = "siamese", name = "Sammy")
    bprint(d)
    bprint(c)
  }
  
  def main(args: Array[String]): Unit = {
    main()
  }
}
