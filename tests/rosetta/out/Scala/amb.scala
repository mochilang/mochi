// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:50:23Z
object amb {
  def amb(wordsets: List[List[String]], res: List[String], idx: Int): Boolean = {
    if (idx == wordsets.length) {
      return true
    }
    var prev = ""
    if (idx > 0) {
      prev = (res).apply(idx - 1)
    }
    var i = 0
    while (i < (wordsets).apply(idx).length) {
      val w = ((wordsets).apply(idx)).apply(i)
      if (idx == 0 || prev.substring(prev.length - 1, prev.length) == w.substring(0, 1)) {
        res(idx) = w
        if (amb(wordsets, res, idx + 1)) {
          return true
        }
      }
      i += 1
    }
    return false
  }
  
  def main() = {
    val wordset = List(List("the", "that", "a"), List("frog", "elephant", "thing"), List("walked", "treaded", "grows"), List("slowly", "quickly"))
    var res: List[String] = scala.collection.mutable.ArrayBuffer[Any]()
    var i = 0
    while (i < wordset.length) {
      res = res :+ ""
      i += 1
    }
    if (amb(wordset, res, 0)) {
      var out = "[" + (res).apply(0)
      var j = 1
      while (j < res.length) {
        out = (out + " ").asInstanceOf[Int] + (res).apply(j)
        j += 1
      }
      out += "]"
      println(out)
    } else {
      println("No amb found")
    }
  }
  
  def main(args: Array[String]): Unit = {
    main()
  }
}
