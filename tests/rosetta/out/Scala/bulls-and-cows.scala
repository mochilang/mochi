// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
object bulls_and_cows {
  def indexOf(s: String, ch: String): Int = {
    var i = 0
    while (i < s.length) {
      if (s.substring(i, i + 1) == ch) {
        return i
      }
      i += 1
    }
    return -1
  }
  
  def shuffle(xs: List[String]): List[String] = {
    var arr = xs
    var i = arr.length - 1
    while (i > 0) {
      val j = now() % (i + 1)
      val tmp = (arr).apply(i).asInstanceOf[String]
      arr(i) = (arr).apply(j).asInstanceOf[String]
      arr(j) = tmp
      i -= 1
    }
    return arr
  }
  
  def main() = {
    println("Cows and Bulls")
    println("Guess four digit number of unique digits in the range 1 to 9.")
    println("A correct digit but not in the correct place is a cow.")
    println("A correct digit in the correct place is a bull.")
    var digits = scala.collection.mutable.ArrayBuffer("1", "2", "3", "4", "5", "6", "7", "8", "9")
    digits = shuffle(digits)
    var pat = (digits).apply(0).asInstanceOf[String] + (digits).apply(1).asInstanceOf[String] + (digits).apply(2).asInstanceOf[String] + (digits).apply(3).asInstanceOf[String]
    val valid = "123456789"
    while (true) {
      println("Guess: ")
      val guess = input()
      if (guess.length != 4) {
        println("Please guess a four digit number.")
        // continue
      }
      var cows = 0
      var bulls = 0
      var seen = ""
      var i = 0
      var malformed = false
      while (i < 4) {
        val cg = guess.substring(i, i + 1)
        if (indexOf(seen, cg) != (-1)) {
          println("Repeated digit: " + cg)
          malformed = true
          return
        }
        seen += cg
        val pos = indexOf(pat, cg)
        if (pos == (-1)) {
          if (indexOf(valid, cg) == (-1)) {
            println("Invalid digit: " + cg)
            malformed = true
            return
          }
        } else {
          if (pos == i) {
            bulls += 1
          } else {
            cows += 1
          }
        }
        i += 1
      }
      if (malformed) {
        // continue
      }
      println("Cows: " + cows.toString + ", bulls: " + bulls.toString)
      if (bulls == 4) {
        println("You got it.")
        return
      }
    }
  }
  
  def main(args: Array[String]): Unit = {
    main()
  }
}
