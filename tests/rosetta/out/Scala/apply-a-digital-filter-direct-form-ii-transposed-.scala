// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:51:03Z
object apply_a_digital_filter_direct_form_ii_transposed_ {
  def applyFilter(input: List[Double], a: List[Double], b: List[Double]): List[Double] = {
    var out: List[Double] = scala.collection.mutable.ArrayBuffer[Any]()
    val scale = 1 / (a).apply(0)
    var i = 0
    while (i < input.length) {
      var tmp = 0
      var j = 0
      while (j <= i && j < b.length) {
        tmp = tmp + (b).apply(j) * (input).apply(i - j)
        j += 1
      }
      j = 0
      while ((j < i && j + 1).asInstanceOf[Int] < a.length) {
        tmp = tmp - (a).apply(j + 1) * (out).apply(i - j - 1)
        j += 1
      }
      out = out :+ tmp * scale
      i += 1
    }
    return out
  }
  
  def main(args: Array[String]): Unit = {
    val a = List(1, -2.7756e-16, 0.33333333, -1.85e-17)
    val b = List(0.16666667, 0.5, 0.5, 0.16666667)
    val sig = List(-0.917843918645, 0.141984778794, 1.20536903482, 0.190286794412, -0.662370894973, -1.00700480494, -0.404707073677, 0.800482325044, 0.743500089861, 1.01090520172, 0.741527555207, 0.277841675195, 0.400833448236, -0.2085993586, -0.172842103641, -0.134316096293, 0.0259303398477, 0.490105989562, 0.549391221511, 0.9047198589)
    val res = applyFilter(sig, a, b)
    var k = 0
    while (k < res.length) {
      println((res).apply(k))
      k += 1
    }
  }
}
