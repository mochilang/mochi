#!/usr/bin/env escript
% Generated by Mochi compiler v0.10.26 on 2025-07-16T09:59:08Z
% 99-bottles-of-beer-2.erl - generated from 99-bottles-of-beer-2.mochi

fields(S) ->
    Words0 = [],
    Cur0 = "",
    I0 = 0,
    (fun Loop0(I) -> case (I < length(S)) of true -> Ch = string:substr(S, (I)+1, ((I + 1))-(I)), (case (((Ch == " ") orelse (Ch == "\n")) orelse (Ch == "\t")) of true -> (case (length(Cur0) > 0) of true -> Words1 = Words0 ++ [Cur0], Cur1 = ""; _ -> ok end); _ -> Cur2 = (Cur1 + Ch) end), I1 = (I + 1), Loop0(I1); _ -> ok end end(I0)),
    (case (length(Cur2) > 0) of true -> Words2 = Words1 ++ [Cur2]; _ -> ok end),
    Words2.

join(Xs, Sep) ->
    Res0 = "",
    I2 = 0,
    (fun Loop1(Res, I) -> case (I < length(Xs)) of true -> (case (I > 0) of true -> Res1 = (Res + Sep); _ -> ok end), Res2 = (Res + lists:nth((I)+1, Xs)), I3 = (I + 1), Loop1(I3, Res2); _ -> ok end end(Res0, I2)),
    Res2.

numberName(N) ->
    Small = ["no", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"],
    Tens = ["ones", "ten", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety"],
    (case (N < 0) of true -> ""; _ -> ok end),
    (case (N < 20) of true -> lists:nth((N)+1, Small); _ -> ok end),
    (case (N < 100) of true -> T0 = lists:nth((((N / 10)))+1, Tens), S0 = rem(N, 10), (case (S0 > 0) of true -> T1 = T0 ++ " " ++ lists:nth((S0)+1, Small); _ -> ok end), T1; _ -> ok end),
    "".

pluralizeFirst(S, N) ->
    (case (N == 1) of true -> S0; _ -> ok end),
    W = fields(S0),
    (case (length(W) > 0) of true -> W0 = lists:sublist(W, 0) ++ [lists:nth((0)+1, W) ++ "s"] ++ lists:nthtail((0)+1, W); _ -> ok end),
    join(W, " ").

randInt(Seed, N) ->
    Next = rem((((Seed * 1664525) + 1013904223)), 2147483647),
    rem(Next, N).

slur(P, D) ->
    (case (length(P) =< 2) of true -> P; _ -> ok end),
    A0 = [],
    I4 = 1,
    (fun Loop2(I, A) -> case (I < (length(P) - 1)) of true -> A1 = A ++ [string:substr(P, (I)+1, ((I + 1))-(I))], I5 = (I + 1), Loop2(A1, I5); _ -> ok end end(I4, A0)),
    Idx0 = (length(A1) - 1),
    Seed0 = D,
    (fun Loop3(Seed, Idx) -> case (Idx >= 1) of true -> Seed1 = rem((((Seed * 1664525) + 1013904223)), 2147483647), (case (rem(Seed, 100) >= D) of true -> J = rem(Seed, ((Idx + 1))), Tmp = lists:nth((Idx)+1, A1), A2 = lists:sublist(A1, Idx) ++ [lists:nth((J)+1, A1)] ++ lists:nthtail((Idx)+1, A1), A3 = lists:sublist(A2, J) ++ [Tmp] ++ lists:nthtail((J)+1, A2); _ -> ok end), Idx1 = (Idx - 1), Loop3(Seed1, Idx1); _ -> ok end end(Seed0, Idx0)),
    S1 = string:substr(P, (0)+1, (1)-(0)),
    K0 = 0,
    (fun Loop4(S, K) -> case (K < length(A3)) of true -> S2 = (S + lists:nth((K)+1, A3)), K1 = (K + 1), Loop4(S2, K1); _ -> ok end end(S1, K0)),
    S3 = (S2 + string:substr(P, ((length(P) - 1))+1, (length(P))-((length(P) - 1)))),
    W = fields(S3),
    join(W, " ").

main() ->
    I6 = 99,
    (fun Loop5(I) -> case (I > 0) of true -> io:format("~p~n", [slur(numberName(I), I) ++ " " ++ pluralizeFirst(slur("bottle of", I), I) ++ " " ++ slur("beer on the wall", I)]), io:format("~p~n", [slur(numberName(I), I) ++ " " ++ pluralizeFirst(slur("bottle of", I), I) ++ " " ++ slur("beer", I)]), io:format("~p~n", [slur("take one", I) ++ " " ++ slur("down", I) ++ " " ++ slur("pass it around", I)]), io:format("~p~n", [slur(numberName((I - 1)), I) ++ " " ++ pluralizeFirst(slur("bottle of", I), (I - 1)) ++ " " ++ slur("beer on the wall", I)]), I7 = (I - 1), Loop5(I7); _ -> ok end end(I6)).

main(_) ->
    main().
