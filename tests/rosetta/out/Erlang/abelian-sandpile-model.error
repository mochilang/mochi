run error: exit status 127
/workspace/mochi/tests/rosetta/out/Erlang/abelian-sandpile-model.erl:8:203: variable 'Row1' is unbound
%    8|     (fun Loop1(B, Y) -> case (Y < D) of true -> Row0 = [], X0 = 0, (fun Loop0(Row, X) -> case (X < D) of true -> Row1 = Row ++ [0], X1 = (X + 1), Loop0(Row1, X1); _ -> ok end end(Row0, X0)), B1 = B ++ [Row1], Y1 = (Y + 1), Loop1(B1, Y1); _ -> ok end end(B0, Y0)),
%     |                                                                                                                                                                                                           ^

/workspace/mochi/tests/rosetta/out/Erlang/abelian-sandpile-model.erl:9:5: variable 'B1' is unbound
%    9|     B1.
%     |     ^

/workspace/mochi/tests/rosetta/out/Erlang/abelian-sandpile-model.erl:12:22: variable 'X1' is unbound
%   12|     (case (mochi_get(X1, lists:nth((Y1)+1, Pile)) >= 4) of true -> PileInner0 = mochi_get(Y1, Pile), PileInnerUpd0 = maps:put(X1, (mochi_get(X1, lists:nth((Y1)+1, Pile)) - 4), PileInner0), Pile0 = Pile#{Y1 => PileInnerUpd0}, (case (Y1 > 0) of true -> PileInner1 = mochi_get((Y1 - 1), Pile0), PileInnerUpd1 = maps:put(X1, (mochi_get(X1, mochi_get((Y1 - 1), Pile0)) + 1), PileInner1), Pile1 = Pile0#{(Y1 - 1) => PileInnerUpd1}, (case (mochi_get(X1, mochi_get((Y1 - 1), Pile1)) >= 4) of true -> Pile2 = handlePile(Pile1, X1, (Y1 - 1)); _ -> ok end); _ -> ok end), (case (X1 > 0) of true -> PileInner2 = mochi_get(Y1, Pile2), PileInnerUpd2 = maps:put((X1 - 1), (mochi_get((X1 - 1), mochi_get(Y1, Pile2)) + 1), PileInner2), Pile3 = Pile2#{Y1 => PileInnerUpd2}, (case (mochi_get((X1 - 1), mochi_get(Y1, Pile3)) >= 4) of true -> Pile4 = handlePile(Pile3, (X1 - 1), Y1); _ -> ok end); _ -> ok end), (case (Y1 < (16 - 1)) of true -> PileInner3 = mochi_get((Y1 + 1), Pile4), PileInnerUpd3 = maps:put(X1, (mochi_get(X1, mochi_get((Y1 + 1), Pile4)) + 1), PileInner3), Pile5 = Pile4#{(Y1 + 1) => PileInnerUpd3}, (case (mochi_get(X1, mochi_get((Y1 + 1), Pile5)) >= 4) of true -> Pile6 = handlePile(Pile5, X1, (Y1 + 1)); _ -> ok end); _ -> ok end), (case (X1 < (16 - 1)) of true -> PileInner4 = mochi_get(Y1, Pile6), PileInnerUpd4 = maps:put((X1 + 1), (mochi_get((X1 + 1), mochi_get(Y1, Pile6)) + 1), PileInner4), Pile7 = Pile6#{Y1 => PileInnerUpd4}, (case (mochi_get((X1 + 1), mochi_get(Y1, Pile7)) >= 4) of true -> Pile8 = handlePile(Pile7, (X1 + 1), Y1); _ -> ok end); _ -> ok end), Pile9 = handlePile(Pile8, X1, Y1); _ -> ok end),
%     |                      ^

/workspace/mochi/tests/rosetta/out/Erlang/abelian-sandpile-model.erl:12:37: variable 'Y1' is unbound
%   12|     (case (mochi_get(X1, lists:nth((Y1)+1, Pile)) >= 4) of true -> PileInner0 = mochi_get(Y1, Pile), PileInnerUpd0 = maps:put(X1, (mochi_get(X1, lists:nth((Y1)+1, Pile)) - 4), PileInner0), Pile0 = Pile#{Y1 => PileInnerUpd0}, (case (Y1 > 0) of true -> PileInner1 = mochi_get((Y1 - 1), Pile0), PileInnerUpd1 = maps:put(X1, (mochi_get(X1, mochi_get((Y1 - 1), Pile0)) + 1), PileInner1), Pile1 = Pile0#{(Y1 - 1) => PileInnerUpd1}, (case (mochi_get(X1, mochi_get((Y1 - 1), Pile1)) >= 4) of true -> Pile2 = handlePile(Pile1, X1, (Y1 - 1)); _ -> ok end); _ -> ok end), (case (X1 > 0) of true -> PileInner2 = mochi_get(Y1, Pile2), PileInnerUpd2 = maps:put((X1 - 1), (mochi_get((X1 - 1), mochi_get(Y1, Pile2)) + 1), PileInner2), Pile3 = Pile2#{Y1 => PileInnerUpd2}, (case (mochi_get((X1 - 1), mochi_get(Y1, Pile3)) >= 4) of true -> Pile4 = handlePile(Pile3, (X1 - 1), Y1); _ -> ok end); _ -> ok end), (case (Y1 < (16 - 1)) of true -> PileInner3 = mochi_get((Y1 + 1), Pile4), PileInnerUpd3 = maps:put(X1, (mochi_get(X1, mochi_get((Y1 + 1), Pile4)) + 1), PileInner3), Pile5 = Pile4#{(Y1 + 1) => PileInnerUpd3}, (case (mochi_get(X1, mochi_get((Y1 + 1), Pile5)) >= 4) of true -> Pile6 = handlePile(Pile5, X1, (Y1 + 1)); _ -> ok end); _ -> ok end), (case (X1 < (16 - 1)) of true -> PileInner4 = mochi_get(Y1, Pile6), PileInnerUpd4 = maps:put((X1 + 1), (mochi_get((X1 + 1), mochi_get(Y1, Pile6)) + 1), PileInner4), Pile7 = Pile6#{Y1 => PileInnerUpd4}, (case (mochi_get((X1 + 1), mochi_get(Y1, Pile7)) >= 4) of true -> Pile8 = handlePile(Pile7, (X1 + 1), Y1); _ -> ok end); _ -> ok end), Pile9 = handlePile(Pile8, X1, Y1); _ -> ok end),
%     |                                     ^

/workspace/mochi/tests/rosetta/out/Erlang/abelian-sandpile-model.erl:12:615: variable 'Pile2' unsafe in 'case' (line 12, column 227)
%   12|     (case (mochi_get(X1, lists:nth((Y1)+1, Pile)) >= 4) of true -> PileInner0 = mochi_get(Y1, Pile), PileInnerUpd0 = maps:put(X1, (mochi_get(X1, lists:nth((Y1)+1, Pile)) - 4), PileInner0), Pile0 = Pile#{Y1 => PileInnerUpd0}, (case (Y1 > 0) of true -> PileInner1 = mochi_get((Y1 - 1), Pile0), PileInnerUpd1 = maps:put(X1, (mochi_get(X1, mochi_get((Y1 - 1), Pile0)) + 1), PileInner1), Pile1 = Pile0#{(Y1 - 1) => PileInnerUpd1}, (case (mochi_get(X1, mochi_get((Y1 - 1), Pile1)) >= 4) of true -> Pile2 = handlePile(Pile1, X1, (Y1 - 1)); _ -> ok end); _ -> ok end), (case (X1 > 0) of true -> PileInner2 = mochi_get(Y1, Pile2), PileInnerUpd2 = maps:put((X1 - 1), (mochi_get((X1 - 1), mochi_get(Y1, Pile2)) + 1), PileInner2), Pile3 = Pile2#{Y1 => PileInnerUpd2}, (case (mochi_get((X1 - 1), mochi_get(Y1, Pile3)) >= 4) of true -> Pile4 = handlePile(Pile3, (X1 - 1), Y1); _ -> ok end); _ -> ok end), (case (Y1 < (16 - 1)) of true -> PileInner3 = mochi_get((Y1 + 1), Pile4), PileInnerUpd3 = maps:put(X1, (mochi_get(X1, mochi_get((Y1 + 1), Pile4)) + 1), PileInner3), Pile5 = Pile4#{(Y1 + 1) => PileInnerUpd3}, (case (mochi_get(X1, mochi_get((Y1 + 1), Pile5)) >= 4) of true -> Pile6 = handlePile(Pile5, X1, (Y1 + 1)); _ -> ok end); _ -> ok end), (case (X1 < (16 - 1)) of true -> PileInner4 = mochi_get(Y1, Pile6), PileInnerUpd4 = maps:put((X1 + 1), (mochi_get((X1 + 1), mochi_get(Y1, Pile6)) + 1), PileInner4), Pile7 = Pile6#{Y1 => PileInnerUpd4}, (case (mochi_get((X1 + 1), mochi_get(Y1, Pile7)) >= 4) of true -> Pile8 = handlePile(Pile7, (X1 + 1), Y1); _ -> ok end); _ -> ok end), Pile9 = handlePile(Pile8, X1, Y1); _ -> ok end),
%     |

/workspace/mochi/tests/rosetta/out/Erlang/abelian-sandpile-model.erl:12:958: variable 'Pile4' unsafe in 'case' (line 12, column 563)
%   12|     (case (mochi_get(X1, lists:nth((Y1)+1, Pile)) >= 4) of true -> PileInner0 = mochi_get(Y1, Pile), PileInnerUpd0 = maps:put(X1, (mochi_get(X1, lists:nth((Y1)+1, Pile)) - 4), PileInner0), Pile0 = Pile#{Y1 => PileInnerUpd0}, (case (Y1 > 0) of true -> PileInner1 = mochi_get((Y1 - 1), Pile0), PileInnerUpd1 = maps:put(X1, (mochi_get(X1, mochi_get((Y1 - 1), Pile0)) + 1), PileInner1), Pile1 = Pile0#{(Y1 - 1) => PileInnerUpd1}, (case (mochi_get(X1, mochi_get((Y1 - 1), Pile1)) >= 4) of true -> Pile2 = handlePile(Pile1, X1, (Y1 - 1)); _ -> ok end); _ -> ok end), (case (X1 > 0) of true -> PileInner2 = mochi_get(Y1, Pile2), PileInnerUpd2 = maps:put((X1 - 1), (mochi_get((X1 - 1), mochi_get(Y1, Pile2)) + 1), PileInner2), Pile3 = Pile2#{Y1 => PileInnerUpd2}, (case (mochi_get((X1 - 1), mochi_get(Y1, Pile3)) >= 4) of true -> Pile4 = handlePile(Pile3, (X1 - 1), Y1); _ -> ok end); _ -> ok end), (case (Y1 < (16 - 1)) of true -> PileInner3 = mochi_get((Y1 + 1), Pile4), PileInnerUpd3 = maps:put(X1, (mochi_get(X1, mochi_get((Y1 + 1), Pile4)) + 1), PileInner3), Pile5 = Pile4#{(Y1 + 1) => PileInnerUpd3}, (case (mochi_get(X1, mochi_get((Y1 + 1), Pile5)) >= 4) of true -> Pile6 = handlePile(Pile5, X1, (Y1 + 1)); _ -> ok end); _ -> ok end), (case (X1 < (16 - 1)) of true -> PileInner4 = mochi_get(Y1, Pile6), PileInnerUpd4 = maps:put((X1 + 1), (mochi_get((X1 + 1), mochi_get(Y1, Pile6)) + 1), PileInner4), Pile7 = Pile6#{Y1 => PileInnerUpd4}, (case (mochi_get((X1 + 1), mochi_get(Y1, Pile7)) >= 4) of true -> Pile8 = handlePile(Pile7, (X1 + 1), Y1); _ -> ok end); _ -> ok end), Pile9 = handlePile(Pile8, X1, Y1); _ -> ok end),
%     |

/workspace/mochi/tests/rosetta/out/Erlang/abelian-sandpile-model.erl:12:1295: variable 'Pile6' unsafe in 'case' (line 12, column 893)
%   12|     (case (mochi_get(X1, lists:nth((Y1)+1, Pile)) >= 4) of true -> PileInner0 = mochi_get(Y1, Pile), PileInnerUpd0 = maps:put(X1, (mochi_get(X1, lists:nth((Y1)+1, Pile)) - 4), PileInner0), Pile0 = Pile#{Y1 => PileInnerUpd0}, (case (Y1 > 0) of true -> PileInner1 = mochi_get((Y1 - 1), Pile0), PileInnerUpd1 = maps:put(X1, (mochi_get(X1, mochi_get((Y1 - 1), Pile0)) + 1), PileInner1), Pile1 = Pile0#{(Y1 - 1) => PileInnerUpd1}, (case (mochi_get(X1, mochi_get((Y1 - 1), Pile1)) >= 4) of true -> Pile2 = handlePile(Pile1, X1, (Y1 - 1)); _ -> ok end); _ -> ok end), (case (X1 > 0) of true -> PileInner2 = mochi_get(Y1, Pile2), PileInnerUpd2 = maps:put((X1 - 1), (mochi_get((X1 - 1), mochi_get(Y1, Pile2)) + 1), PileInner2), Pile3 = Pile2#{Y1 => PileInnerUpd2}, (case (mochi_get((X1 - 1), mochi_get(Y1, Pile3)) >= 4) of true -> Pile4 = handlePile(Pile3, (X1 - 1), Y1); _ -> ok end); _ -> ok end), (case (Y1 < (16 - 1)) of true -> PileInner3 = mochi_get((Y1 + 1), Pile4), PileInnerUpd3 = maps:put(X1, (mochi_get(X1, mochi_get((Y1 + 1), Pile4)) + 1), PileInner3), Pile5 = Pile4#{(Y1 + 1) => PileInnerUpd3}, (case (mochi_get(X1, mochi_get((Y1 + 1), Pile5)) >= 4) of true -> Pile6 = handlePile(Pile5, X1, (Y1 + 1)); _ -> ok end); _ -> ok end), (case (X1 < (16 - 1)) of true -> PileInner4 = mochi_get(Y1, Pile6), PileInnerUpd4 = maps:put((X1 + 1), (mochi_get((X1 + 1), mochi_get(Y1, Pile6)) + 1), PileInner4), Pile7 = Pile6#{Y1 => PileInnerUpd4}, (case (mochi_get((X1 + 1), mochi_get(Y1, Pile7)) >= 4) of true -> Pile8 = handlePile(Pile7, (X1 + 1), Y1); _ -> ok end); _ -> ok end), Pile9 = handlePile(Pile8, X1, Y1); _ -> ok end),
%     |

/workspace/mochi/tests/rosetta/out/Erlang/abelian-sandpile-model.erl:12:1591: variable 'Pile8' unsafe in 'case' (line 12, column 1236)
%   12|     (case (mochi_get(X1, lists:nth((Y1)+1, Pile)) >= 4) of true -> PileInner0 = mochi_get(Y1, Pile), PileInnerUpd0 = maps:put(X1, (mochi_get(X1, lists:nth((Y1)+1, Pile)) - 4), PileInner0), Pile0 = Pile#{Y1 => PileInnerUpd0}, (case (Y1 > 0) of true -> PileInner1 = mochi_get((Y1 - 1), Pile0), PileInnerUpd1 = maps:put(X1, (mochi_get(X1, mochi_get((Y1 - 1), Pile0)) + 1), PileInner1), Pile1 = Pile0#{(Y1 - 1) => PileInnerUpd1}, (case (mochi_get(X1, mochi_get((Y1 - 1), Pile1)) >= 4) of true -> Pile2 = handlePile(Pile1, X1, (Y1 - 1)); _ -> ok end); _ -> ok end), (case (X1 > 0) of true -> PileInner2 = mochi_get(Y1, Pile2), PileInnerUpd2 = maps:put((X1 - 1), (mochi_get((X1 - 1), mochi_get(Y1, Pile2)) + 1), PileInner2), Pile3 = Pile2#{Y1 => PileInnerUpd2}, (case (mochi_get((X1 - 1), mochi_get(Y1, Pile3)) >= 4) of true -> Pile4 = handlePile(Pile3, (X1 - 1), Y1); _ -> ok end); _ -> ok end), (case (Y1 < (16 - 1)) of true -> PileInner3 = mochi_get((Y1 + 1), Pile4), PileInnerUpd3 = maps:put(X1, (mochi_get(X1, mochi_get((Y1 + 1), Pile4)) + 1), PileInner3), Pile5 = Pile4#{(Y1 + 1) => PileInnerUpd3}, (case (mochi_get(X1, mochi_get((Y1 + 1), Pile5)) >= 4) of true -> Pile6 = handlePile(Pile5, X1, (Y1 + 1)); _ -> ok end); _ -> ok end), (case (X1 < (16 - 1)) of true -> PileInner4 = mochi_get(Y1, Pile6), PileInnerUpd4 = maps:put((X1 + 1), (mochi_get((X1 + 1), mochi_get(Y1, Pile6)) + 1), PileInner4), Pile7 = Pile6#{Y1 => PileInnerUpd4}, (case (mochi_get((X1 + 1), mochi_get(Y1, Pile7)) >= 4) of true -> Pile8 = handlePile(Pile7, (X1 + 1), Y1); _ -> ok end); _ -> ok end), Pile9 = handlePile(Pile8, X1, Y1); _ -> ok end),
%     |

/workspace/mochi/tests/rosetta/out/Erlang/abelian-sandpile-model.erl:13:5: variable 'Pile9' unsafe in 'case' (line 12, column 6)
%   13|     Pile9.
%     |     ^

/workspace/mochi/tests/rosetta/out/Erlang/abelian-sandpile-model.erl:18:162: variable 'Pile9' is unbound
%   18|     (fun Loop3(Row) -> case (Row < D) of true -> Line0 = "", Col0 = 0, (fun Loop2(Line, Col) -> case (Col < D) of true -> V0 = mochi_get(Col, lists:nth((Row)+1, Pile9)), (case (V0 > 3) of true -> V1 = 3; _ -> ok end), Line1 = (Line + lists:nth((V1)+1, Chars)), Col1 = (Col + 1), Loop2(Col1, Line1); _ -> ok end end(Line0, Col0)), io:format("~p~n", [Line1]), Row3 = (Row + 1), Loop3(Row3); _ -> ok end end(Row2)).
%     |                                                                                                                                                                  ^

/workspace/mochi/tests/rosetta/out/Erlang/abelian-sandpile-model.erl:18:246: variable 'V1' unsafe in 'case' (line 18, column 172)
%   18|     (fun Loop3(Row) -> case (Row < D) of true -> Line0 = "", Col0 = 0, (fun Loop2(Line, Col) -> case (Col < D) of true -> V0 = mochi_get(Col, lists:nth((Row)+1, Pile9)), (case (V0 > 3) of true -> V1 = 3; _ -> ok end), Line1 = (Line + lists:nth((V1)+1, Chars)), Col1 = (Col + 1), Loop2(Col1, Line1); _ -> ok end end(Line0, Col0)), io:format("~p~n", [Line1]), Row3 = (Row + 1), Loop3(Row3); _ -> ok end end(Row2)).
%     |                                                                                                                                                                                                                                                      ^

/workspace/mochi/tests/rosetta/out/Erlang/abelian-sandpile-model.erl:18:350: variable 'Line1' is unbound
%   18|     (fun Loop3(Row) -> case (Row < D) of true -> Line0 = "", Col0 = 0, (fun Loop2(Line, Col) -> case (Col < D) of true -> V0 = mochi_get(Col, lists:nth((Row)+1, Pile9)), (case (V0 > 3) of true -> V1 = 3; _ -> ok end), Line1 = (Line + lists:nth((V1)+1, Chars)), Col1 = (Col + 1), Loop2(Col1, Line1); _ -> ok end end(Line0, Col0)), io:format("~p~n", [Line1]), Row3 = (Row + 1), Loop3(Row3); _ -> ok end end(Row2)).
%     |                                                                                                                                                                                                                                                                                                                                                              ^

/workspace/mochi/tests/rosetta/out/Erlang/abelian-sandpile-model.erl:22:28: variable 'Hdim' is unbound
%   22|     PileInner5 = mochi_get(Hdim, Pile10), PileInnerUpd5 = maps:put(Hdim, 16, PileInner5), Pile11 = Pile10#{Hdim => PileInnerUpd5},
%     |                            ^

/workspace/mochi/tests/rosetta/out/Erlang/abelian-sandpile-model.erl:11:18: Warning: variable 'X' is unused
%   11| handlePile(Pile, X, Y) ->
%     |                  ^

/workspace/mochi/tests/rosetta/out/Erlang/abelian-sandpile-model.erl:11:21: Warning: variable 'Y' is unused
%   11| handlePile(Pile, X, Y) ->
%     |                     ^

/workspace/mochi/tests/rosetta/out/Erlang/abelian-sandpile-model.erl:15:10: Warning: variable 'Pile' is unused
%   15| drawPile(Pile, D) ->
%     |          ^

escript: There were compilation errors.
