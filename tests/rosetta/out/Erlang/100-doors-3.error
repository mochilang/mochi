run: exit status 127
/tmp/100-doors-3.erl:7:165: variable 'J1' is unbound
%    7|     {J1, Result2} = lists:foldl(fun(I, {J, Result}) -> J0 = 1, (fun Loop0(J) -> case ((J * J) < I) of true -> J1 = (J + 1), Loop0(J1); _ -> ok end end)(J), (case ((J1 * J1) == I) of true -> Result1 = Result ++ "O"; _ -> Result2 = Result1 ++ "-" end), {J1, Result2} end, {J, Result0}, lists:seq(1, (101)-1)),
%     |                                                                                                                                                                     ^

/tmp/100-doors-3.erl:7:170: variable 'J1' is unbound
%    7|     {J1, Result2} = lists:foldl(fun(I, {J, Result}) -> J0 = 1, (fun Loop0(J) -> case ((J * J) < I) of true -> J1 = (J + 1), Loop0(J1); _ -> ok end end)(J), (case ((J1 * J1) == I) of true -> Result1 = Result ++ "O"; _ -> Result2 = Result1 ++ "-" end), {J1, Result2} end, {J, Result0}, lists:seq(1, (101)-1)),
%     |                                                                                                                                                                          ^

/tmp/100-doors-3.erl:7:231: variable 'Result1' is unbound
%    7|     {J1, Result2} = lists:foldl(fun(I, {J, Result}) -> J0 = 1, (fun Loop0(J) -> case ((J * J) < I) of true -> J1 = (J + 1), Loop0(J1); _ -> ok end end)(J), (case ((J1 * J1) == I) of true -> Result1 = Result ++ "O"; _ -> Result2 = Result1 ++ "-" end), {J1, Result2} end, {J, Result0}, lists:seq(1, (101)-1)),
%     |                                                                                                                                                                                                                                       ^

/tmp/100-doors-3.erl:7:257: variable 'Result2' unsafe in 'case' (line 7, column 158)
%    7|     {J1, Result2} = lists:foldl(fun(I, {J, Result}) -> J0 = 1, (fun Loop0(J) -> case ((J * J) < I) of true -> J1 = (J + 1), Loop0(J1); _ -> ok end end)(J), (case ((J1 * J1) == I) of true -> Result1 = Result ++ "O"; _ -> Result2 = Result1 ++ "-" end), {J1, Result2} end, {J, Result0}, lists:seq(1, (101)-1)),
%     |                                                                                                                                                                                                                                                                 ^

/tmp/100-doors-3.erl:7:272: variable 'J' is unbound
%    7|     {J1, Result2} = lists:foldl(fun(I, {J, Result}) -> J0 = 1, (fun Loop0(J) -> case ((J * J) < I) of true -> J1 = (J + 1), Loop0(J1); _ -> ok end end)(J), (case ((J1 * J1) == I) of true -> Result1 = Result ++ "O"; _ -> Result2 = Result1 ++ "-" end), {J1, Result2} end, {J, Result0}, lists:seq(1, (101)-1)),
%     |                                                                                                                                                                                                                                                                                ^

/tmp/100-doors-3.erl:7:6: Warning: variable 'J1' is unused
%    7|     {J1, Result2} = lists:foldl(fun(I, {J, Result}) -> J0 = 1, (fun Loop0(J) -> case ((J * J) < I) of true -> J1 = (J + 1), Loop0(J1); _ -> ok end end)(J), (case ((J1 * J1) == I) of true -> Result1 = Result ++ "O"; _ -> Result2 = Result1 ++ "-" end), {J1, Result2} end, {J, Result0}, lists:seq(1, (101)-1)),
%     |      ^

/tmp/100-doors-3.erl:7:56: Warning: variable 'J0' is unused
%    7|     {J1, Result2} = lists:foldl(fun(I, {J, Result}) -> J0 = 1, (fun Loop0(J) -> case ((J * J) < I) of true -> J1 = (J + 1), Loop0(J1); _ -> ok end end)(J), (case ((J1 * J1) == I) of true -> Result1 = Result ++ "O"; _ -> Result2 = Result1 ++ "-" end), {J1, Result2} end, {J, Result0}, lists:seq(1, (101)-1)),
%     |                                                        ^

/tmp/100-doors-3.erl:7:75: Warning: variable 'J' shadowed in 'fun'
%    7|     {J1, Result2} = lists:foldl(fun(I, {J, Result}) -> J0 = 1, (fun Loop0(J) -> case ((J * J) < I) of true -> J1 = (J + 1), Loop0(J1); _ -> ok end end)(J), (case ((J1 * J1) == I) of true -> Result1 = Result ++ "O"; _ -> Result2 = Result1 ++ "-" end), {J1, Result2} end, {J, Result0}, lists:seq(1, (101)-1)),
%     |                                                                           ^

/tmp/100-doors-3.erl:7:191: Warning: variable 'Result1' is unused
%    7|     {J1, Result2} = lists:foldl(fun(I, {J, Result}) -> J0 = 1, (fun Loop0(J) -> case ((J * J) < I) of true -> J1 = (J + 1), Loop0(J1); _ -> ok end end)(J), (case ((J1 * J1) == I) of true -> Result1 = Result ++ "O"; _ -> Result2 = Result1 ++ "-" end), {J1, Result2} end, {J, Result0}, lists:seq(1, (101)-1)),
%     |                                                                                                                                                                                               ^

escript: There were compilation errors.
