//go:build ignore

// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z

package main

import (
	"fmt"
	"strings"
)

type v map[string]any

type Base struct {
	Name  string  `json:"name"`
	Price float64 `json:"price"`
	Color string  `json:"color"`
}

type Update struct {
	Price float64 `json:"price"`
	Color string  `json:"color"`
	Year  int     `json:"year"`
}

// line 1
func merge(base map[string]any, update map[string]any) map[string]any {
	var result map[string]any = map[string]any{}
	for k := range base {
		result[k] = base[k]
	}
	for k := range update {
		result[k] = update[k]
	}
	return result
}

// line 12
func main() {
	var base Base = Base{
		Name:  "Rocket Skates",
		Price: 12.75,
		Color: "yellow",
	}
	var update Update = Update{
		Price: 15.25,
		Color: "red",
		Year:  1974,
	}
	result := merge(map[string]any(base), map[string]any(update))
	fmt.Println(strings.Join([]string{fmt.Sprint(any(result))}, " "))
}

func main() {
	main()
}
