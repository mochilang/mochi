//go:build ignore

// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z

package main

import (
	"fmt"
	"strings"
)

type v map[string]any

// line 4
func mod(n int, m int) int {
	return (((n % m) + m) % m)
}

// line 8
func isPrime(n int) bool {
	if n < 2 {
		return false
	}
	if (n % 2) == 0 {
		return (n == 2)
	}
	if (n % 3) == 0 {
		return (n == 3)
	}
	d := 5
	for (d * d) <= n {
		if (n % d) == 0 {
			return false
		}
		d = (d + 2)
		if (n % d) == 0 {
			return false
		}
		d = (d + 4)
	}
	return true
}

// line 22
func pad(n int, width int) string {
	s := fmt.Sprint(any(n))
	for len(any(s)) < width {
		s = " " + s
	}
	return s
}

// line 30
func carmichael(p1 int) {
	for h3 := 2; h3 < p1; h3++ {
		for d := 1; d < (h3 + p1); d++ {
			if ((((h3 + p1) * (p1 - 1)) % d) == 0) && (mod((-p1*p1), h3) == (d % h3)) {
				p2 := (float64(1) + (float64(((p1 - 1) * (h3 + p1))) / float64(d)))
				if !(isPrime(int(p2))) {
					continue
				}
				p3 := (float64(1) + ((float64(p1) * p2) / float64(h3)))
				if !(isPrime(int(p3))) {
					continue
				}
				if ((p2 * p3) % float64((p1 - 1))) != 1 {
					continue
				}
				c := ((float64(p1) * p2) * p3)
				fmt.Println(strings.TrimSuffix(fmt.Sprintln(any(pad(p1, 2)+"   "+pad(int(p2), 4)+"   "+pad(int(p3), 5)+"     "+fmt.Sprint(any(c)))), "\n"))
			}
		}
	}
}

func main() {
	fmt.Println(strings.TrimSuffix(fmt.Sprintln(any("The following are Carmichael munbers for p1 <= 61:\n")), "\n"))
	fmt.Println(strings.TrimSuffix(fmt.Sprintln(any("p1     p2      p3     product")), "\n"))
	fmt.Println(strings.TrimSuffix(fmt.Sprintln(any("==     ==      ==     =======")), "\n"))
	for p1 := 2; p1 < 62; p1++ {
		if isPrime(p1) {
			carmichael(p1)
		}
	}
}
