//go:build ignore

// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z

package main

import (
	"fmt"
)

type v map[string]any

// line 3
func listStr(xs []int) string {
	s := "["
	i := 0
	for i < len(xs) {
		s = s + fmt.Sprint(xs[i])
		if (i + 1) < len(xs) {
			s = s + " "
		}
		i = (i + 1)
	}
	s = s + "]"
	return s
}

var s []int

func main() {
	s = a[0:4]
	a := []int{
		0,
		0,
		0,
		0,
		0,
	}
	fmt.Println("len(a) = " + fmt.Sprint(len(a)))
	fmt.Println("a = " + listStr(a))
	a[0] = 3
	fmt.Println("a = " + listStr(a))
	fmt.Println("a[0] = " + fmt.Sprint(a[0]))
	cap_s := 5
	fmt.Println("s = " + listStr(s))
	fmt.Println("len(s) = " + fmt.Sprint(len(s)) + "  cap(s) = " + fmt.Sprint(cap_s))
	s = a[0:5]
	fmt.Println("s = " + listStr(s))
	a[0] = 22
	s[0] = 22
	fmt.Println("a = " + listStr(a))
	fmt.Println("s = " + listStr(s))
	s = append(s, 4)
	s = append(s, 5)
	s = append(s, 6)
	cap_s = 10
	fmt.Println("s = " + listStr(s))
	fmt.Println("len(s) = " + fmt.Sprint(len(s)) + "  cap(s) = " + fmt.Sprint(cap_s))
	a[4] = -1
	fmt.Println("a = " + listStr(a))
	fmt.Println("s = " + listStr(s))
	s = []int{}
	for i := 0; i < 8; i++ {
		s = append(s, 0)
	}
	cap_s = 8
	fmt.Println("s = " + listStr(s))
	fmt.Println("len(s) = " + fmt.Sprint(len(s)) + "  cap(s) = " + fmt.Sprint(cap_s))
}
