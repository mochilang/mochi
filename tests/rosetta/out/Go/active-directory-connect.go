//go:build ignore

// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z

package main

import (
	"fmt"
)

type LDAPClient struct {
	Base         string   `json:"Base"`
	Host         string   `json:"Host"`
	Port         int      `json:"Port"`
	UseSSL       bool     `json:"UseSSL"`
	BindDN       string   `json:"BindDN"`
	BindPassword string   `json:"BindPassword"`
	UserFilter   string   `json:"UserFilter"`
	GroupFilter  string   `json:"GroupFilter"`
	Attributes   []string `json:"Attributes"`
}

type v = LDAPClient

// line 19
func connect(client LDAPClient) bool {
	return ((client.Host != "") && (client.Port > 0))
}

// line 23
func main() {
	client := LDAPClient{Base: "dc=example,dc=com", Host: "ldap.example.com", Port: 389, UseSSL: false, BindDN: "uid=readonlyuser,ou=People,dc=example,dc=com", BindPassword: "readonlypassword", UserFilter: "(uid=%s)", GroupFilter: "(memberUid=%s)", Attributes: []string{
		"givenName",
		"sn",
		"mail",
		"uid",
	}}
	if connect(&client) {
		fmt.Println("Connected to " + client.Host)
	} else {
		fmt.Println("Failed to connect")
	}
}

func main() {
	main()
}
