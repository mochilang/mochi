//go:build ignore

// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z

package main

import (
	"fmt"
	"strings"
)

type v map[string]any

// line 4
func writeTwo() []string {
	return []string{"jsmith:x:1001:1000:Joe Smith,Room 1007,(234)555-8917,(234)555-0077,jsmith@rosettacode.org:/home/jsmith:/bin/bash", "jdoe:x:1002:1000:Jane Doe,Room 1004,(234)555-8914,(234)555-0044,jdoe@rosettacode.org:/home/jsmith:/bin/bash"}
}

// line 11
func appendOneMore(lines []string) []string {
	return append(_toAnySlice(lines), any("xyz:x:1003:1000:X Yz,Room 1003,(234)555-8913,(234)555-0033,xyz@rosettacode.org:/home/xyz:/bin/bash"))
}

// line 15
func main() {
	lines := writeTwo()
	lines = appendOneMore(lines)
	if (len(any(lines)) >= 3) && (lines[2] == "xyz:x:1003:1000:X Yz,Room 1003,(234)555-8913,(234)555-0033,xyz@rosettacode.org:/home/xyz:/bin/bash") {
		fmt.Println(strings.TrimSuffix(fmt.Sprintln(any("append okay")), "\n"))
	} else {
		fmt.Println(strings.TrimSuffix(fmt.Sprintln(any("it didn't work")), "\n"))
	}
}

func main() {
	main()
}

func _toAnySlice[T any](s []T) []any {
	out := make([]any, len(s))
	for i, v := range s {
		out[i] = v
	}
	return out
}
