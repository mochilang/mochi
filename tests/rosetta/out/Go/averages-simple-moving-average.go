//go:build ignore

// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z

package main

import (
	"fmt"
)

type v map[string]any

// line 4
func indexOf(s string, ch string) int {
	i := 0
	for i < len(s) {
		if string([]rune(s)[i:(i+1)]) == ch {
			return i
		}
		i = (i + 1)
	}
	return -1
}

// line 15
func fmt3(x float64) string {
	y := (float64(int(((x * 1000.0) + 0.5))) / 1000.0)
	s := fmt.Sprint(y)
	dot := indexOf(s, ".")
	if dot == (0 - 1) {
		s = s + ".000"
	} else {
		decs := ((len(s) - dot) - 1)
		if decs > 3 {
			s = string([]rune(s)[0:(dot + 4)])
		} else {
			for decs < 3 {
				s = s + "0"
				decs = (decs + 1)
			}
		}
	}
	return s
}

// line 35
func pad(s string, width int) string {
	out := s
	for len(out) < width {
		out = " " + out
	}
	return out
}

// line 43
func smaSeries(xs []float64, period int) []float64 {
	var res []float64 = []float64{}
	sum := 0.0
	i := 0
	for i < len(xs) {
		sum = (sum + xs[i])
		if i >= period {
			sum = (sum - xs[(i-period)])
		}
		denom := (i + 1)
		if denom > period {
			denom = period
		}
		res = append(res, (sum / (float64(denom))))
		i = (i + 1)
	}
	return res
}

// line 60
func main() {
	xs := []float64{
		1.0,
		2.0,
		3.0,
		4.0,
		5.0,
		5.0,
		4.0,
		3.0,
		2.0,
		1.0,
	}
	sma3 := smaSeries(xs, 3)
	sma5 := smaSeries(xs, 5)
	fmt.Println("x       sma3   sma5")
	i := 0
	for i < len(xs) {
		line := pad(fmt3(xs[i]), 5) + "  " + pad(fmt3(sma3[i]), 5) + "  " + pad(fmt3(sma5[i]), 5)
		fmt.Println(line)
		i = (i + 1)
	}
}

func main() {
	main()
}
