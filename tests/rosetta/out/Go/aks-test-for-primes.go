//go:build ignore

// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z

package main

import (
	"fmt"
)

type v map[string]any

// line 1
func poly(p int) string {
	var s string = ""
	var coef int = 1
	i := p
	if coef != 1 {
		s = s + fmt.Sprint(coef)
	}
	for i > 0 {
		s = s + "x"
		if i != 1 {
			s = s + "^" + fmt.Sprint(i)
		}
		coef = int((float64((coef * i)) / float64(((p - i) + 1))))
		d := coef
		if ((p - (i - 1)) % 2) == 1 {
			d = -d
		}
		if d < 0 {
			s = s + " - " + fmt.Sprint(-d)
		} else {
			s = s + " + " + fmt.Sprint(d)
		}
		i = (i - 1)
	}
	if s == "" {
		s = "1"
	}
	return s
}

// line 31
func aks(n int) bool {
	if n < 2 {
		return false
	}
	var c int = n
	i := 1
	for i < n {
		if (c % n) != 0 {
			return false
		}
		c = int((float64((c * (n - i))) / float64((i + 1))))
		i = (i + 1)
	}
	return true
}

// line 43
func main() {
	p := 0
	for p <= 7 {
		fmt.Println(fmt.Sprint(p) + ":  " + poly(p))
		p = (p + 1)
	}
	first := true
	p = 2
	var line string = ""
	for p < 50 {
		if aks(p) {
			if first {
				line = line + fmt.Sprint(p)
				first = false
			} else {
				line = line + " " + fmt.Sprint(p)
			}
		}
		p = (p + 1)
	}
	fmt.Println(line)
}

func main() {
	main()
}
