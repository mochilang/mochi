//go:build ignore

// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z

package main

import (
	"fmt"
)

type v map[string]any

// line 4
func amb(wordsets [][]string, res *[]string, idx int) bool {
	if idx == len(wordsets) {
		return true
	}
	prev := ""
	if idx > 0 {
		prev = res[(idx - 1)]
	}
	i := 0
	for i < len(wordsets[idx]) {
		w := wordsets[idx][i]
		if (idx == 0) || (string([]rune(prev)[(len(prev)-1):len(prev)]) == string([]rune(w)[0:1])) {
			res[idx] = w
			if amb(wordsets, res, (idx + 1)) {
				return true
			}
		}
		i = (i + 1)
	}
	return false
}

// line 26
func main() {
	wordset := [][]string{
		[]string{"the", "that", "a"},
		[]string{"frog", "elephant", "thing"},
		[]string{"walked", "treaded", "grows"},
		[]string{"slowly", "quickly"},
	}
	var res []string = []string{}
	i := 0
	for i < len(wordset) {
		res = append(res, "")
		i = (i + 1)
	}
	if amb(wordset, res, 0) {
		out := "[" + res[0]
		j := 1
		for j < len(res) {
			out = out + " " + res[j]
			j = (j + 1)
		}
		out = out + "]"
		fmt.Println(out)
	} else {
		fmt.Println("No amb found")
	}
}

func main() {
	main()
}
