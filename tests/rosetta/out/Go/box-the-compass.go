//go:build ignore

// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z

package main

import (
	"fmt"
)

type v map[string]any

// line 4
func padLeft(s string, w int) string {
	res := ""
	n := (w - len(s))
	for n > 0 {
		res = res + " "
		n = (n - 1)
	}
	return res + s
}

// line 14
func padRight(s string, w int) string {
	out := s
	i := len(s)
	for i < w {
		out = out + " "
		i = (i + 1)
	}
	return out
}

// line 24
func indexOf(s string, ch string) int {
	i := 0
	for i < len(s) {
		if string([]rune(s)[i:(i+1)]) == ch {
			return i
		}
		i = (i + 1)
	}
	return -1
}

// line 36
func format2(f float64) string {
	s := fmt.Sprint(f)
	idx := indexOf(s, ".")
	if idx < 0 {
		s = s + ".00"
	} else {
		need := (idx + 3)
		if len(s) > need {
			s = string([]rune(s)[0:need])
		} else {
			for len(s) < need {
				s = s + "0"
			}
		}
	}
	return s
}

// line 54
func cpx(h float64) int {
	x := int(((h / 11.25) + 0.5))
	x = (x % 32)
	if x < 0 {
		x = (x + 32)
	}
	return x
}

// line 96
func degrees2compasspoint(h float64) string {
	return compassPoint[cpx(h)]
}

var compassPoint []string
var i int

func main() {
	compassPoint = []string{
		"North",
		"North by east",
		"North-northeast",
		"Northeast by north",
		"Northeast",
		"Northeast by east",
		"East-northeast",
		"East by north",
		"East",
		"East by south",
		"East-southeast",
		"Southeast by east",
		"Southeast",
		"Southeast by south",
		"South-southeast",
		"South by east",
		"South",
		"South by west",
		"South-southwest",
		"Southwest by south",
		"Southwest",
		"Southwest by west",
		"West-southwest",
		"West by south",
		"West",
		"West by north",
		"West-northwest",
		"Northwest by west",
		"Northwest",
		"Northwest by north",
		"North-northwest",
		"North by west",
	}
	i = 0
	headings := []float64{
		0.0,
		16.87,
		16.88,
		33.75,
		50.62,
		50.63,
		67.5,
		84.37,
		84.38,
		101.25,
		118.12,
		118.13,
		135.0,
		151.87,
		151.88,
		168.75,
		185.62,
		185.63,
		202.5,
		219.37,
		219.38,
		236.25,
		253.12,
		253.13,
		270.0,
		286.87,
		286.88,
		303.75,
		320.62,
		320.63,
		337.5,
		354.37,
		354.38,
	}
	fmt.Println("Index  Compass point         Degree")
	for i < len(headings) {
		h := headings[i]
		idx := ((i % 32) + 1)
		cp := degrees2compasspoint(h)
		fmt.Println(padLeft(fmt.Sprint(idx), 4) + "   " + padRight(cp, 19) + " " + format2(h) + "Â°")
		i = (i + 1)
	}
}
