//go:build ignore

// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z

package main

import (
	"fmt"
	"strings"
)

type v map[string]any

// line 1
func lower(ch string) string {
	upper := "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
	lower := "abcdefghijklmnopqrstuvwxyz"
	i := 0
	for i < 26 {
		if ch == string([]rune(upper)[i:(i+1)]) {
			return string([]rune(lower)[i:(i + 1)])
		}
		i = (i + 1)
	}
	return ch
}

func main() {
	partList := []string{
		"A",
		"B",
		"C",
		"D",
	}
	nAssemblies := 3
	for cycle := 1; cycle < (nAssemblies + 1); cycle++ {
		fmt.Println("begin assembly cycle " + fmt.Sprint(cycle))
		a := ""
		for _, p := range partList {
			fmt.Println(p + " worker begins part")
			fmt.Println(p + " worker completed " + strings.ToLower(p))
			a = a + strings.ToLower(p)
		}
		fmt.Println(a + " assembled.  cycle " + fmt.Sprint(cycle) + " complete")
	}
}
