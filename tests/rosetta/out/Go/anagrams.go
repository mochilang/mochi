//go:build ignore

// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z

package main

import (
	"fmt"
)

type v map[string]any

// line 1
func sortRunes(s string) string {
	var arr []string = []string{}
	i := 0
	for i < len(s) {
		arr = append(arr, string([]rune(s)[i:(i+1)]))
		i = (i + 1)
	}
	n := len(arr)
	m := 0
	for m < n {
		j := 0
		for j < (n - 1) {
			if arr[j] > arr[(j+1)] {
				tmp := arr[j]
				arr[j] = arr[(j + 1)]
				arr[(j + 1)] = tmp
			}
			j = (j + 1)
		}
		m = (m + 1)
	}
	out := ""
	i = 0
	for i < n {
		out = out + arr[i]
		i = (i + 1)
	}
	return out
}

// line 31
func sortStrings(xs []string) []string {
	var res []string = []string{}
	tmp := xs
	for len(tmp) > 0 {
		min := tmp[0]
		idx := 0
		i := 1
		for i < len(tmp) {
			if tmp[i] < min {
				min = tmp[i]
				idx = i
			}
			i = (i + 1)
		}
		res = append(res, min)
		var out []string = []string{}
		j := 0
		for j < len(tmp) {
			if j != idx {
				out = append(out, tmp[j])
			}
			j = (j + 1)
		}
		tmp = out
	}
	return res
}

// line 59
func main() {
	words := []string{
		"abel",
		"able",
		"bale",
		"bela",
		"elba",
		"alger",
		"glare",
		"lager",
		"large",
		"regal",
		"angel",
		"angle",
		"galen",
		"glean",
		"lange",
		"caret",
		"carte",
		"cater",
		"crate",
		"trace",
		"elan",
		"lane",
		"lean",
		"lena",
		"neal",
		"evil",
		"levi",
		"live",
		"veil",
		"vile",
	}
	var groups map[string][]string = map[string][]string{}
	maxLen := 0
	for _, w := range words {
		k := sortRunes(w)
		key0 := k
		m1 := groups
		_, ok2 := m1[key0]
		if !(ok2) {
			groups[k] = []string{w}
		} else {
			groups[k] = append(groups[k], w)
		}
		if len(groups[k]) > maxLen {
			maxLen = len(groups[k])
		}
	}
	var printed map[string]bool = map[string]bool{}
	for _, w := range words {
		k := sortRunes(w)
		if len(groups[k]) == maxLen {
			key3 := k
			m4 := printed
			_, ok5 := m4[key3]
			if !(ok5) {
				g := sortStrings(groups[k])
				line := "[" + g[0]
				i := 1
				for i < len(g) {
					line = line + " " + g[i]
					i = (i + 1)
				}
				line = line + "]"
				fmt.Println(line)
				printed[k] = true
			}
		}
	}
}

func main() {
	main()
}
