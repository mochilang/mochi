//go:build ignore

// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z

package main

import (
	"fmt"
	"strings"
)

type v = Foobar

type Foobar struct {
	Exported   int `json:"Exported"`
	Unexported int `json:"unexported"`
}

// line 9
func examineAndModify(f *Foobar) Foobar {
	fmt.Println(strings.TrimSuffix(fmt.Sprintln(any(" v: {"+fmt.Sprint(any(f.Exported))+" "+fmt.Sprint(any(f.Unexported))+"} = {"+fmt.Sprint(any(f.Exported))+" "+fmt.Sprint(any(f.Unexported))+"}")), "\n"))
	fmt.Println(strings.TrimSuffix(fmt.Sprintln(any("    Idx Name       Type CanSet")), "\n"))
	fmt.Println(strings.TrimSuffix(fmt.Sprintln(any("     0: Exported   int  true")), "\n"))
	fmt.Println(strings.TrimSuffix(fmt.Sprintln(any("     1: unexported int  false")), "\n"))
	f.Exported = 16
	f.Unexported = 44
	fmt.Println(strings.TrimSuffix(fmt.Sprintln(any("  modified unexported field via unsafe")), "\n"))
	return f
}

// line 20
func anotherExample() {
	fmt.Println(strings.TrimSuffix(fmt.Sprintln(any("bufio.ReadByte returned error: unsafely injected error value into bufio inner workings")), "\n"))
}

func main() {
	obj := Foobar{Exported: 12, Unexported: 42}
	fmt.Println(strings.TrimSuffix(fmt.Sprintln(any("obj: {"+fmt.Sprint(any(obj.Exported))+" "+fmt.Sprint(any(obj.Unexported))+"}")), "\n"))
	obj = examineAndModify(&obj)
	fmt.Println(strings.TrimSuffix(fmt.Sprintln(any("obj: {"+fmt.Sprint(any(obj.Exported))+" "+fmt.Sprint(any(obj.Unexported))+"}")), "\n"))
	anotherExample()
}
