//go:build ignore

// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z

package main

import (
	"fmt"
)

type Foobar struct {
	Exported   int `json:"Exported"`
	Unexported int `json:"unexported"`
}

type v = Foobar

// line 9
func examineAndModify(f *Foobar) Foobar {
	fmt.Println(" v: {" + fmt.Sprint(f.Exported) + " " + fmt.Sprint(f.Unexported) + "} = {" + fmt.Sprint(f.Exported) + " " + fmt.Sprint(f.Unexported) + "}")
	fmt.Println("    Idx Name       Type CanSet")
	fmt.Println("     0: Exported   int  true")
	fmt.Println("     1: unexported int  false")
	f.Exported = 16
	f.Unexported = 44
	fmt.Println("  modified unexported field via unsafe")
	return f
}

// line 20
func anotherExample() {
	fmt.Println("bufio.ReadByte returned error: unsafely injected error value into bufio inner workings")
}

func main() {
	obj := Foobar{Exported: 12, Unexported: 42}
	fmt.Println("obj: {" + fmt.Sprint(obj.Exported) + " " + fmt.Sprint(obj.Unexported) + "}")
	obj = examineAndModify(&obj)
	fmt.Println("obj: {" + fmt.Sprint(obj.Exported) + " " + fmt.Sprint(obj.Unexported) + "}")
	anotherExample()
}
