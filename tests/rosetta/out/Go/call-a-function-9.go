//go:build ignore

// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z

package main

type v map[string]any

// line 2
func f() []any {
	return []any{0, 0.0}
}

// line 6
func g(a int, b float64) int {
	return 0
}

// line 10
func h(s string, nums []int) {
}

// line 14
func main() {
	ab := f()
	a := ab[0]
	b := ab[1]
	cb := f()[1]
	d := g((a).(int), (cb).(float64))
	e := g(d, (b).(float64))
	i := g(d, 2.0)
	var list []int = []int{}
	list = _convSlice[any, int](append(_toAnySlice(list), a))
	list = append(_toAnySlice(list), any(d))
	list = append(_toAnySlice(list), any(e))
	list = append(_toAnySlice(list), any(i))
	i = len(any(list))
}

func main() {
	main()
}

func _convSlice[T any, U any](s []T) []U {
	out := make([]U, len(s))
	for i, v := range s {
		out[i] = any(v).(U)
	}
	return out
}

func _toAnySlice[T any](s []T) []any {
	out := make([]any, len(s))
	for i, v := range s {
		out[i] = v
	}
	return out
}
