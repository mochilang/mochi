//go:build ignore

// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z

package main

import (
	"fmt"
)

type v map[string]any

// line 4
func sameDigits(n int, b int) bool {
	f := (n % b)
	n = int((float64(n) / float64(b)))
	for n > 0 {
		if (n % b) != f {
			return false
		}
		n = int((float64(n) / float64(b)))
	}
	return true
}

// line 16
func isBrazilian(n int) bool {
	if n < 7 {
		return false
	}
	if ((n % 2) == 0) && (n >= 8) {
		return true
	}
	b := 2
	for b < (n - 1) {
		if sameDigits(n, b) {
			return true
		}
		b = (b + 1)
	}
	return false
}

// line 33
func isPrime(n int) bool {
	if n < 2 {
		return false
	}
	if (n % 2) == 0 {
		return (n == 2)
	}
	if (n % 3) == 0 {
		return (n == 3)
	}
	d := 5
	for (d * d) <= n {
		if (n % d) == 0 {
			return false
		}
		d = (d + 2)
		if (n % d) == 0 {
			return false
		}
		d = (d + 4)
	}
	return true
}

// line 57
func main() {
	kinds := []string{" ", " odd ", " prime "}
	for _, kind := range kinds {
		fmt.Println("First 20" + kind + "Brazilian numbers:")
		c := 0
		n := 7
		for {
			if isBrazilian(n) {
				fmt.Println(fmt.Sprint(n) + " ")
				c = (c + 1)
				if c == 20 {
					fmt.Println("\n")
					break
				}
			}
			if kind == " " {
				n = (n + 1)
			} else if kind == " odd " {
				n = (n + 2)
			} else {
				for {
					n = (n + 2)
					if isPrime(n) {
						break
					}
				}
			}
		}
	}
	n := 7
	c := 0
	for c < 100000 {
		if isBrazilian(n) {
			c = (c + 1)
		}
		n = (n + 1)
	}
	fmt.Println("The 100,000th Brazilian number: " + fmt.Sprint((n - 1)))
}

func main() {
	main()
}
