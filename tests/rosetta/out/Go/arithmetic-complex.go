//go:build ignore

// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z

package main

import (
	"fmt"
	"strings"
)

type v = Complex

type Complex struct {
	Re float64 `json:"re"`
	Im float64 `json:"im"`
}

// line 9
func add(a Complex, b Complex) Complex {
	return Complex{Re: (a.Re + b.Re), Im: (a.Im + b.Im)}
}

// line 13
func mul(a Complex, b Complex) Complex {
	return Complex{Re: ((a.Re * b.Re) - (a.Im * b.Im)), Im: ((a.Re * b.Im) + (a.Im * b.Re))}
}

// line 20
func neg(a Complex) Complex {
	return Complex{Re: -a.Re, Im: -a.Im}
}

// line 24
func inv(a Complex) Complex {
	denom := ((a.Re * a.Re) + (a.Im * a.Im))
	return Complex{Re: (a.Re / denom), Im: (-a.Im / denom)}
}

// line 29
func conj(a Complex) Complex {
	return Complex{Re: a.Re, Im: -a.Im}
}

// line 33
func cstr(a Complex) string {
	s := "(" + fmt.Sprint(any(a.Re))
	if a.Im >= float64(0) {
		s = s + "+" + fmt.Sprint(any(a.Im)) + "i)"
	} else {
		s = s + fmt.Sprint(any(a.Im)) + "i)"
	}
	return s
}

func main() {
	a := Complex{Re: 1.0, Im: 1.0}
	b := Complex{Re: 3.14159, Im: 1.25}
	fmt.Println(strings.TrimSuffix(fmt.Sprintln(any("a:       "+cstr(&a))), "\n"))
	fmt.Println(strings.TrimSuffix(fmt.Sprintln(any("b:       "+cstr(&b))), "\n"))
	fmt.Println(strings.TrimSuffix(fmt.Sprintln(any("a + b:   "+cstr(&add(&a, &b)))), "\n"))
	fmt.Println(strings.TrimSuffix(fmt.Sprintln(any("a * b:   "+cstr(&mul(&a, &b)))), "\n"))
	fmt.Println(strings.TrimSuffix(fmt.Sprintln(any("-a:      "+cstr(&neg(&a)))), "\n"))
	fmt.Println(strings.TrimSuffix(fmt.Sprintln(any("1 / a:   "+cstr(&inv(&a)))), "\n"))
	fmt.Println(strings.TrimSuffix(fmt.Sprintln(any("aÌ…:       "+cstr(&conj(&a)))), "\n"))
}
