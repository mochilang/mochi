//go:build ignore

// Generated by Mochi compiler v0.10.30 on 2006-01-02T15:04:05Z

package main

import (
	"fmt"
	"strings"
)

type v map[string]any

// line 2
func fields(s string) []string {
	var res []string = []string{}
	cur := ""
	i := 0
	for i < len([]rune(s)) {
		c := string([]rune(s)[i:(i + 1)])
		if c == " " {
			if len([]rune(cur)) > 0 {
				res = append(res, cur)
				cur = ""
			}
		} else {
			cur = cur + c
		}
		i = (i + 1)
	}
	if len([]rune(cur)) > 0 {
		res = append(res, cur)
	}
	return res
}

// line 24
func canSpell(word string, blks []string) bool {
	if len([]rune(word)) == 0 {
		return true
	}
	c := strings.ToLower(string([]rune(word)[0:1]))
	i := 0
	for i < len(blks) {
		b := blks[i]
		if (c == strings.ToLower(string([]rune(b)[0:1]))) || (c == strings.ToLower(string([]rune(b)[1:2]))) {
			var rest []string = []string{}
			j := 0
			for j < len(blks) {
				if j != i {
					rest = append(rest, blks[j])
				}
				j = (j + 1)
			}
			if canSpell(string([]rune(word)[1:len([]rune(word))]), rest) {
				return true
			}
		}
		i = (i + 1)
	}
	return false
}

// line 44
func newSpeller(blocks string) func(string) bool {
	bl := fields(blocks)
	return func(w string) bool {
		return canSpell(w, bl)
	}
}

// line 49
func mainFn() {
	sp := newSpeller("BO XK DQ CP NA GT RE TG QD FS JW HU VI AN OB ER FS LY PC ZM")
	for _, word := range []string{
		"A",
		"BARK",
		"BOOK",
		"TREAT",
		"COMMON",
		"SQUAD",
		"CONFUSE",
	} {
		fmt.Println(any(word + " " + fmt.Sprint(any(sp(word)))))
	}
}

func main() {
	mainFn()
}
