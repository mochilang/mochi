//go:build ignore

// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z

package main

import (
	"fmt"
	"strings"
)

type v map[string]any

// line 4
func sortFloat(xs []float64) []float64 {
	arr := xs
	n := len(any(arr))
	i := 0
	for i < n {
		j := 0
		for j < (n - 1) {
			if arr[j] > arr[(j+1)] {
				tmp := arr[j]
				arr[j] = arr[(j + 1)]
				arr[(j + 1)] = tmp
			}
			j = (j + 1)
		}
		i = (i + 1)
	}
	return arr
}

// line 23
func median(a []float64) float64 {
	arr := sortFloat(a)
	half := int((float64(len(any(arr))) / float64(2)))
	m := arr[half]
	if (len(any(arr)) % 2) == 0 {
		m = ((m + arr[(half-1)]) / 2.0)
	}
	return m
}

func main() {
	fmt.Println(strings.TrimSuffix(fmt.Sprintln(any(fmt.Sprint(any(median([]float64{
		3.0,
		1.0,
		4.0,
		1.0,
	}))))), "\n"))
	fmt.Println(strings.TrimSuffix(fmt.Sprintln(any(fmt.Sprint(any(median([]float64{
		3.0,
		1.0,
		4.0,
		1.0,
		5.0,
	}))))), "\n"))
}
