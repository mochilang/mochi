//go:build ignore

// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z

package main

import (
	"fmt"
)

type v map[string]any

// line 23
func randInt(s int, n int) []int {
	next := (((s * 1664525) + 1013904223) % 2147483647)
	return []int{next, (next % n)}
}

func main() {
	width := 60
	height := int((float64(width) * 0.86602540378))
	iterations := 5000
	var grid [][]string = [][]string{}
	y := 0
	for y < height {
		var line []string = []string{}
		x := 0
		for x < width {
			line = append(line, " ")
			x = (x + 1)
		}
		grid = append(grid, line)
		y = (y + 1)
	}
	seed := 1
	var vertices [][]int = [][]int{[]int{0, (height - 1)}, []int{(width - 1), (height - 1)}, []int{int((float64(width) / float64(2))), 0}}
	px := int((float64(width) / float64(2)))
	py := int((float64(height) / float64(2)))
	i := 0
	for i < iterations {
		r := randInt(seed, 3)
		seed = r[0]
		idx := r[1]
		v := vertices[idx]
		px = int((float64((px + v[0])) / float64(2)))
		py = int((float64((py + v[1])) / float64(2)))
		if (((px >= 0) && (px < width)) && (py >= 0)) && (py < height) {
			grid[py][px] = "*"
		}
		i = (i + 1)
	}
	y = 0
	for y < height {
		line := ""
		x := 0
		for x < width {
			line = line + grid[y][x]
			x = (x + 1)
		}
		fmt.Println(line)
		y = (y + 1)
	}
}
