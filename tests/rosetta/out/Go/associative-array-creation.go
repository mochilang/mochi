//go:build ignore

// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z

package main

import (
	"fmt"
	"strings"
)

type v map[string]any

// line 1
func removeKey(m map[string]int, k string) map[string]int {
	var out map[string]int = map[string]int{}
	for key := range m {
		if key != k {
			out[key] = m[key]
		}
	}
	return out
}

// line 11
func main() {
	var x map[string]int = ((nil).(map[string]int)).(map[string]int)
	x = map[string]int{}
	x["foo"] = 3
	y1 := x["bar"]
	key0 := "bar"
	m1 := x
	_, ok2 := m1[key0]
	ok := ok2
	fmt.Println(strings.TrimSuffix(fmt.Sprintln(any(y1)), "\n"))
	fmt.Println(strings.TrimSuffix(fmt.Sprintln(func() int {
		if any(ok) {
			return 1
		}
		return 0
	}()), "\n"))
	x = removeKey(x, "foo")
	x = map[string]int{
		"foo": 2,
		"bar": 42,
		"baz": -1,
	}
	fmt.Println(strings.TrimSuffix(fmt.Sprintln(any(x["foo"]), x["bar"], x["baz"]), "\n"))
}

func main() {
	main()
}
