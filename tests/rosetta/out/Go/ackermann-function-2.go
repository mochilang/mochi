//go:build ignore

// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z

package main

import (
	"fmt"
	"strings"
)

type v map[string]any

// line 4
func pow(base int, exp int) int {
	result := 1
	i := 0
	for i < exp {
		result = (result * base)
		i = (i + 1)
	}
	return result
}

// line 14
func ackermann2(m int, n int) int {
	if m == 0 {
		return (n + 1)
	}
	if m == 1 {
		return (n + 2)
	}
	if m == 2 {
		return ((2 * n) + 3)
	}
	if m == 3 {
		return ((8 * pow(2, n)) - 3)
	}
	if n == 0 {
		return ackermann2((m - 1), 1)
	}
	return ackermann2((m - 1), ackermann2(m, (n-1)))
}

// line 33
func main() {
	fmt.Println(strings.TrimSuffix(fmt.Sprintln(any("A(0, 0) = "+fmt.Sprint(any(ackermann2(0, 0))))), "\n"))
	fmt.Println(strings.TrimSuffix(fmt.Sprintln(any("A(1, 2) = "+fmt.Sprint(any(ackermann2(1, 2))))), "\n"))
	fmt.Println(strings.TrimSuffix(fmt.Sprintln(any("A(2, 4) = "+fmt.Sprint(any(ackermann2(2, 4))))), "\n"))
	fmt.Println(strings.TrimSuffix(fmt.Sprintln(any("A(3, 4) = "+fmt.Sprint(any(ackermann2(3, 4))))), "\n"))
}

func main() {
	main()
}
