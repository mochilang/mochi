//go:build ignore

// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z

package main

import (
	"fmt"
)

type v map[string]any

// line 31
func randInt(s int, n int) []int {
	next := (((s * 1664525) + 1013904223) % 2147483647)
	return []int{next, (next % n)}
}

func main() {
	xMin := -2.182
	xMax := 2.6558
	yMin := 0.0
	yMax := 9.9983
	width := 60
	nIter := 10000
	dx := (xMax - xMin)
	dy := (yMax - yMin)
	height := int(((float64(width) * dy) / dx))
	var grid [][]string = [][]string{}
	row := 0
	for row < height {
		var line []string = []string{}
		col := 0
		for col < width {
			line = append(line, " ")
			col = (col + 1)
		}
		grid = append(grid, line)
		row = (row + 1)
	}
	seed := 1
	x := 0.0
	y := 0.0
	ix := int((((float64(width)) * (x - xMin)) / dx))
	iy := int((((float64(height)) * (yMax - y)) / dy))
	if (((ix >= 0) && (ix < width)) && (iy >= 0)) && (iy < height) {
		grid[iy][ix] = "*"
	}
	i := 0
	for i < nIter {
		res := randInt(seed, 100)
		seed = res[0]
		r := res[1]
		if r < 85 {
			nx := ((0.85 * x) + (0.04 * y))
			ny := (((-0.04 * x) + (0.85 * y)) + 1.6)
			x = nx
			y = ny
		} else if r < 92 {
			nx := ((0.2 * x) - (0.26 * y))
			ny := (((0.23 * x) + (0.22 * y)) + 1.6)
			x = nx
			y = ny
		} else if r < 99 {
			nx := ((-0.15 * x) + (0.28 * y))
			ny := (((0.26 * x) + (0.24 * y)) + 0.44)
			x = nx
			y = ny
		} else {
			x = 0.0
			y = (0.16 * y)
		}
		ix = int((((float64(width)) * (x - xMin)) / dx))
		iy = int((((float64(height)) * (yMax - y)) / dy))
		if (((ix >= 0) && (ix < width)) && (iy >= 0)) && (iy < height) {
			grid[iy][ix] = "*"
		}
		i = (i + 1)
	}
	row = 0
	for row < height {
		line := ""
		col := 0
		for col < width {
			line = line + grid[row][col]
			col = (col + 1)
		}
		fmt.Println(line)
		row = (row + 1)
	}
}
