//go:build ignore

// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z

package main

import (
	"fmt"
)

type v map[string]any

// line 1
func isPrime(n int) bool {
	if n < 2 {
		return false
	}
	if (n % 2) == 0 {
		return (n == 2)
	}
	if (n % 3) == 0 {
		return (n == 3)
	}
	d := 5
	for (d * d) <= n {
		if (n % d) == 0 {
			return false
		}
		d = (d + 2)
		if (n % d) == 0 {
			return false
		}
		d = (d + 4)
	}
	return true
}

// line 15
func sumDigits(n int) int {
	s := 0
	x := n
	for x > 0 {
		s = (s + (x % 10))
		x = int((float64(x) / float64(10)))
	}
	return s
}

// line 25
func pad(n int) string {
	if n < 10 {
		return "  " + fmt.Sprint(n)
	}
	if n < 100 {
		return " " + fmt.Sprint(n)
	}
	return fmt.Sprint(n)
}

// line 31
func main() {
	fmt.Println("Additive primes less than 500:")
	count := 0
	line := ""
	lineCount := 0
	i := 2
	for i < 500 {
		if isPrime(i) && isPrime(sumDigits(i)) {
			count = (count + 1)
			line = line + pad(i) + "  "
			lineCount = (lineCount + 1)
			if lineCount == 10 {
				fmt.Println(string([]rune(line)[0:(len(line) - 2)]))
				line = ""
				lineCount = 0
			}
		}
		if i > 2 {
			i = (i + 2)
		} else {
			i = (i + 1)
		}
	}
	if lineCount > 0 {
		fmt.Println(string([]rune(line)[0:(len(line) - 2)]))
	}
	fmt.Println(fmt.Sprint(count) + " additive primes found.")
}

func main() {
	main()
}
