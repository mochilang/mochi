(* Generated by Mochi compiler v0.10.30 on 2025-07-19T00:24:49Z *)
let rec __show v =
  let open Obj in
  let rec list_aux o =
    if is_int o && (magic (obj o) : int) = 0 then "" else
     let hd = field o 0 in
     let tl = field o 1 in
     let rest = list_aux tl in
     if rest = "" then __show (obj hd) else __show (obj hd) ^ "; " ^ rest
  in
  let r = repr v in
  if is_int r then string_of_int (magic v) else
  match tag r with
    | 0 -> if size r = 0 then "[]" else "[" ^ list_aux r ^ "]"
    | 252 -> (magic v : string)
    | 253 -> string_of_float (magic v)
    | _ -> "<value>"

exception Break
exception Continue

let list_set lst idx value =
  List.mapi (fun i v -> if i = idx then value else v) lst


let doors = ref []

let () =
  try
    for i = 0 to 100 do
      try
        doors := ((!doors) @ [false]);
      with Continue -> ()
    done
  with Break -> () ;
  try
    for pass = 1 to 101 do
      try
        let idx = ref (pass - 1) in
        let rec __loop0 () =
          if ((!idx) < 100) then (
            try
              doors := list_set !doors (!idx) (not (List.nth ((!doors)) (!idx)));
              idx := ((!idx) + pass);
              __loop0 ()
            with Continue -> ()
          ) else ()
        in try __loop0 () with Break -> ()
        ;
      with Continue -> ()
    done
  with Break -> () ;
  try
    for row = 0 to 10 do
      try
        let line : string ref = ref "" in
        try
          for col = 0 to 10 do
            try
              let idx = ((row * 10) + col) in
              if List.nth ((!doors)) idx then (
                line := ((!line) ^ "1");
              ) else (
                line := ((!line) ^ "0");
              ) ;
              if (col < 9) then (
                line := ((!line) ^ " ");
              ) ;
            with Continue -> ()
          done
        with Break -> () ;
        print_endline ((!line));
      with Continue -> ()
    done
  with Break -> () ;
