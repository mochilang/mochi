(* Generated by Mochi compiler v0.10.30 on 2025-07-19T00:24:49Z *)
let rec __show v =
  let open Obj in
  let rec list_aux o =
    if is_int o && (magic (obj o) : int) = 0 then "" else
     let hd = field o 0 in
     let tl = field o 1 in
     let rest = list_aux tl in
     if rest = "" then __show (obj hd) else __show (obj hd) ^ "; " ^ rest
  in
  let r = repr v in
  if is_int r then string_of_int (magic v) else
  match tag r with
    | 0 -> if size r = 0 then "[]" else "[" ^ list_aux r ^ "]"
    | 252 -> (magic v : string)
    | 253 -> string_of_float (magic v)
    | _ -> "<value>"

exception Break
exception Continue

let string_slice s i j = String.sub s i (j - i)


Random.self_init ()

let rec parseIntStr (str : string) : int =
  let i : int ref = ref 0 in
  let neg : bool ref = ref false in
  if ((String.length str > 0) && (string_slice str (0) (1) = "-")) then (
    neg := true;
    i := 1;
  ) ;
  let n : int ref = ref 0 in
  let digits = [("0",Obj.repr (0));("1",Obj.repr (1));("2",Obj.repr (2));("3",Obj.repr (3));("4",Obj.repr (4));("5",Obj.repr (5));("6",Obj.repr (6));("7",Obj.repr (7));("8",Obj.repr (8));("9",Obj.repr (9))] in
  let rec __loop0 () =
    if ((!i) < String.length str) then (
      try
        n := (((!n) * 10) + List.nth (digits) string_slice str ((!i)) (((!i) + 1)));
        i := ((!i) + 1);
        __loop0 ()
      with Continue -> ()
    ) else ()
  in try __loop0 () with Break -> ()
  ;
  if (!neg) then (
    n := -(!n);
  ) ;
  (!n)

let rec main () =
  let total : int ref = ref 0 in
  let computer : bool ref = ref ((Random.bits () mod 2) = 0) in
  print_endline ("Enter q to quit at any time\n");
  if (!computer) then (
    print_endline ("The computer will choose first");
  ) else (
    print_endline ("You will choose first");
  ) ;
  print_endline ("\n\nRunning total is now 0\n\n");
  let round : int ref = ref 1 in
  let done_ : bool ref = ref false in
  let rec __loop1 () =
    if not ((!done_)) then (
      try
        print_endline ((("ROUND " ^ __show ((!round))) ^ ":\n\n"));
        let i : int ref = ref 0 in
        let rec __loop2 () =
          if (((!i) < 2) && (not ((!done_)))) then (
            try
              if (!computer) then (
                let choice : int ref = ref 0 in
                if ((!total) < 18) then (
                  choice := ((Random.bits () mod 3) + 1);
                ) else (
                  choice := (21 - (!total));
                ) ;
                total := ((!total) + (!choice));
                print_endline (("The computer chooses " ^ __show ((!choice))));
                print_endline (("Running total is now " ^ __show ((!total))));
                if ((!total) = 21) then (
                  print_endline ("\nSo, commiserations, the computer has won!");
                  done_ := true;
                ) ;
              ) else (
                let rec __loop3 () =
                  if true then (
                    try
                      print_endline ("Your choice 1 to 3 : ");
                      let line : string = input () in
                      if ((line = "q") || (line = "Q")) then (
                        print_endline ("OK, quitting the game");
                        done_ := true;
                        raise Break
                      ) ;
                      let num : int ref = ref parseIntStr line in
                      if (((!num) < 1) || ((!num) > 3)) then (
                        if (((!total) + (!num)) > 21) then (
                          print_endline ("Too big, try again");
                        ) else (
                          print_endline ("Out of range, try again");
                        ) ;
                        raise Continue
                      ) ;
                      if (((!total) + (!num)) > 21) then (
                        print_endline ("Too big, try again");
                        raise Continue
                      ) ;
                      total := ((!total) + (!num));
                      print_endline (("Running total is now " ^ __show ((!total))));
                      raise Break
                      __loop3 ()
                    with Continue -> ()
                  ) else ()
                in try __loop3 () with Break -> ()
                ;
                if ((!total) = 21) then (
                  print_endline ("\nSo, congratulations, you've won!");
                  done_ := true;
                ) ;
              ) ;
              print_endline ("\n");
              computer := not ((!computer));
              i := ((!i) + 1);
              __loop2 ()
            with Continue -> ()
          ) else ()
        in try __loop2 () with Break -> ()
        ;
        round := ((!round) + 1);
        __loop1 ()
      with Continue -> ()
    ) else ()
  in try __loop1 () with Break -> ()
  ;
  ()


let () =
  main ();
