(* Generated by Mochi compiler v0.10.30 on 2025-07-19T00:24:49Z *)
exception Break
exception Continue

let list_set lst idx value =
  List.mapi (fun i v -> if i = idx then value else v) lst


let rec fields (s : string) : string list =
  let words = ref [] in
  let cur : string ref = ref "" in
  let i : int ref = ref 0 in
  let rec __loop0 () =
    if ((!i) < String.length s) then (
      try
        let ch : string = String.sub s (!i) (((!i) + 1) - (!i)) in
        if (((ch = " ") || (ch = "\n")) || (ch = "\t")) then (
          if (String.length (!cur) > 0) then (
            words := ((!words) @ [(!cur)]);
            cur := "";
          ) ;
        ) else (
          cur := ((!cur) + ch);
        ) ;
        i := ((!i) + 1);
        __loop0 ()
      with Continue -> ()
    ) else ()
  in try __loop0 () with Break -> ()
  ;
  if (String.length (!cur) > 0) then (
    words := ((!words) @ [(!cur)]);
  ) ;
  (!words)

let rec join (xs : string list) (sep : string) : string =
  let res : string ref = ref "" in
  let i : int ref = ref 0 in
  let rec __loop1 () =
    if ((!i) < List.length xs) then (
      try
        if ((!i) > 0) then (
          res := ((!res) + sep);
        ) ;
        res := ((!res) + List.nth (xs) (!i));
        i := ((!i) + 1);
        __loop1 ()
      with Continue -> ()
    ) else ()
  in try __loop1 () with Break -> ()
  ;
  (!res)

let rec numberName (n : int) : string =
  let small : string list = ["no";"one";"two";"three";"four";"five";"six";"seven";"eight";"nine";"ten";"eleven";"twelve";"thirteen";"fourteen";"fifteen";"sixteen";"seventeen";"eighteen";"nineteen"] in
  let tens : string list = ["ones";"ten";"twenty";"thirty";"forty";"fifty";"sixty";"seventy";"eighty";"ninety"] in
  if (n < 0) then (
    ""
  ) ;
  if (n < 20) then (
    List.nth (small) n
  ) ;
  if (n < 100) then (
    let t = ref List.nth (tens) int_of_string ((n / 10)) in
    let s = ref (n mod 10) in
    if ((!s) > 0) then (
      t := (((!t) ^ " ") + List.nth (small) (!s));
    ) ;
    (!t)
  ) ;
  ""

let rec pluralizeFirst (s : string) (n : int) : string =
  if (n = 1) then (
    (!s)
  ) ;
  let w : string list = fields (!s) in
  if (List.length w > 0) then (
    (* assignment to w unsupported *)
  ) ;
  join w " "

let rec randInt (seed : int) (n : int) : int =
  let next = ((((seed * 1664525) + 1013904223)) mod 2147483647) in
  (next mod n)

let rec slur (p : string) (d : int) : string =
  if (String.length p <= 2) then (
    p
  ) ;
  let a = ref [] in
  let i : int ref = ref 1 in
  let rec __loop2 () =
    if (((!i) < String.length p) - 1) then (
      try
        a := ((!a) @ [String.sub p (!i) (((!i) + 1) - (!i))]);
        i := ((!i) + 1);
        __loop2 ()
      with Continue -> ()
    ) else ()
  in try __loop2 () with Break -> ()
  ;
  let idx : int ref = ref (List.length (!a) - 1) in
  let seed = ref d in
  let rec __loop3 () =
    if ((!idx) >= 1) then (
      try
        seed := (((((!seed) * 1664525) + 1013904223)) mod 2147483647);
        if (((!seed) mod 100) >= d) then (
          let j = ((!seed) mod (((!idx) + 1))) in
          let tmp = List.nth ((!a)) (!idx) in
          a := list_set !a (!idx) (List.nth ((!a)) j);
          a := list_set !a j (tmp);
        ) ;
        idx := ((!idx) - 1);
        __loop3 ()
      with Continue -> ()
    ) else ()
  in try __loop3 () with Break -> ()
  ;
  let s : string ref = ref String.sub p 0 (1 - 0) in
  let k : int ref = ref 0 in
  let rec __loop4 () =
    if ((!k) < List.length (!a)) then (
      try
        s := ((!s) + List.nth ((!a)) (!k));
        k := ((!k) + 1);
        __loop4 ()
      with Continue -> ()
    ) else ()
  in try __loop4 () with Break -> ()
  ;
  s := ((!s) + String.sub p (String.length p - 1) (String.length p - (String.length p - 1)));
  let w : string list = fields (!s) in
  join w " "

let rec main () =
  let i : int ref = ref 99 in
  let rec __loop5 () =
    if ((!i) > 0) then (
      try
        print_endline (((((slur numberName (!i) (!i) ^ " ") ^ pluralizeFirst slur "bottle of" (!i) (!i)) ^ " ") ^ slur "beer on the wall" (!i)));
        print_endline (((((slur numberName (!i) (!i) ^ " ") ^ pluralizeFirst slur "bottle of" (!i) (!i)) ^ " ") ^ slur "beer" (!i)));
        print_endline (((((slur "take one" (!i) ^ " ") ^ slur "down" (!i)) ^ " ") ^ slur "pass it around" (!i)));
        print_endline (((((slur numberName ((!i) - 1) (!i) ^ " ") ^ pluralizeFirst slur "bottle of" (!i) ((!i) - 1)) ^ " ") ^ slur "beer on the wall" (!i)));
        i := ((!i) - 1);
        __loop5 ()
      with Continue -> ()
    ) else ()
  in try __loop5 () with Break -> ()
  ;
  ()


let () =
  main ();
