// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:56:04Z
func mod(_ n: Int, _ m: Int) -> Int {
    return ((n % m) + m) % m
}
func isPrime(_ n: Int) -> Bool {
    if n < 2 {
        return false
    }
    if n % 2 == 0 {
        return n == 2
    }
    if n % 3 == 0 {
        return n == 3
    }
    var d = 5
    while d * d <= n {
        if n % d == 0 {
            return false
        }
        d = d + 2
        if n % d == 0 {
            return false
        }
        d = d + 4
    }
    return true
}
func pad(_ n: Int, _ width: Int) -> String {
    var s = String(n)
    while s.count < width {
        s = " " + s
    }
    return s
}
func carmichael(_ p1: Int) {
    for h3 in 2..<p1 {
        for d in 1..<(h3 + p1) {
            if ((h3 + p1) * (p1 - 1)) % d == 0 && mod(-p1 * p1, h3) == d % h3 {
                let p2 = 1 + ((p1 - 1) * (h3 + p1) / d)
                if !isPrime(p2) {
                    continue
                }
                let p3 = 1 + (p1 * p2 / h3)
                if !isPrime(p3) {
                    continue
                }
                if (p2 * p3) % (p1 - 1) != 1 {
                    continue
                }
                let c = p1 * p2 * p3
                print(pad(p1, 2) + "   " + pad(p2, 4) + "   " + pad(p3, 5) + "     " + String(c))
            }
        }
    }
}
print("The following are Carmichael munbers for p1 <= 61:\n")
print("p1     p2      p3     product")
print("==     ==      ==     =======")
for p1 in 2..<62 {
    if isPrime(p1) {
        carmichael(p1)
    }
}
