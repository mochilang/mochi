// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:55:12Z
func qsel(_ a: [Double], _ k: Int) -> Double {
    var arr = a
    while arr.count > 1 {
        var px = now() % arr.count
        var pv = arr[px]
        let last = arr.count - 1
        let tmp = arr[px]
        arr[px] = arr[last]
        arr[last] = tmp
        px = 0
        var i = 0
        while i < last {
            let v = arr[i]
            if v < pv {
                let tmp2 = arr[px]
                arr[px] = arr[i]
                arr[i] = tmp2
                px = px + 1
            }
            i = i + 1
        }
        if px == k {
            return pv
        }
        if k < px {
            arr = Array(arr[0..<px])
        }
        else {
            let tmp2 = arr[px]
            arr[px] = pv
            arr[last] = tmp2
            arr = Array(arr[(px + 1)..<arr.count])
            k = k - (px + 1)
        }
    }
    return arr[0]
}
func median(_ list: [Double]) -> Double {
    var arr = list
    let half = Int((arr.count / 2))
    let med = qsel(arr, half)
    if arr.count % 2 == 0 {
        return (med + qsel(arr, half - 1)) / 2.0
    }
    return med
}
print(String(median([3.0, 1.0, 4.0, 1.0])))
print(String(median([3.0, 1.0, 4.0, 1.0, 5.0])))
