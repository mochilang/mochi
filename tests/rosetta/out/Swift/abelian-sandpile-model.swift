// Generated by Mochi compiler v0.10.26 on 2025-07-16T13:15:34Z
let dim = 16
func newPile(_ d: Int) -> [[Int]] {
    var b: [[Int]] = []
    var y = 0
    while y < d {
        var row: [Int] = []
        var x = 0
        while x < d {
            row = row + [0]
            x = x + 1
        }
        b = b + [row]
        y = y + 1
    }
    return b
}
func handlePile(_ pile: [[Int]], _ x: Int, _ y: Int) -> [[Int]] {
    if pile[y][x] >= 4 {
        pile[y][x] = pile[y][x] - 4
        if y > 0 {
            pile[y - 1][x] = pile[y - 1][x] + 1
            if pile[y - 1][x] >= 4 {
                pile = handlePile(pile, x, y - 1)
            }
        }
        if x > 0 {
            pile[y][x - 1] = pile[y][x - 1] + 1
            if pile[y][x - 1] >= 4 {
                pile = handlePile(pile, x - 1, y)
            }
        }
        if y < dim - 1 {
            pile[y + 1][x] = pile[y + 1][x] + 1
            if pile[y + 1][x] >= 4 {
                pile = handlePile(pile, x, y + 1)
            }
        }
        if x < dim - 1 {
            pile[y][x + 1] = pile[y][x + 1] + 1
            if pile[y][x + 1] >= 4 {
                pile = handlePile(pile, x + 1, y)
            }
        }
        pile = handlePile(pile, x, y)
    }
    return pile
}
func drawPile(_ pile: [[Int]], _ d: Int) {
    var chars = [" ", "░", "▓", "█"]
    var row = 0
    while row < d {
        var line = ""
        var col = 0
        while col < d {
            var v = pile[row][col]
            if v > 3 {
                v = 3
            }
            line = line + chars[v]
            col = col + 1
        }
        print(line)
        row = row + 1
    }
}
func main() {
    var pile = newPile(16)
    let hdim = 7
    pile[hdim][hdim] = 16
    pile = handlePile(pile, hdim, hdim)
    drawPile(pile, 16)
}
main()
