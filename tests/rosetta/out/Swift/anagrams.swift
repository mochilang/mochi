// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:54:42Z
func sortRunes(_ s: String) -> String {
    var arr: [String] = [Any]()
    var i = 0
    while i < s.count {
        arr = arr + [Array(s[i..<i + 1])]
        i = i + 1
    }
    var n = arr.count
    var m = 0
    while m < n {
        var j = 0
        while j < n - 1 {
            if arr[j] > arr[j + 1] {
                let tmp = arr[j]
                arr[j] = arr[j + 1]
                arr[j + 1] = tmp
            }
            j = j + 1
        }
        m = m + 1
    }
    var out = ""
    i = 0
    while i < n {
        out = out + arr[i]
        i = i + 1
    }
    return out
}
func sortStrings(_ xs: [String]) -> [String] {
    var res: [String] = [Any]()
    var tmp = xs
    while tmp.count > 0 {
        var min = tmp[0]
        var idx = 0
        var i = 1
        while i < tmp.count {
            if tmp[i] < min {
                min = tmp[i]
                idx = i
            }
            i = i + 1
        }
        res = res + [min]
        var out: [String] = [Any]()
        var j = 0
        while j < tmp.count {
            if j != idx {
                out = out + [tmp[j]]
            }
            j = j + 1
        }
        tmp = out
    }
    return res
}
func main() {
    var words = ["abel", "able", "bale", "bela", "elba", "alger", "glare", "lager", "large", "regal", "angel", "angle", "galen", "glean", "lange", "caret", "carte", "cater", "crate", "trace", "elan", "lane", "lean", "lena", "neal", "evil", "levi", "live", "veil", "vile"]
    var groups: [String: [String]] = []
    var maxLen = 0
    for w in words {
        let k = sortRunes(w)
        if !(groups.keys.contains(k)) {
            groups[k] = [w]
        }
        else {
            groups[k] = groups[k]! + [w]
        }
        if groups[k]!.count > maxLen {
            maxLen = groups[k]!.count
        }
    }
    var printed: [String: Bool] = []
    for w in words {
        let k = sortRunes(w)
        if groups[k]!.count == maxLen {
            if !(printed.keys.contains(k)) {
                var g = sortStrings(groups[k]!)
                var line = "[" + g[0]
                var i = 1
                while i < g.count {
                    line = line + " " + g[i]
                    i = i + 1
                }
                line = line + "]"
                print(line)
                printed[k] = true
            }
        }
    }
}
main()
