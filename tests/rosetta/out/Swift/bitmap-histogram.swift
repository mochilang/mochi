// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:55:35Z
func image() -> [[Int]] {
    return [[0, 0, 10000], [65535, 65535, 65535], [65535, 65535, 65535]]
}
func histogram(_ g: [[Int]], _ bins: Int) -> [Int] {
    if bins <= 0 {
        bins = g[0].count
    }
    var h: [Int] = [Any]()
    var i = 0
    while i < bins {
        h = h + [0]
        i = i + 1
    }
    var y = 0
    while y < g.count {
        var row = g[y]
        var x = 0
        while x < row.count {
            var p = row[x]
            var idx = Int(((p * (bins - 1)) / 65535))
            h[idx] = h[idx] + 1
            x = x + 1
        }
        y = y + 1
    }
    return h
}
func medianThreshold(_ h: [Int]) -> Int {
    var lb = 0
    var ub = h.count - 1
    var lSum = 0
    var uSum = 0
    while lb <= ub {
        if lSum + h[lb] < uSum + h[ub] {
            lSum = lSum + h[lb]
            lb = lb + 1
        }
        else {
            uSum = uSum + h[ub]
            ub = ub - 1
        }
    }
    return Int(((ub * 65535) / h.count))
}
func threshold(_ g: [[Int]], _ t: Int) -> [[Int]] {
    var out: [[Int]] = [Any]()
    var y = 0
    while y < g.count {
        var row = g[y]
        var newRow: [Int] = [Any]()
        var x = 0
        while x < row.count {
            if row[x] < t {
                newRow = newRow + [0]
            }
            else {
                newRow = newRow + [65535]
            }
            x = x + 1
        }
        out = out + [newRow]
        y = y + 1
    }
    return out
}
func printImage(_ g: [[Int]]) {
    var y = 0
    while y < g.count {
        var row = g[y]
        var line = ""
        var x = 0
        while x < row.count {
            if row[x] == 0 {
                line = line + "0"
            }
            else {
                line = line + "1"
            }
            x = x + 1
        }
        print(line)
        y = y + 1
    }
}
func main() {
    let img = image()
    let h = histogram(img, 0)
    print("Histogram: " + String(h))
    let t = medianThreshold(h)
    print("Threshold: " + String(t))
    let bw = threshold(img, t)
    printImage(bw)
}
main()
