// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:55:45Z
let epsilon = 1e-15
func absf(_ x: Double) -> Double {
    if x < 0.0 {
        return -x
    }
    return x
}
func pow10(_ n: Int) -> Double {
    var r: Double = 1.0
    var i = 0
    while i < n {
        r = r * 10.0
        i = i + 1
    }
    return r
}
func formatFloat(_ f: Double, _ prec: Int) -> String {
    let scale = pow10(prec)
    let scaled = (f * scale) + 0.5
    var n = (Int(scaled))
    var digits = String(n)
    while digits.count <= prec {
        digits = "0" + digits
    }
    let intPart = String(digits[digits.index(digits.startIndex, offsetBy: 0)..<digits.index(digits.startIndex, offsetBy: digits.count - prec)])
    let fracPart = String(digits[digits.index(digits.startIndex, offsetBy: digits.count - prec)..<digits.index(digits.startIndex, offsetBy: digits.count)])
    return intPart + "." + fracPart
}
var factval = 1
var e: Double = 2.0
var n = 2
var term: Double = 1.0
while true {
    factval = factval * n
    n = n + 1
    term = 1.0 / (Double(factval))
    e = e + term
    if absf(term) < epsilon {
        break
    }
}
print("e = " + formatFloat(e, 15))
