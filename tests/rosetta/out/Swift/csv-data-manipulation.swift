// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:57:47Z
func join(_ xs: [String], _ sep: String) -> String {
    var res = ""
    var i = 0
    while i < xs.count {
        if i > 0 {
            res = res + sep
        }
        res = res + xs[i]
        i = i + 1
    }
    return res
}
func parseIntStr(_ str: String) -> Int {
    var i = 0
    var neg = false
    if str.count > 0 && Array(str[0..<1]) == "-" {
        neg = true
        i = 1
    }
    var n = 0
    let digits = ["0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9]
    while i < str.count {
        n = n * 10 + digits[Array(str[i..<i + 1])]!
        i = i + 1
    }
    if neg {
        n = -n
    }
    return n
}
var rows: [[String]] = [["A", "B", "C"], ["1", "2", "3"], ["4", "5", "6"], ["7", "8", "9"]]
rows[0] = rows[0] + ["SUM"]
var i = 1
while i < rows.count {
    var sum = 0
    for s in rows[i] {
        sum = sum + parseIntStr(s)
    }
    rows[i] = rows[i] + [String(sum)]
    i = i + 1
}
for r in rows {
    print(join(r, ","))
}
