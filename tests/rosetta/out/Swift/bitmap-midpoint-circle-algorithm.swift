// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:55:35Z
func initGrid(_ size: Int) -> [[String]] {
    var g: [[String]] = [Any]()
    var y = 0
    while y < size {
        var row: [String] = [Any]()
        var x = 0
        while x < size {
            row = row + [" "]
            x = x + 1
        }
        g = g + [row]
        y = y + 1
    }
    return g
}
func set(_ g: [[String]], _ x: Int, _ y: Int) {
    if x >= 0 && x < g[0].count && y >= 0 && y < g.count {
        g[y][x] = "#"
    }
}
func circle(_ r: Int) -> [[String]] {
    let size = r * 2 + 1
    var g = initGrid(size)
    var x = r
    var y = 0
    var err = 1 - r
    while y <= x {
        set(g, r + x, r + y)
        set(g, r + y, r + x)
        set(g, r - x, r + y)
        set(g, r - y, r + x)
        set(g, r - x, r - y)
        set(g, r - y, r - x)
        set(g, r + x, r - y)
        set(g, r + y, r - x)
        y = y + 1
        if err < 0 {
            err = err + 2 * y + 1
        }
        else {
            x = x - 1
            err = err + 2 * (y - x) + 1
        }
    }
    return g
}
func trimRight(_ row: [String]) -> String {
    var end = row.count
    while end > 0 && row[end - 1] == " " {
        end = end - 1
    }
    var s = ""
    var i = 0
    while i < end {
        s = s + row[i]
        i = i + 1
    }
    return s
}
var g = circle(10)
for row in g {
    print(trimRight(row))
}
