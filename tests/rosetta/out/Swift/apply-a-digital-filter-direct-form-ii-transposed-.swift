// Generated by Mochi compiler v0.10.26 on 2025-07-16T13:16:23Z
func applyFilter(_ input: [Double], _ a: [Double], _ b: [Double]) -> [Double] {
    var out: [Double] = []
    let scale = 1.0 / a[0]
    var i = 0
    while i < input.count {
        var tmp = 0.0
        var j = 0
        while j <= i && j < b.count {
            tmp = tmp + b[j] * input[i - j]
            j = j + 1
        }
        j = 0
        while j < i && j + 1 < a.count {
            tmp = tmp - a[j + 1] * out[i - j - 1]
            j = j + 1
        }
        out = out + [tmp * scale]
        i = i + 1
    }
    return out
}
var a = [1.0, -2.7756e-16, 0.33333333, -1.85e-17]
var b = [0.16666667, 0.5, 0.5, 0.16666667]
var sig = [-0.917843918645, 0.141984778794, 1.20536903482, 0.190286794412, -0.662370894973, -1.00700480494, -0.404707073677, 0.800482325044, 0.743500089861, 1.01090520172, 0.741527555207, 0.277841675195, 0.400833448236, -0.2085993586, -0.172842103641, -0.134316096293, 0.0259303398477, 0.490105989562, 0.549391221511, 0.9047198589]
let res = applyFilter(sig, a, b)
var k = 0
while k < res.count {
    print(res[k])
    k = k + 1
}
