// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:55:12Z
func powf(_ base: Double, _ exp: Int) -> Double {
    var result = 1.0
    var i = 0
    while i < exp {
        result = result * base
        i = i + 1
    }
    return result
}
func nthRoot(_ x: Double, _ n: Int) -> Double {
    var low = 0.0
    var high = x
    var i = 0
    while i < 60 {
        let mid = (low + high) / 2.0
        if powf(mid, n) > x {
            high = mid
        }
        else {
            low = mid
        }
        i = i + 1
    }
    return low
}
func main() {
    var sum = 0.0
    var sumRecip = 0.0
    var prod = 1.0
    var n = 1
    while n <= 10 {
        let f = Double(n)
        sum = sum + f
        sumRecip = sumRecip + 1.0 / f
        prod = prod * f
        n = n + 1
    }
    let count = 10.0
    let a = sum / count
    let g = nthRoot(prod, 10)
    let h = count / sumRecip
    print("A: " + String(a) + " G: " + String(g) + " H: " + String(h))
    print("A >= G >= H: " + String(a >= g && g >= h))
}
main()
