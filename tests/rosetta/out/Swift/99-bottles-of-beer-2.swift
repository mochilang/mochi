// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:54:22Z
func fields(_ s: String) -> [String] {
    var words: [String] = [Any]()
    var cur = ""
    var i = 0
    while i < s.count {
        let ch = String(s[s.index(s.startIndex, offsetBy: i)..<s.index(s.startIndex, offsetBy: i + 1)])
        if ch == " " || ch == "\n" || ch == "\t" {
            if cur.count > 0 {
                words = words + [cur]
                cur = ""
            }
        }
        else {
            cur = cur + ch
        }
        i = i + 1
    }
    if cur.count > 0 {
        words = words + [cur]
    }
    return words
}
func join(_ xs: [String], _ sep: String) -> String {
    var res = ""
    var i = 0
    while i < xs.count {
        if i > 0 {
            res = res + sep
        }
        res = res + xs[i]
        i = i + 1
    }
    return res
}
func numberName(_ n: Int) -> String {
    var small = ["no", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"]
    var tens = ["ones", "ten", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety"]
    if n < 0 {
        return ""
    }
    if n < 20 {
        return small[n]
    }
    if n < 100 {
        var t = tens[Int((n / 10))]
        var s = n % 10
        if s > 0 {
            t = t + " " + small[s]
        }
        return t
    }
    return ""
}
func pluralizeFirst(_ s: String, _ n: Int) -> String {
    if n == 1 {
        return s
    }
    let w = fields(s)
    if w.count > 0 {
        w[0] = w[0] + "s"
    }
    return join(w, " ")
}
func randInt(_ seed: Int, _ n: Int) -> Int {
    let next = (seed * 1664525 + 1013904223) % 2147483647
    return next % n
}
func slur(_ p: String, _ d: Int) -> String {
    if p.count <= 2 {
        return p
    }
    var a: [String] = [Any]()
    var i = 1
    while i < p.count - 1 {
        a = a + [String(p[p.index(p.startIndex, offsetBy: i)..<p.index(p.startIndex, offsetBy: i + 1)])]
        i = i + 1
    }
    var idx = a.count - 1
    var seed = d
    while idx >= 1 {
        seed = (seed * 1664525 + 1013904223) % 2147483647
        if seed % 100 >= d {
            let j = seed % (idx + 1)
            let tmp = a[idx]
            a[idx] = a[j]
            a[j] = tmp
        }
        idx = idx - 1
    }
    var s = String(p[p.index(p.startIndex, offsetBy: 0)..<p.index(p.startIndex, offsetBy: 1)])
    var k = 0
    while k < a.count {
        s = s + a[k]
        k = k + 1
    }
    s = s + String(p[p.index(p.startIndex, offsetBy: p.count - 1)..<p.index(p.startIndex, offsetBy: p.count)])
    let w = fields(s)
    return join(w, " ")
}
func main() {
    var i = 99
    while i > 0 {
        print(slur(numberName(i), i) + " " + pluralizeFirst(slur("bottle of", i), i) + " " + slur("beer on the wall", i))
        print(slur(numberName(i), i) + " " + pluralizeFirst(slur("bottle of", i), i) + " " + slur("beer", i))
        print(slur("take one", i) + " " + slur("down", i) + " " + slur("pass it around", i))
        print(slur(numberName(i - 1), i) + " " + pluralizeFirst(slur("bottle of", i), i - 1) + " " + slur("beer on the wall", i))
        i = i - 1
    }
}
main()
