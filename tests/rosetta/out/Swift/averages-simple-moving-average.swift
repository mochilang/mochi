// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:55:13Z
func indexOf(_ s: String, _ ch: String) -> Int {
    var i = 0
    while i < s.count {
        if String(s[s.index(s.startIndex, offsetBy: i)..<s.index(s.startIndex, offsetBy: i + 1)]) == ch {
            return i
        }
        i = i + 1
    }
    return -1
}
func fmt3(_ x: Double) -> String {
    var y = Double(Int(((x * 1000.0) + 0.5))) / 1000.0
    var s = String(y)
    var dot = indexOf(s, ".")
    if dot == 0 - 1 {
        s = s + ".000"
    }
    else {
        var decs = s.count - dot - 1
        if decs > 3 {
            s = String(s[s.index(s.startIndex, offsetBy: 0)..<s.index(s.startIndex, offsetBy: dot + 4)])
        }
        else {
            while decs < 3 {
                s = s + "0"
                decs = decs + 1
            }
        }
    }
    return s
}
func pad(_ s: String, _ width: Int) -> String {
    var out = s
    while out.count < width {
        out = " " + out
    }
    return out
}
func smaSeries(_ xs: [Double], _ period: Int) -> [Double] {
    var res: [Double] = [Any]()
    var sum = 0.0
    var i = 0
    while i < xs.count {
        sum = sum + xs[i]
        if i >= period {
            sum = sum - xs[i - period]
        }
        var denom = i + 1
        if denom > period {
            denom = period
        }
        res = res + [sum / (Double(denom))]
        i = i + 1
    }
    return res
}
func main() {
    var xs = [1.0, 2.0, 3.0, 4.0, 5.0, 5.0, 4.0, 3.0, 2.0, 1.0]
    var sma3 = smaSeries(xs, 3)
    var sma5 = smaSeries(xs, 5)
    print("x       sma3   sma5")
    var i = 0
    while i < xs.count {
        let line = pad(fmt3(xs[i]), 5) + "  " + pad(fmt3(sma3[i]), 5) + "  " + pad(fmt3(sma5[i]), 5)
        print(line)
        i = i + 1
    }
}
main()
