// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:54:25Z
enum Beast {
    case dog(kind: String, name: String)
    case cat(kind: String, name: String)
}
func beastKind(_ b: Beast) -> String {
    return { () in
    let __t = b
    switch __t {
    case let .dog(k, _): return k
    case let .cat(k, _): return k
    }
}()
}
func beastName(_ b: Beast) -> String {
    return { () in
    let __t = b
    switch __t {
    case let .dog(_, n): return n
    case let .cat(_, n): return n
    }
}()
}
func beastCry(_ b: Beast) -> String {
    return { () in
    let __t = b
    switch __t {
    case let .dog(_, _): return "Woof"
    case let .cat(_, _): return "Meow"
    }
}()
}
func bprint(_ b: Beast) {
    print(beastName(b) + ", who's a " + beastKind(b) + ", cries: \"" + beastCry(b) + "\".")
}
func main() {
    let d: Beast = Beast.dog(kind: "labrador", name: "Max")
    let c: Beast = Beast.cat(kind: "siamese", name: "Sammy")
    bprint(d)
    bprint(c)
}
main()
