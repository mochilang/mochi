run error: exit status 1
/tmp/TestMochiToSwiftanagrams-deranged-anagrams125747899/001/main.swift:3:25: error: cannot assign value of type '[Any]' to type '[String]'
 1 | // Generated by Mochi compiler v0.10.26 on 2025-07-16T09:54:42Z
 2 | func sortRunes(_ s: String) -> String {
 3 |     var arr: [String] = [Any]()
   |                         |- error: cannot assign value of type '[Any]' to type '[String]'
   |                         `- note: arguments to generic parameter 'Element' ('Any' and 'String') are expected to be equal
 4 |     var i = 0
 5 |     while i < s.count {

/tmp/TestMochiToSwiftanagrams-deranged-anagrams125747899/001/main.swift:6:22: error: cannot convert value of type 'Array<String.Element>' (aka 'Array<Character>') to expected element type 'String'
 4 |     var i = 0
 5 |     while i < s.count {
 6 |         arr = arr + [Array(s[i..<i + 1])]
   |                      `- error: cannot convert value of type 'Array<String.Element>' (aka 'Array<Character>') to expected element type 'String'
 7 |         i = i + 1
 8 |     }

/tmp/TestMochiToSwiftanagrams-deranged-anagrams125747899/001/main.swift:37:18: error: 'subscript(_:)' is unavailable: cannot subscript String with an integer range, use a String.Index range instead.
35 |     var i = 0
36 |     while i < a.count {
37 |         if Array(a[i..<i + 1]) == Array(b[i..<i + 1]) {
   |                  `- error: 'subscript(_:)' is unavailable: cannot subscript String with an integer range, use a String.Index range instead.
38 |             return false
39 |         }

Swift.String.subscript:3:10: note: 'subscript(_:)' has been explicitly marked unavailable here
1 | struct String {
2 | @available(*, unavailable, message: "cannot subscript String with an integer range, use a String.Index range instead.")
3 |   public subscript<R>(bounds: R) -> String where R : RangeExpression, R.Bound == Int { get }}
  |          `- note: 'subscript(_:)' has been explicitly marked unavailable here
4 | 

/tmp/TestMochiToSwiftanagrams-deranged-anagrams125747899/001/main.swift:37:41: error: 'subscript(_:)' is unavailable: cannot subscript String with an integer range, use a String.Index range instead.
35 |     var i = 0
36 |     while i < a.count {
37 |         if Array(a[i..<i + 1]) == Array(b[i..<i + 1]) {
   |                                         `- error: 'subscript(_:)' is unavailable: cannot subscript String with an integer range, use a String.Index range instead.
38 |             return false
39 |         }

Swift.String.subscript:3:10: note: 'subscript(_:)' has been explicitly marked unavailable here
1 | struct String {
2 | @available(*, unavailable, message: "cannot subscript String with an integer range, use a String.Index range instead.")
3 |   public subscript<R>(bounds: R) -> String where R : RangeExpression, R.Bound == Int { get }}
  |          `- note: 'subscript(_:)' has been explicitly marked unavailable here
4 | 

/tmp/TestMochiToSwiftanagrams-deranged-anagrams125747899/001/main.swift:46:33: error: use [:] to get an empty dictionary literal
44 | func main() {
45 |     var words = ["constitutionalism", "misconstitutional"]
46 |     var m: [String: [String]] = []
   |                                 `- error: use [:] to get an empty dictionary literal
47 |     var bestLen = 0
48 |     var w1 = ""

/tmp/TestMochiToSwiftanagrams-deranged-anagrams125747899/001/main.swift:59:24: error: value of type '[String]' has no member 'keys'
57 |             continue
58 |         }
59 |         for c in m[k]!.keys {
   |                        `- error: value of type '[String]' has no member 'keys'
60 |             if deranged(w, c) {
61 |                 bestLen = w.count
