run error: exit status 1
/tmp/TestMochiToSwiftaverages-arithmetic-mean470690817/001/main.swift:2:41: error: expected dictionary value type
 1 | // Generated by Mochi compiler v0.10.26 on 2025-07-16T09:55:10Z
 2 | func mean(_ v: [Double]) -> [String: any] {
   |                                         `- error: expected dictionary value type
 3 |     if v.count == 0 {
 4 |         return ["ok": false]

/tmp/TestMochiToSwiftaverages-arithmetic-mean470690817/001/main.swift:4:16: error: unexpected non-void return value in void function
 2 | func mean(_ v: [Double]) -> [String: any] {
 3 |     if v.count == 0 {
 4 |         return ["ok": false]
   |                |- error: unexpected non-void return value in void function
   |                `- note: did you mean to add a return type?
 5 |     }
 6 |     var sum = 0.0

/tmp/TestMochiToSwiftaverages-arithmetic-mean470690817/001/main.swift:12:12: error: unexpected non-void return value in void function
10 |         i = i + 1
11 |     }
12 |     return ["ok": true, "mean": sum / (Double(v.count))]
   |            |- error: unexpected non-void return value in void function
   |            `- note: did you mean to add a return type?
13 | }
14 | func main() {

/tmp/TestMochiToSwiftaverages-arithmetic-mean470690817/001/main.swift:17:28: error: no exact matches in call to initializer 
15 |     var sets = [[Any](), [3.0, 1.0, 4.0, 1.0, 5.0, 9.0], [100000000000000000000.0, 3.0, 1.0, 4.0, 1.0, 5.0, 9.0, -100000000000000000000.0], [10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.11], [10.0, 20.0, 30.0, 40.0, 50.0, -100.0, 4.7, -1100.0]]
16 |     for v in sets {
17 |         print("Vector: " + String(v))
   |                            `- error: no exact matches in call to initializer 
18 |         let r = mean(v)
19 |         if r["ok"] {

Swift.String.init:2:8: note: found candidate with type '[Any]'
1 | struct String {
2 | public init<S>(_ characters: S) where S : Sequence, S.Element == Character}
  |        `- note: found candidate with type '[Any]'
3 | 

Swift.RangeReplaceableCollection.init:2:19: note: found candidate with type '[Any]'
1 | protocol RangeReplaceableCollection {
2 | @inlinable public init<S>(_ elements: S) where S : Sequence, Self.Element == S.Element}
  |                   `- note: found candidate with type '[Any]'
3 | 

Swift.String.init:2:8: note: incorrect labels for candidate (have: '(_:)', expected: '(describing:)')
1 | struct String {
2 | public init<Subject>(describing instance: Subject)}
  |        `- note: incorrect labels for candidate (have: '(_:)', expected: '(describing:)')
3 | 

Swift.String.init:2:19: note: incorrect labels for candidate (have: '(_:)', expected: '(describing:)')
1 | struct String {
2 | @inlinable public init<Subject>(describing instance: Subject) where Subject : CustomStringConvertible}
  |                   `- note: incorrect labels for candidate (have: '(_:)', expected: '(describing:)')
3 | 

Swift.String.init:2:8: note: incorrect labels for candidate (have: '(_:)', expected: '(reflecting:)')
1 | struct String {
2 | public init<Subject>(reflecting subject: Subject)}
  |        `- note: incorrect labels for candidate (have: '(_:)', expected: '(reflecting:)')
3 | 

/tmp/TestMochiToSwiftaverages-arithmetic-mean470690817/001/main.swift:18:22: error: cannot convert value of type '[Any]' to expected argument type '[Double]'
16 |     for v in sets {
17 |         print("Vector: " + String(v))
18 |         let r = mean(v)
   |                      |- error: cannot convert value of type '[Any]' to expected argument type '[Double]'
   |                      `- note: arguments to generic parameter 'Element' ('Any' and 'Double') are expected to be equal
19 |         if r["ok"] {
20 |             print("Mean of " + String(v.count) + " numbers is " + String(r["mean"]))
