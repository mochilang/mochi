// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:55:39Z
func sameDigits(_ n: Int, _ b: Int) -> Bool {
    var f = n % b
    n = Int((n / b))
    while n > 0 {
        if n % b != f {
            return false
        }
        n = Int((n / b))
    }
    return true
}
func isBrazilian(_ n: Int) -> Bool {
    if n < 7 {
        return false
    }
    if n % 2 == 0 && n >= 8 {
        return true
    }
    var b = 2
    while b < n - 1 {
        if sameDigits(n, b) {
            return true
        }
        b = b + 1
    }
    return false
}
func isPrime(_ n: Int) -> Bool {
    if n < 2 {
        return false
    }
    if n % 2 == 0 {
        return n == 2
    }
    if n % 3 == 0 {
        return n == 3
    }
    var d = 5
    while d * d <= n {
        if n % d == 0 {
            return false
        }
        d = d + 2
        if n % d == 0 {
            return false
        }
        d = d + 4
    }
    return true
}
func main() {
    var kinds = [" ", " odd ", " prime "]
    for kind in kinds {
        print("First 20" + kind + "Brazilian numbers:")
        var c = 0
        var n = 7
        while true {
            if isBrazilian(n) {
                print(String(n) + " ")
                c = c + 1
                if c == 20 {
                    print("\n")
                    break
                }
            }
            if kind == " " {
                n = n + 1
            }
            else             if kind == " odd " {
                n = n + 2
            }
            else {
                while true {
                    n = n + 2
                    if isPrime(n) {
                        break
                    }
                }
            }
        }
    }
    var n = 7
    var c = 0
    while c < 100000 {
        if isBrazilian(n) {
            c = c + 1
        }
        n = n + 1
    }
    print("The 100,000th Brazilian number: " + String(n - 1))
}
main()
