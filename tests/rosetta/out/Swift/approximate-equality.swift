// Generated by Mochi compiler v0.10.26 on 2025-07-16T13:16:24Z
func abs(_ x: Double) -> Double {
    if x < 0.0 {
        return -x
    }
    return x
}
func maxf(_ a: Double, _ b: Double) -> Double {
    if a > b {
        return a
    }
    return b
}
func isClose(_ a: Double, _ b: Double) -> Bool {
    let relTol = 1e-09
    let t = abs(a - b)
    let u = relTol * maxf(abs(a), abs(b))
    return t <= u
}
func sqrtApprox(_ x: Double) -> Double {
    var guess = x
    var i = 0
    while i < 10 {
        guess = (guess + x / guess) / 2.0
        i = i + 1
    }
    return guess
}
func main() {
    let root2 = sqrtApprox(2.0)
    var pairs = [[1.0000000000000002e+14, 1.0000000000000002e+14], [100.01, 100.011], [1.0000000000000002e+13 / 10000.0, 1.0000000000000001e+09], [0.001, 0.0010000001], [1.01e-22, 0.0], [root2 * root2, 2.0], [(-root2) * root2, -2.0], [100000000000000000.0, 100000000000000000.0], [3.141592653589793, 3.141592653589793]]
    for pair in pairs {
        let a = pair[0]
        let b = pair[1]
        let s = isClose(a, b) ? "≈" : "≉"
        print(String(a) + " " + s + " " + String(b))
    }
}
main()
