// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:57:15Z
func sqrtApprox(_ x: Double) -> Double {
    var guess = x
    var i = 0
    while i < 20 {
        guess = (guess + x / guess) / 2.0
        i = i + 1
    }
    return guess
}
func cholesky(_ a: [[Double]]) -> [[Double]] {
    let n = a.count
    var l: [[Double]] = [Any]()
    var i = 0
    while i < n {
        var row: [Double] = [Any]()
        var j = 0
        while j < n {
            row = row + [0.0]
            j = j + 1
        }
        l = l + [row]
        i = i + 1
    }
    i = 0
    while i < n {
        var j = 0
        while j <= i {
            var sum = a[i][j]
            var k = 0
            while k < j {
                sum = sum - l[i][k] * l[j][k]
                k = k + 1
            }
            if i == j {
                l[i][j] = sqrtApprox(sum)
            }
            else {
                l[i][j] = sum / l[j][j]
            }
            j = j + 1
        }
        i = i + 1
    }
    return l
}
func printMat(_ m: [[Double]]) {
    var i = 0
    while i < m.count {
        var line = ""
        var j = 0
        while j < m[i].count {
            line = line + String(m[i][j])
            if j < m[i].count - 1 {
                line = line + " "
            }
            j = j + 1
        }
        print(line)
        i = i + 1
    }
}
func demo(_ a: [[Double]]) {
    print("A:")
    printMat(a)
    let l = cholesky(a)
    print("L:")
    printMat(l)
}
demo([[25.0, 15.0, -5.0], [15.0, 18.0, 0.0], [-5.0, 0.0, 11.0]])
demo([[18.0, 22.0, 54.0, 42.0], [22.0, 70.0, 86.0, 62.0], [54.0, 86.0, 174.0, 134.0], [42.0, 62.0, 134.0, 106.0]])
