// Generated by Mochi compiler v0.10.28 on 2025-07-18T09:34:46Z
int indexOf(String s, String ch) {
  num i = 0;
  while ((i as num) < s.length) {
    if (s.toString().substring(i, (i as num) + 1) == ch) {
      return i;
    }
    i = (i as num) + 1;
  }
  return -1;
}

int ord(String ch) {
  var upper = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
  var lower = 'abcdefghijklmnopqrstuvwxyz';
  var idx = indexOf(upper, ch);
  if ((idx as num) >= 0) {
    return 65 + (idx as num);
  }
  idx = indexOf(lower, ch);
  if ((idx as num) >= 0) {
    return 97 + (idx as num);
  }
  return 0;
}

String chr(int n) {
  var upper = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
  var lower = 'abcdefghijklmnopqrstuvwxyz';
  if (n >= 65 && n < 91) {
    return ((upper is String) ? upper.substring(n - 65, n - 64) : (upper as List).sublist(n - 65, n - 64));
  }
  if (n >= 97 && n < 123) {
    return ((lower is String) ? lower.substring(n - 97, n - 96) : (lower as List).sublist(n - 97, n - 96));
  }
  return '?';
}

String shiftRune(String r, int k) {
  if (r.toString().compareTo('a'.toString()) >= 0 && r.toString().compareTo('z'.toString()) <= 0) {
    return chr(((ord(r) - 97 + k) % 26) + 97);
  }
  if (r.toString().compareTo('A'.toString()) >= 0 && r.toString().compareTo('Z'.toString()) <= 0) {
    return chr(((ord(r) - 65 + k) % 26) + 65);
  }
  return r;
}

String encipher(String s, int k) {
  var out = '';
  num i = 0;
  while ((i as num) < s.length) {
    out = out + shiftRune(s.substring(i, (i as num) + 1), k);
    i = (i as num) + 1;
  }
  return out;
}

String decipher(String s, int k) {
  return encipher(s, (26 - k % 26) % 26);
}

void _main() {
  var pt = 'The five boxing wizards jump quickly';
  print('Plaintext: ' + pt);
  for (var key in [
    0,
    1,
    7,
    25,
    26,
  ]) {
    if (key < 1 || key > 25) {
      print('Key ' + key.toString() + ' invalid');
      continue;
    }
    var ct = encipher(pt, key);
    print('Key ' + key.toString());
    print('  Enciphered: ' + ct);
    print('  Deciphered: ' + decipher(ct, key));
  }
}

void main() {
  _main();
}
