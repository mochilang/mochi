// Generated by Mochi compiler v0.10.28 on 2025-07-18T09:34:05Z
int intSqrt(int x) {
  if (x < 2) {
    return x;
  }
  var left = 1;
  var right = x ~/ 2;
  num ans = 0;
  while ((left as num) <= (right as num)) {
    var mid = (left as num) + ((((right as num) - (left as num)) as num) / 2 as num);
    var sq = (mid as num) * (mid as num);
    if (sq == x) {
      return mid;
    }
    if ((sq as num) < x) {
      left = (mid as num) + 1;
      ans = mid;
    }
    else {
      right = (mid as num) - 1;
    }
  }
  return ans;
}

int sumRecip(int n) {
  var s = 1;
  var limit = intSqrt(n);
  var f = 2;
  while ((f as num) <= (limit as num)) {
    if (n % (f as num) == 0) {
      s = (s as num) + (n / (f as num) as num);
      var f2 = n / (f as num);
      if (f2 != f) {
        s = (s as num) + (f as num);
      }
    }
    f = (f as num) + 1;
  }
  return s;
}

void _main() {
  var nums = [
    6,
    28,
    120,
    496,
    672,
    8128,
    30240,
    32760,
    523776,
  ];
  var _iter0 = nums;
  for (var n in (_iter0 is Map ? (_iter0 as Map).keys : _iter0) as Iterable) {
    var s = sumRecip(n);
    if ((s as num) % (n as num) == 0) {
      var val = (s as num) / (n as num);
      var perfect = '';
      if (val == 1) {
        perfect = 'perfect!';
      }
      print('Sum of recipr. factors of ' + n.toString() + ' = ' + val.toString() + ' exactly ' + perfect);
    }
  }
}

void main() {
  _main();
}
