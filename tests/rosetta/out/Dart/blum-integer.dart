// Generated by Mochi compiler v0.10.28 on 2025-07-18T09:34:40Z
bool isPrime(int n) {
  if (n < 2) {
    return false;
  }
  if (n % 2 == 0) {
    return n == 2;
  }
  if (n % 3 == 0) {
    return n == 3;
  }
  var d = 5;
  while (((d as num) * (d as num) as num) <= n) {
    if (n % (d as num) == 0) {
      return false;
    }
    d = (d as num) + 2;
    if (n % (d as num) == 0) {
      return false;
    }
    d = (d as num) + 4;
  }
  return true;
}

int firstPrimeFactor(int n) {
  if (n == 1) {
    return 1;
  }
  if (n % 3 == 0) {
    return 3;
  }
  if (n % 5 == 0) {
    return 5;
  }
  var inc = [
    4,
    2,
    4,
    2,
    4,
    6,
    2,
    6,
  ];
  var k = 7;
  num i = 0;
  while (((k as num) * (k as num) as num) <= n) {
    if (n % (k as num) == 0) {
      return k;
    }
    k = (k as num) + (inc[i] as num);
    i = (((i as num) + 1) as num) % inc.length;
  }
  return n;
}

int indexOf(String s, String ch) {
  num i = 0;
  while ((i as num) < s.length) {
    if (s.toString().substring(i, (i as num) + 1) == ch) {
      return i;
    }
    i = (i as num) + 1;
  }
  return -1;
}

String padLeft(int n, int width) {
  var s = n.toString();
  while (s.length < width) {
    s = ' ' + s;
  }
  return s;
}

String formatFloat(double f, int prec) {
  var s = f.toString();
  var idx = indexOf(s, '.');
  if ((idx as num) < 0) {
    return s;
  }
  var need = ((idx as num) + 1 as num) + prec;
  if (s.length > (need as num)) {
    return s.toString().substring(0, need);
  }
  return s;
}

void _main() {
  List<int> blum = [];
  var counts = [
    0,
    0,
    0,
    0,
  ];
  var digits = [
    1,
    3,
    7,
    9,
  ];
  var i = 1;
  num bc = 0;
  while (true) {
    var p = firstPrimeFactor(i);
    if ((p as num) % 4 == 3) {
      var q = int.parse(((i as num) / (p as num)));
      if (q != p && (q as num) % 4 == 3 && isPrime(q)) {
        if ((bc as num) < 50) {
          blum = List.from(blum)..add(i);
        }
        var d = (i as num) % 10;
        if (d == 1) {
          counts[0] = (counts[0] as num) + 1;
        }
        else 
        if (d == 3) {
          counts[1] = (counts[1] as num) + 1;
        }
        else 
        if (d == 7) {
          counts[2] = (counts[2] as num) + 1;
        }
        else 
        if (d == 9) {
          counts[3] = (counts[3] as num) + 1;
        }
        bc = (bc as num) + 1;
        if (bc == 50) {
          print('First 50 Blum integers:');
          num idx = 0;
          while ((idx as num) < 50) {
            var line = '';
            num j = 0;
            while ((j as num) < 10) {
              line = line + padLeft(blum[idx], 3) + ' ';
              idx = (idx as num) + 1;
              j = (j as num) + 1;
            }
            print(line.toString().substring(0, line.length - 1));
          }
          break;
        }
      }
    }
    if ((i as num) % 5 == 3) {
      i = (i as num) + 4;
    }
    else {
      i = (i as num) + 2;
    }
  }
}

void main() {
  _main();
}
