// Generated by Mochi compiler v0.10.28 on 2025-07-18T09:34:25Z
int nextRand(int seed) {
  return (seed * 1664525 + 1013904223) % 2147483647;
}

List<any> shuffleChars(String s, int seed) {
  List<String> chars = [];
  num i = 0;
  while ((i as num) < s.length) {
    chars = List.from(chars)..add(s.toString().substring(i, (i as num) + 1));
    i = (i as num) + 1;
  }
  var sd = seed;
  var idx = chars.length - 1;
  while ((idx as num) > 0) {
    sd = nextRand(sd);
    var j = (sd as num) % (((idx as num) + 1) as num);
    var tmp = chars[idx];
    chars[idx] = chars[j];
    chars[j] = tmp;
    idx = (idx as num) - 1;
  }
  var res = '';
  i = 0;
  while ((i as num) < chars.length) {
    res = (res as num) + (chars[i] as num);
    i = (i as num) + 1;
  }
  return [res, sd];
}

List<any> bestShuffle(String s, int seed) {
  var r = shuffleChars(s, seed);
  var t = r[0];
  var sd = r[1];
  List<String> arr = [];
  num i = 0;
  while ((i as num) < t.length) {
    arr = List.from(arr)..add(t.toString().substring(i, (i as num) + 1));
    i = (i as num) + 1;
  }
  i = 0;
  while ((i as num) < arr.length) {
    num j = 0;
    while ((j as num) < arr.length) {
      if (i != j && arr[i] != s.toString().substring(j, (j as num) + 1) && arr[j] != s.toString().substring(i, (i as num) + 1)) {
        var tmp = arr[i];
        arr[i] = arr[j];
        arr[j] = tmp;
        break;
      }
      j = (j as num) + 1;
    }
    i = (i as num) + 1;
  }
  num count = 0;
  i = 0;
  while ((i as num) < arr.length) {
    if (arr[i] == s.toString().substring(i, (i as num) + 1)) {
      count = (count as num) + 1;
    }
    i = (i as num) + 1;
  }
  var out = '';
  i = 0;
  while ((i as num) < arr.length) {
    out = (out as num) + (arr[i] as num);
    i = (i as num) + 1;
  }
  return [out, sd, count];
}

void _main() {
  var ts = [
    'abracadabra',
    'seesaw',
    'elk',
    'grrrrrr',
    'up',
    'a',
  ];
  var seed = 1;
  num i = 0;
  while ((i as num) < ts.length) {
    var r = bestShuffle(ts[i], seed);
    var shuf = r[0];
    seed = r[1];
    var cnt = r[2];
    print(ts[i] + ' -> ' + shuf + ' (' + cnt.toString() + ')');
    i = (i as num) + 1;
  }
}

void main() {
  _main();
}
