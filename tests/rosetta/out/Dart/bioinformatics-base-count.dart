// Generated by Mochi compiler v0.10.28 on 2025-07-18T09:34:29Z
String padLeft(String s, int w) {
  var res = '';
  var n = w - s.length;
  while ((n as num) > 0) {
    res = res + ' ';
    n = (n as num) - 1;
  }
  return res + s;
}

var dna = '' + 'CGTAAAAAATTACAACGTCCTTTGGCTATCTCTTAAACTCCTGCTAAATG' + 'CTCGTGCTTTCCAATTATGTAAGCGTTCCGAGACGGGGTGGTCGATTCTG' + 'AGGACAAAGGTCAAGATGGAGCGCATCGAACGCAATAAGGATCATTTGAT' + 'GGGACGTTTCGTCGACAAAGTCTTGTTTCGAGAGTAACGGCTACCGTCTT' + 'CGATTCTGCTTATAACACTATGTTCTTATGAAATGGATGTTCTGAGTTGG' + 'TCAGTCCCAATGTGCGGGGTTTCTTTTAGTACGTCGGGAGTGGTATTATA' + 'TTTAATTTTTCTATATAGCGATCTGTATTTAAGCAATTCATTTAGGTTAT' + 'CGCCGCGATGCTCGGTTCGGACCGCCAAGCATCTGGCTCCACTGCTAGTG' + 'TCCTAAATTTGAATGGCAAACACAAATAAGATTTAGCAATTCGTGTAGAC' + 'GACCGGGGACTTGCATGATGGGAGCAGCTTTGTTAAACTACGAACGTAAT';

var le = dna.length;

num i = 0;

num a = 0;

num c = 0;

num g = 0;

num t = 0;

num idx = 0;

void main() {
  print('SEQUENCE:');
  while (i < le) {
    var k = i + 50;
    if ((k as num) > le) {
      k = le;
    }
    print(padLeft(i.toString(), 5) + ': ' + dna.substring(i, k));
    i = i + 50;
  }
  while (idx < le) {
    var ch = dna.toString().substring(idx, idx + 1);
    if (ch == 'A') {
      a = a + 1;
    }
    else {
      if (ch == 'C') {
        c = c + 1;
      }
      else {
        if (ch == 'G') {
          g = g + 1;
        }
        else {
          if (ch == 'T') {
            t = t + 1;
          }
        }
      }
    }
    idx = idx + 1;
  }
  print('');
  print('BASE COUNT:');
  print('    A: ' + padLeft(a.toString(), 3));
  print('    C: ' + padLeft(c.toString(), 3));
  print('    G: ' + padLeft(g.toString(), 3));
  print('    T: ' + padLeft(t.toString(), 3));
  print('    ------');
  print('    Î£: ' + le.toString());
  print('    ======');
}
