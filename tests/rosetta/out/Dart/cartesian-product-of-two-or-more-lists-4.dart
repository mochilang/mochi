// Generated by Mochi compiler v0.10.28 on 2025-07-18T09:35:01Z
String listStr(List<int> xs) {
  var s = '[';
  num i = 0;
  while ((i as num) < xs.length) {
    s = s + xs[i].toString();
    if ((i as num) < xs.length - 1) {
      s = s + ' ';
    }
    i = (i as num) + 1;
  }
  s = s + ']';
  return s;
}

String llStr(List<List<int>> lst) {
  var s = '[';
  num i = 0;
  while ((i as num) < lst.length) {
    s = s + listStr(lst[i]);
    if ((i as num) < lst.length - 1) {
      s = s + ' ';
    }
    i = (i as num) + 1;
  }
  s = s + ']';
  return s;
}

List<int> copy(List<int> xs) {
  List<int> out = [];
  for (var v in xs) {
    out = List.from(out)..add(v);
  }
  return out;
}

List<List<int>> cartN(any lists) {
  if (lists == null) {
    return [];
  }
  var a = (lists as List<List<int>>);
  if (a.length == 0) {
    return [
      [],
    ];
  }
  List<List<int>> out = [];
  var last = a.length - 1;
  var left = cartN(((a is String) ? a.substring(0, last) : (a as List).sublist(0, last)));
  var _iter0 = left;
  for (var p in (_iter0 is Map ? (_iter0 as Map).keys : _iter0) as Iterable) {
    var _iter1 = a[last];
    for (var x in (_iter1 is Map ? (_iter1 as Map).keys : _iter1) as Iterable) {
      var row = copy(p);
      row = List.from(row)..add(x);
      out = List.from(out)..add(row);
    }
  }
  return out;
}

void _main() {
  print(llStr(cartN([
    [1, 2],
    [3, 4],
  ])));
  print(llStr(cartN([
    [3, 4],
    [1, 2],
  ])));
  print(llStr(cartN([
    [1, 2],
    [],
  ])));
  print(llStr(cartN([
    [],
    [1, 2],
  ])));
  print('');
  print('[');
  for (var p in cartN([
    [1776, 1789],
    [7, 12],
    [4, 14, 23],
    [0, 1],
  ])) {
    print(' ' + listStr(p));
  }
  print(']');
  print(llStr(cartN([
    [1, 2, 3],
    [30],
    [500, 100],
  ])));
  print(llStr(cartN([
    [1, 2, 3],
    [],
    [500, 100],
  ])));
  print('');
  print(llStr(cartN(null)));
  print(llStr(cartN([])));
}

void main() {
  _main();
}
