// Generated by Mochi compiler v0.10.28 on 2025-07-18T09:34:58Z
int mod(int n, int m) {
  return ((n % m) + m) % m;
}

bool isPrime(int n) {
  if (n < 2) {
    return false;
  }
  if (n % 2 == 0) {
    return n == 2;
  }
  if (n % 3 == 0) {
    return n == 3;
  }
  var d = 5;
  while (((d as num) * (d as num) as num) <= n) {
    if (n % (d as num) == 0) {
      return false;
    }
    d = (d as num) + 2;
    if (n % (d as num) == 0) {
      return false;
    }
    d = (d as num) + 4;
  }
  return true;
}

String pad(int n, int width) {
  var s = n.toString();
  while (s.length < width) {
    s = ' ' + s;
  }
  return s;
}

void carmichael(int p1) {
  for (var h3 = 2; h3 < p1; h3++) {
    for (var d = 1; d < (h3 + p1); d++) {
      if (((h3 + p1) * (p1 - 1)) % d == 0 && mod(-(p1 as num) * p1, h3) == d % h3) {
        var p2 = 1 + ((p1 - 1) * (h3 + p1) ~/ d);
        if (!isPrime(p2)) {
          continue;
        }
        var p3 = 1 + (((p1 * (p2 as num) as num) / h3) as num);
        if (!isPrime(p3)) {
          continue;
        }
        if ((((p2 as num) * (p3 as num)) as num) % (p1 - 1) != 1) {
          continue;
        }
        var c = (p1 * (p2 as num) as num) * (p3 as num);
        print(pad(p1, 2) + '   ' + pad(p2, 4) + '   ' + pad(p3, 5) + '     ' + c.toString());
      }
    }
  }
}

void main() {
  print('The following are Carmichael munbers for p1 <= 61:\n');
  print('p1     p2      p3     product');
  print('==     ==      ==     =======');
  for (var p1 = 2; p1 < 62; p1++) {
    if (isPrime(p1)) {
      carmichael(p1);
    }
  }
}
