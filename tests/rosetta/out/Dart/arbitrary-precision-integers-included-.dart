// Generated by Mochi compiler v0.10.28 on 2025-07-18T09:33:57Z
import 'dart:io';

int pow_int(int base, int exp) {
  var result = 1;
  var b = base;
  var e = exp;
  while ((e as num) > 0) {
    if ((e as num) % 2 == 1) {
      result = (result as num) * (b as num);
    }
    b = (b as num) * (b as num);
    e = int.parse(((e as num) / 2));
  }
  return result;
}

bigint pow_big(bigint base, int exp) {
  bigint result = 1;
  bigint b = base;
  var e = exp;
  while ((e as num) > 0) {
    if ((e as num) % 2 == 1) {
      result = (result as num) * (b as num);
    }
    b = (b as num) * (b as num);
    e = int.parse(((e as num) / 2));
  }
  return result;
}

var e1 = pow_int(3, 2);

var e2 = pow_int(4, e1);

bigint base = 5;

bigint x = pow_big(base, e2);

var s = x.toString();

void main() {
  _print(['5^(4^(3^2)) has', s.length, 'digits:', s.toString().substring(0, 20), '...', s.toString().substring(s.length - 20, s.length)]);
}

void _print(List<dynamic> args) {
    for (var i = 0; i < args.length; i++) {
        if (i > 0) stdout.write(' ');
        var v = args[i];
        if (v is List) {
            stdout.write(v.join(' '));
        } else if (v is double && v == v.roundToDouble()) {
            stdout.write(v.toInt());
        } else {
            stdout.write(v);
        }
    }
    stdout.writeln();
}
