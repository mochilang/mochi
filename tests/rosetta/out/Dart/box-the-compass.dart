// Generated by Mochi compiler v0.10.28 on 2025-07-18T09:34:41Z
String padLeft(String s, int w) {
  var res = '';
  var n = w - s.length;
  while ((n as num) > 0) {
    res = res + ' ';
    n = (n as num) - 1;
  }
  return res + s;
}

String padRight(String s, int w) {
  var out = s;
  var i = s.length;
  while (i < w) {
    out = out + ' ';
    i = i + 1;
  }
  return out;
}

int indexOf(String s, String ch) {
  num i = 0;
  while (i < s.length) {
    if (s.toString().substring(i, i + 1) == ch) {
      return i;
    }
    i = i + 1;
  }
  return -1;
}

String format2(double f) {
  var s = f.toString();
  var idx = indexOf(s, '.');
  if ((idx as num) < 0) {
    s = s + '.00';
  }
  else {
    var need = (idx as num) + 3;
    if (s.length > (need as num)) {
      s = s.toString().substring(0, need);
    }
    else {
      while (s.length < (need as num)) {
        s = s + '0';
      }
    }
  }
  return s;
}

int cpx(double h) {
  var x = int.parse(((h / 11.25) + 0.5));
  x = (x as num) % 32;
  if ((x as num) < 0) {
    x = (x as num) + 32;
  }
  return x;
}

var compassPoint = [
  'North',
  'North by east',
  'North-northeast',
  'Northeast by north',
  'Northeast',
  'Northeast by east',
  'East-northeast',
  'East by north',
  'East',
  'East by south',
  'East-southeast',
  'Southeast by east',
  'Southeast',
  'Southeast by south',
  'South-southeast',
  'South by east',
  'South',
  'South by west',
  'South-southwest',
  'Southwest by south',
  'Southwest',
  'Southwest by west',
  'West-southwest',
  'West by south',
  'West',
  'West by north',
  'West-northwest',
  'Northwest by west',
  'Northwest',
  'Northwest by north',
  'North-northwest',
  'North by west',
];

String degrees2compasspoint(double h) {
  return compassPoint[cpx(h)];
}

var headings = [
  0,
  16.87,
  16.88,
  33.75,
  50.62,
  50.63,
  67.5,
  84.37,
  84.38,
  101.25,
  118.12,
  118.13,
  135,
  151.87,
  151.88,
  168.75,
  185.62,
  185.63,
  202.5,
  219.37,
  219.38,
  236.25,
  253.12,
  253.13,
  270,
  286.87,
  286.88,
  303.75,
  320.62,
  320.63,
  337.5,
  354.37,
  354.38,
];

num i = 0;

void main() {
  print('Index  Compass point         Degree');
  while (i < headings.length) {
    var h = headings[i];
    var idx = i % 32 + 1;
    var cp = degrees2compasspoint(h);
    print(padLeft(idx.toString(), 4) + '   ' + padRight(cp, 19) + ' ' + format2(h) + 'Â°');
    i = i + 1;
  }
}
