// Generated by Mochi compiler v0.10.28 on 2025-07-18T09:35:19Z
double sqrtApprox(double x) {
  var guess = x;
  num i = 0;
  while ((i as num) < 20) {
    guess = (((guess as num) + (x / (guess as num) as num)) as num) / 2;
    i = (i as num) + 1;
  }
  return guess;
}

List<List<double>> cholesky(List<List<double>> a) {
  var n = a.length;
  List<List<double>> l = [];
  num i = 0;
  while ((i as num) < (n as num)) {
    List<double> row = [];
    num j = 0;
    while ((j as num) < (n as num)) {
      row = List.from(row)..add(0);
      j = (j as num) + 1;
    }
    l = List.from(l)..add(row);
    i = (i as num) + 1;
  }
  i = 0;
  while ((i as num) < (n as num)) {
    num j = 0;
    while ((j as num) <= (i as num)) {
      var sum = a[i][j];
      num k = 0;
      while ((k as num) < (j as num)) {
        sum = (sum as num) - ((l[i][k] as num) * (l[j][k] as num) as num);
        k = (k as num) + 1;
      }
      if (i == j) {
        l[i][j] = sqrtApprox(sum);
      }
      else {
        l[i][j] = (sum as num) / (l[j][j] as num);
      }
      j = (j as num) + 1;
    }
    i = (i as num) + 1;
  }
  return l;
}

void printMat(List<List<double>> m) {
  num i = 0;
  while ((i as num) < m.length) {
    var line = '';
    num j = 0;
    while ((j as num) < m[i].length) {
      line = line + m[i][j].toString();
      if ((j as num) < m[i].length - 1) {
        line = line + ' ';
      }
      j = (j as num) + 1;
    }
    print(line);
    i = (i as num) + 1;
  }
}

void demo(List<List<double>> a) {
  print('A:');
  printMat(a);
  var l = cholesky(a);
  print('L:');
  printMat(l);
}

void main() {
  demo([
    [25, 15, -5],
    [15, 18, 0],
    [-5, 0, 11],
  ]);
  demo([
    [
    18,
    22,
    54,
    42,
  ],
    [
    22,
    70,
    86,
    62,
  ],
    [
    54,
    86,
    174,
    134,
  ],
    [
    42,
    62,
    134,
    106,
  ],
  ]);
}
