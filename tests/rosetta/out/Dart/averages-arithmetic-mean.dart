// Generated by Mochi compiler v0.10.28 on 2025-07-18T09:34:12Z
Map<String, any> mean(List<double> v) {
  if (v.length == 0) {
    return {'ok': false};
  }
  num sum = 0;
  num i = 0;
  while ((i as num) < v.length) {
    sum = (sum as num) + v[i];
    i = (i as num) + 1;
  }
  return {
    'ok': true,
    'mean': (sum as num) / (double.parse(v.length)),
  };
}

void _main() {
  var sets = [
    [],
    [
    3,
    1,
    4,
    1,
    5,
    9,
  ],
    [
    1e+20,
    3,
    1,
    4,
    1,
    5,
    9,
    -1e+20,
  ],
    [
    10,
    9,
    8,
    7,
    6,
    5,
    4,
    3,
    2,
    1,
    0,
    0,
    0,
    0,
    0.11,
  ],
    [
    10,
    20,
    30,
    40,
    50,
    -100,
    4.7,
    -1100,
  ],
  ];
  var _iter0 = sets;
  for (var v in (_iter0 is Map ? (_iter0 as Map).keys : _iter0) as Iterable) {
    print('Vector: ' + v.toString());
    var r = mean(v);
    if (r['ok'] != null) {
      print('Mean of ' + v.length.toString() + ' numbers is ' + r['mean'].toString());
    }
    else {
      print('Mean undefined');
    }
    print('');
  }
}

void main() {
  _main();
}
