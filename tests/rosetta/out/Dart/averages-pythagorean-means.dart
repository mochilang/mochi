// Generated by Mochi compiler v0.10.28 on 2025-07-18T09:34:17Z
double powf(double base, int exp) {
  var result = 1;
  num i = 0;
  while ((i as num) < exp) {
    result = (result as num) * base;
    i = (i as num) + 1;
  }
  return result;
}

double nthRoot(double x, int n) {
  num low = 0;
  var high = x;
  num i = 0;
  while ((i as num) < 60) {
    var mid = (((low as num) + (high as num)) as num) / 2;
    if (powf(mid, n) > x) {
      high = mid;
    }
    else {
      low = mid;
    }
    i = (i as num) + 1;
  }
  return low;
}

void _main() {
  num sum = 0;
  num sumRecip = 0;
  var prod = 1;
  var n = 1;
  while ((n as num) <= 10) {
    var f = double.parse(n);
    sum = (sum as num) + (f as num);
    sumRecip = (sumRecip as num) + (1 / (f as num) as num);
    prod = (prod as num) * (f as num);
    n = (n as num) + 1;
  }
  var count = 10;
  var a = (sum as num) / (count as num);
  var g = nthRoot(prod, 10);
  var h = (count as num) / (sumRecip as num);
  print('A: ' + a.toString() + ' G: ' + g.toString() + ' H: ' + h.toString());
  print('A >= G >= H: ' + (a as num) >= (g as num) && (g as num) >= (h as num).toString());
}

void main() {
  _main();
}
