// Generated by Mochi compiler v0.10.28 on 2025-07-18T09:34:25Z
bigrat bernoulli(int n) {
  List<bigrat> a = [];
  num m = 0;
  while ((m as num) <= n) {
    a = List.from(a)..add((1 as bigrat) / ((((m as num) + 1) as bigrat)));
    var j = m;
    while ((j as num) >= 1) {
      a[(j as num) - 1] = ((j as bigrat)) * (((a[(j as num) - 1] as num) - (a[j] as num)) as num);
      j = (j as num) - 1;
    }
    m = (m as num) + 1;
  }
  return a[0];
}

void main() {
  for (var i = 0; i < 61; i++) {
    var b = bernoulli(i);
    if (num(b) != 0) {
      var numStr = num(b).toString();
      var denStr = denom(b).toString();
      print('B(' + i.toString().padStart(2, ' ') + ') =' + numStr['padStart'](45, ' ') + '/' + denStr);
    }
  }
}
