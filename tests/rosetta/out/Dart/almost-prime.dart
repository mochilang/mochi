// Generated by Mochi compiler v0.10.28 on 2025-07-18T09:33:44Z
bool kPrime(int n, int k) {
  num nf = 0;
  var i = 2;
  while ((i as num) <= n) {
    while (n % (i as num) == 0) {
      if (nf == k) {
        return false;
      }
      nf = (nf as num) + 1;
      n = n / (i as num);
    }
    i = (i as num) + 1;
  }
  return nf == k;
}

List<int> gen(int k, int count) {
  List<int> r = [];
  var n = 2;
  while (r.length < count) {
    if (kPrime(n, k)) {
      r = List.from(r)..add(n);
    }
    n = (n as num) + 1;
  }
  return r;
}

void _main() {
  var k = 1;
  while ((k as num) <= 5) {
    print(k.toString() + ' ' + gen(k, 10).toString());
    k = (k as num) + 1;
  }
}

void main() {
  _main();
}
