// Generated by Mochi compiler v0.10.28 on 2025-07-18T09:35:07Z
var width = 60;

var height = int.parse((double.parse(width) * 0.86602540378));

var iterations = 5000;

List<List<String>> grid = [];

num y = 0;

List<int> randInt(int s, int n) {
  var next = (s * 1664525 + 1013904223) % 2147483647;
  return [next, (next as num) % n];
}

var seed = 1;

List<List<int>> vertices = [
  [0, height - 1],
  [width - 1, height - 1],
  [
  int.parse((width ~/ 2)),
  0,
],
];

var px = int.parse((width ~/ 2));

var py = int.parse((height ~/ 2));

num i = 0;

void main() {
  while (y < height) {
    List<String> line = [];
    num x = 0;
    while ((x as num) < width) {
      line = List.from(line)..add(' ');
      x = (x as num) + 1;
    }
    grid = List.from(grid)..add(line);
    y = y + 1;
  }
  while (i < iterations) {
    var r = randInt(seed, 3);
    seed = r[0];
    var idx = int.parse(r[1]);
    var v = vertices[idx];
    px = int.parse((((px + (v[0] as num)) as num) / 2));
    py = int.parse((((py + (v[1] as num)) as num) / 2));
    if (px >= 0 && px < width && py >= 0 && py < height) {
      grid[py][px] = '*';
    }
    i = i + 1;
  }
  y = 0;
  while (y < height) {
    var line = '';
    num x = 0;
    while ((x as num) < width) {
      line = line + grid[y][x];
      x = (x as num) + 1;
    }
    print(line);
    y = y + 1;
  }
}
