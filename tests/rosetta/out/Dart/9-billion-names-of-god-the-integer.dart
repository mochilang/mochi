// Generated by Mochi compiler v0.10.30 on 2025-07-19T00:25:16Z
List<int> bigTrim(List<int> a) {
  var n = a.length;
  while (n > 1 && a[n - 1] == 0) {
    a = a.sublist(0, n - 1);
    n = n - 1;
  }
  return a;
}

List<int> bigFromInt(int x) {
  if (x == 0) {
    return [0];
  }
  List<int> digits = [];
  var n = x;
  while (n > 0) {
    digits = List.from(digits)..add(n % 10);
    n = n ~/ 10;
  }
  return digits;
}

List<int> bigAdd(List<int> a, List<int> b) {
  List<int> res = [];
  var carry = 0;
  var i = 0;
  while (i < a.length || i < b.length || carry > 0) {
    var av = 0;
    if (i < a.length) {
      av = a[i];
    }
    var bv = 0;
    if (i < b.length) {
      bv = b[i];
    }
    var s = av + bv + carry;
    res = List.from(res)..add(s % 10);
    carry = s ~/ 10;
    i = i + 1;
  }
  return bigTrim(res);
}

List<int> bigSub(List<int> a, List<int> b) {
  List<int> res = [];
  var borrow = 0;
  var i = 0;
  while (i < a.length) {
    var av = a[i];
    var bv = 0;
    if (i < b.length) {
      bv = b[i];
    }
    var diff = av - bv - borrow;
    if (diff < 0) {
      diff = diff + 10;
      borrow = 1;
    }
    else {
      borrow = 0;
    }
    res = List.from(res)..add(diff);
    i = i + 1;
  }
  return bigTrim(res);
}

String bigToString(List<int> a) {
  var s = '';
  var i = a.length - 1;
  while (i >= 0) {
    s = s + a[i].toString();
    i = i - 1;
  }
  return s;
}

int minInt(int a, int b) {
  if (a < b) {
    return a;
  }
  else {
    return b;
  }
}

List<List<int>> cumu(int n) {
  List<List<List<int>>> cache = [
    [bigFromInt(1)],
  ];
  var y = 1;
  while (y <= n) {
    List<List<int>> row = [bigFromInt(0)];
    var x = 1;
    while (x <= y) {
      var val = cache[y - x][minInt(x, y - x)];
      row = List.from(row)..add(bigAdd(row[row.length - 1], val));
      x = x + 1;
    }
    cache = List.from(cache)..add(row);
    y = y + 1;
  }
  return cache[n];
}

List<String> row(int n) {
  var e = cumu(n);
  List<String> out = [];
  var i = 0;
  while (i < n) {
    var diff = bigSub(e[i + 1], e[i]);
    out = List.from(out)..add(bigToString(diff));
    i = i + 1;
  }
  return out;
}

var x = 1;

void main() {
  print('rows:');
  while (x < 11) {
    var r = row(x);
    var line = '';
    var i = 0;
    while (i < r.length) {
      line = line + ' ' + r[i] + ' ';
      i = i + 1;
    }
    print(line);
    x = x + 1;
  }
  print('');
  print('sums:');
  for (var num in [23, 123, 1234]) {
    var r = cumu(num);
    print(num.toString() + ' ' + bigToString(r[r.length - 1]));
  }
}
