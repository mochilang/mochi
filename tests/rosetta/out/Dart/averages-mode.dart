// Generated by Mochi compiler v0.10.28 on 2025-07-18T09:34:16Z
var arr1 = [
  2,
  7,
  1,
  8,
  2,
];

Map<int, int> counts1 = {};

List<int> keys1 = [];

num i = 0;

num max1 = 0;

List<int> modes1 = [];

var arr2 = [
  2,
  7,
  1,
  8,
  2,
  8,
];

Map<int, int> counts2 = {};

List<int> keys2 = [];

num max2 = 0;

List<int> modes2 = [];

void main() {
  while (i < arr1.length) {
    var v = arr1[i];
    if (counts1.containsKey(v)) {
      counts1[v] = (counts1 as Map)[v] + 1;
    }
    else {
      counts1[v] = 1;
      keys1 = List.from(keys1)..add(v);
    }
    i = i + 1;
  }
  i = 0;
  while (i < keys1.length) {
    var k = keys1[i];
    var c = (counts1 as Map)[k];
    if ((c as num) > max1) {
      max1 = c;
    }
    i = i + 1;
  }
  i = 0;
  while (i < keys1.length) {
    var k = keys1[i];
    if ((counts1 as Map)[k] == max1) {
      modes1 = List.from(modes1)..add(k);
    }
    i = i + 1;
  }
  print(modes1.toString());
  i = 0;
  while (i < arr2.length) {
    var v = arr2[i];
    if (counts2.containsKey(v)) {
      counts2[v] = (counts2 as Map)[v] + 1;
    }
    else {
      counts2[v] = 1;
      keys2 = List.from(keys2)..add(v);
    }
    i = i + 1;
  }
  i = 0;
  while (i < keys2.length) {
    var k = keys2[i];
    var c = (counts2 as Map)[k];
    if ((c as num) > max2) {
      max2 = c;
    }
    i = i + 1;
  }
  i = 0;
  while (i < keys2.length) {
    var k = keys2[i];
    if ((counts2 as Map)[k] == max2) {
      modes2 = List.from(modes2)..add(k);
    }
    i = i + 1;
  }
  print(modes2.toString());
}
