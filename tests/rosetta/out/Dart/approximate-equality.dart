// Generated by Mochi compiler v0.10.28 on 2025-07-18T09:33:57Z
double abs(double x) {
  if (x < 0) {
    return -(x as num);
  }
  return x;
}

double maxf(double a, double b) {
  if (a > b) {
    return a;
  }
  return b;
}

bool isClose(double a, double b) {
  var relTol = 1e-09;
  var t = abs(a - b);
  var u = (relTol as num) * maxf(abs(a), abs(b));
  return (t as num) <= (u as num);
}

double sqrtApprox(double x) {
  var guess = x;
  num i = 0;
  while ((i as num) < 10) {
    guess = (((guess as num) + (x / (guess as num) as num)) as num) / 2;
    i = (i as num) + 1;
  }
  return guess;
}

void _main() {
  var root2 = sqrtApprox(2);
  var pairs = [
    [
    1.0000000000000002e+14,
    1.0000000000000002e+14,
  ],
    [100.01, 100.011],
    [
    1.0000000000000002e+13 / 10000,
    1.0000000000000001e+09,
  ],
    [0.001, 0.0010000001],
    [1.01e-22, 0],
    [
    (root2 as num) * (root2 as num),
    2,
  ],
    [
    ((-(root2 as num)) as num) * (root2 as num),
    -2,
  ],
    [1e+17, 1e+17],
    [3.141592653589793, 3.141592653589793],
  ];
  var _iter0 = pairs;
  for (var pair in (_iter0 is Map ? (_iter0 as Map).keys : _iter0) as Iterable) {
    var a = pair[0];
    var b = pair[1];
    var s = (isClose(a, b) ? '≈' : '≉');
    print(a.toString() + ' ' + s + ' ' + b.toString());
  }
}

void main() {
  _main();
}
