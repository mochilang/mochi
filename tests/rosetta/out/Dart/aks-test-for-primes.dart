// Generated by Mochi compiler v0.10.28 on 2025-07-18T09:33:41Z
String poly(int p) {
  String s = '';
  int coef = 1;
  var i = p;
  if (coef != 1) {
    s = s + coef.toString();
  }
  while ((i as num) > 0) {
    s = s + 'x';
    if (i != 1) {
      s = s + '^' + i.toString();
    }
    coef = int.parse((((coef as num) * (i as num) as num) / (((p - (i as num) as num) + 1) as num)));
    var d = coef;
    if (((p - (((i as num) - 1) as num)) as num) % 2 == 1) {
      d = -(d as num);
    }
    if ((d as num) < 0) {
      s = s + ' - ' + -(d as num).toString();
    }
    else {
      s = s + ' + ' + d.toString();
    }
    i = (i as num) - 1;
  }
  if (s == '') {
    s = '1';
  }
  return s;
}

bool aks(int n) {
  if (n < 2) {
    return false;
  }
  int c = n;
  var i = 1;
  while ((i as num) < n) {
    if ((c as num) % n != 0) {
      return false;
    }
    c = int.parse((((c as num) * ((n - (i as num)) as num) as num) / (((i as num) + 1) as num)));
    i = (i as num) + 1;
  }
  return true;
}

void _main() {
  num p = 0;
  while ((p as num) <= 7) {
    print(p.toString() + ':  ' + poly(p));
    p = (p as num) + 1;
  }
  var first = true;
  p = 2;
  String line = '';
  while ((p as num) < 50) {
    if (aks(p)) {
      if (first != null) {
        line = line + p.toString();
        first = false;
      }
      else {
        line = line + ' ' + p.toString();
      }
    }
    p = (p as num) + 1;
  }
  print(line);
}

void main() {
  _main();
}
