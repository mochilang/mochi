// Generated by Mochi compiler v0.10.28 on 2025-07-18T09:34:12Z
double absf(double x) {
  if (x < 0) {
    return -(x as num);
  }
  return x;
}

double floorf(double x) {
  return double.parse((int.parse(x)));
}

int indexOf(String s, String ch) {
  num i = 0;
  while ((i as num) < s.length) {
    if (s.toString().substring(i, (i as num) + 1) == ch) {
      return i;
    }
    i = (i as num) + 1;
  }
  return -1;
}

String fmtF(double x) {
  var y = floorf(x * 10000 + 0.5) / 10000;
  var s = y.toString();
  var dot = indexOf(s, '.');
  if (dot == 0 - 1) {
    s = s + '.0000';
  }
  else {
    var decs = (s.length - (dot as num) as num) - 1;
    if ((decs as num) > 4) {
      s = s.toString().substring(0, (dot as num) + 5);
    }
    else {
      while ((decs as num) < 4) {
        s = s + '0';
        decs = (decs as num) + 1;
      }
    }
  }
  return s;
}

String padInt(int n, int width) {
  var s = n.toString();
  while (s.length < width) {
    s = ' ' + s;
  }
  return s;
}

String padFloat(double x, int width) {
  var s = fmtF(x);
  while (s.length < width) {
    s = ' ' + s;
  }
  return s;
}

double avgLen(int n) {
  var tests = 10000;
  num sum = 0;
  var seed = 1;
  num t = 0;
  while ((t as num) < (tests as num)) {
    List<bool> visited = [];
    num i = 0;
    while ((i as num) < n) {
      visited = List.from(visited)..add(false);
      i = (i as num) + 1;
    }
    num x = 0;
    while (!visited[x] != null) {
      visited[x] = true;
      sum = (sum as num) + 1;
      seed = ((((seed as num) * 1664525 as num) + 1013904223) as num) % 2147483647;
      x = (seed as num) % n;
    }
    t = (t as num) + 1;
  }
  return (double.parse(sum)) / (tests as num);
}

double ana(int n) {
  var nn = double.parse(n);
  var term = 1;
  var sum = 1;
  var i = (nn as num) - 1;
  while ((i as num) >= 1) {
    term = (term as num) * (((i as num) / (nn as num)) as num);
    sum = (sum as num) + (term as num);
    i = (i as num) - 1;
  }
  return sum;
}

void _main() {
  var nmax = 20;
  print(' N    average    analytical    (error)');
  print('===  =========  ============  =========');
  var n = 1;
  while ((n as num) <= (nmax as num)) {
    var a = avgLen(n);
    var b = ana(n);
    var err = (absf((a as num) - (b as num)) / (b as num) as num) * 100;
    var line = padInt(n, 3) + '  ' + padFloat(a, 9) + '  ' + padFloat(b, 12) + '  (' + padFloat(err, 6) + '%)';
    print(line);
    n = (n as num) + 1;
  }
}

void main() {
  _main();
}
