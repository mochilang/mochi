// Generated by Mochi compiler v0.10.28 on 2025-07-18T09:34:28Z
String char(int n) {
  var letters = 'abcdefghijklmnopqrstuvwxyz';
  var idx = n - 97;
  if ((idx as num) < 0 || (idx as num) >= letters.length) {
    return '?';
  }
  return letters.toString().substring(idx, (idx as num) + 1);
}

String fromBytes(List<int> bs) {
  var s = '';
  num i = 0;
  while (i < bs.length) {
    s = s + char(bs[i]);
    i = i + 1;
  }
  return s;
}

List<int> b = [
  98,
  105,
  110,
  97,
  114,
  121,
];

List<int> c = b;

List<int> d = [];

num i = 0;

var z = List.from(b)..add(122);

var sub = b.sublist(1, 3);

List<int> f = [];

List<int> rem = [];

void main() {
  print(b.toString());
  print(c.toString());
  print(_equal(b, c).toString());
  while (i < b.length) {
    d = List.from(d)..add(b[i]);
    i = i + 1;
  }
  d[1] = 97;
  d[4] = 110;
  print(fromBytes(b));
  print(fromBytes(d));
  print(b.length == 0.toString());
  print(fromBytes(z));
  print(fromBytes(sub));
  i = 0;
  while (i < d.length) {
    var val = d[i];
    if (val == 110) {
      f = List.from(f)..add(109);
    }
    else {
      f = List.from(f)..add(val);
    }
    i = i + 1;
  }
  print(fromBytes(d) + ' -> ' + fromBytes(f));
  rem = List.from(rem)..add(b[0]);
  i = 3;
  while (i < b.length) {
    rem = List.from(rem)..add(b[i]);
    i = i + 1;
  }
  print(fromBytes(rem));
}

bool _equal(dynamic a, dynamic b) {
    if (a is List && b is List) {
        if (a.length != b.length) return false;
        for (var i = 0; i < a.length; i++) { if (!_equal(a[i], b[i])) return false; }
        return true;
    }
    if (a is Map && b is Map) {
        if (a.length != b.length) return false;
        for (var k in a.keys) { if (!b.containsKey(k) || !_equal(a[k], b[k])) return false; }
        return true;
    }
    return a == b;
}
