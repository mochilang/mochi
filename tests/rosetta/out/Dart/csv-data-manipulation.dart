// Generated by Mochi compiler v0.10.28 on 2025-07-18T09:35:23Z
String join(List<String> xs, String sep) {
  var res = '';
  num i = 0;
  while (i < xs.length) {
    if (i > 0) {
      res = res + sep;
    }
    res = res + xs[i];
    i = i + 1;
  }
  return res;
}

int parseIntStr(String str) {
  num i = 0;
  var neg = false;
  if (str.length > 0 && str.substring(0, 1) == '-') {
    neg = true;
    i = 1;
  }
  num n = 0;
  var digits = {
    '0': 0,
    '1': 1,
    '2': 2,
    '3': 3,
    '4': 4,
    '5': 5,
    '6': 6,
    '7': 7,
    '8': 8,
    '9': 9,
  };
  while (i < str.length) {
    n = ((n as num) * 10 as num) + (digits[str.substring(i, i + 1)] as num);
    i = i + 1;
  }
  if (neg != null) {
    n = -(n as num);
  }
  return n;
}

List<List<String>> rows = [
  ['A', 'B', 'C'],
  ['1', '2', '3'],
  ['4', '5', '6'],
  ['7', '8', '9'],
];

var i = 1;

void main() {
  rows[0] = List.from(rows[0])..add('SUM');
  while (i < rows.length) {
    num sum = 0;
    for (var s in rows[i]) {
      sum = (sum as num) + parseIntStr(s);
    }
    rows[i] = List.from(rows[i])..add(sum.toString());
    i = i + 1;
  }
  for (var r in rows) {
    print(join(r, ','));
  }
}
