// Generated by Mochi transpiler
String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

double abs(double x) {
  if (x < 0.0) {
    return -x;
  }
  return x;
}

double sqrtApprox(double x) {
  double guess = x;
  int i = 0;
  while (i < 20) {
    guess = (guess + x / guess) / 2.0;
    i = i + 1;
  }
  return guess;
}

double agm(double a, double g) {
  double eps = 0.00000000000001;
  while ((a - g).abs().compareTo(a.abs() * eps) > 0) {
    double newA = (a + g) / 2.0;
    double newG = sqrtApprox(a * g);
    a = newA;
    g = newG;
  }
  return a;
}

void _main() {
  print((agm(1.0, 1.0 / sqrtApprox(2.0))).toString());
}

void _start() {
  _main();
}

void main() => _start();
