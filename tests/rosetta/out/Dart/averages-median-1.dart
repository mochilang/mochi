// Generated by Mochi compiler v0.10.28 on 2025-07-18T09:34:14Z
List<double> sortFloat(List<double> xs) {
  var arr = xs;
  var n = arr.length;
  num i = 0;
  while ((i as num) < (n as num)) {
    num j = 0;
    while ((j as num) < ((n as num) - 1 as num)) {
      if ((arr[j] as num) > (arr[(j as num) + 1] as num)) {
        var tmp = arr[j];
        arr[j] = arr[(j as num) + 1];
        arr[(j as num) + 1] = tmp;
      }
      j = (j as num) + 1;
    }
    i = (i as num) + 1;
  }
  return arr;
}

double median(List<double> a) {
  var arr = sortFloat(a);
  var half = int.parse((arr.length ~/ 2));
  var m = arr[half];
  if (arr.length % 2 == 0) {
    m = (((m as num) + (arr[(half as num) - 1] as num)) as num) / 2;
  }
  return m;
}

void main() {
  print(median([
    3,
    1,
    4,
    1,
  ]).toString());
  print(median([
    3,
    1,
    4,
    1,
    5,
  ]).toString());
}
