// Generated by Mochi compiler v0.10.28 on 2025-07-18T09:34:32Z
int indexOf(String s, String ch) {
  num i = 0;
  while ((i as num) < s.length) {
    if (s.substring(i, (i as num) + 1) == ch) {
      return i;
    }
    i = (i as num) + 1;
  }
  return -1;
}

List<int> set58(String addr) {
  var tmpl = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';
  List<int> a = [];
  num i = 0;
  while ((i as num) < 25) {
    a = List.from(a)..add(0);
    i = (i as num) + 1;
  }
  num idx = 0;
  while ((idx as num) < addr.length) {
    var ch = addr.substring(idx, (idx as num) + 1);
    var c = indexOf(tmpl, ch);
    if ((c as num) < 0) {
      return [];
    }
    var j = 24;
    while ((j as num) >= 0) {
      c = (c as num) + (58 * (a[j] as num) as num);
      a[j] = (c as num) % 256;
      c = int.parse(((c as num) / 256));
      j = (j as num) - 1;
    }
    if ((c as num) > 0) {
      return [];
    }
    idx = (idx as num) + 1;
  }
  return a;
}

List<int> doubleSHA256(List<int> bs) {
  var first = sha256(bs);
  return sha256(first);
}

List<int> computeChecksum(List<int> a) {
  var hash = doubleSHA256(a.sublist(0, 21));
  return ((hash is String) ? hash.substring(0, 4) : (hash as List).sublist(0, 4));
}

bool validA58(String addr) {
  var a = set58(addr);
  if (a.length != 25) {
    return false;
  }
  if (a[0] != 0) {
    return false;
  }
  var sum = computeChecksum(a);
  num i = 0;
  while ((i as num) < 4) {
    if (a[21 + (i as num)] != sum[i]) {
      return false;
    }
    i = (i as num) + 1;
  }
  return true;
}

void main() {
  print(validA58('1AGNa15ZQXAZUgFiqJ3i7Z2DPU2J6hW62i').toString());
  print(validA58('17NdbrSGoUotzeGCcMMCqnFkEvLymoou9j').toString());
}
