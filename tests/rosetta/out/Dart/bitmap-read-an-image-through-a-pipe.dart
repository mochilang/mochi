// Generated by Mochi compiler v0.10.28 on 2025-07-18T09:34:37Z
int parseIntStr(String str) {
  num i = 0;
  var neg = false;
  if (str.length > 0 && str.substring(0, 1) == '-') {
    neg = true;
    i = 1;
  }
  num n = 0;
  var digits = {
    '0': 0,
    '1': 1,
    '2': 2,
    '3': 3,
    '4': 4,
    '5': 5,
    '6': 6,
    '7': 7,
    '8': 8,
    '9': 9,
  };
  while ((i as num) < str.length) {
    n = ((n as num) * 10 as num) + (digits[str.substring(i, (i as num) + 1)] as num);
    i = (i as num) + 1;
  }
  if (neg != null) {
    n = -(n as num);
  }
  return n;
}

List<String> splitWs(String s) {
  List<String> parts = [];
  var cur = '';
  num i = 0;
  while ((i as num) < s.length) {
    var ch = s.toString().substring(i, (i as num) + 1);
    if (ch == ' ' || ch == '\n' || ch == '  ' || ch == '\r') {
      if (cur.length > 0) {
        parts = List.from(parts)..add(cur);
        cur = '';
      }
    }
    else {
      cur = (cur as num) + (ch as num);
    }
    i = (i as num) + 1;
  }
  if (cur.length > 0) {
    parts = List.from(parts)..add(cur);
  }
  return parts;
}

Map<String, any> parsePpm(String data) {
  var toks = splitWs(data);
  if (toks.length < 4) {
    return {'err': true};
  }
  var magic = toks[0];
  var w = parseIntStr(toks[1]);
  var h = parseIntStr(toks[2]);
  var maxv = parseIntStr(toks[3]);
  List<int> px = [];
  var i = 4;
  while ((i as num) < toks.length) {
    px = List.from(px)..add(parseIntStr(toks[i]));
    i = (i as num) + 1;
  }
  return {
    'magic': magic,
    'w': w,
    'h': h,
    'max': maxv,
    'px': px,
  };
}

var ppmData = 'P3\n2 2\n1\n0 1 1 0 1 0 0 1 1 1 0 0\n';

var img = parsePpm(ppmData);

void main() {
  print('width=' + img['w'].toString() + ' height=' + img['h'].toString());
}
