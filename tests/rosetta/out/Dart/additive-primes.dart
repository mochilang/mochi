// Generated by Mochi compiler v0.10.28 on 2025-07-18T09:33:38Z
bool isPrime(int n) {
  if (n < 2) {
    return false;
  }
  if (n % 2 == 0) {
    return n == 2;
  }
  if (n % 3 == 0) {
    return n == 3;
  }
  var d = 5;
  while (((d as num) * (d as num) as num) <= n) {
    if (n % (d as num) == 0) {
      return false;
    }
    d = (d as num) + 2;
    if (n % (d as num) == 0) {
      return false;
    }
    d = (d as num) + 4;
  }
  return true;
}

int sumDigits(int n) {
  num s = 0;
  var x = n;
  while ((x as num) > 0) {
    s = (s as num) + ((x as num) % 10 as num);
    x = int.parse(((x as num) / 10));
  }
  return s;
}

String pad(int n) {
  if (n < 10) {
    return '  ' + n.toString();
  }
  if (n < 100) {
    return ' ' + n.toString();
  }
  return n.toString();
}

void _main() {
  print('Additive primes less than 500:');
  num count = 0;
  var line = '';
  num lineCount = 0;
  var i = 2;
  while ((i as num) < 500) {
    if (isPrime(i) && isPrime(sumDigits(i))) {
      count = (count as num) + 1;
      line = line + pad(i) + '  ';
      lineCount = (lineCount as num) + 1;
      if (lineCount == 10) {
        print(line.toString().substring(0, line.length - 2));
        line = '';
        lineCount = 0;
      }
    }
    if ((i as num) > 2) {
      i = (i as num) + 2;
    }
    else {
      i = (i as num) + 1;
    }
  }
  if ((lineCount as num) > 0) {
    print(line.toString().substring(0, line.length - 2));
  }
  print(count.toString() + ' additive primes found.');
}

void main() {
  _main();
}
