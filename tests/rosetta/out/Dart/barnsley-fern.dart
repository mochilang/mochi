// Generated by Mochi compiler v0.10.28 on 2025-07-18T09:34:22Z
var xMin = -2.182;

var xMax = 2.6558;

num yMin = 0;

var yMax = 9.9983;

var width = 60;

var nIter = 10000;

var dx = xMax - xMin;

var dy = yMax - yMin;

var height = int.parse((width * dy / dx));

List<List<String>> grid = [];

num row = 0;

var seed = 1;

List<int> randInt(int s, int n) {
  var next = (s * 1664525 + 1013904223) % 2147483647;
  return [next, (next as num) % n];
}

num x = 0;

num y = 0;

var ix = int.parse(((double.parse(width)) * (x - xMin) / dx));

var iy = int.parse(((double.parse(height)) * (yMax - y) / dy));

num i = 0;

void main() {
  while (row < height) {
    List<String> line = [];
    num col = 0;
    while ((col as num) < width) {
      line = List.from(line)..add(' ');
      col = (col as num) + 1;
    }
    grid = List.from(grid)..add(line);
    row = row + 1;
  }
  if (ix >= 0 && ix < width && iy >= 0 && iy < height) {
    grid[iy][ix] = '*';
  }
  while (i < nIter) {
    var res = randInt(seed, 100);
    seed = res[0];
    var r = res[1];
    if ((r as num) < 85) {
      var nx = 0.85 * x + 0.04 * y;
      var ny = -0.04 * x + 0.85 * y + 1.6;
      x = nx;
      y = ny;
    }
    else 
    if ((r as num) < 92) {
      var nx = 0.2 * x - 0.26 * y;
      var ny = 0.23 * x + 0.22 * y + 1.6;
      x = nx;
      y = ny;
    }
    else 
    if ((r as num) < 99) {
      var nx = -0.15 * x + 0.28 * y;
      var ny = 0.26 * x + 0.24 * y + 0.44;
      x = nx;
      y = ny;
    }
    else {
      x = 0;
      y = 0.16 * y;
    }
    ix = int.parse(((double.parse(width)) * (x - xMin) / dx));
    iy = int.parse(((double.parse(height)) * (yMax - y) / dy));
    if (ix >= 0 && ix < width && iy >= 0 && iy < height) {
      grid[iy][ix] = '*';
    }
    i = i + 1;
  }
  row = 0;
  while (row < height) {
    var line = '';
    num col = 0;
    while ((col as num) < width) {
      line = line + grid[row][col];
      col = (col as num) + 1;
    }
    print(line);
    row = row + 1;
  }
}
