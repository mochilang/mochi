// Generated by Mochi compiler v0.10.28 on 2025-07-18T09:33:45Z
int pfacSum(int i) {
  num sum = 0;
  var p = 1;
  while ((p as num) <= i ~/ 2) {
    if (i % (p as num) == 0) {
      sum = (sum as num) + (p as num);
    }
    p = (p as num) + 1;
  }
  return sum;
}

String pad(int n, int width) {
  var s = n.toString();
  while (s.length < width) {
    s = ' ' + s;
  }
  return s;
}

void _main() {
  List<int> sums = [];
  num i = 0;
  while ((i as num) < 20000) {
    sums = List.from(sums)..add(0);
    i = (i as num) + 1;
  }
  i = 1;
  while ((i as num) < 20000) {
    sums[i] = pfacSum(i);
    i = (i as num) + 1;
  }
  print('The amicable pairs below 20,000 are:');
  var n = 2;
  while ((n as num) < 19999) {
    var m = sums[n];
    if ((m as num) > (n as num) && (m as num) < 20000 && n == sums[m]) {
      print('  ' + pad(n, 5) + ' and ' + pad(m, 5));
    }
    n = (n as num) + 1;
  }
}

void main() {
  _main();
}
