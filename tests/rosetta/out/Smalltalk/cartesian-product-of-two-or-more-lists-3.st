" Generated by Mochi compiler v0.10.30 on 2006-01-02T15:04:05Z
"
| listStr s i llStr concat out v cartN a rest x p main |
listStr := [:xs | s := '['.
i := 0.
[(i < ((xs size)))] whileTrue: [.
s := (s + ((xs at: i asString))).
((i < ((((xs size)) - 1)))) ifTrue: [
s := (s + (' ')).
] .
i := (i + 1).
].
.
s := (s + ']').
s. ].
llStr := [:lst | s := '['.
i := 0.
[(i < ((lst size)))] whileTrue: [.
s := (s + (listStr value: lst at: i)).
((i < ((((lst size)) - 1)))) ifTrue: [
s := (s + (' ')).
] .
i := (i + 1).
].
.
s := (s + ']').
s. ].
concat := [:a :b | out := {}.
a do: [:v |.
out := out copyWith: v.
].
.
b do: [:v |.
out := out copyWith: v.
].
.
out. ].
cartN := [:lists | ((lists = nil)) ifTrue: [
{}.
] .
a := lists.
((((a size)) = 0)) ifTrue: [
{{}}.
] .
out := {}.
rest := cartN value: a copyFrom: (1 + 1) to: (a size).
a at: 0 do: [:x |.
rest do: [:p |.
out := out copyWith: concat value: {x} value: p.
].
.
].
.
out. ].
main := [ Transcript show: (llStr value: cartN value: {{1. 2}. {3. 4}}) printString; cr.
Transcript show: (llStr value: cartN value: {{3. 4}. {1. 2}}) printString; cr.
Transcript show: (llStr value: cartN value: {{1. 2}. {}}) printString; cr.
Transcript show: (llStr value: cartN value: {{}. {1. 2}}) printString; cr.
Transcript show: ''; cr.
Transcript show: '['; cr.
cartN value: {{1776. 1789}. {7. 12}. {4. 14. 23}. {0. 1}} do: [:p |.
Transcript show: (((' ') + (listStr value: p))) printString; cr.
].
.
Transcript show: ']'; cr.
Transcript show: (llStr value: cartN value: {{1. 2. 3}. {30}. {500. 100}}) printString; cr.
Transcript show: (llStr value: cartN value: {{1. 2. 3}. {}. {500. 100}}) printString; cr.
Transcript show: ''; cr.
Transcript show: (llStr value: cartN value: nil) printString; cr.
Transcript show: (llStr value: cartN value: {}) printString; cr. ].
main value.
