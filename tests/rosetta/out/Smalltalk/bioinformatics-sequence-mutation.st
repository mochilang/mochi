" Generated by Mochi compiler v0.10.26 on 2025-07-16T09:50:28Z
"
| a arr b bases c ch dna g i idx idx2 j k le main makeSeq mutate muts n next out p padLeft prettyPrint r randInt res seed t w wstring x |
randInt := [:s :n | next := (((s * 1664525) + 1013904223) % 2147483647).
{next. (next % n)} ].
padLeft := [:s :w | res := ''.
n := (w - (s size)).
[(n > 0)] whileTrue: [
  res := (res + ' ').
  n := (n - 1).
]
.
(res + s) ].
makeSeq := [:s :le | bases := 'ACGT'.
out := ''.
i := 0.
[(i < le)] whileTrue: [
  r := randInt value: s value: 4.
  s := r at: 0.
  idx := r at: 1 asInteger.
  out := (out + (bases copyFrom: idx to: (idx + 1))).
  i := (i + 1).
]
.
{s. out} ].
mutate := [:s :dna :w | bases := 'ACGT'.
le := (dna size).
r := randInt value: s value: le.
s := r at: 0.
p := r at: 1 asInteger.
r := randInt value: s value: 300.
s := r at: 0.
x := r at: 1 asInteger.
arr := {}.
i := 0.
[(i < le)] whileTrue: [
  arr := arr copyWith: (dna copyFrom: i to: (i + 1)).
  i := (i + 1).
]
.
((x < w at: 0)) ifTrue: [
  r := randInt value: s value: 4.
  s := r at: 0.
  idx := r at: 1 asInteger.
  b := (bases copyFrom: idx to: (idx + 1)).
  Transcript show: ((((((('  Change @' + padLeft value: (p asString) value: 3) + ' ''') + arr at: p) + ''' to ''') + b) + '''')) printString; cr.
  arr at: p put: b.
] ifFalse: [
  ((x < (w at: 0 + w at: 1))) ifTrue: [
    Transcript show: ((((('  Delete @' + padLeft value: (p asString) value: 3) + ' ''') + arr at: p) + '''')) printString; cr.
    j := p.
    [(j < ((arr size) - 1))] whileTrue: [
      arr at: j put: arr at: (j + 1).
      j := (j + 1).
    ]
    .
    arr := arr at: 0.
  ] ifFalse: [
    r := randInt value: s value: 4.
    s := r at: 0.
    idx2 := r at: 1 asInteger.
    b := (bases copyFrom: idx2 to: (idx2 + 1)).
    arr := arr copyWith: ''.
    j := ((arr size) - 1).
    [(j > p)] whileTrue: [
      arr at: j put: arr at: (j - 1).
      j := (j - 1).
    ]
    .
    Transcript show: ((((('  Insert @' + padLeft value: (p asString) value: 3) + ' ''') + b) + '''')) printString; cr.
    arr at: p put: b.
  ].
].
out := ''.
i := 0.
[(i < (arr size))] whileTrue: [
  out := (out + arr at: i).
  i := (i + 1).
]
.
{s. out} ].
prettyPrint := [:dna :rowLen | Transcript show: 'SEQUENCE:'; cr.
le := (dna size).
i := 0.
[(i < le)] whileTrue: [
  k := (i + rowLen).
  ((k > le)) ifTrue: [
    k := le.
  ] .
  Transcript show: (((padLeft value: (i asString) value: 5 + ': ') + dna at: i)) printString; cr.
  i := (i + rowLen).
]
.
a := 0.
c := 0.
g := 0.
t := 0.
idx := 0.
[(idx < le)] whileTrue: [
  ch := (dna copyFrom: idx to: (idx + 1)).
  ((ch = 'A')) ifTrue: [
    a := (a + 1).
  ] ifFalse: [
    ((ch = 'C')) ifTrue: [
      c := (c + 1).
    ] ifFalse: [
      ((ch = 'G')) ifTrue: [
        g := (g + 1).
      ] ifFalse: [
        ((ch = 'T')) ifTrue: [
          t := (t + 1).
        ] .
      ].
    ].
  ].
  idx := (idx + 1).
]
.
Transcript show: ''; cr.
Transcript show: 'BASE COUNT:'; cr.
Transcript show: (('    A: ' + padLeft value: (a asString) value: 3)) printString; cr.
Transcript show: (('    C: ' + padLeft value: (c asString) value: 3)) printString; cr.
Transcript show: (('    G: ' + padLeft value: (g asString) value: 3)) printString; cr.
Transcript show: (('    T: ' + padLeft value: (t asString) value: 3)) printString; cr.
Transcript show: '    ------'; cr.
Transcript show: (('    Î£: ' + (le asString))) printString; cr.
Transcript show: '    ======'; cr. ].
wstring := [:w | (((((('  Change: ' + (w at: 0 asString)) + '
  Delete: ') + (w at: 1 asString)) + '
  Insert: ') + (w at: 2 asString)) + '
') ].
main := [ | seed := 1.
res := makeSeq value: seed value: 250.
seed := res at: 0.
dna := res at: 1 asString.
prettyPrint value: dna value: 50.
muts := 10.
w := {100. 100. 100}.
Transcript show: '
WEIGHTS (ex 300):'; cr.
Transcript show: (wstring value: w) printString; cr.
Transcript show: ((('MUTATIONS (' + (muts asString)) + '):')) printString; cr.
i := 0.
[(i < muts)] whileTrue: [
  res := mutate value: seed value: dna value: w.
  seed := res at: 0.
  dna := res at: 1 asString.
  i := (i + 1).
]
.
Transcript show: ''; cr.
prettyPrint value: dna value: 50. ].
main value.
