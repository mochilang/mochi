" Generated by Mochi compiler v0.10.30 on 2006-01-02T15:04:05Z
"
| pow_big result b e cullen two_n woodall show_list line i main cnums wnums cprimes wprimes |
pow_big := [:base :exp | result := 1.
b := base.
e := exp.
[(e > 0)] whileTrue: [.
((((e % 2)) = 1)) ifTrue: [
result := (result * b).
] .
b := (b * b).
e := (e / 2) asInteger.
].
.
result. ].
cullen := [:n | two_n := pow_big value: 2 value: n.
(((two_n * n)) + 1). ].
woodall := [:n | ((cullen value: n) - 2). ].
show_list := [:xs | line := ''.
i := 0.
[(i < ((xs size)))] whileTrue: [.
line := (line + ((xs at: i asString))).
((i < ((((xs size)) - 1)))) ifTrue: [
line := (line + (' ')).
] .
i := (i + 1).
].
.
line. ].
main := [ cnums := {}.
i := 1.
[(i <= 20)] whileTrue: [.
cnums := cnums copyWith: cullen value: i.
i := (i + 1).
].
.
Transcript show: 'First 20 Cullen numbers (n * 2^n + 1):'; cr.
Transcript show: (show_list value: cnums) printString; cr.
wnums := {}.
i := 1.
[(i <= 20)] whileTrue: [.
wnums := wnums copyWith: woodall value: i.
i := (i + 1).
].
.
Transcript show: '
First 20 Woodall numbers (n * 2^n - 1):'; cr.
Transcript show: (show_list value: wnums) printString; cr.
cprimes := {1. 141. 4713. 5795. 6611}.
Transcript show: '
First 5 Cullen primes (in terms of n):'; cr.
Transcript show: (show_list value: cprimes) printString; cr.
wprimes := {2. 3. 6. 30. 75. 81. 115. 123. 249. 362. 384. 462}.
Transcript show: '
First 12 Woodall primes (in terms of n):'; cr.
Transcript show: (show_list value: wprimes) printString; cr. ].
main value.
