" Generated by Mochi compiler v0.10.30 on 2006-01-02T15:04:05Z
"
| width height lines i row j setChar stack frame start lenSeg index seg line |
Object subclass: #ContinueSignal instanceVariableNames: '' classVariableNames: '' poolDictionaries: '' category: nil!.
width := 81.
height := 5.
lines := {}.
0 to: height do: [:i |.
row := ''.
j := 0.
[(j < width)] whileTrue: [.
row := (row + '*').
j := (j + 1).
].
.
lines := lines copyWith: row.
].
.
setChar := [:s :idx :ch | (((((s copyFrom: 0 to: idx)) + ch)) + ((s copyFrom: (idx + 1) to: (s size)))). ].
stack := {Dictionary from:{'start'->0. 'len'->width. 'index'->1}}.
[.
[(1 > 0)] whileTrue: [.
[.
frame := stack at: (1 - 1).
stack := stack copyFrom: 1 to: (((stack size)) - 1).
start := frame at: 'start'.
lenSeg := frame at: 'len'.
index := frame at: 'index'.
seg := (lenSeg / 3) asInteger.
((seg = 0)) ifTrue: [
ContinueSignal signal.
] .
i := index.
[(i < height)] whileTrue: [.
j := (start + seg).
[(j < ((start + ((2 * seg)))))] whileTrue: [.
lines at: i put: setChar value: lines at: i value: j value: ' '.
j := (j + 1).
].
.
i := (i + 1).
].
.
stack := stack copyWith: Dictionary from:{'start'->start. 'len'->seg. 'index'->((index + 1))}.
stack := stack copyWith: Dictionary from:{'start'->((start + ((seg * 2)))). 'len'->seg. 'index'->((index + 1))}.
] on: ContinueSignal do: [:ex | ].
].
] on: BreakSignal do: [:ex | ].
lines do: [:line |.
Transcript show: (line) printString; cr.
].
.
