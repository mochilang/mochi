" Generated by Mochi compiler v0.10.30 on 2006-01-02T15:04:05Z
"
| padLeft res n padRight out i indexOf format2 s idx need cpx x compassPoint degrees2compasspoint headings h cp |
padLeft := [:s :w | res := ''.
n := (w - ((s size))).
[(n > 0)] whileTrue: [.
res := (res + (' ')).
n := (n - 1).
].
.
(res + s). ].
padRight := [:s :w | out := s.
i := (s size).
[(i < w)] whileTrue: [.
out := (out + (' ')).
i := (i + 1).
].
.
out. ].
indexOf := [:s :ch | i := 0.
[(i < ((s size)))] whileTrue: [.
((((s copyFrom: i to: (i + 1))) = ch)) ifTrue: [
i.
] .
i := (i + 1).
].
.
-1. ].
format2 := [:f | s := (f asString).
idx := indexOf value: s value: '.'.
((idx < 0)) ifTrue: [
s := (s + '.00').
] ifFalse: [
need := (idx + 3).
((((s size)) > need)) ifTrue: [
s := (s copyFrom: 0 to: need).
] ifFalse: [
[(((s size)) < need)] whileTrue: [.
s := (s + '0').
].
.
].
].
s. ].
cpx := [:h | x := (((h / 11.25)) + 0.5) asInteger.
x := (x % 32).
((x < 0)) ifTrue: [
x := (x + 32).
] .
x. ].
compassPoint := {'North'. 'North by east'. 'North-northeast'. 'Northeast by north'. 'Northeast'. 'Northeast by east'. 'East-northeast'. 'East by north'. 'East'. 'East by south'. 'East-southeast'. 'Southeast by east'. 'Southeast'. 'Southeast by south'. 'South-southeast'. 'South by east'. 'South'. 'South by west'. 'South-southwest'. 'Southwest by south'. 'Southwest'. 'Southwest by west'. 'West-southwest'. 'West by south'. 'West'. 'West by north'. 'West-northwest'. 'Northwest by west'. 'Northwest'. 'Northwest by north'. 'North-northwest'. 'North by west'}.
degrees2compasspoint := [:h | compassPoint at: cpx value: h. ].
headings := {0. 16.87. 16.88. 33.75. 50.62. 50.63. 67.5. 84.37. 84.38. 101.25. 118.12. 118.13. 135. 151.87. 151.88. 168.75. 185.62. 185.63. 202.5. 219.37. 219.38. 236.25. 253.12. 253.13. 270. 286.87. 286.88. 303.75. 320.62. 320.63. 337.5. 354.37. 354.38}.
Transcript show: 'Index  Compass point         Degree'; cr.
i := 0.
[(i < 33)] whileTrue: [.
h := headings at: i.
idx := (((i % 32)) + 1).
cp := degrees2compasspoint value: h.
Transcript show: (((((((((((padLeft value: (idx asString) value: 4) + ('   '))) + (padRight value: cp value: 19))) + (' '))) + (format2 value: h))) + 'Â°')) printString; cr.
i := (i + 1).
].
.
