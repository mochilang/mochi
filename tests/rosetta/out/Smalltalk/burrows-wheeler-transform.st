" Generated by Mochi compiler v0.10.30 on 2006-01-02T15:04:05Z
"
| stx etx contains i sortStrings arr n j tmp bwt le table rot last ibwt makePrintable out ch main examples t res enc r |
stx := ''.
etx := ''.
contains := [:s :ch | i := 0.
[(i < ((s size)))] whileTrue: [.
((((s copyFrom: i to: (i + 1))) = ch)) ifTrue: [
true.
] .
i := (i + 1).
].
.
false. ].
sortStrings := [:xs | arr := xs.
n := (arr size).
i := 0.
[(i < n)] whileTrue: [.
j := 0.
[(j < ((n - 1)))] whileTrue: [.
(((arr at: j) > (arr at: (j + 1)))) ifTrue: [
tmp := arr at: j.
arr at: j put: arr at: (j + 1).
arr at: (j + 1) put: tmp.
] .
j := (j + 1).
].
.
i := (i + 1).
].
.
arr. ].
bwt := [:s | (((contains value: s value: stx) or: [(contains value: s value: etx)])) ifTrue: [
Dictionary from:{'err'->true. 'res'->''}.
] .
s := (((stx + s)) + etx).
le := (s size).
table := {}.
i := 0.
[(i < le)] whileTrue: [.
rot := (((s copyFrom: i to: le)) + ((s copyFrom: 0 to: i))).
table := table copyWith: rot.
i := (i + 1).
].
.
table := sortStrings value: table.
last := ''.
i := 0.
[(i < le)] whileTrue: [.
last := (last + ((table at: i copyFrom: (le - 1) to: le))).
i := (i + 1).
].
.
Dictionary from:{'err'->false. 'res'->last}. ].
ibwt := [:r | le := (r size).
table := {}.
i := 0.
[(i < le)] whileTrue: [.
table := table copyWith: ''.
i := (i + 1).
].
.
n := 0.
[(n < le)] whileTrue: [.
i := 0.
[(i < le)] whileTrue: [.
table at: i put: (((r copyFrom: i to: (i + 1))) + (table at: i)).
i := (i + 1).
].
.
table := sortStrings value: table.
n := (n + 1).
].
.
i := 0.
[(i < le)] whileTrue: [.
((((table at: i copyFrom: (le - 1) to: le)) = etx)) ifTrue: [
(table at: i copyFrom: 1 to: (le - 1)).
] .
i := (i + 1).
].
.
''. ].
makePrintable := [:s | out := ''.
i := 0.
[(i < ((s size)))] whileTrue: [.
ch := (s copyFrom: i to: (i + 1)).
((ch = stx)) ifTrue: [
out := (out + '^').
] ifFalse: [
((ch = etx)) ifTrue: [
out := (out + '|').
] ifFalse: [
out := (out + ch).
].
].
i := (i + 1).
].
.
out. ].
main := [ examples := {'banana'. 'appellee'. 'dogwood'. 'TO BE OR NOT TO BE OR WANT TO BE OR NOT?'. 'SIX.MIXED.PIXIES.SIFT.SIXTY.PIXIE.DUST.BOXES'. 'ABC'}.
examples do: [:t |.
Transcript show: (makePrintable value: t) printString; cr.
res := bwt value: t.
(res at: 'err') ifTrue: [
Transcript show: ' --> ERROR: String can''t contain STX or ETX'; cr.
Transcript show: ' -->'; cr.
] ifFalse: [
enc := res at: 'res' asString.
Transcript show: (((' --> ') + (makePrintable value: enc))) printString; cr.
r := ibwt value: enc.
Transcript show: (((' --> ') + r)) printString; cr.
].
Transcript show: ''; cr.
].
. ].
main value.
