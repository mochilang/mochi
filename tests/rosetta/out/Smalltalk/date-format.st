" Generated by Mochi compiler v0.10.30 on 2006-01-02T15:04:05Z
"
| pad2 weekdayName names main ts days z era doe yoe y doy mp d m iso months line |
pad2 := [:n | ((n < 10)) ifTrue: [
('0' + ((n asString))).
] .
(n asString). ].
weekdayName := [:z | names := {'Sunday'. 'Monday'. 'Tuesday'. 'Wednesday'. 'Thursday'. 'Friday'. 'Saturday'}.
names at: (((z + 4)) % 7). ].
main := [ ts := ((now value) / 1000000000) asInteger.
days := (ts / 86400) asInteger.
z := (days + 719468).
era := (z / 146097) asInteger.
doe := (z - ((era * 146097))).
yoe := (((((((doe - ((doe / 1460)))) + ((doe / 36524)))) - ((doe / 146096)))) / (365 asInteger)).
y := (yoe + ((era * 400))).
doy := (doe - ((((((365 * yoe)) + ((yoe / 4)))) - ((yoe / 100))))).
mp := (((((5 * doy)) + 2)) / (153 asInteger)).
d := (((doy - ((((((153 * mp)) + 2)) / (5 asInteger))))) + 1) asInteger.
m := (mp + 3) asInteger.
((m > 12)) ifTrue: [
y := (y + 1).
m := (m - 12).
] .
iso := (((((((((y asString)) + '-')) + (pad2 value: m))) + '-')) + (pad2 value: d)).
Transcript show: (iso) printString; cr.
months := {'January'. 'February'. 'March'. 'April'. 'May'. 'June'. 'July'. 'August'. 'September'. 'October'. 'November'. 'December'}.
line := ((((((((((((weekdayName value: days) + (', '))) + (months at: (m - 1)))) + (' '))) + ((d asString)))) + (', '))) + ((y asString))).
Transcript show: (line) printString; cr. ].
main value.
