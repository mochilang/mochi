" Generated by Mochi compiler v0.10.30 on 2006-01-02T15:04:05Z
"
| indexOfStr hlen nlen i stringSearchSingle stringSearch result start idx display s main texts patterns j idxs |
Object subclass: #BreakSignal instanceVariableNames: '' classVariableNames: '' poolDictionaries: '' category: nil!.
indexOfStr := [:h :n | hlen := (h size).
nlen := (n size).
((nlen = 0)) ifTrue: [
0.
] .
i := 0.
[(i <= ((hlen - nlen)))] whileTrue: [.
((((h copyFrom: i to: (i + nlen))) = n)) ifTrue: [
i.
] .
i := (i + 1).
].
.
-1. ].
stringSearchSingle := [:h :n | indexOfStr value: h value: n. ].
stringSearch := [:h :n | result := {}.
start := 0.
hlen := (h size).
nlen := (n size).
[.
[(start < hlen)] whileTrue: [.
idx := indexOfStr value: (h copyFrom: start to: hlen) value: n.
((idx >= 0)) ifTrue: [
result := result copyWith: (start + idx).
start := (((start + idx)) + nlen).
] ifFalse: [
BreakSignal signal.
].
].
] on: BreakSignal do: [:ex | ].
result. ].
display := [:nums | s := '['.
i := 0.
[(i < ((nums size)))] whileTrue: [.
((i > 0)) ifTrue: [
s := (s + (', ')).
] .
s := (s + ((nums at: i asString))).
i := (i + 1).
].
.
s := (s + ']').
s. ].
main := [ texts := {'GCTAGCTCTACGAGTCTA'. 'GGCTATAATGCGTA'. 'there would have been a time for such a word'. 'needle need noodle needle'. 'DKnuthusesandprogramsanimaginarycomputertheMIXanditsassociatedmachinecodeandassemblylanguages'. 'Nearby farms grew an acre of alfalfa on the dairy''s behalf, with bales of that alfalfa exchanged for milk.'}.
patterns := {'TCTA'. 'TAATAAA'. 'word'. 'needle'. 'and'. 'alfalfa'}.
i := 0.
[(i < 6)] whileTrue: [.
Transcript show: (((((('text' + (((i + 1) asString)))) + (' = '))) + (texts at: i))) printString; cr.
i := (i + 1).
].
.
Transcript show: ''; cr.
j := 0.
[(j < 6)] whileTrue: [.
idxs := stringSearch value: texts at: j value: patterns at: j.
Transcript show: ((((((((((('Found "') + (patterns at: j))) + ('" in ''text'))) + (((j + 1) asString)))) + (''' at indexes '))) + (display value: idxs))) printString; cr.
j := (j + 1).
].
. ].
main value.
