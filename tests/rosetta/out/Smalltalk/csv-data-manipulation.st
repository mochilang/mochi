" Generated by Mochi compiler v0.10.30 on 2006-01-02T15:04:05Z
"
| join res i parseIntStr neg n digits rows sum s r |
join := [:xs :sep | res := ''.
i := 0.
[(i < ((xs size)))] whileTrue: [.
((i > 0)) ifTrue: [
res := (res + sep).
] .
res := (res + (xs at: i)).
i := (i + 1).
].
.
res. ].
parseIntStr := [:str | i := 0.
neg := false.
((((((str size)) > 0)) and: [(((str copyFrom: (0 + 1) to: 1) = '-'))])) ifTrue: [
neg := true.
i := 1.
] .
n := 0.
digits := Dictionary from:{'0'->0. '1'->1. '2'->2. '3'->3. '4'->4. '5'->5. '6'->6. '7'->7. '8'->8. '9'->9}.
[(i < ((str size)))] whileTrue: [.
n := (((n * 10)) + (digits at: str copyFrom: (i + 1) to: (i + 1))).
i := (i + 1).
].
.
(neg) ifTrue: [
n := -n.
] .
n. ].
rows := {{'A'. 'B'. 'C'}. {'1'. '2'. '3'}. {'4'. '5'. '6'}. {'7'. '8'. '9'}}.
rows at: 0 put: rows at: 0 copyWith: 'SUM'.
i := 1.
[(i < ((rows size)))] whileTrue: [.
sum := 0.
rows at: i do: [:s |.
sum := (sum + (parseIntStr value: s)).
].
.
rows at: i put: rows at: i copyWith: (sum asString).
i := (i + 1).
].
.
rows do: [:r |.
Transcript show: (join value: r value: ',') printString; cr.
].
.
