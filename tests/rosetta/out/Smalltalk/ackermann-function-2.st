" Generated by Mochi compiler v0.10.26 on 2025-07-16T09:48:35Z
"
| ackermann2 i main pow result |
pow := [:base :exp | result := 1.
i := 0.
[(i < exp)] whileTrue: [
  result := (result * base).
  i := (i + 1).
]
.
result ].
ackermann2 := [:m :n | ((m = 0)) ifTrue: [
  (n + 1)
] .
((m = 1)) ifTrue: [
  (n + 2)
] .
((m = 2)) ifTrue: [
  ((2 * n) + 3)
] .
((m = 3)) ifTrue: [
  ((8 * pow value: 2 value: n) - 3)
] .
((n = 0)) ifTrue: [
  ackermann2 value: (m - 1) value: 1
] .
ackermann2 value: (m - 1) value: ackermann2 value: m value: (n - 1) ].
main := [ | Transcript show: (('A(0, 0) = ' + (ackermann2 value: 0 value: 0 asString))) printString; cr.
Transcript show: (('A(1, 2) = ' + (ackermann2 value: 1 value: 2 asString))) printString; cr.
Transcript show: (('A(2, 4) = ' + (ackermann2 value: 2 value: 4 asString))) printString; cr.
Transcript show: (('A(3, 4) = ' + (ackermann2 value: 3 value: 4 asString))) printString; cr. ].
main value.
