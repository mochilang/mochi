" Generated by Mochi compiler v0.10.30 on 2006-01-02T15:04:05Z
"
| nextRand shuffleChars chars i sd idx j tmp res bestShuffle r t arr count out main ts seed shuf cnt |
Object subclass: #BreakSignal instanceVariableNames: '' classVariableNames: '' poolDictionaries: '' category: nil!.
nextRand := [:seed | (((((seed * 1664525)) + 1013904223)) % 2147483647). ].
shuffleChars := [:s :seed | chars := {}.
i := 0.
[(i < ((s size)))] whileTrue: [.
chars := chars copyWith: (s copyFrom: i to: (i + 1)).
i := (i + 1).
].
.
sd := seed.
idx := (((chars size)) - 1).
[(idx > 0)] whileTrue: [.
sd := nextRand value: sd.
j := (sd % ((idx + 1))).
tmp := chars at: idx.
chars at: idx put: chars at: j.
chars at: j put: tmp.
idx := (idx - 1).
].
.
res := ''.
i := 0.
[(i < ((chars size)))] whileTrue: [.
res := (res + (chars at: i)).
i := (i + 1).
].
.
{res. sd}. ].
bestShuffle := [:s :seed | r := shuffleChars value: s value: seed.
t := r at: 0.
sd := r at: 1.
arr := {}.
i := 0.
[(i < ((t size)))] whileTrue: [.
arr := arr copyWith: (t copyFrom: i to: (i + 1)).
i := (i + 1).
].
.
i := 0.
[.
[(i < ((arr size)))] whileTrue: [.
j := 0.
[.
[(j < ((arr size)))] whileTrue: [.
((((((i ~= j)) and: [(((arr at: i) ~= ((s copyFrom: j to: (j + 1)))))])) and: [(((arr at: j) ~= ((s copyFrom: i to: (i + 1)))))])) ifTrue: [
tmp := arr at: i.
arr at: i put: arr at: j.
arr at: j put: tmp.
BreakSignal signal.
] .
j := (j + 1).
].
] on: BreakSignal do: [:ex | ].
i := (i + 1).
].
] on: BreakSignal do: [:ex | ].
count := 0.
i := 0.
[(i < ((arr size)))] whileTrue: [.
(((arr at: i) = ((s copyFrom: i to: (i + 1))))) ifTrue: [
count := (count + 1).
] .
i := (i + 1).
].
.
out := ''.
i := 0.
[(i < ((arr size)))] whileTrue: [.
out := (out + (arr at: i)).
i := (i + 1).
].
.
{out. sd. count}. ].
main := [ ts := {'abracadabra'. 'seesaw'. 'elk'. 'grrrrrr'. 'up'. 'a'}.
seed := 1.
i := 0.
[(i < 6)] whileTrue: [.
r := bestShuffle value: ts at: i value: seed.
shuf := r at: 0.
seed := r at: 1.
cnt := r at: 2.
Transcript show: (((((((((((ts at: i) + (' -> '))) + shuf)) + (' ('))) + ((cnt asString)))) + ')')) printString; cr.
i := (i + 1).
].
. ].
main value.
