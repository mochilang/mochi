" Generated by Mochi compiler v0.10.26 on 2025-07-16T09:48:36Z
"
| arr half i j m median n sortFloat tmp |
sortFloat := [:xs | arr := xs.
n := (arr size).
i := 0.
[(i < n)] whileTrue: [
  j := 0.
  [(j < (n - 1))] whileTrue: [
    ((arr at: j > arr at: (j + 1))) ifTrue: [
      tmp := arr at: j.
      arr at: j put: arr at: (j + 1).
      arr at: (j + 1) put: tmp.
    ] .
    j := (j + 1).
  ]
  .
  i := (i + 1).
]
.
arr ].
median := [:a | arr := sortFloat value: a.
half := ((arr size) / 2) asInteger.
m := arr at: half.
((((arr size) % 2) = 0)) ifTrue: [
  m := ((m + arr at: (half - 1)) / 2).
] .
m ].
Transcript show: ((median value: {3. 1. 4. 1} asString)) printString; cr.
Transcript show: ((median value: {3. 1. 4. 1. 5} asString)) printString; cr.
