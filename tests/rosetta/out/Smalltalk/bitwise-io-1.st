" Generated by Mochi compiler v0.10.30 on 2006-01-02T15:04:05Z
"
| pow2 v i lshift rshift NewWriter writeBitsLSB b writeBitsMSB WriteBits CloseWriter toBinary val bytesToBits out ExampleWriter_WriteBits bw |
pow2 := [:n | v := 1.
i := 0.
[(i < n)] whileTrue: [.
v := (v * 2).
i := (i + 1).
].
.
v. ].
lshift := [:x :n | (x * (pow2 value: n)). ].
rshift := [:x :n | (x / (pow2 value: n)). ].
NewWriter := [:order | Dictionary from:{'order'->order. 'bits'->0. 'nbits'->0. 'data'->{}}. ].
writeBitsLSB := [:w :c :width | w at: 'bits' put: ((w at: 'bits') + (lshift value: c value: w at: 'nbits')).
w at: 'nbits' put: ((w at: 'nbits') + width).
[((w at: 'nbits') >= 8)] whileTrue: [.
b := ((w at: 'bits') % 256).
w at: 'data' put: w at: 'data' copyWith: b.
w at: 'bits' put: rshift value: w at: 'bits' value: 8.
w at: 'nbits' put: ((w at: 'nbits') - 8).
].
.
w. ].
writeBitsMSB := [:w :c :width | w at: 'bits' put: ((w at: 'bits') + (lshift value: c value: (((32 - width)) - (w at: 'nbits')))).
w at: 'nbits' put: ((w at: 'nbits') + width).
[((w at: 'nbits') >= 8)] whileTrue: [.
b := ((rshift value: w at: 'bits' value: 24) % 256).
w at: 'data' put: w at: 'data' copyWith: b.
w at: 'bits' put: ((((w at: 'bits') % (pow2 value: 24))) * 256).
w at: 'nbits' put: ((w at: 'nbits') - 8).
].
.
w. ].
WriteBits := [:w :c :width | (((w at: 'order') = 'LSB')) ifTrue: [
writeBitsLSB value: w value: c value: width.
] .
writeBitsMSB value: w value: c value: width. ].
CloseWriter := [:w | (((w at: 'nbits') > 0)) ifTrue: [
(((w at: 'order') = 'MSB')) ifTrue: [
w at: 'bits' put: rshift value: w at: 'bits' value: 24.
] .
w at: 'data' put: w at: 'data' copyWith: ((w at: 'bits') % 256).
] .
w at: 'bits' put: 0.
w at: 'nbits' put: 0.
w. ].
toBinary := [:n :bits | b := ''.
val := n.
i := 0.
[(i < bits)] whileTrue: [.
b := ((((val % 2) asString)) + b).
val := (val / 2).
i := (i + 1).
].
.
b. ].
bytesToBits := [:bs | out := '['.
i := 0.
[(i < ((bs size)))] whileTrue: [.
out := (out + (toBinary value: bs at: i value: 8)).
((((i + 1)) < ((bs size)))) ifTrue: [
out := (out + (' ')).
] .
i := (i + 1).
].
.
out := (out + ']').
out. ].
ExampleWriter_WriteBits := [ bw := NewWriter value: 'MSB'.
bw := WriteBits value: bw value: 15 value: 4.
bw := WriteBits value: bw value: 0 value: 1.
bw := WriteBits value: bw value: 19 value: 5.
bw := CloseWriter value: bw.
Transcript show: (bytesToBits value: bw.data) printString; cr. ].
ExampleWriter_WriteBits value.
