" Generated by Mochi compiler v0.10.26 on 2025-07-16T09:48:35Z
"
| amb i j main out prev res w wordset |
amb := [:wordsets :res :idx | ((idx = (wordsets size))) ifTrue: [
  true
] .
prev := ''.
((idx > 0)) ifTrue: [
  prev := res at: (idx - 1).
] .
i := 0.
[(i < (wordsets at: idx size))] whileTrue: [
  w := wordsets at: idx at: i.
  (((idx = 0) or: [((prev copyFrom: ((prev size) - 1) to: (prev size)) = (w copyFrom: 0 to: 1))])) ifTrue: [
    res at: idx put: w.
    (amb value: wordsets value: res value: (idx + 1)) ifTrue: [
      true
    ] .
  ] .
  i := (i + 1).
]
.
false ].
main := [ | wordset := {{'the'. 'that'. 'a'}. {'frog'. 'elephant'. 'thing'}. {'walked'. 'treaded'. 'grows'}. {'slowly'. 'quickly'}}.
res := {}.
i := 0.
[(i < (wordset size))] whileTrue: [
  res := res copyWith: ''.
  i := (i + 1).
]
.
(amb value: wordset value: res value: 0) ifTrue: [
  out := ('[' + res at: 0).
  j := 1.
  [(j < (res size))] whileTrue: [
    out := ((out + ' ') + res at: j).
    j := (j + 1).
  ]
  .
  out := (out + ']').
  Transcript show: (out) printString; cr.
] ifFalse: [
  Transcript show: 'No amb found'; cr.
]. ].
main value.
