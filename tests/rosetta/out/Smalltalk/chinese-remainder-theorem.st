" Generated by Mochi compiler v0.10.30 on 2006-01-02T15:04:05Z
"
| egcd res g x1 y1 modInv r x crt prod i ni ai p inv n a |
egcd := [:a :b | ((a = 0)) ifTrue: [
{b. 0. 1}.
] .
res := egcd value: (b % a) value: a.
g := res at: 0.
x1 := res at: 1.
y1 := res at: 2.
{g. (y1 - ((((b / a)) * x1))). x1}. ].
modInv := [:a :m | r := egcd value: a value: m.
(((r at: 0) ~= 1)) ifTrue: [
0.
] .
x := r at: 1.
((x < 0)) ifTrue: [
(x + m).
] .
x. ].
crt := [:a :n | prod := 1.
i := 0.
[(i < ((n size)))] whileTrue: [.
prod := (prod * (n at: i)).
i := (i + 1).
].
.
x := 0.
i := 0.
[(i < ((n size)))] whileTrue: [.
ni := n at: i.
ai := a at: i.
p := (prod / ni).
inv := modInv value: (p % ni) value: ni.
x := (x + ((((ai * inv)) * p))).
i := (i + 1).
].
.
(x % prod). ].
n := {3. 5. 7}.
a := {2. 3. 2}.
res := crt value: a value: n.
Transcript show: ((((res asString)) + (' <nil>'))) printString; cr.
