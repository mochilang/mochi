" Generated by Mochi compiler v0.10.30 on 2006-01-02T15:04:05Z
"
| absf floorf indexOf i fmtF y s dot decs padInt padFloat avgLen tests sum seed t visited x ana nn term main nmax n a b err line |
absf := [:x | ((x < 0)) ifTrue: [
-x.
] .
x. ].
floorf := [:x | x asInteger asFloat. ].
indexOf := [:s :ch | i := 0.
[(i < ((s size)))] whileTrue: [.
((((s copyFrom: i to: (i + 1))) = ch)) ifTrue: [
i.
] .
i := (i + 1).
].
.
-1. ].
fmtF := [:x | y := ((floorf value: (((x * 10000)) + 0.5)) / 10000).
s := (y asString).
dot := indexOf value: s value: '.'.
((dot = ((0 - 1)))) ifTrue: [
s := (s + '.0000').
] ifFalse: [
decs := (((((s size)) - dot)) - 1).
((decs > 4)) ifTrue: [
s := (s copyFrom: 0 to: (dot + 5)).
] ifFalse: [
[(decs < 4)] whileTrue: [.
s := (s + '0').
decs := (decs + 1).
].
.
].
].
s. ].
padInt := [:n :width | s := (n asString).
[(((s size)) < width)] whileTrue: [.
s := ((' ') + s).
].
.
s. ].
padFloat := [:x :width | s := fmtF value: x.
[(((s size)) < width)] whileTrue: [.
s := ((' ') + s).
].
.
s. ].
avgLen := [:n | tests := 10000.
sum := 0.
seed := 1.
t := 0.
[(t < tests)] whileTrue: [.
visited := {}.
i := 0.
[(i < n)] whileTrue: [.
visited := visited copyWith: false.
i := (i + 1).
].
.
x := 0.
[visited at: x not] whileTrue: [.
visited at: x put: true.
sum := (sum + 1).
seed := (((((seed * 1664525)) + 1013904223)) % 2147483647).
x := (seed % n).
].
.
t := (t + 1).
].
.
((sum asFloat) / tests). ].
ana := [:n | nn := n asFloat.
term := 1.
sum := 1.
i := (nn - 1).
[(i >= 1)] whileTrue: [.
term := (term * ((i / nn))).
sum := (sum + term).
i := (i - 1).
].
.
sum. ].
main := [ nmax := 20.
Transcript show: ' N    average    analytical    (error)'; cr.
Transcript show: '===  =========  ============  ========='; cr.
n := 1.
[(n <= nmax)] whileTrue: [.
a := avgLen value: n.
b := ana value: n.
err := ((((absf value: (a - b)) / b)) * 100).
line := ((((((((((((((padInt value: n value: 3) + ('  '))) + (padFloat value: a value: 9))) + ('  '))) + (padFloat value: b value: 12))) + ('  ('))) + (padFloat value: err value: 6))) + '%)').
Transcript show: (line) printString; cr.
n := (n + 1).
].
. ].
main value.
