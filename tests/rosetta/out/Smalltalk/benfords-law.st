" Generated by Mochi compiler v0.10.26 on 2025-07-16T09:50:28Z
"
| a b counts d decs dot fib1000 floorf fmtF3 i indexOf leadingDigit line main obs padFloat3 preds res s show t total y |
floorf := [:x | x asInteger asFloat ].
indexOf := [:s :ch | i := 0.
[(i < (s size))] whileTrue: [
  (((s copyFrom: i to: (i + 1)) = ch)) ifTrue: [
    i
  ] .
  i := (i + 1).
]
.
-1 ].
fmtF3 := [:x | y := (floorf value: ((x * 1000) + 0.5) / 1000).
s := (y asString).
dot := indexOf value: s value: '.'.
((dot = (0 - 1))) ifTrue: [
  s := (s + '.000').
] ifFalse: [
  decs := (((s size) - dot) - 1).
  ((decs > 3)) ifTrue: [
    s := (s copyFrom: 0 to: (dot + 4)).
  ] ifFalse: [
    [(decs < 3)] whileTrue: [
      s := (s + '0').
      decs := (decs + 1).
    ]
    .
  ].
].
s ].
padFloat3 := [:x :width | s := fmtF3 value: x.
[((s size) < width)] whileTrue: [
  s := (' ' + s).
]
.
s ].
fib1000 := [ | a := 0.
b := 1.
res := {}.
i := 0.
[(i < 1000)] whileTrue: [
  res := res copyWith: b.
  t := b.
  b := (b + a).
  a := t.
  i := (i + 1).
]
.
res ].
leadingDigit := [:x | ((x < 0)) ifTrue: [
  x := -x.
] .
[(x >= 10)] whileTrue: [
  x := (x / 10).
]
.
[((x > 0) and: [(x < 1)])] whileTrue: [
  x := (x * 10).
]
.
x asInteger ].
show := [:nums :title | counts := {0. 0. 0. 0. 0. 0. 0. 0. 0}.
nums do: [:n |
  d := leadingDigit value: n.
  (((d >= 1) and: [(d <= 9)])) ifTrue: [
    counts at: (d - 1) put: (counts at: (d - 1) + 1).
  ] .
]
.
preds := {0.301. 0.176. 0.125. 0.097. 0.079. 0.067. 0.058. 0.051. 0.046}.
total := (nums size).
Transcript show: (title) printString; cr.
Transcript show: 'Digit  Observed  Predicted'; cr.
i := 0.
[(i < 9)] whileTrue: [
  obs := (counts at: i asFloat / total asFloat).
  line := ((((('  ' + ((i + 1) asString)) + '  ') + padFloat3 value: obs value: 9) + '  ') + padFloat3 value: preds at: i value: 8).
  Transcript show: (line) printString; cr.
  i := (i + 1).
]
. ].
main := [ | show value: fib1000 value value: 'First 1000 Fibonacci numbers'. ].
main value.
