" Generated by Mochi compiler v0.10.26 on 2025-07-16T09:48:36Z
"
| a count f g h high i low main mid n nthRoot powf prod result sum sumRecip |
powf := [:base :exp | result := 1.
i := 0.
[(i < exp)] whileTrue: [
  result := (result * base).
  i := (i + 1).
]
.
result ].
nthRoot := [:x :n | low := 0.
high := x.
i := 0.
[(i < 60)] whileTrue: [
  mid := ((low + high) / 2).
  ((powf value: mid value: n > x)) ifTrue: [
    high := mid.
  ] ifFalse: [
    low := mid.
  ].
  i := (i + 1).
]
.
low ].
main := [ | sum := 0.
sumRecip := 0.
prod := 1.
n := 1.
[(n <= 10)] whileTrue: [
  f := n asFloat.
  sum := (sum + f).
  sumRecip := (sumRecip + (1 / f)).
  prod := (prod * f).
  n := (n + 1).
]
.
count := 10.
a := (sum / count).
g := nthRoot value: prod value: 10.
h := (count / sumRecip).
Transcript show: (((((('A: ' + (a asString)) + ' G: ') + (g asString)) + ' H: ') + (h asString))) printString; cr.
Transcript show: (('A >= G >= H: ' + (((a >= g) and: [(g >= h)]) asString))) printString; cr. ].
main value.
