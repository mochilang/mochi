" Generated by Mochi compiler v0.10.30 on 2006-01-02T15:04:05Z
"
| mod isPrime d pad s carmichael h3 p2 p3 c p1 |
Object subclass: #ContinueSignal instanceVariableNames: '' classVariableNames: '' poolDictionaries: '' category: nil!.
mod := [:n :m | (((((n % m)) + m)) % m). ].
isPrime := [:n | ((n < 2)) ifTrue: [
false.
] .
((((n % 2)) = 0)) ifTrue: [
(n = 2).
] .
((((n % 3)) = 0)) ifTrue: [
(n = 3).
] .
d := 5.
[(((d * d)) <= n)] whileTrue: [.
((((n % d)) = 0)) ifTrue: [
false.
] .
d := (d + 2).
((((n % d)) = 0)) ifTrue: [
false.
] .
d := (d + 4).
].
.
true. ].
pad := [:n :width | s := (n asString).
[(((s size)) < width)] whileTrue: [.
s := ((' ') + s).
].
.
s. ].
carmichael := [:p1 | [.
2 to: p1 do: [:h3 |.
[.
[.
1 to: (h3 + p1) do: [:d |.
[.
((((((((((h3 + p1)) * ((p1 - 1)))) % d)) = 0)) and: [(((mod value: (-p1 * p1) value: h3) = ((d % h3))))])) ifTrue: [
p2 := (1 + ((((((p1 - 1)) * ((h3 + p1)))) / d))).
(isPrime value: p2 not) ifTrue: [
ContinueSignal signal.
] .
p3 := (1 + ((((p1 * p2)) / h3))).
(isPrime value: p3 not) ifTrue: [
ContinueSignal signal.
] .
((((((p2 * p3)) % ((p1 - 1)))) ~= 1)) ifTrue: [
ContinueSignal signal.
] .
c := (((p1 * p2)) * p3).
Transcript show: (((((((((((((pad value: p1 value: 2) + ('   '))) + (pad value: p2 value: 4))) + ('   '))) + (pad value: p3 value: 5))) + ('     '))) + ((c asString)))) printString; cr.
] .
] on: ContinueSignal do: [:ex | ].
].
] on: BreakSignal do: [:ex | ].
] on: ContinueSignal do: [:ex | ].
].
] on: BreakSignal do: [:ex | ]. ].
Transcript show: 'The following are Carmichael munbers for p1 <= 61:
'; cr.
Transcript show: 'p1     p2      p3     product'; cr.
Transcript show: '==     ==      ==     ======='; cr.
2 to: 62 do: [:p1 |.
(isPrime value: p1) ifTrue: [
carmichael value: p1.
] .
].
.
