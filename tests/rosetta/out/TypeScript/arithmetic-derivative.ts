// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:12:33Z
// Source: /workspace/mochi/tests/rosetta/x/Mochi/arithmetic-derivative.mochi

function primeFactors(n: number): number[] {
  var factors: number[] = [];
  var x = n;
  while (((x % 2) == 0)) {
    factors = [...factors, 2];
    x = Math.trunc(x / 2);
  }
  var p = 3;
  while (((p * p) <= x)) {
    while (((x % p) == 0)) {
      factors = [...factors, p];
      x = Math.trunc(x / p);
    }
    p = p + 2;
  }
  if ((x > 1)) {
    factors = [...factors, x];
  }
  return factors;
}

function repeat(ch: string, n: number): string {
  var s = "";
  var i = 0;
  while ((i < n)) {
    s = `${s}${ch}`;
    i = i + 1;
  }
  return s;
}

function D(n: number): number {
  if ((n < 0)) {
    return (-D(-n));
  }
  if ((n < 2)) {
    return 0;
  }
  var factors: number[] = [];
  if ((n < 1e+19)) {
    factors = primeFactors(n);
  } else {
    let g = n / 100;
    factors = primeFactors(g);
    factors = [...factors, 2];
    factors = [...factors, 2];
    factors = [...factors, 5];
    factors = [...factors, 5];
  }
  let c = factors.length;
  if ((c == 1)) {
    return 1;
  }
  if ((c == 2)) {
    return (factors[0] + factors[1]);
  }
  let d = n / (factors[0]);
  return ((D(d) * (factors[0])) + d);
}

function pad(n: number): string {
  var s = String(n);
  while ((s.length < 4)) {
    s = ` ${s}`;
  }
  return s;
}

function main(): void {
  var vals: number[] = [];
  var n = -99;
  while ((n < 101)) {
    vals = [...vals, D(n)];
    n = n + 1;
  }
  var i = 0;
  while ((i < vals.length)) {
    var line = "";
    var j = 0;
    while ((j < 10)) {
      line = `${line}${pad(vals[i + j])}`;
      if ((j < 9)) {
        line = `${line} `;
      }
      j = j + 1;
    }
    console.log(line);
    i = i + 10;
  }
  var pow = 1;
  var m = 1;
  while ((m < 21)) {
    pow = pow * 10;
    var exp = String(m);
    if ((exp.length < 2)) {
      exp = `${exp} `;
    }
    var res = `${String(m)}${repeat("0", m - 1)}`;
    console.log(`D(10^${exp}) / 7 = ${res}`);
    m = m + 1;
  }
}

function main(): void {
  main();
}
main();
