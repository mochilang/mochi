// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:12:36Z
// Source: /workspace/mochi/tests/rosetta/x/Mochi/averages-mode.mochi

var arr1: number[];
var arr2: number[];
var counts1: { [key: number]: number };
var counts2: { [key: number]: number };
var i: number;
var keys1: number[];
var keys2: number[];
var max1: number;
var max2: number;
var modes1: number[];
var modes2: number[];

function main(): void {
  arr1 = [
    2,
    7,
    1,
    8,
    2,
  ];
  counts1 = {};
  keys1 = [];
  i = 0;
  while ((i < arr1.length)) {
    let v = arr1[i];
    if (Object.prototype.hasOwnProperty.call(counts1, String(v))) {
      counts1[v] = counts1[v] + 1;
    } else {
      counts1[v] = 1;
      keys1 = [...keys1, v];
    }
    i = i + 1;
  }
  max1 = 0;
  i = 0;
  while ((i < keys1.length)) {
    let k = keys1[i];
    let c = counts1[k];
    if ((c > max1)) {
      max1 = c;
    }
    i = i + 1;
  }
  modes1 = [];
  i = 0;
  while ((i < keys1.length)) {
    let k = keys1[i];
    if ((counts1[k] == max1)) {
      modes1 = [...modes1, k];
    }
    i = i + 1;
  }
  console.log(String(modes1));
  arr2 = [
    2,
    7,
    1,
    8,
    2,
    8,
  ];
  counts2 = {};
  keys2 = [];
  i = 0;
  while ((i < arr2.length)) {
    let v = arr2[i];
    if (Object.prototype.hasOwnProperty.call(counts2, String(v))) {
      counts2[v] = counts2[v] + 1;
    } else {
      counts2[v] = 1;
      keys2 = [...keys2, v];
    }
    i = i + 1;
  }
  max2 = 0;
  i = 0;
  while ((i < keys2.length)) {
    let k = keys2[i];
    let c = counts2[k];
    if ((c > max2)) {
      max2 = c;
    }
    i = i + 1;
  }
  modes2 = [];
  i = 0;
  while ((i < keys2.length)) {
    let k = keys2[i];
    if ((counts2[k] == max2)) {
      modes2 = [...modes2, k];
    }
    i = i + 1;
  }
  console.log(String(modes2));
}
main();
