// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:12:32Z
// Source: /workspace/mochi/tests/rosetta/x/Mochi/animate-a-pendulum.mochi

function sinApprox(x: number): number {
  var term = x;
  var sum = x;
  var n = 1;
  while ((n <= 10)) {
    let denom = (2 * n) * ((2 * n) + 1);
    term = (((-term) * x) * x) / denom;
    sum = sum + term;
    n = n + 1;
  }
  return sum;
}

function cosApprox(x: number): number {
  var term = 1;
  var sum = 1;
  var n = 1;
  while ((n <= 10)) {
    let denom = ((2 * n) - 1) * (2 * n);
    term = (((-term) * x) * x) / denom;
    sum = sum + term;
    n = n + 1;
  }
  return sum;
}

function sqrtApprox(x: number): number {
  var guess = x;
  var i = 0;
  while ((i < 10)) {
    guess = (guess + (x / guess)) / 2;
    i = i + 1;
  }
  return guess;
}

let G: number;
let L: number;
let PI: number;
let dt: number;
let omega: number;
let phi0: number;
var t: number;

function main(): void {
  PI = 3.141592653589793;
  L = 10;
  G = 9.81;
  dt = 0.2;
  phi0 = PI / 4;
  omega = sqrtApprox(G / L);
  t = 0;
  for (let step: number = 0; step < 10; step++) {
    let phi = phi0 * cosApprox(omega * t);
    let pos = (10 * sinApprox(phi)) + 0.5;
    console.log(String(pos));
    t = t + dt;
  }
}
main();
