// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:12:35Z
// Source: /workspace/mochi/tests/rosetta/x/Mochi/average-loop-length.mochi

function absf(x: number): number {
  if ((x < 0)) {
    return (-x);
  }
  return x;
}

function floorf(x: number): number {
  return x;
}

function indexOf(s: string, ch: string): number {
  var i = 0;
  while ((i < s.length)) {
    if ((s.substring(i, i + (i + 1)) == ch)) {
      return i;
    }
    i = i + 1;
  }
  return (-1);
}

function fmtF(x: number): string {
  var y = floorf((x * 10000) + 0.5) / 10000;
  var s = String(y);
  var dot = indexOf(s, ".");
  if ((dot == (0 - 1))) {
    s = `${s}.0000`;
  } else {
    var decs = (s.length - dot) - 1;
    if ((decs > 4)) {
      s = s.substring(0, (0) + (dot + 5));
    } else {
      while ((decs < 4)) {
        s = `${s}0`;
        decs = decs + 1;
      }
    }
  }
  return s;
}

function padInt(n: number, width: number): string {
  var s = String(n);
  while ((s.length < width)) {
    s = ` ${s}`;
  }
  return s;
}

function padFloat(x: number, width: number): string {
  var s = fmtF(x);
  while ((s.length < width)) {
    s = ` ${s}`;
  }
  return s;
}

function avgLen(n: number): number {
  let tests = 10000;
  var sum = 0;
  var seed = 1;
  var t = 0;
  while ((t < tests)) {
    var visited: boolean[] = [];
    var i = 0;
    while ((i < n)) {
      visited = [...visited, false];
      i = i + 1;
    }
    var x = 0;
    while ((!visited[x])) {
      visited[x] = true;
      sum = sum + 1;
      seed = ((seed * 1664525) + 1013904223) % 2147483647;
      x = seed % n;
    }
    t = t + 1;
  }
  return Math.trunc(sum / tests);
}

function ana(n: number): number {
  var nn = n;
  var term = 1;
  var sum = 1;
  var i = nn - 1;
  while ((i >= 1)) {
    term = term * (i / nn);
    sum = sum + term;
    i = i - 1;
  }
  return sum;
}

function main(): void {
  let nmax = 20;
  console.log(" N    average    analytical    (error)");
  console.log("===  =========  ============  =========");
  var n = 1;
  while ((n <= nmax)) {
    let a = avgLen(n);
    let b = ana(n);
    let err = (absf(a - b) / b) * 100;
    var line = `${padInt(n, 3)}  ${padFloat(a, 9)}  ${padFloat(b, 12)}  (${
      padFloat(err, 6)
    }%)`;
    console.log(line);
    n = n + 1;
  }
}

function main(): void {
  main();
}
main();
