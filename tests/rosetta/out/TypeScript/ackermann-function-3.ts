// Generated by Mochi compiler v0.10.28 on 2025-07-18T10:32:44Z
// Source: /workspace/mochi/tests/rosetta/x/Mochi/ackermann-function-3.mochi

function pow_big(base: bigint, exp: number): bigint {
  var result: bigint = 1;
  var b: bigint = base;
  var e = exp;
  while ((e > 0)) {
    if (((e % 2) == 1)) {
      result = result * b;
    }
    b = b * b;
    e = (e / 2) as number;
  }
  return result;
}

function bit_len(x: bigint): number {
  var n: bigint = x;
  var c = 0;
  while ((n > 0)) {
    n = n / 2;
    c = c + 1;
  }
  return c;
}

function ackermann2(m: bigint, n: bigint): bigint {
  if ((err != "")) {
    return (0 as bigint);
  }
  if ((m <= 3)) {
    let mi = Math.trunc(Number(m));
    if ((mi == 0)) {
      return (n + 1);
    }
    if ((mi == 1)) {
      return (n + 2);
    }
    if ((mi == 2)) {
      return ((2 * n) + 3);
    }
    if ((mi == 3)) {
      let nb = bit_len(n);
      if ((nb > 64)) {
        err = `A(m,n) had n of ${String(nb)} bits; too large`;
        return (0 as bigint);
      }
      let r = pow_big(2 as bigint, Math.trunc(Number(n)));
      return ((8 * r) - 3);
    }
  }
  if ((bit_len(n) == 0)) {
    return ackermann2(m - (1 as bigint), 1 as bigint);
  }
  return ackermann2(m - (1 as bigint), ackermann2(m, n - (1 as bigint)));
}

function show(m: number, n: number): void {
  err = "";
  let res = ackermann2(m as bigint, n as bigint);
  if ((err != "")) {
    console.log(`A(${String(m)}, ${String(n)}) = Error: ${err}`);
    return undefined;
  }
  if ((bit_len(res) <= 256)) {
    console.log(`A(${String(m)}, ${String(n)}) = ${String(res)}`);
  } else {
    let s = String(res);
    let pre = s.substring(0, (0) + (20));
    let suf = s.substring(s.length - 20, (s.length - 20) + (s.length));
    console.log(
      `A(${String(m)}, ${String(n)}) = ${
        String(s.length)
      } digits starting/ending with: ${pre}...${suf}`,
    );
  }
}

function main(): void {
  show(0, 0);
  show(1, 2);
  show(2, 4);
  show(3, 100);
  show(3, 1000000);
  show(4, 1);
  show(4, 2);
  return show(4, 3);
}

var err: string;

var err = "";
main();
