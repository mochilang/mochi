// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:12:38Z
// Source: /workspace/mochi/tests/rosetta/x/Mochi/bernoulli-numbers.mochi

function bernoulli(n: number): any {
  var a: any[] = [];
  var m = 0;
  while ((m <= n)) {
    a = [...a, 1 / (m + 1)];
    var j = m;
    while ((j >= 1)) {
      a[j - 1] = j * (a[j - 1] - a[j]);
      j = j - 1;
    }
    m = m + 1;
  }
  return a[0];
}

function main(): void {
  for (let i: number = 0; i < 61; i++) {
    let b = bernoulli(i);
    if ((num(b) != 0)) {
      let numStr = String(num(b));
      let denStr = String(denom(b));
      console.log(
        `B(${String(i)(2, " ")}) =${numStr.padStart(45, " ")}/${denStr}`,
      );
    }
  }
}
main();
