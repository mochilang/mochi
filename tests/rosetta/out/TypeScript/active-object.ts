// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:12:10Z
// Source: /workspace/mochi/tests/rosetta/x/Mochi/active-object.mochi

function sinApprox(x: number): number {
  var term = x;
  var sum = x;
  var n = 1;
  while ((n <= 12)) {
    let denom = (2 * n) * ((2 * n) + 1);
    term = (((-term) * x) * x) / denom;
    sum = sum + term;
    n = n + 1;
  }
  return sum;
}

let PI: number;
let dt: number;
var i: number;
var i2: number;
var k1: number;
var s: number;
var t1: number;

function main(): void {
  PI = 3.141592653589793;
  dt = 0.01;
  s = 0;
  t1 = 0;
  k1 = sinApprox(0);
  i = 1;
  while ((i <= 200)) {
    let t2 = i * dt;
    let k2 = sinApprox(t2 * PI);
    s = s + (((k1 + k2) * 0.5) * (t2 - t1));
    t1 = t2;
    k1 = k2;
    i = i + 1;
  }
  i2 = 1;
  while ((i2 <= 50)) {
    let t2 = 2 + (i2 * dt);
    let k2 = 0;
    s = s + (((k1 + k2) * 0.5) * (t2 - t1));
    t1 = t2;
    k1 = k2;
    i2 = i2 + 1;
  }
  console.log(s);
}
main();
