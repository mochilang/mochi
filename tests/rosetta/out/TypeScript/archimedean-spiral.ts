// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:12:33Z
// Source: /workspace/mochi/tests/rosetta/x/Mochi/archimedean-spiral.mochi

function sinApprox(x: number): number {
  var term = x;
  var sum = x;
  var n = 1;
  while ((n <= 10)) {
    let denom = (2 * n) * ((2 * n) + 1);
    term = (((-term) * x) * x) / denom;
    sum = sum + term;
    n = n + 1;
  }
  return sum;
}

function cosApprox(x: number): number {
  var term = 1;
  var sum = 1;
  var n = 1;
  while ((n <= 10)) {
    let denom = ((2 * n) - 1) * (2 * n);
    term = (((-term) * x) * x) / denom;
    sum = sum + term;
    n = n + 1;
  }
  return sum;
}

let PI: number;
let a: number;
let b: number;
let centre: number;
var count: number;
let degreesIncr: number;
let stop: number;
var theta: number;
let turns: number;
let width: number;

function main(): void {
  PI = 3.141592653589793;
  degreesIncr = (0.1 * PI) / 180;
  turns = 2;
  stop = ((360 * turns) * 10) * degreesIncr;
  width = 600;
  centre = width / 2;
  a = 1;
  b = 20;
  theta = 0;
  count = 0;
  while ((theta < stop)) {
    let r = a + (b * theta);
    let x = r * cosApprox(theta);
    let y = r * sinApprox(theta);
    if (((count % 100) == 0)) {
      console.log(`${String(centre + x)},${String(centre - y)}`);
    }
    theta = theta + degreesIncr;
    count = count + 1;
  }
}
main();
