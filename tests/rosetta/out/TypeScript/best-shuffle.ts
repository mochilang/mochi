// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:12:38Z
// Source: /workspace/mochi/tests/rosetta/x/Mochi/best-shuffle.mochi

function nextRand(seed: number): number {
  return (((seed * 1664525) + 1013904223) % 2147483647);
}

function shuffleChars(s: string, seed: number): any[] {
  var chars: string[] = [];
  var i = 0;
  while ((i < s.length)) {
    chars = [...chars, s.substring(i, i + (i + 1))];
    i = i + 1;
  }
  var sd = seed;
  var idx = chars.length - 1;
  while ((idx > 0)) {
    sd = nextRand(sd);
    var j = sd % (idx + 1);
    let tmp = chars[idx];
    chars[idx] = chars[j];
    chars[j] = tmp;
    idx = idx - 1;
  }
  var res = "";
  i = 0;
  while ((i < chars.length)) {
    res = `${res}${chars[i]}`;
    i = i + 1;
  }
  return [
    res,
    sd,
  ];
}

function bestShuffle(s: string, seed: number): any[] {
  let r = shuffleChars(s, seed);
  var t = r[0];
  var sd = r[1];
  var arr: string[] = [];
  var i = 0;
  while (
    (i < (Array.isArray(t) || typeof t === "string"
      ? (t as any).length
      : (t && typeof t === "object" ? Object.keys(t).length : 0)))
  ) {
    arr = [...arr, t.substring(i, i + (i + 1))];
    i = i + 1;
  }
  i = 0;
  while ((i < arr.length)) {
    var j = 0;
    while ((j < arr.length)) {
      if (
        (((i != j) && (arr[i] != s.substring(j, j + (j + 1)))) &&
          (arr[j] != s.substring(i, i + (i + 1))))
      ) {
        let tmp = arr[i];
        arr[i] = arr[j];
        arr[j] = tmp;
        break;
      }
      j = j + 1;
    }
    i = i + 1;
  }
  var count = 0;
  i = 0;
  while ((i < arr.length)) {
    if ((arr[i] == s.substring(i, i + (i + 1)))) {
      count = count + 1;
    }
    i = i + 1;
  }
  var out = "";
  i = 0;
  while ((i < arr.length)) {
    out = `${out}${arr[i]}`;
    i = i + 1;
  }
  return [
    out,
    sd,
    count,
  ];
}

function main(): void {
  let ts = [
    "abracadabra",
    "seesaw",
    "elk",
    "grrrrrr",
    "up",
    "a",
  ];
  var seed = 1;
  var i = 0;
  while ((i < ts.length)) {
    let r = bestShuffle(ts[i], seed);
    let shuf = r[0];
    seed = r[1];
    let cnt = r[2];
    console.log(`${ts[i]} -> ${shuf} (${String(cnt)})`);
    i = i + 1;
  }
}

function main(): void {
  main();
}
main();
