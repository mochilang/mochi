// Generated by Mochi compiler v0.10.30 on 2025-07-18T17:31:07Z
// Source: /workspace/mochi/tests/rosetta/x/Mochi/ackermann-function-2.mochi

function pow(base: number, exp: number): number {
  var result = 1;
  var i = 0;
  while ((i < exp)) {
    result = result * base;
    i = i + 1;
  }
  return result;
}

function ackermann2(m: number, n: number): number {
  if ((m == 0)) {
    return (n + 1);
  }
  if ((m == 1)) {
    return (n + 2);
  }
  if ((m == 2)) {
    return ((2 * n) + 3);
  }
  if ((m == 3)) {
    return ((8 * pow(2, n)) - 3);
  }
  if ((n == 0)) {
    return ackermann2(m - 1, 1);
  }
  return ackermann2(m - 1, ackermann2(m, n - 1));
}

function main(): void {
  console.log(`A(0, 0) = ${String(ackermann2(0, 0))}`);
  console.log(`A(1, 2) = ${String(ackermann2(1, 2))}`);
  console.log(`A(2, 4) = ${String(ackermann2(2, 4))}`);
  return console.log(`A(3, 4) = ${String(ackermann2(3, 4))}`);
}

main();
