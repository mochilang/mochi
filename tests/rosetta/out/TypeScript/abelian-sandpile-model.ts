// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:12:10Z
// Source: /workspace/mochi/tests/rosetta/x/Mochi/abelian-sandpile-model.mochi

function newPile(d: number): number[][] {
  var b: number[][] = [];
  var y = 0;
  while ((y < d)) {
    var row: number[] = [];
    var x = 0;
    while ((x < d)) {
      row = [...row, 0];
      x = x + 1;
    }
    b = [...b, row];
    y = y + 1;
  }
  return b;
}

function handlePile(pile: number[][], x: number, y: number): number[][] {
  if ((pile[y][x] >= 4)) {
    pile[y][x] = pile[y][x] - 4;
    if ((y > 0)) {
      pile[y - 1][x] = pile[y - 1][x] + 1;
      if ((pile[y - 1][x] >= 4)) {
        pile = handlePile(pile, x, y - 1);
      }
    }
    if ((x > 0)) {
      pile[y][x - 1] = pile[y][x - 1] + 1;
      if ((pile[y][x - 1] >= 4)) {
        pile = handlePile(pile, x - 1, y);
      }
    }
    if ((y < (dim - 1))) {
      pile[y + 1][x] = pile[y + 1][x] + 1;
      if ((pile[y + 1][x] >= 4)) {
        pile = handlePile(pile, x, y + 1);
      }
    }
    if ((x < (dim - 1))) {
      pile[y][x + 1] = pile[y][x + 1] + 1;
      if ((pile[y][x + 1] >= 4)) {
        pile = handlePile(pile, x + 1, y);
      }
    }
    pile = handlePile(pile, x, y);
  }
  return pile;
}

function drawPile(pile: number[][], d: number): void {
  let chars = [
    " ",
    "░",
    "▓",
    "█",
  ];
  var row = 0;
  while ((row < d)) {
    var line = "";
    var col = 0;
    while ((col < d)) {
      var v = pile[row][col];
      if ((v > 3)) {
        v = 3;
      }
      line = `${line}${chars[v]}`;
      col = col + 1;
    }
    console.log(line);
    row = row + 1;
  }
}

function main(): void {
  var pile = newPile(16);
  let hdim = 7;
  pile[hdim][hdim] = 16;
  pile = handlePile(pile, hdim, hdim);
  return drawPile(pile, 16);
}

let dim: number;

function main(): void {
  dim = 16;
  main();
}
main();
