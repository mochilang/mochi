// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:12:33Z
// Source: /workspace/mochi/tests/rosetta/x/Mochi/arena-storage-pool.mochi

function poolPut(p: number[], x: number): number[] {
  return [...p, x];
}

function poolGet(p: number[]): Record<string, any> {
  if ((p.length == 0)) {
    console.log("pool empty");
    return {
      "pool": p,
      "val": 0,
    };
  }
  let idx = p.length - 1;
  let v = p[idx];
  p = p.slice(0, idx);
  return {
    "pool": p,
    "val": v,
  };
}

function clearPool(p: number[]): number[] {
  return [];
}

function main(): void {
  var pool: number[] = [];
  var i = 1;
  var j = 2;
  console.log(String(i + j));
  pool = poolPut(pool, i);
  pool = poolPut(pool, j);
  i = 0;
  j = 0;
  let res1 = poolGet(pool);
  pool = res1["pool"];
  i = res1["val"];
  let res2 = poolGet(pool);
  pool = res2["pool"];
  j = res2["val"];
  i = 4;
  j = 5;
  console.log(String(i + j));
  pool = poolPut(pool, i);
  pool = poolPut(pool, j);
  i = 0;
  j = 0;
  pool = clearPool(pool);
  let res3 = poolGet(pool);
  pool = res3["pool"];
  i = res3["val"];
  let res4 = poolGet(pool);
  pool = res4["pool"];
  j = res4["val"];
  i = 7;
  j = 8;
  return console.log(String(i + j));
}

function main(): void {
  main();
}
main();
