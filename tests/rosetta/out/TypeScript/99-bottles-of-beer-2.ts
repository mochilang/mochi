// Generated by Mochi compiler v0.10.30 on 2025-07-18T18:02:57Z
// Source: /workspace/mochi/tests/rosetta/x/Mochi/99-bottles-of-beer-2.mochi

function fields(s: string): string[] {
  var words: string[] = [];
  var cur = "";
  var i = 0;
  while (i < s.length) {
    let ch = s.substring(i, i + (i + 1));
    if (ch == " " || ch == "\n" || ch == "\t") {
      if (cur.length > 0) {
        words = [...words, cur];
        cur = "";
      }
    } else {
      cur = `${cur}${ch}`;
    }
    i = i + 1;
  }
  if (cur.length > 0) {
    words = [...words, cur];
  }
  return words;
}

function join(xs: string[], sep: string): string {
  var res = "";
  var i = 0;
  while (i < xs.length) {
    if (i > 0) {
      res = `${res}${sep}`;
    }
    res = `${res}${xs[i]}`;
    i = i + 1;
  }
  return res;
}

function numberName(n: number): string {
  let small = [
    "no",
    "one",
    "two",
    "three",
    "four",
    "five",
    "six",
    "seven",
    "eight",
    "nine",
    "ten",
    "eleven",
    "twelve",
    "thirteen",
    "fourteen",
    "fifteen",
    "sixteen",
    "seventeen",
    "eighteen",
    "nineteen",
  ];
  let tens = [
    "ones",
    "ten",
    "twenty",
    "thirty",
    "forty",
    "fifty",
    "sixty",
    "seventy",
    "eighty",
    "ninety",
  ];
  if (n < 0) {
    return "";
  }
  if (n < 20) {
    return small[n];
  }
  if (n < 100) {
    var t = tens[(n / 10) as number];
    var s = n % 10;
    if (s > 0) {
      t = `${t} ${small[s]}`;
    }
    return t;
  }
  return "";
}

function pluralizeFirst(s: string, n: number): string {
  if (n == 1) {
    return s;
  }
  let w = fields(s);
  if (w.length > 0) {
    w[0] = `${w[0]}s`;
  }
  return join(w, " ");
}

function randInt(seed: number, n: number): number {
  let next = (seed * 1664525 + 1013904223) % 2147483647;
  return next % n;
}

function slur(p: string, d: number): string {
  if (p.length <= 2) {
    return p;
  }
  var a: string[] = [];
  var i = 1;
  while (i < p.length - 1) {
    a = [...a, p.substring(i, i + (i + 1))];
    i = i + 1;
  }
  var idx = a.length - 1;
  var seed = d;
  while (idx >= 1) {
    seed = (seed * 1664525 + 1013904223) % 2147483647;
    if (seed % 100 >= d) {
      let j = seed % (idx + 1);
      let tmp = a[idx];
      a[idx] = a[j];
      a[j] = tmp;
    }
    idx = idx - 1;
  }
  var s = p.substring(0, 0 + 1);
  var k = 0;
  while (k < a.length) {
    s = `${s}${a[k]}`;
    k = k + 1;
  }
  s = `${s}${p.substring(p.length - 1, p.length - 1 + p.length)}`;
  let w = fields(s);
  return join(w, " ");
}

function main(): void {
  var i = 99;
  while (i > 0) {
    console.log(
      `${slur(numberName(i), i)} ${pluralizeFirst(slur("bottle of", i), i)} ${slur("beer on the wall", i)}`,
    );
    console.log(
      `${slur(numberName(i), i)} ${pluralizeFirst(slur("bottle of", i), i)} ${slur("beer", i)}`,
    );
    console.log(
      `${slur("take one", i)} ${slur("down", i)} ${slur("pass it around", i)}`,
    );
    console.log(
      `${slur(numberName(i - 1), i)} ${pluralizeFirst(slur("bottle of", i), i - 1)} ${slur("beer on the wall", i)}`,
    );
    i = i - 1;
  }
}

main();
