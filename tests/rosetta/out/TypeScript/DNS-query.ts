async function _lookupHost(name: string): Promise<string[]> {
  try {
    if (typeof Deno !== "undefined" && "resolveDns" in Deno) {
      return await Deno.resolveDns(name, "A");
    }
    const dns = require("dns").promises;
    return await dns.resolve4(name);
  } catch {
    return [];
  }
}

const _pending: Promise<any>[] = [];
async function _waitAll(): Promise<void> {
  await Promise.all(_pending);
}

// Generated by Mochi compiler v0.10.30 on 2025-07-19T02:50:49Z
// Source: /workspace/mochi/tests/rosetta/x/Mochi/DNS-query.mochi

const nil = null;

let addrs: any;
let err: any;
let res: any[];

async function main(): Promise<void> {
  let res: any[] = await (async () => {
    try {
      const a = await _lookupHost("www.kame.net");
      return [a, null];
    } catch (e) {
      return [null, String(e)];
    }
  })();
  let addrs: any = res[0];
  let err: any = res[1];
  if ((err == nil)) {
    console.log(String(addrs));
  } else {
    console.log(err);
  }
}
await main();
await _waitAll();
