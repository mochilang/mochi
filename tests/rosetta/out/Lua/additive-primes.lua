-- Generated by Mochi compiler v0.10.30 on 2025-07-19T01:26:08Z
function __add(a, b)
    if type(a) == 'table' and type(b) == 'table' then
        local out = {}
        for i = 1, #a do out[#out+1] = a[i] end
        for i = 1, #b do out[#out+1] = b[i] end
        return out
    elseif type(a) == 'string' or type(b) == 'string' then
        return tostring(a) .. tostring(b)
    else
        return a + b
    end
end
function __div(a, b)
    if math.type and math.type(a) == 'integer' and math.type(b) == 'integer' then
        return a // b
    end
    return a / b
end
function __slice(obj, i, j)
    if i == nil then i = 0 end
    if type(obj) == 'string' then
        local len = #obj
        if j == nil then j = len end
        if i < 0 then i = len + i end
        if j < 0 then j = len + j end
        if i < 0 then i = 0 end
        if j > len then j = len end
        return string.sub(obj, i+1, j)
    elseif type(obj) == 'table' then
        local len = #obj
        if j == nil then j = len end
        if i < 0 then i = len + i end
        if j < 0 then j = len + j end
        if i < 0 then i = 0 end
        if j > len then j = len end
        local out = {}
        for k = i+1, j do
            out[#out+1] = obj[k]
        end
        return out
    else
        return {}
    end
end
function isPrime(n)
    if (n < 2) then
        return false
    end
    if ((n % 2) == 0) then
        return (n == 2)
    end
    if ((n % 3) == 0) then
        return (n == 3)
    end
    local d = 5;
    while ((d * d) <= n) do
        if ((n % d) == 0) then
            return false
        end
        d = __add(d, 2);
        if ((n % d) == 0) then
            return false
        end
        d = __add(d, 4);
    end
    return true
end

function sumDigits(n)
    local s = 0;
    local x = n;
    while (x > 0) do
        s = __add(s, (x % 10));
        x = tonumber((__div(x, 10)));
    end
    return s
end

function pad(n)
    if (n < 10) then
        return ("  " .. tostring(n))
    end
    if (n < 100) then
        return (" " .. tostring(n))
    end
    return tostring(n)
end

function main()
    print("Additive primes less than 500:");
    local count = 0;
    local line = "";
    local lineCount = 0;
    local i = 2;
    while (i < 500) do
        if (isPrime(i) and isPrime(sumDigits(i))) then
            count = __add(count, 1);
            line = (__add(line, pad(i)) .. "  ");
            lineCount = __add(lineCount, 1);
            if (lineCount == 10) then
                print(__slice(line, 0, (#line - 2)));
                line = "";
                lineCount = 0;
            end
        end
        if (i > 2) then
            i = __add(i, 2);
        else
            i = __add(i, 1);
        end
    end
    if (lineCount > 0) then
        print(__slice(line, 0, (#line - 2)));
    end
    print((tostring(count) .. " additive primes found."));
end

main();
