-- Generated by Mochi compiler v0.10.30 on 2025-07-19T00:32:38Z
function __add(a, b)
    if type(a) == 'table' and type(b) == 'table' then
        local out = {}
        for i = 1, #a do out[#out+1] = a[i] end
        for i = 1, #b do out[#out+1] = b[i] end
        return out
    elseif type(a) == 'string' or type(b) == 'string' then
        return tostring(a) .. tostring(b)
    else
        return a + b
    end
end
function __append(lst, v)
    local out = {}
    if lst then for i = 1, #lst do out[#out+1] = lst[i] end end
    out[#out+1] = v
    return out
end
function __index(obj, i)
    if type(obj) == 'string' then
        return __indexString(obj, i)
    elseif type(obj) == 'table' then
        if obj[1] ~= nil or #obj > 0 then
            return obj[(i)+1]
        else
            return obj[i]
        end
    else
        error('cannot index')
    end
end
function __indexString(s, i)
    local len = #s
    if i < 0 then
        i = len + i + 1
    else
        i = i + 1
    end
    if i < 1 or i > len then error('index out of range') end
    return string.sub(s, i, i)
end
function shuffle(xs)
    local arr = xs;
    local i = 99;
    while (i > 0) do
        local j = (os.time() % (__add(i, 1)));
        local tmp = __index(arr, i);
        arr[i] = __index(arr, j);
        arr[j] = tmp;
        i = (i - 1);
    end
    return arr
end

function doTrials(trials, np, strategy)
    local pardoned = 0;
    local t = 0;
    while (t < trials) do
        local drawers = {};
        local i = 0;
        while (i < 100) do
            drawers = __append(drawers, i);
            i = __add(i, 1);
        end
        drawers = shuffle(drawers);
        local p = 0;
        local success = true;
        while (p < np) do
            local found = false;
            if (strategy == "optimal") then
                local prev = p;
                local d = 0;
                while (d < 50) do
                    local this = __index(drawers, prev);
                    if (this == p) then
                        found = true;
                        break
                    end
                    prev = this;
                    d = __add(d, 1);
                end
            else
                local opened = {};
                local k = 0;
                while (k < 100) do
                    opened = __append(opened, false);
                    k = __add(k, 1);
                end
                local d = 0;
                while (d < 50) do
                    local n = (os.time() % 100);
                    while __index(opened, n) do
                        n = (os.time() % 100);
                    end
                    opened[n] = true;
                    if (__index(drawers, n) == p) then
                        found = true;
                        break
                    end
                    d = __add(d, 1);
                end
            end
            if not found then
                success = false;
                break
            end
            p = __add(p, 1);
        end
        if success then
            pardoned = __add(pardoned, 1);
        end
        t = __add(t, 1);
    end
    local rf = (((tonumber(pardoned)) / (tonumber(trials))) * 100.0);
    print(tostring((((((__add("  strategy = ", strategy) .. "  pardoned = ") .. tostring(pardoned)) .. " relative frequency = ") .. tostring(rf)) .. "%")));
end

function main()
    local trials = 1000;
    for _, np in ipairs({10, 100}) do
        print((((("Results from " .. tostring(trials)) .. " trials with ") .. tostring(np)) .. " prisoners:\n"));
        for _, strat in ipairs({"random", "optimal"}) do
            doTrials(trials, np, strat);
        end
    end
end

main();
