-- Generated by Mochi compiler v0.10.30 on 2025-07-19T00:33:19Z
function __add(a, b)
    if type(a) == 'table' and type(b) == 'table' then
        local out = {}
        for i = 1, #a do out[#out+1] = a[i] end
        for i = 1, #b do out[#out+1] = b[i] end
        return out
    elseif type(a) == 'string' or type(b) == 'string' then
        return tostring(a) .. tostring(b)
    else
        return a + b
    end
end
function __index(obj, i)
    if type(obj) == 'string' then
        return __indexString(obj, i)
    elseif type(obj) == 'table' then
        if obj[1] ~= nil or #obj > 0 then
            return obj[(i)+1]
        else
            return obj[i]
        end
    else
        error('cannot index')
    end
end
function __indexString(s, i)
    local len = #s
    if i < 0 then
        i = len + i + 1
    else
        i = i + 1
    end
    if i < 1 or i > len then error('index out of range') end
    return string.sub(s, i, i)
end
function __input()
    local line = io.read('*l')
    if line == nil then return '' end
    return line
end
function __slice(obj, i, j)
    if i == nil then i = 0 end
    if type(obj) == 'string' then
        local len = #obj
        if j == nil then j = len end
        if i < 0 then i = len + i end
        if j < 0 then j = len + j end
        if i < 0 then i = 0 end
        if j > len then j = len end
        return string.sub(obj, i+1, j)
    elseif type(obj) == 'table' then
        local len = #obj
        if j == nil then j = len end
        if i < 0 then i = len + i end
        if j < 0 then j = len + j end
        if i < 0 then i = 0 end
        if j > len then j = len end
        local out = {}
        for k = i+1, j do
            out[#out+1] = obj[k]
        end
        return out
    else
        return {}
    end
end
function parseIntStr(str)
    local i = 0;
    local neg = false;
    if ((#str > 0) and (__slice(str, 0, 1) == "-")) then
        neg = true;
        i = 1;
    end
    local n = 0;
    local digits = {["0"]=0, ["1"]=1, ["2"]=2, ["3"]=3, ["4"]=4, ["5"]=5, ["6"]=6, ["7"]=7, ["8"]=8, ["9"]=9};
    while (i < #str) do
        n = __add((n * 10), __index(digits, __slice(str, i, __add(i, 1))));
        i = __add(i, 1);
    end
    if neg then
        n = -n;
    end
    return n
end

function main()
    local total = 0;
    local computer = ((os.time() % 2) == 0);
    print("Enter q to quit at any time\n");
    if computer then
        print("The computer will choose first");
    else
        print("You will choose first");
    end
    print("\n\nRunning total is now 0\n\n");
    local round = 1;
    local done = false;
    while not done do
        ::__continue0::
        print((("ROUND " .. tostring(round)) .. ":\n\n"));
        local i = 0;
        while ((i < 2) and (not done)) do
            ::__continue1::
            if computer then
                local choice = 0;
                if (total < 18) then
                    choice = ((os.time() % 3) + 1);
                else
                    choice = (21 - total);
                end
                total = __add(total, choice);
                print(("The computer chooses " .. tostring(choice)));
                print(("Running total is now " .. tostring(total)));
                if (total == 21) then
                    print("\nSo, commiserations, the computer has won!");
                    done = true;
                end
            else
                while true do
                    ::__continue2::
                    print("Your choice 1 to 3 : ");
                    local line = __input();
                    if ((line == "q") or (line == "Q")) then
                        print("OK, quitting the game");
                        done = true;
                        break
                    end
                    local num = parseIntStr(line);
                    if ((num < 1) or (num > 3)) then
                        if (__add(total, num) > 21) then
                            print("Too big, try again");
                        else
                            print("Out of range, try again");
                        end
                        goto __continue2
                    end
                    if (__add(total, num) > 21) then
                        print("Too big, try again");
                        goto __continue2
                    end
                    total = __add(total, num);
                    print(("Running total is now " .. tostring(total)));
                    break
                end
                if (total == 21) then
                    print("\nSo, congratulations, you've won!");
                    done = true;
                end
            end
            print("\n");
            computer = not computer;
            i = __add(i, 1);
        end
        round = __add(round, 1);
    end
end

main();
