// Generated by Mochi compiler v0.10.30 on 2006-01-02T15:04:05Z
fun <T> append(list: MutableList<T>, item: T): MutableList<T> {
    val res = list.toMutableList()
    res.add(item)
    return res
}
// Code generated from abc-problem.mochi

/**
 * Auto-generated from Mochi
 * @param s String
 * @return MutableList<String>
 */
fun fields(s: String): MutableList<String> {
    var res: MutableList<String> = mutableListOf<String>()
    var cur = ""
    var i = 0
    while (i < s.length) {
        val c = s.substring(i, i + 1)
        if (c == " ") {
            if (cur.length > 0) {
                res = append(res, cur)
                cur = ""
            }
        }
        else {
            cur = cur + c
        }
        i = i + 1
    }
    if (cur.length > 0) {
        res = append(res, cur)
    }
    return res
}

/**
 * Auto-generated from Mochi
 * @param word String
 * @param blks MutableList<String>
 * @return Boolean
 */
fun canSpell(word: String, blks: MutableList<String>): Boolean {
    if (word.length == 0) {
        return true
    }
    val c = word.substring(0, 1).toLowerCase()
    var i = 0
    while (i < blks.size) {
        val b = blks[i]
        if (c == b.substring(0, 1).toLowerCase() || c == b.substring(1, 2).toLowerCase()) {
            var rest: MutableList<String> = mutableListOf<String>()
            var j = 0
            while (j < blks.size) {
                if (j != i) {
                    rest = append(rest, blks[j])
                }
                j = j + 1
            }
            if (canSpell(word.substring(1, word.length), rest)) {
                return true
            }
        }
        i = i + 1
    }
    return false
}

/**
 * Auto-generated from Mochi
 * @param blocks String
 * @return (String) -> Boolean
 */
fun newSpeller(blocks: String): (String) -> Boolean {
    val bl = fields(blocks)
    return { w: String -> canSpell(w, bl) }
}

/**
 * Auto-generated from Mochi
 */
fun main(): Unit {
    val sp = newSpeller("BO XK DQ CP NA GT RE TG QD FS JW HU VI AN OB ER FS LY PC ZM")
    for (word in mutableListOf("A", "BARK", "BOOK", "TREAT", "COMMON", "SQUAD", "CONFUSE")) {
        println(word + " " + sp(word).toString())
    }
}

