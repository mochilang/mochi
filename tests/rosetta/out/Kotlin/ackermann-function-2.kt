// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
// Code generated from ackermann-function-2.mochi

/**
 * Auto-generated from Mochi
 * @param base Int
 * @param exp Int
 * @return Int
 */
fun pow(base: Int, exp: Int): Int {
    var result = 1
    var i = 0
    while (i < exp) {
        result = result * base
        i = i + 1
    }
    return result
}

/**
 * Auto-generated from Mochi
 * @param m Int
 * @param n Int
 * @return Int
 */
tailrec fun ackermann2(m: Int, n: Int): Int {
    if (m == 0) {
        return n + 1
    }
    if (m == 1) {
        return n + 2
    }
    if (m == 2) {
        return 2 * n + 3
    }
    if (m == 3) {
        return 8 * pow(2, n) - 3
    }
    if (n == 0) {
        return ackermann2(m - 1, 1)
    }
    return ackermann2(m - 1, ackermann2(m, n - 1))
}

/**
 * Auto-generated from Mochi
 */
fun main(): Unit {
    println("A(0, 0) = " + ackermann2(0, 0).toString())
    println("A(1, 2) = " + ackermann2(1, 2).toString())
    println("A(2, 4) = " + ackermann2(2, 4).toString())
    println("A(3, 4) = " + ackermann2(3, 4).toString())
}

