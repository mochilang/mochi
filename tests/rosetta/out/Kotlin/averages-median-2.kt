// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
// Code generated from averages-median-2.mochi

/**
 * Auto-generated from Mochi
 * @param list MutableList<Double>
 * @param k Int
 * @return Double
 */
fun sel(list: MutableList<Double>, k: Int): Double {
    var i = 0
    while (i <= k) {
        var minIndex = i
        var j = i + 1
        while (j < list.size) {
            if (list[j] < list[minIndex]) {
                minIndex = j
            }
            j = j + 1
        }
        val tmp = list[i]
        list[i] = list[minIndex]
        list[minIndex] = tmp
        i = i + 1
    }
    return list[k]
}

/**
 * Auto-generated from Mochi
 * @param a MutableList<Double>
 * @return Double
 */
fun median(a: MutableList<Double>): Double {
    var arr = a
    val half = (((arr.size).toDouble() / (2).toDouble())).toInt()
    val med = sel(arr, half)
    if (arr.size % 2 == 0) {
        return (med + arr[half - 1]) / 2.0
    }
    return med
}

fun main() {
    println(median(mutableListOf(3.0, 1.0, 4.0, 1.0)).toString())
    println(median(mutableListOf(3.0, 1.0, 4.0, 1.0, 5.0)).toString())
}
