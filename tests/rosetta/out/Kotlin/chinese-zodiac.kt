// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
// Code generated from chinese-zodiac.mochi

data class Info(var animal: String, var yinYang: String, var element: String, var stemBranch: String, var cycle: Int)

val animal = mutableListOf("Rat", "Ox", "Tiger", "Rabbit", "Dragon", "Snake", "Horse", "Goat", "Monkey", "Rooster", "Dog", "Pig")

val yinYang = mutableListOf("Yang", "Yin")

val element = mutableListOf("Wood", "Fire", "Earth", "Metal", "Water")

val stemChArr = mutableListOf("甲", "乙", "丙", "丁", "戊", "己", "庚", "辛", "壬", "癸")

val branchChArr = mutableListOf("子", "丑", "寅", "卯", "辰", "巳", "午", "未", "申", "酉", "戌", "亥")

/**
 * Auto-generated from Mochi
 * @param yr Int
 * @param animal MutableList<String>
 * @param yinYang MutableList<String>
 * @param element MutableList<String>
 * @param sc MutableList<String>
 * @param bc MutableList<String>
 * @return Info
 */
fun cz(yr: Int, animal: MutableList<String>, yinYang: MutableList<String>, element: MutableList<String>, sc: MutableList<String>, bc: MutableList<String>): Info {
    var y = yr - 4
    val stem = y % 10
    val branch = y % 12
    val sb = sc[stem] + bc[branch]
    return Info(animal = (animal[branch] as String).toString(), yinYang = (yinYang[stem % 2] as String).toString(), element = (element[(((stem).toDouble() / (2).toDouble())).toInt()] as String).toString(), stemBranch = sb, cycle = y % 60 + 1)
}

fun main() {
    for (yr in mutableListOf(1935, 1938, 1968, 1972, 1976)) {
        val r = cz(yr, animal, yinYang, element, stemChArr, branchChArr)
        println(yr.toString() + ": " + r.element + " " + r.animal + ", " + r.yinYang + ", Cycle year " + r.cycle.toString() + " " + r.stemBranch)
    }
}
