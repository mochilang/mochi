// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
// Code generated from arithmetic-rational.mochi

/**
 * Auto-generated from Mochi
 * @param x Int
 * @return Int
 */
fun intSqrt(x: Int): Int {
    if (x < 2) {
        return x
    }
    var left = 1
    var right = (x).toDouble() / (2).toDouble()
    var ans = 0
    while (left <= right) {
        val mid = (left).toDouble() + (right - (left).toDouble()) / (2).toDouble()
        val sq = mid * mid
        if (sq == x) {
            return mid
        }
        if (sq < x) {
            left = mid + (1).toDouble()
            ans = mid
        }
        else {
            right = mid - (1).toDouble()
        }
    }
    return ans
}

/**
 * Auto-generated from Mochi
 * @param n Int
 * @return Int
 */
fun sumRecip(n: Int): Int {
    var s = 1
    val limit = intSqrt(n)
    var f = 2
    while (f <= limit) {
        if (n % f == 0) {
            s = (s).toDouble() + (n).toDouble() / (f).toDouble()
            val f2 = (n).toDouble() / (f).toDouble()
            if (f2 != f) {
                s = s + f
            }
        }
        f = f + 1
    }
    return s
}

/**
 * Auto-generated from Mochi
 */
fun main(): Unit {
    val nums = mutableListOf(6, 28, 120, 496, 672, 8128, 30240, 32760, 523776)
    for (n in nums) {
        val s = sumRecip(n)
        if (s % n == 0) {
            val `val` = (s).toDouble() / (n).toDouble()
            var perfect = ""
            if (`val` == 1) {
                perfect = "perfect!"
            }
            println("Sum of recipr. factors of " + n.toString() + " = " + `val`.toString() + " exactly " + perfect)
        }
    }
}

