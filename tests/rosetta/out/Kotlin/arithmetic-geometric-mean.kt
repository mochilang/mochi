// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
// Code generated from arithmetic-geometric-mean.mochi

/**
 * Auto-generated from Mochi
 * @param x Double
 * @return Double
 */
fun abs(x: Double): Double {
    if (x < 0.0) {
        return -x
    }
    return x
}

/**
 * Auto-generated from Mochi
 * @param x Double
 * @return Double
 */
fun sqrtApprox(x: Double): Double {
    var guess = x
    var i = 0
    while (i < 20) {
        guess = (guess + x / guess) / 2.0
        i = i + 1
    }
    return guess
}

/**
 * Auto-generated from Mochi
 * @param a Double
 * @param g Double
 * @return Double
 */
fun agm(a: Double, g: Double): Double {
    val eps = 0.00000000000001
    while (abs(a - g) > abs(a) * eps) {
        val newA = (a + g) / 2.0
        val newG = sqrtApprox(a * g)
        a = newA
        g = newG
    }
    return a
}

/**
 * Auto-generated from Mochi
 */
fun main(): Unit {
    println(agm(1.0, 1.0 / sqrtApprox(2.0)).toString())
}

