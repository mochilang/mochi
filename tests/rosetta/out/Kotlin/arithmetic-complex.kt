// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
// Code generated from arithmetic-complex.mochi

data class Complex(var re: Double, var im: Double)

val a = Complex(re = 1.0, im = 1.0)

val b = Complex(re = 3.14159, im = 1.25)

/**
 * Auto-generated from Mochi
 * @param a Complex
 * @param b Complex
 * @return Complex
 */
fun add(a: Complex, b: Complex): Complex {
    return Complex(re = a.re + b.re, im = a.im + b.im)
}

/**
 * Auto-generated from Mochi
 * @param a Complex
 * @param b Complex
 * @return Complex
 */
fun mul(a: Complex, b: Complex): Complex {
    return Complex(re = a.re * b.re - a.im * b.im, im = a.re * b.im + a.im * b.re)
}

/**
 * Auto-generated from Mochi
 * @param a Complex
 * @return Complex
 */
fun neg(a: Complex): Complex {
    return Complex(re = -a.re, im = -a.im)
}

/**
 * Auto-generated from Mochi
 * @param a Complex
 * @return Complex
 */
fun inv(a: Complex): Complex {
    val denom = a.re * a.re + a.im * a.im
    return Complex(re = a.re / denom, im = -a.im / denom)
}

/**
 * Auto-generated from Mochi
 * @param a Complex
 * @return Complex
 */
fun conj(a: Complex): Complex {
    return Complex(re = a.re, im = -a.im)
}

/**
 * Auto-generated from Mochi
 * @param a Complex
 * @return String
 */
fun cstr(a: Complex): String {
    var s = "(" + a.re.toString()
    if (a.im >= 0) {
        s = s + "+" + a.im.toString() + "i)"
    }
    else {
        s = s + a.im.toString() + "i)"
    }
    return s
}

fun main() {
    println("a:       " + cstr(a))
    println("b:       " + cstr(b))
    println("a + b:   " + cstr(add(a, b)))
    println("a * b:   " + cstr(mul(a, b)))
    println("-a:      " + cstr(neg(a)))
    println("1 / a:   " + cstr(inv(a)))
    println("aÌ…:       " + cstr(conj(a)))
}
