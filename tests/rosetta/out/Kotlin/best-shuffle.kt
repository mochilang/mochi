// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
fun <T> append(list: MutableList<T>, item: T): MutableList<T> {
    val res = list.toMutableList()
    res.add(item)
    return res
}

fun toDouble(v: Any?): Double = when (v) {
    is Double -> v
    is Int -> v.toDouble()
    is String -> v.toDouble()
    else -> 0.0
}
// Code generated from best-shuffle.mochi

/**
 * Auto-generated from Mochi
 * @param seed Int
 * @return Int
 */
fun nextRand(seed: Int): Int {
    return (seed * 1664525 + 1013904223) % 2147483647
}

/**
 * Auto-generated from Mochi
 * @param s String
 * @param seed Int
 * @return MutableList<Any>
 */
fun shuffleChars(s: String, seed: Int): MutableList<Any> {
    var chars: MutableList<String> = mutableListOf<String>()
    var i = 0
    while (i < s.length) {
        chars = append(chars, s.substring(i, i + 1))
        i = i + 1
    }
    var sd = seed
    var idx = chars.size - 1
    while (idx > 0) {
        sd = nextRand(sd)
        var j = sd % (idx + 1)
        val tmp = chars[idx]
        chars[idx] = chars[j]
        chars[j] = tmp
        idx = idx - 1
    }
    var res = ""
    i = 0
    while (i < chars.size) {
        res = res + chars[i]
        i = i + 1
    }
    return mutableListOf(res, sd)
}

/**
 * Auto-generated from Mochi
 * @param s String
 * @param seed Int
 * @return MutableList<Any>
 */
fun bestShuffle(s: String, seed: Int): MutableList<Any> {
    val r = shuffleChars(s, seed)
    var t = r[0]
    var sd = r[1]
    var arr: MutableList<String> = mutableListOf<String>()
    var i = 0
    while (i < t.size) {
        arr = append(arr, t.substring(i, i + 1))
        i = i + 1
    }
    i = 0
    while (i < arr.size) {
        var j = 0
        while (j < arr.size) {
            if (i != j && arr[i] != s.substring(j, j + 1) && arr[j] != s.substring(i, i + 1)) {
                val tmp = arr[i]
                arr[i] = arr[j]
                arr[j] = tmp
                break
            }
            j = j + 1
        }
        i = i + 1
    }
    var count = 0
    i = 0
    while (i < arr.size) {
        if (arr[i] == s.substring(i, i + 1)) {
            count = count + 1
        }
        i = i + 1
    }
    var out = ""
    i = 0
    while (i < arr.size) {
        out = out + arr[i]
        i = i + 1
    }
    return mutableListOf(out, sd, count)
}

/**
 * Auto-generated from Mochi
 */
fun main(): Unit {
    val ts = mutableListOf("abracadabra", "seesaw", "elk", "grrrrrr", "up", "a")
    var seed = 1
    var i = 0
    while (i < ts.size) {
        val r = bestShuffle(ts[i], seed)
        val shuf = r[0]
        seed = r[1]
        val cnt = r[2]
        println(ts[i] + " -> " + toDouble(shuf) + " (" + cnt.toString() + ")")
        i = i + 1
    }
}

