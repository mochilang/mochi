// Generated by Mochi compiler v0.10.30 on 2006-01-02T15:04:05Z
// Code generated from abstract-type.mochi

sealed class Beast

data class Dog(val kind: String, val name: String) : Beast()
data class Cat(val kind: String, val name: String) : Beast()

/**
 * Auto-generated from Mochi
 * @param b Beast
 * @return String
 */
fun beastKind(b: Beast): String {
    return run {
    val __t = b
    when (__t) {
        is Dog -> {
            val k = __t.kind
            val u1 = __t.name
            k
        }
        is Cat -> {
            val k = __t.kind
            val u1 = __t.name
            k
        }
    }
}
}

/**
 * Auto-generated from Mochi
 * @param b Beast
 * @return String
 */
fun beastName(b: Beast): String {
    return run {
    val __t = b
    when (__t) {
        is Dog -> {
            val u0 = __t.kind
            val n = __t.name
            n
        }
        is Cat -> {
            val u0 = __t.kind
            val n = __t.name
            n
        }
    }
}
}

/**
 * Auto-generated from Mochi
 * @param b Beast
 * @return String
 */
fun beastCry(b: Beast): String {
    return run {
    val __t = b
    when (__t) {
        is Dog -> {
            val u0 = __t.kind
            val u1 = __t.name
            "Woof"
        }
        is Cat -> {
            val u0 = __t.kind
            val u1 = __t.name
            "Meow"
        }
    }
}
}

/**
 * Auto-generated from Mochi
 * @param b Beast
 */
fun bprint(b: Beast): Unit {
    println(beastName(b) + ", who's a " + beastKind(b) + ", cries: \"" + beastCry(b) + "\".")
}

/**
 * Auto-generated from Mochi
 */
fun main(): Unit {
    val d: Beast = Dog(kind = "labrador", name = "Max")
    val c: Beast = Cat(kind = "siamese", name = "Sammy")
    bprint(d)
    bprint(c)
}

