// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
fun <T> append(list: MutableList<T>, item: T): MutableList<T> {
    val res = list.toMutableList()
    res.add(item)
    return res
}
// Code generated from almost-prime.mochi

/**
 * Auto-generated from Mochi
 * @param n Int
 * @param k Int
 * @return Boolean
 */
fun kPrime(n: Int, k: Int): Boolean {
    var nf = 0
    var i = 2
    while (i <= n) {
        while (n % i == 0) {
            if (nf == k) {
                return false
            }
            nf = nf + 1
            n = (n).toDouble() / (i).toDouble()
        }
        i = i + 1
    }
    return nf == k
}

/**
 * Auto-generated from Mochi
 * @param k Int
 * @param count Int
 * @return MutableList<Int>
 */
fun gen(k: Int, count: Int): MutableList<Int> {
    var r: MutableList<Int> = mutableListOf<Int>()
    var n = 2
    while (r.size < count) {
        if (kPrime(n, k)) {
            r = append(r, n)
        }
        n = n + 1
    }
    return r
}

/**
 * Auto-generated from Mochi
 */
fun main(): Unit {
    var k = 1
    while (k <= 5) {
        println(k.toString() + " " + gen(k, 10).toString())
        k = k + 1
    }
}

