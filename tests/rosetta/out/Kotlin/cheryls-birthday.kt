// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
fun <T> append(list: MutableList<T>, item: T): MutableList<T> {
    val res = list.toMutableList()
    res.add(item)
    return res
}
// Code generated from cheryls-birthday.mochi

data class Birthday(var month: Int, var day: Int)

var choices: MutableList<Birthday> = mutableListOf(Birthday(month = 5, day = 15), Birthday(month = 5, day = 16), Birthday(month = 5, day = 19), Birthday(month = 6, day = 17), Birthday(month = 6, day = 18), Birthday(month = 7, day = 14), Birthday(month = 7, day = 16), Birthday(month = 8, day = 14), Birthday(month = 8, day = 15), Birthday(month = 8, day = 17))

var filtered: MutableList<Birthday> = mutableListOf<Birthday>()

/**
 * Auto-generated from Mochi
 * @param b Birthday
 * @param list MutableList<Birthday>
 * @return Boolean
 */
fun monthUnique(b: Birthday, list: MutableList<Birthday>): Boolean {
    var c = 0
    for (x in list) {
        if (x.month == b.month) {
            c = c + 1
        }
    }
    return c == 1
}

/**
 * Auto-generated from Mochi
 * @param b Birthday
 * @param list MutableList<Birthday>
 * @return Boolean
 */
fun dayUnique(b: Birthday, list: MutableList<Birthday>): Boolean {
    var c = 0
    for (x in list) {
        if (x.day == b.day) {
            c = c + 1
        }
    }
    return c == 1
}

/**
 * Auto-generated from Mochi
 * @param b Birthday
 * @param list MutableList<Birthday>
 * @return Boolean
 */
fun monthWithUniqueDay(b: Birthday, list: MutableList<Birthday>): Boolean {
    for (x in list) {
        if (x.month == b.month && dayUnique(x, list)) {
            return true
        }
    }
    return false
}

/**
 * Auto-generated from Mochi
 * @param b Birthday
 * @return String
 */
fun bstr(b: Birthday): String {
    val months = mutableListOf("", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")
    return months[b.month] + " " + b.day.toString()
}

fun main() {
    for (bd in choices) {
        if (!monthUnique(bd, choices)) {
            filtered = append(filtered, bd)
        }
    }
    var filtered2: MutableList<Birthday> = mutableListOf<Birthday>()
    for (bd in filtered) {
        if (!monthWithUniqueDay(bd, filtered)) {
            filtered2 = append(filtered2, bd)
        }
    }
    var filtered3: MutableList<Birthday> = mutableListOf<Birthday>()
    for (bd in filtered2) {
        if (dayUnique(bd, filtered2)) {
            filtered3 = append(filtered3, bd)
        }
    }
    var filtered4: MutableList<Birthday> = mutableListOf<Birthday>()
    for (bd in filtered3) {
        if (monthUnique(bd, filtered3)) {
            filtered4 = append(filtered4, bd)
        }
    }
    if (filtered4.size == 1) {
        println("Cheryl's birthday is " + bstr(filtered4[0]))
    }
    else {
        println("Something went wrong!")
    }
}
