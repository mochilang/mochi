// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
// Code generated from additive-primes.mochi

/**
 * Auto-generated from Mochi
 * @param n Int
 * @return Boolean
 */
fun isPrime(n: Int): Boolean {
    if (n < 2) {
        return false
    }
    if (n % 2 == 0) {
        return n == 2
    }
    if (n % 3 == 0) {
        return n == 3
    }
    var d = 5
    while (d * d <= n) {
        if (n % d == 0) {
            return false
        }
        d = d + 2
        if (n % d == 0) {
            return false
        }
        d = d + 4
    }
    return true
}

/**
 * Auto-generated from Mochi
 * @param n Int
 * @return Int
 */
fun sumDigits(n: Int): Int {
    var s = 0
    var x = n
    while (x > 0) {
        s = s + x % 10
        x = (((x).toDouble() / (10).toDouble())).toInt()
    }
    return s
}

/**
 * Auto-generated from Mochi
 * @param n Int
 * @return String
 */
fun pad(n: Int): String {
    if (n < 10) {
        return "  " + n.toString()
    }
    if (n < 100) {
        return " " + n.toString()
    }
    return n.toString()
}

/**
 * Auto-generated from Mochi
 */
fun main(): Unit {
    println("Additive primes less than 500:")
    var count = 0
    var line = ""
    var lineCount = 0
    var i = 2
    while (i < 500) {
        if (isPrime(i) && isPrime(sumDigits(i))) {
            count = count + 1
            line = line + pad(i) + "  "
            lineCount = lineCount + 1
            if (lineCount == 10) {
                println(line.substring(0, line.length - 2))
                line = ""
                lineCount = 0
            }
        }
        if (i > 2) {
            i = i + 2
        }
        else {
            i = i + 1
        }
    }
    if (lineCount > 0) {
        println(line.substring(0, line.length - 2))
    }
    println(count.toString() + " additive primes found.")
}

