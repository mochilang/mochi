// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
// Code generated from brazilian-numbers.mochi

/**
 * Auto-generated from Mochi
 * @param n Int
 * @param b Int
 * @return Boolean
 */
fun sameDigits(n: Int, b: Int): Boolean {
    var f = n % b
    n = (((n).toDouble() / (b).toDouble())).toInt()
    while (n > 0) {
        if (n % b != f) {
            return false
        }
        n = (((n).toDouble() / (b).toDouble())).toInt()
    }
    return true
}

/**
 * Auto-generated from Mochi
 * @param n Int
 * @return Boolean
 */
fun isBrazilian(n: Int): Boolean {
    if (n < 7) {
        return false
    }
    if (n % 2 == 0 && n >= 8) {
        return true
    }
    var b = 2
    while (b < n - 1) {
        if (sameDigits(n, b)) {
            return true
        }
        b = b + 1
    }
    return false
}

/**
 * Auto-generated from Mochi
 * @param n Int
 * @return Boolean
 */
fun isPrime(n: Int): Boolean {
    if (n < 2) {
        return false
    }
    if (n % 2 == 0) {
        return n == 2
    }
    if (n % 3 == 0) {
        return n == 3
    }
    var d = 5
    while (d * d <= n) {
        if (n % d == 0) {
            return false
        }
        d = d + 2
        if (n % d == 0) {
            return false
        }
        d = d + 4
    }
    return true
}

/**
 * Auto-generated from Mochi
 */
fun main(): Unit {
    var kinds = mutableListOf(" ", " odd ", " prime ")
    for (kind in kinds) {
        println("First 20" + kind + "Brazilian numbers:")
        var c = 0
        var n = 7
        while (true) {
            if (isBrazilian(n)) {
                println(n.toString() + " ")
                c = c + 1
                if (c == 20) {
                    println("\n")
                    break
                }
            }
            if (kind == " ") {
                n = n + 1
            }
            else
            if (kind == " odd ") {
                n = n + 2
            }
            else {
                while (true) {
                    n = n + 2
                    if (isPrime(n)) {
                        break
                    }
                }
            }
        }
    }
    var n = 7
    var c = 0
    while (c < 100000) {
        if (isBrazilian(n)) {
            c = c + 1
        }
        n = n + 1
    }
    println("The 100,000th Brazilian number: " + n - 1.toString())
}

