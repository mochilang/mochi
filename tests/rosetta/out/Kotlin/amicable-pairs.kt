// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
fun <T> append(list: MutableList<T>, item: T): MutableList<T> {
    val res = list.toMutableList()
    res.add(item)
    return res
}
// Code generated from amicable-pairs.mochi

/**
 * Auto-generated from Mochi
 * @param i Int
 * @return Int
 */
fun pfacSum(i: Int): Int {
    var sum = 0
    var p = 1
    while (p <= (i).toDouble() / (2).toDouble()) {
        if (i % p == 0) {
            sum = sum + p
        }
        p = p + 1
    }
    return sum
}

/**
 * Auto-generated from Mochi
 * @param n Int
 * @param width Int
 * @return String
 */
fun pad(n: Int, width: Int): String {
    var s = n.toString()
    while (s.length < width) {
        s = " " + s
    }
    return s
}

/**
 * Auto-generated from Mochi
 */
fun main(): Unit {
    var sums: MutableList<Int> = mutableListOf<Int>()
    var i = 0
    while (i < 20000) {
        sums = append(sums, 0)
        i = i + 1
    }
    i = 1
    while (i < 20000) {
        sums[i] = pfacSum(i)
        i = i + 1
    }
    println("The amicable pairs below 20,000 are:")
    var n = 2
    while (n < 19999) {
        val m = sums[n]
        if (m > n && m < 20000 && n == sums[m]) {
            println("  " + pad(n, 5) + " and " + pad(m, 5))
        }
        n = n + 1
    }
}

