// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
// Code generated from bioinformatics-base-count.mochi

val dna = "" + "CGTAAAAAATTACAACGTCCTTTGGCTATCTCTTAAACTCCTGCTAAATG" + "CTCGTGCTTTCCAATTATGTAAGCGTTCCGAGACGGGGTGGTCGATTCTG" + "AGGACAAAGGTCAAGATGGAGCGCATCGAACGCAATAAGGATCATTTGAT" + "GGGACGTTTCGTCGACAAAGTCTTGTTTCGAGAGTAACGGCTACCGTCTT" + "CGATTCTGCTTATAACACTATGTTCTTATGAAATGGATGTTCTGAGTTGG" + "TCAGTCCCAATGTGCGGGGTTTCTTTTAGTACGTCGGGAGTGGTATTATA" + "TTTAATTTTTCTATATAGCGATCTGTATTTAAGCAATTCATTTAGGTTAT" + "CGCCGCGATGCTCGGTTCGGACCGCCAAGCATCTGGCTCCACTGCTAGTG" + "TCCTAAATTTGAATGGCAAACACAAATAAGATTTAGCAATTCGTGTAGAC" + "GACCGGGGACTTGCATGATGGGAGCAGCTTTGTTAAACTACGAACGTAAT"

/**
 * Auto-generated from Mochi
 * @param s String
 * @param w Int
 * @return String
 */
fun padLeft(s: String, w: Int): String {
    var res = ""
    var n = w - s.length
    while (n > 0) {
        res = res + " "
        n = n - 1
    }
    return res + s
}

fun main() {
    println("SEQUENCE:")
    val le = dna.length
    var i = 0
    while (i < le) {
        var k = i + 50
        if (k > le) {
            k = le
        }
        println(padLeft(i.toString(), 5) + ": " + dna.substring(i, k))
        i = i + 50
    }
    var a = 0
    var c = 0
    var g = 0
    var t = 0
    var idx = 0
    while (idx < le) {
        val ch = dna.substring(idx, idx + 1)
        if (ch == "A") {
            a = a + 1
        }
        else {
            if (ch == "C") {
                c = c + 1
            }
            else {
                if (ch == "G") {
                    g = g + 1
                }
                else {
                    if (ch == "T") {
                        t = t + 1
                    }
                }
            }
        }
        idx = idx + 1
    }
    println("")
    println("BASE COUNT:")
    println("    A: " + padLeft(a.toString(), 3))
    println("    C: " + padLeft(c.toString(), 3))
    println("    G: " + padLeft(g.toString(), 3))
    println("    T: " + padLeft(t.toString(), 3))
    println("    ------")
    println("    Î£: " + le.toString())
    println("    ======")
}
