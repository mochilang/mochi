// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
// Code generated from catamorphism.mochi

val n = mutableListOf(1, 2, 3, 4, 5)

/**
 * Auto-generated from Mochi
 * @param a Int
 * @param b Int
 * @return Int
 */
fun add(a: Int, b: Int): Int {
    return a + b
}

/**
 * Auto-generated from Mochi
 * @param a Int
 * @param b Int
 * @return Int
 */
fun sub(a: Int, b: Int): Int {
    return a - b
}

/**
 * Auto-generated from Mochi
 * @param a Int
 * @param b Int
 * @return Int
 */
fun mul(a: Int, b: Int): Int {
    return a * b
}

/**
 * Auto-generated from Mochi
 * @param f (Int, Int) -> Int
 * @param xs MutableList<Int>
 * @return Int
 */
fun fold(f: (Int, Int) -> Int, xs: MutableList<Int>): Int {
    var r = xs[0]
    var i = 1
    while (i < xs.size) {
        r = f(r, xs[i])
        i = i + 1
    }
    return r
}

fun main() {
    println(fold({ a: Int, b: Int -> add(a, b) }, n))
    println(fold({ a: Int, b: Int -> sub(a, b) }, n))
    println(fold({ a: Int, b: Int -> mul(a, b) }, n))
}
