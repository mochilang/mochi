// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
fun <T> append(list: MutableList<T>, item: T): MutableList<T> {
    val res = list.toMutableList()
    res.add(item)
    return res
}

fun toDouble(v: Any?): Double = when (v) {
    is Double -> v
    is Int -> v.toDouble()
    is String -> v.toDouble()
    else -> 0.0
}
// Code generated from apply-a-callback-to-an-array-2.mochi

/**
 * Auto-generated from Mochi
 * @param xs MutableList<Int>
 * @param f (Int) -> Unit
 */
fun each(xs: MutableList<Int>, f: (Int) -> Unit): Unit {
    for (x in xs) {
        f(x)
    }
}

/**
 * Auto-generated from Mochi
 * @param xs MutableList<Int>
 * @param f (Int) -> Int
 * @return MutableList<Int>
 */
fun Map(xs: MutableList<Int>, f: (Int) -> Int): MutableList<Int> {
    var r: MutableList<Int> = mutableListOf<Int>()
    for (x in xs) {
        r = append(r, f(x))
    }
    return r
}

/**
 * Auto-generated from Mochi
 */
fun main(): Unit {
    val s: MutableList<Int> = mutableListOf(1, 2, 3, 4, 5)
    each(s, { i: Int -> println(toDouble(i) * toDouble(i).toString()) })
    println(Map(s, { i: Int -> toDouble(i) * toDouble(i) }).toString())
}

