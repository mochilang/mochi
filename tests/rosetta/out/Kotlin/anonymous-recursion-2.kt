// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
fun toDouble(v: Any?): Double = when (v) {
    is Double -> v
    is Int -> v.toDouble()
    is String -> v.toDouble()
    else -> 0.0
}
// Code generated from anonymous-recursion-2.mochi

/**
 * Auto-generated from Mochi
 * @param n Int
 * @return Int
 */
fun fib(n: Int): Int {
    if (n < 2) {
        return n
    }
    var a = 0
    var b = 1
    var i = 1
    while (i < n) {
        val t = a + b
        a = b
        b = t
        i = i + 1
    }
    return b
}

/**
 * Auto-generated from Mochi
 */
fun main(): Unit {
    for (i in mutableListOf(-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) {
        if (toDouble(i) < 0) {
            println("fib(" + i.toString() + ") returned error: negative n is forbidden")
        }
        else {
            println("fib(" + i.toString() + ") = " + fib(i).toString())
        }
    }
}

