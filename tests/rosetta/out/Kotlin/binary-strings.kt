// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
fun <T> append(list: MutableList<T>, item: T): MutableList<T> {
    val res = list.toMutableList()
    res.add(item)
    return res
}
// Code generated from binary-strings.mochi

var b: MutableList<Int> = mutableListOf(98, 105, 110, 97, 114, 121)

/**
 * Auto-generated from Mochi
 * @param n Int
 * @return String
 */
fun char(n: Int): String {
    val letters = "abcdefghijklmnopqrstuvwxyz"
    val idx = n - 97
    if (idx < 0 || idx >= letters.length) {
        return "?"
    }
    return letters.substring(idx, idx + 1)
}

/**
 * Auto-generated from Mochi
 * @param bs MutableList<Int>
 * @return String
 */
fun fromBytes(bs: MutableList<Int>): String {
    var s = ""
    var i = 0
    while (i < bs.size) {
        s = s + char(bs[i])
        i = i + 1
    }
    return s
}

fun main() {
    println(b.toString())
    var c: MutableList<Int> = b
    println(c.toString())
    println(b == c.toString())
    var d: MutableList<Int> = mutableListOf<Int>()
    var i = 0
    while (i < b.size) {
        d = append(d, b[i])
        i = i + 1
    }
    d[1] = 97
    d[4] = 110
    println(fromBytes(b))
    println(fromBytes(d))
    println(b.size == 0.toString())
    var z = append(b, 122)
    println(fromBytes(z))
    var sub = b.subList(1, 3)
    println(fromBytes(sub))
    var f: MutableList<Int> = mutableListOf<Int>()
    i = 0
    while (i < d.size) {
        val `val` = d[i]
        if (`val` == 110) {
            f = append(f, 109)
        }
        else {
            f = append(f, `val`)
        }
        i = i + 1
    }
    println(fromBytes(d) + " -> " + fromBytes(f))
    var rem: MutableList<Int> = mutableListOf<Int>()
    rem = append(rem, b[0])
    i = 3
    while (i < b.size) {
        rem = append(rem, b[i])
        i = i + 1
    }
    println(fromBytes(rem))
}
