// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
// Code generated from attractive-numbers.mochi

/**
 * Auto-generated from Mochi
 * @param n Int
 * @return Boolean
 */
fun isPrime(n: Int): Boolean {
    if (n < 2) {
        return false
    }
    if (n % 2 == 0) {
        return n == 2
    }
    if (n % 3 == 0) {
        return n == 3
    }
    var d = 5
    while (d * d <= n) {
        if (n % d == 0) {
            return false
        }
        d = d + 2
        if (n % d == 0) {
            return false
        }
        d = d + 4
    }
    return true
}

/**
 * Auto-generated from Mochi
 * @param n Int
 * @return Int
 */
fun countPrimeFactors(n: Int): Int {
    if (n == 1) {
        return 0
    }
    if (isPrime(n)) {
        return 1
    }
    var count = 0
    var f = 2
    while (true) {
        if (n % f == 0) {
            count = count + 1
            n = (n).toDouble() / (f).toDouble()
            if (n == 1) {
                return count
            }
            if (isPrime(n)) {
                f = n
            }
        }
        else
        if (f >= 3) {
            f = f + 2
        }
        else {
            f = 3
        }
    }
    return count
}

/**
 * Auto-generated from Mochi
 * @param n Int
 * @return String
 */
fun pad4(n: Int): String {
    var s = n.toString()
    while (s.length < 4) {
        s = " " + s
    }
    return s
}

/**
 * Auto-generated from Mochi
 */
fun main(): Unit {
    val max = 120
    println("The attractive numbers up to and including " + max.toString() + " are:")
    var count = 0
    var line = ""
    var lineCount = 0
    var i = 1
    while (i <= max) {
        val c = countPrimeFactors(i)
        if (isPrime(c)) {
            line = line + pad4(i)
            count = count + 1
            lineCount = lineCount + 1
            if (lineCount == 20) {
                println(line)
                line = ""
                lineCount = 0
            }
        }
        i = i + 1
    }
    if (lineCount > 0) {
        println(line)
    }
}

