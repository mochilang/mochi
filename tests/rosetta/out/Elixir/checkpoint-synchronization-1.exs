# Generated by Mochi compiler v0.10.26 on 2025-07-16T14:09:14Z
defmodule Main do
  def main do
    # partList :: list(String.t())
    partList = ["A", "B", "C", "D"]
    _ = partList
    # nAssemblies :: integer()
    nAssemblies = 3
    _ = nAssemblies

    for cycle <- 1..(nAssemblies + 1 - 1) do
      IO.puts("begin assembly cycle " <> to_string(cycle))

      for p <- partList do
        IO.inspect(p <> " worker begins part")
      end

      for p <- partList do
        IO.inspect(p <> " worker completes part")
      end

      IO.puts(("assemble.  cycle " <> to_string(cycle)) <> " complete")
    end
  end
end

Main.main()
