# Generated by Mochi compiler v0.10.26 on 2025-07-16T12:46:24Z
defmodule Main do
  @spec toBin(integer()) :: String.t()
  def toBin(n) do
    try do
      if n == 0 do
        throw({:return, "0"})
      end

      bits = ""
      _ = bits
      x = n
      _ = x

      t1 = fn t1, bits, x ->
        try do
          if x > 0 do
            bits = to_string(rem(x, 2)) + bits
            x = String.to_integer(x / 2)
            t1.(t1, bits, x)
          else
            {:ok, bits, x}
          end
        catch
          :break ->
            {:ok, bits, x}
        end
      end

      {_, bits, x} = t1.(t1, bits, x)
      _ = bits
      _ = x
      throw({:return, bits})
    catch
      {:return, v} -> v
    end
  end

  def main do
    for i <- 0..(16 - 1) do
      IO.puts(toBin(i))
    end
  end
end

Main.main()
