# Generated by Mochi compiler v0.10.30 on 2025-07-19T02:53:12Z
defmodule Main do
  def main do
    # res :: list(any())
    res = _lookup_host("www.kame.net")
    # addrs :: any()
    addrs = Enum.at(res, 0)
    # err :: any()
    err = Enum.at(res, 1)

    if err == nil do
      IO.puts(to_string(addrs))
    else
      IO.inspect(err)
    end
  end

  defp _lookup_host(host) do
    case :inet.gethostbyname(String.to_charlist(host)) do
      {:ok, {:hostent, _, _, _, _, addrs}} ->
        ips = Enum.map(addrs, fn a -> :inet.ntoa(a) |> List.to_string() end)
        [ips, nil]

      {:error, reason} ->
        [nil, reason]
    end
  end
end

Main.main()
