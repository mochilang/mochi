# Generated by Mochi compiler v0.10.26 on 2025-07-16T12:44:47Z
defmodule Main do
  @spec fib(integer()) :: integer()
  def fib(n) do
    try do
      if n < 2 do
        throw({:return, n})
      end

      a = 0
      _ = a
      b = 1
      _ = b
      i = 1
      _ = i

      t1 = fn t1, a, b, i ->
        try do
          if i < n do
            t = a + b
            a = b
            b = t
            i = i + 1
            t1.(t1, a, b, i)
          else
            {:ok, a, b, i}
          end
        catch
          :break ->
            {:ok, a, b, i}
        end
      end

      {_, a, b, i} = t1.(t1, a, b, i)
      _ = a
      _ = b
      _ = i
      throw({:return, b})
    catch
      {:return, v} -> v
    end
  end

  @spec main() :: nil
  def main() do
    try do
      for i <- [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10] do
        if i < 0 do
          IO.puts(("fib(" <> to_string(i)) <> ") returned error: negative n is forbidden")
        else
          IO.puts((("fib(" <> to_string(i)) <> ") = ") <> to_string(fib(i)))
        end
      end
    catch
      {:return, v} -> v
    end
  end

  def main do
    main()
  end
end

Main.main()
