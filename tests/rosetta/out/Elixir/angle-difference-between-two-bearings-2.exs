# Generated by Mochi compiler v0.10.26 on 2025-07-16T12:44:40Z
defmodule Main do
  @spec angleDiff(float(), float()) :: float()
  def angleDiff(b1, b2) do
    try do
      diff = b2 - b1
      throw({:return, rem(rem(diff, 360) + 360 + 180, 360) - 180})
    catch
      {:return, v} -> v
    end
  end

  def main do
    # testCases :: list(list(float()))
    testCases = [
      [20, 45],
      [0 - 45, 45],
      [0 - 85, 90],
      [0 - 95, 90],
      [0 - 45, 125],
      [0 - 45, 145],
      [29.4803, 0 - 88.6381],
      [0 - 78.3251, 0 - 159.036],
      [0 - 70099.74233810938, 29840.67437876723],
      [0 - 165_313.6666297357, 33693.9894517456],
      [1174.8380510598456, 0 - 154_146.66490124757],
      [60175.77306795546, 42213.07192354373]
    ]

    _ = testCases

    for tc <- testCases do
      IO.inspect(angleDiff(Enum.at(tc, 0), Enum.at(tc, 1)))
    end
  end
end

Main.main()
