# Generated by Mochi compiler v0.10.26 on 2025-07-16T12:49:38Z
defmodule Main do
  @spec accumulator(any()) :: (any() -> nil)
  def accumulator(sum) do
    try do
      store = [sum]
      _ = store

      add = fn nv ->
        store = Map.put(store, 0, Enum.at(store, 0) + nv)
        throw({:return, Enum.at(store, 0)})
      end

      throw({:return, add})
    catch
      {:return, v} -> v
    end
  end

  @spec main() :: nil
  def main() do
    try do
      x = accumulator(1)
      x(5)
      accumulator(3)
      IO.puts(to_string(x(2.3)))
    catch
      {:return, v} -> v
    end
  end

  def main do
    main()
  end
end

Main.main()
