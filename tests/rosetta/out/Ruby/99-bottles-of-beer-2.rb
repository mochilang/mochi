# Generated by Mochi compiler v0.10.26 on 2025-07-16T09:43:15Z
def _joinStrings(parts, sep)
  raise 'join expects list' unless parts.is_a?(Array)
  parts.map(&:to_s).join(sep)
end
def _sliceString(s, i, j)
  start = i
  finish = j
  chars = s.chars
  n = chars.length
  start += n if start < 0
  finish += n if finish < 0
  start = 0 if start < 0
  finish = n if finish > n
  finish = start if finish < start
  chars[start...finish].join
end

def fields(s)
	words = []
	cur = ""
	i = 0
	while (i < (s).length)
		ch = _sliceString(s, i, (i + 1))
		if (((ch == " ") || (ch == "\n")) || (ch == "\t"))
			if ((cur).length > 0)
				words = (words + [cur])
				cur = ""
			end
		else
			cur = (cur + ch)
		end
		i = (i + 1)
	end
	if ((cur).length > 0)
		words = (words + [cur])
	end
	return words
end

def join(xs, sep)
	res = ""
	i = 0
	while (i < (xs).length)
		if (i > 0)
			res = (res + sep)
		end
		res = (res + xs[i])
		i = (i + 1)
	end
	return res
end

def numberName(n)
	small = ["no", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"]
	tens = ["ones", "ten", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety"]
	if (n < 0)
		return ""
	end
	if (n < 20)
		return small[n]
	end
	if (n < 100)
		t = tens[((n / 10))]
		s = (n % 10)
		if (s > 0)
			t = ((t + " ") + small[s])
		end
		return t
	end
	return ""
end

def pluralizeFirst(s, n)
	if (n == 1)
		return s
	end
	w = fields(s)
	if ((w).length > 0)
		w[0] = (w[0] + "s")
	end
	return _joinStrings(w, " ")
end

def randInt(seed, n)
	_next = ((((seed * 1664525) + 1013904223)) % 2147483647)
	return (_next % n)
end

def slur(p, d)
	if ((p).length <= 2)
		return p
	end
	a = []
	i = 1
	while (i < ((p).length - 1))
		a = (a + [_sliceString(p, i, (i + 1))])
		i = (i + 1)
	end
	idx = ((a).length - 1)
	seed = d
	while (idx >= 1)
		seed = ((((seed * 1664525) + 1013904223)) % 2147483647)
		if ((seed % 100) >= d)
			j = (seed % ((idx + 1)))
			tmp = a[idx]
			a[idx] = a[j]
			a[j] = tmp
		end
		idx = (idx - 1)
	end
	s = _sliceString(p, 0, 1)
	k = 0
	while (k < (a).length)
		s = (s + a[k])
		k = (k + 1)
	end
	s = (s + _sliceString(p, ((p).length - 1), (p).length))
	w = fields(s)
	return _joinStrings(w, " ")
end

def main()
	i = 99
	while (i > 0)
		puts(((((slur(numberName(i), i) + " ") + pluralizeFirst(slur("bottle of", i), i)) + " ") + slur("beer on the wall", i)))
		puts(((((slur(numberName(i), i) + " ") + pluralizeFirst(slur("bottle of", i), i)) + " ") + slur("beer", i)))
		puts(((((slur("take one", i) + " ") + slur("down", i)) + " ") + slur("pass it around", i)))
		puts(((((slur(numberName((i - 1)), i) + " ") + pluralizeFirst(slur("bottle of", i), (i - 1))) + " ") + slur("beer on the wall", i)))
		i = (i - 1)
	end
end

main()
