# Generated by Mochi compiler v0.10.26 on 2025-07-16T12:22:08Z
Complex = Struct.new(:re, :im, keyword_init: true)

def add(a, b)
	return Complex.new(re: (a.re + b.re), im: (a.im + b.im))
end

def mul(a, b)
	return Complex.new(re: ((a.re * b.re) - (a.im * b.im)), im: ((a.re * b.im) + (a.im * b.re)))
end

def neg(a)
	return Complex.new(re: (-a.re), im: (-a.im))
end

def inv(a)
	denom = ((a.re * a.re) + (a.im * a.im))
	return Complex.new(re: (a.re / denom), im: ((-a.im) / denom))
end

def conj(a)
	return Complex.new(re: a.re, im: (-a.im))
end

def cstr(a)
	s = ("(" + (a.re).to_s)
	if (a.im >= 0)
		s = (((s + "+") + (a.im).to_s) + "i)")
	else
		s = ((s + (a.im).to_s) + "i)")
	end
	return s
end

$a = Complex.new(re: 1.0, im: 1.0)
$b = Complex.new(re: 3.14159, im: 1.25)
puts(("a:       " + cstr($a)))
puts(("b:       " + cstr($b)))
puts(("a + b:   " + cstr(add($a, $b))))
puts(("a * b:   " + cstr(mul($a, $b))))
puts(("-a:      " + cstr(neg($a))))
puts(("1 / a:   " + cstr(inv($a))))
puts(("aÌ…:       " + cstr(conj($a))))
