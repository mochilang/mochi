# Generated by Mochi compiler v0.10.26 on 2025-07-16T09:43:04Z
def validComb(a, b, c, d, e, f, g)
	square1 = (a + b)
	square2 = ((b + c) + d)
	square3 = ((d + e) + f)
	square4 = (f + g)
	return (((square1 == square2) && (square2 == square3)) && (square3 == square4))
end

def isUnique(a, b, c, d, e, f, g)
	nums = [a, b, c, d, e, f, g]
	i = 0
	while (i < (nums).length)
		j = (i + 1)
		while (j < (nums).length)
			if (nums[i] == nums[j])
				return false
			end
			j = (j + 1)
		end
		i = (i + 1)
	end
	return true
end

def getCombs(low, high, unique)
	valid = []
	count = 0
	(low...((high + 1))).each do |b|
		(low...((high + 1))).each do |c|
			(low...((high + 1))).each do |d|
				s = ((b + c) + d)
				(low...((high + 1))).each do |e|
					(low...((high + 1))).each do |f|
						a = (s - b)
						g = (s - f)
						if ((a < low) || (a > high))
							next
						end
						if ((g < low) || (g > high))
							next
						end
						if (((d + e) + f) != s)
							next
						end
						if ((f + g) != s)
							next
						end
						if ((!unique) || isUnique(a, b, c, d, e, f, g))
							valid = (valid + [[a, b, c, d, e, f, g]])
							count = (count + 1)
						end
					end
				end
			end
		end
	end
	return {"count" => count, "list" => valid}
end

$r1 = getCombs(1, 7, true)
puts((($r1["count"]).to_s + " unique solutions in 1 to 7"))
puts($r1["list"])
$r2 = getCombs(3, 9, true)
puts((($r2["count"]).to_s + " unique solutions in 3 to 9"))
puts($r2["list"])
$r3 = getCombs(0, 9, false)
puts((($r3["count"]).to_s + " non-unique solutions in 0 to 9"))
