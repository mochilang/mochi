# Generated by Mochi compiler v0.10.26 on 2025-07-16T09:43:33Z
def _sliceString(s, i, j)
  start = i
  finish = j
  chars = s.chars
  n = chars.length
  start += n if start < 0
  finish += n if finish < 0
  start = 0 if start < 0
  finish = n if finish > n
  finish = start if finish < start
  chars[start...finish].join
end
def _splitString(s, sep)
  raise 'split expects string' unless s.is_a?(String)
  s.split(sep)
end

def split(s, sep)
	parts = []
	cur = ""
	i = 0
	while (i < (s).length)
		if ((((sep).length > 0) && ((i + (sep).length) <= (s).length)) && (_sliceString(s, i, (i + (sep).length)) == sep))
			parts = (parts + [cur])
			cur = ""
			i = (i + (sep).length)
		else
			cur = (cur + _sliceString(s, i, (i + 1)))
			i = (i + 1)
		end
	end
	parts = (parts + [cur])
	return parts
end

def rstripEmpty(words)
	n = (words).length
	while ((n > 0) && (words[(n - 1)] == ""))
		n = (n - 1)
	end
	return words[0...n]
end

def spaces(n)
	out = ""
	i = 0
	while (i < n)
		out = (out + " ")
		i = (i + 1)
	end
	return out
end

def pad(word, width, align)
	diff = (width - (word).length)
	if (align == 0)
		return (word + spaces(diff))
	end
	if (align == 2)
		return (spaces(diff) + word)
	end
	left = ((diff / 2))
	right = (diff - left)
	return ((spaces(left) + word) + spaces(right))
end

def newFormatter(text)
	lines = _splitString(text, "\n")
	fmtLines = []
	width = []
	i = 0
	while (i < (lines).length)
		if ((lines[i]).length == 0)
			i = (i + 1)
			next
		end
		words = rstripEmpty(_splitString(lines[i], "$"))
		fmtLines = (fmtLines + [words])
		j = 0
		while (j < (words).length)
			wlen = (words[j]).length
			if (j == (width).length)
				width = (width + [wlen])
			elsif (wlen > width[j])
				width[j] = wlen
			end
			j = (j + 1)
		end
		i = (i + 1)
	end
	return {"text" => fmtLines, "width" => width}
end

def printFmt(f, align)
	lines = f["text"]
	width = f["width"]
	i = 0
	while (i < (lines).length)
		words = lines[i]
		line = ""
		j = 0
		while (j < (words).length)
			line = ((line + pad(words[j], width[j], align)) + " ")
			j = (j + 1)
		end
		puts(line)
		i = (i + 1)
	end
	puts("")
end

$text = ((((("Given$a$text$file$of$many$lines,$where$fields$within$a$line\n" + "are$delineated$by$a$single$'dollar'$character,$write$a$program\n") + "that$aligns$each$column$of$fields$by$ensuring$that$words$in$each\n") + "column$are$separated$by$at$least$one$space.\n") + "Further,$allow$for$each$word$in$a$column$to$be$either$left\n") + "justified,$right$justified,$or$center$justified$within$its$column.")
$f = newFormatter($text)
printFmt($f, 0)
printFmt($f, 1)
printFmt($f, 2)
