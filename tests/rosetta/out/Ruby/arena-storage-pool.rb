# Generated by Mochi compiler v0.10.26 on 2025-07-16T09:43:44Z
def poolPut(p, x)
	return (p + [x])
end

def poolGet(p)
	if ((p).length == 0)
		puts("pool empty")
		return {"pool" => p, "val" => 0}
	end
	idx = ((p).length - 1)
	v = p[idx]
	p = p[0...idx]
	return {"pool" => p, "val" => v}
end

def clearPool(p)
	return []
end

def main()
	pool = []
	i = 1
	j = 2
	puts(((i + j)).to_s)
	pool = poolPut(pool, i)
	pool = poolPut(pool, j)
	i = 0
	j = 0
	res1 = poolGet(pool)
	pool = res1["pool"]
	i = res1["val"]
	res2 = poolGet(pool)
	pool = res2["pool"]
	j = res2["val"]
	i = 4
	j = 5
	puts(((i + j)).to_s)
	pool = poolPut(pool, i)
	pool = poolPut(pool, j)
	i = 0
	j = 0
	pool = clearPool(pool)
	res3 = poolGet(pool)
	pool = res3["pool"]
	i = res3["val"]
	res4 = poolGet(pool)
	pool = res4["pool"]
	j = res4["val"]
	i = 7
	j = 8
	puts(((i + j)).to_s)
end

main()
