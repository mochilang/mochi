// Generated by Mochi compiler v0.10.26 on 2025-07-16T11:36:11Z
program AveragesMedian2;
{$mode objfpc}
{$modeswitch nestedprocvars}
uses SysUtils, fgl, fphttpclient, Classes, Variants, fpjson, jsonparser, fpjsonrtti;

type
  generic TArray<T> = array of T;

function sel(list: specialize TArray<double>; k: integer): double;
var
  i: integer;
  j: integer;
  minIndex: integer;
  tmp: Variant;
begin
  i := 0;
  while (i <= k) do
  begin
    minIndex := i;
    j := i + 1;
    while (j < Length(list)) do
    begin
      if (specialize _indexList<integer>(list, j) < specialize _indexList<integer>(list, minIndex)) then ;
      j := j + 1;
    end;
    tmp := specialize _indexList<integer>(list, i);
    list[i] := specialize _indexList<integer>(list, minIndex);
    list[minIndex] := tmp;
    i := i + 1;
  end;
  result := specialize _indexList<integer>(list, k);
  exit;
end;

function median(a: specialize TArray<double>): double;
var
  arr: Variant;
  half: integer;
  med: Variant;
begin
  arr := a;
  half := Trunc(Length(arr) div 2);
  med := sel(arr, half);
  if (Length(arr) mod 2 = 0) then ;
  result := med;
  exit;
end;

generic function _indexList<T>(arr: specialize TArray<T>; i: integer): T;
begin
  if i < 0 then i := Length(arr) + i;
  if (i < 0) or (i >= Length(arr)) then
    raise Exception.Create('index out of range');
  Result := arr[i];
end;

begin
  writeln(FloatToStr(median(specialize TArray<double>([3, 1, 4, 1]))));
  writeln(FloatToStr(median(specialize TArray<double>([3, 1, 4, 1, 5]))));
end.
