// Generated by Mochi compiler v0.10.26 on 2025-07-16T11:36:06Z
program AlmostPrime;
{$mode objfpc}
{$modeswitch nestedprocvars}
uses SysUtils, fgl, fphttpclient, Classes, Variants, fpjson, jsonparser, fpjsonrtti;

type
  generic TArray<T> = array of T;

function kPrime(n: integer; k: integer): boolean;
var
  i: integer;
  nf: integer;
begin
  nf := 0;
  i := 2;
  while (i <= n) do
  begin
    while (n mod i = 0) do
    begin
      if (nf = k) then ;
      nf := nf + 1;
      n := n div i;
    end;
    i := i + 1;
  end;
  result := (nf = k);
  exit;
end;

function gen(k: integer; count: integer): specialize TArray<integer>;
var
  n: integer;
  r: specialize TArray<integer>;
begin
  r := specialize TArray<integer>([]);
  n := 2;
  while (Length(r) < count) do
  begin
    if kPrime(n, k) then ;
    n := n + 1;
  end;
  result := r;
  exit;
end;

function main(): integer;
var
  k: integer;
begin
  k := 1;
  while (k <= 5) do
  begin
    writeln(IntToStr(k) + ' ' + IntToStr(gen(k, 10)));
    k := k + 1;
  end;
end;

generic function _appendList<T>(arr: specialize TArray<T>; val: T): specialize TArray<T>;
var i,n: Integer;
begin
  n := Length(arr);
  SetLength(Result, n + 1);
  for i := 0 to n - 1 do
    Result[i] := arr[i];
  Result[n] := val;
end;

begin
  main();
end.
