// Generated by Mochi compiler v0.10.30 on 1970-01-01T00:00:00Z
program AccumulatorFactory;
{$mode objfpc}
{$modeswitch nestedprocvars}
uses SysUtils, fgl, Classes, Variants;

type
  generic TArray<T> = array of T;
type
  TFunc0 = function(p0: any): integer is nested;

generic function _indexList<T>(arr: specialize TArray<T>; i: integer): T;
begin
  if i < 0 then i := Length(arr) + i;
  if (i < 0) or (i >= Length(arr)) then
    raise Exception.Create('index out of range');
  Result := arr[i];
end;


function accumulator(sum: any): TFunc0;
var
  store: specialize TArray<Variant>;
begin
  store := specialize TArray<Variant>([sum]);
  result := add;
  exit;
end;

procedure main();
var
  x: Variant;
begin
  x := accumulator(1);
  x(5);
  accumulator(3);
  writeln(IntToStr(x(2.3)));
end;

begin
  main();
end.
