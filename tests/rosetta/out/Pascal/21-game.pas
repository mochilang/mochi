// Generated by Mochi compiler v0.10.26 on 2025-07-16T10:01:04Z
program _1Game;
{$mode objfpc}
{$modeswitch nestedprocvars}
uses SysUtils, fgl, fphttpclient, Classes, Variants, fpjson, jsonparser, fpjsonrtti;

type
  generic TArray<T> = array of T;

function parseIntStr(str: string): integer;
var
  _tmp0: specialize TFPGMap<string, integer>;
  digits: specialize TFPGMap<Variant, Variant>;
  i: integer;
  n: integer;
  neg: boolean;
begin
  i := 0;
  neg := False;
  if ((Length(str) > 0) and (_sliceString(str, 0, 1) = '-')) then
  begin
    neg := True;
    i := 1;
  end;
  n := 0;
  _tmp0 := specialize TFPGMap<string, integer>.Create;
  _tmp0.AddOrSetData('0', 0);
  _tmp0.AddOrSetData('1', 1);
  _tmp0.AddOrSetData('2', 2);
  _tmp0.AddOrSetData('3', 3);
  _tmp0.AddOrSetData('4', 4);
  _tmp0.AddOrSetData('5', 5);
  _tmp0.AddOrSetData('6', 6);
  _tmp0.AddOrSetData('7', 7);
  _tmp0.AddOrSetData('8', 8);
  _tmp0.AddOrSetData('9', 9);
  digits := _tmp0;
  while (i < Length(str)) do
  begin
    n := n * 10 + digits[_sliceString(str, i, i + 1)];
    i := i + 1;
  end;
  if neg then ;
  result := n;
  exit;
end;

function main(): integer;
var
  choice: integer;
  computer: Variant;
  done: boolean;
  i: integer;
  line: Variant;
  num: function(p0: Variant): integer is nested;
  round: integer;
  total: integer;
begin
  total := 0;
  computer := (now() mod 2 = 0);
  writeln('Enter q to quit at any time
');
  if computer then
  begin
    writeln('The computer will choose first');
  end else
  begin
    writeln('You will choose first');
  end;
  writeln('

Running total is now 0

');
  round := 1;
  done := False;
  while not done do
  begin
    writeln('ROUND ' + IntToStr(round) + ':

');
    i := 0;
    while ((i < 2) and not done) do
    begin
      if computer then
      begin
        choice := 0;
        if (total < 18) then
        begin
          choice := now() mod 3 + 1;
        end else
        begin
          choice := 21 - total;
        end;
        total := total + choice;
        writeln('The computer chooses ' + IntToStr(choice));
        writeln('Running total is now ' + IntToStr(total));
        if (total = 21) then
        begin
          writeln('
So, commiserations, the computer has won!');
          done := True;
        end;
      end else
      begin
        while True do
        begin
          writeln('Your choice 1 to 3 : ');
          line := input();
          if ((line = 'q') or (line = 'Q')) then
          begin
            writeln('OK, quitting the game');
            done := True;
            break;
          end;
          num := parseIntStr(line);
          if ((num < 1) or (num > 3)) then
          begin
            if (total + num > 21) then
            begin
              writeln('Too big, try again');
            end else
            begin
              writeln('Out of range, try again');
            end;
            continue;
          end;
          if (total + num > 21) then
          begin
            writeln('Too big, try again');
            continue;
          end;
          total := total + num;
          writeln('Running total is now ' + IntToStr(total));
          break;
        end;
        if (total = 21) then
        begin
          writeln('
So, congratulations, you''ve won!');
          done := True;
        end;
      end;
      writeln('
');
      computer := not computer;
      i := i + 1;
    end;
    round := round + 1;
  end;
end;

function _sliceString(s: string; i, j: integer): string;
var start_, end_, n: integer;
begin
  start_ := i;
  end_ := j;
  n := Length(s);
  if start_ < 0 then start_ := n + start_;
  if end_ < 0 then end_ := n + end_;
  if start_ < 0 then start_ := 0;
  if end_ > n then end_ := n;
  if end_ < start_ then end_ := start_;
  Result := Copy(s, start_ + 1, end_ - start_);
end;

begin
  main();
end.
