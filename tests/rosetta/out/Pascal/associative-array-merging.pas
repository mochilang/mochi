// Generated by Mochi compiler v0.10.26 on 2025-07-16T10:01:20Z
program AssociativeArrayMerging;
{$mode objfpc}
{$modeswitch nestedprocvars}
uses SysUtils, fgl, fphttpclient, Classes, Variants, fpjson, jsonparser, fpjsonrtti;

type
  generic TArray<T> = array of T;

function merge(base: specialize TFPGMap<string, any>; update: specialize TFPGMap<string, any>): specialize TFPGMap<string, any>;
var
  _tmp0: specialize TFPGMap<string, integer>;
  _tmp1: integer;
  _tmp2: integer;
  _result: specialize TFPGMap<string, integer>;
begin
  _tmp0 := specialize TFPGMap<string, integer>.Create;
  _result := _tmp0;
  for _tmp1 := 0 to base.Count - 1 do
  begin
    k := base.Keys[_tmp1];
    _result[k] := base.KeyData[k];
  end;
  for _tmp2 := 0 to update.Count - 1 do
  begin
    k := update.Keys[_tmp2];
    _result[k] := update.KeyData[k];
  end;
  result := _result;
  exit;
end;

function main(): integer;
var
  _tmp3: specialize TFPGMap<string, Variant>;
  _tmp4: specialize TFPGMap<string, Variant>;
  base: specialize TFPGMap<string, integer>;
  _result: specialize TFPGMap<string, integer>;
  update: specialize TFPGMap<string, integer>;
begin
  _tmp3 := specialize TFPGMap<string, Variant>.Create;
  _tmp3.AddOrSetData('name', 'Rocket Skates');
  _tmp3.AddOrSetData('price', 12.75);
  _tmp3.AddOrSetData('color', 'yellow');
  base := _tmp3;
  _tmp4 := specialize TFPGMap<string, Variant>.Create;
  _tmp4.AddOrSetData('price', 15.25);
  _tmp4.AddOrSetData('color', 'red');
  _tmp4.AddOrSetData('year', 1974);
  update := _tmp4;
  _result := merge(base, update);
  writeln(_result);
end;

begin
  main();
end.
