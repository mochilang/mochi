// Generated by Mochi compiler v0.10.26 on 2025-07-16T11:36:23Z
program ChineseZodiac;
{$mode objfpc}
{$modeswitch nestedprocvars}
uses SysUtils, fgl, fphttpclient, Classes, Variants, fpjson, jsonparser, fpjsonrtti;

type
  generic TArray<T> = array of T;
type Info = record
  animal: string;
  yinYang: string;
  element: string;
  stemBranch: string;
  cycle: integer;
end;

function cz(yr: integer; animal: specialize TArray<string>; yinYang: specialize TArray<string>; element: specialize TArray<string>; sc: specialize TArray<string>; bc: specialize TArray<string>): Info;
var
  _tmp0: Info;
  branch: Variant;
  sb: Variant;
  stem: Variant;
  y: Variant;
begin
  y := yr - 4;
  stem := y mod 10;
  branch := y mod 12;
  sb := specialize _indexList<integer>(sc, stem) + specialize _indexList<integer>(bc, branch);
  _tmp0.animal := Trunc(specialize _indexList<string>(animal, branch));
  _tmp0.yinYang := Trunc(specialize _indexList<string>(yinYang, stem mod 2));
  _tmp0.element := Trunc(specialize _indexList<string>(element, Trunc(stem div 2)));
  _tmp0.stemBranch := sb;
  _tmp0.cycle := y mod 60 + 1;
  result := _tmp0;
  exit;
end;

generic function _indexList<T>(arr: specialize TArray<T>; i: integer): T;
begin
  if i < 0 then i := Length(arr) + i;
  if (i < 0) or (i >= Length(arr)) then
    raise Exception.Create('index out of range');
  Result := arr[i];
end;

var
  animal: specialize TArray<string>;
  branchChArr: specialize TArray<string>;
  element: specialize TArray<string>;
  r: Variant;
  stemChArr: specialize TArray<string>;
  yinYang: specialize TArray<string>;
  yr: Variant;

begin
  animal := specialize TArray<string>(['Rat', 'Ox', 'Tiger', 'Rabbit', 'Dragon', 'Snake', 'Horse', 'Goat', 'Monkey', 'Rooster', 'Dog', 'Pig']);
  yinYang := specialize TArray<string>(['Yang', 'Yin']);
  element := specialize TArray<string>(['Wood', 'Fire', 'Earth', 'Metal', 'Water']);
  stemChArr := specialize TArray<string>(['甲', '乙', '丙', '丁', '戊', '己', '庚', '辛', '壬', '癸']);
  branchChArr := specialize TArray<string>(['子', '丑', '寅', '卯', '辰', '巳', '午', '未', '申', '酉', '戌', '亥']);
  for yr in specialize TArray<integer>([1935, 1938, 1968, 1972, 1976]) do
  begin
    r := cz(yr, animal, yinYang, element, stemChArr, branchChArr);
    writeln(IntToStr(yr) + ': ' + r.element + ' ' + r.animal + ', ' + r.yinYang + ', Cycle year ' + IntToStr(r.cycle) + ' ' + r.stemBranch);
  end;
end.
