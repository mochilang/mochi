// Generated by Mochi compiler v0.10.26 on 2025-07-16T11:36:18Z
program CallAnObjectMethod2;
{$mode objfpc}
{$modeswitch nestedprocvars}
uses SysUtils, fgl, fphttpclient, Classes, Variants, fpjson, jsonparser, fpjsonrtti;

type
  generic TArray<T> = array of T;
type
  TFunc0 = function(): integer is nested;

type Box = record
  Contents: string;
  secret: integer;
end;

function newFactory(): specialize TArray<TFunc0>;
var
  sn: integer;
begin
  sn := 0;
  result := specialize TArray<function(): integer is nested>([New, Count]);
  exit;
end;

generic function _indexList<T>(arr: specialize TArray<T>; i: integer): T;
begin
  if i < 0 then i := Length(arr) + i;
  if (i < 0) or (i >= Length(arr)) then
    raise Exception.Create('index out of range');
  Result := arr[i];
end;

var
  Count: procedure() is nested;
  New: procedure() is nested;
  funcs: specialize TArray<procedure() is nested>;

begin
  funcs := newFactory();
  New := specialize _indexList<procedure() is nested>(funcs, 0);
  Count := specialize _indexList<procedure() is nested>(funcs, 1);
end.
