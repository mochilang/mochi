// Generated by Mochi compiler v0.10.26 on 2025-07-16T11:36:02Z
program _00Doors;
{$mode objfpc}
{$modeswitch nestedprocvars}
uses SysUtils, fgl, fphttpclient, Classes, Variants, fpjson, jsonparser, fpjsonrtti;

type
  generic TArray<T> = array of T;

generic function _appendList<T>(arr: specialize TArray<T>; val: T): specialize TArray<T>;
var i,n: Integer;
begin
  n := Length(arr);
  SetLength(Result, n + 1);
  for i := 0 to n - 1 do
    Result[i] := arr[i];
  Result[n] := val;
end;

generic function _indexList<T>(arr: specialize TArray<T>; i: integer): T;
begin
  if i < 0 then i := Length(arr) + i;
  if (i < 0) or (i >= Length(arr)) then
    raise Exception.Create('index out of range');
  Result := arr[i];
end;

var
  col: integer;
  doors: specialize TArray<Variant>;
  i: integer;
  idx: Variant;
  line: string;
  pass: integer;
  row: integer;

begin
  doors := specialize TArray<Variant>([]);
  for i := 0 to 100 - 1 do
  begin
    doors := specialize _appendList<Variant>(doors, False);
  end;
  for pass := 1 to 101 - 1 do
  begin
    idx := pass - 1;
    while (idx < 100) do
    begin
      doors[idx] := not specialize _indexList<Variant>(doors, idx);
      idx := idx + pass;
    end;
  end;
  for row := 0 to 10 - 1 do
  begin
    line := '';
    for col := 0 to 10 - 1 do
    begin
      idx := row * 10 + col;
      if specialize _indexList<Variant>(doors, idx) then
      begin
        line := line + '1';
      end else
      begin
        line := line + '0';
      end;
      if (col < 9) then ;
    end;
    writeln(line);
  end;
end.
