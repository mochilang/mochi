// Generated by Mochi compiler v0.10.26 on 2025-07-16T11:36:04Z
program AbundantDeficientAndPerfectNumberClassifications;
{$mode objfpc}
{$modeswitch nestedprocvars}
uses SysUtils, fgl, fphttpclient, Classes, Variants, fpjson, jsonparser, fpjsonrtti;

type
  generic TArray<T> = array of T;

function pfacSum(i: integer): integer;
var
  p: integer;
  sum: function(p0: Variant): double is nested;
begin
  sum := 0;
  p := 1;
  while (p <= i div 2) do
  begin
    if (i mod p = 0) then ;
    p := p + 1;
  end;
  result := sum;
  exit;
end;

function main(): integer;
var
  a: integer;
  d: integer;
  i: integer;
  j: Variant;
  pnum: integer;
begin
  d := 0;
  a := 0;
  pnum := 0;
  i := 1;
  while (i <= 20000) do
  begin
    j := pfacSum(i);
    if (j < i) then ;
    if (j = i) then ;
    if (j > i) then ;
    i := i + 1;
  end;
  writeln('There are ' + IntToStr(d) + ' deficient numbers between 1 and 20000');
  writeln('There are ' + IntToStr(a) + ' abundant numbers  between 1 and 20000');
  writeln('There are ' + IntToStr(pnum) + ' perfect numbers between 1 and 20000');
end;

begin
  main();
end.
