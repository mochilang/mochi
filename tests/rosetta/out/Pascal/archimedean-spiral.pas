// Generated by Mochi compiler v0.10.26 on 2025-07-16T11:36:08Z
program ArchimedeanSpiral;
{$mode objfpc}
{$modeswitch nestedprocvars}
uses SysUtils, fgl, fphttpclient, Classes, Variants, fpjson, jsonparser, fpjsonrtti;

type
  generic TArray<T> = array of T;

function sinApprox(x: double): double;
var
  denom: function(p0: Variant): integer is nested;
  n: integer;
  sum: function(p0: Variant): double is nested;
  term: Variant;
begin
  term := x;
  sum := x;
  n := 1;
  while (n <= 10) do
  begin
    denom := Double(2 * n * 2 * n + 1);
    term := -term * x * x div denom;
    sum := sum + term;
    n := n + 1;
  end;
  result := sum;
  exit;
end;

function cosApprox(x: double): double;
var
  denom: function(p0: Variant): integer is nested;
  n: integer;
  sum: function(p0: Variant): double is nested;
  term: Variant;
begin
  term := 1;
  sum := 1;
  n := 1;
  while (n <= 10) do
  begin
    denom := Double(2 * n - 1 * 2 * n);
    term := -term * x * x div denom;
    sum := sum + term;
    n := n + 1;
  end;
  result := sum;
  exit;
end;

var
  PI: double;
  a: double;
  b: double;
  centre: double;
  count: integer;
  degreesIncr: double;
  r: double;
  stop: double;
  theta: double;
  turns: double;
  width: double;
  x: double;
  y: double;

begin
  PI := 3.141592653589793;
  degreesIncr := 0.1 * PI / 180;
  turns := 2;
  stop := 360 * turns * 10 * degreesIncr;
  width := 600;
  centre := width div 2;
  a := 1;
  b := 20;
  theta := 0;
  count := 0;
  while (theta < stop) do
  begin
    r := a + b * theta;
    x := r * cosApprox(theta);
    y := r * sinApprox(theta);
    if (count mod 100 = 0) then ;
    theta := theta + degreesIncr;
    count := count + 1;
  end;
end.
