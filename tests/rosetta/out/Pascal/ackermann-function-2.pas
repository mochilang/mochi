// Generated by Mochi compiler v0.10.30 on 1970-01-01T00:00:00Z
program AckermannFunction2;
{$mode objfpc}
{$modeswitch nestedprocvars}
uses SysUtils, fgl, Classes, Variants;

type
  generic TArray<T> = array of T;

function pow(base: integer; exp: integer): integer;
var
  i: integer;
  _result: integer;
begin
  _result := 1;
  i := 0;
  while (i < exp) do
  begin
    _result := _result * base;
    i := i + 1;
  end;
  result := _result;
  exit;
end;

function ackermann2(m: integer; n: integer): integer;
begin
  if (m = 0) then ;
  if (m = 1) then ;
  if (m = 2) then ;
  if (m = 3) then ;
  if (n = 0) then ;
  result := ackermann2(m - 1, ackermann2(m, n - 1));
  exit;
end;

procedure main();
begin
  writeln('A(0, 0) = ' + IntToStr(ackermann2(0, 0)));
  writeln('A(1, 2) = ' + IntToStr(ackermann2(1, 2)));
  writeln('A(2, 4) = ' + IntToStr(ackermann2(2, 4)));
  writeln('A(3, 4) = ' + IntToStr(ackermann2(3, 4)));
end;

begin
  main();
end.
