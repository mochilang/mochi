// Generated by Mochi compiler v0.10.26 on 2025-07-16T11:36:19Z
program Carmichael3StrongPseudoprimes;
{$mode objfpc}
{$modeswitch nestedprocvars}
uses SysUtils, fgl, fphttpclient, Classes, Variants, fpjson, jsonparser, fpjsonrtti;

type
  generic TArray<T> = array of T;

function _mod(n: integer; m: integer): integer;
begin
  result := n mod m + m mod m;
  exit;
end;

function isPrime(n: integer): boolean;
var
  d: integer;
begin
  if (n < 2) then ;
  if (n mod 2 = 0) then ;
  if (n mod 3 = 0) then ;
  d := 5;
  while (d * d <= n) do
  begin
    if (n mod d = 0) then ;
    d := d + 2;
    if (n mod d = 0) then ;
    d := d + 4;
  end;
  result := True;
  exit;
end;

function pad(n: integer; width: integer): string;
var
  s: Variant;
begin
  s := IntToStr(n);
  while (Length(s) < width) do
  begin
    s := ' ' + s;
  end;
  result := s;
  exit;
end;

function carmichael(p1: integer): integer;
var
  c: Variant;
  p2: integer;
  p3: integer;
begin
  for h3 := 2 to p1 - 1 do
  begin
    for d := 1 to h3 + p1 - 1 do
    begin
      if ((h3 + p1 * p1 - 1 mod d = 0) and (_mod(-p1 * p1, h3) = d mod h3)) then
      begin
        p2 := 1 + p1 - 1 * h3 + p1 div d;
        if not isPrime(p2) then ;
        p3 := 1 + p1 * p2 div h3;
        if not isPrime(p3) then ;
        if (p2 * p3 mod p1 - 1 <> 1) then ;
        c := p1 * p2 * p3;
        writeln(pad(p1, 2) + '   ' + pad(p2, 4) + '   ' + pad(p3, 5) + '     ' + IntToStr(c));
      end;
    end;
  end;
end;

var
  p1: integer;

begin
  writeln('The following are Carmichael munbers for p1 <= 61:
');
  writeln('p1     p2      p3     product');
  writeln('==     ==      ==     =======');
  for p1 := 2 to 62 - 1 do
  begin
    if isPrime(p1) then ;
  end;
end.
