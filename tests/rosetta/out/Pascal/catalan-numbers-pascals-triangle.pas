// Generated by Mochi compiler v0.10.26 on 2025-07-16T10:01:37Z
program CatalanNumbersPascalsTriangle;
{$mode objfpc}
{$modeswitch nestedprocvars}
uses SysUtils, fgl, fphttpclient, Classes, Variants, fpjson, jsonparser, fpjsonrtti;

type
  generic TArray<T> = array of T;

generic function _appendList<T>(arr: specialize TArray<T>; val: T): specialize TArray<T>;
var i,n: Integer;
begin
  n := Length(arr);
  SetLength(Result, n + 1);
  for i := 0 to n - 1 do
    Result[i] := arr[i];
  Result[n] := val;
end;

generic function _indexList<T>(arr: specialize TArray<T>; i: integer): T;
begin
  if i < 0 then i := Length(arr) + i;
  if (i < 0) or (i >= Length(arr)) then
    raise Exception.Create('index out of range');
  Result := arr[i];
end;

var
  cat: specialize TArray<integer>;
  i: integer;
  j: Variant;
  n: integer;
  t: specialize TArray<integer>;

begin
  n := 15;
  t := specialize TArray<integer>([]);
  for _ := 0 to n + 2 - 1 do
  begin
    t := specialize _appendList<integer>(t, 0);
  end;
  t[1] := 1;
  for i := 1 to n + 1 - 1 do
  begin
    j := i;
    while (j > 1) do
    begin
      t[j] := specialize _indexList<integer>(t, j) + specialize _indexList<integer>(t, j - 1);
      j := j - 1;
    end;
    t[i + 1] := specialize _indexList<integer>(t, i);
    j := i + 1;
    while (j > 1) do
    begin
      t[j] := specialize _indexList<integer>(t, j) + specialize _indexList<integer>(t, j - 1);
      j := j - 1;
    end;
    cat := specialize _indexList<integer>(t, i + 1) - specialize _indexList<integer>(t, i);
    if (i < 10) then
    begin
      writeln(' ' + IntToStr(i) + ' : ' + IntToStr(cat));
    end else
    begin
      writeln(IntToStr(i) + ' : ' + IntToStr(cat));
    end;
  end;
end.
