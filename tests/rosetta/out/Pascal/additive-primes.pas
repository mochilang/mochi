// Generated by Mochi compiler v0.10.26 on 2025-07-16T11:36:05Z
program AdditivePrimes;
{$mode objfpc}
{$modeswitch nestedprocvars}
uses SysUtils, fgl, fphttpclient, Classes, Variants, fpjson, jsonparser, fpjsonrtti;

type
  generic TArray<T> = array of T;

function isPrime(n: integer): boolean;
var
  d: integer;
begin
  if (n < 2) then ;
  if (n mod 2 = 0) then ;
  if (n mod 3 = 0) then ;
  d := 5;
  while (d * d <= n) do
  begin
    if (n mod d = 0) then ;
    d := d + 2;
    if (n mod d = 0) then ;
    d := d + 4;
  end;
  result := True;
  exit;
end;

function sumDigits(n: integer): integer;
var
  s: integer;
  x: Variant;
begin
  s := 0;
  x := n;
  while (x > 0) do
  begin
    s := s + x mod 10;
    x := Trunc(x div 10);
  end;
  result := s;
  exit;
end;

function pad(n: integer): string;
begin
  if (n < 10) then ;
  if (n < 100) then ;
  result := IntToStr(n);
  exit;
end;

function main(): integer;
var
  count: function(p0: Variant): integer is nested;
  i: integer;
  line: string;
  lineCount: integer;
begin
  writeln('Additive primes less than 500:');
  count := 0;
  line := '';
  lineCount := 0;
  i := 2;
  while (i < 500) do
  begin
    if (isPrime(i) and isPrime(sumDigits(i))) then
    begin
      count := count + 1;
      line := line + pad(i) + '  ';
      lineCount := lineCount + 1;
      if (lineCount = 10) then
      begin
        writeln(_sliceString(line, 0, 0 + Length(line) - 2));
        line := '';
        lineCount := 0;
      end;
    end;
    if (i > 2) then
    begin
      i := i + 2;
    end else
    begin
      i := i + 1;
    end;
  end;
  if (lineCount > 0) then ;
  writeln(IntToStr(count) + ' additive primes found.');
end;

function _sliceString(s: string; i, j: integer): string;
var start_, end_, n: integer;
begin
  start_ := i;
  end_ := j;
  n := Length(s);
  if start_ < 0 then start_ := n + start_;
  if end_ < 0 then end_ := n + end_;
  if start_ < 0 then start_ := 0;
  if end_ > n then end_ := n;
  if end_ < start_ then end_ := start_;
  Result := Copy(s, start_ + 1, end_ - start_);
end;

begin
  main();
end.
