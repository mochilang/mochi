// Generated by Mochi compiler v0.10.26 on 2025-07-16T10:01:14Z
program AntiPrimes;
{$mode objfpc}
{$modeswitch nestedprocvars}
uses SysUtils, fgl, fphttpclient, Classes, Variants, fpjson, jsonparser, fpjsonrtti;

type
  generic TArray<T> = array of T;

function countDivisors(n: integer): integer;
var
  count: function(p0: Variant): integer is nested;
  i: integer;
begin
  if (n < 2) then ;
  count := 2;
  i := 2;
  while (i <= n div 2) do
  begin
    if (n mod i = 0) then ;
    i := i + 1;
  end;
  result := count;
  exit;
end;

function main(): integer;
var
  count: function(p0: Variant): integer is nested;
  d: Variant;
  line: string;
  maxDiv: integer;
  n: integer;
begin
  writeln('The first 20 anti-primes are:');
  maxDiv := 0;
  count := 0;
  n := 1;
  line := '';
  while (count < 20) do
  begin
    d := countDivisors(n);
    if (d > maxDiv) then
    begin
      line := line + IntToStr(n) + ' ';
      maxDiv := d;
      count := count + 1;
    end;
    n := n + 1;
  end;
  line := _sliceString(line, 0, 0 + Length(line) - 1);
  writeln(line);
end;

function _sliceString(s: string; i, j: integer): string;
var start_, end_, n: integer;
begin
  start_ := i;
  end_ := j;
  n := Length(s);
  if start_ < 0 then start_ := n + start_;
  if end_ < 0 then end_ := n + end_;
  if start_ < 0 then start_ := 0;
  if end_ > n then end_ := n;
  if end_ < start_ then end_ := start_;
  Result := Copy(s, start_ + 1, end_ - start_);
end;

begin
  main();
end.
