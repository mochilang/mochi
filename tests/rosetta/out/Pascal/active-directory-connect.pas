// Generated by Mochi compiler v0.10.30 on 1970-01-01T00:00:00Z
program ActiveDirectoryConnect;
{$mode objfpc}
{$modeswitch nestedprocvars}
uses SysUtils, fgl, Classes, Variants;

type
  generic TArray<T> = array of T;
type LDAPClient = record
  Base: string;
  Host: string;
  Port: integer;
  UseSSL: boolean;
  BindDN: string;
  BindPassword: string;
  UserFilter: string;
  GroupFilter: string;
  Attributes: specialize TArray<string>;
end;

function connect(client: LDAPClient): boolean;
begin
  result := ((client.Host <> '') and (client.Port > 0));
  exit;
end;

procedure main();
var
  _tmp0: LDAPClient;
  client: Variant;
begin
  _tmp0.Base := 'dc=example,dc=com';
  _tmp0.Host := 'ldap.example.com';
  _tmp0.Port := 389;
  _tmp0.UseSSL := False;
  _tmp0.BindDN := 'uid=readonlyuser,ou=People,dc=example,dc=com';
  _tmp0.BindPassword := 'readonlypassword';
  _tmp0.UserFilter := '(uid=%s)';
  _tmp0.GroupFilter := '(memberUid=%s)';
  _tmp0.Attributes := specialize TArray<string>(['givenName', 'sn', 'mail', 'uid']);
  client := _tmp0;
  if connect(client) then
  begin
    writeln('Connected to ' + client.Host);
  end else
  begin
    writeln('Failed to connect');
  end;
end;

begin
  main();
end.
