func main (regs=1)
  // main()
  Call         r0, main, 
  Return       r0

  // fun fib(n: int): int {
func fib (regs=11)
  // if n < 2 { return n }
  Const        r1, 2
  Less         r2, r0, r1
  JumpIfFalse  r2, L0
  Return       r0
L0:
  // var a = 0
  Const        r3, 0
  Move         r4, r3
  // var b = 1
  Const        r5, 1
  Move         r6, r5
  // var i = 1
  Const        r5, 1
  Move         r7, r5
L2:
  // while i < n {
  Less         r8, r7, r0
  JumpIfFalse  r8, L1
  // let t = a + b
  AddInt       r9, r4, r6
  // a = b
  Move         r4, r6
  // b = t
  Move         r6, r9
  // i = i + 1
  Const        r5, 1
  AddInt       r10, r7, r5
  Move         r7, r10
  // while i < n {
  Jump         L2
L1:
  // return b
  Return       r6

  // fun main() {
func main (regs=24)
  // for i in [-1,0,1,2,3,4,5,6,7,8,9,10] {
  Const        r0, [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
  IterPrep     r1, r0
  Len          r2, r1
  Const        r3, 0
L3:
  LessInt      r4, r3, r2
  JumpIfFalse  r4, L0
  Index        r5, r1, r3
  Move         r6, r5
  // if i < 0 {
  Const        r7, 0
  Less         r8, r6, r7
  JumpIfFalse  r8, L1
  // print("fib(" + str(i) + ") returned error: negative n is forbidden")
  Const        r9, "fib("
  Str          r10, r6
  Add          r11, r9, r10
  Const        r12, ") returned error: negative n is forbidden"
  Add          r13, r11, r12
  Print        r13
  // if i < 0 {
  Jump         L2
L1:
  // print("fib(" + str(i) + ") = " + str(fib(i)))
  Const        r9, "fib("
  Str          r14, r6
  Add          r15, r9, r14
  Const        r16, ") = "
  Add          r17, r15, r16
  Move         r18, r6
  Call         r19, fib, r18
  Str          r20, r19
  Add          r21, r17, r20
  Print        r21
L2:
  // for i in [-1,0,1,2,3,4,5,6,7,8,9,10] {
  Const        r22, 1
  AddInt       r23, r3, r22
  Move         r3, r23
  Jump         L3
L0:
  Return       r0
