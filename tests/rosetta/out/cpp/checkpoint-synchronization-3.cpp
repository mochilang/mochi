// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:21:13Z
#include <iostream>
#include <string>
#include <vector>

std::string lower(std::string ch) {
  auto up = std::string("ABCDEFGHIJKLMNOPQRSTUVWXYZ");
  auto low = std::string("abcdefghijklmnopqrstuvwxyz");
  auto i = 0;
  while ((i < up.size())) {
    if ((ch == std::string(up).substr(i, ((i + 1)) - (i)))) {
      return std::string(low).substr(i, ((i + 1)) - (i));
    }
    i = (i + 1);
  }
  return ch;
}

int main() {
  std::vector<std::string> partList = {std::string("A"), std::string("B"),
                                       std::string("C"), std::string("D")};
  auto nAssemblies = 3;
  for (auto p : partList) {
    std::cout << (p + std::string(" worker running")) << std::endl;
  }
  for (int cycle = 1; cycle < ((nAssemblies + 1)); cycle++) {
    std::cout << (std::string("begin assembly cycle ") + std::to_string(cycle))
              << std::endl;
    auto a = std::string("");
    for (auto p : partList) {
      std::cout << (p + std::string(" worker begins part")) << std::endl;
      std::cout << ((p + std::string(" worker completed ")) + lower(p))
                << std::endl;
      a = (a + lower(p));
    }
    std::cout << (((a + std::string(" assembled.  cycle ")) +
                   std::to_string(cycle)) +
                  std::string(" complete"))
              << std::endl;
  }
  for (auto p : partList) {
    std::cout << (p + std::string(" worker stopped")) << std::endl;
  }
  return 0;
}
