// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:21:12Z
#include <iostream>
#include <string>

int mod(int n, int m) { return (((((n % m)) + m)) % m); }

bool isPrime(int n) {
  if ((n < 2)) {
    return false;
  }
  if (((n % 2) == 0)) {
    return (n == 2);
  }
  if (((n % 3) == 0)) {
    return (n == 3);
  }
  auto d = 5;
  while (((d * d) <= n)) {
    if (((n % d) == 0)) {
      return false;
    }
    d = (d + 2);
    if (((n % d) == 0)) {
      return false;
    }
    d = (d + 4);
  }
  return true;
}

std::string pad(int n, int width) {
  auto s = std::to_string(n);
  while ((s.size() < width)) {
    s = (std::string(" ") + s);
  }
  return s;
}

auto carmichael(int p1) {
  for (int h3 = 2; h3 < p1; h3++) {
    for (int d = 1; d < ((h3 + p1)); d++) {
      if ((((((((h3 + p1)) * ((p1 - 1)))) % d) == 0) &&
           (mod(((-p1) * p1), h3) == (d % h3)))) {
        auto p2 = (1 + (((((p1 - 1)) * ((h3 + p1))) / d)));
        if ((!isPrime(p2))) {
          continue;
        }
        auto p3 = (1 + (((p1 * p2) / h3)));
        if ((!isPrime(p3))) {
          continue;
        }
        if (((((p2 * p3)) % ((p1 - 1))) != 1)) {
          continue;
        }
        auto c = ((p1 * p2) * p3);
        std::cout << ((((((pad(p1, 2) + std::string("   ")) + pad(p2, 4)) +
                         std::string("   ")) +
                        pad(p3, 5)) +
                       std::string("     ")) +
                      std::to_string(c))
                  << std::endl;
      }
    }
  }
}

int main() {
  std::cout << std::string(
                   "The following are Carmichael munbers for p1 <= 61:\n")
            << std::endl;
  std::cout << std::string("p1     p2      p3     product") << std::endl;
  std::cout << std::string("==     ==      ==     =======") << std::endl;
  for (int p1 = 2; p1 < 62; p1++) {
    if (isPrime(p1)) {
      carmichael(p1);
    }
  }
  return 0;
}
