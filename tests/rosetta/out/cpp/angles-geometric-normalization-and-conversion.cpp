// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:21:06Z
#include <iostream>
#include <string>
#include <vector>

float d2d(float d) { return (d % 360); }

float g2g(float g) { return (g % 400); }

float m2m(float m) { return (m % 6400); }

float r2r(float r) { return (r % (6.283185307179586)); }

float d2g(float d) { return ((d2d(d) * 400) / 360); }

float d2m(float d) { return ((d2d(d) * 6400) / 360); }

float d2r(float d) { return ((d2d(d) * 3.141592653589793) / 180); }

float g2d(float g) { return ((g2g(g) * 360) / 400); }

float g2m(float g) { return ((g2g(g) * 6400) / 400); }

float g2r(float g) { return ((g2g(g) * 3.141592653589793) / 200); }

float m2d(float m) { return ((m2m(m) * 360) / 6400); }

float m2g(float m) { return ((m2m(m) * 400) / 6400); }

float m2r(float m) { return ((m2m(m) * 3.141592653589793) / 3200); }

float r2d(float r) { return ((r2r(r) * 180) / 3.141592653589793); }

float r2g(float r) { return ((r2r(r) * 200) / 3.141592653589793); }

float r2m(float r) { return ((r2r(r) * 3200) / 3.141592653589793); }

auto main() {
  std::vector<int> angles = {-2, -1,         0,   1,   2,    6.2831853,
                             16, 57.2957795, 359, 399, 6399, 1e+06};
  std::cout << std::string("degrees normalized_degs gradians mils radians")
            << std::endl;
  for (auto a : angles) {
    std::cout << ((((((((std::to_string(a) + std::string(" ")) +
                        std::to_string(d2d(a))) +
                       std::string(" ")) +
                      std::to_string(d2g(a))) +
                     std::string(" ")) +
                    std::to_string(d2m(a))) +
                   std::string(" ")) +
                  std::to_string(d2r(a)))
              << std::endl;
  }
  std::cout << std::string("\ngradians normalized_grds degrees mils radians")
            << std::endl;
  for (auto a : angles) {
    std::cout << ((((((((std::to_string(a) + std::string(" ")) +
                        std::to_string(g2g(a))) +
                       std::string(" ")) +
                      std::to_string(g2d(a))) +
                     std::string(" ")) +
                    std::to_string(g2m(a))) +
                   std::string(" ")) +
                  std::to_string(g2r(a)))
              << std::endl;
  }
  std::cout << std::string("\nmils normalized_mils degrees gradians radians")
            << std::endl;
  for (auto a : angles) {
    std::cout << ((((((((std::to_string(a) + std::string(" ")) +
                        std::to_string(m2m(a))) +
                       std::string(" ")) +
                      std::to_string(m2d(a))) +
                     std::string(" ")) +
                    std::to_string(m2g(a))) +
                   std::string(" ")) +
                  std::to_string(m2r(a)))
              << std::endl;
  }
  std::cout << std::string("\nradians normalized_rads degrees gradians mils")
            << std::endl;
  for (auto a : angles) {
    std::cout << ((((((((std::to_string(a) + std::string(" ")) +
                        std::to_string(r2r(a))) +
                       std::string(" ")) +
                      std::to_string(r2d(a))) +
                     std::string(" ")) +
                    std::to_string(r2g(a))) +
                   std::string(" ")) +
                  std::to_string(r2m(a)))
              << std::endl;
  }
}

int main() {
  main();
  return 0;
}
