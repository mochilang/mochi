// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:21:10Z
#include <iostream>
#include <string>
#include <vector>

auto initGrid(int size) {
  auto g = std::vector<int>{};
  auto y = 0;
  while ((y < size)) {
    auto row = std::vector<int>{};
    auto x = 0;
    while ((x < size)) {
      row.push_back(std::string(" "));
      x = (x + 1);
    }
    g.push_back(row);
    y = (y + 1);
  }
  return g;
}

auto set(auto g, int x, int y) {
  if (((((x >= 0) && (x < g[0].size())) && (y >= 0)) && (y < g.size()))) {
    g[y][x] = std::string("#");
  }
}

auto circle(int r) {
  auto size = ((r * 2) + 1);
  auto g = initGrid(size);
  auto x = r;
  auto y = 0;
  auto err = (1 - r);
  while ((y <= x)) {
    set(g, (r + x), (r + y));
    set(g, (r + y), (r + x));
    set(g, (r - x), (r + y));
    set(g, (r - y), (r + x));
    set(g, (r - x), (r - y));
    set(g, (r - y), (r - x));
    set(g, (r + x), (r - y));
    set(g, (r + y), (r - x));
    y = (y + 1);
    if ((err < 0)) {
      err = ((err + (2 * y)) + 1);
    } else {
      x = (x - 1);
      err = ((err + (2 * ((y - x)))) + 1);
    }
  }
  return g;
}

std::string trimRight(auto row) {
  auto end = row.size();
  while (((end > 0) && (row[(end - 1)] == std::string(" ")))) {
    end = (end - 1);
  }
  auto s = std::string("");
  auto i = 0;
  while ((i < end)) {
    s = (s + row[i]);
    i = (i + 1);
  }
  return s;
}

int main() {
  auto g = circle(10);
  for (auto row : g) {
    std::cout << trimRight(row) << std::endl;
  }
  return 0;
}
