// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:21:14Z
#include <iostream>
#include <string>
#include <vector>

float sqrtApprox(float x) {
  auto guess = x;
  auto i = 0;
  while ((i < 20)) {
    guess = (((guess + (x / guess))) / 2);
    i = (i + 1);
  }
  return guess;
}

auto cholesky(auto a) {
  auto n = a.size();
  auto l = std::vector<int>{};
  auto i = 0;
  while ((i < n)) {
    auto row = std::vector<int>{};
    auto j = 0;
    while ((j < n)) {
      row.push_back(0);
      j = (j + 1);
    }
    l.push_back(row);
    i = (i + 1);
  }
  i = 0;
  while ((i < n)) {
    auto j = 0;
    while ((j <= i)) {
      auto sum = a[i][j];
      auto k = 0;
      while ((k < j)) {
        sum = (sum - (l[i][k] * l[j][k]));
        k = (k + 1);
      }
      if ((i == j)) {
        l[i][j] = sqrtApprox(sum);
      } else {
        l[i][j] = (sum / l[j][j]);
      }
      j = (j + 1);
    }
    i = (i + 1);
  }
  return l;
}

auto printMat(auto m) {
  auto i = 0;
  while ((i < m.size())) {
    auto line = std::string("");
    auto j = 0;
    while ((j < m[i].size())) {
      line = (line + std::to_string(m[i][j]));
      if ((j < (m[i].size() - 1))) {
        line = (line + std::string(" "));
      }
      j = (j + 1);
    }
    std::cout << line << std::endl;
    i = (i + 1);
  }
}

auto demo(auto a) {
  std::cout << std::string("A:") << std::endl;
  printMat(a);
  auto l = cholesky(a);
  std::cout << std::string("L:") << std::endl;
  printMat(l);
}

int main() {
  demo(std::vector<decltype(std::vector<int>{25, 15, -5})>{
      std::vector<int>{25, 15, -5}, std::vector<int>{15, 18, 0},
      std::vector<int>{-5, 0, 11}});
  demo(std::vector<decltype(std::vector<int>{18, 22, 54, 42})>{
      std::vector<int>{18, 22, 54, 42}, std::vector<int>{22, 70, 86, 62},
      std::vector<int>{54, 86, 174, 134}, std::vector<int>{42, 62, 134, 106}});
  return 0;
}
