// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:21:04Z
#include <iostream>
#include <string>

int pfacSum(int i) {
  auto sum = 0;
  auto p = 1;
  while ((p <= (i / 2))) {
    if (((i % p) == 0)) {
      sum = (sum + p);
    }
    p = (p + 1);
  }
  return sum;
}

auto main() {
  auto d = 0;
  auto a = 0;
  auto pnum = 0;
  auto i = 1;
  while ((i <= 20000)) {
    auto j = pfacSum(i);
    if ((j < i)) {
      d = (d + 1);
    }
    if ((j == i)) {
      pnum = (pnum + 1);
    }
    if ((j > i)) {
      a = (a + 1);
    }
    i = (i + 1);
  }
  std::cout << ((std::string("There are ") + std::to_string(d)) +
                std::string(" deficient numbers between 1 and 20000"))
            << std::endl;
  std::cout << ((std::string("There are ") + std::to_string(a)) +
                std::string(" abundant numbers  between 1 and 20000"))
            << std::endl;
  std::cout << ((std::string("There are ") + std::to_string(pnum)) +
                std::string(" perfect numbers between 1 and 20000"))
            << std::endl;
}

int main() {
  main();
  return 0;
}
