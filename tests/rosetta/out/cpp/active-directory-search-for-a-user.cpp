// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:21:05Z
#include <iostream>
#include <string>
#include <unordered_map>
#include <vector>

auto search_user(auto directory, std::string username) {
  return directory[username];
}

auto main() {
  auto client = std::unordered_map<std::string, std::string>{
      {std::string("Base"), std::string("dc=example,dc=com")},
      {std::string("Host"), std::string("ldap.example.com")},
      {std::string("Port"), 389},
      {std::string("GroupFilter"), std::string("(memberUid=%s)")}};
  auto directory = std::unordered_map<
      std::string, decltype(std::vector<std::string>{std::string("admins"),
                                                     std::string("users")})>{
      {std::string("username"),
       std::vector<std::string>{std::string("admins"), std::string("users")}},
      {std::string("john"), std::vector<std::string>{std::string("users")}}};
  auto groups = search_user(directory, std::string("username"));
  if ((groups.size() > 0)) {
    auto out = std::string("Groups: [");
    auto i = 0;
    while ((i < groups.size())) {
      out = (((out + std::string("\"")) + groups[i]) + std::string("\""));
      if ((i < (groups.size() - 1))) {
        out = (out + std::string(", "));
      }
      i = (i + 1);
    }
    out = (out + std::string("]"));
    std::cout << out << std::endl;
  } else {
    std::cout << std::string("User not found") << std::endl;
  }
}

int main() {
  main();
  return 0;
}
