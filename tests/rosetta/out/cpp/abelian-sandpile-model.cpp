// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:21:04Z
#include <iostream>
#include <string>
#include <vector>

auto dim = 16;

auto newPile(int d) {
  auto b = std::vector<int>{};
  auto y = 0;
  while ((y < d)) {
    auto row = std::vector<int>{};
    auto x = 0;
    while ((x < d)) {
      row.push_back(0);
      x = (x + 1);
    }
    b.push_back(row);
    y = (y + 1);
  }
  return b;
}

auto handlePile(auto pile, int x, int y) {
  if ((pile[y][x] >= 4)) {
    pile[y][x] = (pile[y][x] - 4);
    if ((y > 0)) {
      pile[(y - 1)][x] = (pile[(y - 1)][x] + 1);
      if ((pile[(y - 1)][x] >= 4)) {
        pile = handlePile(pile, x, (y - 1));
      }
    }
    if ((x > 0)) {
      pile[y][(x - 1)] = (pile[y][(x - 1)] + 1);
      if ((pile[y][(x - 1)] >= 4)) {
        pile = handlePile(pile, (x - 1), y);
      }
    }
    if ((y < (dim - 1))) {
      pile[(y + 1)][x] = (pile[(y + 1)][x] + 1);
      if ((pile[(y + 1)][x] >= 4)) {
        pile = handlePile(pile, x, (y + 1));
      }
    }
    if ((x < (dim - 1))) {
      pile[y][(x + 1)] = (pile[y][(x + 1)] + 1);
      if ((pile[y][(x + 1)] >= 4)) {
        pile = handlePile(pile, (x + 1), y);
      }
    }
    pile = handlePile(pile, x, y);
  }
  return pile;
}

auto drawPile(auto pile, int d) {
  std::vector<std::string> chars = {std::string(" "), std::string("░"),
                                    std::string("▓"), std::string("█")};
  auto row = 0;
  while ((row < d)) {
    auto line = std::string("");
    auto col = 0;
    while ((col < d)) {
      auto v = pile[row][col];
      if ((v > 3)) {
        v = 3;
      }
      line = (line + chars[v]);
      col = (col + 1);
    }
    std::cout << line << std::endl;
    row = (row + 1);
  }
}

auto main() {
  auto pile = newPile(16);
  auto hdim = 7;
  pile[hdim][hdim] = 16;
  pile = handlePile(pile, hdim, hdim);
  drawPile(pile, 16);
}

int main() {
  main();
  return 0;
}
