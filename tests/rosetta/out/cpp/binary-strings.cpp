// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:21:09Z
#include <iostream>
#include <string>
#include <vector>

template <typename T, typename U>
std::vector<T> __append(const std::vector<T> &v, const U &x) {
  auto r = v;
  r.push_back(x);
  return r;
}
std::string char(int n) {
  auto letters = std::string("abcdefghijklmnopqrstuvwxyz");
  auto idx = (n - 97);
  if (((idx < 0) || (idx >= letters.size()))) {
    return std::string("?");
  }
  return std::string(letters).substr(idx, ((idx + 1)) - (idx));
}

std::string fromBytes(auto bs) {
  auto s = std::string("");
  auto i = 0;
  while ((i < bs.size())) {
    s = (s + char(bs[i]));
    i = (i + 1);
  }
  return s;
}

int main() {
  auto b = std::vector<int>{98, 105, 110, 97, 114, 121};
  std::cout << std::to_string(b) << std::endl;
  auto c = b;
  std::cout << std::to_string(c) << std::endl;
  std::cout << std::to_string((b == c)) << std::endl;
  auto d = std::vector<int>{};
  auto i = 0;
  while ((i < b.size())) {
    d.push_back(b[i]);
    i = (i + 1);
  }
  d[1] = 97;
  d[4] = 110;
  std::cout << fromBytes(b) << std::endl;
  std::cout << fromBytes(d) << std::endl;
  std::cout << std::to_string((b.size() == 0)) << std::endl;
  auto z = __append(b, 122);
  std::cout << fromBytes(z) << std::endl;
  auto sub = std::string(b).substr(1, (3) - (1));
  std::cout << fromBytes(sub) << std::endl;
  auto f = std::vector<int>{};
  i = 0;
  while ((i < d.size())) {
    auto val = d[i];
    if ((val == 110)) {
      f.push_back(109);
    } else {
      f.push_back(val);
    }
    i = (i + 1);
  }
  std::cout << ((fromBytes(d) + std::string(" -> ")) + fromBytes(f))
            << std::endl;
  auto rem = std::vector<int>{};
  rem.push_back(b[0]);
  i = 3;
  while ((i < b.size())) {
    rem.push_back(b[i]);
    i = (i + 1);
  }
  std::cout << fromBytes(rem) << std::endl;
  return 0;
}
