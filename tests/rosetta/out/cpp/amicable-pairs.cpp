// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:21:05Z
#include <iostream>
#include <string>
#include <vector>

int pfacSum(int i) {
  auto sum = 0;
  auto p = 1;
  while ((p <= (i / 2))) {
    if (((i % p) == 0)) {
      sum = (sum + p);
    }
    p = (p + 1);
  }
  return sum;
}

std::string pad(int n, int width) {
  auto s = std::to_string(n);
  while ((s.size() < width)) {
    s = (std::string(" ") + s);
  }
  return s;
}

auto main() {
  auto sums = std::vector<int>{};
  auto i = 0;
  while ((i < 20000)) {
    sums.push_back(0);
    i = (i + 1);
  }
  i = 1;
  while ((i < 20000)) {
    sums[i] = pfacSum(i);
    i = (i + 1);
  }
  std::cout << std::string("The amicable pairs below 20,000 are:") << std::endl;
  auto n = 2;
  while ((n < 19999)) {
    auto m = sums[n];
    if ((((m > n) && (m < 20000)) && (n == sums[m]))) {
      std::cout << (((std::string("  ") + pad(n, 5)) + std::string(" and ")) +
                    pad(m, 5))
                << std::endl;
    }
    n = (n + 1);
  }
}

int main() {
  main();
  return 0;
}
