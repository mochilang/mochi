// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:21:09Z
#include <iostream>
#include <string>
#include <vector>

auto xMin = -2.182;
auto xMax = 2.6558;
auto yMin = 0;
auto yMax = 9.9983;
auto width = 60;
auto nIter = 10000;
auto dx = (xMax - xMin);
auto dy = (yMax - yMin);
auto height = std::stoi((((width * dy) / dx)));
auto grid = std::vector<int>{};
auto row = 0;

auto randInt(int s, int n) {
  auto next = ((((s * 1664525) + 1013904223)) % 2147483647);
  return std::vector<decltype(next)>{next, (next % n)};
}

int main() {
  while ((row < height)) {
    auto line = std::vector<int>{};
    auto col = 0;
    while ((col < width)) {
      line.push_back(std::string(" "));
      col = (col + 1);
    }
    grid.push_back(line);
    row = (row + 1);
  }
  auto seed = 1;
  auto x = 0;
  auto y = 0;
  auto ix = std::stoi(((((width) * ((x - xMin))) / dx)));
  auto iy = std::stoi(((((height) * ((yMax - y))) / dy)));
  if (((((ix >= 0) && (ix < width)) && (iy >= 0)) && (iy < height))) {
    grid[iy][ix] = std::string("*");
  }
  auto i = 0;
  while ((i < nIter)) {
    auto res = randInt(seed, 100);
    seed = res[0];
    auto r = res[1];
    if ((r < 85)) {
      auto nx = ((0.85 * x) + (0.04 * y));
      auto ny = (((-0.04 * x) + (0.85 * y)) + 1.6);
      x = nx;
      y = ny;
    }
    ix = std::stoi(((((width) * ((x - xMin))) / dx)));
    iy = std::stoi(((((height) * ((yMax - y))) / dy)));
    if (((((ix >= 0) && (ix < width)) && (iy >= 0)) && (iy < height))) {
      grid[iy][ix] = std::string("*");
    }
    i = (i + 1);
  }
  row = 0;
  while ((row < height)) {
    auto line = std::string("");
    auto col = 0;
    while ((col < width)) {
      line = (line + grid[row][col]);
      col = (col + 1);
    }
    std::cout << line << std::endl;
    row = (row + 1);
  }
  return 0;
}
