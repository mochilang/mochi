// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:21:09Z
#include <iostream>
#include <string>
#include <vector>

bigrat bernoulli(int n) {
  auto a = std::vector<int>{};
  auto m = 0;
  while ((m <= n)) {
    a.push_back((1 / (((m + 1)))));
    auto j = m;
    while ((j >= 1)) {
      a[(j - 1)] = ((j) * ((a[(j - 1)] - a[j])));
      j = (j - 1);
    }
    m = (m + 1);
  }
  return a[0];
}

int main() {
  for (int i = 0; i < 61; i++) {
    auto b = bernoulli(i);
    if ((num(b) != 0)) {
      auto numStr = std::to_string(num(b));
      auto denStr = std::to_string(denom(b));
      std::cout
          << (((((std::string("B(") + std::to_string(i)(2, std::string(" "))) +
                 std::string(") =")) +
                numStr.padStart(45, std::string(" "))) +
               std::string("/")) +
              denStr)
          << std::endl;
    }
  }
  return 0;
}
