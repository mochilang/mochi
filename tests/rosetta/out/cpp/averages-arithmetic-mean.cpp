// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:21:08Z
#include <iostream>
#include <string>
#include <unordered_map>
#include <vector>

auto mean(auto v) {
  if ((v.size() == 0)) {
    return std::unordered_map<std::string, decltype(false)>{
        {std::string("ok"), false}};
  }
  auto sum = 0;
  auto i = 0;
  while ((i < v.size())) {
    sum = (sum + v[i]);
    i = (i + 1);
  }
  return std::unordered_map<std::string, decltype(true)>{
      {std::string("ok"), true}, {std::string("mean"), (sum / (v.size()))}};
}

auto main() {
  auto sets = std::vector<decltype(std::vector<int>{})>{
      std::vector<int>{}, std::vector<int>{3, 1, 4, 1, 5, 9},
      std::vector<int>{1e+20, 3, 1, 4, 1, 5, 9, -1e+20},
      std::vector<int>{10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0.11},
      std::vector<int>{10, 20, 30, 40, 50, -100, 4.7, -1100}};
  for (auto v : sets) {
    std::cout << (std::string("Vector: ") + std::to_string(v)) << std::endl;
    auto r = mean(v);
    if (r[std::string("ok")]) {
      std::cout << (((std::string("Mean of ") + std::to_string(v.size())) +
                     std::string(" numbers is ")) +
                    std::to_string(r[std::string("mean")]))
                << std::endl;
    } else {
      std::cout << std::string("Mean undefined") << std::endl;
    }
    std::cout << std::string("") << std::endl;
  }
}

int main() {
  main();
  return 0;
}
