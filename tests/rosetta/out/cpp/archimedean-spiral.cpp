// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:21:07Z
#include <iostream>
#include <string>

auto PI = 3.141592653589793;

float sinApprox(float x) {
  auto term = x;
  auto sum = x;
  auto n = 1;
  while ((n <= 10)) {
    auto denom = ((((2 * n)) * (((2 * n) + 1))));
    term = ((((-term) * x) * x) / denom);
    sum = (sum + term);
    n = (n + 1);
  }
  return sum;
}

float cosApprox(float x) {
  auto term = 1;
  auto sum = 1;
  auto n = 1;
  while ((n <= 10)) {
    auto denom = (((((2 * n) - 1)) * ((2 * n))));
    term = ((((-term) * x) * x) / denom);
    sum = (sum + term);
    n = (n + 1);
  }
  return sum;
}

int main() {
  auto degreesIncr = ((0.1 * PI) / 180);
  auto turns = 2;
  auto stop = (((360 * turns) * 10) * degreesIncr);
  auto width = 600;
  auto centre = (width / 2);
  auto a = 1;
  auto b = 20;
  auto theta = 0;
  auto count = 0;
  while ((theta < stop)) {
    auto r = (a + (b * theta));
    auto x = (r * cosApprox(theta));
    auto y = (r * sinApprox(theta));
    if (((count % 100) == 0)) {
      std::cout << ((std::to_string((centre + x)) + std::string(",")) +
                    std::to_string((centre - y)))
                << std::endl;
    }
    theta = (theta + degreesIncr);
    count = (count + 1);
  }
  return 0;
}
