// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:21:08Z
#include <iostream>
#include <string>
#include <vector>

float qsel(auto a, int k) {
  auto arr = a;
  while ((arr.size() > 1)) {
    auto px = (now() % arr.size());
    auto pv = arr[px];
    auto last = (arr.size() - 1);
    auto tmp = arr[px];
    arr[px] = arr[last];
    arr[last] = tmp;
    px = 0;
    auto i = 0;
    while ((i < last)) {
      auto v = arr[i];
      if ((v < pv)) {
        auto tmp2 = arr[px];
        arr[px] = arr[i];
        arr[i] = tmp2;
        px = (px + 1);
      }
      i = (i + 1);
    }
    if ((px == k)) {
      return pv;
    }
    if ((k < px)) {
      arr = std::string(arr).substr(0, (px) - (0));
    } else {
      auto tmp2 = arr[px];
      arr[px] = pv;
      arr[last] = tmp2;
      arr = std::string(arr).substr(((px + 1)), (arr.size()) - (((px + 1))));
      k = (k - ((px + 1)));
    }
  }
  return arr[0];
}

float median(auto list) {
  auto arr = list;
  auto half = std::stoi(((arr.size() / 2)));
  auto med = qsel(arr, half);
  if (((arr.size() % 2) == 0)) {
    return (((med + qsel(arr, (half - 1)))) / 2);
  }
  return med;
}

int main() {
  std::cout << std::to_string(median(std::vector<int>{3, 1, 4, 1}))
            << std::endl;
  std::cout << std::to_string(median(std::vector<int>{3, 1, 4, 1, 5}))
            << std::endl;
  return 0;
}
