// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:21:04Z
#include <iostream>
#include <string>

struct Beast {
  virtual ~Beast() = default;
};
struct Dog : Beast {
  std::string kind;
  std::string name;
};
struct Cat : Beast {
  std::string kind;
  std::string name;
};

std::string beastKind(Beast *b) {
  return ([&]() {
    auto __v = b;
    if (auto __p0 = dynamic_cast<Dog *>(__v)) {
      return __p0->kind;
    }
    if (auto __p1 = dynamic_cast<Cat *>(__v)) {
      return __p1->kind;
    }
    return decltype(k){};
  })();
}

std::string beastName(Beast *b) {
  return ([&]() {
    auto __v = b;
    if (auto __p0 = dynamic_cast<Dog *>(__v)) {
      return __p0->name;
    }
    if (auto __p1 = dynamic_cast<Cat *>(__v)) {
      return __p1->name;
    }
    return decltype(n){};
  })();
}

std::string beastCry(Beast *b) {
  return ([&]() {
    auto __v = b;
    if (auto __p0 = dynamic_cast<Dog *>(__v)) {
      return std::string("Woof");
    }
    if (auto __p1 = dynamic_cast<Cat *>(__v)) {
      return std::string("Meow");
    }
    return decltype(std::string("Woof")){};
  })();
}

auto bprint(Beast *b) {
  std::cout << (((((beastName(b) + std::string(", who's a ")) + beastKind(b)) +
                  std::string(", cries: \"")) +
                 beastCry(b)) +
                std::string("\"."))
            << std::endl;
}

auto main() {
  Beast *d = ([&]() {
    auto __p = new Dog();
    __p->kind = std::string("labrador");
    __p->name = std::string("Max");
    return __p;
  })();
  Beast *c = ([&]() {
    auto __p = new Cat();
    __p->kind = std::string("siamese");
    __p->name = std::string("Sammy");
    return __p;
  })();
  bprint(d);
  bprint(c);
}

int main() {
  main();
  return 0;
}
