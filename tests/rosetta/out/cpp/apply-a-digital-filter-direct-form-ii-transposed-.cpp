// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:21:07Z
#include <iostream>
#include <vector>

auto applyFilter(auto input, auto a, auto b) {
  auto out = std::vector<int>{};
  auto scale = (1 / a[0]);
  auto i = 0;
  while ((i < input.size())) {
    auto tmp = 0;
    auto j = 0;
    while (((j <= i) && (j < b.size()))) {
      tmp = (tmp + (b[j] * input[(i - j)]));
      j = (j + 1);
    }
    j = 0;
    while (((j < i) && ((j + 1) < a.size()))) {
      tmp = (tmp - (a[(j + 1)] * out[((i - j) - 1)]));
      j = (j + 1);
    }
    out.push_back((tmp * scale));
    i = (i + 1);
  }
  return out;
}

int main() {
  std::vector<int> a = {1, -2.7756e-16, 0.33333333, -1.85e-17};
  std::vector<double> b = {0.16666667, 0.5, 0.5, 0.16666667};
  std::vector<double> sig = {
      -0.917843918645, 0.141984778794, 1.20536903482,   0.190286794412,
      -0.662370894973, -1.00700480494, -0.404707073677, 0.800482325044,
      0.743500089861,  1.01090520172,  0.741527555207,  0.277841675195,
      0.400833448236,  -0.2085993586,  -0.172842103641, -0.134316096293,
      0.0259303398477, 0.490105989562, 0.549391221511,  0.9047198589};
  auto res = applyFilter(sig, a, b);
  auto k = 0;
  while ((k < res.size())) {
    std::cout << res[k] << std::endl;
    k = (k + 1);
  }
  return 0;
}
