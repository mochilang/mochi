// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:21:05Z
#include <iostream>
#include <string>
#include <vector>

bool amb(auto wordsets, auto res, int idx) {
  if ((idx == wordsets.size())) {
    return true;
  }
  auto prev = std::string("");
  if ((idx > 0)) {
    prev = res[(idx - 1)];
  }
  auto i = 0;
  while ((i < wordsets[idx].size())) {
    auto w = wordsets[idx][i];
    if (((idx == 0) ||
         (std::string(prev).substr((prev.size() - 1),
                                   (prev.size()) - ((prev.size() - 1))) ==
          std::string(w).substr(0, (1) - (0))))) {
      res[idx] = w;
      if (amb(wordsets, res, (idx + 1))) {
        return true;
      }
    }
    i = (i + 1);
  }
  return false;
}

auto main() {
  std::vector<std::string> wordset =
      std::vector<decltype(std::vector<std::string>{
          std::string("the"), std::string("that"), std::string("a")})>{
          std::vector<std::string>{std::string("the"), std::string("that"),
                                   std::string("a")},
          std::vector<std::string>{std::string("frog"), std::string("elephant"),
                                   std::string("thing")},
          std::vector<std::string>{std::string("walked"),
                                   std::string("treaded"),
                                   std::string("grows")},
          std::vector<std::string>{std::string("slowly"),
                                   std::string("quickly")}};
  auto res = std::vector<int>{};
  auto i = 0;
  while ((i < wordset.size())) {
    res.push_back(std::string(""));
    i = (i + 1);
  }
  if (amb(wordset, res, 0)) {
    auto out = (std::string("[") + res[0]);
    auto j = 1;
    while ((j < res.size())) {
      out = ((out + std::string(" ")) + res[j]);
      j = (j + 1);
    }
    out = (out + std::string("]"));
    std::cout << out << std::endl;
  } else {
    std::cout << std::string("No amb found") << std::endl;
  }
}

int main() {
  main();
  return 0;
}
