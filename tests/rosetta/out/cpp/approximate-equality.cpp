// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:21:07Z
#include <iostream>
#include <string>
#include <vector>

float abs(float x) {
  if ((x < 0)) {
    return (-x);
  }
  return x;
}

float maxf(float a, float b) {
  if ((a > b)) {
    return a;
  }
  return b;
}

bool isClose(float a, float b) {
  auto relTol = 1e-09;
  auto t = abs((a - b));
  auto u = (relTol * maxf(abs(a), abs(b)));
  return (t <= u);
}

float sqrtApprox(float x) {
  auto guess = x;
  auto i = 0;
  while ((i < 10)) {
    guess = (((guess + (x / guess))) / 2);
    i = (i + 1);
  }
  return guess;
}

auto main() {
  auto root2 = sqrtApprox(2);
  auto pairs = std::vector<decltype(std::vector<double>{
      1.0000000000000002e+14, 1.0000000000000002e+14})>{
      std::vector<double>{1.0000000000000002e+14, 1.0000000000000002e+14},
      std::vector<double>{100.01, 100.011},
      std::vector<double>{1.0000000000000002e+09, 1.0000000000000001e+09},
      std::vector<double>{0.001, 0.0010000001},
      std::vector<double>{1.01e-22, 0},
      std::vector<decltype((root2 * root2))>{(root2 * root2), 2},
      std::vector<decltype((((-root2)) * root2))>{(((-root2)) * root2), -2},
      std::vector<int>{1e+17, 1e+17},
      std::vector<double>{3.141592653589793, 3.141592653589793}};
  for (auto pair : pairs) {
    auto a = pair[0];
    auto b = pair[1];
    auto s = (isClose(a, b) ? std::string("≈") : std::string("≉"));
    std::cout << ((((std::to_string(a) + std::string(" ")) + s) +
                   std::string(" ")) +
                  std::to_string(b))
              << std::endl;
  }
}

int main() {
  main();
  return 0;
}
