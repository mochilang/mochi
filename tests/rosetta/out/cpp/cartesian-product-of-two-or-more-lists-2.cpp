// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:21:12Z
#include <iostream>
#include <string>
#include <vector>

std::string listStr(auto xs) {
  auto s = std::string("[");
  auto i = 0;
  while ((i < xs.size())) {
    s = (s + std::to_string(xs[i]));
    if ((i < (xs.size() - 1))) {
      s = (s + std::string(" "));
    }
    i = (i + 1);
  }
  s = (s + std::string("]"));
  return s;
}

std::string llStr(auto lst) {
  auto s = std::string("[");
  auto i = 0;
  while ((i < lst.size())) {
    s = (s + listStr(lst[i]));
    if ((i < (lst.size() - 1))) {
      s = (s + std::string(" "));
    }
    i = (i + 1);
  }
  s = (s + std::string("]"));
  return s;
}

auto cartN(any lists) {
  if ((lists == nullptr)) {
    return std::vector<int>{};
  }
  auto a = lists;
  if ((a.size() == 0)) {
    return std::vector<decltype(std::vector<int>{})>{std::vector<int>{}};
  }
  auto c = 1;
  for (auto xs : a) {
    c = (c * xs.size());
  }
  if ((c == 0)) {
    return std::vector<int>{};
  }
  auto res = std::vector<int>{};
  auto idx = std::vector<int>{};
  for (auto _ : a) {
    idx.push_back(0);
  }
  auto n = a.size();
  auto count = 0;
  while ((count < c)) {
    auto row = std::vector<int>{};
    auto j = 0;
    while ((j < n)) {
      row.push_back(a[j][idx[j]]);
      j = (j + 1);
    }
    res.push_back(row);
    auto k = (n - 1);
    while ((k >= 0)) {
      idx[k] = (idx[k] + 1);
      if ((idx[k] < a[k].size())) {
        break;
      }
      idx[k] = 0;
      k = (k - 1);
    }
    count = (count + 1);
  }
  return res;
}

auto main() {
  std::cout << llStr(cartN(std::vector<decltype(std::vector<int>{1, 2})>{
                   std::vector<int>{1, 2}, std::vector<int>{3, 4}}))
            << std::endl;
  std::cout << llStr(cartN(std::vector<decltype(std::vector<int>{3, 4})>{
                   std::vector<int>{3, 4}, std::vector<int>{1, 2}}))
            << std::endl;
  std::cout << llStr(cartN(std::vector<decltype(std::vector<int>{1, 2})>{
                   std::vector<int>{1, 2}, std::vector<int>{}}))
            << std::endl;
  std::cout << llStr(cartN(std::vector<decltype(std::vector<int>{})>{
                   std::vector<int>{}, std::vector<int>{1, 2}}))
            << std::endl;
  std::cout << std::string("") << std::endl;
  std::cout << std::string("[") << std::endl;
  for (auto p : cartN(std::vector<decltype(std::vector<int>{1776, 1789})>{
           std::vector<int>{1776, 1789}, std::vector<int>{7, 12},
           std::vector<int>{4, 14, 23}, std::vector<int>{0, 1}})) {
    std::cout << (std::string(" ") + listStr(p)) << std::endl;
  }
  std::cout << std::string("]") << std::endl;
  std::cout << llStr(cartN(std::vector<decltype(std::vector<int>{1, 2, 3})>{
                   std::vector<int>{1, 2, 3}, std::vector<int>{30},
                   std::vector<int>{500, 100}}))
            << std::endl;
  std::cout << llStr(cartN(std::vector<decltype(std::vector<int>{1, 2, 3})>{
                   std::vector<int>{1, 2, 3}, std::vector<int>{},
                   std::vector<int>{500, 100}}))
            << std::endl;
  std::cout << std::string("") << std::endl;
  std::cout << llStr(cartN(nullptr)) << std::endl;
  std::cout << llStr(cartN(std::vector<int>{})) << std::endl;
}

int main() {
  main();
  return 0;
}
