// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:21:11Z
#include <iostream>
#include <string>
#include <vector>

bool sameDigits(int n, int b) {
  auto f = (n % b);
  n = std::stoi(((n / b)));
  while ((n > 0)) {
    if (((n % b) != f)) {
      return false;
    }
    n = std::stoi(((n / b)));
  }
  return true;
}

bool isBrazilian(int n) {
  if ((n < 7)) {
    return false;
  }
  if ((((n % 2) == 0) && (n >= 8))) {
    return true;
  }
  auto b = 2;
  while ((b < (n - 1))) {
    if (sameDigits(n, b)) {
      return true;
    }
    b = (b + 1);
  }
  return false;
}

bool isPrime(int n) {
  if ((n < 2)) {
    return false;
  }
  if (((n % 2) == 0)) {
    return (n == 2);
  }
  if (((n % 3) == 0)) {
    return (n == 3);
  }
  auto d = 5;
  while (((d * d) <= n)) {
    if (((n % d) == 0)) {
      return false;
    }
    d = (d + 2);
    if (((n % d) == 0)) {
      return false;
    }
    d = (d + 4);
  }
  return true;
}

auto main() {
  std::vector<std::string> kinds = {std::string(" "), std::string(" odd "),
                                    std::string(" prime ")};
  for (auto kind : kinds) {
    std::cout << ((std::string("First 20") + kind) +
                  std::string("Brazilian numbers:"))
              << std::endl;
    auto c = 0;
    auto n = 7;
    while (true) {
      if (isBrazilian(n)) {
        std::cout << (std::to_string(n) + std::string(" ")) << std::endl;
        c = (c + 1);
        if ((c == 20)) {
          std::cout << std::string("\n") << std::endl;
          break;
        }
      }
      if ((kind == std::string(" "))) {
        n = (n + 1);
      }
    }
  }
  auto n = 7;
  auto c = 0;
  while ((c < 100000)) {
    if (isBrazilian(n)) {
      c = (c + 1);
    }
    n = (n + 1);
  }
  std::cout << (std::string("The 100,000th Brazilian number: ") +
                std::to_string((n - 1)))
            << std::endl;
}

int main() {
  main();
  return 0;
}
