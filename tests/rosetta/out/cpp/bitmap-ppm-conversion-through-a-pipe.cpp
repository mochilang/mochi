// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:21:10Z
#include <iostream>
#include <vector>

struct Pixel {
  int R;
  int G;
  int B;
};
struct __struct1 {
  decltype(x) cols;
  decltype(y) rows;
  Pixel px;
};
struct Bitmap {
  int cols;
  int rows;
  auto px;
};

Pixel pixelFromRgb(int c) {
  auto r = ((std::stoi(((c / 65536)))) % 256);
  auto g = ((std::stoi(((c / 256)))) % 256);
  auto b = (c % 256);
  return Pixel{r, g, b};
}

int rgbFromPixel(Pixel p) { return (((p.R * 65536) + (p.G * 256)) + p.B); }

Bitmap NewBitmap(int x, int y) {
  auto data = std::vector<int>{};
  auto row = 0;
  while ((row < y)) {
    auto r = std::vector<int>{};
    auto col = 0;
    while ((col < x)) {
      r.push_back(Pixel{0, 0, 0});
      col = (col + 1);
    }
    data.push_back(r);
    row = (row + 1);
  }
  return __struct1{x, y, data};
}

auto FillRgb(Bitmap b, int c) {
  auto y = 0;
  auto p = pixelFromRgb(c);
  while ((y < b.rows)) {
    auto x = 0;
    while ((x < b.cols)) {
      auto px = b.px;
      auto row = px[y];
      row[x] = p;
      px[y] = row;
      b.px = px;
      x = (x + 1);
    }
    y = (y + 1);
  }
}

bool SetPxRgb(Bitmap b, int x, int y, int c) {
  if (((((x < 0) || (x >= b.cols)) || (y < 0)) || (y >= b.rows))) {
    return false;
  }
  auto px = b.px;
  auto row = px[y];
  row[x] = pixelFromRgb(c);
  px[y] = row;
  b.px = px;
  return true;
}

int nextRand(int seed) {
  return ((((seed * 1664525) + 1013904223)) % 2147483648);
}

auto main() {
  auto bm = NewBitmap(400, 300);
  FillRgb(bm, 12615744);
  auto seed = now();
  auto i = 0;
  while ((i < 2000)) {
    seed = nextRand(seed);
    auto x = (seed % 400);
    seed = nextRand(seed);
    auto y = (seed % 300);
    SetPxRgb(bm, x, y, 8405024);
    i = (i + 1);
  }
  auto x = 0;
  while ((x < 400)) {
    auto y = 240;
    while ((y < 245)) {
      SetPxRgb(bm, x, y, 8405024);
      y = (y + 1);
    }
    y = 260;
    while ((y < 265)) {
      SetPxRgb(bm, x, y, 8405024);
      y = (y + 1);
    }
    x = (x + 1);
  }
  auto y = 0;
  while ((y < 300)) {
    auto x = 80;
    while ((x < 85)) {
      SetPxRgb(bm, x, y, 8405024);
      x = (x + 1);
    }
    x = 95;
    while ((x < 100)) {
      SetPxRgb(bm, x, y, 8405024);
      x = (x + 1);
    }
    y = (y + 1);
  }
}

int main() {
  main();
  return 0;
}
