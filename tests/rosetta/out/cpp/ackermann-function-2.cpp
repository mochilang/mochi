// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:21:05Z
#include <iostream>
#include <string>

int pow(int base, int exp) {
  auto result = 1;
  auto i = 0;
  while ((i < exp)) {
    result = (result * base);
    i = (i + 1);
  }
  return result;
}

int ackermann2(int m, int n) {
  if ((m == 0)) {
    return (n + 1);
  }
  if ((m == 1)) {
    return (n + 2);
  }
  if ((m == 2)) {
    return ((2 * n) + 3);
  }
  if ((m == 3)) {
    return ((8 * pow(2, n)) - 3);
  }
  if ((n == 0)) {
    return ackermann2((m - 1), 1);
  }
  return ackermann2((m - 1), ackermann2(m, (n - 1)));
}

auto main() {
  std::cout << (std::string("A(0, 0) = ") + std::to_string(ackermann2(0, 0)))
            << std::endl;
  std::cout << (std::string("A(1, 2) = ") + std::to_string(ackermann2(1, 2)))
            << std::endl;
  std::cout << (std::string("A(2, 4) = ") + std::to_string(ackermann2(2, 4)))
            << std::endl;
  std::cout << (std::string("A(3, 4) = ") + std::to_string(ackermann2(3, 4)))
            << std::endl;
}

int main() {
  main();
  return 0;
}
