# Generated by Mochi compiler v0.10.30 on 1970-01-01T00:00:00Z
from __future__ import annotations
import dataclasses
from typing import Any, TypeVar, Generic, Callable

T = TypeVar("T")
K = TypeVar("K")
UNDEFINED = object()
import sys

sys.set_int_max_str_digits(0)


def _input():
    try:
        return input()
    except EOFError:
        return ""


def main():
    ss = SomeStruct(runtimeFields={})
    print("Create two fields at runtime: \n")
    i = 1
    while i <= 2:
        print("  Field #" + str(i) + ":\n")
        print("       Enter name  : ")
        name = _input()
        print("       Enter value : ")
        value = _input()
        fields = ss.runtimeFields
        fields[name] = value
        ss.runtimeFields = fields
        print("\n")
        i = i + 1
    while True:
        print("Which field do you want to inspect ? ")
        name = _input()
        if name in ss.runtimeFields:
            value = ss.runtimeFields[name]
            print("Its value is '" + value + "'")
            return
        else:
            print("There is no field of that name, try again\n")


@dataclasses.dataclass
class SomeStruct:
    runtimeFields: dict[str, str]

    def __contains__(self, key):
        return hasattr(self, key)


main()
