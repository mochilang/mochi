# Generated by Mochi compiler v0.10.30 on 1970-01-01T00:00:00Z
from typing import Any, TypeVar, Generic, Callable

T = TypeVar("T")
K = TypeVar("K")
UNDEFINED = object()
import sys

sys.set_int_max_str_digits(0)


def newPile(d):
    b = []
    y = 0
    while y < d:
        row = []
        x = 0
        while x < d:
            row = row + [0]
            x = x + 1
        b = b + [row]
        y = y + 1
    return b


def handlePile(pile, x, y):
    if pile[y][x] >= 4:
        pile[y][x] = pile[y][x] - 4
        if y > 0:
            pile[y - 1][x] = pile[y - 1][x] + 1
            if pile[y - 1][x] >= 4:
                pile = handlePile(pile, x, y - 1)
        if x > 0:
            pile[y][x - 1] = pile[y][x - 1] + 1
            if pile[y][x - 1] >= 4:
                pile = handlePile(pile, x - 1, y)
        if y < dim - 1:
            pile[y + 1][x] = pile[y + 1][x] + 1
            if pile[y + 1][x] >= 4:
                pile = handlePile(pile, x, y + 1)
        if x < dim - 1:
            pile[y][x + 1] = pile[y][x + 1] + 1
            if pile[y][x + 1] >= 4:
                pile = handlePile(pile, x + 1, y)
        pile = handlePile(pile, x, y)
    return pile


def drawPile(pile, d):
    chars = [" ", "░", "▓", "█"]
    row = 0
    while row < d:
        line = ""
        col = 0
        while col < d:
            v = pile[row][col]
            if v > 3:
                v = 3
            line = line + chars[v]
            col = col + 1
        print(line)
        row = row + 1


def main():
    pile = newPile(16)
    hdim = 7
    pile[hdim][hdim] = 16
    pile = handlePile(pile, hdim, hdim)
    drawPile(pile, 16)


dim = 16
main()
