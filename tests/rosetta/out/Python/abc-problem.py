# Generated by Mochi compiler v0.10.30 on 1970-01-01T00:00:00Z
from typing import Any, TypeVar, Generic, Callable

T = TypeVar("T")
K = TypeVar("K")
UNDEFINED = object()
import sys

sys.set_int_max_str_digits(0)


def fields(s):
    res = []
    cur = ""
    i = 0
    while i < len(s):
        c = s[i : i + 1]
        if c == " ":
            if len(cur) > 0:
                res = res + [cur]
                cur = ""
        else:
            cur = cur + c
        i = i + 1
    if len(cur) > 0:
        res = res + [cur]
    return res


def canSpell(word, blks):
    if len(word) == 0:
        return True
    c = str(word[0:1]).lower()
    i = 0
    while i < len(blks):
        b = blks[i]
        if c == str(b[0:1]).lower() or c == str(b[1:2]).lower():
            rest = []
            j = 0
            while j < len(blks):
                if j != i:
                    rest = rest + [blks[j]]
                j = j + 1
            if canSpell(word[1:], rest):
                return True
        i = i + 1
    return False


def newSpeller(blocks):
    bl = fields(blocks)

    def _fn0(w):
        return canSpell(w, bl)

    return _fn0


def main():
    sp = newSpeller("BO XK DQ CP NA GT RE TG QD FS JW HU VI AN OB ER FS LY PC ZM")
    for word in ["A", "BARK", "BOOK", "TREAT", "COMMON", "SQUAD", "CONFUSE"]:
        print(word + " " + str(sp(word)))


main()
