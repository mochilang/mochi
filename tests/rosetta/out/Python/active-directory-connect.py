# Generated by Mochi compiler v0.10.30 on 1970-01-01T00:00:00Z
from __future__ import annotations
import dataclasses
from typing import Any, TypeVar, Generic, Callable

T = TypeVar("T")
K = TypeVar("K")
UNDEFINED = object()
import sys

sys.set_int_max_str_digits(0)


def connect(client):
    return client.Host != "" and client.Port > 0


def main():
    client = LDAPClient(
        Base="dc=example,dc=com",
        Host="ldap.example.com",
        Port=389,
        UseSSL=False,
        BindDN="uid=readonlyuser,ou=People,dc=example,dc=com",
        BindPassword="readonlypassword",
        UserFilter="(uid=%s)",
        GroupFilter="(memberUid=%s)",
        Attributes=["givenName", "sn", "mail", "uid"],
    )
    if connect(dataclasses.replace(client)):
        print("Connected to " + client.Host)
    else:
        print("Failed to connect")


@dataclasses.dataclass
class LDAPClient:
    Base: str
    Host: str
    Port: int
    UseSSL: bool
    BindDN: str
    BindPassword: str
    UserFilter: str
    GroupFilter: str
    Attributes: list[str]

    def __contains__(self, key):
        return hasattr(self, key)


main()
