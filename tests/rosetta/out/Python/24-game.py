# Generated by Mochi compiler v0.10.30 on 1970-01-01T00:00:00Z
from __future__ import annotations
import time
from typing import Any, TypeVar, Generic, Callable

T = TypeVar("T")
K = TypeVar("K")
UNDEFINED = object()
import sys

sys.set_int_max_str_digits(0)


def _input():
    try:
        return input()
    except EOFError:
        return ""


def _int(v):
    try:
        return int(v)
    except Exception:
        return 0


import os, time

_now_seeded = False
_now_seed = 0


def _now():
    global _now_seeded, _now_seed
    if not _now_seeded:
        s = os.getenv("MOCHI_NOW_SEED")
        if s and s.isdigit():
            _now_seed = int(s)
            _now_seeded = True
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())


def randDigit():
    return _now() % 9 + 1


def main():
    digits = []
    for i in range(0, 4):
        digits = digits + [randDigit()]
    numstr = ""
    for i in range(0, 4):
        numstr = numstr + str(digits[i])
    print("Your numbers: " + numstr + "\n")
    print("Enter RPN: ")
    expr = _input()
    if len(expr) != 7:
        print(
            "invalid. expression length must be 7. (4 numbers, 3 operators, no spaces)"
        )
        return
    stack = []
    i = 0
    valid = True
    while i < len(expr):
        ch = expr[i : i + 1]
        if ch >= "0" and ch <= "9":
            if len(digits) == 0:
                print("too many numbers.")
                return
            j = 0
            while digits[j] != _int(ch) - 0:
                j = j + 1
                if j == len(digits):
                    print("wrong numbers.")
                    return
            digits = digits[:j] + digits[j + 1 :]
            stack = stack + [_float(_int(ch) - 0)]
        else:
            if len(stack) < 2:
                print("invalid expression syntax.")
                valid = False
                break
            b = stack[len(stack) - 1]
            a = stack[len(stack) - 2]
            if ch == "+":
                stack[len(stack) - 2] = a + b
            elif ch == "-":
                stack[len(stack) - 2] = a - b
            elif ch == "*":
                stack[len(stack) - 2] = a * b
            elif ch == "/":
                stack[len(stack) - 2] = a / b
            else:
                print(ch + " invalid.")
                valid = False
                break
            stack = stack[: len(stack) - 1]
        i = i + 1
    if valid:
        if abs(stack[0] - 24.0) > 1e-06:
            print("incorrect. " + str(stack[0]) + " != 24")
        else:
            print("correct.")


main()
