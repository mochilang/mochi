// Generated by Mochi 0.10.56 on 2025-08-03 15:40 +0700
using System;
using System.Linq;
using System.Numerics;
using System.Collections;
using System.Collections.Generic;

class Program {
    static bool seededNow = false;
    static long nowSeed = 0;
    static long _now() {
        if (!seededNow) {
            var s = Environment.GetEnvironmentVariable("MOCHI_NOW_SEED");
            if (long.TryParse(s, out var v)) {
                nowSeed = v;
                seededNow = true;
            }
        }
        if (seededNow) {
            nowSeed = unchecked(nowSeed * 1664525 + 1013904223);
            nowSeed %= 9223372036854775783L;
            if (nowSeed < 0) nowSeed += 9223372036854775783L;
            return nowSeed;
        }
        return DateTime.UtcNow.Ticks / 100;
    }
    static string _fmt(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return "[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmt(d[k]));
            return "map[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        if (v is bool b) return b ? "true" : "false";
        return Convert.ToString(v);
    }
    public static string _fmtTop(object v) {
        if (v is Array a && a.Length > 0 && a.GetValue(0) is Array) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        return _fmt(v);
    }
    static string adfgvx_0 = "ADFGVX";
    static string alphabet_1 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
    public static string shuffleStr(string s_2) {
        string[] arr_3 = new string[]{};
        long i_4 = 0;
        while ((i_4 < s_2.Length)) {
            arr_3 = (Enumerable.ToArray(Enumerable.Append(arr_3, s_2.Substring((int)(i_4), (int)((i_4 + 1) - i_4)))));
            i_4 = (i_4 + 1);
        };
        long j_5 = (arr_3.Length - 1);
        while ((j_5 > 0)) {
            long k_6 = (_now() % (j_5 + 1));
            string tmp_7 = arr_3[(int)(j_5)];
            arr_3[j_5] = arr_3[(int)(k_6)];
            arr_3[k_6] = tmp_7;
            j_5 = (j_5 - 1);
        };
        string out_8 = "";
        i_4 = 0;
        while ((i_4 < arr_3.Length)) {
            out_8 = (out_8 + arr_3[(int)(i_4)]);
            i_4 = (i_4 + 1);
        };
        return out_8;
    }

    public static string[] createPolybius() {
        string shuffled_9 = Program.shuffleStr(alphabet_1);
        string[] labels_10 = new string[]{};
        long li_11 = 0;
        while ((li_11 < adfgvx_0.Length)) {
            labels_10 = (Enumerable.ToArray(Enumerable.Append(labels_10, adfgvx_0.Substring((int)(li_11), (int)((li_11 + 1) - li_11)))));
            li_11 = (li_11 + 1);
        };
        Console.WriteLine(Program._fmtTop("6 x 6 Polybius square:\n"));
        Console.WriteLine(Program._fmtTop("  | A D F G V X"));
        Console.WriteLine(Program._fmtTop("---------------"));
        string[] p_12 = new string[]{};
        long i_13 = 0;
        while ((i_13 < 6)) {
            string row_14 = shuffled_9.Substring((int)((i_13 * 6)), (int)(((i_13 + 1) * 6) - (i_13 * 6)));
            p_12 = (Enumerable.ToArray(Enumerable.Append(p_12, row_14)));
            string line_15 = (labels_10[(int)(i_13)] + " | ");
            long j_16 = 0;
            while ((j_16 < 6)) {
                line_15 = ((line_15 + row_14.Substring((int)(j_16), (int)((j_16 + 1) - j_16))) + " ");
                j_16 = (j_16 + 1);
            }
            Console.WriteLine(Program._fmtTop(line_15));
            i_13 = (i_13 + 1);
        };
        return p_12;
    }

    public static string createKey(long n_17) {
        if (((n_17 < 7) || (n_17 > 12))) {
            Console.WriteLine(Program._fmtTop("Key should be within 7 and 12 letters long."));
        };
        string pool_18 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
        string key_19 = "";
        long i_20 = 0;
        while ((i_20 < n_17)) {
            long idx_21 = (_now() % pool_18.Length);
            key_19 = (key_19 + pool_18.Substring((int)(idx_21), 1));
            pool_18 = (pool_18.Substring((int)(0), (int)(idx_21 - 0)) + pool_18.Substring((int)((idx_21 + 1)), (int)(pool_18.Length - (idx_21 + 1))));
            i_20 = (i_20 + 1);
        };
        Console.WriteLine(Program._fmtTop(("\nThe key is " + key_19)));
        return key_19;
    }

    public static long[] orderKey(string key_22) {
        object[] pairs_23 = new object[]{};
        long i_24 = 0;
        while ((i_24 < key_22.Length)) {
            pairs_23 = (Enumerable.ToArray(Enumerable.Append(Enumerable.ToArray(pairs_23.Cast<object>()), new object[]{key_22.Substring((int)(i_24), (int)((i_24 + 1) - i_24)), i_24})));
            i_24 = (i_24 + 1);
        };
        int n_25 = pairs_23.Length;
        long m_26 = 0;
        while ((m_26 < n_25)) {
            long j_27 = 0;
            while ((j_27 < (n_25 - 1))) {
                if ((string.Compare(Convert.ToString(((dynamic)((dynamic)pairs_23)[j_27])[0]), Convert.ToString(((dynamic)((dynamic)pairs_23)[(j_27 + 1)])[0])) > 0)) {
                    object tmp_28 = ((dynamic)pairs_23)[j_27];
                    pairs_23[j_27] = ((dynamic)pairs_23)[(j_27 + 1)];
                    pairs_23[(j_27 + 1)] = tmp_28;
                }
                j_27 = (j_27 + 1);
            }
            m_26 = (m_26 + 1);
        };
        object[] res_29 = new object[]{};
        i_24 = 0;
        while ((i_24 < n_25)) {
            res_29 = (Enumerable.ToArray(Enumerable.Append(Enumerable.ToArray(res_29.Cast<object>()), Convert.ToInt64(((dynamic)((dynamic)pairs_23)[i_24])[1]))));
            i_24 = (i_24 + 1);
        };
        return res_29.Cast<long>().ToArray();
    }

    public static string encrypt(string[] polybius_30, string key_31, string plainText_32) {
        string[] labels_33 = new string[]{};
        long li_34 = 0;
        while ((li_34 < adfgvx_0.Length)) {
            labels_33 = (Enumerable.ToArray(Enumerable.Append(labels_33, adfgvx_0.Substring((int)(li_34), (int)((li_34 + 1) - li_34)))));
            li_34 = (li_34 + 1);
        };
        string temp_35 = "";
        long i_36 = 0;
        while ((i_36 < plainText_32.Length)) {
            long r_37 = 0;
            while ((r_37 < 6)) {
                long c_38 = 0;
                while ((c_38 < 6)) {
                    if ((polybius_30[(int)(r_37)].Substring((int)(c_38), (int)((c_38 + 1) - c_38)) == plainText_32.Substring((int)(i_36), (int)((i_36 + 1) - i_36)))) {
                        temp_35 = ((temp_35 + string.Concat(labels_33.Skip((int)(r_37)).Take((int)(((r_37 + 1) - r_37))).ToArray())) + string.Concat(labels_33.Skip((int)(c_38)).Take((int)(((c_38 + 1) - c_38))).ToArray()));
                    }
                    c_38 = (c_38 + 1);
                }
                r_37 = (r_37 + 1);
            }
            i_36 = (i_36 + 1);
        };
        int colLen_39 = (temp_35.Length / key_31.Length);
        if (((temp_35.Length % key_31.Length) > 0)) {
            colLen_39 = (colLen_39 + 1);
        };
        string[][] table_40 = new string[][]{};
        long rIdx_41 = 0;
        while ((rIdx_41 < colLen_39)) {
            string[] row_42 = new string[]{};
            long j_43 = 0;
            while ((j_43 < key_31.Length)) {
                row_42 = (Enumerable.ToArray(Enumerable.Append(row_42, "")));
                j_43 = (j_43 + 1);
            }
            table_40 = (Enumerable.ToArray(Enumerable.Append(table_40, row_42)));
            rIdx_41 = (rIdx_41 + 1);
        };
        long idx_44 = 0;
        while ((idx_44 < temp_35.Length)) {
            long row_45 = (idx_44 / key_31.Length);
            long col_46 = (idx_44 % key_31.Length);
            table_40[(int)(row_45)][col_46] = temp_35.Substring((int)(idx_44), (int)((idx_44 + 1) - idx_44));
            idx_44 = (idx_44 + 1);
        };
        long[] order_47 = Program.orderKey(key_31);
        string[] cols_48 = new string[]{};
        long ci_49 = 0;
        while ((ci_49 < key_31.Length)) {
            string colStr_50 = "";
            long ri_51 = 0;
            while ((ri_51 < colLen_39)) {
                colStr_50 = (colStr_50 + table_40[(int)(ri_51)][(int)(order_47[(int)(ci_49)])]);
                ri_51 = (ri_51 + 1);
            }
            cols_48 = (Enumerable.ToArray(Enumerable.Append(cols_48, colStr_50)));
            ci_49 = (ci_49 + 1);
        };
        string result_52 = "";
        ci_49 = 0;
        while ((ci_49 < cols_48.Length)) {
            result_52 = (result_52 + cols_48[(int)(ci_49)]);
            if ((ci_49 < (cols_48.Length - 1))) {
                result_52 = (result_52 + " ");
            }
            ci_49 = (ci_49 + 1);
        };
        return result_52;
    }

    public static long indexOf(string s_53, string ch_54) {
        long i_55 = 0;
        while ((i_55 < s_53.Length)) {
            if ((s_53.Substring((int)(i_55), (int)((i_55 + 1) - i_55)) == ch_54)) {
                return i_55;
            }
            i_55 = (i_55 + 1);
        };
        return -1;
    }

    public static string decrypt(string[] polybius_56, string key_57, string cipherText_58) {
        string[] colStrs_59 = new string[]{};
        long start_60 = 0;
        long i_61 = 0;
        while ((i_61 <= cipherText_58.Length)) {
            if (((i_61 == cipherText_58.Length) || (cipherText_58.Substring((int)(i_61), 1) == " "))) {
                colStrs_59 = (Enumerable.ToArray(Enumerable.Append(colStrs_59, cipherText_58.Substring((int)(start_60), (int)(i_61 - start_60)))));
                start_60 = (i_61 + 1);
            }
            i_61 = (i_61 + 1);
        };
        long maxColLen_62 = 0;
        i_61 = 0;
        while ((i_61 < colStrs_59.Length)) {
            if ((colStrs_59[(int)(i_61)].Length > maxColLen_62)) {
                maxColLen_62 = colStrs_59[(int)(i_61)].Length;
            }
            i_61 = (i_61 + 1);
        };
        string[][] cols_63 = new string[][]{};
        i_61 = 0;
        while ((i_61 < colStrs_59.Length)) {
            string s_64 = colStrs_59[(int)(i_61)];
            string[] ls_65 = new string[]{};
            long j_66 = 0;
            while ((j_66 < s_64.Length)) {
                ls_65 = (Enumerable.ToArray(Enumerable.Append(ls_65, s_64.Substring((int)(j_66), (int)((j_66 + 1) - j_66)))));
                j_66 = (j_66 + 1);
            }
            if ((s_64.Length < maxColLen_62)) {
                string[] pad_67 = new string[]{};
                long k_68 = 0;
                while ((k_68 < maxColLen_62)) {
                    if ((k_68 < ls_65.Length)) {
                        pad_67 = (Enumerable.ToArray(Enumerable.Append(pad_67, ls_65[(int)(k_68)])));
                    } else {
                        pad_67 = (Enumerable.ToArray(Enumerable.Append(pad_67, "")));
                    }
                    k_68 = (k_68 + 1);
                }
                cols_63 = (Enumerable.ToArray(Enumerable.Append(cols_63, pad_67)));
            } else {
                cols_63 = (Enumerable.ToArray(Enumerable.Append(cols_63, ls_65)));
            }
            i_61 = (i_61 + 1);
        };
        string[][] table_69 = new string[][]{};
        long r_70 = 0;
        while ((r_70 < maxColLen_62)) {
            string[] row_71 = new string[]{};
            long c_72 = 0;
            while ((c_72 < key_57.Length)) {
                row_71 = (Enumerable.ToArray(Enumerable.Append(row_71, "")));
                c_72 = (c_72 + 1);
            }
            table_69 = (Enumerable.ToArray(Enumerable.Append(table_69, row_71)));
            r_70 = (r_70 + 1);
        };
        long[] order_73 = Program.orderKey(key_57);
        r_70 = 0;
        while ((r_70 < maxColLen_62)) {
            long c_74 = 0;
            while ((c_74 < key_57.Length)) {
                table_69[(int)(r_70)][order_73[(int)(c_74)]] = cols_63[(int)(c_74)][(int)(r_70)];
                c_74 = (c_74 + 1);
            }
            r_70 = (r_70 + 1);
        };
        string temp_75 = "";
        r_70 = 0;
        while ((r_70 < table_69.Length)) {
            long j_76 = 0;
            while ((j_76 < table_69[(int)(r_70)].Length)) {
                temp_75 = (temp_75 + table_69[(int)(r_70)][(int)(j_76)]);
                j_76 = (j_76 + 1);
            }
            r_70 = (r_70 + 1);
        };
        string plainText_77 = "";
        long idx_78 = 0;
        while ((idx_78 < temp_75.Length)) {
            long rIdx_79 = Program.indexOf(adfgvx_0, temp_75.Substring((int)(idx_78), (int)((idx_78 + 1) - idx_78)));
            long cIdx_80 = Program.indexOf(adfgvx_0, temp_75.Substring((int)((idx_78 + 1)), (int)((idx_78 + 2) - (idx_78 + 1))));
            plainText_77 = (plainText_77 + polybius_56[(int)(rIdx_79)].Substring((int)(cIdx_80), 1));
            idx_78 = (idx_78 + 2);
        };
        return plainText_77;
    }

    public static void main() {
        string plainText_81 = "ATTACKAT1200AM";
        string[] polybius_82 = Program.createPolybius();
        string key_83 = Program.createKey(9);
        Console.WriteLine(Program._fmtTop(("\nPlaintext : " + plainText_81)));
        string cipherText_84 = Program.encrypt(polybius_82, key_83, plainText_81);
        Console.WriteLine(Program._fmtTop(("\nEncrypted : " + cipherText_84)));
        string plainText2_85 = Program.decrypt(polybius_82, key_83, cipherText_84);
        Console.WriteLine(Program._fmtTop(("\nDecrypted : " + plainText2_85)));
    }

    static void Main() {
        Program.main();
    }
}
