// Generated by Mochi compiler v0.10.30 on 2025-07-18T16:49:32Z
using System;
using System.Collections.Generic;

class Program
{
    static List<string> fields(string s)
    {
        List<string> res = new List<string>();
        string cur = "";
        int i = 0;
        while (i < s.Length)
        {
            string c = s.Substring((int)i, ((int)((i + 1)) - (int)(i)));
            if (c == " ")
            {
                if (cur.Length > 0)
                {
                    res = new List<string>(res) { cur };
                    cur = "";
                }
            }
            else
            {
                cur = string.Concat(cur, c);
            }
            i = (i + 1);
        }
        if (cur.Length > 0)
        {
            res = new List<string>(res) { cur };
        }
        return res;
    }

    static bool canSpell(string word, List<string> blks)
    {
        if (word.Length == 0)
        {
            return true;
        }
        string c = Convert.ToString(word.Substring((int)0, ((int)(1) - (int)(0)))).ToLower();
        int i = 0;
        while (i < blks.Count)
        {
            string b = blks[(int)i];
            if ((c == Convert.ToString(b.Substring((int)0, ((int)(1) - (int)(0)))).ToLower()) || (c == Convert.ToString(b.Substring((int)1, ((int)(2) - (int)(1)))).ToLower()))
            {
                List<string> rest = new List<string>();
                int j = 0;
                while (j < blks.Count)
                {
                    if (j != i)
                    {
                        rest = new List<string>(rest) { blks[(int)j] };
                    }
                    j = (j + 1);
                }
                if (canSpell(word.Substring((int)1, ((int)(word.Length) - (int)(1))), rest))
                {
                    return true;
                }
            }
            i = (i + 1);
        }
        return false;
    }

    static Func<string, bool> newSpeller(string blocks)
    {
        List<string> bl = fields(blocks);
        return new Func<string, bool>((string w) =>
        {
            return canSpell(w, bl);
        });
    }

    static void main()
    {
        Func<string, bool> sp = newSpeller("BO XK DQ CP NA GT RE TG QD FS JW HU VI AN OB ER FS LY PC ZM");
        foreach (var word in new List<string> { "A", "BARK", "BOOK", "TREAT", "COMMON", "SQUAD", "CONFUSE" })
        {
            Console.WriteLine((string.Concat(word, " ") + Convert.ToString(sp(word))));
        }
    }

    static void Main()
    {
        main();
    }
}
