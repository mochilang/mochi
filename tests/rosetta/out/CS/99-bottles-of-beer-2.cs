// Generated by Mochi compiler v0.10.30 on 2025-07-18T17:21:56Z
using System;
using System.Collections.Generic;

class Program
{
    static List<string> fields(string s)
    {
        List<string> words = new List<string>();
        string cur = "";
        int i = 0;
        while (i < s.Length)
        {
            string ch = s.Substring((int)i, ((int)((i + 1)) - (int)(i)));
            if (((ch == " ") || (ch == "\n")) || (ch == "\t"))
            {
                if (cur.Length > 0)
                {
                    words = new List<string>(words) { cur };
                    cur = "";
                }
            }
            else
            {
                cur = string.Concat(cur, ch);
            }
            i = (i + 1);
        }
        if (cur.Length > 0)
        {
            words = new List<string>(words) { cur };
        }
        return words;
    }

    static string join(List<string> xs, string sep)
    {
        string res = "";
        int i = 0;
        while (i < xs.Count)
        {
            if (i > 0)
            {
                res = string.Concat(res, sep);
            }
            res = (res + xs[(int)i]);
            i = (i + 1);
        }
        return res;
    }

    static string numberName(int n)
    {
        List<string> small = new List<string> { "no", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen" };
        List<string> tens = new List<string> { "ones", "ten", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety" };
        if (n < 0)
        {
            return "";
        }
        if (n < 20)
        {
            return small[(int)n];
        }
        if (n < 100)
        {
            string t = tens[(int)(int)((n / 10))];
            int s = (n % 10);
            if (s > 0)
            {
                t = (string.Concat(t, " ") + small[(int)s]);
            }
            return t;
        }
        return "";
    }

    static string pluralizeFirst(string s, int n)
    {
        if (n == 1)
        {
            return s;
        }
        List<string> w = fields(s);
        if (w.Count > 0)
        {
            w[(int)0] = (w[(int)0] + "s");
        }
        return join(w, " ");
    }

    static int randInt(int seed, int n)
    {
        int next = ((((seed * 1664525) + 1013904223)) % 2147483647);
        return (next % n);
    }

    static string slur(string p, int d)
    {
        if (p.Length <= 2)
        {
            return p;
        }
        List<string> a = new List<string>();
        int i = 1;
        while (i < (p.Length - 1))
        {
            a = new List<string>(a) { p.Substring((int)i, ((int)((i + 1)) - (int)(i))) };
            i = (i + 1);
        }
        int idx = (a.Count - 1);
        int seed = d;
        while (idx >= 1)
        {
            seed = ((((seed * 1664525) + 1013904223)) % 2147483647);
            if ((seed % 100) >= d)
            {
                int j = (seed % ((idx + 1)));
                string tmp = a[(int)idx];
                a[(int)idx] = a[(int)j];
                a[(int)j] = tmp;
            }
            idx = (idx - 1);
        }
        string s = p.Substring((int)0, ((int)(1) - (int)(0)));
        int k = 0;
        while (k < a.Count)
        {
            s = (s + a[(int)k]);
            k = (k + 1);
        }
        s = (s + p.Substring((int)(p.Length - 1), ((int)(p.Length) - (int)((p.Length - 1)))));
        List<string> w = fields(s);
        return join(w, " ");
    }

    static void main()
    {
        int i = 99;
        while (i > 0)
        {
            Console.WriteLine(((((slur(numberName(i), i) + " ") + pluralizeFirst(slur("bottle of", i), i)) + " ") + slur("beer on the wall", i)));
            Console.WriteLine(((((slur(numberName(i), i) + " ") + pluralizeFirst(slur("bottle of", i), i)) + " ") + slur("beer", i)));
            Console.WriteLine(((((slur("take one", i) + " ") + slur("down", i)) + " ") + slur("pass it around", i)));
            Console.WriteLine(((((slur(numberName((i - 1)), i) + " ") + pluralizeFirst(slur("bottle of", i), (i - 1))) + " ") + slur("beer on the wall", i)));
            i = (i - 1);
        }
    }

    static void Main()
    {
        main();
    }
}
