// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
// averages-median-3.mochi
import java.util.*;

public class AveragesMedian3 {
    static double qsel(List<? extends Number> a, int k) {
        List<? extends Number> arr = a;
        while (arr.size() > 1) {
            int px = now() % arr.size();
            List<? extends Number> pv = arr.get(px);
            int last = arr.size() - 1;
            List<? extends Number> tmp = arr.get(px);
            arr.set(px, arr.get(last));
            arr.set(last, tmp);
            px = (int)(0);
            int i = 0;
            while (i < last) {
                List<? extends Number> v = arr.get(i);
                if (String.valueOf(v).compareTo(String.valueOf(pv)) < 0) {
                    List<? extends Number> tmp2 = arr.get(px);
                    arr.set(px, arr.get(i));
                    arr.set(i, tmp2);
                    px = (int)(px + 1);
                }
                i = (int)(i + 1);
            }
            if (px == k) {
                return pv;
            }
            if (k < px) {
                arr = ((List)arr).subList(0, px);
            }
            else {
                List<? extends Number> tmp2 = arr.get(px);
                arr.set(px, pv);
                arr.set(last, tmp2);
                arr = ((List)arr).subList((px + 1), arr.size());
                k = (int)(k - (px + 1));
            }
        }
        return arr.get(0);
    }
    static double median(List<? extends Number> list) {
        List<? extends Number> arr = list;
        int half = Integer.parseInt((arr.size() / 2));
        double med = qsel(arr, half);
        if (Objects.equals(arr.size() % 2, 0)) {
            return (med + qsel(arr, half - 1)) / 2.000000;
        }
        return med;
    }
    public static void main(String[] args) {
        System.out.println(String.valueOf(median(Arrays.asList(3.000000, 1.000000, 4.000000, 1.000000))));
        System.out.println(String.valueOf(median(Arrays.asList(3.000000, 1.000000, 4.000000, 1.000000, 5.000000))));
    }
}
