// Generated by Mochi compiler v0.10.26 on 2025-07-16T12:10:46Z
// bitcoin-address-validation.mochi
import java.util.*;

public class BitcoinAddressValidation {
    static int indexOf(String s, String ch) {
        int i = 0;
        while (i < s.length()) {
            if (Objects.equals(s.substring(i, i + 1), ch)) {
                return i;
            }
            i = (int)(i + 1);
        }
        return -1;
    }
    static List<Integer> set58(String addr) {
        String tmpl = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";
        List<Integer> a = Arrays.asList();
        int i = 0;
        while (i < 25) {
            a.add(0);
            i = (int)(i + 1);
        }
        int idx = 0;
        while (idx < addr.length()) {
            String ch = addr.substring(idx, idx + 1);
            int c = indexOf(tmpl, ch);
            if (c < 0) {
                return Arrays.asList();
            }
            int j = 24;
            while (j >= 0) {
                c = (int)(c + ((Number)58 * ((Number)a.get(j)).doubleValue()).doubleValue());
                a.set(j, c % 256);
                c = (int)(Integer.parseInt((c / 256)));
                j = (int)(j - 1);
            }
            if (c > 0) {
                return Arrays.asList();
            }
            idx = (int)(idx + 1);
        }
        return a;
    }
    static List<Integer> doubleSHA256(List<Integer> bs) {
        Object first = sha256(bs);
        return sha256(first);
    }
    static List<Integer> computeChecksum(List<Integer> a) {
        List<Integer> hash = doubleSHA256(((List)a).subList(0, 21));
        return ((List)hash).subList(0, 4);
    }
    static boolean validA58(String addr) {
        List<Integer> a = set58(addr);
        if (!Objects.equals(a.size(), 25)) {
            return false;
        }
        if (!Objects.equals(a.get(0), 0)) {
            return false;
        }
        List<Integer> sum = computeChecksum(a);
        int i = 0;
        while (i < 4) {
            if (!Objects.equals(a.get(21 + i), sum.get(i))) {
                return false;
            }
            i = (int)(i + 1);
        }
        return true;
    }
    static <T> List<T> append(List<T> list, T item) {
        List<T> res = new ArrayList<>(list);
        res.add(item);
        return res;
    }
    public static void main(String[] args) {
    System.out.println(String.valueOf(validA58("1AGNa15ZQXAZUgFiqJ3i7Z2DPU2J6hW62i")));
    System.out.println(String.valueOf(validA58("17NdbrSGoUotzeGCcMMCqnFkEvLymoou9j")));
    }
}
