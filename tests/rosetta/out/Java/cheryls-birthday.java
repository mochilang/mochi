// Generated by Mochi compiler v0.10.26 on 2025-07-16T12:11:32Z
// cheryls-birthday.mochi
import java.util.*;

class Birthday {
    int month;
    int day;
    Birthday(int month, int day) {
        this.month = month;
        this.day = day;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Birthday other)) return false;
        return Objects.equals(this.month, other.month) && Objects.equals(this.day, other.day);
    }
    @Override public int hashCode() {
        return Objects.hash(month, day);
    }
}
public class CherylsBirthday {
    static boolean monthUnique(Object b, List<Object> list) {
        int c = 0;
        for (Object x : list) {
            if (Objects.equals(((Map<?,?>)x).get("month"), ((Map<?,?>)b).get("month"))) {
                c = (int)(c + 1);
            }
        }
        return c == 1;
    }
    static boolean dayUnique(Object b, List<Object> list) {
        int c = 0;
        for (Object x : list) {
            if (Objects.equals(((Map<?,?>)x).get("day"), ((Map<?,?>)b).get("day"))) {
                c = (int)(c + 1);
            }
        }
        return c == 1;
    }
    static boolean monthWithUniqueDay(Object b, List<Object> list) {
        for (Object x : list) {
            if (Objects.equals(((Map<?,?>)x).get("month"), ((Map<?,?>)b).get("month")) && dayUnique(x, list)) {
                return true;
            }
        }
        return false;
    }
    static String bstr(Object b) {
        List<String> months = new ArrayList<>(Arrays.asList("", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"));
        return ((Number)((Number)months.get(((Map<?,?>)b).get("month"))).doubleValue() + " ").doubleValue() + ((Number)String.valueOf(((Map<?,?>)b).get("day"))).doubleValue();
    }
    static <T> List<T> append(List<T> list, T item) {
        List<T> res = new ArrayList<>(list);
        res.add(item);
        return res;
    }
    public static void main(String[] args) {
    List<Object> choices = Arrays.asList(new Birthday(5, 15), new Birthday(5, 16), new Birthday(5, 19), new Birthday(6, 17), new Birthday(6, 18), new Birthday(7, 14), new Birthday(7, 16), new Birthday(8, 14), new Birthday(8, 15), new Birthday(8, 17));
    List<Object> filtered = Arrays.asList();
    for (Object bd : choices) {
        if (!monthUnique(bd, choices)) {
            filtered.add(bd);
        }
    }
    List<Object> filtered2 = Arrays.asList();
    for (Object bd : filtered) {
        if (!monthWithUniqueDay(bd, filtered)) {
            filtered2.add(bd);
        }
    }
    List<Object> filtered3 = Arrays.asList();
    for (Object bd : filtered2) {
        if (dayUnique(bd, filtered2)) {
            filtered3.add(bd);
        }
    }
    List<Object> filtered4 = Arrays.asList();
    for (Object bd : filtered3) {
        if (monthUnique(bd, filtered3)) {
            filtered4.add(bd);
        }
    }
    if (Objects.equals(filtered4.size(), 1)) {
        System.out.println("Cheryl's birthday is " + ((Number)bstr(filtered4.get(0))).doubleValue());
    }
    else {
        System.out.println("Something went wrong!");
    }
    }
}
