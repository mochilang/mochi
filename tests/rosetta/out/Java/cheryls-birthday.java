// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
// cheryls-birthday.mochi
import java.util.*;

class Birthday {
    int month;
    int day;
    Birthday(int month, int day) {
        this.month = month;
        this.day = day;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Birthday other)) return false;
        return Objects.equals(this.month, other.month) && Objects.equals(this.day, other.day);
    }
    @Override public int hashCode() {
        return Objects.hash(month, day);
    }
}
public class CherylsBirthday {
    static boolean monthUnique(Birthday b, List<Birthday> list) {
        int c = 0;
        for (Birthday x : list) {
            if (x.month == b.month) {
                c = (int)(c + 1);
            }
        }
        return c == 1;
    }
    static boolean dayUnique(Birthday b, List<Birthday> list) {
        int c = 0;
        for (Birthday x : list) {
            if (x.day == b.day) {
                c = (int)(c + 1);
            }
        }
        return c == 1;
    }
    static boolean monthWithUniqueDay(Birthday b, List<Birthday> list) {
        for (Birthday x : list) {
            if (x.month == b.month && dayUnique(x, list)) {
                return true;
            }
        }
        return false;
    }
    static String bstr(Birthday b) {
        List<String> months = new ArrayList<>(Arrays.asList("", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"));
        return ((Number)((Number)months.get(b.month)).doubleValue() + " ").doubleValue() + String.valueOf(b.day);
    }
    public static void main(String[] args) {
        List<Birthday> choices = Arrays.asList(new Birthday(5, 15), new Birthday(5, 16), new Birthday(5, 19), new Birthday(6, 17), new Birthday(6, 18), new Birthday(7, 14), new Birthday(7, 16), new Birthday(8, 14), new Birthday(8, 15), new Birthday(8, 17));
        List<Birthday> filtered = Arrays.asList();
        for (Birthday bd : choices) {
            if (!((Boolean)monthUnique(bd, choices))) {
                filtered.add(bd);
            }
        }
        List<Birthday> filtered2 = Arrays.asList();
        for (Birthday bd : filtered) {
            if (!((Boolean)monthWithUniqueDay(bd, filtered))) {
                filtered2.add(bd);
            }
        }
        List<Birthday> filtered3 = Arrays.asList();
        for (Birthday bd : filtered2) {
            if (dayUnique(bd, filtered2)) {
                filtered3.add(bd);
            }
        }
        List<Birthday> filtered4 = Arrays.asList();
        for (Birthday bd : filtered3) {
            if (monthUnique(bd, filtered3)) {
                filtered4.add(bd);
            }
        }
        if (Objects.equals(filtered4.size(), 1)) {
            System.out.println("Cheryl's birthday is " + ((Number)bstr(filtered4.get(0))).doubleValue());
        }
        else {
            System.out.println("Something went wrong!");
        }
    }
}
