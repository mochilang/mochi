// Generated by Mochi compiler v0.10.26 on 2025-07-16T12:11:29Z
// checkpoint-synchronization-3.mochi
import java.util.*;

public class CheckpointSynchronization3 {
    static String lower(String ch) {
        String up = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        String low = "abcdefghijklmnopqrstuvwxyz";
        int i = 0;
        while (i < up.length()) {
            if (Objects.equals(ch, up.substring(i, i + 1))) {
                return low.substring(i, i + 1);
            }
            i = (int)(i + 1);
        }
        return ch;
    }
    public static void main(String[] args) {
    List<String> partList = new ArrayList<>(Arrays.asList("A", "B", "C", "D"));
    int nAssemblies = 3;
    for (String p : partList) {
        System.out.println(p + " worker running");
    }
    for (int cycle = 1; cycle < (nAssemblies + 1); cycle++) {
        System.out.println("begin assembly cycle " + String.valueOf(cycle));
        String a = "";
        for (String p : partList) {
            System.out.println(p + " worker begins part");
            System.out.println(p + " worker completed " + lower(p));
            a = a + lower(p);
        }
        System.out.println(a + " assembled.  cycle " + String.valueOf(cycle) + " complete");
    }
    for (String p : partList) {
        System.out.println(p + " worker stopped");
    }
    }
}
