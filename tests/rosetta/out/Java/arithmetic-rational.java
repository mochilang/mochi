// Generated by Mochi compiler v0.10.30 on 2006-01-02T15:04:05Z
// arithmetic-rational.mochi
import java.util.*;

public class ArithmeticRational {
    static int intSqrt(int x) {
        if (x < 2) {
            return x;
        }
        int left = 1;
        double right = x / 2;
        int ans = 0;
        while (left <= right) {
            double mid = left + (right - left) / 2;
            double sq = mid * mid;
            if (sq == x) {
                return mid;
            }
            if (sq < x) {
                left = (int)(mid + 1);
                ans = (int)(mid);
            }
            else {
                right = mid - 1;
            }
        }
        return ans;
    }
    static int sumRecip(int n) {
        int s = 1;
        int limit = intSqrt(n);
        int f = 2;
        while (f <= limit) {
            if (Objects.equals(n % f, 0)) {
                s = (int)(s + n / f);
                double f2 = n / f;
                if (f2 != f) {
                    s = (int)(s + f);
                }
            }
            f = (int)(f + 1);
        }
        return s;
    }
    static void main() {
        List<Integer> nums = new ArrayList<>(Arrays.asList(6, 28, 120, 496, 672, 8128, 30240, 32760, 523776));
        for (Integer n : nums) {
            int s = sumRecip(n);
            if (Objects.equals(s % n, 0)) {
                double val = s / n;
                String perfect = "";
                if (val == 1) {
                    perfect = "perfect!";
                }
                System.out.println("Sum of recipr. factors of " + String.valueOf(n) + " = " + String.valueOf(val) + " exactly " + perfect);
            }
        }
    }
    public static void main(String[] args) {
        main();
    }
}
