// Generated by Mochi compiler v0.10.30 on 2006-01-02T15:04:05Z
// convert-decimal-number-to-rational.mochi
import java.util.*;

public class ConvertDecimalNumberToRational {
    static int gcd(int a, int b) {
        int x = a;
        if (x < 0) {
            x = (int)(-x);
        }
        int y = b;
        if (y < 0) {
            y = (int)(-y);
        }
        while (y != 0) {
            int t = x % y;
            x = (int)(y);
            y = (int)(t);
        }
        return x;
    }
    static Map<String,Integer> parseRational(String s) {
        int intPart = 0;
        int fracPart = 0;
        int denom = 1;
        boolean afterDot = false;
        int i = 0;
        while (i < s.length()) {
            String ch = s.substring(i, i + 1);
            if (Objects.equals(ch, ".")) {
                afterDot = true;
            }
            else {
                int d = int(ch) - int("0");
                if (!afterDot) {
                    intPart = (int)(intPart * 10 + d);
                }
                else {
                    fracPart = (int)(fracPart * 10 + d);
                    denom = (int)(denom * 10);
                }
            }
            i = (int)(i + 1);
        }
        int num = intPart * denom + fracPart;
        int g = gcd(num, denom);
        return new NumDen(Integer.parseInt((num / g)), Integer.parseInt((denom / g)));
    }
    static void main() {
        List<String> inputs = new ArrayList<>(Arrays.asList("0.9054054", "0.518518", "0.75"));
        for (String s : inputs) {
            Map<String,Integer> r = parseRational(s);
            System.out.println(((Number)((Number)s + " = " + ((Number)String.valueOf(r.get("num"))).doubleValue()).doubleValue() + "/").doubleValue() + ((Number)String.valueOf(r.get("den"))).doubleValue());
        }
    }
    public static void main(String[] args) {
        main();
    }
}
