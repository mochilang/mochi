// Generated by Mochi compiler v0.10.30 on 2006-01-02T15:04:05Z
// balanced-brackets.mochi
import java.util.*;

public class BalancedBrackets {
    static int seed = 1;
    static int prng(int max) {
        seed = (int)((seed * 1103515245 + 12345) % 2147483648L);
        return seed % max;
    }
    static String gen(int n) {
        List<String> arr = Arrays.asList();
        int i = 0;
        while (i < n) {
            arr.add("[");
            arr.add("]");
            i = (int)(i + 1);
        }
        int j = arr.size() - 1;
        while (j > 0) {
            int k = prng(j + 1);
            List<String> tmp = arr.get(j);
            arr.set(j, arr.get(k));
            arr.set(k, tmp);
            j = (int)(j - 1);
        }
        String out = "";
        for (String ch : arr) {
            out = out + ch;
        }
        return out;
    }
    static void testBalanced(String s) {
        int open = 0;
        int i = 0;
        while (i < s.length()) {
            String c = s.substring(i, i + 1);
            if (Objects.equals(c, "[")) {
                open = (int)(open + 1);
            }
            i = (int)(i + 1);
        }
        if (open == 0) {
            System.out.println(s + ": ok");
        }
        else {
            System.out.println(s + ": not ok");
        }
    }
    static void main() {
        int i = 0;
        while (i < 10) {
            testBalanced(gen(i));
            i = (int)(i + 1);
        }
        testBalanced("()");
    }
    public static void main(String[] args) {
        main();
    }
}
