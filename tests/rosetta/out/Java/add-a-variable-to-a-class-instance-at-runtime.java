// Generated by Mochi compiler v0.10.30 on 2006-01-02T15:04:05Z
// add-a-variable-to-a-class-instance-at-runtime.mochi
import java.util.*;

class SomeStruct {
    Map<String,String> runtimeFields;
    SomeStruct(Map<String,String> runtimeFields) {
        this.runtimeFields = runtimeFields;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof SomeStruct other)) return false;
        return Objects.equals(this.runtimeFields, other.runtimeFields);
    }
    @Override public int hashCode() {
        return Objects.hash(runtimeFields);
    }
}
public class AddAVariableToAClassInstanceAtRuntime {
    static void main() {
        SomeStruct ss = new SomeStruct(new LinkedHashMap<>());
        System.out.println("Create two fields at runtime: \n");
        int i = 1;
        while (i <= 2) {
            System.out.println("  Field #" + String.valueOf(i) + ":\n");
            System.out.println("       Enter name  : ");
            String name = scanner.nextLine();
            System.out.println("       Enter value : ");
            String value = scanner.nextLine();
            Map<String,String> fields = ss.runtimeFields;
            fields.put(name, value);
            ss.runtimeFields = fields;
            System.out.println("\n");
            i = (int)(i + 1);
        }
        while (true) {
            System.out.println("Which field do you want to inspect ? ");
            String name = scanner.nextLine();
            if (ss.runtimeFields.containsKey(name)) {
                Map<String,String> value = ss.runtimeFields.get(name);
                System.out.println("Its value is '" + value + "'");
                return ;
            }
            else {
                System.out.println("There is no field of that name, try again\n");
            }
        }
    }
    public static void main(String[] args) {
        main();
    }
}
