// Generated by Mochi compiler v0.10.30 on 2006-01-02T15:04:05Z
// active-directory-connect.mochi
import java.util.*;

class LDAPClient {
    String Base;
    String Host;
    int Port;
    boolean UseSSL;
    String BindDN;
    String BindPassword;
    String UserFilter;
    String GroupFilter;
    List<String> Attributes;
    LDAPClient(String Base, String Host, int Port, boolean UseSSL, String BindDN, String BindPassword, String UserFilter, String GroupFilter, List<String> Attributes) {
        this.Base = Base;
        this.Host = Host;
        this.Port = Port;
        this.UseSSL = UseSSL;
        this.BindDN = BindDN;
        this.BindPassword = BindPassword;
        this.UserFilter = UserFilter;
        this.GroupFilter = GroupFilter;
        this.Attributes = Attributes;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof LDAPClient other)) return false;
        return Objects.equals(this.Base, other.Base) && Objects.equals(this.Host, other.Host) && Objects.equals(this.Port, other.Port) && Objects.equals(this.UseSSL, other.UseSSL) && Objects.equals(this.BindDN, other.BindDN) && Objects.equals(this.BindPassword, other.BindPassword) && Objects.equals(this.UserFilter, other.UserFilter) && Objects.equals(this.GroupFilter, other.GroupFilter) && Objects.equals(this.Attributes, other.Attributes);
    }
    @Override public int hashCode() {
        return Objects.hash(Base, Host, Port, UseSSL, BindDN, BindPassword, UserFilter, GroupFilter, Attributes);
    }
}
public class ActiveDirectoryConnect {
    static boolean connect(LDAPClient client) {
        return !Objects.equals(client.Host, "") && client.Port > 0;
    }
    static void main() {
        LDAPClient client = new LDAPClient("dc=example,dc=com", "ldap.example.com", 389, false, "uid=readonlyuser,ou=People,dc=example,dc=com", "readonlypassword", "(uid=%s)", "(memberUid=%s)", Arrays.asList("givenName", "sn", "mail", "uid"));
        if (connect(client)) {
            System.out.println("Connected to " + client.Host);
        }
        else {
            System.out.println("Failed to connect");
        }
    }
    public static void main(String[] args) {
        main();
    }
}
