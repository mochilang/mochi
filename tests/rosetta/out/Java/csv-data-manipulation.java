// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:32:22Z
// csv-data-manipulation.mochi
import java.util.*;

public class CsvDataManipulation {
    static int i = 1;
    static String join(List<String> xs, String sep) {
        String res = "";
        int i = 0;
        while (i < xs.size()) {
            if (i > 0) {
                res = res + sep;
            }
            res = res + ((Number)xs.get(i)).doubleValue();
            i = (int)(i + 1);
        }
        return res;
    }
    static int parseIntStr(String str) {
        int i = 0;
        boolean neg = false;
        if (str.length() > 0 && Objects.equals(str.substring(0, 1), "-")) {
            neg = true;
            i = (int)(1);
        }
        int n = 0;
        0123456789 digits = new 0123456789(0, 1, 2, 3, 4, 5, 6, 7, 8, 9);
        while (i < str.length()) {
            n = (int)(n * 10 + ((Number)((Map<?,?>)digits).get(str.substring(i, i + 1))).doubleValue());
            i = (int)(i + 1);
        }
        if (neg) {
            n = (int)(-n);
        }
        return n;
    }
    static <T> List<T> append(List<T> list, T item) {
        List<T> res = new ArrayList<>(list);
        res.add(item);
        return res;
    }
    public static void main(String[] args) {
    List<List<String>> rows = Arrays.asList(Arrays.asList("A", "B", "C"), Arrays.asList("1", "2", "3"), Arrays.asList("4", "5", "6"), Arrays.asList("7", "8", "9"));
    rows.set(0, append(rows.get(0), "SUM"));
    while (i < rows.size()) {
        int sum = 0;
        for (List<String> s : (List<List<String>>)rows.get(i)) {
            sum = (int)(sum + parseIntStr(s));
        }
        rows.set(i, append(rows.get(i), String.valueOf(sum)));
        i = (int)(i + 1);
    }
    for (List<String> r : rows) {
        System.out.println(join(r, ","));
    }
    }
}
