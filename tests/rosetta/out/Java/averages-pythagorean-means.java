// Generated by Mochi compiler v0.10.26 on 2025-07-16T12:10:30Z
// averages-pythagorean-means.mochi
public class AveragesPythagoreanMeans {
    static double powf(double base, int exp) {
        double result = 1.000000;
        int i = 0;
        while (i < exp) {
            result = result * base;
            i = (int)(i + 1);
        }
        return result;
    }
    static double nthRoot(double x, int n) {
        double low = 0.000000;
        double high = x;
        int i = 0;
        while (i < 60) {
            double mid = (low + high) / 2.000000;
            if (powf(mid, n) > x) {
                high = mid;
            }
            else {
                low = mid;
            }
            i = (int)(i + 1);
        }
        return low;
    }
    static void main() {
        double sum = 0.000000;
        double sumRecip = 0.000000;
        double prod = 1.000000;
        int n = 1;
        while (n <= 10) {
            double f = Double.parseDouble(String.valueOf(n));
            sum = sum + f;
            sumRecip = sumRecip + 1.000000 / f;
            prod = prod * f;
            n = (int)(n + 1);
        }
        double count = 10.000000;
        double a = sum / count;
        double g = nthRoot(prod, 10);
        double h = count / sumRecip;
        System.out.println("A: " + String.valueOf(a) + " G: " + String.valueOf(g) + " H: " + String.valueOf(h));
        System.out.println("A >= G >= H: " + String.valueOf(a >= g && g >= h));
    }
    public static void main(String[] args) {
    main();
    }
}
