// Generated by Mochi compiler v0.10.26 on 2025-07-16T11:31:44Z
// ackermann-function-2.mochi
public class AckermannFunction2 {
    static int pow(int base, int exp) {
        int result = 1;
        int i = 0;
        while (i < exp) {
            result = (int)(result * base);
            i = (int)(i + 1);
        }
        return result;
    }
    static int ackermann2(int m, int n) {
        if (m == 0) {
            return n + 1;
        }
        if (m == 1) {
            return n + 2;
        }
        if (m == 2) {
            return 2 * n + 3;
        }
        if (m == 3) {
            return 8 * pow(2, n) - 3;
        }
        if (n == 0) {
            return ackermann2(m - 1, 1);
        }
        return ackermann2(m - 1, ackermann2(m, n - 1));
    }
    static void main() {
        System.out.println("A(0, 0) = " + String.valueOf(ackermann2(0, 0)));
        System.out.println("A(1, 2) = " + String.valueOf(ackermann2(1, 2)));
        System.out.println("A(2, 4) = " + String.valueOf(ackermann2(2, 4)));
        System.out.println("A(3, 4) = " + String.valueOf(ackermann2(3, 4)));
    }
    public static void main(String[] args) {
    main();
    }
}
