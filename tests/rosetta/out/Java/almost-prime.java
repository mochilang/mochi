// Generated by Mochi compiler v0.10.30 on 2006-01-02T15:04:05Z
// almost-prime.mochi
import java.util.*;

public class AlmostPrime {
    static boolean kPrime(int n, int k) {
        int nf = 0;
        int i = 2;
        while (i <= n) {
            while (Objects.equals(n % i, 0)) {
                if (nf == k) {
                    return false;
                }
                nf = (int)(nf + 1);
                n = (int)(n / i);
            }
            i = (int)(i + 1);
        }
        return nf == k;
    }
    static List<Integer> gen(int k, int count) {
        List<Integer> r = Arrays.asList();
        int n = 2;
        while (r.size() < count) {
            if (kPrime(n, k)) {
                r.add(n);
            }
            n = (int)(n + 1);
        }
        return r;
    }
    static void main() {
        int k = 1;
        while (k <= 5) {
            System.out.println(String.valueOf(k) + " " + String.valueOf(gen(k, 10)));
            k = (int)(k + 1);
        }
    }
    public static void main(String[] args) {
        main();
    }
}
