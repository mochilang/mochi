// Generated by Mochi compiler v0.10.26 on 2025-07-16T12:10:36Z
// barnsley-fern.mochi
import java.util.*;

public class BarnsleyFern {
    static List<Integer> randInt(int s, int n) {
        int next = (s * 1664525 + 1013904223) % 2147483647;
        return Arrays.asList(next, next % n);
    }
    static <T> List<T> append(List<T> list, T item) {
        List<T> res = new ArrayList<>(list);
        res.add(item);
        return res;
    }
    public static void main(String[] args) {
    double xMin = -2.182000;
    double xMax = 2.655800;
    double yMin = 0.000000;
    double yMax = 9.998300;
    int width = 60;
    int nIter = 10000;
    double dx = xMax - xMin;
    double dy = yMax - yMin;
    int height = Integer.parseInt((width * dy / dx));
    List<List<String>> grid = Arrays.asList();
    int row = 0;
    while (row < height) {
        List<String> line = Arrays.asList();
        int col = 0;
        while (col < width) {
            line.add(" ");
            col = (int)(col + 1);
        }
        grid.add(line);
        row = (int)(row + 1);
    }
    int seed = 1;
    double x = 0.000000;
    double y = 0.000000;
    int ix = Integer.parseInt(((Double.parseDouble(String.valueOf(width))) * (x - xMin) / dx));
    int iy = Integer.parseInt(((Double.parseDouble(String.valueOf(height))) * (yMax - y) / dy));
    if (ix >= 0 && ix < width && iy >= 0 && iy < height) {
        ((List)grid.get(iy)).set(ix, "*");
    }
    int i = 0;
    while (i < nIter) {
        List<Integer> res = randInt(seed, 100);
        seed = (int)(res.get(0));
        List<Integer> r = res.get(1);
        if (r < 85) {
            double nx = 0.850000 * x + 0.040000 * y;
            double ny = -0.040000 * x + 0.850000 * y + 1.600000;
            x = nx;
            y = ny;
        }
        ix = (int)(Integer.parseInt(((Double.parseDouble(String.valueOf(width))) * (x - xMin) / dx)));
        iy = (int)(Integer.parseInt(((Double.parseDouble(String.valueOf(height))) * (yMax - y) / dy)));
        if (ix >= 0 && ix < width && iy >= 0 && iy < height) {
            ((List)grid.get(iy)).set(ix, "*");
        }
        i = (int)(i + 1);
    }
    row = (int)(0);
    while (row < height) {
        String line = "";
        int col = 0;
        while (col < width) {
            line = line + ((Number)((List)grid.get(row)).get(col)).doubleValue();
            col = (int)(col + 1);
        }
        System.out.println(line);
        row = (int)(row + 1);
    }
    }
}
