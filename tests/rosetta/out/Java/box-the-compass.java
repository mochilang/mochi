// Generated by Mochi compiler v0.10.30 on 2006-01-02T15:04:05Z
// box-the-compass.mochi
import java.util.*;

public class BoxTheCompass {
    static List<String> compassPoint = new ArrayList<>(Arrays.asList("North", "North by east", "North-northeast", "Northeast by north", "Northeast", "Northeast by east", "East-northeast", "East by north", "East", "East by south", "East-southeast", "Southeast by east", "Southeast", "Southeast by south", "South-southeast", "South by east", "South", "South by west", "South-southwest", "Southwest by south", "Southwest", "Southwest by west", "West-southwest", "West by south", "West", "West by north", "West-northwest", "Northwest by west", "Northwest", "Northwest by north", "North-northwest", "North by west"));
    static int i = 0;
    static String padLeft(String s, int w) {
        String res = "";
        int n = w - s.length();
        while (n > 0) {
            res = res + " ";
            n = (int)(n - 1);
        }
        return res + s;
    }
    static String padRight(String s, int w) {
        String out = s;
        int i = s.length();
        while (i < w) {
            out = out + " ";
            i = (int)(i + 1);
        }
        return out;
    }
    static int indexOf(String s, String ch) {
        int i = 0;
        while (i < s.length()) {
            if (Objects.equals(s.substring(i, i + 1), ch)) {
                return i;
            }
            i = (int)(i + 1);
        }
        return -1;
    }
    static String format2(double f) {
        String s = String.valueOf(f);
        int idx = indexOf(s, ".");
        if (idx < 0) {
            s = s + ".00";
        }
        else {
            int need = idx + 3;
            if (s.length() > need) {
                s = s.substring(0, need);
            }
            else {
                while (s.length() < need) {
                    s = s + "0";
                }
            }
        }
        return s;
    }
    static int cpx(double h) {
        int x = Integer.parseInt(((h / 11.250000) + 0.500000));
        x = (int)(x % 32);
        if (x < 0) {
            x = (int)(x + 32);
        }
        return x;
    }
    static String degrees2compasspoint(double h) {
        return compassPoint.get(cpx(h));
    }
    public static void main(String[] args) {
        List<Double> headings = new ArrayList<>(Arrays.asList(0.000000, 16.870000, 16.880000, 33.750000, 50.620000, 50.630000, 67.500000, 84.370000, 84.380000, 101.250000, 118.120000, 118.130000, 135.000000, 151.870000, 151.880000, 168.750000, 185.620000, 185.630000, 202.500000, 219.370000, 219.380000, 236.250000, 253.120000, 253.130000, 270.000000, 286.870000, 286.880000, 303.750000, 320.620000, 320.630000, 337.500000, 354.370000, 354.380000));
        System.out.println("Index  Compass point         Degree");
        while (i < headings.size()) {
            List<Double> h = headings.get(i);
            int idx = i % 32 + 1;
            String cp = degrees2compasspoint(h);
            System.out.println(padLeft(String.valueOf(idx), 4) + "   " + padRight(cp, 19) + " " + format2(h) + "Â°");
            i = (int)(i + 1);
        }
    }
}
