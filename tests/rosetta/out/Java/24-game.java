// Generated by Mochi compiler v0.10.30 on 2006-01-02T15:04:05Z
// 24-game.mochi
import java.util.*;

public class M24Game {
    static int randDigit() {
        return (System.currentTimeMillis() % 9) + 1;
    }
    static void main() {
        List<Object> digits = new ArrayList<>(new ArrayList<>(Arrays.asList()));
        for (int i = 0; i < 4; i++) {
            digits.add(randDigit());
        }
        String numstr = "";
        for (int i = 0; i < 4; i++) {
            numstr = numstr + ((Number)String.valueOf(digits.get(i))).doubleValue();
        }
        System.out.println("Your numbers: " + numstr + "\n");
        System.out.println("Enter RPN: ");
        String expr = scanner.nextLine();
        if (!Objects.equals(expr.length(), 7)) {
            System.out.println("invalid. expression length must be 7. (4 numbers, 3 operators, no spaces)");
            return ;
        }
        List<Object> stack = new ArrayList<>(new ArrayList<>(Arrays.asList()));
        int i = 0;
        boolean valid = true;
        while (i < expr.length()) {
            String ch = expr.substring(i, i + 1);
            if (String.valueOf(ch).compareTo(String.valueOf("0")) >= 0 && String.valueOf(ch).compareTo(String.valueOf("9")) <= 0) {
                if (Objects.equals(digits.size(), 0)) {
                    System.out.println("too many numbers.");
                    return ;
                }
                int j = 0;
                while (!Objects.equals(digits.get(j), Integer.parseInt(String.valueOf(ch)) - Integer.parseInt(String.valueOf("0")))) {
                    j = (int)(j + 1);
                    if (Objects.equals(j, digits.size())) {
                        System.out.println("wrong numbers.");
                        return ;
                    }
                }
                digits = ((List)digits).subList(0, j) + ((List)digits).subList(j + 1, digits.size());
                stack.add(float(Integer.parseInt(String.valueOf(ch)) - Integer.parseInt(String.valueOf("0"))));
            }
            else {
                if (stack.size() < 2) {
                    System.out.println("invalid expression syntax.");
                    valid = false;
                    break;
                }
                List<Object> b = stack.get(stack.size() - 1);
                List<Object> a = stack.get(stack.size() - 2);
                if (Objects.equals(ch, "+")) {
                    stack.set(stack.size() - 2, a + b);
                }
                stack = ((List)stack).subList(0, stack.size() - 1);
            }
            i = (int)(i + 1);
        }
        if (valid) {
            if (((Number)abs(((Number)stack.get(0)).doubleValue() - 24.000000)).doubleValue() > 0.000001) {
                System.out.println(((Number)"incorrect. " + ((Number)String.valueOf(stack.get(0))).doubleValue()).doubleValue() + " != 24");
            }
            else {
                System.out.println("correct.");
            }
        }
    }
    public static void main(String[] args) {
        main();
    }
}
