// Generated by Mochi compiler v0.10.26 on 2025-07-16T12:10:22Z
// associative-array-creation.mochi
import java.util.*;

public class AssociativeArrayCreation {
    static Map<String,Integer> removeKey(Map<String,Integer> m, String k) {
        Map<String,Integer> out = new LinkedHashMap<String,Integer>();
        for (String key : m.keySet()) {
            if (!Objects.equals(key, k)) {
                out.put(key, m.get(key));
            }
        }
        return out;
    }
    static void main() {
        Map<String,Integer> x = null;
        x = new LinkedHashMap<String,Integer>();
        x.put("foo", 3);
        Map<String,Integer> y1 = x.get("bar");
        boolean ok = x.containsKey("bar");
        System.out.println(y1);
        System.out.println(ok);
        x = removeKey(x, "foo");
        x = new FooBarBaz(2, 42, -1);
        System.out.println(x.get("foo") + " " + x.get("bar") + " " + x.get("baz"));
    }
    static <K,V> Map.Entry<K,V> entry(K k, V v) { return new AbstractMap.SimpleEntry<>(k, v); }
    static <K,V> LinkedHashMap<K,V> mapOfEntries(Map.Entry<? extends K,? extends V>... entries) {
        LinkedHashMap<K,V> m = new LinkedHashMap<>();
        for (var e : entries) m.put(e.getKey(), e.getValue());
        return m;
    }
    public static void main(String[] args) {
    main();
    }
}
