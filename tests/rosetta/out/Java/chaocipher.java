// Generated by Mochi compiler v0.10.30 on 2006-01-02T15:04:05Z
// chaocipher.mochi
import java.util.*;

public class Chaocipher {
    static int indexOf(String s, String ch) {
        int i = 0;
        while (i < s.length()) {
            if (Objects.equals(s.substring(i, i + 1), ch)) {
                return i;
            }
            i = (int)(i + 1);
        }
        return -1;
    }
    static String rotate(String s, int n) {
        return s.substring(n, s.length()) + s.substring(0, n);
    }
    static String scrambleLeft(String s) {
        return s.substring(0, 1) + s.substring(2, 14) + s.substring(1, 2) + s.substring(14, s.length());
    }
    static String scrambleRight(String s) {
        return s.substring(1, 3) + s.substring(4, 15) + s.substring(3, 4) + s.substring(15, s.length()) + s.substring(0, 1);
    }
    static String chao(String text, boolean encode) {
        String left = "HXUCZVAMDSLKPEFJRIGTWOBNYQ";
        String right = "PTLNBQDEOYSFAVZKGJRIHWXUMC";
        String out = "";
        int i = 0;
        while (i < text.length()) {
            String ch = text.substring(i, i + 1);
            int idx = 0;
            if (encode) {
                idx = (int)(indexOf(right, ch));
                out = out + left.substring(idx, idx + 1);
            }
            else {
                idx = (int)(indexOf(left, ch));
                out = out + right.substring(idx, idx + 1);
            }
            left = rotate(left, idx);
            right = rotate(right, idx);
            left = scrambleLeft(left);
            right = scrambleRight(right);
            i = (int)(i + 1);
        }
        return out;
    }
    static void main() {
        String plain = "WELLDONEISBETTERTHANWELLSAID";
        String cipher = chao(plain, true);
        System.out.println(plain);
        System.out.println(cipher);
        System.out.println(chao(cipher, false));
    }
    public static void main(String[] args) {
        main();
    }
}
