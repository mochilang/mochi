javac: exit status 1
/tmp/CastingOutNines.java:81: error: incompatible types: TestCase cannot be converted to List<TestCase>
            List<TestCase> tc = testCases.get(idx);
                                             ^
/tmp/CastingOutNines.java:82: error: incompatible types: String cannot be converted to Number
            System.out.println(((Number)((Number)((Number)((Number)((Number)"\nTest case base = " + ((Number)String.valueOf(tc.get("base"))).doubleValue()).doubleValue() + ", begin = ").doubleValue() + ((Number)tc.get("begin")).doubleValue()).doubleValue() + ", end = ").doubleValue() + ((Number)tc.get("end")).doubleValue()).doubleValue() + ":");
                                                                            ^
/tmp/CastingOutNines.java:82: error: incompatible types: String cannot be converted to int
            System.out.println(((Number)((Number)((Number)((Number)((Number)"\nTest case base = " + ((Number)String.valueOf(tc.get("base"))).doubleValue()).doubleValue() + ", begin = ").doubleValue() + ((Number)tc.get("begin")).doubleValue()).doubleValue() + ", end = ").doubleValue() + ((Number)tc.get("end")).doubleValue()).doubleValue() + ":");
                                                                                                                                   ^
/tmp/CastingOutNines.java:82: error: cannot find symbol
            System.out.println(((Number)((Number)((Number)((Number)((Number)"\nTest case base = " + ((Number)String.valueOf(tc.get("base"))).doubleValue()).doubleValue() + ", begin = ").doubleValue() + ((Number)tc.get("begin")).doubleValue()).doubleValue() + ", end = ").doubleValue() + ((Number)tc.get("end")).doubleValue()).doubleValue() + ":");
                                                                                                                                                                                         ^
  symbol:   method doubleValue()
  location: class String
/tmp/CastingOutNines.java:82: error: incompatible types: String cannot be converted to int
            System.out.println(((Number)((Number)((Number)((Number)((Number)"\nTest case base = " + ((Number)String.valueOf(tc.get("base"))).doubleValue()).doubleValue() + ", begin = ").doubleValue() + ((Number)tc.get("begin")).doubleValue()).doubleValue() + ", end = ").doubleValue() + ((Number)tc.get("end")).doubleValue()).doubleValue() + ":");
                                                                                                                                                                                                                          ^
/tmp/CastingOutNines.java:82: error: bad operand types for binary operator '+'
            System.out.println(((Number)((Number)((Number)((Number)((Number)"\nTest case base = " + ((Number)String.valueOf(tc.get("base"))).doubleValue()).doubleValue() + ", begin = ").doubleValue() + ((Number)tc.get("begin")).doubleValue()).doubleValue() + ", end = ").doubleValue() + ((Number)tc.get("end")).doubleValue()).doubleValue() + ":");
                                                                                                                                                                                                        ^
  first type:  Number
  second type: double
/tmp/CastingOutNines.java:82: error: cannot find symbol
            System.out.println(((Number)((Number)((Number)((Number)((Number)"\nTest case base = " + ((Number)String.valueOf(tc.get("base"))).doubleValue()).doubleValue() + ", begin = ").doubleValue() + ((Number)tc.get("begin")).doubleValue()).doubleValue() + ", end = ").doubleValue() + ((Number)tc.get("end")).doubleValue()).doubleValue() + ":");
                                                                                                                                                                                                                                                                              ^
  symbol:   method doubleValue()
  location: class String
/tmp/CastingOutNines.java:82: error: incompatible types: String cannot be converted to int
            System.out.println(((Number)((Number)((Number)((Number)((Number)"\nTest case base = " + ((Number)String.valueOf(tc.get("base"))).doubleValue()).doubleValue() + ", begin = ").doubleValue() + ((Number)tc.get("begin")).doubleValue()).doubleValue() + ", end = ").doubleValue() + ((Number)tc.get("end")).doubleValue()).doubleValue() + ":");
                                                                                                                                                                                                                                                                                                               ^
/tmp/CastingOutNines.java:82: error: bad operand types for binary operator '+'
            System.out.println(((Number)((Number)((Number)((Number)((Number)"\nTest case base = " + ((Number)String.valueOf(tc.get("base"))).doubleValue()).doubleValue() + ", begin = ").doubleValue() + ((Number)tc.get("begin")).doubleValue()).doubleValue() + ", end = ").doubleValue() + ((Number)tc.get("end")).doubleValue()).doubleValue() + ":");
                                                                                                                                                                                                                                                                                             ^
  first type:  Number
  second type: double
/tmp/CastingOutNines.java:83: error: incompatible types: String cannot be converted to int
            List<String> s = subset(tc.get("base"), tc.get("begin"), tc.get("end"));
                                           ^
/tmp/CastingOutNines.java:83: error: incompatible types: String cannot be converted to int
            List<String> s = subset(tc.get("base"), tc.get("begin"), tc.get("end"));
                                                           ^
/tmp/CastingOutNines.java:83: error: incompatible types: String cannot be converted to int
            List<String> s = subset(tc.get("base"), tc.get("begin"), tc.get("end"));
                                                                            ^
/tmp/CastingOutNines.java:85: error: incompatible types: String cannot be converted to int
            System.out.println("Kaprekar:" + ((Number)String.valueOf(tc.get("kaprekar"))).doubleValue());
                                                                            ^
/tmp/CastingOutNines.java:89: error: incompatible types: String cannot be converted to int
            while (i < ((Number)tc.get("kaprekar").size()).doubleValue()) {
                                       ^
/tmp/CastingOutNines.java:90: error: incompatible types: String cannot be converted to int
                List<TestCase> k = ((Map<?,?>)((List)tc.get("kaprekar"))).get(i);
                                                            ^
/tmp/CastingOutNines.java:90: error: incompatible types: CAP#1 cannot be converted to List<TestCase>
                List<TestCase> k = ((Map<?,?>)((List)tc.get("kaprekar"))).get(i);
                                                                             ^
  where CAP#1 is a fresh type-variable:
    CAP#1 extends Object from capture of ?
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
16 errors
