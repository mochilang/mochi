// Generated by Mochi compiler v0.10.26 on 2025-07-16T11:32:03Z
// arena-storage-pool.mochi
import java.util.*;

public class ArenaStoragePool {
    static List<Integer> poolPut(List<Integer> p, int x) {
        return append(p, x);
    }
    static Map<String,any> poolGet(List<Integer> p) {
        if (Objects.equals(p.size(), 0)) {
            System.out.println("pool empty");
            return new PoolVal(p, 0);
        }
        int idx = p.size() - 1;
        List<Integer> v = p.get(idx);
        p = ((List)p).subList(0, idx);
        return new PoolVal(p, v);
    }
    static List<Integer> clearPool(List<Integer> p) {
        return Arrays.asList();
    }
    static void main() {
        List<Integer> pool = Arrays.asList();
        int i = 1;
        int j = 2;
        System.out.println(String.valueOf(i + j));
        pool = poolPut(pool, i);
        pool = poolPut(pool, j);
        i = (int)(0);
        j = (int)(0);
        Map<String,any> res1 = poolGet(pool);
        pool = (List<Integer>)((any)res1.get("pool"));
        i = (int)(Integer.parseInt(((any)res1.get("val"))));
        Map<String,any> res2 = poolGet(pool);
        pool = (List<Integer>)((any)res2.get("pool"));
        j = (int)(Integer.parseInt(((any)res2.get("val"))));
        i = (int)(4);
        j = (int)(5);
        System.out.println(String.valueOf(i + j));
        pool = poolPut(pool, i);
        pool = poolPut(pool, j);
        i = (int)(0);
        j = (int)(0);
        pool = clearPool(pool);
        Map<String,any> res3 = poolGet(pool);
        pool = (List<Integer>)((any)res3.get("pool"));
        i = (int)(Integer.parseInt(((any)res3.get("val"))));
        Map<String,any> res4 = poolGet(pool);
        pool = (List<Integer>)((any)res4.get("pool"));
        j = (int)(Integer.parseInt(((any)res4.get("val"))));
        i = (int)(7);
        j = (int)(8);
        System.out.println(String.valueOf(i + j));
    }
    static <T> List<T> append(List<T> list, T item) {
        List<T> res = new ArrayList<>(list);
        res.add(item);
        return res;
    }
    public static void main(String[] args) {
    main();
    }
}
