// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
// bioinformatics-base-count.mochi
import java.util.*;

public class BioinformaticsBaseCount {
    static String padLeft(String s, int w) {
        String res = "";
        int n = w - s.length();
        while (n > 0) {
            res = res + " ";
            n = (int)(n - 1);
        }
        return res + s;
    }
    public static void main(String[] args) {
        String dna = "" + "CGTAAAAAATTACAACGTCCTTTGGCTATCTCTTAAACTCCTGCTAAATG" + "CTCGTGCTTTCCAATTATGTAAGCGTTCCGAGACGGGGTGGTCGATTCTG" + "AGGACAAAGGTCAAGATGGAGCGCATCGAACGCAATAAGGATCATTTGAT" + "GGGACGTTTCGTCGACAAAGTCTTGTTTCGAGAGTAACGGCTACCGTCTT" + "CGATTCTGCTTATAACACTATGTTCTTATGAAATGGATGTTCTGAGTTGG" + "TCAGTCCCAATGTGCGGGGTTTCTTTTAGTACGTCGGGAGTGGTATTATA" + "TTTAATTTTTCTATATAGCGATCTGTATTTAAGCAATTCATTTAGGTTAT" + "CGCCGCGATGCTCGGTTCGGACCGCCAAGCATCTGGCTCCACTGCTAGTG" + "TCCTAAATTTGAATGGCAAACACAAATAAGATTTAGCAATTCGTGTAGAC" + "GACCGGGGACTTGCATGATGGGAGCAGCTTTGTTAAACTACGAACGTAAT";
        System.out.println("SEQUENCE:");
        int le = dna.length();
        int i = 0;
        while (i < le) {
            int k = i + 50;
            if (k > le) {
                k = (int)(le);
            }
            System.out.println(padLeft(String.valueOf(i), 5) + ": " + dna.substring(i, k));
            i = (int)(i + 50);
        }
        int a = 0;
        int c = 0;
        int g = 0;
        int t = 0;
        int idx = 0;
        while (idx < le) {
            String ch = dna.substring(idx, idx + 1);
            if (Objects.equals(ch, "A")) {
                a = (int)(a + 1);
            }
            else {
                if (Objects.equals(ch, "C")) {
                    c = (int)(c + 1);
                }
                else {
                    if (Objects.equals(ch, "G")) {
                        g = (int)(g + 1);
                    }
                    else {
                        if (Objects.equals(ch, "T")) {
                            t = (int)(t + 1);
                        }
                    }
                }
            }
            idx = (int)(idx + 1);
        }
        System.out.println("");
        System.out.println("BASE COUNT:");
        System.out.println("    A: " + padLeft(String.valueOf(a), 3));
        System.out.println("    C: " + padLeft(String.valueOf(c), 3));
        System.out.println("    G: " + padLeft(String.valueOf(g), 3));
        System.out.println("    T: " + padLeft(String.valueOf(t), 3));
        System.out.println("    ------");
        System.out.println("    Î£: " + String.valueOf(le));
        System.out.println("    ======");
    }
}
