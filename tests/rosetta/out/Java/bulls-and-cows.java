// Generated by Mochi compiler v0.10.30 on 2006-01-02T15:04:05Z
// bulls-and-cows.mochi
import java.util.*;

public class BullsAndCows {
    static int indexOf(String s, String ch) {
        int i = 0;
        while (i < s.length()) {
            if (Objects.equals(s.substring(i, i + 1), ch)) {
                return i;
            }
            i = (int)(i + 1);
        }
        return -1;
    }
    static List<String> shuffle(List<String> xs) {
        List<String> arr = xs;
        int i = arr.size() - 1;
        while (i > 0) {
            int j = System.currentTimeMillis() % (i + 1);
            List<String> tmp = arr.get(i);
            arr.set(i, arr.get(j));
            arr.set(j, tmp);
            i = (int)(i - 1);
        }
        return arr;
    }
    static void main() {
        System.out.println("Cows and Bulls");
        System.out.println("Guess four digit number of unique digits in the range 1 to 9.");
        System.out.println("A correct digit but not in the correct place is a cow.");
        System.out.println("A correct digit in the correct place is a bull.");
        List<String> digits = new ArrayList<>(Arrays.asList("1", "2", "3", "4", "5", "6", "7", "8", "9"));
        digits = shuffle(digits);
        int pat = ((Number)((Number)((Number)digits.get(0)).doubleValue() + ((Number)digits.get(1)).doubleValue()).doubleValue() + ((Number)digits.get(2)).doubleValue()).doubleValue() + ((Number)digits.get(3)).doubleValue();
        String valid = "123456789";
        while (true) {
            System.out.println("Guess: ");
            String guess = scanner.nextLine();
            if (!Objects.equals(guess.length(), 4)) {
                System.out.println("Please guess a four digit number.");
                continue;
            }
            int cows = 0;
            int bulls = 0;
            String seen = "";
            int i = 0;
            boolean malformed = false;
            while (i < 4) {
                String cg = guess.substring(i, i + 1);
                if (!Objects.equals(indexOf(seen, cg), (-1))) {
                    System.out.println("Repeated digit: " + cg);
                    malformed = true;
                    break;
                }
                seen = seen + cg;
                int pos = indexOf(pat, cg);
                if (Objects.equals(pos, (-1))) {
                    if (Objects.equals(indexOf(valid, cg), (-1))) {
                        System.out.println("Invalid digit: " + cg);
                        malformed = true;
                        break;
                    }
                }
                else {
                    if (pos == i) {
                        bulls = (int)(bulls + 1);
                    }
                    else {
                        cows = (int)(cows + 1);
                    }
                }
                i = (int)(i + 1);
            }
            if (malformed) {
                continue;
            }
            System.out.println("Cows: " + String.valueOf(cows) + ", bulls: " + String.valueOf(bulls));
            if (bulls == 4) {
                System.out.println("You got it.");
                break;
            }
        }
    }
    public static void main(String[] args) {
        main();
    }
}
