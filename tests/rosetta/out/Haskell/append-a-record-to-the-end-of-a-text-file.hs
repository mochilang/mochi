-- Generated by Mochi compiler v0.10.26 on 2025-07-16T09:31:18Z
-- Code generated by Mochi compiler; DO NOT EDIT.
{-# LANGUAGE DeriveGeneric #-}

module Main where

import Data.Maybe (fromMaybe)

writeTwo :: [String]
writeTwo = ["jsmith:x:1001:1000:Joe Smith,Room 1007,(234)555-8917,(234)555-0077,jsmith@rosettacode.org:/home/jsmith:/bin/bash", "jdoe:x:1002:1000:Jane Doe,Room 1004,(234)555-8914,(234)555-0044,jdoe@rosettacode.org:/home/jsmith:/bin/bash"]

appendOneMore :: [String] -> [String]
appendOneMore lines = (lines ++ ["xyz:x:1003:1000:X Yz,Room 1003,(234)555-8913,(234)555-0033,xyz@rosettacode.org:/home/xyz:/bin/bash"])

main :: ()
main =
  fromMaybe (()) $
    (let lines = writeTwo in (let lines = appendOneMore lines in if (((length lines >= 3) && (lines !! 2)) == "xyz:x:1003:1000:X Yz,Room 1003,(234)555-8913,(234)555-0033,xyz@rosettacode.org:/home/xyz:/bin/bash") then (let _ = putStrLn ("append okay") in Nothing) else (let _ = putStrLn ("it didn't work") in Nothing)))

main :: IO ()
main = do
  main
