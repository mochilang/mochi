-- Generated by Mochi compiler v0.10.26 on 2025-07-16T09:30:29Z
-- Code generated by Mochi compiler; DO NOT EDIT.
{-# LANGUAGE DeriveGeneric #-}

module Main where

import qualified Data.Map as Map
import Data.Maybe (fromMaybe)

bar :: Int -> Int -> Int -> ()
bar a b c =
  fromMaybe (()) $
    (let _ = putStrLn (((((show a ++ ", ") ++ show b) ++ ", ") ++ show c)) in Nothing)

main :: ()
main =
  fromMaybe (()) $
    (let args = Map.fromList [] in (let args = Map.insert "a" 3 args in (let args = Map.insert "b" 2 args in (let args = Map.insert "c" 1 args in (let _ = bar (args !! "a") (args !! "b") (args !! "c") in Nothing)))))

main :: IO ()
main = do
  main
