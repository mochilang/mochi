// Generated by Mochi compiler v0.10.30 on 2025-07-18T18:46:30Z
open System

let PI: float = 3.141592653589793
let rec sinApprox (x: float) =
    let mutable term: float = x
    let mutable sum: float = x
    let mutable n: int = 1
    while n <= 12 do
        let denom: float = float ((2 * n) * (2 * n + 1))
        term <- -term * x * x / denom
        sum <- sum + term
        n <- n + 1
    sum
let dt: float = 0.01
let mutable s: float = 0.0
let mutable t1: float = 0.0
let mutable k1: float = sinApprox (0.0)
let mutable i: int = 1
while i <= 200 do
    let t2 = (float i) * dt
    let k2: float = sinApprox (t2 * PI)
    s <- s + (k1 + k2) * 0.5 * (t2 - t1)
    t1 <- t2
    k1 <- k2
    i <- i + 1
let mutable i2: int = 1
while i2 <= 50 do
    let t2: float = 2.0 + (float i2) * dt
    let k2: float = 0.0
    s <- s + (k1 + k2) * 0.5 * (t2 - t1)
    t1 <- t2
    k1 <- k2
    i2 <- i2 + 1
printfn "%f" s
