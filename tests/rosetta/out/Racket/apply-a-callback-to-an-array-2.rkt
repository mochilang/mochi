; Generated by Mochi compiler v0.10.26 on 2025-07-16T11:37:44Z
#lang racket
(define (each xs f)
  (let/ec return
(for ([x (if (hash? xs) (hash-keys xs) xs)])
(f x)
)
  ))
(define (Map xs f)
  (let/ec return
(define r '())
(for ([x (if (hash? xs) (hash-keys xs) xs)])
(set! r (append r (list (f x))))
)
(return r)
  ))
(define (main )
  (let/ec return
(define s '(1 2 3 4 5))
(each s (lambda (i) (displayln (number->string (* i i)))))
(displayln (number->string (Map s (lambda (i) (* i i)))))
  ))
(main )
