; Generated by Mochi compiler v0.10.26 on 2025-07-16T11:36:07Z
#lang racket
(struct Dog (kind name) #:transparent #:mutable)
(struct Cat (kind name) #:transparent #:mutable)
(define (beastKind b)
  (let/ec return
(return (match b [(Dog k _) k] [(Cat k _) k]))
  ))
(define (beastName b)
  (let/ec return
(return (match b [(Dog _ n) n] [(Cat _ n) n]))
  ))
(define (beastCry b)
  (let/ec return
(return (match b [(Dog _ _) "Woof"] [(Cat _ _) "Meow"]))
  ))
(define (bprint b)
  (let/ec return
(displayln (string-append (string-append (string-append (string-append (string-append (beastName b) ", who's a ") (beastKind b)) ", cries: \"") (beastCry b)) "\"."))
  ))
(define (main )
  (let/ec return
(define d (Dog "labrador" "Max"))
(define c (Cat "siamese" "Sammy"))
(bprint d)
(bprint c)
  ))
(main )
