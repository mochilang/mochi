; Generated by Mochi compiler v0.10.26 on 2025-07-16T11:37:33Z
#lang racket
(require racket/list)
(define (angleDiff b1 b2)
  (let/ec return
(define diff (- b2 b1))
(return (- (remainder (+ (+ (remainder diff 360) 360) 180) 360) 180))
  ))
(define testCases (list '(20 45) (list (- 0 45) 45) (list (- 0 85) 90) (list (- 0 95) 90) (list (- 0 45) 125) (list (- 0 45) 145) (list 29.4803 (- 0 88.6381)) (list (- 0 78.3251) (- 0 159.036)) (list (- 0 70099.74233810938) 29840.67437876723) (list (- 0 165313.6666297357) 33693.9894517456) (list 1174.8380510598456 (- 0 154146.66490124757)) '(60175.77306795546 42213.07192354373)))
(for ([tc (if (hash? testCases) (hash-keys testCases) testCases)])
(displayln (angleDiff (cond [(string? tc) (string-ref tc 0)] [(hash? tc) (hash-ref tc 0)] [else (list-ref tc 0)]) (cond [(string? tc) (string-ref tc 1)] [(hash? tc) (hash-ref tc 1)] [else (list-ref tc 1)])))
)
