// Generated by Mochi compiler v0.10.26 on 1970-01-01T00:00:00Z
const std = @import("std");

fn handleError(err: anyerror) noreturn {
    std.debug.panic("{any}", .{err});
}

fn _concat_string(a: []const u8, b: []const u8) []const u8 {
    return std.mem.concat(u8, &[_][]const u8{ a, b }) catch |err| handleError(err);
}

fn printStat(fs: std.AutoHashMap([]const u8, bool), path: []const u8) void {
    if (fs.contains(path)) {
        if (fs[path]) {
            std.debug.print("{s}\n", .{_concat_string(path, " is a directory")});
        } else {
            std.debug.print("{s}\n", .{_concat_string(path, " is a file")});
        }
    } else {
        std.debug.print("{s}\n", .{_concat_string(_concat_string("stat ", path), ": no such file or directory")});
    }
}

fn main() void {
    var fs = std.AutoHashMap([]const u8, bool).init(std.heap.page_allocator);
    _ = fs.put("docs", true) catch |err| handleError(err);
    for (&[_][]const u8{
    "input.txt",
    "/input.txt",
    "docs",
    "/docs",
}) |p| {
        printStat(fs, p);
    }
}

pub fn main() void {
    main();
}
