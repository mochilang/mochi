// Generated by Mochi compiler v0.10.30 on 2025-07-18T17:40:44Z
const std = @import("std");

fn _concat_string(a: []const u8, b: []const u8) []const u8 {
    const alloc = std.heap.page_allocator;
    return std.mem.concat(alloc, u8, &[_][]const u8{ a, b }) catch |err| handleError(err);
}

fn handleError(err: anyerror) noreturn {
    std.debug.panic("{any}", .{err});
}

var result: []const u8 = ""; // []const u8

pub fn main() void {
    for (1 .. 101) |i| {
        var j: i32 = 1; // i32
        while ((j * j) < i) {
            j = (j + 1);
        }
        if ((j * j) == i) {
            result = _concat_string(result, "O");
        } else {
            result = _concat_string(result, "-");
        }
    }
    std.debug.print("{s}\n", .{result});
}
