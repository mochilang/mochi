// Generated by Mochi compiler v0.10.26 on 1970-01-01T00:00:00Z
const std = @import("std");

fn handleError(err: anyerror) noreturn {
    std.debug.panic("{any}", .{err});
}

fn abs(x: f64) f64 {
    if (x < 0.0) {
        return -x;
    }
    return x;
}

fn sqrtApprox(x: f64) f64 {
    var guess = x; // f64
    var i = 0; // i32
    while (i < 20) {
        guess = (((guess + (x / guess))) / 2.0);
        i = (i + 1);
    }
    return guess;
}

fn agmPi() f64 {
    var a = 1.0; // f64
    var g = (1.0 / sqrtApprox(2.0)); // f64
    var sum = 0.0; // f64
    var pow = 2.0; // f64
    while (std.math.abs((a - g)) > 0.000000000000001) {
        var t = (((a + g)) / 2.0); // f64
        var u = sqrtApprox((a * g)); // f64
        a = t;
        g = u;
        pow = (pow * 2.0);
        var diff = ((a * a) - (g * g)); // f64
        sum = (sum + (diff * pow));
    }
    var pi: i32 = (((4.0 * a) * a) / ((1.0 - sum))); // i32
    return pi;
}

fn main() void {
    std.debug.print("{s}\n", .{std.fmt.allocPrint(std.heap.page_allocator, "{d}", .{agmPi()}) catch |err| handleError(err)});
}

pub fn main() void {
    main();
}
