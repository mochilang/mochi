// Generated by Mochi compiler v0.10.26 on 1970-01-01T00:00:00Z
const std = @import("std");

fn handleError(err: anyerror) noreturn {
    std.debug.panic("{any}", .{err});
}

fn binom(n: i32, k: i32) i32 {
    if ((k < 0) or (k > n)) {
        return 0;
    }
    var kk = k; // i32
    if (kk > (n - kk)) {
        kk = (n - kk);
    }
    var res = 1; // i32
    var i = 0; // i32
    while (i < kk) {
        res = ((res * ((n - i))));
        i = (i + 1);
        res = @as(i32, ((res / i)));
    }
    return res;
}

fn catalan(n: i32) i32 {
    return @as(i32, ((binom((2 * n), n) / ((n + 1)))));
}

fn main() void {
    for (0 .. 15) |i| {
        std.debug.print("{s}\n", .{std.fmt.allocPrint(std.heap.page_allocator, "{d}", .{catalan(i)}) catch |err| handleError(err)});
    }
}

pub fn main() void {
    main();
}
