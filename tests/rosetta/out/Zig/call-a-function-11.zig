// Generated by Mochi compiler v0.10.26 on 1970-01-01T00:00:00Z
const std = @import("std");

fn handleError(err: anyerror) noreturn {
    std.debug.panic("{any}", .{err});
}

fn _concat_string(a: []const u8, b: []const u8) []const u8 {
    return std.mem.concat(u8, &[_][]const u8{ a, b }) catch |err| handleError(err);
}

fn zeroval(ival: i32) i32 {
    var x = ival; // i32
    x = 0;
    return x;
}

fn zeroptr(ref: []const i32) void {
    ref.items[0] = 0;
}

fn user_main() void {
    var i = 1; // i32
    std.debug.print("{s}\n", .{_concat_string("initial: ", std.fmt.allocPrint(std.heap.page_allocator, "{d}", .{i}) catch |err| handleError(err))});
    const tmp = zeroval(i); // i32
    std.debug.print("{s}\n", .{_concat_string("zeroval: ", std.fmt.allocPrint(std.heap.page_allocator, "{d}", .{i}) catch |err| handleError(err))});
    var box = &[_]i32{i}; // []const i32
    zeroptr(box);
    i = box[0];
    std.debug.print("{s}\n", .{_concat_string("zeroptr: ", std.fmt.allocPrint(std.heap.page_allocator, "{d}", .{i}) catch |err| handleError(err))});
    std.debug.print("pointer: 0\n", .{});
}

pub fn main() void {
    user_main();
}
