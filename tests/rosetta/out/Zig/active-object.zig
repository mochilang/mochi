// Generated by Mochi compiler v0.10.26 on 1970-01-01T00:00:00Z
const std = @import("std");

const PI = 3.141592653589793; // f64
const dt = 0.01; // f64
var s = 0.0; // f64
var t1 = 0.0; // f64
var k1 = sinApprox(0.0); // f64
var i = 1; // i32
var _i2 = 1; // i32

fn sinApprox(x: f64) f64 {
    var term = x; // f64
    var sum = x; // f64
    var n = 1; // i32
    while (n <= 12) {
        const denom = @as(f64, ((((2 * n)) * (((2 * n) + 1))))); // f64
        term = (((-term * x) * x) / denom);
        sum = (sum + term);
        n = (n + 1);
    }
    return sum;
}

pub fn main() void {
    while (i <= 200) {
        const t2 = ((@as(f64, i)) * dt); // f64
        const k2 = sinApprox((t2 * PI)); // f64
        s = (s + ((((k1 + k2)) * 0.5) * ((t2 - t1))));
        t1 = t2;
        k1 = k2;
        i = (i + 1);
    }
    while (_i2 <= 50) {
        const t2 = (2.0 + ((@as(f64, _i2)) * dt)); // f64
        const k2 = 0.0; // f64
        s = (s + ((((k1 + k2)) * 0.5) * ((t2 - t1))));
        t1 = t2;
        k1 = k2;
        _i2 = (_i2 + 1);
    }
    std.debug.print("{d}\n", .{s});
}
