// Generated by Mochi compiler v0.10.26 on 1970-01-01T00:00:00Z
const std = @import("std");

fn handleError(err: anyerror) noreturn {
    std.debug.panic("{any}", .{err});
}

fn writeTwo() []const []const u8 {
    return [_][]const u8{
    "jsmith:x:1001:1000:Joe Smith,Room 1007,(234)555-8917,(234)555-0077,jsmith@rosettacode.org:/home/jsmith:/bin/bash",
    "jdoe:x:1002:1000:Jane Doe,Room 1004,(234)555-8914,(234)555-0044,jdoe@rosettacode.org:/home/jsmith:/bin/bash",
};
}

fn appendOneMore(lines: []const []const u8) []const []const u8 {
    return blk0: { var _tmp0 = std.ArrayList([]const u8).init(std.heap.page_allocator); defer _tmp0.deinit(); _tmp0.appendSlice(lines) catch |err| handleError(err); _tmp0.append("xyz:x:1003:1000:X Yz,Room 1003,(234)555-8913,(234)555-0033,xyz@rosettacode.org:/home/xyz:/bin/bash") catch |err| handleError(err); break :blk0 _tmp0.items; };
}

fn main() void {
    var lines = writeTwo(); // []const []const u8
    lines = appendOneMore(lines);
    if (((lines).len >= 3) and std.mem.eql(u8, lines[2], "xyz:x:1003:1000:X Yz,Room 1003,(234)555-8913,(234)555-0033,xyz@rosettacode.org:/home/xyz:/bin/bash")) {
        std.debug.print("append okay\n", .{});
    } else {
        std.debug.print("it didn't work\n", .{});
    }
}

pub fn main() void {
    main();
}
