// Generated by Mochi compiler v0.10.26 on 1970-01-01T00:00:00Z
const std = @import("std");

fn handleError(err: anyerror) noreturn {
    std.debug.panic("{any}", .{err});
}

const n = 10; // i32
var sum = 0.0; // f64
var x = 1; // i32
const rms = sqrtApprox((sum / (@as(f64, n)))); // i32

fn sqrtApprox(x: f64) f64 {
    var guess = x; // f64
    var i = 0; // i32
    while (i < 20) {
        guess = (((guess + (x / guess))) / 2.0);
        i = (i + 1);
    }
    return guess;
}

pub fn main() void {
    while (x <= n) {
        sum = (sum + ((@as(f64, x)) * (@as(f64, x))));
        x = (x + 1);
    }
    std.debug.print("{s}\n", .{std.fmt.allocPrint(std.heap.page_allocator, "{any}", .{rms}) catch |err| handleError(err)});
}
