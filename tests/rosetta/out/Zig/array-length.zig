// Generated by Mochi compiler v0.10.26 on 1970-01-01T00:00:00Z
const std = @import("std");

fn handleError(err: anyerror) noreturn {
    std.debug.panic("{any}", .{err});
}

fn _concat_string(a: []const u8, b: []const u8) []const u8 {
    return std.mem.concat(u8, &[_][]const u8{ a, b }) catch |err| handleError(err);
}

fn user_main() void {
    const arr = &[_][]const u8{
    "apple",
    "orange",
    "pear",
}; // []const []const u8
    std.debug.print("{s}\n", .{_concat_string(_concat_string(_concat_string(_concat_string("Length of ", std.fmt.allocPrint(std.heap.page_allocator, "{any}", .{arr}) catch |err| handleError(err)), " is "), std.fmt.allocPrint(std.heap.page_allocator, "{d}", .{(arr).len}) catch |err| handleError(err)), ".")});
}

pub fn main() void {
    user_main();
}
