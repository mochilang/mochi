// Generated by Mochi compiler v0.10.28 on 2025-07-18T10:01:21Z
const std = @import("std");

fn handleError(err: anyerror) noreturn {
    std.debug.panic("{any}", .{err});
}

fn _concat_string(a: []const u8, b: []const u8) []const u8 {
    return std.mem.concat(u8, &[_][]const u8{ a, b }) catch |err| handleError(err);
}

fn bar(a: i32, b: i32, c: i32) void {
    std.debug.print("{s}\n", .{_concat_string(_concat_string(_concat_string(_concat_string(std.fmt.allocPrint(std.heap.page_allocator, "{d}", .{a}) catch |err| handleError(err), ", "), std.fmt.allocPrint(std.heap.page_allocator, "{d}", .{b}) catch |err| handleError(err)), ", "), std.fmt.allocPrint(std.heap.page_allocator, "{d}", .{c}) catch |err| handleError(err))});
}

fn user_main() void {
    var args = std.AutoHashMap([]const u8, i32).init(std.heap.page_allocator);
    _ = args.put("a", 3) catch |err| handleError(err);
    _ = args.put("b", 2) catch |err| handleError(err);
    _ = args.put("c", 1) catch |err| handleError(err);
    bar(args["a"], args["b"], args["c"]);
}

pub fn main() void {
    user_main();
}
