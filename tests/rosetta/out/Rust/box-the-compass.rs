// Generated by Mochi compiler v0.10.26 on 2025-07-16T11:36:49Z
fn main() {
    fn padLeft(s: &'static str, w: i32) -> &'static str {
        let mut res = "";
        let mut n = w - s.len() as i32;
        while n > 0 {
            res += " ";
            n -= 1;
        }
        return format!("{}{}", res, s);
    }
    fn padRight(s: &'static str, w: i32) -> &'static str {
        let mut out = s;
        let mut i = s.len() as i32;
        while i < w {
            out += " ";
            i += 1;
        }
        return out;
    }
    fn indexOf(s: &'static str, ch: &'static str) -> i32 {
        let mut i = 0;
        while i < s.len() as i32 {
            if &s[i as usize..i + 1 as usize] == ch {
                return i;
            }
            i += 1;
        }
        return -1;
    }
    fn format2(f: f64) -> &'static str {
        let mut s = f.to_string();
        let idx = indexOf(s, ".");
        if idx < 0 {
            s += ".00";
        } else {
            let mut need = idx + 3;
            if s.len() as i32 > need {
                s = &s[0 as usize..need as usize];
            } else {
                while s.len() as i32 < need {
                    s += "0";
                }
            }
        }
        return s;
    }
    fn cpx(h: f64) -> i32 {
        let mut x = ((h / 11.25) + 0.5).parse::<i32>().unwrap();
        x %= 32;
        if x < 0 {
            x += 32;
        }
        return x;
    }
    let compassPoint = vec!["North", "North by east", "North-northeast", "Northeast by north", "Northeast", "Northeast by east", "East-northeast", "East by north", "East", "East by south", "East-southeast", "Southeast by east", "Southeast", "Southeast by south", "South-southeast", "South by east", "South", "South by west", "South-southwest", "Southwest by south", "Southwest", "Southwest by west", "West-southwest", "West by south", "West", "West by north", "West-northwest", "Northwest by west", "Northwest", "Northwest by north", "North-northwest", "North by west"];
    let degrees2compasspoint = move |h: f64| -> &'static str {
        return compassPoint[cpx(h) as usize];
    };
    let headings = vec![0.0, 16.87, 16.88, 33.75, 50.62, 50.63, 67.5, 84.37, 84.38, 101.25, 118.12, 118.13, 135.0, 151.87, 151.88, 168.75, 185.62, 185.63, 202.5, 219.37, 219.38, 236.25, 253.12, 253.13, 270.0, 286.87, 286.88, 303.75, 320.62, 320.63, 337.5, 354.37, 354.38];
    println!("Index  Compass point         Degree");
    let mut i = 0;
    while i < headings.len() as i32 {
        let h = headings[i as usize];
        let idx = i % 32 + 1;
        let cp = degrees2compasspoint(h);
        println!("{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", padLeft(idx.to_string(), 4), "   "), padRight(cp, 19)), " "), format2(h)), "Â°"));
        i += 1;
    }
}
