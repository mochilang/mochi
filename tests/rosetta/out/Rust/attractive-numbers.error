rustc error: exit status 1
error: `<` is interpreted as a start of generic arguments for `i32`, not a comparison
  --> /tmp/TestMochiRustGoldenattractive-numbers329201533/001/prog.rs:51:30
   |
51 |         while s.len() as i32 < 4 {
   |                              ^ --- interpreted as generic arguments
   |                              |
   |                              not interpreted as comparison
   |
help: try comparing the cast value
   |
51 |         while (s.len() as i32) < 4 {
   |               +              +

warning: denote infinite loops with `loop { ... }`
  --> /tmp/TestMochiRustGoldenattractive-numbers329201533/001/prog.rs:35:9
   |
35 |         while true {
   |         ^^^^^^^^^^ help: use `loop`
   |
   = note: `#[warn(while_true)]` on by default

error[E0277]: can't compare `&mut i32` with `{integer}`
  --> /tmp/TestMochiRustGoldenattractive-numbers329201533/001/prog.rs:27:14
   |
27 |         if n == 1 {
   |              ^^ no implementation for `&mut i32 == {integer}`
   |
   = help: the trait `PartialEq<{integer}>` is not implemented for `&mut i32`
help: consider dereferencing here
   |
27 |         if *n == 1 {
   |            +

error[E0308]: mismatched types
  --> /tmp/TestMochiRustGoldenattractive-numbers329201533/001/prog.rs:30:20
   |
30 |         if isPrime(n) {
   |            ------- ^ expected `i32`, found `&mut i32`
   |            |
   |            arguments to this function are incorrect
   |
note: function defined here
  --> /tmp/TestMochiRustGoldenattractive-numbers329201533/001/prog.rs:3:8
   |
3  |     fn isPrime(n: i32) -> bool {
   |        ^^^^^^^ ------
help: consider dereferencing the borrow
   |
30 |         if isPrime(*n) {
   |                    +

error[E0369]: cannot calculate the remainder of `&mut i32` divided by `{integer}`
  --> /tmp/TestMochiRustGoldenattractive-numbers329201533/001/prog.rs:36:18
   |
36 |             if n % f == 0 {
   |                - ^ - {integer}
   |                |
   |                &mut i32
   |
help: `%` can be used on `i32` if you dereference the left-hand side
   |
36 |             if *n % f == 0 {
   |                +

error[E0368]: binary assignment operation `/=` cannot be applied to type `&mut i32`
  --> /tmp/TestMochiRustGoldenattractive-numbers329201533/001/prog.rs:38:17
   |
38 |                 n /= f;
   |                 -^^^^^
   |                 |
   |                 cannot use `/=` on type `&mut i32`
   |
help: `/=` can be used on `i32` if you dereference the left-hand side
   |
38 |                 *n /= f;
   |                 +

error[E0277]: can't compare `&mut i32` with `{integer}`
  --> /tmp/TestMochiRustGoldenattractive-numbers329201533/001/prog.rs:39:22
   |
39 |                 if n == 1 {
   |                      ^^ no implementation for `&mut i32 == {integer}`
   |
   = help: the trait `PartialEq<{integer}>` is not implemented for `&mut i32`
help: consider dereferencing here
   |
39 |                 if *n == 1 {
   |                    +

error[E0308]: mismatched types
  --> /tmp/TestMochiRustGoldenattractive-numbers329201533/001/prog.rs:42:28
   |
42 |                 if isPrime(n) {
   |                    ------- ^ expected `i32`, found `&mut i32`
   |                    |
   |                    arguments to this function are incorrect
   |
note: function defined here
  --> /tmp/TestMochiRustGoldenattractive-numbers329201533/001/prog.rs:3:8
   |
3  |     fn isPrime(n: i32) -> bool {
   |        ^^^^^^^ ------
help: consider dereferencing the borrow
   |
42 |                 if isPrime(*n) {
   |                            +

error[E0308]: mismatched types
  --> /tmp/TestMochiRustGoldenattractive-numbers329201533/001/prog.rs:43:25
   |
34 |         let mut f = 2;
   |                     - expected due to this value
...
43 |                     f = n;
   |                         ^ expected `i32`, found `&mut i32`
   |
help: consider dereferencing the borrow
   |
43 |                     f = *n;
   |                         +

error[E0308]: mismatched types
  --> /tmp/TestMochiRustGoldenattractive-numbers329201533/001/prog.rs:54:16
   |
49 |     fn pad4(n: i32) -> &'static str {
   |                        ------------ expected `&'static str` because of return type
...
54 |         return s;
   |                ^ expected `&str`, found `String`
   |
help: consider borrowing here
   |
54 |         return &s;
   |                +

error[E0368]: binary assignment operation `+=` cannot be applied to type `&str`
  --> /tmp/TestMochiRustGoldenattractive-numbers329201533/001/prog.rs:66:17
   |
66 |                 line += pad4(i);
   |                 ----^^^^^^^^^^^
   |                 |
   |                 cannot use `+=` on type `&str`

error: aborting due to 10 previous errors; 1 warning emitted

Some errors have detailed explanations: E0277, E0308, E0368, E0369.
For more information about an error, try `rustc --explain E0277`.
