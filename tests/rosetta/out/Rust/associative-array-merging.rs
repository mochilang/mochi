// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
fn main() {
    fn merge(base: std::collections::HashMap<&'static str, i32>, update: std::collections::HashMap<&'static str, i32>) -> std::collections::HashMap<&'static str, i32> {
        let mut result: std::collections::HashMap<&'static str, i32> = { let mut m = std::collections::BTreeMap::new(); m };
        for k in base.keys() {
            result.insert(k, *base.get(&k).unwrap());
        }
        for k in update.keys() {
            result.insert(k, *update.get(&k).unwrap());
        }
        return result;
    }
    fn main() -> () {
        let base: std::collections::HashMap<&'static str, i32> = { let mut m = std::collections::BTreeMap::new(); m.insert("name", "Rocket Skates"); m.insert("price", 12.75); m.insert("color", "yellow"); m };
        let update: std::collections::HashMap<&'static str, i32> = { let mut m = std::collections::BTreeMap::new(); m.insert("price", 15.25); m.insert("color", "red"); m.insert("year", 1974); m };
        let result = merge(base, update);
        println!("{}", vec!["[object Object]".to_string()].into_iter().filter(|s| !s.is_empty()).collect::<Vec<_>>().join(" ") );
    }
    main();
}
