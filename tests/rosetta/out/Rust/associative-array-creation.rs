// Generated by Mochi compiler v0.10.26 on 2025-07-16T11:36:42Z
fn main() {
    fn removeKey(m: std::collections::HashMap<&'static str, i32>, k: &'static str) -> std::collections::HashMap<&'static str, i32> {
        let mut out: std::collections::HashMap<&'static str, i32> = { let mut m = std::collections::BTreeMap::new(); m };
        for key in m.keys() {
            if key != k {
                out.insert(key, m[&key]);
            }
        }
        return out;
    }
    fn main() -> () {
        let mut x: std::collections::HashMap<&'static str, i32> = ();
        x = { let mut m = std::collections::BTreeMap::new(); m };
        x.insert("foo", 3);
        let y1 = x[&"bar"];
        let ok = x.contains_key(&"bar");
        println!("{}", y1);
        println!("{}", ok);
        x = removeKey(x, "foo");
        x = { let mut m = std::collections::BTreeMap::new(); m.insert("foo", 2); m.insert("bar", 42); m.insert("baz", -1); m };
        println!("{} {} {}", x[&"foo"], x[&"bar"], x[&"baz"]);
    }
    main();
}
