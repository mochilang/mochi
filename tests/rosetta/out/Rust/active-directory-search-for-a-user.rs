// Generated by Mochi compiler v0.10.26 on 2025-07-16T11:36:34Z
fn main() {
    fn search_user(directory: std::collections::HashMap<&'static str, Vec<&'static str>>, username: &'static str) -> Vec<&'static str> {
        return directory[&username];
    }
    fn main() -> () {
        let client = { let mut m = std::collections::BTreeMap::new(); m.insert("Base", "dc=example,dc=com"); m.insert("Host", "ldap.example.com"); m.insert("Port", 389); m.insert("GroupFilter", "(memberUid=%s)"); m };
        let directory = { let mut m = std::collections::BTreeMap::new(); m.insert("username", vec!["admins", "users"]); m.insert("john", vec!["users"]); m };
        let groups = search_user(directory, "username");
        if groups.len() as i32 > 0 {
            let mut out = "Groups: [";
            let mut i = 0;
            while i < groups.len() as i32 {
                out = format!("{}{}", format!("{}{}", format!("{}{}", out, """), groups[i as usize]), """);
                if i < groups.len() as i32 - 1 {
                    out += ", ";
                }
                i += 1;
            }
            out += "]";
            println!("{}", out);
        } else {
            println!("User not found");
        }
    }
    main();
}
