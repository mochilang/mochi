// Generated by Mochi compiler v0.10.30 on 2006-01-02T15:04:05Z
fn main() {
    fn printStat(fs: &std::collections::HashMap<String, bool>, path: String) -> () {
        if fs.contains_key(&path) {
            if *fs.get(&path).unwrap() {
                println!("{}", vec![format!("{}", format!("{}{}", path, String::from(" is a directory")))].into_iter().filter(|s| !s.is_empty()).collect::<Vec<_>>().join(" ") );
            } else {
                println!("{}", vec![format!("{}", format!("{}{}", path, String::from(" is a file")))].into_iter().filter(|s| !s.is_empty()).collect::<Vec<_>>().join(" ") );
            }
        } else {
            println!("{}", vec![format!("{}", format!("{}{}", format!("{}{}", String::from("stat "), path), String::from(": no such file or directory")))].into_iter().filter(|s| !s.is_empty()).collect::<Vec<_>>().join(" ") );
        }
    }
    fn main() -> () {
        let mut fs: std::collections::HashMap<String, bool> = { let mut m = std::collections::HashMap::new(); m };
        fs.insert(String::from("docs"), true);
        for p in vec![String::from("input.txt"), String::from("/input.txt"), String::from("docs"), String::from("/docs")] {
            printStat(&fs, p);
        }
    }
    main();
}
