rustc: exit status 1
error[E0308]: mismatched types
  --> /tmp/cheryls-birthday.rs:42:25
   |
42 |         if !monthUnique(&bd.clone(), choices) {
   |             ----------- ^^^^^^^^^^^ expected `Birthday`, found `&Birthday`
   |             |
   |             arguments to this function are incorrect
   |
note: function defined here
  --> /tmp/cheryls-birthday.rs:9:8
   |
9  |     fn monthUnique(b: Birthday, list: Vec<Birthday>) -> bool {
   |        ^^^^^^^^^^^ -----------
help: consider removing the borrow
   |
42 -         if !monthUnique(&bd.clone(), choices) {
42 +         if !monthUnique(bd.clone(), choices) {
   |

error[E0308]: mismatched types
  --> /tmp/cheryls-birthday.rs:48:32
   |
48 |         if !monthWithUniqueDay(&bd.clone(), filtered) {
   |             ------------------ ^^^^^^^^^^^ expected `Birthday`, found `&Birthday`
   |             |
   |             arguments to this function are incorrect
   |
note: function defined here
  --> /tmp/cheryls-birthday.rs:27:8
   |
27 |     fn monthWithUniqueDay(b: Birthday, list: Vec<Birthday>) -> bool {
   |        ^^^^^^^^^^^^^^^^^^ -----------
help: consider removing the borrow
   |
48 -         if !monthWithUniqueDay(&bd.clone(), filtered) {
48 +         if !monthWithUniqueDay(bd.clone(), filtered) {
   |

error[E0308]: mismatched types
  --> /tmp/cheryls-birthday.rs:54:22
   |
54 |         if dayUnique(&bd.clone(), filtered2) {
   |            --------- ^^^^^^^^^^^ expected `Birthday`, found `&Birthday`
   |            |
   |            arguments to this function are incorrect
   |
note: function defined here
  --> /tmp/cheryls-birthday.rs:18:8
   |
18 |     fn dayUnique(b: Birthday, list: Vec<Birthday>) -> bool {
   |        ^^^^^^^^^ -----------
help: consider removing the borrow
   |
54 -         if dayUnique(&bd.clone(), filtered2) {
54 +         if dayUnique(bd.clone(), filtered2) {
   |

error[E0308]: mismatched types
  --> /tmp/cheryls-birthday.rs:60:24
   |
60 |         if monthUnique(&bd.clone(), filtered3) {
   |            ----------- ^^^^^^^^^^^ expected `Birthday`, found `&Birthday`
   |            |
   |            arguments to this function are incorrect
   |
note: function defined here
  --> /tmp/cheryls-birthday.rs:9:8
   |
9  |     fn monthUnique(b: Birthday, list: Vec<Birthday>) -> bool {
   |        ^^^^^^^^^^^ -----------
help: consider removing the borrow
   |
60 -         if monthUnique(&bd.clone(), filtered3) {
60 +         if monthUnique(bd.clone(), filtered3) {
   |

error[E0308]: mismatched types
  --> /tmp/cheryls-birthday.rs:65:89
   |
65 | ...mat!("{}{}", "Cheryl's birthday is ", bstr(&filtered4[0])))].into_iter().filter(|s| !s.is_empty()).collect::<Vec<_>>().join(" ") );
   |                                          ---- ^^^^^^^^^^^^^ expected `Birthday`, found `&Birthday`
   |                                          |
   |                                          arguments to this function are incorrect
   |
note: function defined here
  --> /tmp/cheryls-birthday.rs:35:8
   |
35 |     fn bstr(b: Birthday) -> &'static str {
   |        ^^^^ -----------
help: consider removing the borrow
   |
65 -         println!("{}", vec![format!("{}", format!("{}{}", "Cheryl's birthday is ", bstr(&filtered4[0])))].into_iter().filter(|s| !s.is_empty()).collect::<Vec<_>>().join(" ") );
65 +         println!("{}", vec![format!("{}", format!("{}{}", "Cheryl's birthday is ", bstr(filtered4[0])))].into_iter().filter(|s| !s.is_empty()).collect::<Vec<_>>().join(" ") );
   |

error[E0308]: mismatched types
  --> /tmp/cheryls-birthday.rs:29:48
   |
29 |             if x.month == b.month && dayUnique(&x.clone(), list) {
   |                                      --------- ^^^^^^^^^^ expected `Birthday`, found `&Birthday`
   |                                      |
   |                                      arguments to this function are incorrect
   |
note: function defined here
  --> /tmp/cheryls-birthday.rs:18:8
   |
18 |     fn dayUnique(b: Birthday, list: Vec<Birthday>) -> bool {
   |        ^^^^^^^^^ -----------
help: consider removing the borrow
   |
29 -             if x.month == b.month && dayUnique(&x.clone(), list) {
29 +             if x.month == b.month && dayUnique(x.clone(), list) {
   |

error[E0308]: mismatched types
  --> /tmp/cheryls-birthday.rs:37:16
   |
35 |     fn bstr(b: Birthday) -> &'static str {
   |                             ------------ expected `&str` because of return type
36 |         let months = vec!["", "January", "February", "March", "April", "May", "June", "July", "...
37 |         return format!("{}{}", format!("{}{}", months[b.month as usize], " "), b.day.to_string());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&str`, found `String`
   |
   = note: this error originates in the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error: aborting due to 7 previous errors

For more information about this error, try `rustc --explain E0308`.
