// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
fn main() {
    fn ackermann(m: i32, n: i32) -> i32 {
        if m == 0 {
            return n + 1;
        }
        if n == 0 {
            return ackermann(m - 1, 1);
        }
        return ackermann(m - 1, ackermann(m, n - 1));
    }
    fn main() -> () {
        println!("{}", vec![format!("{}", format!("{}{}", "A(0, 0) = ", ackermann(0, 0).to_string()))].into_iter().filter(|s| !s.is_empty()).collect::<Vec<_>>().join(" ") );
        println!("{}", vec![format!("{}", format!("{}{}", "A(1, 2) = ", ackermann(1, 2).to_string()))].into_iter().filter(|s| !s.is_empty()).collect::<Vec<_>>().join(" ") );
        println!("{}", vec![format!("{}", format!("{}{}", "A(2, 4) = ", ackermann(2, 4).to_string()))].into_iter().filter(|s| !s.is_empty()).collect::<Vec<_>>().join(" ") );
        println!("{}", vec![format!("{}", format!("{}{}", "A(3, 4) = ", ackermann(3, 4).to_string()))].into_iter().filter(|s| !s.is_empty()).collect::<Vec<_>>().join(" ") );
    }
    main();
}
