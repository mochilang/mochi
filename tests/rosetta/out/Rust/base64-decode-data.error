rustc: exit status 1
error[E0308]: mismatched types
 --> /tmp/base64-decode-data.rs:6:54
  |
6 |             if s.chars().nth(i as usize).unwrap() == ch {
  |                ----------------------------------    ^^ expected `char`, found `&str`
  |                |
  |                expected because this is `char`

error[E0308]: mismatched types
  --> /tmp/base64-decode-data.rs:16:67
   |
16 |         if str.len() as i32 > 0 && str.chars().nth(0).unwrap() == "-" {
   |                                    ---------------------------    ^^^ expected `char`, found `&str`
   |                                    |
   |                                    expected because this is `char`
   |
help: if you meant to write a `char` literal, use single quotes
   |
16 -         if str.len() as i32 > 0 && str.chars().nth(0).unwrap() == "-" {
16 +         if str.len() as i32 > 0 && str.chars().nth(0).unwrap() == '-' {
   |

error[E0277]: the trait bound `&str: Borrow<char>` is not satisfied
  --> /tmp/base64-decode-data.rs:23:38
   |
23 |             n = n * 10 + *digits.get(&str.chars().nth(i as usize).unwrap()).unwrap();
   |                                  --- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Borrow<char>` is not implemented for `&str`
   |                                  |
   |                                  required by a bound introduced by this call
   |
   = help: the trait `Borrow<str>` is implemented for `String`
note: required by a bound in `BTreeMap::<K, V, A>::get`
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/alloc/src/collections/btree/map.rs:695:5

error[E0308]: mismatched types
  --> /tmp/base64-decode-data.rs:63:30
   |
63 |             return upper[n - 65 as usize..n - 64 as usize].to_vec();
   |                              ^^^^^^^^^^^ expected `i32`, found `usize`

error[E0277]: cannot subtract `usize` from `i32`
  --> /tmp/base64-decode-data.rs:63:28
   |
63 |             return upper[n - 65 as usize..n - 64 as usize].to_vec();
   |                            ^ no implementation for `i32 - usize`
   |
   = help: the trait `Sub<usize>` is not implemented for `i32`
   = help: the following other types implement trait `Sub<Rhs>`:
             `&i32` implements `Sub<i32>`
             `&i32` implements `Sub`
             `i32` implements `Sub<&i32>`
             `i32` implements `Sub`

error[E0308]: mismatched types
  --> /tmp/base64-decode-data.rs:63:47
   |
63 |             return upper[n - 65 as usize..n - 64 as usize].to_vec();
   |                                               ^^^^^^^^^^^ expected `i32`, found `usize`

error[E0277]: cannot subtract `usize` from `i32`
  --> /tmp/base64-decode-data.rs:63:45
   |
63 |             return upper[n - 65 as usize..n - 64 as usize].to_vec();
   |                                             ^ no implementation for `i32 - usize`
   |
   = help: the trait `Sub<usize>` is not implemented for `i32`
   = help: the following other types implement trait `Sub<Rhs>`:
             `&i32` implements `Sub<i32>`
             `&i32` implements `Sub`
             `i32` implements `Sub<&i32>`
             `i32` implements `Sub`

error[E0277]: the type `str` cannot be indexed by `std::ops::Range<i32>`
  --> /tmp/base64-decode-data.rs:63:26
   |
63 |             return upper[n - 65 as usize..n - 64 as usize].to_vec();
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string indices are ranges of `usize`
   |
   = help: the trait `SliceIndex<str>` is not implemented for `std::ops::Range<i32>`
   = help: the following other types implement trait `SliceIndex<T>`:
             `std::ops::Range<usize>` implements `SliceIndex<[T]>`
             `std::ops::Range<usize>` implements `SliceIndex<str>`
   = note: required for `str` to implement `Index<std::ops::Range<i32>>`

error[E0308]: mismatched types
  --> /tmp/base64-decode-data.rs:66:30
   |
66 |             return lower[n - 97 as usize..n - 96 as usize].to_vec();
   |                              ^^^^^^^^^^^ expected `i32`, found `usize`

error[E0277]: cannot subtract `usize` from `i32`
  --> /tmp/base64-decode-data.rs:66:28
   |
66 |             return lower[n - 97 as usize..n - 96 as usize].to_vec();
   |                            ^ no implementation for `i32 - usize`
   |
   = help: the trait `Sub<usize>` is not implemented for `i32`
   = help: the following other types implement trait `Sub<Rhs>`:
             `&i32` implements `Sub<i32>`
             `&i32` implements `Sub`
             `i32` implements `Sub<&i32>`
             `i32` implements `Sub`

error[E0308]: mismatched types
  --> /tmp/base64-decode-data.rs:66:47
   |
66 |             return lower[n - 97 as usize..n - 96 as usize].to_vec();
   |                                               ^^^^^^^^^^^ expected `i32`, found `usize`

error[E0277]: cannot subtract `usize` from `i32`
  --> /tmp/base64-decode-data.rs:66:45
   |
66 |             return lower[n - 97 as usize..n - 96 as usize].to_vec();
   |                                             ^ no implementation for `i32 - usize`
   |
   = help: the trait `Sub<usize>` is not implemented for `i32`
   = help: the following other types implement trait `Sub<Rhs>`:
             `&i32` implements `Sub<i32>`
             `&i32` implements `Sub`
             `i32` implements `Sub<&i32>`
             `i32` implements `Sub`

error[E0277]: the type `str` cannot be indexed by `std::ops::Range<i32>`
  --> /tmp/base64-decode-data.rs:66:26
   |
66 |             return lower[n - 97 as usize..n - 96 as usize].to_vec();
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string indices are ranges of `usize`
   |
   = help: the trait `SliceIndex<str>` is not implemented for `std::ops::Range<i32>`
   = help: the following other types implement trait `SliceIndex<T>`:
             `std::ops::Range<usize>` implements `SliceIndex<[T]>`
             `std::ops::Range<usize>` implements `SliceIndex<str>`
   = note: required for `str` to implement `Index<std::ops::Range<i32>>`

error[E0308]: mismatched types
  --> /tmp/base64-decode-data.rs:70:32
   |
70 |             return &digits[n - 48 as usize..n - 47 as usize];
   |                                ^^^^^^^^^^^ expected `i32`, found `usize`

error[E0277]: cannot subtract `usize` from `i32`
  --> /tmp/base64-decode-data.rs:70:30
   |
70 |             return &digits[n - 48 as usize..n - 47 as usize];
   |                              ^ no implementation for `i32 - usize`
   |
   = help: the trait `Sub<usize>` is not implemented for `i32`
   = help: the following other types implement trait `Sub<Rhs>`:
             `&i32` implements `Sub<i32>`
             `&i32` implements `Sub`
             `i32` implements `Sub<&i32>`
             `i32` implements `Sub`

error[E0308]: mismatched types
  --> /tmp/base64-decode-data.rs:70:49
   |
70 |             return &digits[n - 48 as usize..n - 47 as usize];
   |                                                 ^^^^^^^^^^^ expected `i32`, found `usize`

error[E0277]: cannot subtract `usize` from `i32`
  --> /tmp/base64-decode-data.rs:70:47
   |
70 |             return &digits[n - 48 as usize..n - 47 as usize];
   |                                               ^ no implementation for `i32 - usize`
   |
   = help: the trait `Sub<usize>` is not implemented for `i32`
   = help: the following other types implement trait `Sub<Rhs>`:
             `&i32` implements `Sub<i32>`
             `&i32` implements `Sub`
             `i32` implements `Sub<&i32>`
             `i32` implements `Sub`

error[E0277]: the type `str` cannot be indexed by `std::ops::Range<i32>`
  --> /tmp/base64-decode-data.rs:70:28
   |
70 |             return &digits[n - 48 as usize..n - 47 as usize];
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string indices are ranges of `usize`
   |
   = help: the trait `SliceIndex<str>` is not implemented for `std::ops::Range<i32>`
   = help: the following other types implement trait `SliceIndex<T>`:
             `std::ops::Range<usize>` implements `SliceIndex<[T]>`
             `std::ops::Range<usize>` implements `SliceIndex<str>`
   = note: required for `str` to implement `Index<std::ops::Range<i32>>`

error[E0277]: cannot calculate the remainder of `i32` divided by `String`
  --> /tmp/base64-decode-data.rs:91:37
   |
91 |             b = format!("{}{}", val % 2.to_string(), b);
   |                                     ^ no implementation for `i32 % String`
   |
   = help: the trait `Rem<String>` is not implemented for `i32`
   = help: the following other types implement trait `Rem<Rhs>`:
             `&i32` implements `Rem<i32>`
             `&i32` implements `Rem`
             `i32` implements `Rem<&i32>`
             `i32` implements `Rem`

error[E0599]: no method named `parse` found for type `f64` in the current scope
  --> /tmp/base64-decode-data.rs:92:47
   |
92 |             val = ((val as f64) / (2 as f64)).parse::<i32>().unwrap();
   |                                               ^^^^^ method not found in `f64`

error[E0308]: mismatched types
  --> /tmp/base64-decode-data.rs:95:16
   |
86 |     fn toBinary(n: i32, bits: i32) -> &'static str {
   |                                       ------------ expected `&'static str` because of return type
...
95 |         return b;
   |                ^ expected `&str`, found `String`
   |
help: consider borrowing here
   |
95 |         return &b;
   |                +

error[E0308]: mismatched types
   --> /tmp/base64-decode-data.rs:101:59
    |
101 |             n = n * 2 + parseIntStr(&bits[i as usize..i + 1 as usize]);
    |                                                           ^^^^^^^^^^ expected `i32`, found `usize`

error[E0308]: mismatched types
   --> /tmp/base64-decode-data.rs:101:55
    |
101 |             n = n * 2 + parseIntStr(&bits[i as usize..i + 1 as usize]);
    |                                                       ^^^^^^^^^^^^^^ expected `usize`, found `i32`

error[E0277]: cannot add `usize` to `i32`
   --> /tmp/base64-decode-data.rs:101:57
    |
101 |             n = n * 2 + parseIntStr(&bits[i as usize..i + 1 as usize]);
    |                                                         ^ no implementation for `i32 + usize`
    |
    = help: the trait `Add<usize>` is not implemented for `i32`
    = help: the following other types implement trait `Add<Rhs>`:
              `&i32` implements `Add<i32>`
              `&i32` implements `Add`
              `i32` implements `Add<&i32>`
              `i32` implements `Add`

error[E0277]: `&str` is not an iterator
   --> /tmp/base64-decode-data.rs:109:19
    |
109 |         for ch in text {
    |                   ^^^^ `&str` is not an iterator; try calling `.chars()` or `.bytes()`
    |
    = help: the trait `Iterator` is not implemented for `&str`
    = note: required for `&str` to implement `IntoIterator`

error[E0308]: mismatched types
   --> /tmp/base64-decode-data.rs:118:46
    |
118 |             let chunk = &bin[i as usize..i + 6 as usize];
    |                                              ^^^^^^^^^^ expected `i32`, found `usize`

error[E0308]: mismatched types
   --> /tmp/base64-decode-data.rs:118:42
    |
118 |             let chunk = &bin[i as usize..i + 6 as usize];
    |                                          ^^^^^^^^^^^^^^ expected `usize`, found `i32`

error[E0277]: cannot add `usize` to `i32`
   --> /tmp/base64-decode-data.rs:118:44
    |
118 |             let chunk = &bin[i as usize..i + 6 as usize];
    |                                            ^ no implementation for `i32 + usize`
    |
    = help: the trait `Add<usize>` is not implemented for `i32`
    = help: the following other types implement trait `Add<Rhs>`:
              `&i32` implements `Add<i32>`
              `&i32` implements `Add`
              `i32` implements `Add<&i32>`
              `i32` implements `Add`

error[E0308]: mismatched types
   --> /tmp/base64-decode-data.rs:120:50
    |
120 |             out += &alphabet[val as usize..val + 1 as usize];
    |                                                  ^^^^^^^^^^ expected `i32`, found `usize`

error[E0308]: mismatched types
   --> /tmp/base64-decode-data.rs:120:44
    |
120 |             out += &alphabet[val as usize..val + 1 as usize];
    |                                            ^^^^^^^^^^^^^^^^ expected `usize`, found `i32`

error[E0277]: cannot add `usize` to `i32`
   --> /tmp/base64-decode-data.rs:120:48
    |
120 |             out += &alphabet[val as usize..val + 1 as usize];
    |                                                ^ no implementation for `i32 + usize`
    |
    = help: the trait `Add<usize>` is not implemented for `i32`
    = help: the following other types implement trait `Add<Rhs>`:
              `&i32` implements `Add<i32>`
              `&i32` implements `Add`
              `i32` implements `Add<&i32>`
              `i32` implements `Add`

error[E0308]: mismatched types
   --> /tmp/base64-decode-data.rs:125:71
    |
125 |             out = format!("{}{}", &out[0 as usize..out.len() as i32 - 1 as usize], "=");
    |                                                                       ^^^^^^^^^^ expected `i32`, found `usize`

error[E0308]: mismatched types
   --> /tmp/base64-decode-data.rs:125:52
    |
125 |             out = format!("{}{}", &out[0 as usize..out.len() as i32 - 1 as usize], "=");
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `usize`, found `i32`

error[E0277]: cannot subtract `usize` from `i32`
   --> /tmp/base64-decode-data.rs:125:69
    |
125 |             out = format!("{}{}", &out[0 as usize..out.len() as i32 - 1 as usize], "=");
    |                                                                     ^ no implementation for `i32 - usize`
    |
    = help: the trait `Sub<usize>` is not implemented for `i32`
    = help: the following other types implement trait `Sub<Rhs>`:
              `&i32` implements `Sub<i32>`
              `&i32` implements `Sub`
              `i32` implements `Sub<&i32>`
              `i32` implements `Sub`

error[E0308]: mismatched types
   --> /tmp/base64-decode-data.rs:128:71
    |
128 |             out = format!("{}{}", &out[0 as usize..out.len() as i32 - 2 as usize], "==");
    |                                                                       ^^^^^^^^^^ expected `i32`, found `usize`

error[E0308]: mismatched types
   --> /tmp/base64-decode-data.rs:128:52
    |
128 |             out = format!("{}{}", &out[0 as usize..out.len() as i32 - 2 as usize], "==");
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `usize`, found `i32`

error[E0277]: cannot subtract `usize` from `i32`
   --> /tmp/base64-decode-data.rs:128:69
    |
128 |             out = format!("{}{}", &out[0 as usize..out.len() as i32 - 2 as usize], "==");
    |                                                                     ^ no implementation for `i32 - usize`
    |
    = help: the trait `Sub<usize>` is not implemented for `i32`
    = help: the following other types implement trait `Sub<Rhs>`:
              `&i32` implements `Sub<i32>`
              `&i32` implements `Sub`
              `i32` implements `Sub<&i32>`
              `i32` implements `Sub`

error[E0308]: mismatched types
   --> /tmp/base64-decode-data.rs:130:16
    |
106 |     fn base64Encode(text: &'static str) -> &'static str {
    |                                            ------------ expected `&'static str` because of return type
...
130 |         return out;
    |                ^^^ expected `&str`, found `String`
    |
help: consider borrowing here
    |
130 |         return &out;
    |                +

error[E0308]: mismatched types
   --> /tmp/base64-decode-data.rs:138:22
    |
138 |             if ch == "=" {
    |                --    ^^^ expected `char`, found `&str`
    |                |
    |                expected because this is `char`
    |
help: if you meant to write a `char` literal, use single quotes
    |
138 -             if ch == "=" {
138 +             if ch == '=' {
    |

error[E0308]: mismatched types
   --> /tmp/base64-decode-data.rs:141:41
    |
141 |             let idx = indexOf(alphabet, ch);
    |                       -------           ^^ expected `&str`, found `char`
    |                       |
    |                       arguments to this function are incorrect
    |
note: function defined here
   --> /tmp/base64-decode-data.rs:3:8
    |
3   |     fn indexOf(s: &'static str, ch: &'static str) -> i32 {
    |        ^^^^^^^                  ----------------

error[E0308]: mismatched types
   --> /tmp/base64-decode-data.rs:148:46
    |
148 |             let chunk = &bin[i as usize..i + 8 as usize];
    |                                              ^^^^^^^^^^ expected `i32`, found `usize`

error[E0308]: mismatched types
   --> /tmp/base64-decode-data.rs:148:42
    |
148 |             let chunk = &bin[i as usize..i + 8 as usize];
    |                                          ^^^^^^^^^^^^^^ expected `usize`, found `i32`

error[E0277]: cannot add `usize` to `i32`
   --> /tmp/base64-decode-data.rs:148:44
    |
148 |             let chunk = &bin[i as usize..i + 8 as usize];
    |                                            ^ no implementation for `i32 + usize`
    |
    = help: the trait `Add<usize>` is not implemented for `i32`
    = help: the following other types implement trait `Add<Rhs>`:
              `&i32` implements `Add<i32>`
              `&i32` implements `Add`
              `i32` implements `Add<&i32>`
              `i32` implements `Add`

error[E0308]: mismatched types
   --> /tmp/base64-decode-data.rs:153:16
    |
132 |     fn base64Decode(enc: &'static str) -> &'static str {
    |                                           ------------ expected `&'static str` because of return type
...
153 |         return out;
    |                ^^^ expected `&str`, found `String`
    |
help: consider borrowing here
    |
153 |         return &out;
    |                +

error: aborting due to 44 previous errors

Some errors have detailed explanations: E0277, E0308, E0599.
For more information about an error, try `rustc --explain E0277`.
