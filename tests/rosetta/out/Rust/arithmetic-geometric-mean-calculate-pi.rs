// Generated by Mochi compiler v0.10.26 on 2025-07-16T11:36:39Z
fn main() {
    fn abs(x: f64) -> f64 {
        if x < 0.0 {
            return -x;
        }
        return x;
    }
    fn sqrtApprox(x: f64) -> f64 {
        let mut guess = x;
        let mut i = 0;
        while i < 20 {
            guess = (guess + x / guess) / 2.0;
            i += 1;
        }
        return guess;
    }
    fn agmPi() -> f64 {
        let mut a = 1.0;
        let mut g = 1.0 / sqrtApprox(2.0);
        let mut sum = 0.0;
        let mut pow = 2.0;
        while abs(a - g) > 1e-15 {
            let mut t = (a + g) / 2.0;
            let mut u = sqrtApprox(a * g);
            a = t;
            g = u;
            pow *= 2.0;
            let mut diff = a * a - g * g;
            sum = sum + diff * pow;
        }
        let mut pi = 4.0 * a * a / (1.0 - sum);
        return pi;
    }
    fn main() -> () {
        println!("{}", agmPi().to_string());
    }
    main();
}
