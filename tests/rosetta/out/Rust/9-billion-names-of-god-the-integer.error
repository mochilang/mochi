rustc: exit status 1
warning: unnecessary parentheses around assigned value
 --> /tmp/9_billion_names_of_god_the_integer.rs:9:21
  |
9 |         let mut n = (a.len() as i32);
  |                     ^              ^
  |
  = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
  |
9 -         let mut n = (a.len() as i32);
9 +         let mut n = a.len() as i32;
  |

error[E0308]: mismatched types
  --> /tmp/9_billion_names_of_god_the_integer.rs:11:17
   |
8  |     let bigTrim = move |a: &mut Vec<i32>| -> Vec<i32> {
   |                            ------------- expected due to this parameter type
...
11 |             a = a[(0) as usize..(n - 1) as usize].to_vec();
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&mut Vec<i32>`, found `Vec<i32>`
   |
   = note: expected mutable reference `&mut Vec<_>`
                         found struct `Vec<_>`
help: consider dereferencing here to assign to the mutably borrowed value
   |
11 |             *a = a[(0) as usize..(n - 1) as usize].to_vec();
   |             +

error[E0308]: mismatched types
  --> /tmp/9_billion_names_of_god_the_integer.rs:14:16
   |
8  |     let bigTrim = move |a: &mut Vec<i32>| -> Vec<i32> {
   |                                              -------- expected `Vec<i32>` because of return type
...
14 |         return a;
   |                ^- help: try using a conversion method: `.to_vec()`
   |                |
   |                expected `Vec<i32>`, found `&mut Vec<i32>`
   |
   = note:         expected struct `Vec<_>`
           found mutable reference `&mut Vec<_>`

error[E0308]: mismatched types
  --> /tmp/9_billion_names_of_god_the_integer.rs:43:21
   |
30 |         let mut carry = 0;
   |                         - expected due to this value
...
43 |             carry = (s as f64) / (10 as f64);
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^ expected `i32`, found `f64`

error: aborting due to 3 previous errors; 1 warning emitted

For more information about this error, try `rustc --explain E0308`.
