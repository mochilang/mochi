// Generated by Mochi compiler v0.10.26 on 2025-07-16T11:36:49Z
fn main() {
    fn sameDigits(n: &mut i32, b: i32) -> bool {
        let mut f = n % b;
        n = ((n as f64) / (b as f64)).parse::<i32>().unwrap();
        while n > 0 {
            if n % b != f {
                return false;
            }
            n = ((n as f64) / (b as f64)).parse::<i32>().unwrap();
        }
        return true;
    }
    fn isBrazilian(n: i32) -> bool {
        if n < 7 {
            return false;
        }
        if n % 2 == 0 && n >= 8 {
            return true;
        }
        let mut b = 2;
        while b < n - 1 {
            if sameDigits(&mut n, b) {
                return true;
            }
            b += 1;
        }
        return false;
    }
    fn isPrime(n: i32) -> bool {
        if n < 2 {
            return false;
        }
        if n % 2 == 0 {
            return n == 2;
        }
        if n % 3 == 0 {
            return n == 3;
        }
        let mut d = 5;
        while d * d <= n {
            if n % d == 0 {
                return false;
            }
            d += 2;
            if n % d == 0 {
                return false;
            }
            d += 4;
        }
        return true;
    }
    fn main() -> () {
        let mut kinds = vec![" ", " odd ", " prime "];
        for kind in kinds {
            println!("{}", format!("{}{}", format!("{}{}", "First 20", kind), "Brazilian numbers:"));
            let mut c = 0;
            let mut n = 7;
            while true {
                if isBrazilian(n) {
                    println!("{}", format!("{}{}", n.to_string(), " "));
                    c += 1;
                    if c == 20 {
                        println!("\n");
                        break;
                    }
                }
                if kind == " " {
                    n += 1;
                }
            }
        }
        let mut n = 7;
        let mut c = 0;
        while c < 100000 {
            if isBrazilian(n) {
                c += 1;
            }
            n += 1;
        }
        println!("{}", format!("{}{}", "The 100,000th Brazilian number: ", n - 1.to_string()));
    }
    main();
}
