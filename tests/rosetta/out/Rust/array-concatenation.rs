// Generated by Mochi compiler v0.10.26 on 2025-07-16T11:36:41Z
fn append<T: Clone>(mut v: Vec<T>, item: T) -> Vec<T> {
    v.push(item);
    v
}

fn main() {
    fn concatInts(a: Vec<i32>, b: Vec<i32>) -> Vec<i32> {
        let mut out: Vec<i32> = vec![];
        for v in a {
            out = append(out, v);
        }
        for v in b {
            out = append(out, v);
        }
        return out;
    }
    fn concatAny(a: Vec<i32>, b: Vec<i32>) -> Vec<i32> {
        let mut out: Vec<i32> = vec![];
        for v in a {
            out = append(out, v);
        }
        for v in b {
            out = append(out, v);
        }
        return out;
    }
    let mut a = vec![1, 2, 3];
    let mut b = vec![7, 12, 60];
    println!("{}", concatInts(a, b).to_string());
    let mut i: Vec<i32> = vec![1, 2, 3];
    let mut j: Vec<i32> = vec!["Crosby", "Stills", "Nash", "Young"];
    println!("{}", concatAny(i, j).to_string());
    let mut l = vec![1, 2, 3];
    let mut m = vec![7, 12, 60];
    println!("{}", concatInts(l, m).to_string());
}
