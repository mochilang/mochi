// Generated by Mochi compiler v0.10.26 on 2025-07-16T11:36:58Z
fn append<T: Clone>(mut v: Vec<T>, item: T) -> Vec<T> {
    v.push(item);
    v
}

fn main() {
    fn split(s: &'static str, sep: &'static str) -> Vec<&'static str> {
        let mut out: Vec<&'static str> = vec![];
        let mut start = 0;
        let mut i = 0;
        let n = sep.len() as i32;
        while i <= s.len() as i32 - n {
            if &s[i as usize..i + n as usize] == sep {
                out = append(out, &s[start as usize..i as usize]);
                i += n;
                start = i;
            } else {
                i += 1;
            }
        }
        out = append(out, &s[start as usize..s.len() as i32 as usize]);
        return out;
    }
    fn htmlEscape(s: &'static str) -> &'static str {
        let mut out = "";
        let mut i = 0;
        while i < s.len() as i32 {
            let ch = &s[i as usize..i + 1 as usize];
            if ch == "&" {
                out += "&amp;";
            }
            i += 1;
        }
        return out;
    }
    let c = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", "Character,Speech
", "The multitude,The messiah! Show us the messiah!
"), "Brians mother,<angry>Now you listen here! He's not the messiah; he's a very naughty boy! Now go away!</angry>
"), "The multitude,Who are you?
"), "Brians mother,I'm his mother; that's who!
"), "The multitude,Behold his mother! Behold his mother!");
    let mut rows: Vec<Vec<&'static str>> = vec![];
    for line in split(c, "
") {
        rows = append(rows, split(line, ","));
    }
    println!("<table>");
    for row in rows {
        let mut cells = "";
        for cell in row {
            cells = format!("{}{}", format!("{}{}", format!("{}{}", cells, "<td>"), htmlEscape(cell)), "</td>");
        }
        println!("{}", format!("{}{}", format!("{}{}", "    <tr>", cells), "</tr>"));
    }
    println!("</table>");
}
