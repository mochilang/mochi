// Generated by Mochi compiler v0.10.26 on 2025-07-16T11:36:57Z
fn append<T: Clone>(mut v: Vec<T>, item: T) -> Vec<T> {
    v.push(item);
    v
}

fn main() {
    let c = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", "Character,Speech
", "The multitude,The messiah! Show us the messiah!
"), "Brians mother,<angry>Now you listen here! He's not the messiah; he's a very naughty boy! Now go away!</angry>
"), "The multitude,Who are you?
"), "Brians mother,I'm his mother; that's who!
"), "The multitude,Behold his mother! Behold his mother!");
    let mut rows: Vec<Vec<&'static str>> = vec![];
    for line in split(c, "
") {
        rows = append(rows, split(line, ","));
    }
    let headings = true;
    println!("<table>");
    if headings {
        if rows.len() as i32 > 0 {
            let mut th = "";
            for h in rows[0] {
                th = format!("{}{}", format!("{}{}", format!("{}{}", th, "<th>"), h), "</th>");
            }
            println!("   <thead>");
            println!("{}", format!("{}{}", format!("{}{}", "      <tr>", th), "</tr>"));
            println!("   </thead>");
            println!("   <tbody>");
            let mut i = 1;
            while i < rows.len() as i32 {
                let mut cells = "";
                for cell in rows[i as usize] {
                    cells = format!("{}{}", format!("{}{}", format!("{}{}", cells, "<td>"), cell), "</td>");
                }
                println!("{}", format!("{}{}", format!("{}{}", "      <tr>", cells), "</tr>"));
                i += 1;
            }
            println!("   </tbody>");
        }
    } else {
        for row in rows {
            let mut cells = "";
            for cell in row {
                cells = format!("{}{}", format!("{}{}", format!("{}{}", cells, "<td>"), cell), "</td>");
            }
            println!("{}", format!("{}{}", format!("{}{}", "    <tr>", cells), "</tr>"));
        }
    }
    println!("</table>");
}
