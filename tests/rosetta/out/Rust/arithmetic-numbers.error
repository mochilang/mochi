rustc error: exit status 1
error: `<` is interpreted as a start of generic arguments for `i32`, not a comparison
  --> /tmp/TestMochiRustGoldenarithmetic-numbers1243164040/001/prog.rs:46:30
   |
46 |         while s.len() as i32 < 3 {
   |                              ^ --- interpreted as generic arguments
   |                              |
   |                              not interpreted as comparison
   |
help: try comparing the cast value
   |
46 |         while (s.len() as i32) < 3 {
   |               +              +

error: `<` is interpreted as a start of generic arguments for `i32`, not a comparison
  --> /tmp/TestMochiRustGoldenarithmetic-numbers1243164040/001/prog.rs:86:32
   |
86 |         while arr.len() as i32 < limit {
   |                                ^ ------- interpreted as generic arguments
   |                                |
   |                                not interpreted as comparison
   |
help: try comparing the cast value
   |
86 |         while (arr.len() as i32) < limit {
   |               +                +

warning: unnecessary parentheses around assigned value
   --> /tmp/TestMochiRustGoldenarithmetic-numbers1243164040/001/prog.rs:108:28
    |
108 |                     tau *= (cnt + 1);
    |                            ^       ^
    |
    = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
    |
108 -                     tau *= (cnt + 1);
108 +                     tau *= cnt + 1;
    |

error[E0308]: mismatched types
  --> /tmp/TestMochiRustGoldenarithmetic-numbers1243164040/001/prog.rs:49:16
   |
44 |     fn pad3(n: i32) -> &'static str {
   |                        ------------ expected `&'static str` because of return type
...
49 |         return s;
   |                ^ expected `&str`, found `String`
   |
help: consider borrowing here
   |
49 |         return &s;
   |                +

error[E0308]: mismatched types
  --> /tmp/TestMochiRustGoldenarithmetic-numbers1243164040/001/prog.rs:57:54
   |
57 |             out = format!("{}{}", &s[i as usize..i + 1 as usize], out);
   |                                                      ^^^^^^^^^^ expected `i32`, found `usize`

error[E0308]: mismatched types
  --> /tmp/TestMochiRustGoldenarithmetic-numbers1243164040/001/prog.rs:57:50
   |
57 |             out = format!("{}{}", &s[i as usize..i + 1 as usize], out);
   |                                                  ^^^^^^^^^^^^^^ expected `usize`, found `i32`

error[E0277]: cannot add `usize` to `i32`
  --> /tmp/TestMochiRustGoldenarithmetic-numbers1243164040/001/prog.rs:57:52
   |
57 |             out = format!("{}{}", &s[i as usize..i + 1 as usize], out);
   |                                                    ^ no implementation for `i32 + usize`
   |
   = help: the trait `Add<usize>` is not implemented for `i32`
   = help: the following other types implement trait `Add<Rhs>`:
             `&i32` implements `Add<i32>`
             `&i32` implements `Add`
             `i32` implements `Add<&i32>`
             `i32` implements `Add`

error[E0308]: mismatched types
  --> /tmp/TestMochiRustGoldenarithmetic-numbers1243164040/001/prog.rs:57:19
   |
57 |             out = format!("{}{}", &s[i as usize..i + 1 as usize], out);
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&str`, found `String`
   |
   = note: this error originates in the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> /tmp/TestMochiRustGoldenarithmetic-numbers1243164040/001/prog.rs:60:23
   |
60 |                 out = format!("{}{}", ",", out);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&str`, found `String`
   |
   = note: this error originates in the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `parse` found for type `f64` in the current scope
  --> /tmp/TestMochiRustGoldenarithmetic-numbers1243164040/001/prog.rs:70:61
   |
70 |             let mut mid = (((lo + hi) as f64) / (2 as f64)).parse::<i32>().unwrap();
   |                                                             ^^^^^ method not found in `f64`

error[E0368]: binary assignment operation `+=` cannot be applied to type `&str`
   --> /tmp/TestMochiRustGoldenarithmetic-numbers1243164040/001/prog.rs:129:17
    |
129 |                 line += pad3(arr[i + j as usize]);
    |                 ----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                 |
    |                 cannot use `+=` on type `&str`

error[E0368]: binary assignment operation `+=` cannot be applied to type `&str`
   --> /tmp/TestMochiRustGoldenarithmetic-numbers1243164040/001/prog.rs:131:21
    |
131 |                     line += " ";
    |                     ----^^^^^^^
    |                     |
    |                     cannot use `+=` on type `&str`

error[E0277]: cannot subtract `usize` from `f64`
   --> /tmp/TestMochiRustGoldenarithmetic-numbers1243164040/001/prog.rs:139:39
    |
139 |             let last = arr[(x as f64) - 1 as f64 as usize];
    |                                       ^ no implementation for `f64 - usize`
    |
    = help: the trait `Sub<usize>` is not implemented for `f64`
    = help: the following other types implement trait `Sub<Rhs>`:
              `&f64` implements `Sub<f64>`
              `&f64` implements `Sub`
              `f64` implements `Sub<&f64>`
              `f64` implements `Sub`

error[E0277]: cannot subtract `{integer}` from `f64`
   --> /tmp/TestMochiRustGoldenarithmetic-numbers1243164040/001/prog.rs:144:47
    |
144 |             let comp = (x as f64) - pc as f64 - 1;
    |                                               ^ no implementation for `f64 - {integer}`
    |
    = help: the trait `Sub<{integer}>` is not implemented for `f64`
    = help: the following other types implement trait `Sub<Rhs>`:
              `&f64` implements `Sub<f64>`
              `&f64` implements `Sub`
              `f64` implements `Sub<&f64>`
              `f64` implements `Sub`
help: consider using a floating-point literal by writing it with `.0`
    |
144 |             let comp = (x as f64) - pc as f64 - 1.0;
    |                                                  ++

error: aborting due to 13 previous errors; 1 warning emitted

Some errors have detailed explanations: E0277, E0308, E0368, E0599.
For more information about an error, try `rustc --explain E0277`.
