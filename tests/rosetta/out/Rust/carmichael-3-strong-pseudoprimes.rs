// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
fn main() {
    fn mod(n: i32, m: i32) -> i32 {
        return ((n % m) + m) % m;
    }
    fn isPrime(n: i32) -> bool {
        if n < 2 {
            return false;
        }
        if n % 2 == 0 {
            return n == 2;
        }
        if n % 3 == 0 {
            return n == 3;
        }
        let mut d = 5;
        while d * d <= n {
            if n % d == 0 {
                return false;
            }
            d += 2;
            if n % d == 0 {
                return false;
            }
            d += 4;
        }
        return true;
    }
    fn pad(n: i32, width: i32) -> &'static str {
        let mut s = n.to_string();
        while s.len() as i32 < width {
            s = format!("{}{}", " ", s);
        }
        return s;
    }
    fn carmichael(p1: i32) -> () {
        for h3 in 2..p1 {
            for d in 1..(h3 + p1) {
                if ((h3 + p1) * (p1 - 1)) % d == 0 && mod(-p1 * p1, h3) == d % h3 {
                    let p2 = ((((1 as f64) as f64) as f64) as f64) + (((p1 - 1) * (h3 + p1) as f64) / (d as f64));
                    if !isPrime(p2) {
                        continue;
                    }
                    let p3 = (((((1 as f64) as f64) as f64) as f64) as f64) + ((p1 as f64) * p2 / h3 as f64);
                    if !isPrime(p3) {
                        continue;
                    }
                    if (p2 * p3) % (p1 - 1) != 1 {
                        continue;
                    }
                    let c = (p1 as f64) * p2 * p3;
                    println!("{}", vec![format!("{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", pad(p1, 2), "   "), pad(p2, 4)), "   "), pad(p3, 5)), "     "), c.to_string()))].into_iter().filter(|s| !s.is_empty()).collect::<Vec<_>>().join(" ") );
                }
            }
        }
    }
    println!("The following are Carmichael munbers for p1 <= 61:\n");
    println!("p1     p2      p3     product");
    println!("==     ==      ==     =======");
    for p1 in 2..62 {
        if isPrime(p1) {
            carmichael(p1);
        }
    }
}
