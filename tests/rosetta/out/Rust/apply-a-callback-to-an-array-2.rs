// Generated by Mochi compiler v0.10.28 on 2006-01-02T15:04:05Z
fn main() {
    fn each(xs: Vec<i32>, f: Box<dyn Fn(i32) -> i32>) -> () {
        for x in xs {
            f(x);
        }
    }
    fn Map(xs: Vec<i32>, f: Box<dyn Fn(i32) -> i32>) -> Vec<i32> {
        let mut r: Vec<i32> = vec![];
        for x in xs {
            r = { let mut tmp = r.clone(); tmp.push(f(x)); tmp };
        }
        return r;
    }
    fn main() -> () {
        let s: Vec<i32> = vec![1, 2, 3, 4, 5];
        each(s, Box::new(move |i: i32| println!("{}", vec![format!("{}", i * i.to_string())].into_iter().filter(|s| !s.is_empty()).collect::<Vec<_>>().join(" ") )));
        println!("{}", vec![format!("{}", Map(s, Box::new(move |i: i32| i * i)).to_string())].into_iter().filter(|s| !s.is_empty()).collect::<Vec<_>>().join(" ") );
    }
    main();
}
