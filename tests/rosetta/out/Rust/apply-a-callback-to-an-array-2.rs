// Generated by Mochi compiler v0.10.26 on 2025-07-16T11:36:38Z
fn append<T: Clone>(mut v: Vec<T>, item: T) -> Vec<T> {
    v.push(item);
    v
}

fn main() {
    fn each(xs: Vec<i32>, f: Box<dyn Fn(i32) -> i32>) -> () {
        for x in xs {
            f(x);
        }
    }
    fn Map(xs: Vec<i32>, f: Box<dyn Fn(i32) -> i32>) -> Vec<i32> {
        let mut r: Vec<i32> = vec![];
        for x in xs {
            r = append(r, f(x));
        }
        return r;
    }
    fn main() -> () {
        let s: Vec<i32> = vec![1, 2, 3, 4, 5];
        each(s, Box::new(move |i: i32| println!("{}", i * i.to_string())));
        println!("{}", Map(s, Box::new(move |i: i32| i * i)).to_string());
    }
    main();
}
