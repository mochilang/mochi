rustc error: exit status 1
error[E0308]: mismatched types
  --> /tmp/TestMochiRustGolden4-rings-or-4-squares-puzzle4095767959/001/prog.rs:62:108
   |
62 |         return { let mut m = std::collections::BTreeMap::new(); m.insert("count", count); m.insert("list", valid); m };
   |                                                                 -                 -----     ------         ^^^^^ expected integer, found `Vec<Vec<i32>>`
   |                                                                 |                 |         |
   |                                                                 |                 |         arguments to this method are incorrect
   |                                                                 |                 this argument has type `{integer}`...
   |                                                                 ... which causes `m` to have type `BTreeMap<&str, {integer}>`
   |
   = note: expected type `{integer}`
            found struct `Vec<Vec<i32>>`
help: the return type of this call is `Vec<Vec<i32>>` due to the type of the argument passed
  --> /tmp/TestMochiRustGolden4-rings-or-4-squares-puzzle4095767959/001/prog.rs:62:91
   |
62 |         return { let mut m = std::collections::BTreeMap::new(); m.insert("count", count); m.insert("list", valid); m };
   |                                                                                           ^^^^^^^^^^^^^^^^^-----^
   |                                                                                                            |
   |                                                                                                            this argument influences the return type of `insert`
note: method defined here
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/alloc/src/collections/btree/map.rs:1023:12

error[E0308]: mismatched types
  --> /tmp/TestMochiRustGolden4-rings-or-4-squares-puzzle4095767959/001/prog.rs:62:116
   |
30 |     fn getCombs(low: i32, high: i32, unique: bool) -> std::collections::HashMap<&'static str, i32> {
   |                                                       -------------------------------------------- expected `HashMap<&'static str, i32>` because of return type
...
62 |         return { let mut m = std::collections::BTreeMap::new(); m.insert("count", count); m.insert("list", valid); m };
   |                                                                                                                    ^ expected `HashMap<&str, i32>`, found `BTreeMap<&str, {integer}>`
   |
   = note: expected struct `HashMap<&'static str, i32>`
              found struct `BTreeMap<&str, {integer}>`

warning: variable does not need to be mutable
  --> /tmp/TestMochiRustGolden4-rings-or-4-squares-puzzle4095767959/001/prog.rs:16:13
   |
16 |         let mut nums = vec![a, b, c, d, e, f, g];
   |             ----^^^^
   |             |
   |             help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

error: aborting due to 2 previous errors; 1 warning emitted

For more information about this error, try `rustc --explain E0308`.
