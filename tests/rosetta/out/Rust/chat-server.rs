// Generated by Mochi compiler v0.10.26 on 2025-07-16T11:36:54Z
fn append<T: Clone>(mut v: Vec<T>, item: T) -> Vec<T> {
    v.push(item);
    v
}

fn main() {
    fn removeName(names: Vec<&'static str>, name: &'static str) -> Vec<&'static str> {
        let mut out: Vec<&'static str> = vec![];
        for n in names {
            if n != name {
                out = append(out, n);
            }
        }
        return out;
    }
    fn main() -> () {
        let mut clients: Vec<&'static str> = vec![];
        let broadcast = move |msg: &'static str| -> () {
            println!("{}", msg);
        };
        let add = move |name: &'static str| -> () {
            clients = append(clients, name);
            broadcast(format!("{}{}", format!("{}{}", "+++ "", name), "" connected +++
"));
        };
        let send = move |name: &'static str, msg: &'static str| -> () {
            broadcast(format!("{}{}", format!("{}{}", format!("{}{}", name, "> "), msg), "
"));
        };
        let remove = move |name: &'static str| -> () {
            clients = removeName(clients, name);
            broadcast(format!("{}{}", format!("{}{}", "--- "", name), "" disconnected ---
"));
        };
        add("Alice");
        add("Bob");
        send("Alice", "Hello Bob!");
        send("Bob", "Hi Alice!");
        remove("Bob");
        remove("Alice");
        broadcast("Server stopping!
");
    }
    main();
}
