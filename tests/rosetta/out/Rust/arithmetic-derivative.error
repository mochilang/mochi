rustc error: exit status 1
error: `<` is interpreted as a start of generic arguments for `i32`, not a comparison
  --> /tmp/TestMochiRustGoldenarithmetic-derivative277584464/001/prog.rs:67:30
   |
67 |         while s.len() as i32 < 4 {
   |                              ^ --- interpreted as generic arguments
   |                              |
   |                              not interpreted as comparison
   |
help: try comparing the cast value
   |
67 |         while (s.len() as i32) < 4 {
   |               +              +

error: `<` is interpreted as a start of generic arguments for `i32`, not a comparison
  --> /tmp/TestMochiRustGoldenarithmetic-derivative277584464/001/prog.rs:98:33
   |
98 |             if exp.len() as i32 < 2 {
   |                                 ^ --- interpreted as generic arguments
   |                                 |
   |                                 not interpreted as comparison
   |
help: try comparing the cast value
   |
98 |             if (exp.len() as i32) < 2 {
   |                +                +

error[E0599]: no method named `parse` found for type `f64` in the current scope
  --> /tmp/TestMochiRustGoldenarithmetic-derivative277584464/001/prog.rs:13:43
   |
13 |             x = ((x as f64) / (2 as f64)).parse::<i32>().unwrap();
   |                                           ^^^^^ method not found in `f64`

error[E0599]: no method named `parse` found for type `f64` in the current scope
  --> /tmp/TestMochiRustGoldenarithmetic-derivative277584464/001/prog.rs:19:47
   |
19 |                 x = ((x as f64) / (p as f64)).parse::<i32>().unwrap();
   |                                               ^^^^^ method not found in `f64`

error[E0368]: binary assignment operation `+=` cannot be applied to type `&str`
  --> /tmp/TestMochiRustGoldenarithmetic-derivative277584464/001/prog.rs:32:13
   |
32 |             s += ch;
   |             -^^^^^^
   |             |
   |             cannot use `+=` on type `&str`

error[E0610]: `{float}` is a primitive type and therefore doesn't have fields
  --> /tmp/TestMochiRustGoldenarithmetic-derivative277584464/001/prog.rs:45:22
   |
45 |         if n < 1e+19.0 {
   |                      ^

error[E0599]: no method named `parse` found for type `f64` in the current scope
  --> /tmp/TestMochiRustGoldenarithmetic-derivative277584464/001/prog.rs:46:40
   |
46 |             factors = primeFactors((n).parse::<i32>().unwrap());
   |                                        ^^^^^ method not found in `f64`

error[E0599]: no method named `parse` found for type `f64` in the current scope
  --> /tmp/TestMochiRustGoldenarithmetic-derivative277584464/001/prog.rs:48:33
   |
48 |             let g = (n / 100.0).parse::<i32>().unwrap();
   |                                 ^^^^^ method not found in `f64`

error[E0599]: no method named `parse` found for type `i32` in the current scope
  --> /tmp/TestMochiRustGoldenarithmetic-derivative277584464/001/prog.rs:60:46
   |
60 |             return (factors[0] + factors[1]).parse::<f64>().unwrap();
   |                                              ^^^^^ method not found in `i32`

error[E0599]: no method named `parse` found for type `i32` in the current scope
  --> /tmp/TestMochiRustGoldenarithmetic-derivative277584464/001/prog.rs:62:33
   |
62 |         let d = n / (factors[0].parse::<f64>().unwrap());
   |                                 ^^^^^ method not found in `i32`

error[E0599]: no method named `parse` found for type `i32` in the current scope
  --> /tmp/TestMochiRustGoldenarithmetic-derivative277584464/001/prog.rs:63:35
   |
63 |         return D(d) * (factors[0].parse::<f64>().unwrap()) + d;
   |                                   ^^^^^ method not found in `i32`

error[E0308]: mismatched types
  --> /tmp/TestMochiRustGoldenarithmetic-derivative277584464/001/prog.rs:70:16
   |
65 |     fn pad(n: i32) -> &'static str {
   |                       ------------ expected `&'static str` because of return type
...
70 |         return s;
   |                ^ expected `&str`, found `String`
   |
help: consider borrowing here
   |
70 |         return &s;
   |                +

error[E0689]: can't call method `parse` on ambiguous numeric type `{integer}`
  --> /tmp/TestMochiRustGoldenarithmetic-derivative277584464/001/prog.rs:76:38
   |
76 |             vals = append(vals, (D(n.parse::<f64>().unwrap())).parse::<i32>().unwrap());
   |                                      ^^^^^
   |
help: you must specify a type for this binding, like `i32`
   |
74 |         let mut n: i32 = -99;
   |                  +++++

error[E0599]: no method named `parse` found for type `f64` in the current scope
  --> /tmp/TestMochiRustGoldenarithmetic-derivative277584464/001/prog.rs:76:64
   |
76 |             vals = append(vals, (D(n.parse::<f64>().unwrap())).parse::<i32>().unwrap());
   |                                                                ^^^^^ method not found in `f64`

error[E0308]: mismatched types
  --> /tmp/TestMochiRustGoldenarithmetic-derivative277584464/001/prog.rs:84:38
   |
84 |                 line += pad(vals[i + j as usize]);
   |                                      ^^^^^^^^^^ expected `i32`, found `usize`

error[E0277]: cannot add `usize` to `i32`
  --> /tmp/TestMochiRustGoldenarithmetic-derivative277584464/001/prog.rs:84:36
   |
84 |                 line += pad(vals[i + j as usize]);
   |                                    ^ no implementation for `i32 + usize`
   |
   = help: the trait `Add<usize>` is not implemented for `i32`
   = help: the following other types implement trait `Add<Rhs>`:
             `&i32` implements `Add<i32>`
             `&i32` implements `Add`
             `i32` implements `Add<&i32>`
             `i32` implements `Add`

error[E0277]: the type `[i32]` cannot be indexed by `i32`
  --> /tmp/TestMochiRustGoldenarithmetic-derivative277584464/001/prog.rs:84:34
   |
84 |                 line += pad(vals[i + j as usize]);
   |                                  ^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`
   |
   = help: the trait `SliceIndex<[i32]>` is not implemented for `i32`
           but it is implemented for `usize`
   = help: for that trait implementation, expected `usize`, found `i32`
   = note: required for `Vec<i32>` to implement `Index<i32>`

error[E0368]: binary assignment operation `+=` cannot be applied to type `&str`
  --> /tmp/TestMochiRustGoldenarithmetic-derivative277584464/001/prog.rs:84:17
   |
84 |                 line += pad(vals[i + j as usize]);
   |                 ----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                 |
   |                 cannot use `+=` on type `&str`

error[E0368]: binary assignment operation `+=` cannot be applied to type `&str`
  --> /tmp/TestMochiRustGoldenarithmetic-derivative277584464/001/prog.rs:86:21
   |
86 |                     line += " ";
   |                     ----^^^^^^^
   |                     |
   |                     cannot use `+=` on type `&str`

error: aborting due to 19 previous errors

Some errors have detailed explanations: E0277, E0308, E0368, E0599, E0610, E0689.
For more information about an error, try `rustc --explain E0277`.
