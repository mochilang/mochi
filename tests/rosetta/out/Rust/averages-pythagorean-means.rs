// Generated by Mochi compiler v0.10.26 on 2025-07-16T11:36:43Z
fn main() {
    fn powf(base: f64, exp: i32) -> f64 {
        let mut result = 1.0;
        let mut i = 0;
        while i < exp {
            result *= base;
            i += 1;
        }
        return result;
    }
    fn nthRoot(x: f64, n: i32) -> f64 {
        let mut low = 0.0;
        let mut high = x;
        let mut i = 0;
        while i < 60 {
            let mid = (low + high) / 2.0;
            if powf(mid, n) > x {
                high = mid;
            } else {
                low = mid;
            }
            i += 1;
        }
        return low;
    }
    fn main() -> () {
        let mut sum = 0.0;
        let mut sumRecip = 0.0;
        let mut prod = 1.0;
        let mut n = 1;
        while n <= 10 {
            let f = n.parse::<f64>().unwrap();
            sum += f;
            sumRecip = sumRecip + 1.0 / f;
            prod *= f;
            n += 1;
        }
        let count = 10.0;
        let a = sum / count;
        let g = nthRoot(prod, 10);
        let h = count / sumRecip;
        println!("{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", "A: ", a.to_string()), " G: "), g.to_string()), " H: "), h.to_string()));
        println!("{}", format!("{}{}", "A >= G >= H: ", a >= g && g >= h.to_string()));
    }
    main();
}
