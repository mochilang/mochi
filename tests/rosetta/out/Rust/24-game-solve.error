rustc: exit status 1
error[E0308]: mismatched types
  --> /tmp/24_game_solve.rs:37:252
   |
37 | ...), n); m.insert(String::from("denom"), 1); m }); m };
   |                                               ^ expected integer, found `HashMap<String, i32>`
   |
   = note: expected type `{integer}`
            found struct `HashMap<String, i32>`

error[E0308]: mismatched types
  --> /tmp/24_game_solve.rs:41:20
   |
39 |     let exprEval = move |x: &std::collections::HashMap<String, i32>| -> std::collections::HashMap<String, i32> {
   |                                                                         -------------------------------------- expected `HashMap<String, i32>` because of return type
40 |         if *x.get(&String::from("op")).unwrap() == OP_NUM {
41 |             return *x.get(&String::from("value")).unwrap();
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `HashMap<String, i32>`, found `i32`
   |
   = note: expected struct `HashMap<String, i32>`
                found type `i32`

error[E0425]: cannot find function `exprEval` in this scope
  --> /tmp/24_game_solve.rs:43:17
   |
43 |         let l = exprEval(&*x.get(&String::from("left")).unwrap());
   |                 ^^^^^^^^ not found in this scope

error[E0425]: cannot find function `exprEval` in this scope
  --> /tmp/24_game_solve.rs:44:17
   |
44 |         let r = exprEval(&*x.get(&String::from("right")).unwrap());
   |                 ^^^^^^^^ not found in this scope

error[E0599]: no method named `get` found for reference `&i32` in the current scope
  --> /tmp/24_game_solve.rs:58:60
   |
58 |             return *x.get(&String::from("value")).unwrap().get(&String::from("num")).unwrap().to_string();
   |                     -                                      ^^^
   |                     |
   |                     method `get` is available on `&HashMap<String, i32>`
   |
help: there is a method `ge` with a similar name
   |
58 -             return *x.get(&String::from("value")).unwrap().get(&String::from("num")).unwrap().to_string();
58 +             return *x.get(&String::from("value")).unwrap().ge(&String::from("num")).unwrap().to_string();
   |

error[E0425]: cannot find function `exprString` in this scope
  --> /tmp/24_game_solve.rs:60:18
   |
60 |         let ls = exprString(&*x.get(&String::from("left")).unwrap());
   |                  ^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `exprString` in this scope
  --> /tmp/24_game_solve.rs:61:18
   |
61 |         let rs = exprString(&*x.get(&String::from("right")).unwrap());
   |                  ^^^^^^^^^^ not found in this scope

error[E0308]: mismatched types
  --> /tmp/24_game_solve.rs:95:149
   |
95 | ...ap::new(); m.insert(String::from("op"), op); m.insert(String::from("left"), a); m.insert(String::from("right"), b); m };
   |               -                            --     ------                       ^ expected `i32`, found `HashMap<String, i32>`
   |               |                            |      |
   |               |                            |      arguments to this method are incorrect
   |               |                            this argument has type `i32`...
   |               ... which causes `m` to have type `HashMap<String, i32>`
   |
   = note: expected type `i32`
            found struct `HashMap<String, i32>`
help: the return type of this call is `HashMap<String, i32>` due to the type of the argument passed
  --> /tmp/24_game_solve.rs:95:118
   |
95 | ...tring::from("op"), op); m.insert(String::from("left"), a); m.insert(String::from("right"), b); m };
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-^
   |                                                           |
   |                                                           this argument influences the return type of `insert`
note: method defined here
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/std/src/collections/hash/map.rs:1201:12

error[E0308]: mismatched types
  --> /tmp/24_game_solve.rs:95:185
   |
95 | ...hMap::new(); m.insert(String::from("op"), op); m.insert(String::from("left"), a); m.insert(String::from("right"), b); m };
   |                 -                            --                                        ------                        ^ expected `i32`, found `HashMap<String, i32>`
   |                 |                            |                                         |
   |                 |                            this argument has type `i32`...           arguments to this method are incorrect
   |                 ... which causes `m` to have type `HashMap<String, i32>`
   |
   = note: expected type `i32`
            found struct `HashMap<String, i32>`
help: the return type of this call is `HashMap<String, i32>` due to the type of the argument passed
  --> /tmp/24_game_solve.rs:95:153
   |
95 | ...ring::from("left"), a); m.insert(String::from("right"), b); m };
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-^
   |                                                            |
   |                                                            this argument influences the return type of `insert`
note: method defined here
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/std/src/collections/hash/map.rs:1201:12

error[E0425]: cannot find function `solve` in this scope
  --> /tmp/24_game_solve.rs:96:24
   |
96 |                     if solve({ let mut tmp = rest.clone(); tmp.push(node); tmp }) {
   |                        ^^^^^ not found in this scope

error[E0308]: mismatched types
   --> /tmp/24_game_solve.rs:100:149
    |
100 | ...::new(); m.insert(String::from("op"), OP_SUB); m.insert(String::from("left"), b); m.insert(String::from("right"), a); m };
    |             -                            ------     ------                       ^ expected `i32`, found `HashMap<String, i32>`
    |             |                            |          |
    |             |                            |          arguments to this method are incorrect
    |             |                            this argument has type `i32`...
    |             ... which causes `m` to have type `HashMap<String, i32>`
    |
    = note: expected type `i32`
             found struct `HashMap<String, i32>`
help: the return type of this call is `HashMap<String, i32>` due to the type of the argument passed
   --> /tmp/24_game_solve.rs:100:118
    |
100 | ...g::from("op"), OP_SUB); m.insert(String::from("left"), b); m.insert(String::from("right"), a); m };
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-^
    |                                                           |
    |                                                           this argument influences the return type of `insert`
note: method defined here
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/std/src/collections/hash/map.rs:1201:12

error[E0308]: mismatched types
   --> /tmp/24_game_solve.rs:100:185
    |
100 | ...ap::new(); m.insert(String::from("op"), OP_SUB); m.insert(String::from("left"), b); m.insert(String::from("right"), a); m };
    |               -                            ------                                        ------                        ^ expected `i32`, found `HashMap<String, i32>`
    |               |                            |                                             |
    |               |                            this argument has type `i32`...               arguments to this method are incorrect
    |               ... which causes `m` to have type `HashMap<String, i32>`
    |
    = note: expected type `i32`
             found struct `HashMap<String, i32>`
help: the return type of this call is `HashMap<String, i32>` due to the type of the argument passed
   --> /tmp/24_game_solve.rs:100:153
    |
100 | ...ring::from("left"), b); m.insert(String::from("right"), a); m };
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-^
    |                                                            |
    |                                                            this argument influences the return type of `insert`
note: method defined here
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/std/src/collections/hash/map.rs:1201:12

error[E0425]: cannot find function `solve` in this scope
   --> /tmp/24_game_solve.rs:101:20
    |
101 |                 if solve({ let mut tmp = rest.clone(); tmp.push(node); tmp }) {
    |                    ^^^^^ not found in this scope

error[E0308]: mismatched types
   --> /tmp/24_game_solve.rs:104:141
    |
104 | ...::new(); m.insert(String::from("op"), OP_DIV); m.insert(String::from("left"), b); m.insert(String::from("right"), a); m };
    |             -                            ------     ------                       ^ expected `i32`, found `HashMap<String, i32>`
    |             |                            |          |
    |             |                            |          arguments to this method are incorrect
    |             |                            this argument has type `i32`...
    |             ... which causes `m` to have type `HashMap<String, i32>`
    |
    = note: expected type `i32`
             found struct `HashMap<String, i32>`
help: the return type of this call is `HashMap<String, i32>` due to the type of the argument passed
   --> /tmp/24_game_solve.rs:104:110
    |
104 | ...g::from("op"), OP_DIV); m.insert(String::from("left"), b); m.insert(String::from("right"), a); m };
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-^
    |                                                           |
    |                                                           this argument influences the return type of `insert`
note: method defined here
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/std/src/collections/hash/map.rs:1201:12

error[E0308]: mismatched types
   --> /tmp/24_game_solve.rs:104:177
    |
104 | ...ap::new(); m.insert(String::from("op"), OP_DIV); m.insert(String::from("left"), b); m.insert(String::from("right"), a); m };
    |               -                            ------                                        ------                        ^ expected `i32`, found `HashMap<String, i32>`
    |               |                            |                                             |
    |               |                            this argument has type `i32`...               arguments to this method are incorrect
    |               ... which causes `m` to have type `HashMap<String, i32>`
    |
    = note: expected type `i32`
             found struct `HashMap<String, i32>`
help: the return type of this call is `HashMap<String, i32>` due to the type of the argument passed
   --> /tmp/24_game_solve.rs:104:145
    |
104 | ...ring::from("left"), b); m.insert(String::from("right"), a); m };
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-^
    |                                                            |
    |                                                            this argument influences the return type of `insert`
note: method defined here
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/std/src/collections/hash/map.rs:1201:12

error[E0425]: cannot find function `solve` in this scope
   --> /tmp/24_game_solve.rs:105:20
    |
105 |                 if solve({ let mut tmp = rest.clone(); tmp.push(node); tmp }) {
    |                    ^^^^^ not found in this scope

error: aborting due to 16 previous errors

Some errors have detailed explanations: E0308, E0425, E0599.
For more information about an error, try `rustc --explain E0308`.
