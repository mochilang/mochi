// Generated by Mochi compiler v0.10.26 on 2025-07-16T09:39:57Z
fn append<T: Clone>(mut v: Vec<T>, item: T) -> Vec<T> {
    v.push(item);
    v
}

fn main() {
    let n = 15;
    let mut t: Vec<i32> = vec![];
    for _ in 0..(n + 2) {
        t = append(t, 0);
    }
    t[1] = 1;
    for i in 1..(n + 1) {
        let mut j = i;
        while j > 1 {
            t[j as usize] = t[j as usize] + t[j - 1 as usize];
            j -= 1;
        }
        t[i + 1 as usize] = t[i as usize];
        j = i + 1;
        while j > 1 {
            t[j as usize] = t[j as usize] + t[j - 1 as usize];
            j -= 1;
        }
        let cat = t[i + 1 as usize] - t[i as usize];
        if i < 10 {
            println!("{}", format!("{}{}", format!("{}{}", format!("{}{}", " ", i.to_string()), " : "), cat.to_string()));
        } else {
            println!("{}", format!("{}{}", format!("{}{}", i.to_string(), " : "), cat.to_string()));
        }
    }
}
