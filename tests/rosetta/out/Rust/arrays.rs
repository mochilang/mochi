// Generated by Mochi compiler v0.10.26 on 2025-07-16T11:36:41Z
fn append<T: Clone>(mut v: Vec<T>, item: T) -> Vec<T> {
    v.push(item);
    v
}

fn main() {
    fn listStr(xs: Vec<i32>) -> &'static str {
        let mut s = "[";
        let mut i = 0;
        while i < xs.len() as i32 {
            s += xs[i as usize].to_string();
            if i + 1 < xs.len() as i32 {
                s += " ";
            }
            i += 1;
        }
        s += "]";
        return s;
    }
    let mut a = vec![0, 0, 0, 0, 0];
    println!("{}", format!("{}{}", "len(a) = ", a.len() as i32.to_string()));
    println!("{}", format!("{}{}", "a = ", listStr(a)));
    a[0] = 3;
    println!("{}", format!("{}{}", "a = ", listStr(a)));
    println!("{}", format!("{}{}", "a[0] = ", a[0].to_string()));
    let mut s = a[0..4].to_vec();
    let mut cap_s = 5;
    println!("{}", format!("{}{}", "s = ", listStr(s)));
    println!("{}", format!("{}{}", format!("{}{}", format!("{}{}", "len(s) = ", s.len() as i32.to_string()), "  cap(s) = "), cap_s.to_string()));
    s = a[0..5].to_vec();
    println!("{}", format!("{}{}", "s = ", listStr(s)));
    a[0] = 22;
    s[0] = 22;
    println!("{}", format!("{}{}", "a = ", listStr(a)));
    println!("{}", format!("{}{}", "s = ", listStr(s)));
    s = append(s, 4);
    s = append(s, 5);
    s = append(s, 6);
    cap_s = 10;
    println!("{}", format!("{}{}", "s = ", listStr(s)));
    println!("{}", format!("{}{}", format!("{}{}", format!("{}{}", "len(s) = ", s.len() as i32.to_string()), "  cap(s) = "), cap_s.to_string()));
    a[4] = -1;
    println!("{}", format!("{}{}", "a = ", listStr(a)));
    println!("{}", format!("{}{}", "s = ", listStr(s)));
    s = vec![];
    for i in 0..8 {
        s = append(s, 0);
    }
    cap_s = 8;
    println!("{}", format!("{}{}", "s = ", listStr(s)));
    println!("{}", format!("{}{}", format!("{}{}", format!("{}{}", "len(s) = ", s.len() as i32.to_string()), "  cap(s) = "), cap_s.to_string()));
}
