rustc: exit status 1
error[E0308]: mismatched types
  --> /tmp/best-shuffle.rs:10:80
   |
10 |             chars = { let mut tmp = chars.clone(); tmp.push(&s[i as usize..i + 1 as usize]); tmp };
   |                                                                                ^^^^^^^^^^ expected `i32`, found `usize`

error[E0308]: mismatched types
  --> /tmp/best-shuffle.rs:10:76
   |
10 |             chars = { let mut tmp = chars.clone(); tmp.push(&s[i as usize..i + 1 as usize]); tmp };
   |                                                                            ^^^^^^^^^^^^^^ expected `usize`, found `i32`

error[E0277]: cannot add `usize` to `i32`
  --> /tmp/best-shuffle.rs:10:78
   |
10 |             chars = { let mut tmp = chars.clone(); tmp.push(&s[i as usize..i + 1 as usize]); tmp };
   |                                                                              ^ no implementation for `i32 + usize`
   |
   = help: the trait `Add<usize>` is not implemented for `i32`
   = help: the following other types implement trait `Add<Rhs>`:
             `&i32` implements `Add<i32>`
             `&i32` implements `Add`
             `i32` implements `Add<&i32>`
             `i32` implements `Add`

error[E0308]: mismatched types
  --> /tmp/best-shuffle.rs:29:21
   |
29 |         return vec![res, sd];
   |                     ^^^ expected `i32`, found `String`

error[E0599]: no method named `len` found for type `i32` in the current scope
  --> /tmp/best-shuffle.rs:37:21
   |
37 |         while i < t.len() as i32 {
   |                     ^^^
   |
help: there is a method `le` with a similar name, but with different arguments
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/cmp.rs:1400:5

error[E0608]: cannot index into a value of type `i32`
  --> /tmp/best-shuffle.rs:38:59
   |
38 |             arr = { let mut tmp = arr.clone(); tmp.push(&t[i as usize..i + 1 as usize]); tmp };
   |                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> /tmp/best-shuffle.rs:42:19
   |
42 |         while i < arr.len() as i32 {
   |               -   ^^^^^^^^^^^^^^^^ expected `usize`, found `i32`
   |               |
   |               expected because this is `usize`
   |
help: you can convert an `i32` to a `usize` and panic if the converted value doesn't fit
   |
42 |         while i < (arr.len() as i32).try_into().unwrap() {
   |                   +                +++++++++++++++++++++

error[E0308]: mismatched types
  --> /tmp/best-shuffle.rs:45:25
   |
45 |                 if i != j && arr[i as usize] != &s[j as usize..j + 1 as usize] && arr[j as usize] != &s[i as usize..i + 1 as usize] {
   |                    -    ^ expected `usize`, found `i32`
   |                    |
   |                    expected because this is `usize`
   |
help: you can convert an `i32` to a `usize` and panic if the converted value doesn't fit
   |
45 |                 if i != j.try_into().unwrap() && arr[i as usize] != &s[j as usize..j + 1 as usize] && arr[j as usize] != &s[i as usize..i + 1 as usize] {
   |                          ++++++++++++++++++++

error[E0308]: mismatched types
  --> /tmp/best-shuffle.rs:45:68
   |
45 |                 if i != j && arr[i as usize] != &s[j as usize..j + 1 as usize] && arr[j as usize] != &s[i as usize..i + 1 as usize] {
   |                                                                    ^^^^^^^^^^ expected `i32`, found `usize`

error[E0308]: mismatched types
  --> /tmp/best-shuffle.rs:45:64
   |
45 |                 if i != j && arr[i as usize] != &s[j as usize..j + 1 as usize] && arr[j as usize] != &s[i as usize..i + 1 as usize] {
   |                                                                ^^^^^^^^^^^^^^ expected `usize`, found `i32`

error[E0277]: cannot add `usize` to `i32`
  --> /tmp/best-shuffle.rs:45:66
   |
45 |                 if i != j && arr[i as usize] != &s[j as usize..j + 1 as usize] && arr[j as usize] != &s[i as usize..i + 1 as usize] {
   |                                                                  ^ no implementation for `i32 + usize`
   |
   = help: the trait `Add<usize>` is not implemented for `i32`
   = help: the following other types implement trait `Add<Rhs>`:
             `&i32` implements `Add<i32>`
             `&i32` implements `Add`
             `i32` implements `Add<&i32>`
             `i32` implements `Add`

error[E0308]: mismatched types
  --> /tmp/best-shuffle.rs:57:19
   |
57 |         while i < arr.len() as i32 {
   |               -   ^^^^^^^^^^^^^^^^ expected `usize`, found `i32`
   |               |
   |               expected because this is `usize`
   |
help: you can convert an `i32` to a `usize` and panic if the converted value doesn't fit
   |
57 |         while i < (arr.len() as i32).try_into().unwrap() {
   |                   +                +++++++++++++++++++++

error[E0308]: mismatched types
  --> /tmp/best-shuffle.rs:65:19
   |
65 |         while i < arr.len() as i32 {
   |               -   ^^^^^^^^^^^^^^^^ expected `usize`, found `i32`
   |               |
   |               expected because this is `usize`
   |
help: you can convert an `i32` to a `usize` and panic if the converted value doesn't fit
   |
65 |         while i < (arr.len() as i32).try_into().unwrap() {
   |                   +                +++++++++++++++++++++

error[E0308]: mismatched types
  --> /tmp/best-shuffle.rs:69:21
   |
69 |         return vec![out, sd, count];
   |                     ^^^ expected `i32`, found `String`

error: aborting due to 14 previous errors

Some errors have detailed explanations: E0277, E0308, E0599, E0608.
For more information about an error, try `rustc --explain E0277`.
