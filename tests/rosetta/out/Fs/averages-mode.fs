// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
open System

type Anon1 = {
}
let mutable arr1: int list = [|2; 7; 1; 8; 2|]
let mutable counts1: Anon1 = {  }
let mutable keys1: obj = [||]
let mutable i: int = 0
while i < List.length arr1 do
    let v: int list = arr1.[i]
    if counts1.ContainsKey v then
        counts1.[v] <- counts1.[v] + 1
    else
        counts1.[v] <- 1
        keys1 <- keys1 @ [v]
    i <- i + 1
let mutable max1: int = 0
i <- 0
while i < List.length keys1 do
    let k: obj = keys1.[i]
    let c: Anon1 = counts1.[k]
    if c > max1 then
        max1 <- c
    i <- i + 1
let mutable modes1: obj = [||]
i <- 0
while i < List.length keys1 do
    let k: obj = keys1.[i]
    if counts1.[k] = max1 then
        modes1 <- modes1 @ [k]
    i <- i + 1
printfn "%A" (string modes1)
let mutable arr2: int list = [|2; 7; 1; 8; 2; 8|]
let mutable counts2: Anon1 = {  }
let mutable keys2: obj = [||]
i <- 0
while i < List.length arr2 do
    let v: int list = arr2.[i]
    if counts2.ContainsKey v then
        counts2.[v] <- counts2.[v] + 1
    else
        counts2.[v] <- 1
        keys2 <- keys2 @ [v]
    i <- i + 1
let mutable max2: int = 0
i <- 0
while i < List.length keys2 do
    let k: obj = keys2.[i]
    let c: Anon1 = counts2.[k]
    if c > max2 then
        max2 <- c
    i <- i + 1
let mutable modes2: obj = [||]
i <- 0
while i < List.length keys2 do
    let k: obj = keys2.[i]
    if counts2.[k] = max2 then
        modes2 <- modes2 @ [k]
    i <- i + 1
printfn "%A" (string modes2)
