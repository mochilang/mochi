// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
open System

let kPrime (n) (k) =
    let mutable nf: int = 0
    let mutable i: int = 2
    while i <= n do
        while n % i = 0 do
            if nf = k then
                false
            nf <- nf + 1
            n <- n / i
        i <- i + 1
    nf = k
let gen (k) (count) =
    let mutable r: obj = [||]
    let mutable n: int = 2
    while List.length r < count do
        if kPrime n k then
            r <- r @ [n]
        n <- n + 1
    r
let main () =
    let mutable k: int = 1
    while k <= 5 do
        printfn "%A" (string k + " " + string gen k 10)
        k <- k + 1
printfn "%A" (main())
