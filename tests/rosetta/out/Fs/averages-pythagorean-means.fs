// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
open System

let powf (base) (exp) =
    let mutable result: float = 1.0
    let mutable i: int = 0
    while i < exp do
        result <- result * base
        i <- i + 1
    result
let nthRoot (x) (n) =
    let mutable low: float = 0.0
    let mutable high: obj = x
    let mutable i: int = 0
    while i < 60 do
        let mid: obj = (low + high) / 2.0
        if powf mid n > x then
            high <- mid
        else
            low <- mid
        i <- i + 1
    low
let main () =
    let mutable sum: float = 0.0
    let mutable sumRecip: float = 0.0
    let mutable prod: float = 1.0
    let mutable n: int = 1
    while n <= 10 do
        let f: int = n
        sum <- sum + f
        sumRecip <- sumRecip + 1.0 / f
        prod <- prod * f
        n <- n + 1
    let count: float = 10.0
    let a: float = sum / count
    let g: obj = nthRoot prod 10
    let h: float = count / sumRecip
    printfn "%s" ("A: " + string a + " G: " + string g + " H: " + string h)
    printfn "%s" ("A >= G >= H: " + string a >= g && g >= h)
printfn "%A" (main())
