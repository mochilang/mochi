// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
open System

exception Break
exception Continue

let isPrime (n) =
    if n < 2 then
        false
    if n % 2 = 0 then
        n = 2
    if n % 3 = 0 then
        n = 3
    let mutable d: int = 5
    while d * d <= n do
        if n % d = 0 then
            false
        d <- d + 2
        if n % d = 0 then
            false
        d <- d + 4
    true
let mutable circs: obj = [||]
let isCircular (n) =
    let mutable nn: obj = n
    let mutable pow: int = 1
    while nn > 0 do
        pow <- pow * 10
        nn <- nn / 10
    nn <- n
    try
        while true do
            try
                nn <- nn * 10
                let f: obj = nn / pow
                nn <- nn + f * (1 - pow)
                if nn = n then
                    raise Break
                if not isPrime nn then
                    false
            with Continue -> ()
    with Break -> ()
    true
printfn "%s" "The first 19 circular primes are:"
let mutable digits: int list = [|1; 3; 7; 9|]
let mutable q: int list = [|1; 2; 3; 5; 7; 9|]
let mutable fq: int list = [|1; 2; 3; 5; 7; 9|]
let mutable count: int = 0
try
    while true do
        try
            let f: int list = q.[0]
            let fd: int list = fq.[0]
            if isPrime f && isCircular f then
                circs <- circs @ [f]
                count <- count + 1
                if count = 19 then
                    raise Break
            q <- q.[1..]
            fq <- fq.[1..]
            if f <> 2 && f <> 5 then
                for d in digits do
                    q <- q @ [f * 10 + d]
                    fq <- fq @ [fd]
        with Continue -> ()
with Break -> ()
let showList (xs) =
    let mutable out: string = "["
    let mutable i: int = 0
    while i < List.length xs do
        out <- out + string xs.[i]
        if i < List.length xs - 1 then
            out <- out + ", "
        i <- i + 1
    out + "]"
printfn "%A" (showList circs)
printfn "%s" "\nThe next 4 circular primes, in repunit format, are:"
printfn "%s" "[R(19) R(23) R(317) R(1031)]"
printfn "%s" "\nThe following repunits are probably circular primes:"
for i in [5003; 9887; 15073; 25031; 35317; 49081] do
    printfn "%s" "R(" + string i + ") : true"
