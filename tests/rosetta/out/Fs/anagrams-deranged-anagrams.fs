// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
open System

exception Break
exception Continue

type Anon1 = {
}
let sortRunes (s) =
    let mutable arr: obj = [||]
    let mutable i: int = 0
    while i < List.length s do
        arr <- arr @ [s.[i..(i + 1-1)]]
        i <- i + 1
    let mutable n: obj = List.length arr
    let mutable m: int = 0
    while m < n do
        let mutable j: int = 0
        while j < n - 1 do
            if arr.[j] > arr.[j + 1] then
                let tmp: obj = arr.[j]
                arr.[j] <- arr.[j + 1]
                arr.[j + 1] <- tmp
            j <- j + 1
        m <- m + 1
    let mutable out: string = ""
    i <- 0
    while i < n do
        out <- out + arr.[i]
        i <- i + 1
    out
let deranged (a) (b) =
    if List.length a <> List.length b then
        false
    let mutable i: int = 0
    while i < List.length a do
        if a.[i..(i + 1-1)] = b.[i..(i + 1-1)] then
            false
        i <- i + 1
    true
let main () =
    let words: string list = ["constitutionalism"; "misconstitutional"]
    let mutable m: Anon1 = {  }
    let mutable bestLen: int = 0
    let mutable w1: string = ""
    let mutable w2: string = ""
    try
        for w in words do
            try
                if List.length w <= bestLen then
                    raise Continue
                let k: obj = sortRunes w
                if not (m.ContainsKey k) then
                    m.[k] <- [w]
                    raise Continue
                try
                    for c in m.[k] do
                        try
                            if deranged w c then
                                bestLen <- List.length w
                                w1 <- c
                                w2 <- w
                                raise Break
                        with Continue -> ()
                    with Break -> ()
                    m.[k] <- m.[k] @ [w]
                with Continue -> ()
            with Break -> ()
            printfn "%s" (w1 + " " + w2 + " : Length " + string bestLen)
        printfn "%A" (main())
