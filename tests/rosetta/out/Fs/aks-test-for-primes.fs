// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
open System

let poly (p) =
    let mutable s: string = ""
    let mutable coef: int = 1
    let mutable i: obj = p
    if coef <> 1 then
        s <- s + string coef
    while i > 0 do
        s <- s + "x"
        if i <> 1 then
            s <- s + "^" + string i
        coef <- (coef * i / (p - i + 1))
        let mutable d: int = coef
        if (p - (i - 1)) % 2 = 1 then
            d <- -d
        if d < 0 then
            s <- s + " - " + string -d
        else
            s <- s + " + " + string d
        i <- i - 1
    if s = "" then
        s <- "1"
    s
let aks (n) =
    if n < 2 then
        false
    let mutable c: int = n
    let mutable i: int = 1
    while i < n do
        if c % n <> 0 then
            false
        c <- (c * (n - i) / (i + 1))
        i <- i + 1
    true
let main () =
    let mutable p: int = 0
    while p <= 7 do
        printfn "%A" (string p + ":  " + poly p)
        p <- p + 1
    let mutable first: bool = true
    p <- 2
    let mutable line: string = ""
    while p < 50 do
        if aks p then
            if first then
                line <- line + string p
                first <- false
            else
                line <- line + " " + string p
        p <- p + 1
    printfn "%s" line
printfn "%A" (main())
