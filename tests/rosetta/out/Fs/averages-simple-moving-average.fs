// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
open System

let indexOf (s) (ch) =
    let mutable i: int = 0
    while i < List.length s do
        if s.Substring(i, i + 1 - i) = ch then
            i
        i <- i + 1
    -1
let fmt3 (x) =
    let mutable y: obj = ((x * 1000.0) + 0.5) / 1000.0
    let mutable s: obj = string y
    let mutable dot: obj = indexOf s "."
    if dot = 0 - 1 then
        s <- s + ".000"
    else
        let mutable decs: obj = List.length s - dot - 1
        if decs > 3 then
            s <- s.Substring(0, dot + 4 - 0)
        else
            while decs < 3 do
                s <- s + "0"
                decs <- decs + 1
    s
let pad (s) (width) =
    let mutable out: obj = s
    while List.length out < width do
        out <- " " + out
    out
let smaSeries (xs) (period) =
    let mutable res: obj = [||]
    let mutable sum: float = 0.0
    let mutable i: int = 0
    while i < List.length xs do
        sum <- sum + xs.[i]
        if i >= period then
            sum <- sum - xs.[i - period]
        let mutable denom: int = i + 1
        if denom > period then
            denom <- period
        res <- res @ [sum / (denom)]
        i <- i + 1
    res
let main () =
    let mutable xs: float list = [|1.0; 2.0; 3.0; 4.0; 5.0; 5.0; 4.0; 3.0; 2.0; 1.0|]
    let mutable sma3: obj = smaSeries xs 3
    let mutable sma5: obj = smaSeries xs 5
    printfn "%s" "x       sma3   sma5"
    let mutable i: int = 0
    while i < List.length xs do
        let line: obj = pad fmt3 xs.[i] 5 + "  " + pad fmt3 sma3.[i] 5 + "  " + pad fmt3 sma5.[i] 5
        printfn "%A" line
        i <- i + 1
printfn "%A" (main())
