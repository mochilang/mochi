// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
open System

let intSqrt (x) =
    if x < 2 then
        x
    let mutable left: int = 1
    let mutable right: obj = x / 2
    let mutable ans: int = 0
    while left <= right do
        let mid: int = left + (right - left) / 2
        let sq: int = mid * mid
        if sq = x then
            mid
        if sq < x then
            left <- mid + 1
            ans <- mid
        else
            right <- mid - 1
    ans
let sumRecip (n) =
    let mutable s: int = 1
    let limit: obj = intSqrt n
    let mutable f: int = 2
    while f <= limit do
        if n % f = 0 then
            s <- s + n / f
            let f2: obj = n / f
            if f2 <> f then
                s <- s + f
        f <- f + 1
    s
let main () =
    let nums: int list = [6; 28; 120; 496; 672; 8128; 30240; 32760; 523776]
    for n in nums do
        let s: obj = sumRecip n
        if s % n = 0 then
            let val: obj = s / n
            let mutable perfect: string = ""
            if val = 1 then
                perfect <- "perfect!"
            printfn "%s" ("Sum of recipr. factors of " + string n + " = " + string val + " exactly " + perfect)
printfn "%A" (main())
