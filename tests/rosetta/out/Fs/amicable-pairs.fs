// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
open System

let pfacSum (i) =
    let mutable sum: int = 0
    let mutable p: int = 1
    while p <= i / 2 do
        if i % p = 0 then
            sum <- sum + p
        p <- p + 1
    sum
let pad (n) (width) =
    let mutable s: obj = string n
    while List.length s < width do
        s <- " " + s
    s
let main () =
    let mutable sums: obj = [||]
    let mutable i: int = 0
    while i < 20000 do
        sums <- sums @ [0]
        i <- i + 1
    i <- 1
    while i < 20000 do
        sums.[i] <- pfacSum i
        i <- i + 1
    printfn "%s" "The amicable pairs below 20,000 are:"
    let mutable n: int = 2
    while n < 19999 do
        let m: obj = sums.[n]
        if m > n && m < 20000 && n = sums.[m] then
            printfn "%s" ("  " + pad n 5 + " and " + pad m 5)
        n <- n + 1
printfn "%A" (main())
