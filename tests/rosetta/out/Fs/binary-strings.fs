// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
open System

let char (n) =
    let letters: string = "abcdefghijklmnopqrstuvwxyz"
    let idx: obj = n - 97
    if idx < 0 || idx >= List.length letters then
        "?"
    letters.Substring(idx, idx + 1 - idx)
let fromBytes (bs) =
    let mutable s: string = ""
    let mutable i: int = 0
    while i < List.length bs do
        s <- s + char bs.[i]
        i <- i + 1
    s
let mutable b: int list = [|98; 105; 110; 97; 114; 121|]
printfn "%A" (string b)
let mutable c: int list = b
printfn "%A" (string c)
printfn "%A" (string b = c)
let mutable d: obj = [||]
let mutable i: int = 0
while i < List.length b do
    d <- d @ [b.[i]]
    i <- i + 1
d.[1] <- 97
d.[4] <- 110
printfn "%A" (fromBytes b)
printfn "%A" (fromBytes d)
printfn "%A" (string List.length b = 0)
let mutable z: obj = b @ [122]
printfn "%A" (fromBytes z)
let mutable sub: int list = b.[1..(3-1)]
printfn "%A" (fromBytes sub)
let mutable f: obj = [||]
i <- 0
while i < List.length d do
    let val: obj = d.[i]
    if val = 110 then
        f <- f @ [109]
    else
        f <- f @ [val]
    i <- i + 1
printfn "%A" (fromBytes d + " -> " + fromBytes f)
let mutable rem: obj = [||]
rem <- rem @ [b.[0]]
i <- 3
while i < List.length b do
    rem <- rem @ [b.[i]]
    i <- i + 1
printfn "%A" (fromBytes rem)
