// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
open System

let poolPut (p) (x) =
    p @ [x]
let poolGet (p) =
    if List.length p = 0 then
        printfn "%s" "pool empty"
        dict [("pool", p); ("val", 0)]
    let idx: obj = List.length p - 1
    let v: obj = p.[idx]
    p <- p.[0..(idx-1)]
    dict [("pool", p); ("val", v)]
let clearPool (p) =
    []
let main () =
    let mutable pool: obj = [||]
    let mutable i: int = 1
    let mutable j: int = 2
    printfn "%A" (string i + j)
    pool <- poolPut pool i
    pool <- poolPut pool j
    i <- 0
    j <- 0
    let res1: obj = poolGet pool
    pool <- res1.["pool"]
    i <- res1.["val"]
    let res2: obj = poolGet pool
    pool <- res2.["pool"]
    j <- res2.["val"]
    i <- 4
    j <- 5
    printfn "%A" (string i + j)
    pool <- poolPut pool i
    pool <- poolPut pool j
    i <- 0
    j <- 0
    pool <- clearPool pool
    let res3: obj = poolGet pool
    pool <- res3.["pool"]
    i <- res3.["val"]
    let res4: obj = poolGet pool
    pool <- res4.["pool"]
    j <- res4.["val"]
    i <- 7
    j <- 8
    printfn "%A" (string i + j)
printfn "%A" (main())
