// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
open System

exception Break
exception Continue

let indexOfStr (h) (n) =
    let hlen: obj = List.length h
    let nlen: obj = List.length n
    if nlen = 0 then
        0
    let mutable i: int = 0
    while i <= hlen - nlen do
        if h.Substring(i, i + nlen - i) = n then
            i
        i <- i + 1
    -1
let stringSearchSingle (h) (n) =
    indexOfStr h n
let stringSearch (h) (n) =
    let mutable result: obj = [||]
    let mutable start: int = 0
    let hlen: obj = List.length h
    let nlen: obj = List.length n
    try
        while start < hlen do
            try
                let idx: obj = indexOfStr h.Substring(start, hlen - start) n
                if idx >= 0 then
                    result <- result @ [start + idx]
                    start <- start + idx + nlen
                else
                    raise Break
            with Continue -> ()
    with Break -> ()
    result
let display (nums) =
    let mutable s: string = "["
    let mutable i: int = 0
    while i < List.length nums do
        if i > 0 then
            s <- s + ", "
        s <- s + string nums.[i]
        i <- i + 1
    s <- s + "]"
    s
let main () =
    let texts: string list = ["GCTAGCTCTACGAGTCTA"; "GGCTATAATGCGTA"; "there would have been a time for such a word"; "needle need noodle needle"; "DKnuthusesandprogramsanimaginarycomputertheMIXanditsassociatedmachinecodeandassemblylanguages"; "Nearby farms grew an acre of alfalfa on the dairy's behalf, with bales of that alfalfa exchanged for milk."]
    let patterns: string list = ["TCTA"; "TAATAAA"; "word"; "needle"; "and"; "alfalfa"]
    let mutable i: int = 0
    while i < List.length texts do
        printfn "%s" ("text" + string i + 1 + " = " + texts.[i])
        i <- i + 1
    printfn "%s" ""
    let mutable j: int = 0
    while j < List.length texts do
        let idxs: obj = stringSearch texts.[j] patterns.[j]
        printfn "%s" ("Found \"" + patterns.[j] + "\" in 'text" + string j + 1 + "' at indexes " + display idxs)
        j <- j + 1
printfn "%A" (main())
