// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
open System

let qsel (a) (k) =
    let mutable arr: obj = a
    while List.length arr > 1 do
        let mutable px: obj = now() % List.length arr
        let mutable pv: obj = arr.[px]
        let last: obj = List.length arr - 1
        let tmp: obj = arr.[px]
        arr.[px] <- arr.[last]
        arr.[last] <- tmp
        px <- 0
        let mutable i: int = 0
        while i < last do
            let v: obj = arr.[i]
            if v < pv then
                let tmp2: obj = arr.[px]
                arr.[px] <- arr.[i]
                arr.[i] <- tmp2
                px <- px + 1
            i <- i + 1
        if px = k then
            pv
        if k < px then
            arr <- arr.[0..(px-1)]
        else
            let tmp2: obj = arr.[px]
            arr.[px] <- pv
            arr.[last] <- tmp2
            arr <- arr.[(px + 1)..]
            k <- k - (px + 1)
    arr.[0]
let median (list) =
    let mutable arr: obj = list
    let half: obj = (List.length arr / 2)
    let med: obj = qsel arr half
    if List.length arr % 2 = 0 then
        (med + qsel arr half - 1) / 2.0
    med
printfn "%A" (string median [3.0; 1.0; 4.0; 1.0])
printfn "%A" (string median [3.0; 1.0; 4.0; 1.0; 5.0])
