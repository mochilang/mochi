// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
open System

let isPrime (n) =
    if n < 2 then
        false
    if n % 2 = 0 then
        n = 2
    if n % 3 = 0 then
        n = 3
    let mutable d: int = 5
    while d * d <= n do
        if n % d = 0 then
            false
        d <- d + 2
        if n % d = 0 then
            false
        d <- d + 4
    true
let sumDigits (n) =
    let mutable s: int = 0
    let mutable x: obj = n
    while x > 0 do
        s <- s + x % 10
        x <- (x / 10)
    s
let pad (n) =
    if n < 10 then
        "  " + string n
    if n < 100 then
        " " + string n
    string n
let main () =
    printfn "%s" "Additive primes less than 500:"
    let mutable count: int = 0
    let mutable line: string = ""
    let mutable lineCount: int = 0
    let mutable i: int = 2
    while i < 500 do
        if isPrime i && isPrime sumDigits i then
            count <- count + 1
            line <- line + pad i + "  "
            lineCount <- lineCount + 1
            if lineCount = 10 then
                printfn "%A" (line.Substring(0, List.length line - 2 - 0))
                line <- ""
                lineCount <- 0
        if i > 2 then
            i <- i + 2
        else
            i <- i + 1
    if lineCount > 0 then
        printfn "%A" (line.Substring(0, List.length line - 2 - 0))
    printfn "%A" (string count + " additive primes found.")
printfn "%A" (main())
