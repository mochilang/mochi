// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
open System

let sqrtApprox (x) =
    let mutable guess: obj = x
    let mutable i: int = 0
    while i < 20 do
        guess <- (guess + x / guess) / 2.0
        i <- i + 1
    guess
let cholesky (a) =
    let n: obj = List.length a
    let mutable l: obj = [||]
    let mutable i: int = 0
    while i < n do
        let mutable row: obj = [||]
        let mutable j: int = 0
        while j < n do
            row <- row @ [0.0]
            j <- j + 1
        l <- l @ [row]
        i <- i + 1
    i <- 0
    while i < n do
        let mutable j: int = 0
        while j <= i do
            let mutable sum: obj = a.[i].[j]
            let mutable k: int = 0
            while k < j do
                sum <- sum - l.[i].[k] * l.[j].[k]
                k <- k + 1
            if i = j then
                l.[i].[j] <- sqrtApprox sum
            else
                l.[i].[j] <- sum / l.[j].[j]
            j <- j + 1
        i <- i + 1
    l
let printMat (m) =
    let mutable i: int = 0
    while i < List.length m do
        let mutable line: string = ""
        let mutable j: int = 0
        while j < List.length m.[i] do
            line <- line + string m.[i].[j]
            if j < List.length m.[i] - 1 then
                line <- line + " "
            j <- j + 1
        printfn "%s" line
        i <- i + 1
let demo (a) =
    printfn "%s" "A:"
    printfn "%A" (printMat a)
    let l: obj = cholesky a
    printfn "%s" "L:"
    printfn "%A" (printMat l)
printfn "%A" (demo [[25.0; 15.0; -5.0]; [15.0; 18.0; 0.0]; [-5.0; 0.0; 11.0]])
printfn "%A" (demo [[18.0; 22.0; 54.0; 42.0]; [22.0; 70.0; 86.0; 62.0]; [54.0; 86.0; 174.0; 134.0]; [42.0; 62.0; 134.0; 106.0]])
