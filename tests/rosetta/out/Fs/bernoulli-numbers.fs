// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
open System

let bernoulli (n) =
    let mutable a: obj = [||]
    let mutable m: int = 0
    while m <= n do
        a <- a @ [1 / ((m + 1))]
        let mutable j: int = m
        while j >= 1 do
            a.[j - 1] <- (j) * (a.[j - 1] - a.[j])
            j <- j - 1
        m <- m + 1
    a.[0]
for i in 0 .. 61 do
    let b: obj = bernoulli i
    if num b <> 0 then
        let numStr: obj = string num b
        let denStr: obj = string denom b
        printfn "%s" ("B(" + string i.padStart(2, " ") + ") =" + numStr.padStart(45, " ") + "/" + denStr)
