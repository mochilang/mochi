// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
open System

let floorf (x) =
    (x)
let indexOf (s) (ch) =
    let mutable i: int = 0
    while i < List.length s do
        if s.Substring(i, i + 1 - i) = ch then
            i
        i <- i + 1
    -1
let fmtF3 (x) =
    let mutable y: obj = floorf x * 1000.0 + 0.5 / 1000.0
    let mutable s: obj = string y
    let mutable dot: obj = indexOf s "."
    if dot = 0 - 1 then
        s <- s + ".000"
    else
        let mutable decs: obj = List.length s - dot - 1
        if decs > 3 then
            s <- s.Substring(0, dot + 4 - 0)
        else
            while decs < 3 do
                s <- s + "0"
                decs <- decs + 1
    s
let padFloat3 (x) (width) =
    let mutable s: obj = fmtF3 x
    while List.length s < width do
        s <- " " + s
    s
let fib1000 () =
    let mutable a: float = 0.0
    let mutable b: float = 1.0
    let mutable res: obj = [||]
    let mutable i: int = 0
    while i < 1000 do
        res <- res @ [b]
        let mutable t: float = b
        b <- b + a
        a <- t
        i <- i + 1
    res
let leadingDigit (x) =
    if x < 0.0 then
        x <- -x
    while x >= 10.0 do
        x <- x / 10.0
    while x > 0.0 && x < 1.0 do
        x <- x * 10.0
    x
let show (nums) (title) =
    let mutable counts: int list = [|0; 0; 0; 0; 0; 0; 0; 0; 0|]
    for n in nums do
        let d: obj = leadingDigit n
        if d >= 1 && d <= 9 then
            counts.[d - 1] <- counts.[d - 1] + 1
    let preds: float list = [0.301; 0.176; 0.125; 0.097; 0.079; 0.067; 0.058; 0.051; 0.046]
    let total: obj = List.length nums
    printfn "%A" title
    printfn "%s" "Digit  Observed  Predicted"
    let mutable i: int = 0
    while i < 9 do
        let obs: obj = (counts.[i]) / (total)
        let mutable line: string = "  " + string i + 1 + "  " + padFloat3 obs 9 + "  " + padFloat3 preds.[i] 8
        printfn "%s" line
        i <- i + 1
let main () =
    printfn "%A" (show fib1000() "First 1000 Fibonacci numbers")
printfn "%A" (main())
