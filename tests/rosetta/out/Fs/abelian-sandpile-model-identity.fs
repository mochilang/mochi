// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
open System

let neighborsList () =
    [[1; 3]; [0; 2; 4]; [1; 5]; [0; 4; 6]; [1; 3; 5; 7]; [2; 4; 8]; [3; 7]; [4; 6; 8]; [5; 7]]
let plus (a) (b) =
    let mutable res: obj = [||]
    let mutable i: int = 0
    while i < List.length a do
        res <- res @ [a.[i] + b.[i]]
        i <- i + 1
    res
let isStable (p) =
    for v in p do
        if v > 3 then
            false
    true
let topple (p) =
    let neighbors: obj = neighborsList()
    let mutable i: int = 0
    while i < List.length p do
        if p.[i] > 3 then
            p.[i] <- p.[i] - 4
            let nbs: obj = neighbors.[i]
            for j in nbs do
                p.[j] <- p.[j] + 1
            0
        i <- i + 1
    0
let pileString (p) =
    let mutable s: string = ""
    let mutable r: int = 0
    while r < 3 do
        let mutable c: int = 0
        while c < 3 do
            s <- s + string p.[3 * r + c] + " "
            c <- c + 1
        s <- s + "\n"
        r <- r + 1
    s
printfn "%s" "Avalanche of topplings:\n"
let mutable s4: int list = [|4; 3; 3; 3; 1; 2; 0; 2; 3|]
printfn "%A" (pileString s4)
while not isStable s4 do
    printfn "%A" (topple s4)
    printfn "%A" (pileString s4)
printfn "%s" "Commutative additions:\n"
let mutable s1: int list = [|1; 2; 0; 2; 1; 1; 0; 1; 3|]
let mutable s2: int list = [|2; 1; 3; 1; 0; 1; 0; 1; 0|]
let mutable s3_a: obj = plus s1 s2
while not isStable s3_a do
    printfn "%A" (topple s3_a)
let mutable s3_b: obj = plus s2 s1
while not isStable s3_b do
    printfn "%A" (topple s3_b)
printfn "%A" (pileString s1 + "\nplus\n\n" + pileString s2 + "\nequals\n\n" + pileString s3_a)
printfn "%s" ("and\n\n" + pileString s2 + "\nplus\n\n" + pileString s1 + "\nalso equals\n\n" + pileString s3_b)
printfn "%s" "Addition of identity sandpile:\n"
let mutable s3: int list = [|3; 3; 3; 3; 3; 3; 3; 3; 3|]
let mutable s3_id: int list = [|2; 1; 2; 1; 0; 1; 2; 1; 2|]
let mutable s4b: obj = plus s3 s3_id
while not isStable s4b do
    printfn "%A" (topple s4b)
printfn "%A" (pileString s3 + "\nplus\n\n" + pileString s3_id + "\nequals\n\n" + pileString s4b)
printfn "%s" "Addition of identities:\n"
let mutable s5: obj = plus s3_id s3_id
while not isStable s5 do
    printfn "%A" (topple s5)
printfn "%A" (pileString s3_id + "\nplus\n\n" + pileString s3_id + "\nequals\n\n" + pileString s5)
