// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
open System

let initGrid (size) =
    let mutable g: obj = [||]
    let mutable y: int = 0
    while y < size do
        let mutable row: obj = [||]
        let mutable x: int = 0
        while x < size do
            row <- row @ [" "]
            x <- x + 1
        g <- g @ [row]
        y <- y + 1
    g
let set (g) (x) (y) =
    if x >= 0 && x < List.length g.[0] && y >= 0 && y < List.length g then
        g.[y].[x] <- "#"
let circle (r) =
    let size: obj = r * 2 + 1
    let mutable g: obj = initGrid size
    let mutable x: obj = r
    let mutable y: int = 0
    let mutable err: int = 1 - r
    while y <= x do
        printfn "%A" (set g r + x r + y)
        printfn "%A" (set g r + y r + x)
        printfn "%A" (set g r - x r + y)
        printfn "%A" (set g r - y r + x)
        printfn "%A" (set g r - x r - y)
        printfn "%A" (set g r - y r - x)
        printfn "%A" (set g r + x r - y)
        printfn "%A" (set g r + y r - x)
        y <- y + 1
        if err < 0 then
            err <- err + 2 * y + 1
        else
            x <- x - 1
            err <- err + 2 * (y - x) + 1
    g
let trimRight (row) =
    let mutable end: obj = List.length row
    while end > 0 && row.[end - 1] = " " do
        end <- end - 1
    let mutable s: string = ""
    let mutable i: int = 0
    while i < end do
        s <- s + row.[i]
        i <- i + 1
    s
let mutable g: obj = circle 10
for row in g do
    printfn "%A" (trimRight row)
