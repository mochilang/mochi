// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
open System

type Anon1 = {
    Exported: int
    unexported: int
}
type Foobar = {
    mutable Exported: int
    mutable unexported: int
}
let examineAndModify (f) =
    printfn "%s" " v: {" + string f.Exported + " " + string f.unexported + "} = {" + string f.Exported + " " + string f.unexported + "}"
    printfn "%s" "    Idx Name       Type CanSet"
    printfn "%s" "     0: Exported   int  true"
    printfn "%s" "     1: unexported int  false"
    f.Exported <- 16
    f.unexported <- 44
    printfn "%s" "  modified unexported field via unsafe"
    f
let anotherExample () =
    printfn "%s" "bufio.ReadByte returned error: unsafely injected error value into bufio inner workings"
let mutable obj: Anon1 = { Exported = 12; unexported = 42 }
printfn "%s" "obj: {" + string obj.Exported + " " + string obj.unexported + "}"
obj <- examineAndModify obj
printfn "%s" "obj: {" + string obj.Exported + " " + string obj.unexported + "}"
printfn "%A" (anotherExample())
