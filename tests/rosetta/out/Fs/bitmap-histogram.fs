// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
open System

let image () =
    [[0; 0; 10000]; [65535; 65535; 65535]; [65535; 65535; 65535]]
let histogram (g) (bins) =
    if bins <= 0 then
        bins <- List.length g.[0]
    let mutable h: obj = [||]
    let mutable i: int = 0
    while i < bins do
        h <- h @ [0]
        i <- i + 1
    let mutable y: int = 0
    while y < List.length g do
        let mutable row: obj = g.[y]
        let mutable x: int = 0
        while x < List.length row do
            let mutable p: obj = row.[x]
            let mutable idx: obj = ((p * (bins - 1)) / 65535)
            h.[idx] <- h.[idx] + 1
            x <- x + 1
        y <- y + 1
    h
let medianThreshold (h) =
    let mutable lb: int = 0
    let mutable ub: obj = List.length h - 1
    let mutable lSum: int = 0
    let mutable uSum: int = 0
    while lb <= ub do
        if lSum + h.[lb] < uSum + h.[ub] then
            lSum <- lSum + h.[lb]
            lb <- lb + 1
        else
            uSum <- uSum + h.[ub]
            ub <- ub - 1
    ((ub * 65535) / List.length h)
let threshold (g) (t) =
    let mutable out: obj = [||]
    let mutable y: int = 0
    while y < List.length g do
        let mutable row: obj = g.[y]
        let mutable newRow: obj = [||]
        let mutable x: int = 0
        while x < List.length row do
            if row.[x] < t then
                newRow <- newRow @ [0]
            else
                newRow <- newRow @ [65535]
            x <- x + 1
        out <- out @ [newRow]
        y <- y + 1
    out
let printImage (g) =
    let mutable y: int = 0
    while y < List.length g do
        let mutable row: obj = g.[y]
        let mutable line: string = ""
        let mutable x: int = 0
        while x < List.length row do
            if row.[x] = 0 then
                line <- line + "0"
            else
                line <- line + "1"
            x <- x + 1
        printfn "%s" line
        y <- y + 1
let main () =
    let img: obj = image()
    let h: obj = histogram img 0
    printfn "%s" ("Histogram: " + string h)
    let t: obj = medianThreshold h
    printfn "%s" ("Threshold: " + string t)
    let bw: obj = threshold img t
    printfn "%A" (printImage bw)
printfn "%A" (main())
