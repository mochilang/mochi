// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
open System

let amb (wordsets) (res) (idx) =
    if idx = List.length wordsets then
        true
    let mutable prev: string = ""
    if idx > 0 then
        prev <- res.[idx - 1]
    let mutable i: int = 0
    while i < List.length wordsets.[idx] do
        let w: obj = wordsets.[idx].[i]
        if idx = 0 || prev.Substring(List.length prev - 1, List.length prev - List.length prev - 1) = w.Substring(0, 1 - 0) then
            res.[idx] <- w
            if amb wordsets res idx + 1 then
                true
        i <- i + 1
    false
let main () =
    let wordset: string list list = [["the"; "that"; "a"]; ["frog"; "elephant"; "thing"]; ["walked"; "treaded"; "grows"]; ["slowly"; "quickly"]]
    let mutable res: obj = [||]
    let mutable i: int = 0
    while i < List.length wordset do
        res <- res @ [""]
        i <- i + 1
    if amb wordset res 0 then
        let mutable out: string = "[" + res.[0]
        let mutable j: int = 1
        while j < List.length res do
            out <- out + " " + res.[j]
            j <- j + 1
        out <- out + "]"
        printfn "%s" out
    else
        printfn "%s" "No amb found"
printfn "%A" (main())
