// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
open System

let animal: string list = ["Rat"; "Ox"; "Tiger"; "Rabbit"; "Dragon"; "Snake"; "Horse"; "Goat"; "Monkey"; "Rooster"; "Dog"; "Pig"]
let yinYang: string list = ["Yang"; "Yin"]
let element: string list = ["Wood"; "Fire"; "Earth"; "Metal"; "Water"]
let stemChArr: string list = ["甲"; "乙"; "丙"; "丁"; "戊"; "己"; "庚"; "辛"; "壬"; "癸"]
let branchChArr: string list = ["子"; "丑"; "寅"; "卯"; "辰"; "巳"; "午"; "未"; "申"; "酉"; "戌"; "亥"]
type Info = {
    mutable animal: string
    mutable yinYang: string
    mutable element: string
    mutable stemBranch: string
    mutable cycle: int
}
let cz (yr) (animal) (yinYang) (element) (sc) (bc) =
    let mutable y: obj = yr - 4
    let stem: obj = y % 10
    let branch: obj = y % 12
    let sb: obj = sc.[stem] + bc.[branch]
    { animal = animal.[branch]; yinYang = yinYang.[stem % 2]; element = element.[(stem / 2)]; stemBranch = sb; cycle = y % 60 + 1 }
for yr in [1935; 1938; 1968; 1972; 1976] do
    let r: obj = cz yr animal yinYang element stemChArr branchChArr
    printfn "%A" (string yr + ": " + r.element + " " + r.animal + ", " + r.yinYang + ", Cycle year " + string r.cycle + " " + r.stemBranch)
