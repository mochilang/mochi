// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
open System

let egcd (a) (b) =
    if a = 0 then
        [b; 0; 1]
    let res: obj = egcd b % a a
    let g: obj = res.[0]
    let x1: obj = res.[1]
    let y1: obj = res.[2]
    [g; y1 - (b / a) * x1; x1]
let modInv (a) (m) =
    let r: obj = egcd a m
    if r.[0] <> 1 then
        0
    let x: obj = r.[1]
    if x < 0 then
        x + m
    x
let crt (a) (n) =
    let mutable prod: int = 1
    let mutable i: int = 0
    while i < List.length n do
        prod <- prod * n.[i]
        i <- i + 1
    let mutable x: int = 0
    i <- 0
    while i < List.length n do
        let ni: obj = n.[i]
        let ai: obj = a.[i]
        let p: int = prod / ni
        let inv: obj = modInv p % ni ni
        x <- x + ai * inv * p
        i <- i + 1
    x % prod
let n: int list = [3; 5; 7]
let a: int list = [2; 3; 2]
let res: obj = crt a n
printfn "%A" (string res + " <nil>")
