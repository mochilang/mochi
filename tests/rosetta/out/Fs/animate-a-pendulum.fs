// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
open System

let PI: float = 3.141592653589793
let sinApprox (x) =
    let mutable term: obj = x
    let mutable sum: obj = x
    let mutable n: int = 1
    while n <= 10 do
        let denom: obj = ((2 * n) * (2 * n + 1))
        term <- -term * x * x / denom
        sum <- sum + term
        n <- n + 1
    sum
let cosApprox (x) =
    let mutable term: float = 1.0
    let mutable sum: float = 1.0
    let mutable n: int = 1
    while n <= 10 do
        let denom: obj = ((2 * n - 1) * (2 * n))
        term <- -term * x * x / denom
        sum <- sum + term
        n <- n + 1
    sum
let sqrtApprox (x) =
    let mutable guess: obj = x
    let mutable i: int = 0
    while i < 10 do
        guess <- (guess + x / guess) / 2.0
        i <- i + 1
    guess
let L: float = 10.0
let G: float = 9.81
let dt: float = 0.2
let phi0: float = PI / 4.0
let omega: obj = sqrtApprox G / L
let mutable t: float = 0.0
for step in 0 .. 10 do
    let phi: float = phi0 * cosApprox omega * t
    let pos: obj = (10.0 * sinApprox phi + 0.5)
    printfn "%A" (string pos)
    t <- t + dt
