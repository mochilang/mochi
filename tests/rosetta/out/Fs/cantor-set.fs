// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
open System

exception Break
exception Continue

let width: int = 81
let height: int = 5
let mutable lines: obj = [||]
for i in 0 .. height do
    let mutable row: string = ""
    let mutable j: int = 0
    while j < width do
        row <- row + "*"
        j <- j + 1
    lines <- lines @ [row]
let setChar (s) (idx) (ch) =
    s.Substring(0, idx - 0) + ch + s.Substring(idx + 1, List.length s - idx + 1)
let mutable stack: System.Collections.Generic.IDictionary<string, int> list = [|dict [("start", 0); ("len", width); ("index", 1)]|]
try
    while List.length stack > 0 do
        try
            let mutable frame: System.Collections.Generic.IDictionary<string, int> list = stack.[List.length stack - 1]
            stack <- stack.[0..(List.length stack - 1-1)]
            let start: System.Collections.Generic.IDictionary<string, int> list = frame.["start"]
            let lenSeg: System.Collections.Generic.IDictionary<string, int> list = frame.["len"]
            let index: System.Collections.Generic.IDictionary<string, int> list = frame.["index"]
            let seg: obj = (lenSeg / 3)
            if seg = 0 then
                raise Continue
            let mutable i: System.Collections.Generic.IDictionary<string, int> list = index
            while i < height do
                let mutable j: System.Collections.Generic.IDictionary<string, int> list = start + seg
                while j < start + 2 * seg do
                    lines.[i] <- setChar lines.[i] j " "
                    j <- j + 1
                i <- i + 1
            stack <- stack @ [dict [("start", start); ("len", seg); ("index", index + 1)]]
            stack <- stack @ [dict [("start", start + seg * 2); ("len", seg); ("index", index + 1)]]
        with Continue -> ()
with Break -> ()
for line in lines do
    printfn "%A" line
