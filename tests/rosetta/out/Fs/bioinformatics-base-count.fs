// Generated by Mochi compiler v0.10.26 on 2006-01-02T15:04:05Z
open System

let padLeft (s) (w) =
    let mutable res: string = ""
    let mutable n: obj = w - List.length s
    while n > 0 do
        res <- res + " "
        n <- n - 1
    res + s
let dna: string = "" + "CGTAAAAAATTACAACGTCCTTTGGCTATCTCTTAAACTCCTGCTAAATG" + "CTCGTGCTTTCCAATTATGTAAGCGTTCCGAGACGGGGTGGTCGATTCTG" + "AGGACAAAGGTCAAGATGGAGCGCATCGAACGCAATAAGGATCATTTGAT" + "GGGACGTTTCGTCGACAAAGTCTTGTTTCGAGAGTAACGGCTACCGTCTT" + "CGATTCTGCTTATAACACTATGTTCTTATGAAATGGATGTTCTGAGTTGG" + "TCAGTCCCAATGTGCGGGGTTTCTTTTAGTACGTCGGGAGTGGTATTATA" + "TTTAATTTTTCTATATAGCGATCTGTATTTAAGCAATTCATTTAGGTTAT" + "CGCCGCGATGCTCGGTTCGGACCGCCAAGCATCTGGCTCCACTGCTAGTG" + "TCCTAAATTTGAATGGCAAACACAAATAAGATTTAGCAATTCGTGTAGAC" + "GACCGGGGACTTGCATGATGGGAGCAGCTTTGTTAAACTACGAACGTAAT"
printfn "%s" "SEQUENCE:"
let le: obj = List.length dna
let mutable i: int = 0
while i < le do
    let mutable k: int = i + 50
    if k > le then
        k <- le
    printfn "%A" (padLeft string i 5 + ": " + dna.Substring(i, k - i))
    i <- i + 50
let mutable a: int = 0
let mutable c: int = 0
let mutable g: int = 0
let mutable t: int = 0
let mutable idx: int = 0
while idx < le do
    let ch: obj = dna.Substring(idx, idx + 1 - idx)
    if ch = "A" then
        a <- a + 1
    else
        if ch = "C" then
            c <- c + 1
        else
            if ch = "G" then
                g <- g + 1
            else
                if ch = "T" then
                    t <- t + 1
    idx <- idx + 1
printfn "%s" ""
printfn "%s" "BASE COUNT:"
printfn "%s" ("    A: " + padLeft string a 3)
printfn "%s" ("    C: " + padLeft string c 3)
printfn "%s" ("    G: " + padLeft string g 3)
printfn "%s" ("    T: " + padLeft string t 3)
printfn "%s" "    ------"
printfn "%s" ("    Î£: " + string le)
printfn "%s" "    ======"
