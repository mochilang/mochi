# Generated by Mochi transpiler v0.10.40 on 2025-07-25 19:40 +0700
require 'json'

$now_seed = 0
$now_seeded = false
s = ENV['MOCHI_NOW_SEED']
if s && s != ''
  begin
    $now_seed = Integer(s)
    $now_seeded = true
  rescue StandardError
  end
end
def _now()
  if $now_seeded
    $now_seed = ($now_seed * 1664525 + 1013904223) % 2147483647
    $now_seed
  else
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)
  end
end


require 'objspace'
def _mem()
  ObjectSpace.memsize_of_all
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.rjust(len, ch)
end

start_mem = _mem()
start = _now()
  def main()
    puts("Diagram after trimming whitespace and removal of blank lines:\n")
    puts("+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+")
    puts("|                      ID                       |")
    puts("+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+")
    puts("|QR|   Opcode  |AA|TC|RD|RA|   Z    |   RCODE   |")
    puts("+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+")
    puts("|                    QDCOUNT                    |")
    puts("+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+")
    puts("|                    ANCOUNT                    |")
    puts("+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+")
    puts("|                    NSCOUNT                    |")
    puts("+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+")
    puts("|                    ARCOUNT                    |")
    puts("+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+")
    puts("\nDecoded:\n")
    puts("Name     Bits  Start  End")
    puts("=======  ====  =====  ===")
    puts("ID        16      0    15")
    puts("QR         1     16    16")
    puts("Opcode     4     17    20")
    puts("AA         1     21    21")
    puts("TC         1     22    22")
    puts("RD         1     23    23")
    puts("RA         1     24    24")
    puts("Z          3     25    27")
    puts("RCODE      4     28    31")
    puts("QDCOUNT   16     32    47")
    puts("ANCOUNT   16     48    63")
    puts("NSCOUNT   16     64    79")
    puts("ARCOUNT   16     80    95")
    puts("\nTest string in hex:")
    puts("78477bbf5496e12e1bf169a4")
    puts("\nTest string in binary:")
    puts("011110000100011101111011101111110101010010010110111000010010111000011011111100010110100110100100")
    puts("\nUnpacked:\n")
    puts("Name     Size  Bit pattern")
    puts("=======  ====  ================")
    puts("ID        16   0111100001000111")
    puts("QR         1   0")
    puts("Opcode     4   1111")
    puts("AA         1   0")
    puts("TC         1   1")
    puts("RD         1   1")
    puts("RA         1   1")
    puts("Z          3   011")
    puts("RCODE      4   1111")
    puts("QDCOUNT   16   0101010010010110")
    puts("ANCOUNT   16   1110000100101110")
    puts("NSCOUNT   16   0001101111110001")
    puts("ARCOUNT   16   0110100110100100")
  end
  main()
end_time = _now()
end_mem = _mem()
result = {"duration_us" => ((end_time - start) / 1000), "memory_bytes" => (end_mem - start_mem), "name" => "main"}
puts(JSON.pretty_generate(result))
