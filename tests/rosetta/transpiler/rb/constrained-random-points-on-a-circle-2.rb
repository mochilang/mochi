# Generated by Mochi transpiler v0.10.42 on 2025-07-28 07:49 +0700

$now_seed = 0
$now_seeded = false
s = ENV['MOCHI_NOW_SEED']
if s && s != ''
  begin
    $now_seed = Integer(s)
    $now_seeded = true
  rescue StandardError
  end
end
def _now()
  if $now_seeded
    $now_seed = ($now_seed * 1664525 + 1013904223) % 2147483647
    $now_seed
  else
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)
  end
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end

$nPts = 100
$rMin = 10
$rMax = 15
$span = _add(_add($rMax, 1), $rMax)
$poss = []
$min2 = $rMin * $rMin
$max2 = $rMax * $rMax
$y = -$rMax
while $y <= $rMax
  x = -$rMax
  while x <= $rMax
    r2 = _add(x * x, $y * $y)
    if r2 >= $min2 && r2 <= $max2
      $poss = $poss + [[x, $y]]
    end
    x = _add(x, 1)
  end
  $y = _add($y, 1)
end
puts(_add(($poss.length).to_s, " possible points"))
$rows = []
$r = 0
while $r < $span
  row = []
  c = 0
  while c < $span * 2
    row = row + [" "]
    c = _add(c, 1)
  end
  $rows = $rows + [row]
  $r = _add($r, 1)
end
$u = 0
$seen = {}
$n = 0
while $n < $nPts
  i = _now() % $poss.length
  x = $poss[i][0]
  yy = $poss[i][1]
  row = _add(yy, $rMax)
  col = (_add(x, $rMax)) * 2
  $rows[row][col] = "*"
  key = _add(_add((row).to_s, ","), (col).to_s)
  if !$seen[key]
    $seen[key] = true
    $u = _add($u, 1)
  end
  $n = _add($n, 1)
end
$i2 = 0
while $i2 < $span
  line = ""
  j = 0
  while j < $span * 2
    line = _add(line, $rows[$i2][j])
    j = _add(j, 1)
  end
  puts(line)
  $i2 = _add($i2, 1)
end
puts(_add(($u).to_s, " unique points"))
