# Generated by Mochi transpiler v0.10.41 on 2025-07-26 21:43 +0700
require 'json'

$now_seed = 0
$now_seeded = false
s = ENV['MOCHI_NOW_SEED']
if s && s != ''
  begin
    $now_seed = Integer(s)
    $now_seeded = true
  rescue StandardError
  end
end
def _now()
  if $now_seeded
    $now_seed = ($now_seed * 1664525 + 1013904223) % 2147483647
    $now_seed
  else
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)
  end
end


require 'objspace'
def _mem()
  ObjectSpace.memsize_of_all
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end

start_mem = _mem()
start = _now()
  $nPts = 100
  $rMin = 10
  $rMax = 15
  $span = _add(_add($rMax, 1), $rMax)
  $rows = []
  $r = 0
  while $r < $span
    $row = []
    $c = 0
    while $c < $span * 2
      $row = $row + [" "]
      $c = _add($c, 1)
    end
    $rows = $rows + [$row]
    $r = _add($r, 1)
  end
  $u = 0
  $seen = {}
  $min2 = $rMin * $rMin
  $max2 = $rMax * $rMax
  $n = 0
  while $n < $nPts
    $x = _now() % $span - $rMax
    $y = _now() % $span - $rMax
    $rs = _add($x * $x, $y * $y)
    if $rs < $min2 || $rs > $max2
      next
    end
    $n = _add($n, 1)
    $row = _add($y, $rMax)
    $col = (_add($x, $rMax)) * 2
    $rows[$row][$col] = "*"
    $key = _add(_add(($row).to_s, ","), ($col).to_s)
    if !$seen[$key]
      $seen[$key] = true
      $u = _add($u, 1)
    end
  end
  $i = 0
  while $i < $span
    $line = ""
    $j = 0
    while $j < $span * 2
      $line = _add($line, $rows[$i][$j])
      $j = _add($j, 1)
    end
    puts($line)
    $i = _add($i, 1)
  end
  puts(_add(($u).to_s, " unique points"))
end_time = _now()
end_mem = _mem()
result = {"duration_us" => ((end_time - start) / 1000), "memory_bytes" => (end_mem - start_mem), "name" => "main"}
puts(JSON.pretty_generate(result))
