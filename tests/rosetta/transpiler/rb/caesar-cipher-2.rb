# Generated by Mochi transpiler v0.10.39 on 2025-07-24 20:52 +0700

def _indexOf(s, ch)
  idx = s.index(ch)
  idx ? idx : -1
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.rjust(len, ch)
end

def indexOf(s, ch)
  i = 0
  while i < s.length
    if s[i..._add(i, 1)] == ch
      return i
    end
    i = _add(i, 1)
  end
  return -1
end
def ord(ch)
  upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
  lower = "abcdefghijklmnopqrstuvwxyz"
  idx = _indexOf(upper, ch)
  if idx >= 0
    return _add(65, idx)
  end
  idx = _indexOf(lower, ch)
  if idx >= 0
    return _add(97, idx)
  end
  return 0
end
def chr(n)
  upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
  lower = "abcdefghijklmnopqrstuvwxyz"
  if n >= 65 && n < 91
    return upper[n - 65...n - 64]
  end
  if n >= 97 && n < 123
    return lower[n - 97...n - 96]
  end
  return "?"
end
def shiftRune(r, k)
  if r >= "a" && r <= "z"
    return chr(_add(((_add(ord(r) - 97, k)) % 26), 97))
  end
  if r >= "A" && r <= "Z"
    return chr(_add(((_add(ord(r) - 65, k)) % 26), 65))
  end
  return r
end
def encipher(s, k)
  out = ""
  i = 0
  while i < s.length
    out = _add(out, shiftRune(s[i..._add(i, 1)], k))
    i = _add(i, 1)
  end
  return out
end
def decipher(s, k)
  return encipher(s, (26 - k % 26) % 26)
end
def main()
  pt = "The five boxing wizards jump quickly"
  puts(_add("Plaintext: ", pt))
  [0, 1, 7, 25, 26].each do |key|
    if key < 1 || key > 25
      puts(_add(_add("Key ", (key).to_s), " invalid"))
      next
    end
    ct = encipher(pt, key)
    puts(_add("Key ", (key).to_s))
    puts(_add("  Enciphered: ", ct))
    puts(_add("  Deciphered: ", decipher(ct, key)))
  end
end
main()
