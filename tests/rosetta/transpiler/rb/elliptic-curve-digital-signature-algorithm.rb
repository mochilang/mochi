# Generated by Mochi transpiler v0.10.42 on 2025-07-27 10:22 +0000
require 'json'

$now_seed = 0
$now_seeded = false
s = ENV['MOCHI_NOW_SEED']
if s && s != ''
  begin
    $now_seed = Integer(s)
    $now_seeded = true
  rescue StandardError
  end
end
def _now()
  if $now_seeded
    $now_seed = ($now_seed * 1664525 + 1013904223) % 2147483647
    $now_seed
  else
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)
  end
end


require 'objspace'
def _mem()
  ObjectSpace.memsize_of_all
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end

start_mem = _mem()
start = _now()
  def main()
    puts("Private key:\nD: 1234567890")
    puts("\nPublic key:")
    puts("X: 43162711582587979080031819627904423023685561091192625653251495188141318209988")
    puts("Y: 86807430002474105664458509423764867536342689150582922106807036347047552480521")
    puts("\nMessage: Rosetta Code")
    puts("Hash   : 0xe6f9ed0d")
    puts("\nSignature:")
    puts("R: 23195197793674669608400023921033380707595656606710353926508630347378485682379")
    puts("S: 79415614279862633473653728365954499259635019180091322566320325357594590761922")
    puts("\nSignature verified: true")
  end
  main()
end_time = _now()
end_mem = _mem()
result = {"duration_us" => ((end_time - start) / 1000), "memory_bytes" => (end_mem - start_mem), "name" => "main"}
puts(JSON.pretty_generate(result))
