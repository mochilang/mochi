# Generated by Mochi transpiler v0.10.50 on 2025-07-30 21:05 +0700

def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end

def show(xs)
  s = ""
  i = 0
  while i < xs.length
    s = _add(s, (xs[i]).to_s)
    if i < xs.length - 1
      s = _add(s, " ")
    end
    i = _add(i, 1)
  end
  return s
end
def gen(init, n)
  b = init
  res = []
  sum = 0
  b.each do |x|
    res = res + [x]
    sum = _add(sum, x)
  end
  while res.length < n
    next_ = sum
    res = res + [next_]
    sum = _add(sum, next_) - b[0]
    b = b[1...b.length] + [next_]
  end
  return res
end
def main()
  n = 10
  puts(_add(" Fibonacci: ", show(gen([1, 1], n))))
  puts(_add("Tribonacci: ", show(gen([1, 1, 2], n))))
  puts(_add("Tetranacci: ", show(gen([1, 1, 2, 4], n))))
  puts(_add("     Lucas: ", show(gen([2, 1], n))))
end
main()
