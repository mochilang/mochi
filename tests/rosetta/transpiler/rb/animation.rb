# Generated by Mochi transpiler v0.10.42 on 2025-07-28 00:12 +0700
require 'json'

$now_seed = 0
$now_seeded = false
s = ENV['MOCHI_NOW_SEED']
if s && s != ''
  begin
    $now_seed = Integer(s)
    $now_seeded = true
  rescue StandardError
  end
end
def _now()
  if $now_seeded
    $now_seed = ($now_seed * 1664525 + 1013904223) % 2147483647
    $now_seed
  else
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)
  end
end


require 'objspace'
def _mem()
  ObjectSpace.memsize_of_all
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end

start_mem = _mem()
start = _now()
  $msg = "Hello World! "
  $shift = 0
  $inc = 1
  $clicks = 0
  $frames = 0
  while $clicks < 5
    $line = ""
    $i = 0
    while $i < $msg.length
      $idx = (_add($shift, $i)) % $msg.length
      $line = _add($line, $msg[$idx..._add($idx, 1)])
      $i = _add($i, 1)
    end
    puts($line)
    $shift = (_add($shift, $inc)) % $msg.length
    $frames = _add($frames, 1)
    if $frames % $msg.length == 0
      $inc = $msg.length - $inc
      $clicks = _add($clicks, 1)
    end
  end
end_time = _now()
end_mem = _mem()
result = {"duration_us" => ((end_time - start) / 1000), "memory_bytes" => (end_mem - start_mem), "name" => "main"}
puts(JSON.pretty_generate(result))
