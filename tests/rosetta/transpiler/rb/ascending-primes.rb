# Generated by Mochi transpiler v0.10.37 on 2025-07-23 13:37 +0700

def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end

def isPrime(n)
  if n < 2
    return false
  end
  if n % 2 == 0
    return n == 2
  end
  if n % 3 == 0
    return n == 3
  end
  d = 5
  while d * d <= n
    if n % d == 0
      return false
    end
    d = _add(d, 2)
    if n % d == 0
      return false
    end
    d = _add(d, 4)
  end
  return true
end
$asc = []
def gen(first, cand, digits)
  if digits == 0
    if isPrime(cand)
      $asc = _add($asc, [cand])
    end
    return
  end
  i = first
  while i < 10
    gen(_add(i, 1), _add(cand * 10, i), digits - 1)
    i = _add(i, 1)
  end
end
def pad(n, width)
  s = (n).to_s
  while s.length < width
    s = _add(" ", s)
  end
  return s
end
def main()
  digits = 1
  while digits < 10
    gen(1, 0, digits)
    digits = _add(digits, 1)
  end
  puts(_add(_add("There are ", ($asc.length).to_s), " ascending primes, namely:"))
  i = 0
  line = ""
  while i < $asc.length
    line = _add(_add(line, pad($asc[i], 8)), " ")
    if (_add(i, 1)) % 10 == 0
      puts(line[0...line.length - 1])
      line = ""
    end
    i = _add(i, 1)
  end
  if line.length > 0
    puts(line[0...line.length - 1])
  end
end
main()
