# Generated by Mochi transpiler v0.10.47 on 2025-07-28 11:44 +0700
require 'json'

$now_seed = 0
$now_seeded = false
s = ENV['MOCHI_NOW_SEED']
if s && s != ''
  begin
    $now_seed = Integer(s)
    $now_seeded = true
  rescue StandardError
  end
end
def _now()
  if $now_seeded
    $now_seed = ($now_seed * 1664525 + 1013904223) % 2147483647
    $now_seed
  else
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)
  end
end


require 'objspace'
def _mem()
  ObjectSpace.memsize_of_all
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end

start_mem = _mem()
start = _now()
  def bubbleSort(a)
    arr = a
    itemCount = arr.length - 1
    while true
      hasChanged = false
      index = 0
      while index < itemCount
        if arr[index] > arr[_add(index, 1)]
          tmp = arr[index]
          arr[index] = arr[_add(index, 1)]
          arr[_add(index, 1)] = tmp
          hasChanged = true
        end
        index = _add(index, 1)
      end
      if !hasChanged
        break
      end
      itemCount = itemCount - 1
    end
    return arr
  end
  $list = [31, 41, 59, 26, 53, 58, 97, 93, 23, 84]
  puts(_add("unsorted: ", ($list).to_s))
  $list = bubbleSort($list)
  puts(_add("sorted!  ", ($list).to_s))
end_time = _now()
end_mem = _mem()
result = {"duration_us" => ((end_time - start) / 1000), "memory_bytes" => (end_mem - start_mem), "name" => "main"}
puts(JSON.pretty_generate(result))
