# Generated by Mochi transpiler v0.10.42 on 2025-07-28 10:03 +0700
require 'json'

$now_seed = 0
$now_seeded = false
s = ENV['MOCHI_NOW_SEED']
if s && s != ''
  begin
    $now_seed = Integer(s)
    $now_seeded = true
  rescue StandardError
  end
end
def _now()
  if $now_seeded
    $now_seed = ($now_seed * 1664525 + 1013904223) % 2147483647
    $now_seed
  else
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)
  end
end


def _repeat(s, n)
  s * n.to_i
end


require 'objspace'
def _mem()
  ObjectSpace.memsize_of_all
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end

start_mem = _mem()
start = _now()
  def repeat(ch, n)
    s = ""
    i = 0
    while i < n
      s = _add(s, ch)
      i = _add(i, 1)
    end
    return s
  end
  def cubLine(n, dx, dy, cde)
    line = _add(_repeat(" ", _add(n, 1)), cde[0...1])
    d = 9 * dx - 1
    while d > 0
      line = _add(line, cde[1...2])
      d = d - 1
    end
    line = _add(line, cde[0...1])
    line = _add(_add(line, _repeat(" ", dy)), cde[2...])
    puts(line)
  end
  def cuboid(dx, dy, dz)
    puts(_add(_add(_add(_add(_add(_add("cuboid ", (dx).to_s), " "), (dy).to_s), " "), (dz).to_s), ":"))
    cubLine(_add(dy, 1), dx, 0, "+-")
    i = 1
    while i <= dy
      cubLine(_add(dy - i, 1), dx, i - 1, "/ |")
      i = _add(i, 1)
    end
    cubLine(0, dx, dy, "+-|")
    j = 4 * dz - dy - 2
    while j > 0
      cubLine(0, dx, dy, "| |")
      j = j - 1
    end
    cubLine(0, dx, dy, "| +")
    i = 1
    while i <= dy
      cubLine(0, dx, dy - i, "| /")
      i = _add(i, 1)
    end
    cubLine(0, dx, 0, "+-\n")
  end
  cuboid(2, 3, 4)
  puts("")
  cuboid(1, 1, 1)
  puts("")
  cuboid(6, 2, 1)
end_time = _now()
end_mem = _mem()
result = {"duration_us" => ((end_time - start) / 1000), "memory_bytes" => (end_mem - start_mem), "name" => "main"}
puts(JSON.pretty_generate(result))
