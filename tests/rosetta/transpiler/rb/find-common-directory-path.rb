# Generated by Mochi transpiler v0.10.50 on 2025-07-30 21:05 +0700

def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end

def splitPath(p)
  parts = []
  cur = ""
  i = 0
  while i < p.length
    if p[i..._add(i, 1)] == "/"
      if cur != ""
        parts = parts + [cur]
        cur = ""
      end
    else
      cur = _add(cur, p[i..._add(i, 1)])
    end
    i = _add(i, 1)
  end
  if cur != ""
    parts = parts + [cur]
  end
  return parts
end
def joinPath(parts)
  s = ""
  i = 0
  while i < parts.length
    s = _add(_add(s, "/"), parts[i])
    i = _add(i, 1)
  end
  return s
end
def commonPrefix(paths)
  if paths.length == 0
    return ""
  end
  base = splitPath(paths[0])
  i = 0
  prefix = []
  while i < base.length
    comp = base[i]
    ok = true
    paths.each do |p|
      parts = splitPath(p)
      if i >= parts.length || parts[i] != comp
        ok = false
        break
      end
    end
    if ok
      prefix = prefix + [comp]
    else
      break
    end
    i = _add(i, 1)
  end
  return joinPath(prefix)
end
def main()
  paths = ["/home/user1/tmp/coverage/test", "/home/user1/tmp/covert/operator", "/home/user1/tmp/coven/members", "/home//user1/tmp/coventry", "/home/user1/././tmp/covertly/foo", "/home/bob/../user1/tmp/coved/bar"]
  c = commonPrefix(paths)
  if c == ""
    puts("No common path")
  else
    puts(_add("Common path: ", c))
  end
end
main()
