# Generated by Mochi transpiler v0.10.39 on 2025-07-24 13:03 +0700

def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.rjust(len, ch)
end

def nextRand(seed)
  return (_add(seed * 1664525, 1013904223)) % 2147483647
end
def shuffleChars(s, seed)
  chars = []
  i = 0
  while i < s.length
    chars = chars + [s[i..._add(i, 1)]]
    i = _add(i, 1)
  end
  sd = seed
  idx = chars.length - 1
  while idx > 0
    sd = nextRand(sd)
    j = sd % (_add(idx, 1))
    tmp = chars[idx]
    chars[idx] = chars[j]
    chars[j] = tmp
    idx = idx - 1
  end
  res = ""
  i = 0
  while i < chars.length
    res = _add(res, chars[i])
    i = _add(i, 1)
  end
  return [res, sd]
end
def bestShuffle(s, seed)
  r = shuffleChars(s, seed)
  t = r[0]
  sd = r[1]
  arr = []
  i = 0
  while i < t.length
    arr = arr + [t[i..._add(i, 1)]]
    i = _add(i, 1)
  end
  i = 0
  while i < arr.length
    j = 0
    while j < arr.length
      if i != j && arr[i] != s[j..._add(j, 1)] && arr[j] != s[i..._add(i, 1)]
        tmp = arr[i]
        arr[i] = arr[j]
        arr[j] = tmp
        break
      end
      j = _add(j, 1)
    end
    i = _add(i, 1)
  end
  count = 0
  i = 0
  while i < arr.length
    if arr[i] == s[i..._add(i, 1)]
      count = _add(count, 1)
    end
    i = _add(i, 1)
  end
  out = ""
  i = 0
  while i < arr.length
    out = _add(out, arr[i])
    i = _add(i, 1)
  end
  return [out, sd, count]
end
def main()
  ts = ["abracadabra", "seesaw", "elk", "grrrrrr", "up", "a"]
  seed = 1
  i = 0
  while i < ts.length
    r = bestShuffle(ts[i], seed)
    shuf = r[0]
    seed = r[1]
    cnt = r[2]
    puts(_add(_add(_add(_add(_add(ts[i], " -> "), shuf), " ("), (cnt).to_s), ")"))
    i = _add(i, 1)
  end
end
main()
