# Generated by Mochi transpiler v0.10.50 on 2025-07-30 23:34 +0700

def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end

def getDivisors(n)
  divs = [1, n]
  i = 2
  while i * i <= n
    if n % i == 0
      j = ((n / i)).to_i
      divs = divs + [i]
      if i != j
        divs = divs + [j]
      end
    end
    i = _add(i, 1)
  end
  return divs
end
def sum(xs)
  s = 0
  xs.each do |x|
    s = _add(s, x)
  end
  return s
end
def isPartSum(divs, target)
  possible = []
  i = 0
  while i <= target
    possible = possible + [false]
    i = _add(i, 1)
  end
  possible[0] = true
  divs.each do |v|
    s = target
    while s >= v
      if possible[s - v]
        possible[s] = true
      end
      s = s - 1
    end
  end
  return possible[target]
end
def isZumkeller(n)
  divs = getDivisors(n)
  s = divs.sum
  if s % 2 == 1
    return false
  end
  if n % 2 == 1
    abundance = s - 2 * n
    return abundance > 0 && abundance % 2 == 0
  end
  return isPartSum(divs, s / 2)
end
def pad(n, width)
  s = (n).to_s
  while s.length < width
    s = _add(" ", s)
  end
  return s
end
def main()
  puts("The first 220 Zumkeller numbers are:")
  count = 0
  line = ""
  i = 2
  while count < 220
    if isZumkeller(i)
      line = _add(_add(line, pad(i, 3)), " ")
      count = _add(count, 1)
      if count % 20 == 0
        puts(line[0...line.length - 1])
        line = ""
      end
    end
    i = _add(i, 1)
  end
  puts("\nThe first 40 odd Zumkeller numbers are:")
  count = 0
  line = ""
  i = 3
  while count < 40
    if isZumkeller(i)
      line = _add(_add(line, pad(i, 5)), " ")
      count = _add(count, 1)
      if count % 10 == 0
        puts(line[0...line.length - 1])
        line = ""
      end
    end
    i = _add(i, 2)
  end
  puts("\nThe first 40 odd Zumkeller numbers which don't end in 5 are:")
  count = 0
  line = ""
  i = 3
  while count < 40
    if i % 10 != 5 && isZumkeller(i)
      line = _add(_add(line, pad(i, 7)), " ")
      count = _add(count, 1)
      if count % 8 == 0
        puts(line[0...line.length - 1])
        line = ""
      end
    end
    i = _add(i, 2)
  end
end
main()
