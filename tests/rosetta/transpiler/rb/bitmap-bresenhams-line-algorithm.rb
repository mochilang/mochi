# Generated by Mochi transpiler v0.10.40 on 2025-07-25 20:48 +0700

def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.rjust(len, ch)
end

def absi(x)
  if x < 0
    return -x
  end
  return x
end
Point = Struct.new(:x, :y, keyword_init: true)
def bresenham(x0, y0, x1, y1)
  dx = absi(x1 - x0)
  dy = absi(y1 - y0)
  sx = -1
  if x0 < x1
    sx = 1
  end
  sy = -1
  if y0 < y1
    sy = 1
  end
  err = dx - dy
  pts = []
  while true
    pts = pts + [Point.new(x: x0, y: y0)]
    if x0 == x1 && y0 == y1
      break
    end
    e2 = 2 * err
    if e2 > (-dy)
      err = err - dy
      x0 = _add(x0, sx)
    end
    if e2 < dx
      err = _add(err, dx)
      y0 = _add(y0, sy)
    end
  end
  return pts
end
def main()
  pts = bresenham(0, 0, 6, 4)
  i = 0
  while i < pts.length
    p = pts[i]
    puts(_add(_add(_add(_add("(", (p.x).to_s), ","), (p.y).to_s), ")"))
    i = _add(i, 1)
  end
end
main()
