# Generated by Mochi transpiler v0.10.42 on 2025-07-27 22:44 +0700
require 'json'

$now_seed = 0
$now_seeded = false
s = ENV['MOCHI_NOW_SEED']
if s && s != ''
  begin
    $now_seed = Integer(s)
    $now_seeded = true
  rescue StandardError
  end
end
def _now()
  if $now_seeded
    $now_seed = ($now_seed * 1664525 + 1013904223) % 2147483647
    $now_seed
  else
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)
  end
end


require 'objspace'
def _mem()
  ObjectSpace.memsize_of_all
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end

start_mem = _mem()
start = _now()
  def abs(x)
    if x < 0.0
      return -x
    end
    return x
  end
  def area(x1, y1, x2, y2, x3, y3)
    return abs((_add(_add(x1 * (y2 - y3), x2 * (y3 - y1)), x3 * (y1 - y2))) / 2.0)
  end
  def pointInTriangle(x1, y1, x2, y2, x3, y3, x, y)
    _A = area(x1, y1, x2, y2, x3, y3)
    _A1 = area(x, y, x2, y2, x3, y3)
    _A2 = area(x1, y1, x, y, x3, y3)
    _A3 = area(x1, y1, x2, y2, x, y)
    diff = ((abs((_add(_add(A1, A2), A3)) - A)).to_f)
    if diff < 0.0001
      return true
    end
    return false
  end
  def main()
    tri1 = [[3.0 / 2, 12.0 / 5], [51.0 / 10, -31.0 / 10], [-19.0 / 5, 1.2]]
    puts(_add("Triangle is ", (tri1).to_s))
    [[0.0, 0.0], [0.0, 1.0], [3.0, 1.0]].each do |pt|
      ok = pointInTriangle(tri1[0][0], tri1[0][1], tri1[1][0], tri1[1][1], tri1[2][0], tri1[2][1], pt[0], pt[1])
      puts(_add(_add(_add("Point ", (pt).to_s), " is within triangle? "), (ok).to_s))
    end
    puts("")
    tri2 = [[1.0 / 10, 1.0 / 9], [100.0 / 8, 100.0 / 3], [100.0 / 4, 100.0 / 9]]
    puts(_add("Triangle is ", (tri2).to_s))
    x = _add(tri2[0][0], (3.0 / 7) * (tri2[1][0] - tri2[0][0]))
    y = _add(tri2[0][1], (3.0 / 7) * (tri2[1][1] - tri2[0][1]))
    pt = [x, y]
    ok = pointInTriangle(tri2[0][0], tri2[0][1], tri2[1][0], tri2[1][1], tri2[2][0], tri2[2][1], x, y)
    puts(_add(_add(_add("Point ", (pt).to_s), " is within triangle ? "), (ok).to_s))
    puts("")
    tri2 = [[1.0 / 10, 1.0 / 9], [100.0 / 8, 100.0 / 3], [-100.0 / 8, 100.0 / 6]]
    puts(_add("Triangle is ", (tri2).to_s))
    ok = pointInTriangle(tri2[0][0], tri2[0][1], tri2[1][0], tri2[1][1], tri2[2][0], tri2[2][1], x, y)
    puts(_add(_add(_add("Point ", (pt).to_s), " is within triangle ? "), (ok).to_s))
  end
  main()
end_time = _now()
end_mem = _mem()
result = {"duration_us" => ((end_time - start) / 1000), "memory_bytes" => (end_mem - start_mem), "name" => "main"}
puts(JSON.pretty_generate(result))
