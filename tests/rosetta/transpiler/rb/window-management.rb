# Generated by Mochi transpiler v0.10.50 on 2025-07-30 23:34 +0700

def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end

def showState(w, label)
  puts(_add(_add(_add(_add(_add(_add(_add(_add(_add(_add(_add(_add(_add(_add(label, ": pos=("), (w.x).to_s), ","), (w.y).to_s), ") size=("), (w.w).to_s), "x"), (w.h).to_s), ") max="), (w.maximized).to_s), " icon="), (w.iconified).to_s), " visible="), (w.visible).to_s))
end
def maximize(w)
  w["maximized"] = true
  w["w"] = 800
  w["h"] = 600
  return w
end
def unmaximize(w)
  w["maximized"] = false
  w["w"] = 640
  w["h"] = 480
  return w
end
def iconify(w)
  w["iconified"] = true
  w["visible"] = false
  return w
end
def deiconify(w)
  w["iconified"] = false
  w["visible"] = true
  return w
end
def hide(w)
  w["visible"] = false
  return w
end
def showWindow(w)
  w["visible"] = true
  return w
end
def move(w)
  if w.shifted
    w["x"] = w.x - 10
    w["y"] = w.y - 10
  else
    w["x"] = _add(w.x, 10)
    w["y"] = _add(w.y, 10)
  end
  w["shifted"] = !w.shifted
  return w
end
def main()
  win = Window.new(x: 100, y: 100, w: 640, h: 480, maximized: false, iconified: false, visible: true, shifted: false)
  showState(win, "Start")
  win = maximize(win)
  showState(win, "Maximize")
  win = unmaximize(win)
  showState(win, "Unmaximize")
  win = iconify(win)
  showState(win, "Iconify")
  win = deiconify(win)
  showState(win, "Deiconify")
  win = hide(win)
  showState(win, "Hide")
  win = showWindow(win)
  showState(win, "Show")
  win = move(win)
  showState(win, "Move")
end
Window = Struct.new(:x, :y, :w, :h, :maximized, :iconified, :visible, :shifted, keyword_init: true)
main()
