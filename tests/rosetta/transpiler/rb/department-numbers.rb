# Generated by Mochi transpiler v0.10.41 on 2025-07-26 23:50 +0700
require 'json'

$now_seed = 0
$now_seeded = false
s = ENV['MOCHI_NOW_SEED']
if s && s != ''
  begin
    $now_seed = Integer(s)
    $now_seeded = true
  rescue StandardError
  end
end
def _now()
  if $now_seeded
    $now_seed = ($now_seed * 1664525 + 1013904223) % 2147483647
    $now_seed
  else
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)
  end
end


require 'objspace'
def _mem()
  ObjectSpace.memsize_of_all
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end

start_mem = _mem()
start = _now()
  puts("Police  Sanitation  Fire")
  puts("------  ----------  ----")
  $count = 0
  $i = 2
  while $i < 7
    $j = 1
    while $j < 8
      if $j != $i
        $k = 1
        while $k < 8
          if $k != $i && $k != $j
            if _add(_add($i, $j), $k) == 12
              puts(_add(_add(_add(_add(_add("  ", ($i).to_s), "         "), ($j).to_s), "         "), ($k).to_s))
              $count = _add($count, 1)
            end
          end
          $k = _add($k, 1)
        end
      end
      $j = _add($j, 1)
    end
    $i = _add($i, 2)
  end
  puts("")
  puts(_add(($count).to_s, " valid combinations"))
end_time = _now()
end_mem = _mem()
result = {"duration_us" => ((end_time - start) / 1000), "memory_bytes" => (end_mem - start_mem), "name" => "main"}
puts(JSON.pretty_generate(result))
