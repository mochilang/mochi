# Generated by Mochi transpiler v0.10.39 on 2025-07-24 20:52 +0700

def _input()
  line = STDIN.gets
  line ? line.chomp : ''
end


def _indexOf(s, ch)
  idx = s.index(ch)
  idx ? idx : -1
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.rjust(len, ch)
end

def indexOf(s, ch)
  i = 0
  while i < s.length
    if s[i..._add(i, 1)] == ch
      return i
    end
    i = _add(i, 1)
  end
  return -1
end
def fields(s)
  words = []
  cur = ""
  i = 0
  while i < s.length
    ch = s[i..._add(i, 1)]
    if ch == " " || ch == "\t" || ch == "\n"
      if cur.length > 0
        words = words + [cur]
        cur = ""
      end
    else
      cur = _add(cur, ch)
    end
    i = _add(i, 1)
  end
  if cur.length > 0
    words = words + [cur]
  end
  return words
end
def makePatterns()
  digits = ["1", "2", "3", "4", "5", "6", "7", "8", "9"]
  pats = []
  i = 0
  while i < digits.length
    j = 0
    while j < digits.length
      if j != i
        k = 0
        while k < digits.length
          if k != i && k != j
            l = 0
            while l < digits.length
              if l != i && l != j && l != k
                pats = pats + [_add(_add(_add(digits[i], digits[j]), digits[k]), digits[l])]
              end
              l = _add(l, 1)
            end
          end
          k = _add(k, 1)
        end
      end
      j = _add(j, 1)
    end
    i = _add(i, 1)
  end
  return pats
end
def main()
  puts(_add(_add(_add(_add(_add("Cows and bulls/player\n", "You think of four digit number of unique digits in the range 1 to 9.\n"), "I guess.  You score my guess:\n"), "    A correct digit but not in the correct place is a cow.\n"), "    A correct digit in the correct place is a bull.\n"), "You give my score as two numbers separated with a space."))
  patterns = makePatterns()
  while true
    if patterns.length == 0
      puts("Oops, check scoring.")
      return
    end
    guess = patterns[0]
    patterns = patterns[1...]
    cows = 0
    bulls = 0
    while true
      puts(_add(_add("My guess: ", guess), ".  Score? (c b) "))
      line = _input()
      toks = fields(line)
      if toks.length == 2
        c = (toks[0]).to_i
        b = (toks[1]).to_i
        if c >= 0 && c <= 4 && b >= 0 && b <= 4 && _add(c, b) <= 4
          cows = c
          bulls = b
          break
        end
      end
      puts("Score guess as two numbers: cows bulls")
    end
    if bulls == 4
      puts("I did it. :)")
      return
    end
    next_ = []
    idx = 0
    while idx < patterns.length
      pat = patterns[idx]
      c = 0
      b = 0
      i = 0
      while i < 4
        cg = guess[i..._add(i, 1)]
        cp = pat[i..._add(i, 1)]
        if cg == cp
          b = _add(b, 1)
        else
          if _indexOf(pat, cg) >= 0
            c = _add(c, 1)
          end
        end
        i = _add(i, 1)
      end
      if c == cows && b == bulls
        next_ = next_ + [pat]
      end
      idx = _add(idx, 1)
    end
    patterns = next_
  end
end
main()
