# Generated by Mochi transpiler v0.10.50 on 2025-07-30 21:05 +0700

def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end

def commatize(n)
  s = (n).to_s
  i = s.length % 3
  if i == 0
    i = 3
  end
  out = s[0...i]
  while i < s.length
    out = _add(_add(out, ","), s[i..._add(i, 3)])
    i = _add(i, 3)
  end
  return out
end
def p(l, n)
  _Ls = (l).to_s
  digits = 1
  d = 1
  while d <= 18 - _Ls.length
    digits = digits * 10
    d = _add(d, 1)
  end
  ten18 = 1000000000000000000
  count = 0
  i = 0
  probe = 1
  while true
    probe = probe * 2
    i = _add(i, 1)
    if probe >= ten18
      while true
        if probe >= ten18
          probe = probe / 10
        end
        if probe / digits == l
          count = _add(count, 1)
          if count >= n
            count = count - 1
            break
          end
        end
        probe = probe * 2
        i = _add(i, 1)
      end
    end
    ps = (probe).to_s
    le = _Ls.length
    if le > ps.length
      le = ps.length
    end
    if ps[0...le] == _Ls
      count = _add(count, 1)
      if count >= n
        break
      end
    end
  end
  return i
end
$params = [[12, 1], [12, 2], [123, 45]]
$idx = 0
while $idx < $params.length
  l = $params[$idx][0]
  m = $params[$idx][1]
  puts(_add(_add(_add(_add(_add("p(", (l).to_s), ", "), (m).to_s), ") = "), commatize(p(l, m))))
  $idx = _add($idx, 1)
end
