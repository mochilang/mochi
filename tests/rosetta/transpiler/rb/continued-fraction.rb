# Generated by Mochi transpiler v0.10.42 on 2025-07-28 07:49 +0700

def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end

def newTerm(a, b)
  return {"a" => a, "b" => b}
end
def cfSqrt2(nTerms)
  f = []
  n = 0
  while n < nTerms
    f = f + [newTerm(2, 1)]
    n = _add(n, 1)
  end
  if nTerms > 0
    f[0]["a"] = 1
  end
  return f
end
def cfNap(nTerms)
  f = []
  n = 0
  while n < nTerms
    f = f + [newTerm(n, n - 1)]
    n = _add(n, 1)
  end
  if nTerms > 0
    f[0]["a"] = 2
  end
  if nTerms > 1
    f[1]["b"] = 1
  end
  return f
end
def cfPi(nTerms)
  f = []
  n = 0
  while n < nTerms
    g = 2 * n - 1
    f = f + [newTerm(6, g * g)]
    n = _add(n, 1)
  end
  if nTerms > 0
    f[0]["a"] = 3
  end
  return f
end
def real(f)
  r = 0.0
  i = f.length - 1
  while i > 0
    r = ((f[i]["b"]).to_f) / (_add(((f[i]["a"]).to_f), r))
    i = i - 1
  end
  if f.length > 0
    r = _add(r, ((f[0]["a"]).to_f))
  end
  return r
end
def main()
  puts(_add("sqrt2: ", (real(cfSqrt2(20))).to_s))
  puts(_add("nap:   ", (real(cfNap(20))).to_s))
  puts(_add("pi:    ", (real(cfPi(20))).to_s))
end
main()
