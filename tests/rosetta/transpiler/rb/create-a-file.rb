# Generated by Mochi transpiler v0.10.50 on 2025-07-31 01:02 +0700
require 'json'

$now_seed = 0
$now_seeded = false
s = ENV['MOCHI_NOW_SEED']
if s && s != ''
  begin
    $now_seed = Integer(s)
    $now_seeded = true
  rescue StandardError
  end
end
def _now()
  if $now_seeded
    $now_seed = ($now_seed * 1664525 + 1013904223) % 2147483647
    $now_seed
  else
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)
  end
end


require 'objspace'
def _mem()
  ObjectSpace.memsize_of_all
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end

start_mem = _mem()
start = _now()
  def createFile(fs, fn)
    if fs.key?(fn)
      puts(_add(_add("open ", fn), ": file exists"))
    else
      fs[fn] = false
      puts(_add(_add("file ", fn), " created!"))
    end
  end
  def createDir(fs, dn)
    if fs.key?(dn)
      puts(_add(_add("mkdir ", dn), ": file exists"))
    else
      fs[dn] = true
      puts(_add(_add("directory ", dn), " created!"))
    end
  end
  def main()
    fs = {}
    fs["docs"] = true
    createFile(fs, "input.txt")
    createFile(fs, "/input.txt")
    createDir(fs, "docs")
    createDir(fs, "/docs")
  end
  main()
end_time = _now()
end_mem = _mem()
result = {"duration_us" => ((end_time - start) / 1000), "memory_bytes" => (end_mem - start_mem), "name" => "main"}
puts(JSON.pretty_generate(result))
