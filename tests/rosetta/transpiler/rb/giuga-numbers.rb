# Generated by Mochi transpiler v0.10.50 on 2025-07-30 23:34 +0700

def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end

def primeFactors(n)
  factors = []
  last = 0
  x = n
  while x % 2 == 0
    if last == 2
      return []
    end
    factors = factors + [2]
    last = 2
    x = x / 2
  end
  p = 3
  while p * p <= x
    while x % p == 0
      if last == p
        return []
      end
      factors = factors + [p]
      last = p
      x = x / p
    end
    p = _add(p, 2)
  end
  if x > 1
    if last == x
      return []
    end
    factors = factors + [x]
  end
  return factors
end
def isGiuga(n)
  facs = primeFactors(n)
  if facs.length <= 2
    return false
  end
  facs.each do |f|
    if ((n / f - 1) % f) != 0
      return false
    end
  end
  return true
end
def main()
  known = [30, 858, 1722, 66198]
  nums = []
  known.each do |n|
    if isGiuga(n)
      nums = nums + [n]
    end
  end
  puts("The first 4 Giuga numbers are:")
  puts(((x = nums); x.is_a?(Array) ? ("[" + x.map{ |x| if x.is_a?(String) then '\'' + x + '\'' elsif x.respond_to?(:to_h) then '{' + x.to_h.map{ |k,v| "'#{k}': #{v.is_a?(String) ? '\'' + v + '\'' : v.to_s}" }.join(', ') + '}' else x.to_s end }.join(', ') + "]") : x.to_s))
end
main()
