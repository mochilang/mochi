# Generated by Mochi transpiler v0.10.56 on 2025-08-03 17:02 +0700
require 'json'

$now_seed = 0
$now_seeded = false
s = ENV['MOCHI_NOW_SEED']
if (!s || s == '') && ENV['MOCHI_BENCHMARK']
  s = '1'
end
if s && s != ''
  begin
    $now_seed = Integer(s)
    $now_seeded = true
  rescue StandardError
  end
end
def _now()
  if $now_seeded
    $now_seed += 1_000_000
    $now_seed
  else
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)
  end
end


require 'objspace'
def _mem()
  ObjectSpace.memsize_of_all
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end


class String
  alias each each_char
end

start_mem = _mem()
start = _now()
  def weekday(y, m, d)
    yy = y
    mm = m
    if mm < 3
      mm = _add(mm, 12)
      yy = yy - 1
    end
    k = yy % 100
    j = ((yy / 100)).to_i
    a = (((13 * (_add(mm, 1))) / 5)).to_i
    b = ((k / 4)).to_i
    c = ((j / 4)).to_i
    return (_add(_add(_add(_add(_add(d, a), k), b), c), 5 * j)) % 7
  end
  (2008...2122).each do |year|
    if weekday(year, 12, 25) == 1
      puts(_add(_add("25 December ", (year).to_s), " is Sunday"))
    end
  end
end_time = _now()
end_mem = _mem()
result = {"duration_us" => ((end_time - start) / 1000), "memory_bytes" => (end_mem - start_mem), "name" => "main"}
puts(JSON.pretty_generate(result))
