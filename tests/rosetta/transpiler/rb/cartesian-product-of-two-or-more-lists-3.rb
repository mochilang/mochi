# Generated by Mochi transpiler v0.10.39 on 2025-07-24 20:52 +0700

def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.rjust(len, ch)
end

def listStr(xs)
  s = "["
  i = 0
  while i < xs.length
    s = _add(s, (xs[i]).to_s)
    if i < xs.length - 1
      s = _add(s, " ")
    end
    i = _add(i, 1)
  end
  s = _add(s, "]")
  return s
end
def llStr(lst)
  s = "["
  i = 0
  while i < lst.length
    s = _add(s, listStr(lst[i]))
    if i < lst.length - 1
      s = _add(s, " ")
    end
    i = _add(i, 1)
  end
  s = _add(s, "]")
  return s
end
def concat(a, b)
  out = []
  a.each do |v|
    out = out + [v]
  end
  b.each do |v|
    out = out + [v]
  end
  return out
end
def cartN(lists)
  if lists == nil
    return []
  end
  a = lists
  if a.length == 0
    return [[]]
  end
  out = []
  rest = cartN(a[1...a.length])
  a[0].each do |x|
    rest.each do |p|
      out = out + [concat([x], p)]
    end
  end
  return out
end
def main()
  puts(llStr(cartN([[1, 2], [3, 4]])))
  puts(llStr(cartN([[3, 4], [1, 2]])))
  puts(llStr(cartN([[1, 2], []])))
  puts(llStr(cartN([[], [1, 2]])))
  puts("")
  puts("[")
  cartN([[1776, 1789], [7, 12], [4, 14, 23], [0, 1]]).each do |p|
    puts(_add(" ", listStr(p)))
  end
  puts("]")
  puts(llStr(cartN([[1, 2, 3], [30], [500, 100]])))
  puts(llStr(cartN([[1, 2, 3], [], [500, 100]])))
  puts("")
  puts(llStr(cartN(nil)))
  puts(llStr(cartN([])))
end
main()
