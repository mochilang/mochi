# Generated by Mochi transpiler v0.10.50 on 2025-07-30 21:05 +0700

def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end

def isPrime(n)
  if n < 2
    return false
  end
  i = 2
  while i * i <= n
    if n % i == 0
      return false
    end
    i = _add(i, 1)
  end
  return true
end
def search(base, prefix, depth, limit, best)
  b = best
  d = 1
  while d < base
    val = _add(prefix * base, d)
    if isPrime(val)
      if val > b
        b = val
      end
      if _add(depth, 1) < limit
        b = search(base, val, _add(depth, 1), limit, b)
      end
    end
    d = _add(d, 1)
  end
  return b
end
def largest(base)
  return search(base, 0, 0, 6, 0)
end
def main()
  b = 3
  while b <= 17
    puts(_add(_add((b).to_s, ": "), (largest(b)).to_s))
    b = _add(b, 1)
  end
end
main()
