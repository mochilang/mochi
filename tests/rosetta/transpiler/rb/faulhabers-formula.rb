# Generated by Mochi transpiler v0.10.50 on 2025-07-30 21:05 +0700

def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end

def bernoulli(n)
  a = []
  m = 0
  while m <= n
    a = a + [(1).to_r / (((_add(m, 1))).to_r)]
    j = m
    while j >= 1
      a[j - 1] = ((j).to_r) * (a[j - 1] - a[j])
      j = j - 1
    end
    m = _add(m, 1)
  end
  return a[0]
end
def binom(n, k)
  if k < 0 || k > n
    return (0)
  end
  kk = k
  if kk > n - kk
    kk = n - kk
  end
  res = 1
  i = 0
  while i < kk
    res = res * (((n - i)))
    i = _add(i, 1)
    res = res / ((i))
  end
  return res
end
def coeff(p, j)
  base = (1).to_r / (((_add(p, 1))).to_r)
  c = base
  if j % 2 == 1
    c = -c
  end
  c = c * ((binom(_add(p, 1), j)).to_r)
  c = c * bernoulli(j)
  return c
end
def main()
  p = 0
  while p < 10
    line = _add((p).to_s, " :")
    j = 0
    while j <= p
      c = coeff(p, j)
      if (c).to_s != "0/1"
        line = _add(_add(_add(line, " "), (c).to_s), "Ã—n")
        exp = _add(p, 1) - j
        if exp > 1
          line = _add(_add(line, "^"), (exp).to_s)
        end
      end
      j = _add(j, 1)
    end
    puts(line)
    p = _add(p, 1)
  end
end
main()
