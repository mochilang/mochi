# Generated by Mochi transpiler v0.10.50 on 2025-07-31 07:51 +0700
require 'json'

$now_seed = 0
$now_seeded = false
s = ENV['MOCHI_NOW_SEED']
if s && s != ''
  begin
    $now_seed = Integer(s)
    $now_seeded = true
  rescue StandardError
  end
end
def _now()
  if $now_seeded
    $now_seed = ($now_seed * 1664525 + 1013904223) % 2147483647
    $now_seed
  else
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)
  end
end


require 'objspace'
def _mem()
  ObjectSpace.memsize_of_all
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end

start_mem = _mem()
start = _now()
  def cart2(a, b)
    p = []
    a.each do |x|
      b.each do |y|
        p = p + [[x, y]]
      end
    end
    return p
  end
  def llStr(lst)
    s = "["
    i = 0
    while i < lst.length
      row = lst[i]
      s = _add(s, "[")
      j = 0
      while j < row.length
        s = _add(s, (row[j]).to_s)
        if j < row.length - 1
          s = _add(s, " ")
        end
        j = _add(j, 1)
      end
      s = _add(s, "]")
      if i < lst.length - 1
        s = _add(s, " ")
      end
      i = _add(i, 1)
    end
    s = _add(s, "]")
    return s
  end
  def main()
    puts(llStr(cart2([1, 2], [3, 4])))
    puts(llStr(cart2([3, 4], [1, 2])))
    puts(llStr(cart2([1, 2], [])))
    puts(llStr(cart2([], [1, 2])))
  end
  main()
end_time = _now()
end_mem = _mem()
result = {"duration_us" => ((end_time - start) / 1000), "memory_bytes" => (end_mem - start_mem), "name" => "main"}
puts(JSON.pretty_generate(result))
