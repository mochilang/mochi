# Generated by Mochi transpiler v0.10.50 on 2025-07-30 21:05 +0700

def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end

def weekday(y, m, d)
  yy = y
  mm = m
  if mm < 3
    mm = _add(mm, 12)
    yy = yy - 1
  end
  k = yy % 100
  j = ((yy / 100)).to_i
  a = (((13 * (_add(mm, 1))) / 5)).to_i
  b = ((k / 4)).to_i
  c = ((j / 4)).to_i
  return (_add(_add(_add(_add(_add(d, a), k), b), c), 5 * j)) % 7
end
def main()
  months31 = [1, 3, 5, 7, 8, 10, 12]
  names = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
  count = 0
  firstY = 0
  firstM = 0
  lastY = 0
  lastM = 0
  haveNone = []
  puts("Months with five weekends:")
  (1900...2101).each do |year|
    hasOne = false
    months31.each do |m|
      if weekday(year, m, 1) == 6
        puts(_add(_add(_add("  ", (year).to_s), " "), names[m - 1]))
        count = _add(count, 1)
        hasOne = true
        lastY = year
        lastM = m
        if firstY == 0
          firstY = year
          firstM = m
        end
      end
    end
    if !hasOne
      haveNone = haveNone + [year]
    end
  end
  puts(_add((count).to_s, " total"))
  puts("")
  puts("First five dates of weekends:")
  (0...5).each do |i|
    day = _add(1, 7 * i)
    puts(_add(_add(_add(_add(_add("  Friday, ", names[firstM - 1]), " "), (day).to_s), ", "), (firstY).to_s))
  end
  puts("Last five dates of weekends:")
  (0...5).each do |i|
    day = _add(1, 7 * i)
    puts(_add(_add(_add(_add(_add("  Friday, ", names[lastM - 1]), " "), (day).to_s), ", "), (lastY).to_s))
  end
  puts("")
  puts("Years with no months with five weekends:")
  haveNone.each do |y|
    puts(_add("  ", (y).to_s))
  end
  puts(_add((haveNone.length).to_s, " total"))
end
main()
