# Generated by Mochi transpiler v0.10.37 on 2025-07-23 13:02 +0700
def pow_big(base, exp)
  result = 1
  b = base
  e = exp
  while e > 0
    if e % 2 == 1
      result = result * b
    end
    b = b * b
    e = (e / 2)
  end
  return result
end
def bit_len(x)
  n = x
  c = 0
  while n > 0
    n = n / 2
    c = c + 1
  end
  return c
end
$err = ""
def ackermann2(m, n)
  if $err != ""
    return 0
  end
  if m <= 3
    mi = (m).to_i
    if mi == 0
      return n + 1
    end
    if mi == 1
      return n + 2
    end
    if mi == 2
      return 2 * n + 3
    end
    if mi == 3
      nb = bit_len(n)
      if nb > 64
        $err = "A(m,n) had n of " + (nb).to_s + " bits; too large"
        return 0
      end
      r = pow_big(2, (n).to_i)
      return 8 * r - 3
    end
  end
  if bit_len(n) == 0
    return ackermann2(m - (1), 1)
  end
  return ackermann2(m - (1), ackermann2(m, n - (1)))
end
def show(m, n)
  $err = ""
  res = ackermann2(m, n)
  if $err != ""
    puts("A(" + (m).to_s + ", " + (n).to_s + ") = Error: " + $err)
    return
  end
  if bit_len(res) <= 256
    puts("A(" + (m).to_s + ", " + (n).to_s + ") = " + (res).to_s)
  else
    s = (res).to_s
    pre = s[0...20]
    suf = s[s.length - 20...s.length]
    puts("A(" + (m).to_s + ", " + (n).to_s + ") = " + (s.length).to_s + " digits starting/ending with: " + pre + "..." + suf)
  end
end
def main()
  show(0, 0)
  show(1, 2)
  show(2, 4)
  show(3, 100)
  show(3, 1000000)
  show(4, 1)
  show(4, 2)
  show(4, 3)
end
main()
