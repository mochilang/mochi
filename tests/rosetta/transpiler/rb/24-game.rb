# Generated by Mochi transpiler v0.10.37 on 2025-07-23 09:33 +0700

$now_seed = 0
$now_seeded = false
s = ENV['MOCHI_NOW_SEED']
if s && s != ''
  begin
    $now_seed = Integer(s)
    $now_seeded = true
  rescue StandardError
  end
end
def _now()
  if $now_seeded
    $now_seed = ($now_seed * 1664525 + 1013904223) % 2147483647
    $now_seed
  else
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)
  end
end


def _input()
  line = STDIN.gets
  line ? line.chomp : ''
end

def randDigit()
  return (_now() % 9) + 1
end
def main()
  digits = []
  (0...4).each do |i|
    digits = digits + [randDigit()]
  end
  numstr = ""
  (0...4).each do |i|
    numstr = numstr + (digits[i]).to_s
  end
  puts("Your numbers: " + numstr + "\n")
  puts("Enter RPN: ")
  expr = _input()
  if expr.length != 7
    puts("invalid. expression length must be 7. (4 numbers, 3 operators, no spaces)")
    return
  end
  stack = []
  i = 0
  valid = true
  while i < expr.length
    ch = expr[i...i + 1]
    if ch >= "0" && ch <= "9"
      if digits.length == 0
        puts("too many numbers.")
        return
      end
      j = 0
      while digits[j] != (ch).to_i - ("0").to_i
        j = j + 1
        if j == digits.length
          puts("wrong numbers.")
          return
        end
      end
      digits = digits[...j] + digits[j + 1...]
      stack = stack + [float.call((ch).to_i - ("0").to_i)]
    else
      if stack.length < 2
        puts("invalid expression syntax.")
        valid = false
        break
      end
      b = stack[stack.length - 1]
      a = stack[stack.length - 2]
      if ch == "+"
        stack[stack.length - 2] = a + b
      else
        if ch == "-"
          stack[stack.length - 2] = a - b
        else
          if ch == "*"
            stack[stack.length - 2] = a * b
          else
            if ch == "/"
              stack[stack.length - 2] = a / b
            else
              puts(ch + " invalid.")
              valid = false
              break
            end
          end
        end
      end
      stack = stack[...stack.length - 1]
    end
    i = i + 1
  end
  if valid
    if abs.call(stack[0] - 24.0) > 1e-06
      puts("incorrect. " + (stack[0]).to_s + " != 24")
    else
      puts("correct.")
    end
  end
end
main()
