# Generated by Mochi transpiler v0.10.50 on 2025-07-31 00:15 +0700
require 'json'

$now_seed = 0
$now_seeded = false
s = ENV['MOCHI_NOW_SEED']
if s && s != ''
  begin
    $now_seed = Integer(s)
    $now_seeded = true
  rescue StandardError
  end
end
def _now()
  if $now_seeded
    $now_seed = ($now_seed * 1664525 + 1013904223) % 2147483647
    $now_seed
  else
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)
  end
end


def _input()
  line = STDIN.gets
  line ? line.chomp : ''
end


require 'objspace'
def _mem()
  ObjectSpace.memsize_of_all
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end

start_mem = _mem()
start = _now()
  def bottles(n)
    if n == 0
      return "No more bottles"
    end
    if n == 1
      return "1 bottle"
    end
    return _add((n).to_s, " bottles")
  end
  def sing99()
    i = 99
    while i > 0
      puts(_add(bottles(i), " of beer on the wall"))
      puts(_add(bottles(i), " of beer"))
      puts("Take one down, pass it around")
      puts(_add(bottles(i - 1), " of beer on the wall"))
      i = i - 1
    end
  end
  def run(code)
    acc = 0
    i = 0
    while i < code.length
      ch = code[i..._add(i, 1)]
      if ch == "H"
        puts("Hello, World!")
      else
        if ch == "Q"
          puts(code)
        else
          if ch == "9"
            sing99()
          else
            if ch == "+"
              acc = _add(acc, 1)
            end
          end
        end
      end
      i = _add(i, 1)
    end
  end
  def main()
    code = _input()
    run(code)
  end
  main()
end_time = _now()
end_mem = _mem()
result = {"duration_us" => ((end_time - start) / 1000), "memory_bytes" => (end_mem - start_mem), "name" => "main"}
puts(JSON.pretty_generate(result))
