# Generated by Mochi transpiler v0.10.50 on 2025-07-30 23:34 +0700

def _split(s, sep)
  s.to_s.split(sep.to_s)
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end

def say(n)
  if n < 20
    return $small[n]
  end
  if n < 100
    res = $tens[n / 10]
    m = n % 10
    if m != 0
      res = _add(_add(res, "-"), $small[m])
    end
    return res
  end
  if n < 1000
    res = _add(say(n / 100), " hundred")
    m = n % 100
    if m != 0
      res = _add(_add(res, " "), say(m))
    end
    return res
  end
  if n < 1000000
    res = _add(say(n / 1000), " thousand")
    m = n % 1000
    if m != 0
      res = _add(_add(res, " "), say(m))
    end
    return res
  end
  res = _add(say(n / 1000000), " million")
  m = n % 1000000
  if m != 0
    res = _add(_add(res, " "), say(m))
  end
  return res
end
def sayOrdinal(n)
  if n < 20
    return $smallOrd[n]
  end
  if n < 100
    if n % 10 == 0
      return $tensOrd[n / 10]
    end
    return _add(_add(say(n - n % 10), "-"), $smallOrd[n % 10])
  end
  if n < 1000
    if n % 100 == 0
      return _add(say(n / 100), " hundredth")
    end
    return _add(_add(say(n / 100), " hundred "), sayOrdinal(n % 100))
  end
  if n < 1000000
    if n % 1000 == 0
      return _add(say(n / 1000), " thousandth")
    end
    return _add(_add(say(n / 1000), " thousand "), sayOrdinal(n % 1000))
  end
  if n % 1000000 == 0
    return _add(say(n / 1000000), " millionth")
  end
  return _add(_add(say(n / 1000000), " million "), sayOrdinal(n % 1000000))
end
def split(s, sep)
  parts = []
  cur = ""
  i = 0
  while i < s.length
    if sep.length > 0 && _add(i, sep.length) <= s.length && s[i..._add(i, sep.length)] == sep
      parts = parts + [cur]
      cur = ""
      i = _add(i, sep.length)
    else
      cur = _add(cur, s[i..._add(i, 1)])
      i = _add(i, 1)
    end
  end
  parts = parts + [cur]
  return parts
end
def countLetters(s)
  cnt = 0
  i = 0
  while i < s.length
    ch = s[i..._add(i, 1)]
    if ch >= "A" && ch <= "Z" || ch >= "a" && ch <= "z"
      cnt = _add(cnt, 1)
    end
    i = _add(i, 1)
  end
  return cnt
end
def wordLen(w)
  while $words.length < w
    $idx = _add($idx, 1)
    n = countLetters($words[$idx])
    parts = _split(say(n), " ")
    j = 0
    while j < parts.length
      $words = $words + [parts[j]]
      j = _add(j, 1)
    end
    $words = $words + ["in"]
    $words = $words + ["the"]
    parts = _split(_add(sayOrdinal(_add($idx, 1)), ","), " ")
    j = 0
    while j < parts.length
      $words = $words + [parts[j]]
      j = _add(j, 1)
    end
  end
  word = $words[w - 1]
  return [word, countLetters(word)]
end
def totalLength()
  tot = 0
  i = 0
  while i < $words.length
    tot = _add(tot, $words[i].length)
    if i < $words.length - 1
      tot = _add(tot, 1)
    end
    i = _add(i, 1)
  end
  return tot
end
def pad(n, width)
  s = (n).to_s
  while s.length < width
    s = _add(" ", s)
  end
  return s
end
def main()
  puts("The lengths of the first 201 words are:")
  line = ""
  i = 1
  while i <= 201
    if i % 25 == 1
      if i != 1
        puts(line)
      end
      line = _add(pad(i, 3), ":")
    end
    r = wordLen(i)
    n = r[1]
    line = _add(_add(line, " "), pad(n, 2))
    i = _add(i, 1)
  end
  puts(line)
  puts(_add("Length of sentence so far: ", (totalLength()).to_s))
  [1000, 10000, 100000, 1000000, 10000000].each do |n|
    r = wordLen(n)
    w = r[0]
    l = r[1]
    puts(_add(_add(_add(_add(_add(_add(_add("Word ", pad(n, 8)), " is \""), w), "\", with "), (l).to_s), " letters.  Length of sentence so far: "), (totalLength()).to_s))
  end
end
$small = ["zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"]
$tens = ["", "", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety"]
$smallOrd = ["zeroth", "first", "second", "third", "fourth", "fifth", "sixth", "seventh", "eighth", "ninth", "tenth", "eleventh", "twelfth", "thirteenth", "fourteenth", "fifteenth", "sixteenth", "seventeenth", "eighteenth", "nineteenth"]
$tensOrd = ["", "", "twentieth", "thirtieth", "fortieth", "fiftieth", "sixtieth", "seventieth", "eightieth", "ninetieth"]
$words = ["Four", "is", "the", "number", "of", "letters", "in", "the", "first", "word", "of", "this", "sentence,"]
$idx = 0
main()
