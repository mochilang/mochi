# Generated by Mochi transpiler v0.10.56 on 2025-08-03 17:02 +0700
require 'json'

$now_seed = 0
$now_seeded = false
s = ENV['MOCHI_NOW_SEED']
if (!s || s == '') && ENV['MOCHI_BENCHMARK']
  s = '1'
end
if s && s != ''
  begin
    $now_seed = Integer(s)
    $now_seeded = true
  rescue StandardError
  end
end
def _now()
  if $now_seeded
    $now_seed += 1_000_000
    $now_seed
  else
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)
  end
end


require 'objspace'
def _mem()
  ObjectSpace.memsize_of_all
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end


class String
  alias each each_char
end

start_mem = _mem()
start = _now()
  def rnd()
    $seed = (_add($seed * 214013, 2531011)) % 2147483648
    return $seed / 65536
  end
  def deal(game)
    $seed = game
    deck = []
    i = 0
    while i < 52
      deck = (deck << 51 - i)
      i = _add(i, 1)
    end
    i = 0
    while i < 51
      j = 51 - (rnd() % (52 - i))
      tmp = deck[i]
      deck[i] = deck[j]
      deck[j] = tmp
      i = _add(i, 1)
    end
    return deck
  end
  def show(cards)
    i = 0
    while i < cards.length
      c = cards[i]
      STDOUT.write(_add(_add(" ", $nums[c / 4..._add(c / 4, 1)]), $suits[c % 4..._add(c % 4, 1)]))
      if (_add(i, 1)) % 8 == 0 || _add(i, 1) == cards.length
        puts("")
      end
      i = _add(i, 1)
    end
  end
  $seed = 1
  $suits = "CDHS"
  $nums = "A23456789TJQK"
  puts("")
  puts("Game #1")
  show(deal(1))
  puts("")
  puts("Game #617")
  show(deal(617))
end_time = _now()
end_mem = _mem()
result = {"duration_us" => ((end_time - start) / 1000), "memory_bytes" => (end_mem - start_mem), "name" => "main"}
puts(JSON.pretty_generate(result))
