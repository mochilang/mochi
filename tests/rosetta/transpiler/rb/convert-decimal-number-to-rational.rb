# Generated by Mochi transpiler v0.10.42 on 2025-07-28 07:49 +0700

def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end

def gcd(a, b)
  x = a
  if x < 0
    x = -x
  end
  y = b
  if y < 0
    y = -y
  end
  while y != 0
    t = x % y
    x = y
    y = t
  end
  return x
end
def parseRational(s)
  intPart = 0
  fracPart = 0
  denom = 1
  afterDot = false
  i = 0
  while i < s.length
    ch = s[i..._add(i, 1)]
    if ch == "."
      afterDot = true
    else
      d = (ch).to_i - ("0").to_i
      if !afterDot
        intPart = _add(intPart * 10, d)
      else
        fracPart = _add(fracPart * 10, d)
        denom = denom * 10
      end
    end
    i = _add(i, 1)
  end
  num = _add(intPart * denom, fracPart)
  g = gcd(num, denom)
  return {"num" => ((num / g)).to_i, "den" => ((denom / g)).to_i}
end
def main()
  inputs = ["0.9054054", "0.518518", "0.75"]
  inputs.each do |s|
    r = parseRational(s)
    puts(_add(_add(_add(_add(s, " = "), (r["num"]).to_s), "/"), (r["den"]).to_s))
  end
end
main()
