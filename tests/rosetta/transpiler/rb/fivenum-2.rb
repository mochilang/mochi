# Generated by Mochi transpiler v0.10.50 on 2025-07-30 21:05 +0700

$now_seed = 0
$now_seeded = false
s = ENV['MOCHI_NOW_SEED']
if s && s != ''
  begin
    $now_seed = Integer(s)
    $now_seeded = true
  rescue StandardError
  end
end
def _now()
  if $now_seeded
    $now_seed = ($now_seed * 1664525 + 1013904223) % 2147483647
    $now_seed
  else
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)
  end
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end

def qsel(a, k)
  arr = a
  while arr.length > 1
    px = _now() % arr.length
    pv = arr[px]
    last = arr.length - 1
    tmp = arr[px]
    arr[px] = arr[last]
    arr[last] = tmp
    px = 0
    i = 0
    while i < last
      v = arr[i]
      if v < pv
        t = arr[px]
        arr[px] = arr[i]
        arr[i] = t
        px = _add(px, 1)
      end
      i = _add(i, 1)
    end
    arr[px] = pv
    if px == k
      return pv
    end
    if k < px
      arr = arr[0...px]
    else
      arr = arr[(_add(px, 1))...]
      k = k - (_add(px, 1))
    end
  end
  return arr[0]
end
def fivenum(a)
  last = a.length - 1
  m = last / 2
  n5 = []
  n5 = n5 + [qsel(a[0...m], 0)]
  n5 = n5 + [qsel(a[0...m], a.length / 4)]
  n5 = n5 + [qsel(a, m)]
  arr2 = a[m...]
  q3 = last - m - a.length / 4
  n5 = n5 + [qsel(arr2, q3)]
  arr2 = arr2[q3...]
  n5 = n5 + [qsel(arr2, arr2.length - 1)]
  return n5
end
$x1 = [36.0, 40.0, 7.0, 39.0, 41.0, 15.0]
$x2 = [15.0, 6.0, 42.0, 41.0, 7.0, 36.0, 49.0, 40.0, 39.0, 47.0, 43.0]
$x3 = [0.14082834, 0.0974879, 1.73131507, 0.87636009, -1.95059594, 0.73438555, -0.03035726, 1.4667597, -0.74621349, -0.72588772, 0.6390516, 0.61501527, -0.9898378, -1.00447874, -0.62759469, 0.66206163, 1.04312009, -0.10305385, 0.75775634, 0.32566578]
puts((fivenum($x1)).to_s)
puts((fivenum($x2)).to_s)
puts((fivenum($x3)).to_s)
