# Generated by Mochi transpiler v0.10.39 on 2025-07-24 20:52 +0700

def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.rjust(len, ch)
end

def lower(ch)
  up = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
  low = "abcdefghijklmnopqrstuvwxyz"
  i = 0
  while i < up.length
    if ch == up[i..._add(i, 1)]
      return low[i..._add(i, 1)]
    end
    i = _add(i, 1)
  end
  return ch
end
$partList = ["A", "B", "C", "D"]
$nAssemblies = 3
$partList.each do |p|
  puts(_add(p, " worker running"))
end
(1...(_add($nAssemblies, 1))).each do |cycle|
  puts(_add("begin assembly cycle ", (cycle).to_s))
  $a = ""
  $partList.each do |p|
    puts(_add(p, " worker begins part"))
    puts(_add(_add(p, " worker completed "), p.downcase()))
    $a = _add($a, p.downcase())
  end
  puts(_add(_add(_add($a, " assembled.  cycle "), (cycle).to_s), " complete"))
end
$partList.each do |p|
  puts(_add(p, " worker stopped"))
end
