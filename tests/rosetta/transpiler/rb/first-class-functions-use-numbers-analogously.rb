# Generated by Mochi transpiler v0.10.50 on 2025-07-30 21:05 +0700

def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end

def multiplier(n1, n2)
  n1n2 = n1 * n2
  return ->(m) { n1n2 * m }
end
def main()
  x = 2.0
  xi = 0.5
  y = 4.0
  yi = 0.25
  z = _add(x, y)
  zi = 1.0 / (_add(x, y))
  numbers = [x, y, z]
  inverses = [xi, yi, zi]
  mfs = []
  i = 0
  while i < numbers.length
    mfs = mfs + [multiplier(numbers[i], inverses[i])]
    i = _add(i, 1)
  end
  mfs.each do |mf|
    puts((mf.call(1.0)).to_s)
  end
end
main()
