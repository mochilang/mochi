# Generated by Mochi transpiler v0.10.50 on 2025-07-30 21:05 +0700

def _repeat(s, n)
  s * n.to_i
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end

def repeat(s, n)
  out = ""
  i = 0
  while i < n
    out = _add(out, s)
    i = _add(i, 1)
  end
  return out
end
def trimRightSpace(s)
  i = s.length - 1
  while i >= 0 && s[i..._add(i, 1)] == " "
    i = i - 1
  end
  return s[..._add(i, 1)]
end
def block2text(block)
  out = []
  block.each do |b|
    out = out + [trimRightSpace(b)]
  end
  return out
end
def text2block(lines)
  out = []
  count = 0
  lines.each do |line|
    s = line
    le = s.length
    if le > 64
      s = s[...64]
    else
      if le < 64
        s = _add(s, _repeat(" ", 64 - le))
      end
    end
    out = out + [s]
    count = _add(count, 1)
  end
  if count % 16 != 0
    pad = 16 - count % 16
    i = 0
    while i < pad
      out = out + [_repeat(" ", 64)]
      i = _add(i, 1)
    end
  end
  return out
end
$lines = ["alpha", "beta", "gamma"]
$blocks = text2block($lines)
$outLines = block2text($blocks)
$outLines.each do |l|
  if l != ""
    puts(l)
  end
end
