# Generated by Mochi transpiler v0.10.54 on 2025-08-02 16:16 +0700
require 'json'

$now_seed = 0
$now_seeded = false
s = ENV['MOCHI_NOW_SEED']
if s && s != ''
  begin
    $now_seed = Integer(s)
    $now_seeded = true
  rescue StandardError
  end
end
def _now()
  if $now_seeded
    $now_seed = ($now_seed * 1664525 + 1013904223) % 2147483647
    $now_seed
  else
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)
  end
end


def _indexOf(s, ch)
  idx = s.index(ch)
  idx ? idx : -1
end


require 'objspace'
def _mem()
  ObjectSpace.memsize_of_all
end


def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.to_s.rjust(len, ch)
end


class String
  alias each each_char
end

start_mem = _mem()
start = _now()
  def padLeft(s, w)
    res = ""
    n = w - s.length
    while n > 0
      res = _add(res, " ")
      n = n - 1
    end
    return _add(res, s)
  end
  def padRight(s, w)
    out = s
    i = s.length
    while i < w
      out = _add(out, " ")
      i = _add(i, 1)
    end
    return out
  end
  def indexOf(s, ch)
    i = 0
    while i < s.length
      if s[i..._add(i, 1)] == ch
        return i
      end
      i = _add(i, 1)
    end
    return -1
  end
  def format2(f)
    s = (f).to_s
    idx = _indexOf(s, ".")
    if idx < 0
      s = _add(s, ".00")
    else
      need = _add(idx, 3)
      if s.length > need
        s = s[0...need]
      else
        while s.length < need
          s = _add(s, "0")
        end
      end
    end
    return s
  end
  def cpx(h)
    x = ((_add((h / 11.25), 0.5))).to_i
    x = x % 32
    if x < 0
      x = _add(x, 32)
    end
    return x
  end
  def degrees2compasspoint(h)
    return $compassPoint[cpx(h)]
  end
  $compassPoint = ["North", "North by east", "North-northeast", "Northeast by north", "Northeast", "Northeast by east", "East-northeast", "East by north", "East", "East by south", "East-southeast", "Southeast by east", "Southeast", "Southeast by south", "South-southeast", "South by east", "South", "South by west", "South-southwest", "Southwest by south", "Southwest", "Southwest by west", "West-southwest", "West by south", "West", "West by north", "West-northwest", "Northwest by west", "Northwest", "Northwest by north", "North-northwest", "North by west"]
  $headings = [0.0, 16.87, 16.88, 33.75, 50.62, 50.63, 67.5, 84.37, 84.38, 101.25, 118.12, 118.13, 135.0, 151.87, 151.88, 168.75, 185.62, 185.63, 202.5, 219.37, 219.38, 236.25, 253.12, 253.13, 270.0, 286.87, 286.88, 303.75, 320.62, 320.63, 337.5, 354.37, 354.38]
  puts("Index  Compass point         Degree")
  $i = 0
  while $i < $headings.length
    h = $headings[$i]
    idx = _add($i % 32, 1)
    cp = degrees2compasspoint(h)
    puts(_add(_add(_add(_add(_add(padLeft((idx).to_s, 4), "   "), padRight(cp, 19)), " "), format2(h)), "Â°"))
    $i = _add($i, 1)
  end
end_time = _now()
end_mem = _mem()
result = {"duration_us" => ((end_time - start) / 1000), "memory_bytes" => (end_mem - start_mem), "name" => "main"}
puts(JSON.pretty_generate(result))
