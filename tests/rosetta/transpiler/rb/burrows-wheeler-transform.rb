# Generated by Mochi transpiler v0.10.39 on 2025-07-24 20:52 +0700

def _add(a, b)
  if a.is_a?(Array) && b.is_a?(String)
    a.join + b
  elsif a.is_a?(String) && b.is_a?(Array)
    a + b.join
  else
    a + b
  end
end


def _padStart(s, len, ch)
  s.rjust(len, ch)
end

$stx = "\x02"
$etx = "\x03"
def contains(s, ch)
  i = 0
  while i < s.length
    if s[i..._add(i, 1)] == ch
      return true
    end
    i = _add(i, 1)
  end
  return false
end
def sortStrings(xs)
  arr = xs
  n = arr.length
  i = 0
  while i < n
    j = 0
    while j < n - 1
      if arr[j] > arr[_add(j, 1)]
        tmp = arr[j]
        arr[j] = arr[_add(j, 1)]
        arr[_add(j, 1)] = tmp
      end
      j = _add(j, 1)
    end
    i = _add(i, 1)
  end
  return arr
end
def bwt(s)
  if s.include?($stx) || s.include?($etx)
    return {"err" => true, "res" => ""}
  end
  s = _add(_add($stx, s), $etx)
  le = s.length
  table = []
  i = 0
  while i < le
    rot = _add(s[i...le], s[0...i])
    table = table + [rot]
    i = _add(i, 1)
  end
  table = sortStrings(table)
  last = ""
  i = 0
  while i < le
    last = _add(last, table[i][le - 1...le])
    i = _add(i, 1)
  end
  return {"err" => false, "res" => last}
end
def ibwt(r)
  le = r.length
  table = []
  i = 0
  while i < le
    table = table + [""]
    i = _add(i, 1)
  end
  n = 0
  while n < le
    i = 0
    while i < le
      table[i] = _add(r[i..._add(i, 1)], table[i])
      i = _add(i, 1)
    end
    table = sortStrings(table)
    n = _add(n, 1)
  end
  i = 0
  while i < le
    if table[i][le - 1...le] == $etx
      return table[i][1...le - 1]
    end
    i = _add(i, 1)
  end
  return ""
end
def makePrintable(s)
  out = ""
  i = 0
  while i < s.length
    ch = s[i..._add(i, 1)]
    if ch == $stx
      out = _add(out, "^")
    else
      if ch == $etx
        out = _add(out, "|")
      else
        out = _add(out, ch)
      end
    end
    i = _add(i, 1)
  end
  return out
end
def main()
  examples = ["banana", "appellee", "dogwood", "TO BE OR NOT TO BE OR WANT TO BE OR NOT?", "SIX.MIXED.PIXIES.SIFT.SIXTY.PIXIE.DUST.BOXES", "\x02ABC\x03"]
  examples.each do |t|
    puts(makePrintable(t))
    res = bwt(t)
    if res["err"]
      puts(" --> ERROR: String can't contain STX or ETX")
      puts(" -->")
    else
      enc = (res["res"]).to_s
      puts(_add(" --> ", makePrintable(enc)))
      r = ibwt(enc)
      puts(_add(" --> ", r))
    end
    puts("")
  end
end
main()
