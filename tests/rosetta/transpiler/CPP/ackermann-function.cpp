// Generated by Mochi transpiler v0.10.39 on 2025-07-24 18:49:26 GMT+7
#include <iostream>
#include <string>
#include <sstream>
#include <iomanip>
#include <optional>
#include <vector>



int ackermann(int m, int n);
int main();

int ackermann(int m, int n) {
    if ((m == 0)) {
        return (n + 1);
    }
    if ((n == 0)) {
        return ackermann((m - 1), 1);
    }
    return ackermann((m - 1), (int)(ackermann(m, (n - 1))));
}

int main() {
    std::cout << (std::string("A(0, 0) = ") + ([&]{ std::ostringstream ss; ss << std::boolalpha << ackermann(0, 0); return ss.str(); }()));
    std::cout << std::endl;
    std::cout << (std::string("A(1, 2) = ") + ([&]{ std::ostringstream ss; ss << std::boolalpha << ackermann(1, 2); return ss.str(); }()));
    std::cout << std::endl;
    std::cout << (std::string("A(2, 4) = ") + ([&]{ std::ostringstream ss; ss << std::boolalpha << ackermann(2, 4); return ss.str(); }()));
    std::cout << std::endl;
    std::cout << (std::string("A(3, 4) = ") + ([&]{ std::ostringstream ss; ss << std::boolalpha << ackermann(3, 4); return ss.str(); }()));
    std::cout << std::endl;
    return 0;
}
