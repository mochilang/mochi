// Generated by Mochi transpiler v0.10.40 on 2025-07-25 19:32:55 GMT+7
#include <iostream>
#include <string>
#include <vector>
#include <sstream>
#include <iomanip>
#include <cmath>
#include <optional>
#include <cstdlib>
#include <chrono>
#include <sys/resource.h>


static int _now() {
    static long long seed = 0;
    static bool seeded = false;
    if (!seeded) {
        const char* s = std::getenv("MOCHI_NOW_SEED");
        if (s && *s) { seed = std::atoll(s); seeded = true; }
    }
    if (seeded) {
        seed = (seed * 1664525 + 1013904223) % 2147483647;
        return static_cast<int>(seed);
    }
    return (int)(std::chrono::duration_cast<std::chrono::microseconds>(std::chrono::system_clock::now().time_since_epoch()).count() % 2147483647);
}
static long _mem() {
    struct rusage usage{};
    getrusage(RUSAGE_SELF, &usage);
#ifdef __APPLE__
    return usage.ru_maxrss;
#else
    return usage.ru_maxrss * 1024;
#endif
}

double angleDiff(double b1, double b2);
int main();

std::vector<std::vector<double>> testCases = std::vector<std::vector<double>>{std::vector<double>{20.0, 45.0}, std::vector<double>{(0 - 45.0), 45.0}, std::vector<double>{(0 - 85.0), 90.0}, std::vector<double>{(0 - 95.0), 90.0}, std::vector<double>{(0 - 45.0), 125.0}, std::vector<double>{(0 - 45.0), 145.0}, std::vector<double>{29.4803, (0 - 88.6381)}, std::vector<double>{(0 - 78.3251), (0 - 159.036)}, std::vector<double>{(0 - 70099.74233810938), 29840.67437876723}, std::vector<double>{(0 - 165313.6666297357), 33693.9894517456}, std::vector<double>{1174.8380510598456, (0 - 154146.66490124757)}, std::vector<double>{60175.77306795546, 42213.07192354373}};

double angleDiff(double b1, double b2) {
    double diff = (b2 - b1);
    return (std::fmod(((std::fmod(diff, 360.0) + 360.0) + 180.0), 360.0) - 180.0);
}

int main() {
    {
        auto __bench_start = _now();
        auto __bench_mem_start = _mem();
        for (std::vector<double> tc : testCases) {
            { std::ostringstream __ss; double __dv = angleDiff(tc[0], tc[1]); if(std::floor(__dv) == __dv) { __ss<<std::fixed<<std::setprecision(1)<<__dv; } else { __ss<<std::defaultfloat<<std::setprecision(17)<<__dv; } std::cout << __ss.str(); }
            std::cout << std::endl;
        }
        auto __bench_end = _now();
        auto __bench_mem_end = _mem();
        auto __bench_dur = __bench_end - __bench_start;
        auto __bench_mem = __bench_mem_end;
        std::cout << "{\n  \"duration_us\": " << __bench_dur << ",\n  \"memory_bytes\": " << __bench_mem << ",\n  \"name\": \"main\"\n}" << std::endl;
    }
    return 0;
}
