// Generated by Mochi transpiler v0.10.39 on 2025-07-24 16:35:09 GMT+7
#include <iostream>
#include <string>
#include <sstream>
#include <iomanip>
#include <optional>
#include <vector>



int pfacSum(int i);
int main();

int pfacSum(int i) {
    int sum = 0;
    int p = 1;
    while ((p <= (i / 2))) {
        if (((i % p) == 0)) {
            sum = (sum + p);
        }
        p = (p + 1);
    }
    return sum;
}

int main() {
    int d = 0;
    int a = 0;
    int pnum = 0;
    int i = 1;
    while ((i <= 20000)) {
        int j = pfacSum(i);
        if ((j < i)) {
            d = (d + 1);
        }
        if ((j == i)) {
            pnum = (pnum + 1);
        }
        if ((j > i)) {
            a = (a + 1);
        }
        i = (i + 1);
    }
    std::cout << ((std::string("There are ") + ([&]{ std::ostringstream ss; ss << std::boolalpha << d; return ss.str(); }())) + std::string(" deficient numbers between 1 and 20000"));
    std::cout << std::endl;
    std::cout << ((std::string("There are ") + ([&]{ std::ostringstream ss; ss << std::boolalpha << a; return ss.str(); }())) + std::string(" abundant numbers  between 1 and 20000"));
    std::cout << std::endl;
    std::cout << ((std::string("There are ") + ([&]{ std::ostringstream ss; ss << std::boolalpha << pnum; return ss.str(); }())) + std::string(" perfect numbers between 1 and 20000"));
    std::cout << std::endl;
    return 0;
}
