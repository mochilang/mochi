compile: exit status 1
/workspace/mochi/tests/rosetta/transpiler/CPP/constrained-random-points-on-a-circle-1.cpp:36:181: warning: multi-character character constant [-Wmultichar]
   36 |     else if(val.type() == typeid(std::vector<int64_t>)) { const auto& v = std::any_cast<const std::vector<int64_t>&>(val); os << '['; for(size_t i=0;i<v.size();++i){ if(i>0) os << ', '; os << v[i]; } os << ']'; }
      |                                                                                                                                                                                     ^~~~
/workspace/mochi/tests/rosetta/transpiler/CPP/constrained-random-points-on-a-circle-1.cpp:37:209: warning: multi-character character constant [-Wmultichar]
   37 |     else if(val.type() == typeid(std::vector<std::vector<int64_t>>)) { const auto& vv = std::any_cast<const std::vector<std::vector<int64_t>>&>(val); os << '['; for(size_t i=0;i<vv.size();++i){ if(i>0) os << ', '; const auto& v = vv[i]; os << '['; for(size_t j=0;j<v.size();++j){ if(j>0) os << ', '; os << v[j]; } os << ']'; } os << ']'; }
      |                                                                                                                                                                                                                 ^~~~
/workspace/mochi/tests/rosetta/transpiler/CPP/constrained-random-points-on-a-circle-1.cpp:37:295: warning: multi-character character constant [-Wmultichar]
   37 |     else if(val.type() == typeid(std::vector<std::vector<int64_t>>)) { const auto& vv = std::any_cast<const std::vector<std::vector<int64_t>>&>(val); os << '['; for(size_t i=0;i<vv.size();++i){ if(i>0) os << ', '; const auto& v = vv[i]; os << '['; for(size_t j=0;j<v.size();++j){ if(j>0) os << ', '; os << v[j]; } os << ']'; } os << ']'; }
      |                                                                                                                                                                                                                                                                                                       ^~~~
/workspace/mochi/tests/rosetta/transpiler/CPP/constrained-random-points-on-a-circle-1.cpp:38:189: warning: multi-character character constant [-Wmultichar]
   38 |     else if(val.type() == typeid(std::vector<std::string>)) { const auto& v = std::any_cast<const std::vector<std::string>&>(val); os << '['; for(size_t i=0;i<v.size();++i){ if(i>0) os << ', '; os << v[i]; } os << ']'; }
      |                                                                                                                                                                                             ^~~~
/workspace/mochi/tests/rosetta/transpiler/CPP/constrained-random-points-on-a-circle-1.cpp:39:183: warning: multi-character character constant [-Wmultichar]
   39 |     else if(val.type() == typeid(std::vector<std::any>)) { const auto& v = std::any_cast<const std::vector<std::any>&>(val); os << '['; for(size_t i=0;i<v.size();++i){ if(i>0) os << ', '; any_to_stream(os, v[i]); } os << ']'; }
      |                                                                                                                                                                                       ^~~~
/workspace/mochi/tests/rosetta/transpiler/CPP/constrained-random-points-on-a-circle-1.cpp:40:215: warning: multi-character character constant [-Wmultichar]
   40 |     else if(val.type() == typeid(std::map<std::string, std::any>)) { const auto& m = std::any_cast<const std::map<std::string, std::any>&>(val); os << '{'; bool first=true; for(const auto& p : m){ if(!first) os << ', '; first=false; os << p.first << ': '; any_to_stream(os, p.second); } os << '}'; }
      |                                                                                                                                                                                                                       ^~~~
/workspace/mochi/tests/rosetta/transpiler/CPP/constrained-random-points-on-a-circle-1.cpp:40:251: warning: multi-character character constant [-Wmultichar]
   40 |     else if(val.type() == typeid(std::map<std::string, std::any>)) { const auto& m = std::any_cast<const std::map<std::string, std::any>&>(val); os << '{'; bool first=true; for(const auto& p : m){ if(!first) os << ', '; first=false; os << p.first << ': '; any_to_stream(os, p.second); } os << '}'; }
      |                                                                                                                                                                                                                                                           ^~~~
/workspace/mochi/tests/rosetta/transpiler/CPP/constrained-random-points-on-a-circle-1.cpp: In function ‘int main()’:
/workspace/mochi/tests/rosetta/transpiler/CPP/constrained-random-points-on-a-circle-1.cpp:107:13: error: no match for ‘operator[]’ (operand types are ‘std::vector<std::vector<std::__cxx11::basic_string<char> > >’ and ‘boost::multiprecision::cpp_int’ {aka ‘boost::multiprecision::number<boost::multiprecision::backends::cpp_int_backend<> >’})
  107 |         rows[row][col] = std::string("*");
      |             ^
In file included from /usr/include/c++/13/vector:66,
                 from /workspace/mochi/tests/rosetta/transpiler/CPP/constrained-random-points-on-a-circle-1.cpp:4:
/usr/include/c++/13/bits/stl_vector.h:1126:7: note: candidate: ‘constexpr std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = std::vector<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::vector<std::__cxx11::basic_string<char> > >; reference = std::vector<std::__cxx11::basic_string<char> >&; size_type = long unsigned int]’
 1126 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^~~~~~~~
/usr/include/c++/13/bits/stl_vector.h:1126:28: note:   no known conversion for argument 1 from ‘boost::multiprecision::cpp_int’ {aka ‘boost::multiprecision::number<boost::multiprecision::backends::cpp_int_backend<> >’} to ‘std::vector<std::vector<std::__cxx11::basic_string<char> > >::size_type’ {aka ‘long unsigned int’}
 1126 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |                  ~~~~~~~~~~^~~
/usr/include/c++/13/bits/stl_vector.h:1145:7: note: candidate: ‘constexpr std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](size_type) const [with _Tp = std::vector<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::vector<std::__cxx11::basic_string<char> > >; const_reference = const std::vector<std::__cxx11::basic_string<char> >&; size_type = long unsigned int]’
 1145 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^~~~~~~~
/usr/include/c++/13/bits/stl_vector.h:1145:28: note:   no known conversion for argument 1 from ‘boost::multiprecision::cpp_int’ {aka ‘boost::multiprecision::number<boost::multiprecision::backends::cpp_int_backend<> >’} to ‘std::vector<std::vector<std::__cxx11::basic_string<char> > >::size_type’ {aka ‘long unsigned int’}
 1145 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |                  ~~~~~~~~~~^~~
