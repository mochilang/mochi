// Generated by Mochi transpiler v0.10.39 on 2025-07-24 19:13:25 GMT+7
#include <iostream>
#include <string>
#include <sstream>
#include <iomanip>
#include <cmath>
#include <optional>
#include <vector>



bool isPrime(int n);
int sumDigits(int n);
std::string pad(int n);
int main();

bool isPrime(int n) {
    if ((n < 2)) {
        return false;
    }
    if (((n % 2) == 0)) {
        return (n == 2);
    }
    if (((n % 3) == 0)) {
        return (n == 3);
    }
    int d = 5;
    while (((d * d) <= n)) {
        if (((n % d) == 0)) {
            return false;
        }
        d = (d + 2);
        if (((n % d) == 0)) {
            return false;
        }
        d = (d + 4);
    }
    return true;
}

int sumDigits(int n) {
    int s = 0;
    int x = n;
    while ((x > 0)) {
        s = (s + (x % 10));
        x = (int)((x / 10));
    }
    return s;
}

std::string pad(int n) {
    if ((n < 10)) {
        return (std::string("  ") + ([&]{ std::ostringstream ss; ss << std::boolalpha << n; return ss.str(); }()));
    }
    if ((n < 100)) {
        return (std::string(" ") + ([&]{ std::ostringstream ss; ss << std::boolalpha << n; return ss.str(); }()));
    }
    return ([&]{ std::ostringstream ss; ss << std::boolalpha << n; return ss.str(); }());
}

int main() {
    std::cout << std::string("Additive primes less than 500:");
    std::cout << std::endl;
    int count = 0;
    std::string line = std::string("");
    int lineCount = 0;
    int i = 2;
    while ((i < 500)) {
        if ((isPrime(i) && isPrime(sumDigits(i)))) {
            count = (count + 1);
            line = ((line + pad(i)) + std::string("  "));
            lineCount = (lineCount + 1);
            if ((lineCount == 10)) {
                std::cout << line.substr(0, (line.size() - 2) - 0);
                std::cout << std::endl;
                line = std::string("");
                lineCount = 0;
            }
        }
        if ((i > 2)) {
            i = (i + 2);
        } else {
            i = (i + 1);
        }
    }
    if ((lineCount > 0)) {
        std::cout << line.substr(0, (line.size() - 2) - 0);
        std::cout << std::endl;
    }
    std::cout << (([&]{ std::ostringstream ss; ss << std::boolalpha << count; return ss.str(); }()) + std::string(" additive primes found."));
    std::cout << std::endl;
    return 0;
}
