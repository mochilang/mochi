// Generated by Mochi transpiler v0.10.40 on 2025-07-25 19:33:02 GMT+7
#include <iostream>
#include <string>
#include <vector>
#include <sstream>
#include <iomanip>
#include <cmath>
#include <optional>
#include <cstdlib>
#include <chrono>
#include <sys/resource.h>


static int _now() {
    static long long seed = 0;
    static bool seeded = false;
    if (!seeded) {
        const char* s = std::getenv("MOCHI_NOW_SEED");
        if (s && *s) { seed = std::atoll(s); seeded = true; }
    }
    if (seeded) {
        seed = (seed * 1664525 + 1013904223) % 2147483647;
        return static_cast<int>(seed);
    }
    return (int)(std::chrono::duration_cast<std::chrono::microseconds>(std::chrono::system_clock::now().time_since_epoch()).count() % 2147483647);
}
static long _mem() {
    struct rusage usage{};
    getrusage(RUSAGE_SELF, &usage);
#ifdef __APPLE__
    return usage.ru_maxrss;
#else
    return usage.ru_maxrss * 1024;
#endif
}

int fib(int n);
int main();

int fib(int n) {
    if ((n < 2)) {
        return n;
    }
    int a = 0;
    int b = 1;
    int i = 1;
    while ((i < n)) {
        int t = (a + b);
        a = b;
        b = t;
        i = (i + 1);
    }
    return b;
}

int main() {
    {
        auto __bench_start = _now();
        auto __bench_mem_start = _mem();
        for (int n : std::vector<int>{0, 1, 2, 3, 4, 5, 10, 40, -1}) {
            if ((n < 0)) {
                std::cout << std::string("fib undefined for negative numbers");
                std::cout << std::endl;
            } else {
                std::cout << (((std::string("fib ") + ([&]{ std::ostringstream ss; ss << std::boolalpha << n; return ss.str(); }())) + std::string(" = ")) + ([&]{ std::ostringstream ss; ss << std::boolalpha << fib(n); return ss.str(); }()));
                std::cout << std::endl;
            }
        }
        auto __bench_end = _now();
        auto __bench_mem_end = _mem();
        auto __bench_dur = __bench_end - __bench_start;
        auto __bench_mem = __bench_mem_end;
        std::cout << "{\n  \"duration_us\": " << __bench_dur << ",\n  \"memory_bytes\": " << __bench_mem << ",\n  \"name\": \"main\"\n}" << std::endl;
    }
    return 0;
}
