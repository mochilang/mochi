// Generated by Mochi transpiler v0.10.39 on 2025-07-24 16:12:54 GMT+7
#include <iostream>
#include <string>
#include <vector>
#include <sstream>
#include <iomanip>
#include <optional>



std::vector<std::vector<int>> newPile(int d);
std::vector<std::vector<int>> handlePile(std::vector<std::vector<int>>& pile, int x, int y);
void drawPile(std::vector<std::vector<int>>& pile, int d);
int main();

int dim = 16;

std::vector<std::vector<int>> newPile(int d) {
    std::vector<std::vector<int>> b = {};
    int y = 0;
    while ((y < d)) {
        std::vector<int> row = {};
        int x = 0;
        while ((x < d)) {
            row = ([&]{ auto __tmp = row; __tmp.push_back(0); return __tmp; }());
            x = (x + 1);
        }
        b = ([&]{ auto __tmp = b; __tmp.push_back(row); return __tmp; }());
        y = (y + 1);
    }
    return b;
}

std::vector<std::vector<int>> handlePile(std::vector<std::vector<int>>& pile, int x, int y) {
    if ((pile[y][x] >= 4)) {
        pile[y][x] = (pile[y][x] - 4);
        if ((y > 0)) {
            pile[(y - 1)][x] = (pile[(y - 1)][x] + 1);
            if ((pile[(y - 1)][x] >= 4)) {
                pile = handlePile(pile, x, (y - 1));
            }
        }
        if ((x > 0)) {
            pile[y][(x - 1)] = (pile[y][(x - 1)] + 1);
            if ((pile[y][(x - 1)] >= 4)) {
                pile = handlePile(pile, (x - 1), y);
            }
        }
        if ((y < (dim - 1))) {
            pile[(y + 1)][x] = (pile[(y + 1)][x] + 1);
            if ((pile[(y + 1)][x] >= 4)) {
                pile = handlePile(pile, x, (y + 1));
            }
        }
        if ((x < (dim - 1))) {
            pile[y][(x + 1)] = (pile[y][(x + 1)] + 1);
            if ((pile[y][(x + 1)] >= 4)) {
                pile = handlePile(pile, (x + 1), y);
            }
        }
        pile = handlePile(pile, x, y);
    }
    return pile;
}

void drawPile(std::vector<std::vector<int>>& pile, int d) {
    std::vector<std::string> chars = std::vector{std::string(" "), std::string("░"), std::string("▓"), std::string("█")};
    int row = 0;
    while ((row < d)) {
        std::string line = std::string("");
        int col = 0;
        while ((col < d)) {
            int v = pile[row][col];
            if ((v > 3)) {
                v = 3;
            }
            line = (line + chars[v]);
            col = (col + 1);
        }
        std::cout << line;
        std::cout << std::endl;
        row = (row + 1);
    }
}

int main() {
    std::vector<std::vector<int>> pile = newPile(16);
    int hdim = 7;
    pile[hdim][hdim] = 16;
    pile = handlePile(pile, hdim, hdim);
    drawPile(pile, 16);
    return 0;
}
