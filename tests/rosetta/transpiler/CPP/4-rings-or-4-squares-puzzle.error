compile: exit status 1
/workspace/mochi/tests/rosetta/transpiler/CPP/4-rings-or-4-squares-puzzle.cpp:43:173: warning: multi-character character constant [-Wmultichar]
   43 |     else if(val.type() == typeid(std::vector<int>)) { const auto& v = std::any_cast<const std::vector<int>&>(val); os << '['; for(size_t i=0;i<v.size();++i){ if(i>0) os << ', '; os << v[i]; } os << ']'; }
      |                                                                                                                                                                             ^~~~
/workspace/mochi/tests/rosetta/transpiler/CPP/4-rings-or-4-squares-puzzle.cpp:44:201: warning: multi-character character constant [-Wmultichar]
   44 |     else if(val.type() == typeid(std::vector<std::vector<int>>)) { const auto& vv = std::any_cast<const std::vector<std::vector<int>>&>(val); os << '['; for(size_t i=0;i<vv.size();++i){ if(i>0) os << ', '; const auto& v = vv[i]; os << '['; for(size_t j=0;j<v.size();++j){ if(j>0) os << ', '; os << v[j]; } os << ']'; } os << ']'; }
      |                                                                                                                                                                                                         ^~~~
/workspace/mochi/tests/rosetta/transpiler/CPP/4-rings-or-4-squares-puzzle.cpp:44:287: warning: multi-character character constant [-Wmultichar]
   44 |     else if(val.type() == typeid(std::vector<std::vector<int>>)) { const auto& vv = std::any_cast<const std::vector<std::vector<int>>&>(val); os << '['; for(size_t i=0;i<vv.size();++i){ if(i>0) os << ', '; const auto& v = vv[i]; os << '['; for(size_t j=0;j<v.size();++j){ if(j>0) os << ', '; os << v[j]; } os << ']'; } os << ']'; }
      |                                                                                                                                                                                                                                                                                               ^~~~
/workspace/mochi/tests/rosetta/transpiler/CPP/4-rings-or-4-squares-puzzle.cpp:45:189: warning: multi-character character constant [-Wmultichar]
   45 |     else if(val.type() == typeid(std::vector<std::string>)) { const auto& v = std::any_cast<const std::vector<std::string>&>(val); os << '['; for(size_t i=0;i<v.size();++i){ if(i>0) os << ', '; os << v[i]; } os << ']'; }
      |                                                                                                                                                                                             ^~~~
/workspace/mochi/tests/rosetta/transpiler/CPP/4-rings-or-4-squares-puzzle.cpp:46:183: warning: multi-character character constant [-Wmultichar]
   46 |     else if(val.type() == typeid(std::vector<std::any>)) { const auto& v = std::any_cast<const std::vector<std::any>&>(val); os << '['; for(size_t i=0;i<v.size();++i){ if(i>0) os << ', '; any_to_stream(os, v[i]); } os << ']'; }
      |                                                                                                                                                                                       ^~~~
/workspace/mochi/tests/rosetta/transpiler/CPP/4-rings-or-4-squares-puzzle.cpp:47:215: warning: multi-character character constant [-Wmultichar]
   47 |     else if(val.type() == typeid(std::map<std::string, std::any>)) { const auto& m = std::any_cast<const std::map<std::string, std::any>&>(val); os << '{'; bool first=true; for(const auto& p : m){ if(!first) os << ', '; first=false; os << p.first << ': '; any_to_stream(os, p.second); } os << '}'; }
      |                                                                                                                                                                                                                       ^~~~
/workspace/mochi/tests/rosetta/transpiler/CPP/4-rings-or-4-squares-puzzle.cpp:47:251: warning: multi-character character constant [-Wmultichar]
   47 |     else if(val.type() == typeid(std::map<std::string, std::any>)) { const auto& m = std::any_cast<const std::map<std::string, std::any>&>(val); os << '{'; bool first=true; for(const auto& p : m){ if(!first) os << ', '; first=false; os << p.first << ': '; any_to_stream(os, p.second); } os << '}'; }
      |                                                                                                                                                                                                                                                           ^~~~
/workspace/mochi/tests/rosetta/transpiler/CPP/4-rings-or-4-squares-puzzle.cpp: In lambda function:
/workspace/mochi/tests/rosetta/transpiler/CPP/4-rings-or-4-squares-puzzle.cpp:113:113: error: template argument 1 is invalid
  113 |                             valid = ([&]{ auto __tmp = valid; __tmp.push_back((std::vector<int>)std::vector<auto>{a, b, c, d, e, f, g}); return __tmp; }());
      |                                                                                                                 ^
/workspace/mochi/tests/rosetta/transpiler/CPP/4-rings-or-4-squares-puzzle.cpp:113:113: error: template argument 2 is invalid
