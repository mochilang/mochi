// Generated by Mochi transpiler v0.10.39 on 2025-07-24 18:37:20 GMT+7
#include <iostream>
#include <string>
#include <sstream>
#include <iomanip>
#include <optional>
#include <vector>



int pow(int base, int exp);
int ackermann2(int m, int n);
int main();

int pow(int base, int exp) {
    int result = 1;
    int i = 0;
    while ((i < exp)) {
        result = (result * base);
        i = (i + 1);
    }
    return result;
}

int ackermann2(int m, int n) {
    if ((m == 0)) {
        return (n + 1);
    }
    if ((m == 1)) {
        return (n + 2);
    }
    if ((m == 2)) {
        return ((2 * n) + 3);
    }
    if ((m == 3)) {
        return ((8 * pow(2, n)) - 3);
    }
    if ((n == 0)) {
        return ackermann2((m - 1), 1);
    }
    return ackermann2((m - 1), (int)(ackermann2(m, (n - 1))));
}

int main() {
    std::cout << (std::string("A(0, 0) = ") + ([&]{ std::ostringstream ss; ss << std::boolalpha << ackermann2(0, 0); return ss.str(); }()));
    std::cout << std::endl;
    std::cout << (std::string("A(1, 2) = ") + ([&]{ std::ostringstream ss; ss << std::boolalpha << ackermann2(1, 2); return ss.str(); }()));
    std::cout << std::endl;
    std::cout << (std::string("A(2, 4) = ") + ([&]{ std::ostringstream ss; ss << std::boolalpha << ackermann2(2, 4); return ss.str(); }()));
    std::cout << std::endl;
    std::cout << (std::string("A(3, 4) = ") + ([&]{ std::ostringstream ss; ss << std::boolalpha << ackermann2(3, 4); return ss.str(); }()));
    std::cout << std::endl;
    return 0;
}
