compile: exit status 1
/workspace/mochi/tests/rosetta/transpiler/CPP/call-an-object-method-2.cpp:49:181: warning: multi-character character constant [-Wmultichar]
   49 |     else if(val.type() == typeid(std::vector<int64_t>)) { const auto& v = std::any_cast<const std::vector<int64_t>&>(val); os << '['; for(size_t i=0;i<v.size();++i){ if(i>0) os << ', '; os << v[i]; } os << ']'; }
      |                                                                                                                                                                                     ^~~~
/workspace/mochi/tests/rosetta/transpiler/CPP/call-an-object-method-2.cpp:50:179: warning: multi-character character constant [-Wmultichar]
   50 |     else if(val.type() == typeid(std::vector<double>)) { const auto& v = std::any_cast<const std::vector<double>&>(val); os << '['; for(size_t i=0;i<v.size();++i){ if(i>0) os << ', '; os << v[i]; } os << ']'; }
      |                                                                                                                                                                                   ^~~~
/workspace/mochi/tests/rosetta/transpiler/CPP/call-an-object-method-2.cpp:51:209: warning: multi-character character constant [-Wmultichar]
   51 |     else if(val.type() == typeid(std::vector<std::vector<int64_t>>)) { const auto& vv = std::any_cast<const std::vector<std::vector<int64_t>>&>(val); os << '['; for(size_t i=0;i<vv.size();++i){ if(i>0) os << ', '; const auto& v = vv[i]; os << '['; for(size_t j=0;j<v.size();++j){ if(j>0) os << ', '; os << v[j]; } os << ']'; } os << ']'; }
      |                                                                                                                                                                                                                 ^~~~
/workspace/mochi/tests/rosetta/transpiler/CPP/call-an-object-method-2.cpp:51:295: warning: multi-character character constant [-Wmultichar]
   51 |     else if(val.type() == typeid(std::vector<std::vector<int64_t>>)) { const auto& vv = std::any_cast<const std::vector<std::vector<int64_t>>&>(val); os << '['; for(size_t i=0;i<vv.size();++i){ if(i>0) os << ', '; const auto& v = vv[i]; os << '['; for(size_t j=0;j<v.size();++j){ if(j>0) os << ', '; os << v[j]; } os << ']'; } os << ']'; }
      |                                                                                                                                                                                                                                                                                                       ^~~~
/workspace/mochi/tests/rosetta/transpiler/CPP/call-an-object-method-2.cpp:52:189: warning: multi-character character constant [-Wmultichar]
   52 |     else if(val.type() == typeid(std::vector<std::string>)) { const auto& v = std::any_cast<const std::vector<std::string>&>(val); os << '['; for(size_t i=0;i<v.size();++i){ if(i>0) os << ', '; os << v[i]; } os << ']'; }
      |                                                                                                                                                                                             ^~~~
/workspace/mochi/tests/rosetta/transpiler/CPP/call-an-object-method-2.cpp:53:183: warning: multi-character character constant [-Wmultichar]
   53 |     else if(val.type() == typeid(std::vector<std::any>)) { const auto& v = std::any_cast<const std::vector<std::any>&>(val); os << '['; for(size_t i=0;i<v.size();++i){ if(i>0) os << ', '; any_to_stream(os, v[i]); } os << ']'; }
      |                                                                                                                                                                                       ^~~~
/workspace/mochi/tests/rosetta/transpiler/CPP/call-an-object-method-2.cpp:54:215: warning: multi-character character constant [-Wmultichar]
   54 |     else if(val.type() == typeid(std::map<std::string, std::any>)) { const auto& m = std::any_cast<const std::map<std::string, std::any>&>(val); os << '{'; bool first=true; for(const auto& p : m){ if(!first) os << ', '; first=false; os << p.first << ': '; any_to_stream(os, p.second); } os << '}'; }
      |                                                                                                                                                                                                                       ^~~~
/workspace/mochi/tests/rosetta/transpiler/CPP/call-an-object-method-2.cpp:54:251: warning: multi-character character constant [-Wmultichar]
   54 |     else if(val.type() == typeid(std::map<std::string, std::any>)) { const auto& m = std::any_cast<const std::map<std::string, std::any>&>(val); os << '{'; bool first=true; for(const auto& p : m){ if(!first) os << ', '; first=false; os << p.first << ': '; any_to_stream(os, p.second); } os << '}'; }
      |                                                                                                                                                                                                                                                           ^~~~
/workspace/mochi/tests/rosetta/transpiler/CPP/call-an-object-method-2.cpp: In function ‘std::vector<std::function<void()> > newFactory()’:
/workspace/mochi/tests/rosetta/transpiler/CPP/call-an-object-method-2.cpp:142:17: error: could not convert ‘std::vector<std::function<std::any()> >(std::initializer_list<std::function<std::any()> >{((const std::function<std::any()>*)(& const std::function<std::any()> [2]{std::function<std::any()>(New), std::function<std::any()>(Count)})), 2}, std::allocator<std::function<std::any()> >())’ from ‘vector<function<std::any()>>’ to ‘vector<function<void()>>’
  142 |     return std::vector<std::function<std::any()>>{New, Count};
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                 |
      |                 vector<function<std::any()>>
