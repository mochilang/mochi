// Generated by Mochi compiler v0.10.28 on 2025-07-18T10:00:42Z
const std = @import("std");

fn handleError(err: anyerror) noreturn {
    std.debug.panic("{any}", .{err});
}

fn abs(x: f64) f64 {
    if (x < 0.0) {
        return -x;
    }
    return x;
}

fn sqrtApprox(x: f64) f64 {
    var guess = x; // f64
    var i = 0; // i32
    while (i < 20) {
        guess = (((guess + (x / guess))) / 2.0);
        i = (i + 1);
    }
    return guess;
}

fn agm(a: f64, g: f64) f64 {
    const eps = 0.00000000000001; // f64
    while (std.math.abs((a - g)) > (std.math.abs(a) * eps)) {
        const newA = (((a + g)) / 2.0); // f64
        const newG = sqrtApprox((a * g)); // f64
        a = newA;
        g = newG;
    }
    return a;
}

fn user_main() void {
    std.debug.print("{s}\n", .{std.fmt.allocPrint(std.heap.page_allocator, "{d:.1}", .{agm(1.0, (1.0 / sqrtApprox(2.0)))}) catch |err| handleError(err)});
}

pub fn main() void {
    user_main();
}
