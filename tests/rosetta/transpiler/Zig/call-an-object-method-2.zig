// Generated by Mochi compiler v0.10.26 on 1970-01-01T00:00:00Z
const std = @import("std");

fn TellSecret(self: *Box) i32 {
    return secret;
}
const Box = struct {
    Contents: []const u8,
    secret: i32,
};

const funcs = newFactory(); // []const fn() void
const New = funcs[0]; // fn() void
const Count = funcs[1]; // fn() void

fn newFactory() []const fn() void {
    var sn = 0; // i32
    const New = (struct { b: i32, sn: i32, fn call(self: @This()) Box {
        sn = (self.sn + 1);
        var b = Box{ .secret = self.sn }; // Box
        if (self.sn == 1) {
            b.Contents = "rabbit";
        } else     if (self.sn == 2) {
            b.Contents = "rock";
        }
        return self.b;
} }{ .b = b, .sn = sn }).call;
    const Count = (struct { sn: i32, fn call(self: @This()) i32 {
        return self.sn;
} }{ .sn = sn }).call;
    return [_]fn() Box{
    New,
    Count,
};
}

pub fn main() void {
}
