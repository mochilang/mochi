// Generated by Mochi compiler v0.10.26 on 1970-01-01T00:00:00Z
const std = @import("std");

const n = &[_]i32{
    1,
    2,
    3,
    4,
    5,
}; // []const i32

fn add(a: i32, b: i32) i32 {
    return (a + b);
}

fn sub(a: i32, b: i32) i32 {
    return (a - b);
}

fn mul(a: i32, b: i32) i32 {
    return (a * b);
}

fn fold(f: fn(i32, i32) i32, xs: []const i32) i32 {
    var r = xs[0]; // i32
    var i = 1; // i32
    while (i < (xs).len) {
        r = f(r, xs[i]);
        i = (i + 1);
    }
    return r;
}

pub fn main() void {
    std.debug.print("{d}\n", .{fold(fn (a: i32, b: i32) i32 {
        return add(a, b);
}, n)});
    std.debug.print("{d}\n", .{fold(fn (a: i32, b: i32) i32 {
        return sub(a, b);
}, n)});
    std.debug.print("{d}\n", .{fold(fn (a: i32, b: i32) i32 {
        return mul(a, b);
}, n)});
}
