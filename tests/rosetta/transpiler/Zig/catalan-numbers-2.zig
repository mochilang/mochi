// Generated by Mochi compiler v0.10.26 on 1970-01-01T00:00:00Z
const std = @import("std");

fn handleError(err: anyerror) noreturn {
    std.debug.panic("{any}", .{err});
}

fn catalanRec(n: i32) i32 {
    if (n == 0) {
        return 1;
    }
    var t1 = (2 * n); // i32
    var t2 = (t1 - 1); // i32
    var t3 = (2 * t2); // i32
    var t5 = (t3 * catalanRec((n - 1))); // i32
    return @as(i32, ((t5 / ((n + 1)))));
}

fn user_main() void {
    for (1 .. 16) |i| {
        std.debug.print("{s}\n", .{std.fmt.allocPrint(std.heap.page_allocator, "{d}", .{catalanRec(i)}) catch |err| handleError(err)});
    }
}

pub fn main() void {
    user_main();
}
