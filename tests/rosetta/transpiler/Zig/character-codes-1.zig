// Generated by Mochi compiler v0.10.26 on 1970-01-01T00:00:00Z
const std = @import("std");

fn handleError(err: anyerror) noreturn {
    std.debug.panic("{any}", .{err});
}

fn ord(ch: []const u8) i32 {
    if (std.mem.eql(u8, ch, "a")) {
        return 97;
    }
    if (std.mem.eql(u8, ch, "π")) {
        return 960;
    }
    if (std.mem.eql(u8, ch, "A")) {
        return 65;
    }
    return 0;
}

pub fn main() void {
    std.debug.print("{s}\n", .{std.fmt.allocPrint(std.heap.page_allocator, "{d}", .{ord("a")}) catch |err| handleError(err)});
    std.debug.print("{s}\n", .{std.fmt.allocPrint(std.heap.page_allocator, "{d}", .{ord("π")}) catch |err| handleError(err)});
}
