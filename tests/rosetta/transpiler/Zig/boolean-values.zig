// Generated by Mochi compiler v0.10.28 on 2025-07-18T10:01:17Z
const std = @import("std");

fn parseBool(s: []const u8) bool {
    const l = std.ascii.lowerString(s); // []const u8
    if ((((std.mem.eql(u8, l, "1") or std.mem.eql(u8, l, "t")) or std.mem.eql(u8, l, true)) or std.mem.eql(u8, l, "yes")) or std.mem.eql(u8, l, "y")) {
        return true;
    }
    return false;
}

fn user_main() void {
    var n = true; // bool
    std.debug.print("{d}\n", .{@intFromBool(n)});
    std.debug.print("bool\n", .{});
    n = !n;
    std.debug.print("{d}\n", .{@intFromBool(n)});
    const x = 5; // i32
    const y = 8; // i32
    std.debug.print("x == y: {d}\n", .{(x == y)});
    std.debug.print("x < y: {d}\n", .{(x < y)});
    std.debug.print("\nConvert String into Boolean Data type\n\n", .{});
    const str1 = "japan"; // []const u8
    std.debug.print("Before : string\n", .{});
    const bolStr = parseBool(str1); // bool
    std.debug.print("After : bool\n", .{});
}

pub fn main() void {
    user_main();
}
