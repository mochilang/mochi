// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, int start, int end) {
  var n = s.length;
  if (start < 0) start += n;
  if (end < 0) end += n;
  if (start < 0) start = 0;
  if (start > n) start = n;
  if (end < 0) end = 0;
  if (end > n) end = n;
  if (start > end) start = end;
  return s.substring(start, end);
}

int parseIntStr(String str) {
  dynamic i = 0;
  dynamic neg = false;
  if (str.length > 0 && _substr(str, 0, 1) == "-") {
    neg = true;
    i = 1;
  }
  dynamic n = 0;
  dynamic digits = {"0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9};
  while (i < str.length) {
    n = n * 10 + digits[_substr(str, i, i + 1)];
    i = i + 1;
  }
  if (neg) {
    n = -n;
  }
  return n;
}

void showTokens(int tokens) {
  print("Tokens remaining " + (tokens).toString());
}

void _main() {
  dynamic tokens = 12;
  dynamic done = false;
  while (!done) {
    showTokens(tokens);
    print("");
    print("How many tokens 1, 2 or 3?");
    dynamic line = stdin.readLineSync() ?? '';
    dynamic t = 0;
    if (line.length > 0) {
    t = int.parse(line);
  }
    if (t < 1 || t > 3) {
    print("\nMust be a number between 1 and 3, try again.\n");
  } else {
    dynamic ct = 4 - t;
    dynamic s = "s";
    if (ct == 1) {
    s = "";
  };
    print("  Computer takes " + (ct).toString() + " token" + s + "\n\n");
    tokens = tokens - 4;
  }
    if (tokens == 0) {
    showTokens(0);
    print("  Computer wins!");
    done = true;
  }
  }
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}

void main() => _start();
