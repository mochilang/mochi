// Generated by Mochi transpiler
num abs(num x) {
  if (x < 0) {
    return -x;
  }
  return x;
}

num maxf(num a, num b) {
  if (a > b) {
    return a;
  }
  return b;
}

bool isClose(num a, num b) {
  final num relTol = 0.000000001;
  final t = a - b.abs();
  final num u = relTol * maxf(a.abs(), b.abs());
  return t.toString().compareTo(u.toString()) <= 0;
}

num sqrtApprox(num x) {
  num guess = x;
  int i = 0;
  while (i < 10) {
    guess = (guess + x / guess) / 2;
    i = i + 1;
  }
  return guess;
}

void main() {
  final num root2 = sqrtApprox(2);
  final List<List<num>> pairs = [[100000000000000.02, 100000000000000.02], [100.01, 100.011], [10000000000000.002 / 10000, 1000000000.0000001], [0.001, 0.0010000001], [0.000000000000000000000101, 0], [root2 * root2, 2], [-root2 * root2, -2], [100000000000000000, 100000000000000000], [3.141592653589793, 3.141592653589793]];
  for (var pair in pairs) {
    final a = pair[0];
    final b = pair[1];
    final String s = isClose(a, b) ? "≈" : "≉";
    print((a).toString() + " " + s + " " + (b).toString());
  }
}

void _start() {
  main();
}
