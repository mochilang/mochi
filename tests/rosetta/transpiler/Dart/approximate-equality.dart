// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  num abs(num x) {
  if (x < 0.0) {
    return -x;
  }
  return x;
}
  num maxf(num a, num b) {
  if (a > b) {
    return a;
  }
  return b;
}
  bool isClose(num a, num b) {
  final num relTol = 0.000000001;
  final num t = (a - b).abs();
  final num u = relTol * maxf(a.abs(), b.abs());
  return t <= u;
}
  num sqrtApprox(num x) {
  num guess = x;
  int i = 0;
  while (i < 10) {
    guess = (guess + x / guess) / 2.0;
    i = i + 1;
  }
  return guess;
}
  void main() {
  final num root2 = sqrtApprox(2.0);
  final List<List<num>> pairs = [[100000000000000.02, 100000000000000.02], [100.01, 100.011], [10000000000000.002 / 10000.0, 1000000000.0000001], [0.001, 0.0010000001], [0.000000000000000000000101, 0.0], [root2 * root2, 2.0], [-root2 * root2, -2.0], [100000000000000000.0, 100000000000000000.0], [3.141592653589793, 3.141592653589793]];
  for (var pair in pairs) {
    final a = pair[0];
    final b = pair[1];
    final String s = isClose(a, b) ? "≈" : "≉";
    print((a).toString() + " " + s + " " + (b).toString());
  }
}
  main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
