// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

num p(num x, num e) {
  num r = 1.0;
  int i = 0;
  while (i < ((e).toInt())) {
    r = r * x;
    i = i + 1;
  }
  return r;
}

List<String> ops = ["-x.p(e)", "-(x).p(e)", "(-x).p(e)", "-(x.p(e))"];
String padInt(num f) {
  String s = ((f).toInt()).toString();
  if (f >= 0) {
    return " " + s;
  }
  return s;
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  for (num x in [-5.0, 5.0]) {
    for (num e in [2.0, 3.0]) {
    dynamic a = -p(x, e);
    dynamic b = -p(x, e);
    dynamic c = p(-x, e);
    dynamic d = -p(x, e);
    print("x = " + (x < 0 ? "" : " ") + ((x).toInt()).toString() + " e = " + ((e).toInt()).toString() + " | " + ops[0] + " = " + padInt(a) + " | " + ops[1] + " = " + padInt(b) + " | " + ops[2] + " = " + padInt(c) + " | " + ops[3] + " = " + padInt(d));
  }
  }
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
