// Generated by Mochi transpiler
int pow_int(int base, int exp) {
  int result = 1;
  int b = base;
  int e = exp;
  while (e > 0) {
    if (e % 2 == 1) {
    result = result * b;
  }
    b = b * b;
    e = e ~/ 2 as int;
  }
  return result;
}

BigInt pow_big(BigInt base, int exp) {
  BigInt result = BigInt.from(1);
  BigInt b = base;
  int e = exp;
  while (e > 0) {
    if (e % 2 == 1) {
    result = result * b;
  }
    b = b * b;
    e = e ~/ 2 as int;
  }
  return result;
}

int e1 = pow_int(3, 2);
int e2 = pow_int(4, e1);
BigInt base = BigInt.from(5);
BigInt x = pow_big(base, e2);
String s = (x).toString();
void main() {
  print(["5^(4^(3^2)) has", s.length, "digits:", s.substring(0, 20), "...", s.substring(s.length - 20, s.length)].join(" "));
}
