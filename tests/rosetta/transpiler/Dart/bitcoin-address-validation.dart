// Generated by Mochi transpiler
int indexOf(String s, String ch) {
  int i = 0;
  while (i < s.length) {
    if (s.substring(i, i + 1) == ch) {
    return i;
  }
    i = i + 1;
  }
  return -1;
}

List<int> set58(String addr) {
  final String tmpl = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";
  List<int> a = [];
  int i = 0;
  while (i < 25) {
    a = [...a, 0];
    i = i + 1;
  }
  int idx = 0;
  while (idx < addr.length) {
    final String ch = addr.substring(idx, idx + 1);
    int c = indexOf(tmpl, ch);
    if (c < 0) {
    return List<int>.from([]);
  }
    int j = 24;
    while (j >= 0) {
    c = c + 58 * a[j];
    a[j] = c % 256;
    c = c ~/ 256 as int;
    j = j - 1;
  }
    if (c > 0) {
    return List<int>.from([]);
  }
    idx = idx + 1;
  }
  return a;
}

List<int> doubleSHA256(List<int> bs) {
  final List<int> first = sha256(bs);
  return sha256(first);
}

List<int> computeChecksum(List<int> a) {
  final List<int> hash = doubleSHA256(a.sublist(0, 21));
  return hash.sublist(0, 4);
}

bool validA58(String addr) {
  final List<int> a = set58(addr);
  if (a.length != 25) {
    return false;
  }
  if (a[0] != 0) {
    return false;
  }
  final List<int> sum = computeChecksum(a);
  int i = 0;
  while (i < 4) {
    if (a[21 + i] != sum[i]) {
    return false;
  }
    i = i + 1;
  }
  return true;
}

void main() {
  print((validA58("1AGNa15ZQXAZUgFiqJ3i7Z2DPU2J6hW62i")).toString());
  print((validA58("17NdbrSGoUotzeGCcMMCqnFkEvLymoou9j")).toString());
}
