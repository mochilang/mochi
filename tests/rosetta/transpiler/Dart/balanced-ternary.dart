// Generated by Mochi transpiler
String trimLeftZeros(String s) {
  int i = 0;
  while (i < s.length && s.substring(i, i + 1) == "0") {
    i = i + 1;
  }
  return s.substring(i, s.length);
}

Map<String, dynamic> btString(String s) {
  s = trimLeftZeros(s);
  List<int> b = [];
  int i = s.length - 1;
  while (i >= 0) {
    final String ch = s.substring(i, i + 1);
    if (ch == "+") {
    b = [...b, 1];
  } else {
    if (ch == "0") {
    b = [...b, 0];
  } else {
    if (ch == "-") {
    b = [...b, 0 - 1];
  } else {
    return {"bt": [], "ok": false};
  };
  };
  }
    i = i - 1;
  }
  return {"bt": b, "ok": true};
}

String btToString(List<int> b) {
  if (b.length == 0) {
    return "0";
  }
  String r = "";
  int i = b.length - 1;
  while (i >= 0) {
    final int d = b[i];
    if (d == 0 - 1) {
    r = r + "-";
  } else {
    if (d == 0) {
    r = r + "0";
  } else {
    r = r + "+";
  };
  }
    i = i - 1;
  }
  return r;
}

List<int> btInt(int i) {
  if (i == 0) {
    return List<int>.from([]);
  }
  int n = i;
  List<int> b = [];
  while (n != 0) {
    int m = n % 3;
    n = n ~/ 3 as int;
    if (m == 2) {
    m = 0 - 1;
    n = n + 1;
  } else {
    if (m == 0 - 2) {
    m = 1;
    n = n - 1;
  };
  }
    b = [...b, m];
  }
  return b;
}

int btToInt(List<int> b) {
  int r = 0;
  int pt = 1;
  int i = 0;
  while (i < b.length) {
    r = r + b[i] * pt;
    pt = pt * 3;
    i = i + 1;
  }
  return r;
}

List<int> btNeg(List<int> b) {
  List<int> r = [];
  int i = 0;
  while (i < b.length) {
    r = [...r, -b[i]];
    i = i + 1;
  }
  return r;
}

List<int> btAdd(List<int> a, List<int> b) {
  return btInt(btToInt(a) + btToInt(b));
}

List<int> btMul(List<int> a, List<int> b) {
  return btInt(btToInt(a) * btToInt(b));
}

String padLeft(String s, int w) {
  String r = s;
  while (r.length < w) {
    r = " " + r;
  }
  return r;
}

void show(String label, List<int> b) {
  final String l = padLeft(label, 7);
  final String bs = padLeft(btToString(b), 12);
  final String is = padLeft((btToInt(b)).toString(), 7);
  print(l + " " + bs + " " + is);
}

void main() {
  final Map<String, dynamic> ares = btString("+-0++0+");
  final a = ares["bt"]!;
  final List<int> b = btInt(-436);
  final Map<String, dynamic> cres = btString("+-++-");
  final c = cres["bt"]!;
  show("a:", a);
  show("b:", b);
  show("c:", c);
  show("a(b-c):", btMul(a, btAdd(b, btNeg(c))));
}

void _start() {
  main();
}
