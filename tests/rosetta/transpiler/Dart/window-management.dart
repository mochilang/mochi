// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, int start, int end) {
  var n = s.length;
  if (start < 0) start += n;
  if (end < 0) end += n;
  if (start < 0) start = 0;
  if (start > n) start = n;
  if (end < 0) end = 0;
  if (end > n) end = n;
  if (start > end) start = end;
  return s.substring(start, end);
}

class Window {
  int x;
  int y;
  int w;
  int h;
  bool maximized;
  bool iconified;
  bool visible;
  bool shifted;
  Window({required this.x, required this.y, required this.w, required this.h, required this.maximized, required this.iconified, required this.visible, required this.shifted});
}

void showState(Window w, String label) {
  print(label + ": pos=(" + (w.x).toString() + "," + (w.y).toString() + ") size=(" + (w.w).toString() + "x" + (w.h).toString() + ") max=" + (w.maximized).toString() + " icon=" + (w.iconified).toString() + " visible=" + (w.visible).toString());
}

Window maximize(Window w) {
  w.maximized = true;
  w.w = 800;
  w.h = 600;
  return w;
}

Window unmaximize(Window w) {
  w.maximized = false;
  w.w = 640;
  w.h = 480;
  return w;
}

Window iconify(Window w) {
  w.iconified = true;
  w.visible = false;
  return w;
}

Window deiconify(Window w) {
  w.iconified = false;
  w.visible = true;
  return w;
}

Window hide(Window w) {
  w.visible = false;
  return w;
}

Window showWindow(Window w) {
  w.visible = true;
  return w;
}

Window move(Window w) {
  if (w.shifted) {
    w.x = w.x - 10;
    w.y = w.y - 10;
  } else {
    w.x = w.x + 10;
    w.y = w.y + 10;
  }
  w.shifted = !w.shifted;
  return w;
}

void _main() {
  dynamic win = Window(x: 100, y: 100, w: 640, h: 480, maximized: false, iconified: false, visible: true, shifted: false);
  showState(win, "Start");
  win = maximize(win);
  showState(win, "Maximize");
  win = unmaximize(win);
  showState(win, "Unmaximize");
  win = iconify(win);
  showState(win, "Iconify");
  win = deiconify(win);
  showState(win, "Deiconify");
  win = hide(win);
  showState(win, "Hide");
  win = showWindow(win);
  showState(win, "Show");
  win = move(win);
  showState(win, "Move");
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}

void main() => _start();
