// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

bool kPrime(int n, int k) {
  int nf = 0;
  int i = 2;
  while (i <= n) {
    while (n % i == 0) {
    if (nf == k) {
    return false;
  }
    nf = nf + 1;
    n = n ~/ i;
  }
    i = i + 1;
  }
  return nf == k;
}

List<int> gen(int k, int count) {
  List<int> r = <int>[];
  int n = 2;
  while (r.length < count) {
    if (kPrime(n, k)) {
    r = [...r, n];
  }
    n = n + 1;
  }
  return r;
}

void _main() {
  int k = 1;
  while (k <= 5) {
    print((k).toString() + " " + (gen(k, 10)).toString());
    k = k + 1;
  }
}

void _start() {
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
}

void main() => _start();
