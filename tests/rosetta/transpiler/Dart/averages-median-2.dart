// Generated by Mochi transpiler
num sel(List<num> list, int k) {
  int i = 0;
  while (i <= k) {
    int minIndex = i;
    int j = i + 1;
    while (j < list.length) {
    if (list[j] < list[minIndex]) {
    minIndex = j;
  }
    j = j + 1;
  }
    final num tmp = list[i];
    list[i] = list[minIndex];
    list[minIndex] = tmp;
    i = i + 1;
  }
  return list[k];
}

num median(List<num> a) {
  List<num> arr = a;
  final int half = arr.length ~/ 2 as int;
  final num med = sel(arr, half);
  if (arr.length % 2 == 0) {
    return (med + arr[half - 1]) / 2.0;
  }
  return med;
}

void main() {
  print((median([3.0, 1.0, 4.0, 1.0])).toString());
  print((median([3.0, 1.0, 4.0, 1.0, 5.0])).toString());
}
