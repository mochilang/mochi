// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, int start, int end) {
  var n = s.length;
  if (start < 0) start += n;
  if (end < 0) end += n;
  if (start < 0) start = 0;
  if (start > n) start = n;
  if (end < 0) end = 0;
  if (end > n) end = n;
  if (start > end) start = end;
  return s.substring(start, end);
}

String pad2(int n) {
  if (n < 10) {
    return "0" + (n).toString();
  }
  return (n).toString();
}

String weekdayName(int z) {
  List<String> names = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
  return names[(z + 4) % 7];
}

void _main() {
  int ts = _now() ~/ 1000000000 as int;
  int days = ts ~/ 86400 as int;
  int z = days + 719468;
  int era = z ~/ 146097 as int;
  int doe = z - era * 146097;
  int yoe = (doe - doe ~/ 1460 + doe ~/ 36524 - doe ~/ 146096) ~/ (365 as int);
  int y = yoe + era * 400;
  int doy = doe - 365 * yoe + yoe ~/ 4 - yoe ~/ 100;
  int mp = (5 * doy + 2) ~/ (153 as int);
  int d = doy - (153 * mp + 2) ~/ (5 as int) + 1 as int;
  int m = mp + 3 as int;
  if (m > 12) {
    y = y + 1;
    m = m - 12;
  }
  String iso = (y).toString() + "-" + pad2(m) + "-" + pad2(d);
  print(iso);
  List<String> months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
  String line = weekdayName(days) + ", " + months[m - 1] + " " + (d).toString() + ", " + (y).toString();
  print(line);
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}

void main() => _start();
