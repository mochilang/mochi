// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  final num PI = 3.141592653589793;
  num sinApprox(num x) {
  num term = x;
  num sum = x;
  int n = 1;
  while (n <= 12) {
    final num denom = (2 * n * (2 * n + 1)).toDouble();
    term = -term * x * x / denom;
    sum = sum + term;
    n = n + 1;
  }
  return sum;
}
  final num dt = 0.01;
  num s = 0.0;
  num t1 = 0.0;
  num k1 = sinApprox(0.0);
  int i = 1;
  while (i <= 200) {
    final num t2 = ((i).toDouble()) * dt;
    final num k2 = sinApprox(t2 * PI);
    s = s + (k1 + k2) * 0.5 * (t2 - t1);
    t1 = t2;
    k1 = k2;
    i = i + 1;
  }
  int i2 = 1;
  while (i2 <= 50) {
    final num t2 = 2.0 + ((i2).toDouble()) * dt;
    final num k2 = 0.0;
    s = s + (k1 + k2) * 0.5 * (t2 - t1);
    t1 = t2;
    k1 = k2;
    i2 = i2 + 1;
  }
  print(s);
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
