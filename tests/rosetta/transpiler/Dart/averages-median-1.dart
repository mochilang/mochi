// Generated by Mochi transpiler
List<num> sortFloat(List<num> xs) {
  List<num> arr = xs;
  int n = arr.length;
  int i = 0;
  while (i < n) {
    int j = 0;
    while (j < n - 1) {
    if (arr[j] > arr[j + 1]) {
    final num tmp = arr[j];
    arr[j] = arr[j + 1];
    arr[j + 1] = tmp;
  }
    j = j + 1;
  }
    i = i + 1;
  }
  return arr;
}

num median(List<num> a) {
  List<num> arr = sortFloat(a);
  final int half = arr.length ~/ 2 as int;
  num m = arr[half];
  if (arr.length % 2 == 0) {
    m = (m + arr[half - 1]) / 2.0;
  }
  return m;
}

void main() {
  print((median([3.0, 1.0, 4.0, 1.0])).toString());
  print((median([3.0, 1.0, 4.0, 1.0, 5.0])).toString());
}
