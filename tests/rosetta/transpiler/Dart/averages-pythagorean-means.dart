// Generated by Mochi transpiler
num powf(num base, int exp) {
  num result = 1.0;
  int i = 0;
  while (i < exp) {
    result = result * base;
    i = i + 1;
  }
  return result;
}

num nthRoot(num x, int n) {
  num low = 0.0;
  num high = x;
  int i = 0;
  while (i < 60) {
    final num mid = (low + high) / 2.0;
    if (powf(mid, n) > x) {
    high = mid;
  } else {
    low = mid;
  }
    i = i + 1;
  }
  return low;
}

void main() {
  num sum = 0.0;
  num sumRecip = 0.0;
  num prod = 1.0;
  int n = 1;
  while (n <= 10) {
    final num f = (n).toDouble();
    sum = sum + f;
    sumRecip = sumRecip + 1.0 / f;
    prod = prod * f;
    n = n + 1;
  }
  final num count = 10.0;
  final num a = sum / count;
  final num g = nthRoot(prod, 10);
  final num h = count / sumRecip;
  print("A: " + (a).toString() + " G: " + (g).toString() + " H: " + (h).toString());
  print("A >= G >= H: " + (a >= g && g >= h).toString());
}

void _start() {
  main();
}
