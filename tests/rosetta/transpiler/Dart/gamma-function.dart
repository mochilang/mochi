// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, int start, int end) {
  var n = s.length;
  if (start < 0) start += n;
  if (end < 0) end += n;
  if (start < 0) start = 0;
  if (start > n) start = n;
  if (end < 0) end = 0;
  if (end > n) end = n;
  if (start > end) start = end;
  return s.substring(start, end);
}

num ln(num x) {
  num k = 0.0;
  num v = x;
  while (v >= 2.0) {
    v = v / 2.0;
    k = k + 1.0;
  }
  while (v < 1.0) {
    v = v * 2.0;
    k = k - 1.0;
  }
  num z = (v - 1.0) / (v + 1.0);
  num zpow = z;
  num sum = z;
  int i = 3;
  while (i <= 9) {
    zpow = zpow * z * z;
    sum = sum + zpow / ((i).toDouble());
    i = i + 2;
  }
  num ln2 = 0.6931471805599453;
  return k * ln2 + 2.0 * sum;
}

num expf(num x) {
  num term = 1.0;
  num sum = 1.0;
  int i = 1;
  while (i < 20) {
    term = term * x / ((i).toDouble());
    sum = sum + term;
    i = i + 1;
  }
  return sum;
}

num powf(num base, num exp) {
  return expf(exp * ln(base));
}

num lanczos7(num z) {
  num t = z + 6.5;
  num x = 0.9999999999998099 + 676.5203681218851 / z - 1259.1392167224028 / (z + 1.0) + 771.3234287776531 / (z + 2.0) - 176.6150291621406 / (z + 3.0) + 12.507343278686905 / (z + 4.0) - 0.13857109526572012 / (z + 5.0) + 0.000009984369578019572 / (z + 6.0) + 0.00000015056327351493116 / (z + 7.0);
  return 2.5066282746310002 * powf(t, z - 0.5) * powf(2.718281828459045, -t) * x;
}

List<num> xs = [-0.5, 0.1, 0.5, 1.0, 1.5, 2.0, 3.0, 10.0, 140.0, 170.0];
void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  for (num x in xs) {
    print((x).toString() + " " + (lanczos7(x)).toString());
  }
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
