// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, int start, int end) {
  var n = s.length;
  if (start < 0) start += n;
  if (end < 0) end += n;
  if (start < 0) start = 0;
  if (start > n) start = n;
  if (end < 0) end = 0;
  if (end > n) end = n;
  if (start > end) start = end;
  return s.substring(start, end);
}

String _repeat(String s, int n) => List.filled(n, s).join();

String repeat(String ch, int n) {
  String s = "";
  int i = 0;
  while (i < n) {
    s = s + ch;
    i = i + 1;
  }
  return s;
}

void cubLine(int n, int dx, int dy, String cde) {
  String line = _repeat(" ", n + 1) + _substr(cde, 0, 1);
  int d = 9 * dx - 1;
  while (d > 0) {
    line = line + _substr(cde, 1, 2);
    d = d - 1;
  }
  line = line + _substr(cde, 0, 1);
  line = line + _repeat(" ", dy) + _substr(cde, 2, cde.length);
  print(line);
}

void cuboid(int dx, int dy, int dz) {
  print("cuboid " + (dx).toString() + " " + (dy).toString() + " " + (dz).toString() + ":");
  cubLine(dy + 1, dx, 0, "+-");
  int i = 1;
  while (i <= dy) {
    cubLine(dy - i + 1, dx, i - 1, "/ |");
    i = i + 1;
  }
  cubLine(0, dx, dy, "+-|");
  int j = 4 * dz - dy - 2;
  while (j > 0) {
    cubLine(0, dx, dy, "| |");
    j = j - 1;
  }
  cubLine(0, dx, dy, "| +");
  i = 1;
  while (i <= dy) {
    cubLine(0, dx, dy - i, "| /");
    i = i + 1;
  }
  cubLine(0, dx, 0, "+-\n");
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  cuboid(2, 3, 4);
  print("");
  cuboid(1, 1, 1);
  print("");
  cuboid(6, 2, 1);
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
