// Generated by Mochi transpiler
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

class Pixel {
  int R;
  int G;
  int B;
  Pixel({required this.R, required this.G, required this.B});
}

class Bitmap {
  int cols;
  int rows;
  List<List<Pixel>> px;
  Bitmap({required this.cols, required this.rows, required this.px});
}

Pixel pixelFromRgb(int c) {
  final int r = (c ~/ 65536 as int) % 256;
  final int g = (c ~/ 256 as int) % 256;
  final int b = c % 256;
  return Pixel(R: r, G: g, B: b);
}

int rgbFromPixel(Pixel p) {
  return p.R * 65536 + p.G * 256 + p.B;
}

Bitmap NewBitmap(int x, int y) {
  List<List<Pixel>> data = [];
  int row = 0;
  while (row < y) {
    List<Pixel> r = [];
    int col = 0;
    while (col < x) {
    r = [...r, Pixel(R: 0, G: 0, B: 0)];
    col = col + 1;
  }
    data = [...data, r];
    row = row + 1;
  }
  return Bitmap(cols: x, rows: y, px: data);
}

void FillRgb(Bitmap b, int c) {
  int y = 0;
  final Pixel p = pixelFromRgb(c);
  while (y < b.rows) {
    int x = 0;
    while (x < b.cols) {
    List<List<Pixel>> px = b.px;
    List<Pixel> row = px[y];
    row[x] = p;
    px[y] = row;
    b.px = px;
    x = x + 1;
  }
    y = y + 1;
  }
}

bool SetPxRgb(Bitmap b, int x, int y, int c) {
  if (x < 0 || x >= b.cols || y < 0 || y >= b.rows) {
    return false;
  }
  List<List<Pixel>> px = b.px;
  List<Pixel> row = px[y];
  row[x] = pixelFromRgb(c);
  px[y] = row;
  b.px = px;
  return true;
}

int nextRand(int seed) {
  return (seed * 1664525 + 1013904223) % 2147483648;
}

void main() {
  Bitmap bm = NewBitmap(400, 300);
  FillRgb(bm, 12615744);
  int seed = _now();
  int i = 0;
  while (i < 2000) {
    seed = nextRand(seed);
    final int x = seed % 400;
    seed = nextRand(seed);
    final int y = seed % 300;
    SetPxRgb(bm, x, y, 8405024);
    i = i + 1;
  }
  int x = 0;
  while (x < 400) {
    int y = 240;
    while (y < 245) {
    SetPxRgb(bm, x, y, 8405024);
    y = y + 1;
  }
    y = 260;
    while (y < 265) {
    SetPxRgb(bm, x, y, 8405024);
    y = y + 1;
  }
    x = x + 1;
  }
  int y = 0;
  while (y < 300) {
    int x = 80;
    while (x < 85) {
    SetPxRgb(bm, x, y, 8405024);
    x = x + 1;
  }
    x = 95;
    while (x < 100) {
    SetPxRgb(bm, x, y, 8405024);
    x = x + 1;
  }
    y = y + 1;
  }
}

void _start() {
  _initNow();
  main();
}
