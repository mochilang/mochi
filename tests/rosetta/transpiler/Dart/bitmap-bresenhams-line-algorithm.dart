// Generated by Mochi transpiler
class Point {
  int x;
  int y;
  Point({required this.x, required this.y});
}

int absi(int x) {
  if (x < 0) {
    return -x;
  }
  return x;
}

List<Point> bresenham(int x0, int y0, int x1, int y1) {
  int dx = absi(x1 - x0);
  int dy = absi(y1 - y0);
  int sx = -1;
  if (x0 < x1) {
    sx = 1;
  }
  int sy = -1;
  if (y0 < y1) {
    sy = 1;
  }
  int err = dx - dy;
  List<Point> pts = [];
  while (true) {
    pts = [...pts, Point(x: x0, y: y0)];
    if (x0 == x1 && y0 == y1) {
    break;
  }
    int e2 = 2 * err;
    if (e2 > -dy) {
    err = err - dy;
    x0 = x0 + sx;
  }
    if (e2 < dx) {
    err = err + dx;
    y0 = y0 + sy;
  }
  }
  return pts;
}

void main() {
  final List<Point> pts = bresenham(0, 0, 6, 4);
  int i = 0;
  while (i < pts.length) {
    final Point p = pts[i];
    print("(" + (p.x).toString() + "," + (p.y).toString() + ")");
    i = i + 1;
  }
}

void _start() {
  main();
}
