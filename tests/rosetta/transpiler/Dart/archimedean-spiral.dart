// Generated by Mochi transpiler
final num PI = 3.141592653589793;
num sinApprox(num x) {
  num term = x;
  num sum = x;
  int n = 1;
  while (n <= 10) {
    final num denom = (2 * n * (2 * n + 1)).toDouble();
    term = -term * x * x / denom;
    sum = sum + term;
    n = n + 1;
  }
  return sum;
}

num cosApprox(num x) {
  num term = 1;
  num sum = 1;
  int n = 1;
  while (n <= 10) {
    final num denom = ((2 * n - 1) * 2 * n).toDouble();
    term = -term * x * x / denom;
    sum = sum + term;
    n = n + 1;
  }
  return sum;
}

final num degreesIncr = 0.1 * PI / 180;
final num turns = 2;
final num stop = 360 * turns * 10 * degreesIncr;
final num width = 600;
final num centre = width / 2;
final num a = 1;
final num b = 20;
num theta = 0;
int count = 0;
void main() {
  while (theta < stop) {
    final num r = a + b * theta;
    final num x = r * cosApprox(theta);
    final num y = r * sinApprox(theta);
    if (count % 100 == 0) {
    print((centre + x).toString() + "," + (centre - y).toString());
  }
    theta = theta + degreesIncr;
    count = count + 1;
  }
}
