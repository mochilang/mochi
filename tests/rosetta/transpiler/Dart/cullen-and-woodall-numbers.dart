// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, int start, int end) {
  var n = s.length;
  if (start < 0) start += n;
  if (end < 0) end += n;
  if (start < 0) start = 0;
  if (start > n) start = n;
  if (end < 0) end = 0;
  if (end > n) end = n;
  if (start > end) start = end;
  return s.substring(start, end);
}

BigInt pow_big(BigInt base, int exp) {
  BigInt result = BigInt.from(1);
  BigInt b = base;
  int e = exp;
  while (e > 0) {
    if (e % 2 == 1) {
    result = result * b;
  }
    b = b * b;
    e = e ~/ 2 as int;
  }
  return result;
}

BigInt cullen(int n) {
  BigInt two_n = pow_big(BigInt.from(2), n);
  return two_n * (BigInt.from(n)) + (BigInt.from(1));
}

BigInt woodall(int n) {
  return cullen(n) - (BigInt.from(2));
}

String show_list(List<BigInt> xs) {
  String line = "";
  int i = 0;
  while (i < xs.length) {
    line = line + (xs[i]).toString();
    if (i < xs.length - 1) {
    line = line + " ";
  }
    i = i + 1;
  }
  return line;
}

void _main() {
  List<BigInt> cnums = <BigInt>[];
  int i = 1;
  while (i <= 20) {
    cnums = [...cnums, cullen(i)];
    i = i + 1;
  }
  print("First 20 Cullen numbers (n * 2^n + 1):");
  print(show_list(cnums));
  List<BigInt> wnums = <BigInt>[];
  i = 1;
  while (i <= 20) {
    wnums = [...wnums, woodall(i)];
    i = i + 1;
  }
  print("\nFirst 20 Woodall numbers (n * 2^n - 1):");
  print(show_list(wnums));
  List<BigInt> cprimes = [BigInt.from(1), BigInt.from(141), BigInt.from(4713), BigInt.from(5795), BigInt.from(6611)];
  print("\nFirst 5 Cullen primes (in terms of n):");
  print(show_list(cprimes));
  List<BigInt> wprimes = [BigInt.from(2), BigInt.from(3), BigInt.from(6), BigInt.from(30), BigInt.from(75), BigInt.from(81), BigInt.from(115), BigInt.from(123), BigInt.from(249), BigInt.from(362), BigInt.from(384), BigInt.from(462)];
  print("\nFirst 12 Woodall primes (in terms of n):");
  print(show_list(wprimes));
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}

void main() => _start();
