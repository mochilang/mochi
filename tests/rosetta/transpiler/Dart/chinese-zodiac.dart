// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, int start, int end) {
  var n = s.length;
  if (start < 0) start += n;
  if (end < 0) end += n;
  if (start < 0) start = 0;
  if (start > n) start = n;
  if (end < 0) end = 0;
  if (end > n) end = n;
  if (start > end) start = end;
  return s.substring(start, end);
}

class Info {
  String animal;
  String yinYang;
  String element;
  String stemBranch;
  int cycle;
  Info({required this.animal, required this.yinYang, required this.element, required this.stemBranch, required this.cycle});
}

List<String> animal = ["Rat", "Ox", "Tiger", "Rabbit", "Dragon", "Snake", "Horse", "Goat", "Monkey", "Rooster", "Dog", "Pig"];
List<String> yinYang = ["Yang", "Yin"];
List<String> element = ["Wood", "Fire", "Earth", "Metal", "Water"];
List<String> stemChArr = ["甲", "乙", "丙", "丁", "戊", "己", "庚", "辛", "壬", "癸"];
List<String> branchChArr = ["子", "丑", "寅", "卯", "辰", "巳", "午", "未", "申", "酉", "戌", "亥"];
Info cz(int yr, List<String> animal, List<String> yinYang, List<String> element, List<String> sc, List<String> bc) {
  int y = yr - 4;
  int stem = y % 10;
  int branch = y % 12;
  String sb = sc[stem] + bc[branch];
  return Info(animal: animal[branch] as String, yinYang: yinYang[stem % 2] as String, element: element[stem ~/ 2 as int] as String, stemBranch: sb, cycle: y % 60 + 1);
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  for (int yr in [1935, 1938, 1968, 1972, 1976]) {
    Info r = cz(yr, animal, yinYang, element, stemChArr, branchChArr);
    print((yr).toString() + ": " + r.element + " " + r.animal + ", " + r.yinYang + ", Cycle year " + (r.cycle).toString() + " " + r.stemBranch);
  }
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
