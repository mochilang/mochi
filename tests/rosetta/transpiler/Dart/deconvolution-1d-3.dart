// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, int start, int end) {
  var n = s.length;
  if (start < 0) start += n;
  if (end < 0) end += n;
  if (start < 0) start = 0;
  if (start > n) start = n;
  if (end < 0) end = 0;
  if (end > n) end = n;
  if (start > end) start = end;
  return s.substring(start, end);
}

int indexOf(String s, String ch) {
  int i = 0;
  while (i < s.length) {
    if (_substr(s, i, i + 1) == ch) {
    return i;
  }
    i = i + 1;
  }
  return -1;
}

String fmt1(num x) {
  num y = (((x * 10.0 + 0.5).toInt()).toDouble()) / 10.0;
  String s = (y).toString();
  int dot = s.indexOf(".");
  if (dot < 0) {
    s = s + ".0";
  }
  return s;
}

void printColumnMatrix(List<num> xs) {
  if (xs.length == 0) {
    return;
  }
  print("⎡" + fmt1(xs[0]) + "⎤");
  int i = 1;
  while (i < xs.length - 1) {
    print("⎢" + fmt1(xs[i]) + "⎥");
    i = i + 1;
  }
  print("⎣ " + fmt1(xs[xs.length - 1]) + "⎦");
}

List<num> deconv(List<num> g, List<num> f) {
  List<num> h = <num>[];
  int n = 0;
  int hn = g.length - f.length + 1;
  while (n < hn) {
    num v = g[n];
    int lower = 0;
    if (n >= f.length) {
    lower = n - f.length + 1;
  }
    int i = lower;
    while (i < n) {
    v = v - h[i] * f[n - i];
    i = i + 1;
  }
    v = v / f[0];
    h = [...h, v];
    n = n + 1;
  }
  return h;
}

void _main() {
  List<num> h = [-8.0, -9.0, -3.0, -1.0, -6.0, 7.0];
  List<num> f = [-3.0, -6.0, -1.0, 8.0, -6.0, 3.0, -1.0, -9.0, -9.0, 3.0, -2.0, 5.0, 2.0, -2.0, -7.0, -1.0];
  List<num> g = [24.0, 75.0, 71.0, -34.0, 3.0, 22.0, -45.0, 23.0, 245.0, 25.0, 52.0, 25.0, -67.0, -96.0, 96.0, 31.0, 55.0, 36.0, 29.0, -43.0, -7.0];
  print("deconv(g, f) =");
  printColumnMatrix(deconv(g, f));
  print("");
  print("deconv(g, h) =");
  printColumnMatrix(deconv(g, h));
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}

void main() => _start();
