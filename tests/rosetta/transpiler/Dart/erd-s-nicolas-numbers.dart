// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, int start, int end) {
  var n = s.length;
  if (start < 0) start += n;
  if (end < 0) end += n;
  if (start < 0) start = 0;
  if (start > n) start = n;
  if (end < 0) end = 0;
  if (end > n) end = n;
  if (start > end) start = end;
  return s.substring(start, end);
}

int maxNumber = 100000000;
List<int> dsum = <int>[];
List<int> dcount = <int>[];
int i = 0;
String pad8(int n) {
  String s = (n).toString();
  while (s.length < 8) {
    s = " " + s;
  }
  return s;
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  while (i <= maxNumber) {
    dsum = [...dsum, 1];
    dcount = [...dcount, 1];
    i = i + 1;
  }
  i = 2;
  while (i <= maxNumber) {
    int j = i + i;
    while (j <= maxNumber) {
    if (dsum[j] == j) {
    print(pad8(j) + " equals the sum of its first " + (dcount[j]).toString() + " divisors");
  }
    dsum[j] = dsum[j] + i;
    dcount[j] = dcount[j] + 1;
    j = j + i;
  }
    i = i + 1;
  }
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
