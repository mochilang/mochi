// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, int start, int end) {
  var n = s.length;
  if (start < 0) start += n;
  if (end < 0) end += n;
  if (start < 0) start = 0;
  if (start > n) start = n;
  if (end < 0) end = 0;
  if (end > n) end = n;
  if (start > end) start = end;
  return s.substring(start, end);
}

bool isPrime(int n) {
  if (n < 2) {
    return false;
  }
  if (n % 2 == 0) {
    return n == 2;
  }
  if (n % 3 == 0) {
    return n == 3;
  }
  int d = 5;
  while (d * d <= n) {
    if (n % d == 0) {
    return false;
  }
    d = d + 2;
    if (n % d == 0) {
    return false;
  }
    d = d + 4;
  }
  return true;
}

List<int> circs = <int>[];
bool isCircular(int n) {
  int nn = n;
  int pow = 1;
  while (nn > 0) {
    pow = pow * 10;
    nn = nn ~/ 10;
  }
  nn = n;
  while (true) {
    nn = nn * 10;
    int f = nn ~/ pow;
    nn = nn + f * (1 - pow);
    if (nn == n) {
    break;
  }
    if (!isPrime(nn)) {
    return false;
  }
  }
  return true;
}

List<int> digits = [1, 3, 7, 9];
List<int> q = [1, 2, 3, 5, 7, 9];
List<int> fq = [1, 2, 3, 5, 7, 9];
int count = 0;
String showList(List<int> xs) {
  String out = "[";
  int i = 0;
  while (i < xs.length) {
    out = out + (xs[i]).toString();
    if (i < xs.length - 1) {
    out = out + ", ";
  }
    i = i + 1;
  }
  return out + "]";
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print("The first 19 circular primes are:");
  while (true) {
    int f = q[0];
    int fd = fq[0];
    if (isPrime(f) && isCircular(f)) {
    circs = [...circs, f];
    count = count + 1;
    if (count == 19) {
    break;
  };
  }
    q = q.sublist(1, q.length);
    fq = fq.sublist(1, fq.length);
    if (f != 2 && f != 5) {
    for (var d in digits) {
    q = [...q, f * 10 + d];
    fq = [...fq, fd];
  };
  }
  }
  print(showList(circs));
  print("\nThe next 4 circular primes, in repunit format, are:");
  print("[R(19) R(23) R(317) R(1031)]");
  print("\nThe following repunits are probably circular primes:");
  for (var i in [5003, 9887, 15073, 25031, 35317, 49081]) {
    print("R(" + (i).toString() + ") : true");
  }
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
