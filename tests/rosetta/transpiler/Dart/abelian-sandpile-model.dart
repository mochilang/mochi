// Generated by Mochi transpiler
final int dim = 16;
List<List<int>> newPile(int d) {
  List<List<int>> b = [];
  int y = 0;
  while (y < d) {
    List<int> row = [];
    int x = 0;
    while (x < d) {
    row = [...row, 0];
    x = x + 1;
  }
    b = [...b, row];
    y = y + 1;
  }
  return b;
}

List<List<int>> handlePile(List<List<int>> pile, int x, int y) {
  if (pile[y]![x] >= 4) {
    pile[y]![x] = pile[y]![x] - 4;
    if (y > 0) {
    pile[y - 1]![x] = pile[y - 1]![x] + 1;
    if (pile[y - 1]![x] >= 4) {
    pile = handlePile(pile, x, y - 1);
  };
  };
    if (x > 0) {
    pile[y]![x - 1] = pile[y]![x - 1] + 1;
    if (pile[y]![x - 1] >= 4) {
    pile = handlePile(pile, x - 1, y);
  };
  };
    if (y < dim - 1) {
    pile[y + 1]![x] = pile[y + 1]![x] + 1;
    if (pile[y + 1]![x] >= 4) {
    pile = handlePile(pile, x, y + 1);
  };
  };
    if (x < dim - 1) {
    pile[y]![x + 1] = pile[y]![x + 1] + 1;
    if (pile[y]![x + 1] >= 4) {
    pile = handlePile(pile, x + 1, y);
  };
  };
    pile = handlePile(pile, x, y);
  }
  return pile;
}

void drawPile(List<List<int>> pile, int d) {
  final List<String> chars = [" ", "░", "▓", "█"];
  int row = 0;
  while (row < d) {
    String line = "";
    int col = 0;
    while (col < d) {
    var v = pile[row]![col];
    if (v > 3) {
    v = 3;
  }
    line = line + chars[v];
    col = col + 1;
  }
    print(line);
    row = row + 1;
  }
}

void main() {
  List<List<int>> pile = newPile(16);
  final int hdim = 7;
  pile[hdim]![hdim] = 16;
  pile = handlePile(pile, hdim, hdim);
  drawPile(pile, 16);
}

void _start() {
  main();
  main();
}
