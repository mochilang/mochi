// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

num floorf(num x) {
  int y = (x).toInt();
  return (y).toDouble();
}

int indexOf(String s, String ch) {
  int i = 0;
  while (i < s.length) {
    if (_substr(s, i, i + 1) == ch) {
    return i;
  }
    i = i + 1;
  }
  return 0 - 1;
}

String fmt8(num x) {
  num y = floorf(x * 100000000.0 + 0.5) / 100000000.0;
  String s = (y).toString();
  int dot = s.indexOf(".");
  if (dot == 0 - 1) {
    s = s + ".00000000";
  } else {
    int decs = s.length - dot - 1;
    while (decs < 8) {
    s = s + "0";
    decs = decs + 1;
  };
  }
  return s;
}

String pad2(int x) {
  String s = (x).toString();
  if (s.length < 2) {
    s = " " + s;
  }
  return s;
}

void _main() {
  int maxIt = 13;
  int maxItJ = 10;
  num a1 = 1.0;
  num a2 = 0.0;
  num d1 = 3.2;
  print(" i       d");
  int i = 2;
  while (i <= maxIt) {
    num a = a1 + (a1 - a2) / d1;
    int j = 1;
    while (j <= maxItJ) {
    num x = 0.0;
    num y = 0.0;
    int k = 1;
    int limit = pow_int(2, i);
    while (k <= limit) {
    y = 1.0 - 2.0 * y * x;
    x = a - x * x;
    k = k + 1;
  }
    a = a - x / y;
    j = j + 1;
  }
    num d = (a1 - a2) / (a - a1);
    print(pad2(i) + "    " + fmt8(d));
    d1 = d;
    a2 = a1;
    a1 = a;
    i = i + 1;
  }
}

int pow_int(int base, int exp) {
  int r = 1;
  int b = base;
  int e = exp;
  while (e > 0) {
    if (e % 2 == 1) {
    r = r * b;
  }
    b = b * b;
    e = e ~/ 2 as int;
  }
  return r;
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}

void main() => _start();
