// Generated by Mochi transpiler
int seed = 1;
int prng(int max) {
  seed = (seed * 1103515245 + 12345) % 2147483648;
  return seed % max;
}

String gen(int n) {
  List<String> arr = [];
  int i = 0;
  while (i < n) {
    arr = [...arr, "["];
    arr = [...arr, "]"];
    i = i + 1;
  }
  int j = arr.length - 1;
  while (j > 0) {
    final int k = prng(j + 1);
    final String tmp = arr[j];
    arr[j] = arr[k];
    arr[k] = tmp;
    j = j - 1;
  }
  String out = "";
  for (var ch in arr) {
    out = out + ch;
  }
  return out;
}

void testBalanced(String s) {
  int open = 0;
  int i = 0;
  while (i < s.length) {
    final String c = s.substring(i, i + 1);
    if (c == "[") {
    open = open + 1;
  } else {
    if (c == "]") {
    if (open == 0) {
    print(s + ": not ok");
    return;
  };
    open = open - 1;
  } else {
    print(s + ": not ok");
    return;
  };
  }
    i = i + 1;
  }
  if (open == 0) {
    print(s + ": ok");
  } else {
    print(s + ": not ok");
  }
}

void main() {
  int i = 0;
  while (i < 10) {
    testBalanced(gen(i));
    i = i + 1;
  }
  testBalanced("()");
}

void _start() {
  main();
}
