// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

int intSqrt(int x) {
  if (x < 2) {
    return x;
  }
  int left = 1;
  int right = x ~/ 2;
  int ans = 0;
  while (left <= right) {
    final int mid = left + (right - left) ~/ 2;
    final int sq = mid * mid;
    if (sq == x) {
    return mid;
  }
    if (sq < x) {
    left = mid + 1;
    ans = mid;
  } else {
    right = mid - 1;
  }
  }
  return ans;
}

int sumRecip(int n) {
  int s = 1;
  final int limit = intSqrt(n);
  int f = 2;
  while (f <= limit) {
    if (n % f == 0) {
    s = s + n ~/ f;
    final int f2 = n ~/ f;
    if (f2 != f) {
    s = s + f;
  };
  }
    f = f + 1;
  }
  return s;
}

void main() {
  final List<int> nums = [6, 28, 120, 496, 672, 8128, 30240, 32760, 523776];
  for (var n in nums) {
    final int s = sumRecip(n);
    if (s % n == 0) {
    final num val = s / n;
    String perfect = "";
    if (val == 1) {
    perfect = "perfect!";
  };
    print("Sum of recipr. factors of " + (n).toString() + " = " + (val).toString() + " exactly " + perfect);
  }
  }
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}
