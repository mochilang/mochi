// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  int pfacSum(int i) {
  int sum = 0;
  int p = 1;
  while (p <= i ~/ 2) {
    if (i % p == 0) {
    sum = sum + p;
  }
    p = p + 1;
  }
  return sum;
}
  void main() {
  int d = 0;
  int a = 0;
  int pnum = 0;
  int i = 1;
  while (i <= 20000) {
    final int j = pfacSum(i);
    if (j < i) {
    d = d + 1;
  }
    if (j == i) {
    pnum = pnum + 1;
  }
    if (j > i) {
    a = a + 1;
  }
    i = i + 1;
  }
  print("There are " + (d).toString() + " deficient numbers between 1 and 20000");
  print("There are " + (a).toString() + " abundant numbers  between 1 and 20000");
  print("There are " + (pnum).toString() + " perfect numbers between 1 and 20000");
}
  main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
