// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, int start, int end) {
  var n = s.length;
  if (start < 0) start += n;
  if (end < 0) end += n;
  if (start < 0) start = 0;
  if (start > n) start = n;
  if (end < 0) end = 0;
  if (end > n) end = n;
  if (start > end) start = end;
  return s.substring(start, end);
}

bool isNumeric(String s) {
  if (s == "NaN") {
    return true;
  }
  int i = 0;
  if (s.length == 0) {
    return false;
  }
  if (s.substring(0, 0 + 1) == "+" || s.substring(0, 0 + 1) == "-") {
    if (s.length == 1) {
    return false;
  };
    i = 1;
  }
  bool digits = false;
  bool dot = false;
  while (i < s.length) {
    String ch = s.substring(i, i + 1);
    if (ch.compareTo("0") >= 0 && ch.compareTo("9") <= 0) {
    digits = true;
    i = i + 1;
  } else {
    if (ch == "." && dot == false) {
    dot = true;
    i = i + 1;
  } else {
    if ((ch == "e" || ch == "E") && digits) {
    i = i + 1;
    if (i < s.length && (s.substring(i, i + 1) == "+" || s.substring(i, i + 1) == "-")) {
    i = i + 1;
  };
    bool ed = false;
    while (i < s.length && s.substring(i, i + 1).compareTo("0") >= 0 && s.substring(i, i + 1).compareTo("9") <= 0) {
    ed = true;
    i = i + 1;
  };
    return ed && i == s.length;
  } else {
    return false;
  };
  };
  }
  }
  return digits;
}

void _main() {
  print("Are these strings numeric?");
  List<String> strs = ["1", "3.14", "-100", "1e2", "NaN", "rose"];
  for (String s in strs) {
    print("  " + s + " -> " + (isNumeric(s)).toString());
  }
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}

void main() => _start();
