// Generated by Mochi transpiler
final num epsilon = 0.000000000000001;
num absf(num x) {
  if (x < 0.0) {
    return -x;
  }
  return x;
}

num pow10(int n) {
  num r = 1.0;
  int i = 0;
  while (i < n) {
    r = r * 10.0;
    i = i + 1;
  }
  return r;
}

String formatFloat(num f, int prec) {
  final num scale = pow10(prec);
  final num scaled = f * scale + 0.5;
  int n = (scaled).toInt();
  String digits = (n).toString();
  while (digits.length <= prec) {
    digits = "0" + digits;
  }
  final String intPart = digits.substring(0, digits.length - prec);
  final String fracPart = digits.substring(digits.length - prec, digits.length);
  return intPart + "." + fracPart;
}

int factval = 1;
num e = 2.0;
int n = 2;
num term = 1.0;
void main() {
  while (true) {
    factval = factval * n;
    n = n + 1;
    term = 1.0 / ((factval).toDouble());
    e = e + term;
    if (absf(term) < epsilon) {
    break;
  }
  }
  print("e = " + formatFloat(e, 15));
}
