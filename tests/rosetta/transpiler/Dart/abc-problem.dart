// Generated by Mochi transpiler
List<String> fields(String s) {
  List<String> res = [];
  String cur = "";
  int i = 0;
  while (i < s.length) {
    final String c = s.substring(i, i + 1);
    if (c == " ") {
    if (cur.length > 0) {
    res = [...res, cur];
    cur = "";
  };
  } else {
    cur = cur + c;
  }
    i = i + 1;
  }
  if (cur.length > 0) {
    res = [...res, cur];
  }
  return res;
}

bool canSpell(String word, List<String> blks) {
  if (word.length == 0) {
    return true;
  }
  final c = word.substring(0, 1).toLowerCase();
  int i = 0;
  while (i < blks.length) {
    final String b = blks[i];
    if (c == b.substring(0, 1).toLowerCase() || c == b.substring(1, 2).toLowerCase()) {
    List<String> rest = [];
    int j = 0;
    while (j < blks.length) {
    if (j != i) {
    rest = [...rest, blks[j]];
  }
    j = j + 1;
  };
    if (canSpell(word.substring(1, word.length), rest)) {
    return true;
  };
  }
    i = i + 1;
  }
  return false;
}

dynamic newSpeller(String blocks) {
  final List<String> bl = fields(blocks);
  return ((w) => canSpell(w, bl));
}

void main() {
  final sp = newSpeller("BO XK DQ CP NA GT RE TG QD FS JW HU VI AN OB ER FS LY PC ZM");
  for (var word in ["A", "BARK", "BOOK", "TREAT", "COMMON", "SQUAD", "CONFUSE"]) {
    print(word + " " + (sp(word)).toString());
  }
}

void _start() {
  main();
  main();
}
