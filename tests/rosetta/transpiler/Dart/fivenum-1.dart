// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, int start, int end) {
  var n = s.length;
  if (start < 0) start += n;
  if (end < 0) end += n;
  if (start < 0) start = 0;
  if (start > n) start = n;
  if (end < 0) end = 0;
  if (end > n) end = n;
  if (start > end) start = end;
  return s.substring(start, end);
}

List<num> sortFloat(List<num> xs) {
  List<num> arr = xs;
  int n = arr.length;
  int i = 0;
  while (i < n) {
    int j = 0;
    while (j < n - 1) {
    if (arr[j] > arr[j + 1]) {
    num t = arr[j];
    arr[j] = arr[j + 1];
    arr[j + 1] = t;
  }
    j = j + 1;
  }
    i = i + 1;
  }
  return arr;
}

num median(List<num> s) {
  int n = s.length;
  if (n % 2 == 1) {
    return s[n ~/ 2];
  }
  return (s[n ~/ 2 - 1] + s[n ~/ 2]) / 2.0;
}

List<num> fivenum(List<num> xs) {
  List<num> s = sortFloat(xs);
  int n = s.length;
  num q1 = s[(n - 1) ~/ 4];
  num med = median(s);
  num q3 = s[3 * (n - 1) ~/ 4];
  return [s[0], q1, med, q3, s[n - 1]];
}

List<num> x1 = [36.0, 40.0, 7.0, 39.0, 41.0, 15.0];
List<num> x2 = [15.0, 6.0, 42.0, 41.0, 7.0, 36.0, 49.0, 40.0, 39.0, 47.0, 43.0];
List<num> x3 = [0.14082834, 0.0974879, 1.73131507, 0.87636009, -1.95059594, 0.73438555, -0.03035726, 1.4667597, -0.74621349, -0.72588772, 0.6390516, 0.61501527, -0.9898378, -1.00447874, -0.62759469, 0.66206163, 1.04312009, -0.10305385, 0.75775634, 0.32566578];
void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print((fivenum(x1)).toString());
  print((fivenum(x2)).toString());
  print((fivenum(x3)).toString());
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
