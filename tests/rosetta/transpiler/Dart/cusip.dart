// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, int start, int end) {
  var n = s.length;
  if (start < 0) start += n;
  if (end < 0) end += n;
  if (start < 0) start = 0;
  if (start > n) start = n;
  if (end < 0) end = 0;
  if (end > n) end = n;
  if (start > end) start = end;
  return s.substring(start, end);
}

int _parseIntStr(String s, int r) => int.parse(s, radix: r);

int ord(String ch) {
  String upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
  if (ch.compareTo("0") >= 0 && ch.compareTo("9") <= 0) {
    return (_parseIntStr(ch, 10) + 48).toInt();
  }
  int idx = upper.indexOf(ch);
  if (idx >= 0) {
    return 65 + idx;
  }
  return 0;
}

bool isCusip(String s) {
  if (s.length != 9) {
    return false;
  }
  int sum = 0;
  int i = 0;
  while (i < 8) {
    String c = _substr(s, i, i + 1);
    int v = 0;
    if (c.compareTo("0") >= 0 && c.compareTo("9") <= 0) {
    v = _parseIntStr(c, 10);
  } else {
    if (c.compareTo("A") >= 0 && c.compareTo("Z") <= 0) {
    v = ord(c) - 55;
  } else {
    if (c == "*") {
    v = 36;
  } else {
    if (c == "@") {
    v = 37;
  } else {
    if (c == "#") {
    v = 38;
  } else {
    return false;
  };
  };
  };
  };
  }
    if (i % 2 == 1) {
    v = v * 2;
  }
    sum = sum + v ~/ 10 + v % 10;
    i = i + 1;
  }
  return _parseIntStr(_substr(s, 8, 9), 10) == (10 - sum % 10) % 10;
}

List<String> candidates = ["037833100", "17275R102", "38259P508", "594918104", "68389X106", "68389X105"];
void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  for (String cand in candidates) {
    String b = "incorrect";
    if (isCusip(cand)) {
    b = "correct";
  }
    print(cand + " -> " + b);
  }
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
