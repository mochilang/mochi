// Generated by Mochi transpiler
class Complex {
  num re;
  num im;
  Complex({required this.re, required this.im});
}

Complex add(Complex a, Complex b) {
  return Complex(re: a.re + b.re, im: a.im + b.im);
}

Complex mul(Complex a, Complex b) {
  return Complex(re: a.re * b.re - a.im * b.im, im: a.re * b.im + a.im * b.re);
}

Complex neg(Complex a) {
  return Complex(re: -a.re, im: -a.im);
}

Complex inv(Complex a) {
  final num denom = a.re * a.re + a.im * a.im;
  return Complex(re: a.re / denom, im: -a.im / denom);
}

Complex conj(Complex a) {
  return Complex(re: a.re, im: -a.im);
}

String cstr(Complex a) {
  String s = "(" + (a.re).toString();
  if (a.im >= 0) {
    s = s + "+" + (a.im).toString() + "i)";
  } else {
    s = s + (a.im).toString() + "i)";
  }
  return s;
}

final Complex a = Complex(re: 1, im: 1);
final Complex b = Complex(re: 3.14159, im: 1.25);
void main() {
  print("a:       " + cstr(a));
  print("b:       " + cstr(b));
  print("a + b:   " + cstr(add(a, b)));
  print("a * b:   " + cstr(mul(a, b)));
  print("-a:      " + cstr(neg(a)));
  print("1 / a:   " + cstr(inv(a)));
  print("aÌ…:       " + cstr(conj(a)));
}
