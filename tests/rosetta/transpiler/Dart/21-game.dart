// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  int parseIntStr(String str) {
  int i = 0;
  bool neg = false;
  if (str.length > 0 && str.substring(0, 1) == "-") {
    neg = true;
    i = 1;
  }
  int n = 0;
  final Map<String, int> digits = {"0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9};
  while (i < str.length) {
    n = n * 10 + digits[str.substring(i, i + 1)]!;
    i = i + 1;
  }
  if (neg) {
    n = -n;
  }
  return n;
}
  void main() {
  int total = 0;
  bool computer = _now() % 2 == 0;
  print("Enter q to quit at any time\n");
  if (computer) {
    print("The computer will choose first");
  } else {
    print("You will choose first");
  }
  print("\n\nRunning total is now 0\n\n");
  int round = 1;
  bool done = false;
  while (!done) {
    print("ROUND " + (round).toString() + ":\n\n");
    int i = 0;
    while (i < 2 && !done) {
    if (computer) {
    int choice = 0;
    if (total < 18) {
    choice = _now() % 3 + 1;
  } else {
    choice = 21 - total;
  };
    total = total + choice;
    print("The computer chooses " + (choice).toString());
    print("Running total is now " + (total).toString());
    if (total == 21) {
    print("\nSo, commiserations, the computer has won!");
    done = true;
  };
  } else {
    while (true) {
    print("Your choice 1 to 3 : ");
    final String line = stdin.readLineSync() ?? '';
    if (line == "q" || line == "Q") {
    print("OK, quitting the game");
    done = true;
    break;
  }
    var num = int.parse(line);
    if (num.toString().compareTo(1.toString()) < 0 || num.toString().compareTo(3.toString()) > 0) {
    if (total + num > 21) {
    print("Too big, try again");
  } else {
    print("Out of range, try again");
  };
    continue;
  }
    if (total + num > 21) {
    print("Too big, try again");
    continue;
  }
    total = total + num;
    print("Running total is now " + (total).toString());
    break;
  };
    if (total == 21) {
    print("\nSo, congratulations, you've won!");
    done = true;
  };
  }
    print("\n");
    computer = !computer;
    i = i + 1;
  }
    round = round + 1;
  }
}
  main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
