// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  bool isPrime(int n) {
  if (n < 2) {
    return false;
  }
  if (n % 2 == 0) {
    return n == 2;
  }
  if (n % 3 == 0) {
    return n == 3;
  }
  int d = 5;
  while (d * d <= n) {
    if (n % d == 0) {
    return false;
  }
    d = d + 2;
    if (n % d == 0) {
    return false;
  }
    d = d + 4;
  }
  return true;
}
  int firstPrimeFactor(int n) {
  if (n == 1) {
    return 1;
  }
  if (n % 3 == 0) {
    return 3;
  }
  if (n % 5 == 0) {
    return 5;
  }
  List<int> inc = [4, 2, 4, 2, 4, 6, 2, 6];
  int k = 7;
  int i = 0;
  while (k * k <= n) {
    if (n % k == 0) {
    return k;
  }
    k = k + inc[i];
    i = (i + 1) % inc.length;
  }
  return n;
}
  int indexOf(String s, String ch) {
  int i = 0;
  while (i < s.length) {
    if (s.substring(i, i + 1) == ch) {
    return i;
  }
    i = i + 1;
  }
  return -1;
}
  String padLeft(int n, int width) {
  String s = (n).toString();
  while (s.length < width) {
    s = " " + s;
  }
  return s;
}
  String formatFloat(num f, int prec) {
  final String s = (f).toString();
  final int idx = s.indexOf(".");
  if (idx < 0) {
    return s;
  }
  final int need = idx + 1 + prec;
  if (s.length > need) {
    return s.substring(0, need);
  }
  return s;
}
  void main() {
  List<int> blum = [];
  List<int> counts = [0, 0, 0, 0];
  List<int> digits = [1, 3, 7, 9];
  int i = 1;
  int bc = 0;
  while (true) {
    final int p = firstPrimeFactor(i);
    if (p % 4 == 3) {
    final int q = i ~/ p as int;
    if (q != p && q % 4 == 3 && isPrime(q)) {
    if (bc < 50) {
    blum = [...blum, i];
  };
    final int d = i % 10;
    if (d == 1) {
    counts[0] = counts[0] + 1;
  } else {
    if (d == 3) {
    counts[1] = counts[1] + 1;
  } else {
    if (d == 7) {
    counts[2] = counts[2] + 1;
  } else {
    if (d == 9) {
    counts[3] = counts[3] + 1;
  };
  };
  };
  };
    bc = bc + 1;
    if (bc == 50) {
    print("First 50 Blum integers:");
    int idx = 0;
    while (idx < 50) {
    String line = "";
    int j = 0;
    while (j < 10) {
    line = line + padLeft(blum[idx], 3) + " ";
    idx = idx + 1;
    j = j + 1;
  }
    print(line.substring(0, line.length - 1));
  };
    break;
  };
  };
  }
    if (i % 5 == 3) {
    i = i + 4;
  } else {
    i = i + 2;
  }
  }
}
  main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
