// Generated by Mochi transpiler
final num PI = 3.141592653589793;
num sinApprox(num x) {
  num term = x;
  num sum = x;
  int n = 1;
  while (n <= 10) {
    final num denom = (2 * n * (2 * n + 1)).toDouble();
    term = -term * x * x / denom;
    sum = sum + term;
    n = n + 1;
  }
  return sum;
}

num cosApprox(num x) {
  num term = 1;
  num sum = 1;
  int n = 1;
  while (n <= 10) {
    final num denom = ((2 * n - 1) * 2 * n).toDouble();
    term = -term * x * x / denom;
    sum = sum + term;
    n = n + 1;
  }
  return sum;
}

num sqrtApprox(num x) {
  num guess = x;
  int i = 0;
  while (i < 10) {
    guess = (guess + x / guess) / 2;
    i = i + 1;
  }
  return guess;
}

final num L = 10;
final num G = 9.81;
final num dt = 0.2;
final num phi0 = PI / 4;
final num omega = sqrtApprox(G / L);
num t = 0;
void main() {
  for (int step = 0; step < 10; step++) {
    final num phi = phi0 * cosApprox(omega * t);
    final int pos = (10 * sinApprox(phi) + 0.5).toInt();
    print((pos).toString());
    t = t + dt;
  }
}
