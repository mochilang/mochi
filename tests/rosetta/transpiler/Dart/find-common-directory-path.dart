// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, num start, num end) {
  var n = s.length;
  int s0 = start.toInt();
  int e0 = end.toInt();
  if (s0 < 0) s0 += n;
  if (e0 < 0) e0 += n;
  if (s0 < 0) s0 = 0;
  if (s0 > n) s0 = n;
  if (e0 < 0) e0 = 0;
  if (e0 > n) e0 = n;
  if (s0 > e0) s0 = e0;
  return s.substring(s0, e0);
}

List<String> splitPath(String p) {
  List<String> parts = <String>[];
  String cur = "";
  int i = 0;
  while (i < p.length) {
    if (_substr(p, i, i + 1) == "/") {
    if (cur != "") {
    parts = [...parts, cur];
    cur = "";
  };
  } else {
    cur = cur + _substr(p, i, i + 1);
  }
    i = i + 1;
  }
  if (cur != "") {
    parts = [...parts, cur];
  }
  return parts;
}

String joinPath(List<String> parts) {
  String s = "";
  int i = 0;
  while (i < parts.length) {
    s = s + "/" + parts[i];
    i = i + 1;
  }
  return s;
}

String commonPrefix(List<String> paths) {
  if (paths.length == 0) {
    return "";
  }
  List<String> base = splitPath(paths[0]);
  int i = 0;
  List<String> prefix = <String>[];
  while (i < base.length) {
    String comp = base[i];
    bool ok = true;
    for (String p in paths) {
    List<String> parts = splitPath(p);
    if (i >= parts.length || parts[i] != comp) {
    ok = false;
    break;
  }
  }
    if (ok) {
    prefix = [...prefix, comp];
  } else {
    break;
  }
    i = i + 1;
  }
  return joinPath(prefix);
}

void _main() {
  List<String> paths = ["/home/user1/tmp/coverage/test", "/home/user1/tmp/covert/operator", "/home/user1/tmp/coven/members", "/home//user1/tmp/coventry", "/home/user1/././tmp/covertly/foo", "/home/bob/../user1/tmp/coved/bar"];
  String c = commonPrefix(paths);
  if (c == "") {
    print("No common path");
  } else {
    print("Common path: " + c);
  }
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}

void main() => _start();
