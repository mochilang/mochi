// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

num qsel(List<num> a, int k) {
  List<num> arr = a;
  while (arr.length > 1) {
    int px = _now() % arr.length;
    num pv = arr[px];
    final int last = arr.length - 1;
    final num tmp = arr[px];
    arr[px] = arr[last];
    arr[last] = tmp;
    px = 0;
    int i = 0;
    while (i < last) {
    final num v = arr[i];
    if (v < pv) {
    final num tmp2 = arr[px];
    arr[px] = arr[i];
    arr[i] = tmp2;
    px = px + 1;
  }
    i = i + 1;
  }
    if (px == k) {
    return pv;
  }
    if (k < px) {
    arr = arr.sublist(0, px);
  } else {
    final num tmp2 = arr[px];
    arr[px] = pv;
    arr[last] = tmp2;
    arr = arr.sublist(px + 1, arr.length);
    k = k - px + 1;
  }
  }
  return arr[0];
}

num median(List<num> list) {
  List<num> arr = list;
  final int half = arr.length ~/ 2 as int;
  final num med = qsel(arr, half);
  if (arr.length % 2 == 0) {
    return (med + qsel(arr, half - 1)) / 2.0;
  }
  return med;
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print((median([3.0, 1.0, 4.0, 1.0])).toString());
  print((median([3.0, 1.0, 4.0, 1.0, 5.0])).toString());
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
