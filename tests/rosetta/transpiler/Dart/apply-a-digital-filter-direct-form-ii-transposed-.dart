// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  List<num> applyFilter(List<num> input, List<num> a, List<num> b) {
  List<num> out = [];
  final num scale = 1.0 / a[0];
  int i = 0;
  while (i < input.length) {
    num tmp = 0.0;
    int j = 0;
    while (j <= i && j < b.length) {
    tmp = tmp + b[j] * input[i - j];
    j = j + 1;
  }
    j = 0;
    while (j < i && j + 1 < a.length) {
    tmp = tmp - a[j + 1] * out[i - j - 1];
    j = j + 1;
  }
    out = [...out, tmp * scale];
    i = i + 1;
  }
  return out;
}
  final List<num> a = [1.0, -0.00000000000000027756, 0.33333333, -0.0000000000000000185];
  final List<num> b = [0.16666667, 0.5, 0.5, 0.16666667];
  final List<num> sig = [-0.917843918645, 0.141984778794, 1.20536903482, 0.190286794412, -0.662370894973, -1.00700480494, -0.404707073677, 0.800482325044, 0.743500089861, 1.01090520172, 0.741527555207, 0.277841675195, 0.400833448236, -0.2085993586, -0.172842103641, -0.134316096293, 0.0259303398477, 0.490105989562, 0.549391221511, 0.9047198589];
  final List<num> res = applyFilter(sig, a, b);
  int k = 0;
  while (k < res.length) {
    print(res[k]);
    k = k + 1;
  }
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
