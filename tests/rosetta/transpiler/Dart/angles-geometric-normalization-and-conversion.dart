// Generated by Mochi transpiler
num d2d(num d) {
  return d % 360;
}

num g2g(num g) {
  return g % 400;
}

num m2m(num m) {
  return m % 6400;
}

num r2r(num r) {
  return r % 2 * 3.141592653589793;
}

num d2g(num d) {
  return d2d(d) * 400 / 360;
}

num d2m(num d) {
  return d2d(d) * 6400 / 360;
}

num d2r(num d) {
  return d2d(d) * 3.141592653589793 / 180;
}

num g2d(num g) {
  return g2g(g) * 360 / 400;
}

num g2m(num g) {
  return g2g(g) * 6400 / 400;
}

num g2r(num g) {
  return g2g(g) * 3.141592653589793 / 200;
}

num m2d(num m) {
  return m2m(m) * 360 / 6400;
}

num m2g(num m) {
  return m2m(m) * 400 / 6400;
}

num m2r(num m) {
  return m2m(m) * 3.141592653589793 / 3200;
}

num r2d(num r) {
  return r2r(r) * 180 / 3.141592653589793;
}

num r2g(num r) {
  return r2r(r) * 200 / 3.141592653589793;
}

num r2m(num r) {
  return r2r(r) * 3200 / 3.141592653589793;
}

void main() {
  final List<num> angles = [-2, -1, 0, 1, 2, 6.2831853, 16, 57.2957795, 359, 399, 6399, 1000000];
  print("degrees normalized_degs gradians mils radians");
  for (var a in angles) {
    print((a).toString() + " " + (d2d(a)).toString() + " " + (d2g(a)).toString() + " " + (d2m(a)).toString() + " " + (d2r(a)).toString());
  }
  print("\ngradians normalized_grds degrees mils radians");
  for (var a in angles) {
    print((a).toString() + " " + (g2g(a)).toString() + " " + (g2d(a)).toString() + " " + (g2m(a)).toString() + " " + (g2r(a)).toString());
  }
  print("\nmils normalized_mils degrees gradians radians");
  for (var a in angles) {
    print((a).toString() + " " + (m2m(a)).toString() + " " + (m2d(a)).toString() + " " + (m2g(a)).toString() + " " + (m2r(a)).toString());
  }
  print("\nradians normalized_rads degrees gradians mils");
  for (var a in angles) {
    print((a).toString() + " " + (r2r(a)).toString() + " " + (r2d(a)).toString() + " " + (r2g(a)).toString() + " " + (r2m(a)).toString());
  }
}

void _start() {
  main();
}
