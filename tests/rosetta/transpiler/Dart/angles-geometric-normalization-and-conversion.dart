// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  num d2d(num d) {
  return d % 360.0;
}
  num g2g(num g) {
  return g % 400.0;
}
  num m2m(num m) {
  return m % 6400.0;
}
  num r2r(num r) {
  return r % 2.0 * 3.141592653589793;
}
  num d2g(num d) {
  return d2d(d) * 400.0 / 360.0;
}
  num d2m(num d) {
  return d2d(d) * 6400.0 / 360.0;
}
  num d2r(num d) {
  return d2d(d) * 3.141592653589793 / 180.0;
}
  num g2d(num g) {
  return g2g(g) * 360.0 / 400.0;
}
  num g2m(num g) {
  return g2g(g) * 6400.0 / 400.0;
}
  num g2r(num g) {
  return g2g(g) * 3.141592653589793 / 200.0;
}
  num m2d(num m) {
  return m2m(m) * 360.0 / 6400.0;
}
  num m2g(num m) {
  return m2m(m) * 400.0 / 6400.0;
}
  num m2r(num m) {
  return m2m(m) * 3.141592653589793 / 3200.0;
}
  num r2d(num r) {
  return r2r(r) * 180.0 / 3.141592653589793;
}
  num r2g(num r) {
  return r2r(r) * 200.0 / 3.141592653589793;
}
  num r2m(num r) {
  return r2r(r) * 3200.0 / 3.141592653589793;
}
  void main() {
  final List<num> angles = [-2.0, -1.0, 0.0, 1.0, 2.0, 6.2831853, 16.0, 57.2957795, 359.0, 399.0, 6399.0, 1000000.0];
  print("degrees normalized_degs gradians mils radians");
  for (var a in angles) {
    print((a).toString() + " " + (d2d(a)).toString() + " " + (d2g(a)).toString() + " " + (d2m(a)).toString() + " " + (d2r(a)).toString());
  }
  print("\ngradians normalized_grds degrees mils radians");
  for (var a in angles) {
    print((a).toString() + " " + (g2g(a)).toString() + " " + (g2d(a)).toString() + " " + (g2m(a)).toString() + " " + (g2r(a)).toString());
  }
  print("\nmils normalized_mils degrees gradians radians");
  for (var a in angles) {
    print((a).toString() + " " + (m2m(a)).toString() + " " + (m2d(a)).toString() + " " + (m2g(a)).toString() + " " + (m2r(a)).toString());
  }
  print("\nradians normalized_rads degrees gradians mils");
  for (var a in angles) {
    print((a).toString() + " " + (r2r(a)).toString() + " " + (r2d(a)).toString() + " " + (r2g(a)).toString() + " " + (r2m(a)).toString());
  }
}
  main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
