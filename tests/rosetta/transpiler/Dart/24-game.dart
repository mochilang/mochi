// Generated by Mochi transpiler
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

int randDigit() {
  return _now() % 9 + 1;
}

void main() {
  List<dynamic> digits = [];
  for (int i = 0; i < 4; i++) {
    digits = [...digits, randDigit()];
  }
  String numstr = "";
  for (int i = 0; i < 4; i++) {
    numstr = numstr + (digits[i]).toString();
  }
  print("Your numbers: " + numstr + "\n");
  print("Enter RPN: ");
  String expr = stdin.readLineSync() ?? '';
  if (expr.length != 7) {
    print("invalid. expression length must be 7. (4 numbers, 3 operators, no spaces)");
    return;
  }
  List<dynamic> stack = [];
  int i = 0;
  bool valid = true;
  while (i < expr.length) {
    final String ch = expr.substring(i, i + 1);
    if (ch.compareTo("0") >= 0 && ch.compareTo("9") <= 0) {
    if (digits.length == 0) {
    print("too many numbers.");
    return;
  };
    int j = 0;
    while (digits[j] != int.parse(ch) - int.parse("0")) {
    j = j + 1;
    if (j == digits.length) {
    print("wrong numbers.");
    return;
  }
  };
    digits = digits.sublist(0, j) + digits.sublist(j + 1, digits.length);
    stack = [...stack, int.parse(ch) - int.parse("0") as num];
  } else {
    if (stack.length < 2) {
    print("invalid expression syntax.");
    valid = false;
    break;
  };
    var b = stack[stack.length - 1];
    var a = stack[stack.length - 2];
    if (ch == "+") {
    stack[stack.length - 2] = a + b;
  } else {
    if (ch == "-") {
    stack[stack.length - 2] = a - b;
  } else {
    if (ch == "*") {
    stack[stack.length - 2] = a * b;
  } else {
    if (ch == "/") {
    stack[stack.length - 2] = a / b;
  } else {
    print(ch + " invalid.");
    valid = false;
    break;
  };
  };
  };
  };
    stack = stack.sublist(0, stack.length - 1);
  }
    i = i + 1;
  }
  if (valid) {
    if (stack[0] - 24.abs() > 0.000001) {
    print("incorrect. " + (stack[0]).toString() + " != 24");
  } else {
    print("correct.");
  };
  }
}

void _start() {
  _initNow();
  main();
  main();
}
