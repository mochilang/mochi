// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, int start, int end) {
  var n = s.length;
  if (start < 0) start += n;
  if (end < 0) end += n;
  if (start < 0) start = 0;
  if (start > n) start = n;
  if (end < 0) end = 0;
  if (end > n) end = n;
  if (start > end) start = end;
  return s.substring(start, end);
}

List<List<int>> cart2(List<int> a, List<int> b) {
  List<List<int>> p = <List<int>>[];
  for (int x in a) {
    for (int y in b) {
    p = [...p, [x, y]];
  }
  }
  return p;
}

String llStr(List<List<int>> lst) {
  String s = "[";
  int i = 0;
  while (i < lst.length) {
    List<int> row = lst[i];
    s = s + "[";
    int j = 0;
    while (j < row.length) {
    s = s + (row[j]).toString();
    if (j < row.length - 1) {
    s = s + " ";
  }
    j = j + 1;
  }
    s = s + "]";
    if (i < lst.length - 1) {
    s = s + " ";
  }
    i = i + 1;
  }
  s = s + "]";
  return s;
}

void _main() {
  print(llStr(cart2([1, 2], [3, 4])));
  print(llStr(cart2([3, 4], [1, 2])));
  print(llStr(cart2([1, 2], <int>[])));
  print(llStr(cart2(<int>[], [1, 2])));
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}

void main() => _start();
