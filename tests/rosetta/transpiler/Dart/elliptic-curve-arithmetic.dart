// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, int start, int end) {
  var n = s.length;
  if (start < 0) start += n;
  if (end < 0) end += n;
  if (start < 0) start = 0;
  if (start > n) start = n;
  if (end < 0) end = 0;
  if (end > n) end = n;
  if (start > end) start = end;
  return s.substring(start, end);
}

class Pt {
  num x;
  num y;
  bool inf;
  Pt({required this.x, required this.y, required this.inf});
}

num bCoeff = 7.0;
Pt zero() {
  return Pt(x: 0.0, y: 0.0, inf: true);
}

bool isZero(Pt p) {
  return p.inf;
}

Pt neg(Pt p) {
  return Pt(x: p.x, y: -p.y, inf: p.inf);
}

Pt dbl(Pt p) {
  if (isZero(p)) {
    return p;
  }
  num L = 3.0 * p.x * p.x / 2.0 * p.y;
  num x = L * L - 2.0 * p.x;
  return Pt(x: x, y: L * (p.x - x) - p.y, inf: false);
}

Pt add(Pt p, Pt q) {
  if (isZero(p)) {
    return q;
  }
  if (isZero(q)) {
    return p;
  }
  if (p.x == q.x) {
    if (p.y == q.y) {
    return dbl(p);
  };
    return zero();
  }
  num L = (q.y - p.y) / (q.x - p.x);
  num x = L * L - p.x - q.x;
  return Pt(x: x, y: L * (p.x - x) - p.y, inf: false);
}

Pt mul(Pt p, int n) {
  Pt r = zero();
  Pt q = p;
  int k = n;
  while (k > 0) {
    if (k % 2 == 1) {
    r = add(r, q);
  }
    q = dbl(q);
    k = k ~/ 2;
  }
  return r;
}

num cbrtApprox(num x) {
  num guess = x;
  int i = 0;
  while (i < 40) {
    guess = (2.0 * guess + x / guess * guess) / 3.0;
    i = i + 1;
  }
  return guess;
}

Pt fromY(num y) {
  return Pt(x: cbrtApprox(y * y - bCoeff), y: y, inf: false);
}

void show(String s, Pt p) {
  if (isZero(p)) {
    print(s + "Zero");
  } else {
    print(s + "(" + (p.x).toString() + ", " + (p.y).toString() + ")");
  }
}

void _main() {
  Pt a = fromY(1.0);
  Pt b = fromY(2.0);
  show("a = ", a);
  show("b = ", b);
  Pt c = add(a, b);
  show("c = a + b = ", c);
  Pt d = neg(c);
  show("d = -c = ", d);
  show("c + d = ", add(c, d));
  show("a + b + d = ", add(a, add(b, d)));
  show("a * 12345 = ", mul(a, 12345));
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}

void main() => _start();
