// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  bool validComb(int a, int b, int c, int d, int e, int f, int g) {
  final int square1 = a + b;
  final int square2 = b + c + d;
  final int square3 = d + e + f;
  final int square4 = f + g;
  return square1 == square2 && square2 == square3 && square3 == square4;
}
  bool isUnique(int a, int b, int c, int d, int e, int f, int g) {
  List<int> nums = [a, b, c, d, e, f, g];
  int i = 0;
  while (i < nums.length) {
    int j = i + 1;
    while (j < nums.length) {
    if (nums[i] == nums[j]) {
    return false;
  }
    j = j + 1;
  }
    i = i + 1;
  }
  return true;
}
  Map<String, dynamic> getCombs(int low, int high, bool unique) {
  List<dynamic> valid = [];
  int count = 0;
  for (int b = low; b < high + 1; b++) {
    for (int c = low; c < high + 1; c++) {
    for (int d = low; d < high + 1; d++) {
    final num s = b + c + d;
    for (int e = low; e < high + 1; e++) {
    for (int f = low; f < high + 1; f++) {
    final num a = s - b;
    final num g = s - f;
    if (a < low || a > high) {
    continue;
  }
    if (g < low || g > high) {
    continue;
  }
    if (d + e + f != s) {
    continue;
  }
    if (f + g != s) {
    continue;
  }
    if (!unique || isUnique(a, b, c, d, e, f, g)) {
    valid = [...valid, [a, b, c, d, e, f, g]];
    count = count + 1;
  }
  }
  }
  }
  }
  }
  return {"count": count, "list": valid};
}
  final Map<String, dynamic> r1 = getCombs(1, 7, true);
  print((r1["count"]!).toString() + " unique solutions in 1 to 7");
  print(r1["list"]!);
  final Map<String, dynamic> r2 = getCombs(3, 9, true);
  print((r2["count"]!).toString() + " unique solutions in 3 to 9");
  print(r2["list"]!);
  final Map<String, dynamic> r3 = getCombs(0, 9, false);
  print((r3["count"]!).toString() + " non-unique solutions in 0 to 9");
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
