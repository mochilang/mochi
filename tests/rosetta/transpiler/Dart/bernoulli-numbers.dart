// Generated by Mochi transpiler
String _padStart(String s, int l, String ch) {
  if (ch.isEmpty) ch = ' ';
  return s.padLeft(l, ch);
}

num bernoulli(int n) {
  List<num> a = [];
  int m = 0;
  while (m <= n) {
    a = [...a, ((1).toDouble()) / ((m + 1).toDouble())];
    int j = m;
    while (j >= 1) {
    a[j - 1] = ((j).toDouble()) * (a[j - 1] - a[j]);
    j = j - 1;
  }
    m = m + 1;
  }
  return a[0];
}

String padStart(String s, int width, String pad) {
  String out = s;
  while (out.length < width) {
    out = pad + out;
  }
  return out;
}

void main() {
  for (int i = 0; i < 61; i++) {
    final num b = bernoulli(i);
    if (num(b) != BigInt.from(0)) {
    final String numStr = (num(b)).toString();
    final String denStr = (denom(b)).toString();
    print("B(" + (i).toString().padLeft(2, " ") + ") =" + numStr.padLeft(45, " ") + "/" + denStr);
  }
  }
}
