// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, int start, int end) {
  var n = s.length;
  if (start < 0) start += n;
  if (end < 0) end += n;
  if (start < 0) start = 0;
  if (start > n) start = n;
  if (end < 0) end = 0;
  if (end > n) end = n;
  if (start > end) start = end;
  return s.substring(start, end);
}

String listStr(List<int> xs) {
  String s = "[";
  int i = 0;
  while (i < xs.length) {
    s = s + (xs[i]).toString();
    if (i + 1 < xs.length) {
    s = s + " ";
  }
    i = i + 1;
  }
  s = s + "]";
  return s;
}

List<int> a = [0, 0, 0, 0, 0];
List<int> s = a.sublist(0, 4);
int cap_s = 5;
void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print("len(a) = " + (a.length).toString());
  print("a = " + listStr(a));
  a[0] = 3;
  print("a = " + listStr(a));
  print("a[0] = " + (a[0]).toString());
  print("s = " + listStr(s));
  print("len(s) = " + (s.length).toString() + "  cap(s) = " + (cap_s).toString());
  s = a.sublist(0, 5);
  print("s = " + listStr(s));
  a[0] = 22;
  s[0] = 22;
  print("a = " + listStr(a));
  print("s = " + listStr(s));
  s = [...s, 4];
  s = [...s, 5];
  s = [...s, 6];
  cap_s = 10;
  print("s = " + listStr(s));
  print("len(s) = " + (s.length).toString() + "  cap(s) = " + (cap_s).toString());
  a[4] = -1;
  print("a = " + listStr(a));
  print("s = " + listStr(s));
  s = <int>[];
  for (int i = 0; i < 8; i++) {
    s = [...s, 0];
  }
  cap_s = 8;
  print("s = " + listStr(s));
  print("len(s) = " + (s.length).toString() + "  cap(s) = " + (cap_s).toString());
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
