// Generated by Mochi transpiler
String char(int n) {
  final String letters = "abcdefghijklmnopqrstuvwxyz";
  final int idx = n - 97;
  if (idx < 0 || idx >= letters.length) {
    return "?";
  }
  return letters.substring(idx, idx + 1);
}

String fromBytes(List<int> bs) {
  String s = "";
  int i = 0;
  while (i < bs.length) {
    s = s + char(bs[i]);
    i = i + 1;
  }
  return s;
}

List<int> b = [98, 105, 110, 97, 114, 121];
List<int> c = b;
List<int> d = [];
int i = 0;
List<int> z = [...b, 122];
List<int> sub = b.sublist(1, 3);
List<int> f = [];
List<int> rem = [];
void main() {
  print((b).toString());
  print((c).toString());
  print((b == c).toString());
  while (i < b.length) {
    d = [...d, b[i]];
    i = i + 1;
  }
  d[1] = 97;
  d[4] = 110;
  print(fromBytes(b));
  print(fromBytes(d));
  print((b.length == 0).toString());
  print(fromBytes(z));
  print(fromBytes(sub));
  i = 0;
  while (i < d.length) {
    final int val = d[i];
    if (val == 110) {
    f = [...f, 109];
  } else {
    f = [...f, val];
  }
    i = i + 1;
  }
  print(fromBytes(d) + " -> " + fromBytes(f));
  rem = [...rem, b[0]];
  i = 3;
  while (i < b.length) {
    rem = [...rem, b[i]];
    i = i + 1;
  }
  print(fromBytes(rem));
}
