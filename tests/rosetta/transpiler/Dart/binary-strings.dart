// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, int start, int end) {
  var n = s.length;
  if (start < 0) start += n;
  if (end < 0) end += n;
  if (start < 0) start = 0;
  if (start > n) start = n;
  if (end < 0) end = 0;
  if (end > n) end = n;
  if (start > end) start = end;
  return s.substring(start, end);
}

String char(int n) {
  String letters = "abcdefghijklmnopqrstuvwxyz";
  int idx = n - 97;
  if (idx < 0 || idx >= letters.length) {
    return "?";
  }
  return _substr(letters, idx, idx + 1);
}

String fromBytes(List<int> bs) {
  String s = "";
  int i = 0;
  while (i < bs.length) {
    s = s + char(bs[i]);
    i = i + 1;
  }
  return s;
}

List<int> b = [98, 105, 110, 97, 114, 121];
List<int> c = b;
List<int> d = <int>[];
int i = 0;
List<dynamic> z = [...b, 122];
List<int> sub = b.sublist(1, 3);
List<int> f = <int>[];
List<int> rem = <int>[];
void main() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  print((b).toString());
  print((c).toString());
  print((b == c).toString());
  while (i < b.length) {
    d = [...d, b[i]];
    i = i + 1;
  }
  d[1] = 97;
  d[4] = 110;
  print(fromBytes(b));
  print(fromBytes(d));
  print((b.length == 0).toString());
  print(fromBytes(List<int>.from(z)));
  print(fromBytes(sub));
  i = 0;
  while (i < d.length) {
    dynamic val = d[i];
    if (val == 110) {
    f = [...f, 109];
  } else {
    f = [...f, val];
  }
    i = i + 1;
  }
  print(fromBytes(d) + " -> " + fromBytes(f));
  rem = [...rem, b[0]];
  i = 3;
  while (i < b.length) {
    rem = [...rem, b[i]];
    i = i + 1;
  }
  print(fromBytes(rem));
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
