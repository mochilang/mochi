// Generated by Mochi transpiler
import 'dart:convert';
import 'dart:io';

int _nowSeed = 0;
bool _nowSeeded = false;
void _initNow() {
  var s = Platform.environment['MOCHI_NOW_SEED'];
  if (s != null && s.isNotEmpty) {
    var v = int.tryParse(s);
    if (v != null) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
int _now() {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return DateTime.now().microsecondsSinceEpoch;
}

String _substr(String s, int start, int end) {
  var n = s.length;
  if (start < 0) start += n;
  if (end < 0) end += n;
  if (start < 0) start = 0;
  if (start > n) start = n;
  if (end < 0) end = 0;
  if (end > n) end = n;
  if (start > end) start = end;
  return s.substring(start, end);
}

void _main() {
  String pkg_dog = "Salt";
  String Dog = "Pepper";
  String pkg_DOG = "Mustard";
  Map<String, bool> packageSees(String d1, String d2, String d3) {
  print("Package sees: " + d1 + " " + d2 + " " + d3);
  return {"pkg_dog": true, "Dog": true, "pkg_DOG": true};
}
  Map<String, bool> d = packageSees(pkg_dog, Dog, pkg_DOG);
  print("There are " + (d.length).toString() + " dogs.\n");
  String dog = "Benjamin";
  d = packageSees(pkg_dog, Dog, pkg_DOG);
  print("Main sees:   " + dog + " " + Dog + " " + pkg_DOG);
  d["dog"] = true;
  d["Dog"] = true;
  d["pkg_DOG"] = true;
  print("There are " + (d.length).toString() + " dogs.\n");
  Dog = "Samba";
  d = packageSees(pkg_dog, Dog, pkg_DOG);
  print("Main sees:   " + dog + " " + Dog + " " + pkg_DOG);
  d["dog"] = true;
  d["Dog"] = true;
  d["pkg_DOG"] = true;
  print("There are " + (d.length).toString() + " dogs.\n");
  String DOG = "Bernie";
  d = packageSees(pkg_dog, Dog, pkg_DOG);
  print("Main sees:   " + dog + " " + Dog + " " + DOG);
  d["dog"] = true;
  d["Dog"] = true;
  d["pkg_DOG"] = true;
  d["DOG"] = true;
  print("There are " + (d.length).toString() + " dogs.");
}

void _start() {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _initNow();
  {
  var _benchMem0 = ProcessInfo.currentRss;
  var _benchSw = Stopwatch()..start();
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "main"}));
}
  _main();
  _benchSw.stop();
  var _benchMem1 = ProcessInfo.currentRss;
  print(jsonEncode({"duration_us": _benchSw.elapsedMicroseconds, "memory_bytes": (_benchMem1 - _benchMem0).abs(), "name": "_start"}));
}

void main() => _start();
