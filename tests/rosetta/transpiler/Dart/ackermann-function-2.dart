// Generated by Mochi transpiler
int pow(int base, int exp) {
  int result = 1;
  int i = 0;
  while (i < exp) {
    result = result * base;
    i = i + 1;
  }
  return result;
}

int ackermann2(int m, int n) {
  if (m == 0) {
    return n + 1;
  }
  if (m == 1) {
    return n + 2;
  }
  if (m == 2) {
    return 2 * n + 3;
  }
  if (m == 3) {
    return 8 * pow(2, n) - 3;
  }
  if (n == 0) {
    return ackermann2(m - 1, 1);
  }
  return ackermann2(m - 1, ackermann2(m, n - 1));
}

void main() {
  print("A(0, 0) = " + (ackermann2(0, 0)).toString());
  print("A(1, 2) = " + (ackermann2(1, 2)).toString());
  print("A(2, 4) = " + (ackermann2(2, 4)).toString());
  print("A(3, 4) = " + (ackermann2(3, 4)).toString());
}

void _start() {
  main();
  main();
}
