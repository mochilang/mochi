// Generated by Mochi v0.10.39 on 2025-07-24 18:27:15 GMT+7

export interface Digits { "0": number; "1": number; "2": number; "3": number; "4": number; "5": number; "6": number; "7": number; "8": number; "9": number }
function parseIntDigits(s: string): number {
  let n: number = 0;
  let i: number = 0;
  const digits: Digits = {"0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9};
  while ((i < (Array.isArray(s) || typeof s === 'string' ? s.length : Object.keys(s ?? {}).length))) {
    const ch: string = s.slice(i, (i + 1));
    if (!(ch in digits)) {
      return 0;
    }
    n = ((n * 10) + digits[ch]);
    i = (i + 1);
  }
  return n;
}
function parseDC(s: string): number {
  let neg: boolean = false;
  if ((((Array.isArray(s) || typeof s === 'string' ? s.length : Object.keys(s ?? {}).length) > 0) && (s.slice(0, 1) == "-"))) {
    neg = true;
    s = (s).substring(1, (Array.isArray(s) || typeof s === 'string' ? s.length : Object.keys(s ?? {}).length));
  }
  let dollars: number = 0;
  let cents: number = 0;
  let i: number = 0;
  let seenDot: boolean = false;
  let centDigits: number = 0;
  while ((i < (Array.isArray(s) || typeof s === 'string' ? s.length : Object.keys(s ?? {}).length))) {
    const ch: string = s.slice(i, (i + 1));
    if ((ch == ".")) {
      seenDot = true;
      i = (i + 1);
      continue
    }
    const d: number = parseIntDigits(ch);
    if (seenDot) {
      if ((centDigits < 2)) {
        cents = ((cents * 10) + d);
        centDigits = (centDigits + 1);
      }
    } else {
      dollars = ((dollars * 10) + d);
    }
    i = (i + 1);
  }
  if ((centDigits == 1)) {
    cents = (cents * 10);
  }
  let val: number = ((dollars * 100) + cents);
  if (neg) {
    val = -val;
  }
  return val;
}
function parseRate(s: string): number {
  let neg: boolean = false;
  if ((((Array.isArray(s) || typeof s === 'string' ? s.length : Object.keys(s ?? {}).length) > 0) && (s.slice(0, 1) == "-"))) {
    neg = true;
    s = (s).substring(1, (Array.isArray(s) || typeof s === 'string' ? s.length : Object.keys(s ?? {}).length));
  }
  let whole: number = 0;
  let frac: number = 0;
  let digits: number = 0;
  let seenDot: boolean = false;
  let i: number = 0;
  while ((i < (Array.isArray(s) || typeof s === 'string' ? s.length : Object.keys(s ?? {}).length))) {
    const ch: string = s.slice(i, (i + 1));
    if ((ch == ".")) {
      seenDot = true;
      i = (i + 1);
      continue
    }
    const d: number = parseIntDigits(ch);
    if (seenDot) {
      if ((digits < 4)) {
        frac = ((frac * 10) + d);
        digits = (digits + 1);
      }
    } else {
      whole = ((whole * 10) + d);
    }
    i = (i + 1);
  }
  while ((digits < 4)) {
    frac = (frac * 10);
    digits = (digits + 1);
  }
  let val: number = ((whole * 10000) + frac);
  if (neg) {
    val = -val;
  }
  return val;
}
function dcString(dc: number): string {
  let d: number = Math.trunc(dc / 100);
  let n: number = dc;
  if ((n < 0)) {
    n = -n;
  }
  let c: number = (n % 100);
  let cstr: string = String(c);
  if (((Array.isArray(cstr) || typeof cstr === 'string' ? cstr.length : Object.keys(cstr ?? {}).length) == 1)) {
    cstr = ("0" + cstr);
  }
  return ((String(d) + ".") + cstr);
}
function extend(dc: number, n: number): number {
  return (dc * n);
}
function tax(total: number, rate: number): number {
  return Math.trunc(Math.trunc(((total * rate) + 5000) / 10000));
}
function padLeft(s: string, n: number): string {
  let out: string = s;
  while (((Array.isArray(out) || typeof out === 'string' ? out.length : Object.keys(out ?? {}).length) < n)) {
    out = (" " + out);
  }
  return out;
}
function main() {
  const hp: number = parseDC("5.50");
  const mp: number = parseDC("2.86");
  const rate: number = parseRate("0.0765");
  const totalBeforeTax: number = (extend(hp, 4000000000000000) + extend(mp, 2));
  const t: number = tax(totalBeforeTax, rate);
  const total: number = (totalBeforeTax + t);
  console.log(("Total before tax: " + padLeft(dcString(totalBeforeTax), 22)));
  console.log(("             Tax: " + padLeft(dcString(t), 22)));
  console.log(("           Total: " + padLeft(dcString(total), 22)));
}
main();
