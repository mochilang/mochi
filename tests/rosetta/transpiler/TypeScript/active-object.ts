// Generated by Mochi v0.10.37 on 2025-07-23 12:59:37 GMT+7

const PI: number = 3.141592653589793;
function sinApprox(x: number): number {
  let term: number = x;
  let sum = x;
  let n: number = 1;
  while ((n <= 12)) {
    const denom = ((2 * n) * ((2 * n) + 1));
    term = (((-term * x) * x) / denom);
    sum = (sum + term);
    n = (n + 1);
  }
  return sum;
}
const dt: number = 0.01;
let s: number = 0.0;
let t1: number = 0.0;
let k1: number = sinApprox(0.0);
let i: number = 1;
while ((i <= 200)) {
  const t2: number = (i * dt);
  const k2: number = sinApprox((t2 * PI));
  s = (s + (((k1 + k2) * 0.5) * (t2 - t1)));
  t1 = t2;
  k1 = k2;
  i = (i + 1);
}
let i2: number = 1;
while ((i2 <= 50)) {
  const t2: number = (2.0 + (i2 * dt));
  const k2: number = 0.0;
  s = (s + (((k1 + k2) * 0.5) * (t2 - t1)));
  t1 = t2;
  k1 = k2;
  i2 = (i2 + 1);
}
console.log(s);
