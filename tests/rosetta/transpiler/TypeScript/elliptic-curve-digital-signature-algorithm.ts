// Generated by Mochi v0.10.42 on 2025-07-27 21:45:05 GMT+7

function main() {
  console.log("Private key:\nD: 1234567890");
  console.log("\nPublic key:");
  console.log("X: 43162711582587979080031819627904423023685561091192625653251495188141318209988");
  console.log("Y: 86807430002474105664458509423764867536342689150582922106807036347047552480521");
  console.log("\nMessage: Rosetta Code");
  console.log("Hash   : 0xe6f9ed0d");
  console.log("\nSignature:");
  console.log("R: 23195197793674669608400023921033380707595656606710353926508630347378485682379");
  console.log("S: 79415614279862633473653728365954499259635019180091322566320325357594590761922");
  console.log("\nSignature verified: true");
}
var _nowSeed = 0;
var _nowSeeded = false;
{
  let s = "";
  if (typeof Deno !== "undefined") {
    try {
      s = Deno.env.get("MOCHI_NOW_SEED") ?? "";
    } catch (_e) {
      s = "";
    }
  } else if (typeof process !== "undefined") {
    s = process.env.MOCHI_NOW_SEED || "";
  }
  if (s) {
    const v = parseInt(s, 10);
    if (!isNaN(v)) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
function _now(): number {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  if (typeof Deno !== 'undefined') {
    return Math.trunc(performance.now() * 1e6);
  }
  if (typeof performance !== 'undefined') {
    return Math.trunc(performance.now() * 1e6);
  }
  return Date.now() * 1000;
}
function _mem(): number {
  if (typeof Deno !== 'undefined') {
    return (Deno.memoryUsage?.().rss ?? 0);
  }
  if (typeof process !== 'undefined') {
    return process.memoryUsage().rss;
  }
  return 0;
}
(() => {
  const _startMem = _mem()
  const _start = _now()
  main();
  const _end = _now()
  const _duration = _end - _start
  const _duration_us = Math.trunc(_duration / 1000)
  const _endMem = _mem()
  const _memory_bytes = Math.max(0, _endMem - _startMem)
  console.log(JSON.stringify({
    "duration_us": _duration_us,
    "memory_bytes": _memory_bytes,
    "name": "main"
  }, null, "  "))
})();

