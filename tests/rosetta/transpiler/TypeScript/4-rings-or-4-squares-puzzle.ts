// Generated by Mochi v0.10.37 on 2025-07-22 23:16:24 GMT+7

function validComb(a: number, b: number, c: number, d: number, e: number, f: number, g: number): boolean {
  const square1 = (a + b);
  const square2 = ((b + c) + d);
  const square3 = ((d + e) + f);
  const square4 = (f + g);
  return (((square1 == square2) && (square2 == square3)) && (square3 == square4));
}
function isUnique(a: number, b: number, c: number, d: number, e: number, f: number, g: number): boolean {
  let nums = [a, b, c, d, e, f, g];
  let i = 0;
  while ((i < (Array.isArray(nums) || typeof nums === 'string' ? nums.length : Object.keys(nums ?? {}).length))) {
    let j = (i + 1);
    while ((j < (Array.isArray(nums) || typeof nums === 'string' ? nums.length : Object.keys(nums ?? {}).length))) {
      if ((nums[i] == nums[j])) {
        return false;
      }
      j = (j + 1);
    }
    i = (i + 1);
  }
  return true;
}
function getCombs(low: number, high: number, unique: boolean): Record<string, any> {
  let valid = [];
  let count = 0;
  for (let b = low; b < (high + 1); b++) {
    for (let c = low; c < (high + 1); c++) {
      for (let d = low; d < (high + 1); d++) {
        const s = ((b + c) + d);
        for (let e = low; e < (high + 1); e++) {
          for (let f = low; f < (high + 1); f++) {
            const a = (s - b);
            const g = (s - f);
            if (((a < low) || (a > high))) {
              continue
            }
            if (((g < low) || (g > high))) {
              continue
            }
            if ((((d + e) + f) != s)) {
              continue
            }
            if (((f + g) != s)) {
              continue
            }
            if ((!unique || isUnique(a, b, c, d, e, f, g))) {
              valid = [...valid, [a, b, c, d, e, f, g]];
              count = (count + 1);
            }
          }
        }
      }
    }
  }
  return {count, "list": valid};
}
const r1: Record<string, any> = getCombs(1, 7, true);
console.log((String(r1.count) + " unique solutions in 1 to 7"));
console.log(r1.list);
const r2: Record<string, any> = getCombs(3, 9, true);
console.log((String(r2.count) + " unique solutions in 3 to 9"));
console.log(r2.list);
const r3: Record<string, any> = getCombs(0, 9, false);
console.log((String(r3.count) + " non-unique solutions in 0 to 9"));
