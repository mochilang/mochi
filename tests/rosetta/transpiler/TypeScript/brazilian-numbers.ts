// Generated by Mochi v0.10.38 on 2025-07-23 17:27:38 GMT+7

function sameDigits(n: number, b: number): boolean {
  let f: number = (n % b);
  n = Math.trunc(Math.trunc(n / b));
  while ((n > 0)) {
    if (((n % b) != f)) {
      return false;
    }
    n = Math.trunc(Math.trunc(n / b));
  }
  return true;
}
function isBrazilian(n: number): boolean {
  if ((n < 7)) {
    return false;
  }
  if ((((n % 2) == 0) && (n >= 8))) {
    return true;
  }
  let b: number = 2;
  while ((b < (n - 1))) {
    if (sameDigits(n, b)) {
      return true;
    }
    b = (b + 1);
  }
  return false;
}
function isPrime(n: number): boolean {
  if ((n < 2)) {
    return false;
  }
  if (((n % 2) == 0)) {
    return (n == 2);
  }
  if (((n % 3) == 0)) {
    return (n == 3);
  }
  let d: number = 5;
  while (((d * d) <= n)) {
    if (((n % d) == 0)) {
      return false;
    }
    d = (d + 2);
    if (((n % d) == 0)) {
      return false;
    }
    d = (d + 4);
  }
  return true;
}
function main() {
  let kinds: string[] = [" ", " odd ", " prime "];
  for (const kind of kinds) {
    console.log((("First 20" + kind) + "Brazilian numbers:"));
    let c: number = 0;
    let n: number = 7;
    while (true) {
      if (isBrazilian(n)) {
        console.log((String(n) + " "));
        c = (c + 1);
        if ((c == 20)) {
          console.log("\n");
          break
        }
      }
      if ((kind == " ")) {
        n = (n + 1);
      } else {
        if ((kind == " odd ")) {
          n = (n + 2);
        } else {
          while (true) {
            n = (n + 2);
            if (isPrime(n)) {
              break
            }
          }
        }
      }
    }
  }
  let n: number = 7;
  let c: number = 0;
  while ((c < 100000)) {
    if (isBrazilian(n)) {
      c = (c + 1);
    }
    n = (n + 1);
  }
  console.log(("The 100,000th Brazilian number: " + String((n - 1))));
}
main();
