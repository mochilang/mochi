// Generated by Mochi v0.10.41 on 2025-07-26 17:28:19 GMT+7

function isPrime(n: number): boolean {
  if ((n < 2)) {
    return false;
  }
  if (((n % 2) == 0)) {
    return (n == 2);
  }
  let d: number = 3;
  while (((d * d) <= n)) {
    if (((n % d) == 0)) {
      return false;
    }
    d = (d + 2);
  }
  return true;
}
let digits: number[] = [9, 8, 7, 6, 5, 4, 3, 2, 1];
function gen(idx: number, cur: number, used: boolean): number[] {
  if ((idx == (Array.isArray(digits) || typeof digits === 'string' ? digits.length : Object.keys(digits ?? {}).length))) {
    if ((used && isPrime(cur))) {
      return [cur];
    }
    return [];
  }
  let _with: number[] = gen((idx + 1), ((cur * 10) + digits[idx]), true);
  let without: number[] = gen((idx + 1), cur, used);
  return [..._with, ...without];
}
let primes: number[] = gen(0, 0, false);
function pad(n: number, width: number): string {
  let s: string = String(n);
  while (((Array.isArray(s) || typeof s === 'string' ? s.length : Object.keys(s ?? {}).length) < width)) {
    s = (" " + s);
  }
  return s;
}
console.log((("There are " + String((Array.isArray(primes) || typeof primes === 'string' ? primes.length : Object.keys(primes ?? {}).length))) + " descending primes, namely:"));
let i: number = 0;
let line: string = "";
while ((i < (Array.isArray(primes) || typeof primes === 'string' ? primes.length : Object.keys(primes ?? {}).length))) {
  line = ((line + pad(primes[i], 8)) + " ");
  if ((((i + 1) % 10) == 0)) {
    console.log((line).substring(0, ((Array.isArray(line) || typeof line === 'string' ? line.length : Object.keys(line ?? {}).length) - 1)));
    line = "";
  }
  i = (i + 1);
}
if (((Array.isArray(line) || typeof line === 'string' ? line.length : Object.keys(line ?? {}).length) > 0)) {
  console.log((line).substring(0, ((Array.isArray(line) || typeof line === 'string' ? line.length : Object.keys(line ?? {}).length) - 1)));
}
