// Generated by Mochi v0.10.39 on 2025-07-24 18:22:58 GMT+7

function pow_big(base: number, exp: number): number {
  let result: number = 1;
  let b: number = base;
  let e: number = exp;
  while ((e > 0)) {
    if (((e % 2) == 1)) {
      result = (result * b);
    }
    b = (b * b);
    e = Math.trunc(Math.trunc(e / 2));
  }
  return result;
}
function cullen(n: number): number {
  const two_n: number = pow_big(2, n);
  return ((two_n * n) + 1);
}
function woodall(n: number): number {
  return (cullen(n) - 2);
}
function show_list(xs: number[]): string {
  let line: string = "";
  let i: number = 0;
  while ((i < (Array.isArray(xs) || typeof xs === 'string' ? xs.length : Object.keys(xs ?? {}).length))) {
    line = (line + String(xs[i]));
    if ((i < ((Array.isArray(xs) || typeof xs === 'string' ? xs.length : Object.keys(xs ?? {}).length) - 1))) {
      line = (line + " ");
    }
    i = (i + 1);
  }
  return line;
}
function main() {
  let cnums: number[] = [];
  let i: number = 1;
  while ((i <= 20)) {
    cnums = [...cnums, cullen(i)];
    i = (i + 1);
  }
  console.log("First 20 Cullen numbers (n * 2^n + 1):");
  console.log(show_list(cnums));
  let wnums: number[] = [];
  i = 1;
  while ((i <= 20)) {
    wnums = [...wnums, woodall(i)];
    i = (i + 1);
  }
  console.log("\nFirst 20 Woodall numbers (n * 2^n - 1):");
  console.log(show_list(wnums));
  const cprimes: number[] = [1, 141, 4713, 5795, 6611];
  console.log("\nFirst 5 Cullen primes (in terms of n):");
  console.log(show_list(cprimes));
  const wprimes: number[] = [2, 3, 6, 30, 75, 81, 115, 123, 249, 362, 384, 462];
  console.log("\nFirst 12 Woodall primes (in terms of n):");
  console.log(show_list(wprimes));
}
main();
