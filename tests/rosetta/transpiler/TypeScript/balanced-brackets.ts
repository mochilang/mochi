// Generated by Mochi v0.10.38 on 2025-07-23 16:24:29 GMT+7

let seed: number = 1;
function prng(max: number): number {
  seed = (((seed * 1103515245) + 12345) % 2147483648);
  return (seed % max);
}
function gen(n: number): string {
  let arr: string[] = [];
  let i: number = 0;
  while ((i < n)) {
    arr = [...arr, "["];
    arr = [...arr, "]"];
    i = (i + 1);
  }
  let j: number = ((Array.isArray(arr) || typeof arr === 'string' ? arr.length : Object.keys(arr ?? {}).length) - 1);
  while ((j > 0)) {
    const k: number = prng((j + 1));
    const tmp: string = arr[j];
    arr[j] = arr[k];
    arr[k] = tmp;
    j = (j - 1);
  }
  let out: string = "";
  for (const ch of arr) {
    out = (out + ch);
  }
  return out;
}
function testBalanced(s: string) {
  let open: number = 0;
  let i: number = 0;
  while ((i < (Array.isArray(s) || typeof s === 'string' ? s.length : Object.keys(s ?? {}).length))) {
    const c: string = s.slice(i, (i + 1));
    if ((c == "[")) {
      open = (open + 1);
    } else {
      if ((c == "]")) {
        if ((open == 0)) {
          console.log((s + ": not ok"));
          return;
        }
        open = (open - 1);
      } else {
        console.log((s + ": not ok"));
        return;
      }
    }
    i = (i + 1);
  }
  if ((open == 0)) {
    console.log((s + ": ok"));
  } else {
    console.log((s + ": not ok"));
  }
}
function main() {
  let i: number = 0;
  while ((i < 10)) {
    testBalanced(gen(i));
    i = (i + 1);
  }
  testBalanced("()");
}
main();
