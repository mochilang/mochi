// Generated by Mochi v0.10.38 on 2025-07-23 17:14:03 GMT+7

export interface Colour { R: number; G: number; B: number }
export interface Bitmap { width: number; height: number; pixels: Colour[][] }
function newBitmap(w: number, h: number, c: Colour): Bitmap {
  let rows: Colour[][] = [];
  let y: number = 0;
  while ((y < h)) {
    let row: Colour[] = [];
    let x: number = 0;
    while ((x < w)) {
      row = [...row, c];
      x = (x + 1);
    }
    rows = [...rows, row];
    y = (y + 1);
  }
  return {"width": w, "height": h, "pixels": rows};
}
function setPixel(b: Bitmap, x: number, y: number, c: Colour) {
  let rows: Colour[][] = b.pixels;
  let row: Colour[] = rows[Math.trunc(y)];
  row[x] = c;
  rows[y] = row;
  b = ({ ...b, "pixels": rows });
}
function fillRect(b: Bitmap, x: number, y: number, w: number, h: number, c: Colour) {
  let yy: number = y;
  while ((yy < (y + h))) {
    let xx: number = x;
    while ((xx < (x + w))) {
      setPixel(b, xx, yy, c);
      xx = (xx + 1);
    }
    yy = (yy + 1);
  }
}
function pad(n: number, width: number): string {
  let s: string = String(n);
  while (((Array.isArray(s) || typeof s === 'string' ? s.length : Object.keys(s ?? {}).length) < width)) {
    s = (" " + s);
  }
  return s;
}
function writePPMP3(b: Bitmap): string {
  let maxv: number = 0;
  let y: number = 0;
  while ((y < b.height)) {
    let x: number = 0;
    while ((x < b.width)) {
      const p: Colour = b.pixels[Math.trunc(y)][Math.trunc(x)];
      if ((p.R > maxv)) {
        maxv = p.R;
      }
      if ((p.G > maxv)) {
        maxv = p.G;
      }
      if ((p.B > maxv)) {
        maxv = p.B;
      }
      x = (x + 1);
    }
    y = (y + 1);
  }
  let out: string = (((((("P3\n# generated from Bitmap.writeppmp3\n" + String(b.width)) + " ") + String(b.height)) + "\n") + String(maxv)) + "\n");
  let numsize: number = (Array.isArray(String(maxv)) || typeof String(maxv) === 'string' ? String(maxv).length : Object.keys(String(maxv) ?? {}).length);
  y = (b.height - 1);
  while ((y >= 0)) {
    let line: string = "";
    let x: number = 0;
    while ((x < b.width)) {
      const p: Colour = b.pixels[Math.trunc(y)][Math.trunc(x)];
      line = ((((((line + "   ") + pad(p.R, numsize)) + " ") + pad(p.G, numsize)) + " ") + pad(p.B, numsize));
      x = (x + 1);
    }
    out = (out + line);
    if ((y > 0)) {
      out = (out + "\n");
    } else {
      out = (out + "\n");
    }
    y = (y - 1);
  }
  return out;
}
function main() {
  const black: Colour = {"R": 0, "G": 0, "B": 0};
  const white: Colour = {"R": 255, "G": 255, "B": 255};
  let bm: Bitmap = newBitmap(4, 4, black);
  fillRect(bm, 1, 0, 1, 2, white);
  setPixel(bm, 3, 3, {"R": 127, "G": 0, "B": 63});
  const ppm: string = writePPMP3(bm);
  console.log(ppm);
}
main();
