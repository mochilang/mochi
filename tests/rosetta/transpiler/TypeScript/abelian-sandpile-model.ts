// Generated by Mochi v0.10.37 on 2025-07-23 09:25:45 GMT+7

const dim: number = 16;
function newPile(d: number): number[][] {
  let b = [];
  let y = 0;
  while ((y < d)) {
    let row = [];
    let x = 0;
    while ((x < d)) {
      row = [...row, 0];
      x = (x + 1);
    }
    b = [...b, row];
    y = (y + 1);
  }
  return b;
}
function handlePile(pile: number[][], x: number, y: number): number[][] {
  if ((pile[y][x] >= 4)) {
    pile[y][x] = (pile[y][x] - 4);
    if ((y > 0)) {
      pile[(y - 1)][x] = (pile[(y - 1)][x] + 1);
      if ((pile[(y - 1)][x] >= 4)) {
        pile = handlePile(pile, x, (y - 1));
      }
    }
    if ((x > 0)) {
      pile[y][(x - 1)] = (pile[y][(x - 1)] + 1);
      if ((pile[y][(x - 1)] >= 4)) {
        pile = handlePile(pile, (x - 1), y);
      }
    }
    if ((y < (dim - 1))) {
      pile[(y + 1)][x] = (pile[(y + 1)][x] + 1);
      if ((pile[(y + 1)][x] >= 4)) {
        pile = handlePile(pile, x, (y + 1));
      }
    }
    if ((x < (dim - 1))) {
      pile[y][(x + 1)] = (pile[y][(x + 1)] + 1);
      if ((pile[y][(x + 1)] >= 4)) {
        pile = handlePile(pile, (x + 1), y);
      }
    }
    pile = handlePile(pile, x, y);
  }
  return pile;
}
function drawPile(pile: number[][], d: number) {
  const chars = [" ", "░", "▓", "█"];
  let row = 0;
  while ((row < d)) {
    let line = "";
    let col = 0;
    while ((col < d)) {
      let v = pile[row][col];
      if ((v > 3)) {
        v = 3;
      }
      line = (line + chars[v]);
      col = (col + 1);
    }
    console.log(line);
    row = (row + 1);
  }
}
function main() {
  let pile = newPile(16);
  const hdim = 7;
  pile[hdim][hdim] = 16;
  pile = handlePile(pile, hdim, hdim);
  drawPile(pile, 16);
}
main();
