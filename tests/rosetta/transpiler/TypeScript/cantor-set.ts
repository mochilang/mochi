// Generated by Mochi v0.10.38 on 2025-07-23 19:43:02 GMT+7

export interface Stack { start: number; len: number; index: number }
const width: number = 81;
const height: number = 5;
let lines: string[] = [];
for (let i = 0; i < height; i++) {
  let row: string = "";
  let j: number = 0;
  while ((j < width)) {
    row = (row + "*");
    j = (j + 1);
  }
  lines = [...lines, row];
}
function setChar(s: string, idx: number, ch: string): string {
  return (((s).substring(0, idx) + ch) + (s).substring((idx + 1), (Array.isArray(s) || typeof s === 'string' ? s.length : Object.keys(s ?? {}).length)));
}
let stack: Stack[] = [{"start": 0, "len": width, "index": 1}];
while (((Array.isArray(stack) || typeof stack === 'string' ? stack.length : Object.keys(stack ?? {}).length) > 0)) {
  let frame: Stack = stack[Math.trunc(((Array.isArray(stack) || typeof stack === 'string' ? stack.length : Object.keys(stack ?? {}).length) - 1))];
  stack = stack.slice(0, ((Array.isArray(stack) || typeof stack === 'string' ? stack.length : Object.keys(stack ?? {}).length) - 1));
  const start = frame.start;
  const lenSeg = frame.len;
  const index = frame.index;
  const seg: number = Math.trunc((lenSeg / 3));
  if ((seg == 0)) {
    continue
  }
  let i = index;
  while ((i < height)) {
    let j = (start + seg);
    while ((j < (start + (2 * seg)))) {
      lines[i] = setChar(lines[i], j, " ");
      j = (j + 1);
    }
    i = (i + 1);
  }
  stack = [...stack, {start, "len": seg, "index": (index + 1)}];
  stack = [...stack, {"start": (start + (seg * 2)), "len": seg, "index": (index + 1)}];
}
for (const line of lines) {
  console.log(line);
}
