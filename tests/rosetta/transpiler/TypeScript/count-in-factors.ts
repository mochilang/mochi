// Generated by Mochi v0.10.40 on 2025-07-25 23:56:01 GMT+7

var _nowSeed = 0;
var _nowSeeded = false;
{
  let s = "";
  if (typeof Deno !== "undefined") {
    try {
      s = Deno.env.get("MOCHI_NOW_SEED") ?? "";
    } catch (_e) {
      s = "";
    }
  } else if (typeof process !== "undefined") {
    s = process.env.MOCHI_NOW_SEED || "";
  }
  if (s) {
    const v = parseInt(s, 10);
    if (!isNaN(v)) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
function _now(): number {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  if (typeof Deno !== 'undefined') {
    return Math.trunc(performance.now() * 1e6);
  }
  if (typeof performance !== 'undefined') {
    return Math.trunc(performance.now() * 1e6);
  }
  return Date.now() * 1000;
}
function _mem(): number {
  if (typeof Deno !== 'undefined') {
    return (Deno.memoryUsage?.().rss ?? 0);
  }
  if (typeof process !== 'undefined') {
    return process.memoryUsage().rss;
  }
  return 0;
}
{
  const _startMem = _mem()
  const _start = _now()
  function show(n: number) {
    if ((n == 1)) {
      console.log("1: 1");
      return;
    }
    let out: string = (String(n) + ": ");
    let x: string = "";
    let m: number = n;
    let f: number = 2;
    while ((m != 1)) {
      if (((m % f) == 0)) {
        out = ((out + x) + String(f));
        x = "Ã—";
        m = Math.trunc(Math.trunc(m / f));
      } else {
        f = (f + 1);
      }
    }
    console.log(out);
  }
  show(1);
  for (let i = 2; i < 10; i++) {
    show(i);
  }
  console.log("...");
  for (let i = 2144; i < 2155; i++) {
    show(i);
  }
  console.log("...");
  for (let i = 9987; i < 10000; i++) {
    show(i);
  }
  const _end = _now()
  const _duration = _end - _start
  const _duration_us = Math.trunc(_duration / 1000)
  const _endMem = _mem()
  const _memory_bytes = Math.max(0, _endMem - _startMem)
  console.log(JSON.stringify({
    "duration_us": _duration_us,
    "memory_bytes": _memory_bytes,
    "name": "main"
  }, null, "  "))
}

