// Generated by Mochi v0.10.40 on 2025-07-25 17:41:30 GMT+7

function bsearch(arr: number[], x: number): number {
  let low: number = 0;
  let high: number = ((Array.isArray(arr) || typeof arr === 'string' ? arr.length : Object.keys(arr ?? {}).length) - 1);
  while ((low <= high)) {
    const mid: number = ((low + high) / 2);
    if ((arr[mid] > x)) {
      high = (mid - 1);
    } else {
      if ((arr[mid] < x)) {
        low = (mid + 1);
      } else {
        return mid;
      }
    }
  }
  return -1;
}
function bsearchRec(arr: number[], x: number, low: number, high: number): number {
  if ((high < low)) {
    return -1;
  }
  const mid: number = ((low + high) / 2);
  if ((arr[mid] > x)) {
    return bsearchRec(arr, x, low, (mid - 1));
  } else {
    if ((arr[mid] < x)) {
      return bsearchRec(arr, x, (mid + 1), high);
    }
  }
  return mid;
}
function main() {
  const nums: number[] = [-31, 0, 1, 2, 2, 4, 65, 83, 99, 782];
  let x: number = 2;
  let idx: number = bsearch(nums, x);
  if ((idx >= 0)) {
    console.log((((String(x) + " is at index ") + String(idx)) + "."));
  } else {
    console.log((String(x) + " is not found."));
  }
  x = 5;
  idx = bsearchRec(nums, x, 0, ((Array.isArray(nums) || typeof nums === 'string' ? nums.length : Object.keys(nums ?? {}).length) - 1));
  if ((idx >= 0)) {
    console.log((((String(x) + " is at index ") + String(idx)) + "."));
  } else {
    console.log((String(x) + " is not found."));
  }
}
main();
