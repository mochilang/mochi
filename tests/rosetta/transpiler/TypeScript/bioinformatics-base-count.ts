// Generated by Mochi v0.10.40 on 2025-07-25 17:41:32 GMT+7

function padLeft(s: string, w: number): string {
  let res: string = "";
  let n: number = (w - (Array.isArray(s) || typeof s === 'string' ? s.length : Object.keys(s ?? {}).length));
  while ((n > 0)) {
    res = (res + " ");
    n = (n - 1);
  }
  return (res + s);
}
const dna: string = (((((((((("" + "CGTAAAAAATTACAACGTCCTTTGGCTATCTCTTAAACTCCTGCTAAATG") + "CTCGTGCTTTCCAATTATGTAAGCGTTCCGAGACGGGGTGGTCGATTCTG") + "AGGACAAAGGTCAAGATGGAGCGCATCGAACGCAATAAGGATCATTTGAT") + "GGGACGTTTCGTCGACAAAGTCTTGTTTCGAGAGTAACGGCTACCGTCTT") + "CGATTCTGCTTATAACACTATGTTCTTATGAAATGGATGTTCTGAGTTGG") + "TCAGTCCCAATGTGCGGGGTTTCTTTTAGTACGTCGGGAGTGGTATTATA") + "TTTAATTTTTCTATATAGCGATCTGTATTTAAGCAATTCATTTAGGTTAT") + "CGCCGCGATGCTCGGTTCGGACCGCCAAGCATCTGGCTCCACTGCTAGTG") + "TCCTAAATTTGAATGGCAAACACAAATAAGATTTAGCAATTCGTGTAGAC") + "GACCGGGGACTTGCATGATGGGAGCAGCTTTGTTAAACTACGAACGTAAT");
console.log("SEQUENCE:");
const le: number = (Array.isArray(dna) || typeof dna === 'string' ? dna.length : Object.keys(dna ?? {}).length);
let i: number = 0;
while ((i < le)) {
  let k: number = (i + 50);
  if ((k > le)) {
    k = le;
  }
  console.log(((padLeft(String(i), 5) + ": ") + dna.slice(i, k)));
  i = (i + 50);
}
let a: number = 0;
let c: number = 0;
let g: number = 0;
let t: number = 0;
let idx: number = 0;
while ((idx < le)) {
  const ch: string = (dna).substring(idx, (idx + 1));
  if ((ch == "A")) {
    a = (a + 1);
  } else {
    if ((ch == "C")) {
      c = (c + 1);
    } else {
      if ((ch == "G")) {
        g = (g + 1);
      } else {
        if ((ch == "T")) {
          t = (t + 1);
        }
      }
    }
  }
  idx = (idx + 1);
}
console.log("");
console.log("BASE COUNT:");
console.log(("    A: " + padLeft(String(a), 3)));
console.log(("    C: " + padLeft(String(c), 3)));
console.log(("    G: " + padLeft(String(g), 3)));
console.log(("    T: " + padLeft(String(t), 3)));
console.log("    ------");
console.log(("    Î£: " + String(le)));
console.log("    ======");
