// Generated by Mochi v0.10.37 on 2025-07-23 10:26:58 GMT+7

function fields(s: string): string[] {
  let res: string[] = [];
  let cur = "";
  let i = 0;
  while ((i < (Array.isArray(s) || typeof s === 'string' ? s.length : Object.keys(s ?? {}).length))) {
    const c = s.slice(i, (i + 1));
    if ((c == " ")) {
      if (((Array.isArray(cur) || typeof cur === 'string' ? cur.length : Object.keys(cur ?? {}).length) > 0)) {
        res = [...res, cur];
        cur = "";
      }
    } else {
      cur = (cur + c);
    }
    i = (i + 1);
  }
  if (((Array.isArray(cur) || typeof cur === 'string' ? cur.length : Object.keys(cur ?? {}).length) > 0)) {
    res = [...res, cur];
  }
  return res;
}
function canSpell(word: string, blks: string[]): boolean {
  if (((Array.isArray(word) || typeof word === 'string' ? word.length : Object.keys(word ?? {}).length) == 0)) {
    return true;
  }
  const c = word.slice(0, 1).toLowerCase();
  let i = 0;
  while ((i < (Array.isArray(blks) || typeof blks === 'string' ? blks.length : Object.keys(blks ?? {}).length))) {
    const b = blks[i];
    if (((c == b.slice(0, 1).toLowerCase()) || (c == b.slice(1, 2).toLowerCase()))) {
      let rest: string[] = [];
      let j = 0;
      while ((j < (Array.isArray(blks) || typeof blks === 'string' ? blks.length : Object.keys(blks ?? {}).length))) {
        if ((j != i)) {
          rest = [...rest, blks[j]];
        }
        j = (j + 1);
      }
      if (canSpell(word.slice(1), rest)) {
        return true;
      }
    }
    i = (i + 1);
  }
  return false;
}
function newSpeller(blocks: string) {
  const bl = fields(blocks);
  return (w) => canSpell(w, bl);
}
function main() {
  const sp = newSpeller("BO XK DQ CP NA GT RE TG QD FS JW HU VI AN OB ER FS LY PC ZM");
  for (const word of ["A", "BARK", "BOOK", "TREAT", "COMMON", "SQUAD", "CONFUSE"]) {
    console.log(((word + " ") + String(sp(word))));
  }
}
main();
