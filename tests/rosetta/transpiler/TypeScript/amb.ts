// Generated by Mochi v0.10.37 on 2025-07-23 15:51:37 GMT+7

function amb(wordsets: string[][], res: string[], idx: number): boolean {
  if ((idx == (Array.isArray(wordsets) || typeof wordsets === 'string' ? wordsets.length : Object.keys(wordsets ?? {}).length))) {
    return true;
  }
  let prev: string = "";
  if ((idx > 0)) {
    prev = res[(idx - 1)];
  }
  let i: number = 0;
  while ((i < (Array.isArray(wordsets[idx]) || typeof wordsets[idx] === 'string' ? wordsets[idx].length : Object.keys(wordsets[idx] ?? {}).length))) {
    const w: string = wordsets[idx][i];
    if (((idx == 0) || ((prev).substring(((Array.isArray(prev) || typeof prev === 'string' ? prev.length : Object.keys(prev ?? {}).length) - 1), (Array.isArray(prev) || typeof prev === 'string' ? prev.length : Object.keys(prev ?? {}).length)) == (w).substring(0, 1)))) {
      res[idx] = w;
      if (amb(wordsets, res, (idx + 1))) {
        return true;
      }
    }
    i = (i + 1);
  }
  return false;
}
function main() {
  const wordset: string[][] = [["the", "that", "a"], ["frog", "elephant", "thing"], ["walked", "treaded", "grows"], ["slowly", "quickly"]];
  let res: string[] = [];
  let i: number = 0;
  while ((i < (Array.isArray(wordset) || typeof wordset === 'string' ? wordset.length : Object.keys(wordset ?? {}).length))) {
    res = [...res, ""];
    i = (i + 1);
  }
  if (amb(wordset, res, 0)) {
    let out: string = ("[" + res[0]);
    let j: number = 1;
    while ((j < (Array.isArray(res) || typeof res === 'string' ? res.length : Object.keys(res ?? {}).length))) {
      out = ((out + " ") + res[j]);
      j = (j + 1);
    }
    out = (out + "]");
    console.log(out);
  } else {
    console.log("No amb found");
  }
}
main();
