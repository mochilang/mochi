// Generated by Mochi v0.10.41 on 2025-07-26 17:29:56 GMT+7

function indexOf(s: string, ch: string, start: number): number {
  let i: number = start;
  while ((i < (Array.isArray(s) || typeof s === 'string' ? s.length : Object.keys(s ?? {}).length))) {
    if (((s).substring(i, (i + 1)) == ch)) {
      return i;
    }
    i = (i + 1);
  }
  return -1;
}
function ord(ch: string): number {
  let digits: string = "0123456789";
  let idx = digits.indexOf(ch, 0);
  if ((idx >= 0)) {
    return (48 + idx);
  }
  if ((ch == "X")) {
    return 88;
  }
  if ((ch == "é")) {
    return 233;
  }
  if ((ch == "😍")) {
    return 128525;
  }
  if ((ch == "🐡")) {
    return 128033;
  }
  return 0;
}
function toHex(n: number): string {
  let digits: string = "0123456789ABCDEF";
  if ((n == 0)) {
    return "0";
  }
  let v: number = n;
  let out: string = "";
  while ((v > 0)) {
    let d: number = (v % 16);
    out = (digits.slice(d, (d + 1)) + out);
    v = Math.trunc(v / 16);
  }
  return out;
}
function analyze(s: string) {
  let le: number = (Array.isArray(s) || typeof s === 'string' ? s.length : Object.keys(s ?? {}).length);
  console.log((((("Analyzing \"" + s) + "\" which has a length of ") + String(le)) + ":"));
  if ((le > 1)) {
    let i: number = 0;
    while ((i < (le - 1))) {
      let j: number = (i + 1);
      while ((j < le)) {
        if (((s).substring(j, (j + 1)) == (s).substring(i, (i + 1)))) {
          let ch: string = (s).substring(i, (i + 1));
          console.log("  Not all characters in the string are unique.");
          console.log((((((((("  '" + ch) + "' (0x") + toHex(ord(ch)).toLowerCase()) + ") is duplicated at positions ") + String((i + 1))) + " and ") + String((j + 1))) + ".\n"));
          return;
        }
        j = (j + 1);
      }
      i = (i + 1);
    }
  }
  console.log("  All characters in the string are unique.\n");
}
function main() {
  let strings: string[] = ["", ".", "abcABC", "XYZ ZYX", "1234567890ABCDEFGHIJKLMN0PQRSTUVWXYZ", "01234567890ABCDEFGHIJKLMN0PQRSTUVWXYZ0X", "hétérogénéité", "🎆🎃🎇🎈", "😍😀🙌💃😍🙌", "🐠🐟🐡🦈🐬🐳🐋🐡"];
  let i: number = 0;
  while ((i < (Array.isArray(strings) || typeof strings === 'string' ? strings.length : Object.keys(strings ?? {}).length))) {
    analyze(strings[i]);
    i = (i + 1);
  }
}
main();
