// Generated by Mochi v0.10.40 on 2025-07-25 17:41:21 GMT+7

function bellTriangle(n: number): number[][] {
  let tri: number[][] = [];
  let i: number = 0;
  while ((i < n)) {
    let row: number[] = [];
    let j: number = 0;
    while ((j < i)) {
      row = [...row, 0];
      j = (j + 1);
    }
    tri = [...tri, row];
    i = (i + 1);
  }
  tri[1][0] = 1;
  i = 2;
  while ((i < n)) {
    tri[i][0] = tri[Math.trunc((i - 1))][Math.trunc((i - 2))];
    let j: number = 1;
    while ((j < i)) {
      tri[i][j] = (tri[i][Math.trunc((j - 1))] + tri[Math.trunc((i - 1))][Math.trunc((j - 1))]);
      j = (j + 1);
    }
    i = (i + 1);
  }
  return tri;
}
function main() {
  const bt: number[][] = bellTriangle(51);
  console.log("First fifteen and fiftieth Bell numbers:");
  for (let i = 1; i < 16; i++) {
    console.log(((("" + String(String(i)).padStart(2, " ")) + ": ") + String(bt[i][Math.trunc(0)])));
  }
  console.log(("50: " + String(bt[Math.trunc(50)][Math.trunc(0)])));
  console.log("");
  console.log("The first ten rows of Bell's triangle:");
  for (let i = 1; i < 11; i++) {
    console.log("[" + (bt[i]).join(' ') + "]");
  }
}
main();
