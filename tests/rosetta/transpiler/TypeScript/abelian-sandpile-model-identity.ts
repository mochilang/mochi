// Generated by Mochi v0.10.37 on 2025-07-23 09:25:35 GMT+7

function neighborsList(): number[][] {
  return [[1, 3], [0, 2, 4], [1, 5], [0, 4, 6], [1, 3, 5, 7], [2, 4, 8], [3, 7], [4, 6, 8], [5, 7]];
}
function plus(a: number[], b: number[]): number[] {
  let res = [];
  let i = 0;
  while ((i < (Array.isArray(a) || typeof a === 'string' ? a.length : Object.keys(a ?? {}).length))) {
    res = [...res, (a[i] + b[i])];
    i = (i + 1);
  }
  return res;
}
function isStable(p: number[]): boolean {
  for (const v of p) {
    if ((v > 3)) {
      return false;
    }
  }
  return true;
}
function topple(p: number[]): number {
  const neighbors = neighborsList();
  let i = 0;
  while ((i < (Array.isArray(p) || typeof p === 'string' ? p.length : Object.keys(p ?? {}).length))) {
    if ((p[i] > 3)) {
      p[i] = (p[i] - 4);
      const nbs = neighbors[i];
      for (const j of nbs) {
        p[j] = (p[j] + 1);
      }
      return 0;
    }
    i = (i + 1);
  }
  return 0;
}
function pileString(p: number[]): string {
  let s = "";
  let r = 0;
  while ((r < 3)) {
    let c = 0;
    while ((c < 3)) {
      s = ((s + String(p[((3 * r) + c)])) + " ");
      c = (c + 1);
    }
    s = (s + "\n");
    r = (r + 1);
  }
  return s;
}
console.log("Avalanche of topplings:\n");
let s4: number[] = [4, 3, 3, 3, 1, 2, 0, 2, 3];
console.log(pileString(s4));
while (!isStable(s4)) {
  topple(s4);
  console.log(pileString(s4));
}
console.log("Commutative additions:\n");
let s1: number[] = [1, 2, 0, 2, 1, 1, 0, 1, 3];
let s2: number[] = [2, 1, 3, 1, 0, 1, 0, 1, 0];
let s3_a: number[] = plus(s1, s2);
while (!isStable(s3_a)) {
  topple(s3_a);
}
let s3_b: number[] = plus(s2, s1);
while (!isStable(s3_b)) {
  topple(s3_b);
}
console.log(((((pileString(s1) + "\nplus\n\n") + pileString(s2)) + "\nequals\n\n") + pileString(s3_a)));
console.log(((((("and\n\n" + pileString(s2)) + "\nplus\n\n") + pileString(s1)) + "\nalso equals\n\n") + pileString(s3_b)));
console.log("Addition of identity sandpile:\n");
let s3: number[] = [3, 3, 3, 3, 3, 3, 3, 3, 3];
let s3_id: number[] = [2, 1, 2, 1, 0, 1, 2, 1, 2];
let s4b: number[] = plus(s3, s3_id);
while (!isStable(s4b)) {
  topple(s4b);
}
console.log(((((pileString(s3) + "\nplus\n\n") + pileString(s3_id)) + "\nequals\n\n") + pileString(s4b)));
console.log("Addition of identities:\n");
let s5: number[] = plus(s3_id, s3_id);
while (!isStable(s5)) {
  topple(s5);
}
console.log(((((pileString(s3_id) + "\nplus\n\n") + pileString(s3_id)) + "\nequals\n\n") + pileString(s5)));
