// Generated by Mochi v0.10.40 on 2025-07-26 00:12:07 GMT+7

var _nowSeed = 0;
var _nowSeeded = false;
{
  let s = "";
  if (typeof Deno !== "undefined") {
    try {
      s = Deno.env.get("MOCHI_NOW_SEED") ?? "";
    } catch (_e) {
      s = "";
    }
  } else if (typeof process !== "undefined") {
    s = process.env.MOCHI_NOW_SEED || "";
  }
  if (s) {
    const v = parseInt(s, 10);
    if (!isNaN(v)) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
function _now(): number {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  if (typeof Deno !== 'undefined') {
    return Math.trunc(performance.now() * 1e6);
  }
  if (typeof performance !== 'undefined') {
    return Math.trunc(performance.now() * 1e6);
  }
  return Date.now() * 1000;
}
function _mem(): number {
  if (typeof Deno !== 'undefined') {
    return (Deno.memoryUsage?.().rss ?? 0);
  }
  if (typeof process !== 'undefined') {
    return process.memoryUsage().rss;
  }
  return 0;
}
{
  const _startMem = _mem()
  const _start = _now()
  function weekday(y: number, m: number, d: number): number {
    let yy: number = y;
    let mm: number = m;
    if ((mm < 3)) {
      mm = (mm + 12);
      yy = (yy - 1);
    }
    let k: number = (yy % 100);
    let j: number = Math.trunc(Math.trunc(yy / 100));
    let a: number = Math.trunc(((13 * (mm + 1)) / 5));
    let b: number = Math.trunc((k / 4));
    let c: number = Math.trunc(Math.trunc(j / 4));
    return ((((((d + a) + k) + b) + c) + (5 * j)) % 7);
  }
  for (let year = 2008; year < 2122; year++) {
    if ((weekday(year, 12, 25) == 1)) {
      console.log((("25 December " + String(year)) + " is Sunday"));
    }
  }
  const _end = _now()
  const _duration = _end - _start
  const _duration_us = Math.trunc(_duration / 1000)
  const _endMem = _mem()
  const _memory_bytes = Math.max(0, _endMem - _startMem)
  console.log(JSON.stringify({
    "duration_us": _duration_us,
    "memory_bytes": _memory_bytes,
    "name": "main"
  }, null, "  "))
}

