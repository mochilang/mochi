// Generated by Mochi v0.10.40 on 2025-07-25 17:41:25 GMT+7

function nextRand(seed: number): number {
  return (((seed * 1664525) + 1013904223) % 2147483647);
}
function shuffleChars(s: string, seed: number): any[] {
  let chars: string[] = [];
  let i: number = 0;
  while ((i < (Array.isArray(s) || typeof s === 'string' ? s.length : Object.keys(s ?? {}).length))) {
    chars = [...chars, (s).substring(i, (i + 1))];
    i = (i + 1);
  }
  let sd: number = seed;
  let idx: number = ((Array.isArray(chars) || typeof chars === 'string' ? chars.length : Object.keys(chars ?? {}).length) - 1);
  while ((idx > 0)) {
    sd = nextRand(sd);
    let j: number = (sd % (idx + 1));
    const tmp: string = chars[idx];
    chars[idx] = chars[j];
    chars[j] = tmp;
    idx = (idx - 1);
  }
  let res: string = "";
  i = 0;
  while ((i < (Array.isArray(chars) || typeof chars === 'string' ? chars.length : Object.keys(chars ?? {}).length))) {
    res = (res + chars[i]);
    i = (i + 1);
  }
  return [res, sd];
}
function bestShuffle(s: string, seed: number): any[] {
  const r: any[] = shuffleChars(s, seed);
  let t = r[Math.trunc(0)];
  let sd = r[Math.trunc(1)];
  let arr: string[] = [];
  let i: number = 0;
  while ((i < (Array.isArray(t) || typeof t === 'string' ? t.length : Object.keys(t ?? {}).length))) {
    arr = [...arr, (t).substring(i, (i + 1))];
    i = (i + 1);
  }
  i = 0;
  while ((i < (Array.isArray(arr) || typeof arr === 'string' ? arr.length : Object.keys(arr ?? {}).length))) {
    let j: number = 0;
    while ((j < (Array.isArray(arr) || typeof arr === 'string' ? arr.length : Object.keys(arr ?? {}).length))) {
      if ((((i != j) && (arr[i] != (s).substring(j, (j + 1)))) && (arr[j] != (s).substring(i, (i + 1))))) {
        const tmp: string = arr[i];
        arr[i] = arr[j];
        arr[j] = tmp;
        break
      }
      j = (j + 1);
    }
    i = (i + 1);
  }
  let count: number = 0;
  i = 0;
  while ((i < (Array.isArray(arr) || typeof arr === 'string' ? arr.length : Object.keys(arr ?? {}).length))) {
    if ((arr[i] == (s).substring(i, (i + 1)))) {
      count = (count + 1);
    }
    i = (i + 1);
  }
  let out: string = "";
  i = 0;
  while ((i < (Array.isArray(arr) || typeof arr === 'string' ? arr.length : Object.keys(arr ?? {}).length))) {
    out = (out + arr[i]);
    i = (i + 1);
  }
  return [out, sd, count];
}
function main() {
  const ts: string[] = ["abracadabra", "seesaw", "elk", "grrrrrr", "up", "a"];
  let seed: number = 1;
  let i: number = 0;
  while ((i < (Array.isArray(ts) || typeof ts === 'string' ? ts.length : Object.keys(ts ?? {}).length))) {
    const r: any[] = bestShuffle(ts[i], seed);
    const shuf = r[Math.trunc(0)];
    seed = r[Math.trunc(1)];
    const cnt = r[Math.trunc(2)];
    console.log((((((ts[i] + " -> ") + shuf) + " (") + String(cnt)) + ")"));
    i = (i + 1);
  }
}
main();
