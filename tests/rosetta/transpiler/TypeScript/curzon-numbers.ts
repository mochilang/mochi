// Generated by Mochi v0.10.39 on 2025-07-24 18:23:03 GMT+7

function padLeft(n: number, width: number): string {
  let s: string = String(n);
  while (((Array.isArray(s) || typeof s === 'string' ? s.length : Object.keys(s ?? {}).length) < width)) {
    s = (" " + s);
  }
  return s;
}
function modPow(base: number, exp: number, mod: number): number {
  let result: number = (1 % mod);
  let b: number = (base % mod);
  let e: number = exp;
  while ((e > 0)) {
    if (((e % 2) == 1)) {
      result = ((result * b) % mod);
    }
    b = ((b * b) % mod);
    e = Math.trunc(e / 2);
  }
  return result;
}
function main() {
  let k: number = 2;
  while ((k <= 10)) {
    console.log((("The first 50 Curzon numbers using a base of " + String(k)) + " :"));
    let count: number = 0;
    let n: number = 1;
    let curzon50: number[] = [];
    while (true) {
      const d: number = ((k * n) + 1);
      if ((((modPow(k, n, d) + 1) % d) == 0)) {
        if ((count < 50)) {
          curzon50 = [...curzon50, n];
        }
        count = (count + 1);
        if ((count == 50)) {
          let idx: number = 0;
          while ((idx < (Array.isArray(curzon50) || typeof curzon50 === 'string' ? curzon50.length : Object.keys(curzon50 ?? {}).length))) {
            let line: string = "";
            let j: number = 0;
            while ((j < 10)) {
              line = ((line + padLeft(curzon50[idx], 4)) + " ");
              idx = (idx + 1);
              j = (j + 1);
            }
            console.log((line).substring(0, ((Array.isArray(line) || typeof line === 'string' ? line.length : Object.keys(line ?? {}).length) - 1)));
          }
        }
        if ((count == 1000)) {
          console.log(("\nOne thousandth: " + String(n)));
          break
        }
      }
      n = (n + 1);
    }
    console.log("");
    k = (k + 2);
  }
}
main();
