// Generated by Mochi v0.10.40 on 2025-07-26 00:40:50 GMT+7

var _nowSeed = 0;
var _nowSeeded = false;
{
  let s = "";
  if (typeof Deno !== "undefined") {
    try {
      s = Deno.env.get("MOCHI_NOW_SEED") ?? "";
    } catch (_e) {
      s = "";
    }
  } else if (typeof process !== "undefined") {
    s = process.env.MOCHI_NOW_SEED || "";
  }
  if (s) {
    const v = parseInt(s, 10);
    if (!isNaN(v)) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
function _now(): number {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  if (typeof Deno !== 'undefined') {
    return Math.trunc(performance.now() * 1e6);
  }
  if (typeof performance !== 'undefined') {
    return Math.trunc(performance.now() * 1e6);
  }
  return Date.now() * 1000;
}
function _mem(): number {
  if (typeof Deno !== 'undefined') {
    return (Deno.memoryUsage?.().rss ?? 0);
  }
  if (typeof process !== 'undefined') {
    return process.memoryUsage().rss;
  }
  return 0;
}
import { createHash } from 'node:crypto';
function sha256(bs: number[]): number[] {
  const hash = createHash('sha256');
  hash.update(new Uint8Array(bs));
  return Array.from(hash.digest());
}
{
  const _startMem = _mem()
  const _start = _now()
  const testpkg = { Add: (a:number,b:number)=>a+b, Pi: 3.14, Answer: 42, FifteenPuzzleExample: ()=>'Solution found in 52 moves: rrrulddluuuldrurdddrullulurrrddldluurddlulurruldrdrd', MD5Hex: (s:string)=>{ const h=createHash('md5'); h.update(s); return h.digest('hex'); } };
  for (const pair of [["d41d8cd98f00b204e9800998ecf8427e", ""], ["0cc175b9c0f1b6a831c399e269772661", "a"], ["900150983cd24fb0d6963f7d28e17f72", "abc"], ["f96b697d7cb7938d525a2f31aaf161d0", "message digest"], ["c3fcd3d76192e4007dfb496cca67e13b", "abcdefghijklmnopqrstuvwxyz"], ["d174ab98d277d9f5a5611c2c9f419d9f", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"], ["57edf4a22be3c955ac49da2e2107b67a", ("12345678901234567890" + "123456789012345678901234567890123456789012345678901234567890")], ["e38ca1d920c4b8b8d3946b2c72f01680", "The quick brown fox jumped over the lazy dog's back"]]) {
    let sum = testpkg.MD5Hex(pair[Math.trunc(1)]);
    if ((sum != pair[Math.trunc(0)])) {
      console.log("MD5 fail");
      console.log("  for string,", pair[Math.trunc(1)]);
      console.log("  expected:  ", pair[Math.trunc(0)]);
      console.log("  got:       ", sum);
    }
  }
  const _end = _now()
  const _duration = _end - _start
  const _duration_us = Math.trunc(_duration / 1000)
  const _endMem = _mem()
  const _memory_bytes = Math.max(0, _endMem - _startMem)
  console.log(JSON.stringify({
    "duration_us": _duration_us,
    "memory_bytes": _memory_bytes,
    "name": "main"
  }, null, "  "))
}

