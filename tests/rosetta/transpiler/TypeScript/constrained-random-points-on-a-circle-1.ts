// Generated by Mochi v0.10.39 on 2025-07-24 15:37:19 GMT+7

var _nowSeed = 0;
var _nowSeeded = false;
{
  const s = typeof Deno !== "undefined" ? Deno.env.get("MOCHI_NOW_SEED") : (process.env.MOCHI_NOW_SEED || "");
  if (s) {
    const v = parseInt(s, 10);
    if (!isNaN(v)) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
function _now(): number {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return Date.now() * 1000;
}
const nPts: number = 100;
const rMin: number = 10;
const rMax: number = 15;
const span: number = ((rMax + 1) + rMax);
let rows: string[][] = [];
let r: number = 0;
while ((r < span)) {
  let row: string[] = [];
  let c: number = 0;
  while ((c < (span * 2))) {
    row = [...row, " "];
    c = (c + 1);
  }
  rows = [...rows, row];
  r = (r + 1);
}
let u: number = 0;
let seen: Record<string, boolean> = {};
const min2: number = (rMin * rMin);
const max2: number = (rMax * rMax);
let n: number = 0;
while ((n < nPts)) {
  let x: number = ((_now() % span) - rMax);
  let y: number = ((_now() % span) - rMax);
  const rs: number = ((x * x) + (y * y));
  if (((rs < min2) || (rs > max2))) {
    continue
  }
  n = (n + 1);
  const row: string[] = (y + rMax);
  const col: number = ((x + rMax) * 2);
  rows[row][col] = "*";
  const key: string = ((String(row) + ",") + String(col));
  if (!seen[key]) {
    seen[key] = true;
    u = (u + 1);
  }
}
let i: number = 0;
while ((i < span)) {
  let line: string = "";
  let j: number = 0;
  while ((j < (span * 2))) {
    line = (line + rows[i][j]);
    j = (j + 1);
  }
  console.log(line);
  i = (i + 1);
}
console.log((String(u) + " unique points"));
