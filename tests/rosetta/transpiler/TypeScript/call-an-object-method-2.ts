// Generated by Mochi v0.10.57 on 2025-08-04 16:11:08 GMT+7

function Box_TellSecret(self: Box): number {
  return self.secret;
}
function newFactory(): any[] {
  let sn: number = 0;
  function New(): Box {
    sn = (sn + 1);
    let b: Box = {"secret": sn, "TellSecret": function(...args){ return Box_TellSecret(this, ...args); }};
    if ((sn == 1)) {
      b.Contents = "rabbit";
    } else {
      if ((sn == 2)) {
        b.Contents = "rock";
      }
    }
    return b;
  }
  function Count(): number {
    return sn;
  }
  return [New, Count];
}
export interface Box { Contents: string; secret: number }
var _nowSeed = 0;
var _nowSeeded = false;
{
  let s = "";
  if (typeof Deno !== "undefined") {
    try {
      s = Deno.env.get("MOCHI_NOW_SEED") ?? "";
    } catch (_e) {
      s = "";
    }
  } else if (typeof process !== "undefined") {
    s = process.env.MOCHI_NOW_SEED || "";
  }
  if (s) {
    const v = parseInt(s, 10);
    if (!isNaN(v)) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
function _now(): number {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  if (typeof Deno !== 'undefined') {
    return Math.trunc(performance.now() * 1e6);
  }
  if (typeof performance !== 'undefined') {
    return Math.trunc(performance.now() * 1e6);
  }
  return Date.now() * 1000;
}
function _mem(): number {
  if (typeof Deno !== 'undefined') {
    return (Deno.memoryUsage?.().heapUsed ?? 0);
  }
  if (typeof process !== 'undefined') {
    return process.memoryUsage().heapUsed;
  }
  return 0;
}
let funcs: any[]
let New: any
let Count: any
(() => {
  globalThis.gc?.()
  const _startMem = _mem()
  const _start = _now()
funcs = newFactory()
New = funcs[Math.trunc(0)]
Count = funcs[Math.trunc(1)]
  const _end = _now()
  const _duration = _end - _start
  const _duration_us = Math.trunc(_duration / 1000)
  globalThis.gc?.()
  const _endMem = _mem()
  const _memory_bytes = Math.max(0, _endMem - _startMem)
  console.log(JSON.stringify({
    "duration_us": _duration_us,
    "memory_bytes": _memory_bytes,
    "name": "main"
  }, null, "  "))
})();

