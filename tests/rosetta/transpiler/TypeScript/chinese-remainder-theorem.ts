// Generated by Mochi v0.10.38 on 2025-07-23 20:05:12 GMT+7

function egcd(a: number, b: number): number[] {
  if ((a == 0)) {
    return [b, 0, 1];
  }
  const res: number = egcd((b % a), a);
  const g = res[Math.trunc(0)];
  const x1 = res[Math.trunc(1)];
  const y1 = res[Math.trunc(2)];
  return [g, (y1 - (Math.trunc(b / a) * x1)), x1];
}
function modInv(a: number, m: number): number {
  const r: number[] = egcd(a, m);
  if ((r[Math.trunc(0)] != 1)) {
    return 0;
  }
  const x: number = r[Math.trunc(1)];
  if ((x < 0)) {
    return (x + m);
  }
  return x;
}
function crt(a: number[], n: number[]): number {
  let prod: number = 1;
  let i: number = 0;
  while ((i < (Array.isArray(n) || typeof n === 'string' ? n.length : Object.keys(n ?? {}).length))) {
    prod = (prod * n[i]);
    i = (i + 1);
  }
  let x: number = 0;
  i = 0;
  while ((i < (Array.isArray(n) || typeof n === 'string' ? n.length : Object.keys(n ?? {}).length))) {
    const ni: number = n[i];
    const ai: number = a[i];
    const p: number = Math.trunc(prod / ni);
    const inv: number = modInv((p % ni), ni);
    x = (x + ((ai * inv) * p));
    i = (i + 1);
  }
  return (x % prod);
}
const n: number[] = [3, 5, 7];
const a: number[] = [2, 3, 2];
const res: number = crt(a, n);
console.log((String(res) + " <nil>"));
