// Generated by Mochi v0.10.37 on 2025-07-23 15:52:36 GMT+7

export interface Complex { re: number; im: number }
function add(a: Complex, b: Complex): Complex {
  return {"re": (a.re + b.re), "im": (a.im + b.im)};
}
function mul(a: Complex, b: Complex): Complex {
  return {"re": ((a.re * b.re) - (a.im * b.im)), "im": ((a.re * b.im) + (a.im * b.re))};
}
function neg(a: Complex): Complex {
  return {"re": -a.re, "im": -a.im};
}
function inv(a: Complex): Complex {
  const denom = ((a.re * a.re) + (a.im * a.im));
  return {"re": (a.re / denom), "im": (-a.im / denom)};
}
function conj(a: Complex): Complex {
  return {"re": a.re, "im": -a.im};
}
function cstr(a: Complex): string {
  let s: string = ("(" + String(a.re));
  if ((a.im >= 0)) {
    s = (((s + "+") + String(a.im)) + "i)");
  } else {
    s = ((s + String(a.im)) + "i)");
  }
  return s;
}
const a: Complex = {"re": 1.0, "im": 1.0};
const b: Complex = {"re": 3.14159, "im": 1.25};
console.log(("a:       " + cstr(a)));
console.log(("b:       " + cstr(b)));
console.log(("a + b:   " + cstr(add(a, b))));
console.log(("a * b:   " + cstr(mul(a, b))));
console.log(("-a:      " + cstr(neg(a))));
console.log(("1 / a:   " + cstr(inv(a))));
console.log(("aÌ…:       " + cstr(conj(a))));
