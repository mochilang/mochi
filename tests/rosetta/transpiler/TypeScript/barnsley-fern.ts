// Generated by Mochi v0.10.38 on 2025-07-23 17:03:36 GMT+7

const xMin: number = -2.182;
const xMax: number = 2.6558;
const yMin: number = 0.0;
const yMax: number = 9.9983;
const width: number = 60;
const nIter: number = 10000;
const dx: number = (xMax - xMin);
const dy: number = (yMax - yMin);
const height: number = Math.trunc(((width * dy) / dx));
let grid: string[][] = [];
let row: number = 0;
while ((row < height)) {
  let line: string[] = [];
  let col: number = 0;
  while ((col < width)) {
    line = [...line, " "];
    col = (col + 1);
  }
  grid = [...grid, line];
  row = (row + 1);
}
let seed: number = 1;
function randInt(s: number, n: number): number[] {
  const next: number = (((s * 1664525) + 1013904223) % 2147483647);
  return [next, (next % n)];
}
let x: number = 0.0;
let y: number = 0.0;
let ix: number = Math.trunc(((width * (x - xMin)) / dx));
let iy: number = Math.trunc(((height * (yMax - y)) / dy));
if (((((ix >= 0) && (ix < width)) && (iy >= 0)) && (iy < height))) {
  grid[iy][ix] = "*";
}
let i: number = 0;
while ((i < nIter)) {
  let res: number[] = randInt(seed, 100);
  seed = res[0];
  const r: number = res[1];
  if ((r < 85)) {
    const nx: number = ((0.85 * x) + (0.04 * y));
    const ny: number = (((-0.04 * x) + (0.85 * y)) + 1.6);
    x = nx;
    y = ny;
  } else {
    if ((r < 92)) {
      const nx: number = ((0.2 * x) - (0.26 * y));
      const ny: number = (((0.23 * x) + (0.22 * y)) + 1.6);
      x = nx;
      y = ny;
    } else {
      if ((r < 99)) {
        const nx: number = ((-0.15 * x) + (0.28 * y));
        const ny: number = (((0.26 * x) + (0.24 * y)) + 0.44);
        x = nx;
        y = ny;
      } else {
        x = 0.0;
        y = (0.16 * y);
      }
    }
  }
  ix = Math.trunc(((width * (x - xMin)) / dx));
  iy = Math.trunc(((height * (yMax - y)) / dy));
  if (((((ix >= 0) && (ix < width)) && (iy >= 0)) && (iy < height))) {
    grid[iy][ix] = "*";
  }
  i = (i + 1);
}
row = 0;
while ((row < height)) {
  let line: string = "";
  let col: number = 0;
  while ((col < width)) {
    line = (line + grid[row][col]);
    col = (col + 1);
  }
  console.log(line);
  row = (row + 1);
}
