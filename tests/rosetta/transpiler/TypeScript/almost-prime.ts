// Generated by Mochi v0.10.40 on 2025-07-25 17:22:18 GMT+7

var _nowSeed = 0;
var _nowSeeded = false;
{
  let s = "";
  if (typeof Deno !== "undefined") {
    try {
      s = Deno.env.get("MOCHI_NOW_SEED") ?? "";
    } catch (_e) {
      s = "";
    }
  } else if (typeof process !== "undefined") {
    s = process.env.MOCHI_NOW_SEED || "";
  }
  if (s) {
    const v = parseInt(s, 10);
    if (!isNaN(v)) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
function _now(): number {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  if (typeof Deno !== 'undefined') {
    return Math.trunc(performance.now() * 1e6);
  }
  if (typeof performance !== 'undefined') {
    return Math.trunc(performance.now() * 1e6);
  }
  return Date.now() * 1000;
}
function _mem(): number {
  if (typeof Deno !== 'undefined') {
    return (Deno.memoryUsage?.().rss ?? 0);
  }
  if (typeof process !== 'undefined') {
    return process.memoryUsage().rss;
  }
  return 0;
}
{
  const _startMem = _mem()
  const _start = _now()
  function kPrime(n: number, k: number): boolean {
    let nf: number = 0;
    let i: number = 2;
    while ((i <= n)) {
      while (((n % i) == 0)) {
        if ((nf == k)) {
          return false;
        }
        nf = (nf + 1);
        n = Math.trunc(n / i);
      }
      i = (i + 1);
    }
    return (nf == k);
  }
  function gen(k: number, count: number): number[] {
    let r: number[] = [];
    let n: number = 2;
    while (((Array.isArray(r) || typeof r === 'string' ? r.length : Object.keys(r ?? {}).length) < count)) {
      if (kPrime(n, k)) {
        r = [...r, n];
      }
      n = (n + 1);
    }
    return r;
  }
  function main() {
    let k: number = 1;
    while ((k <= 5)) {
      console.log(((String(k) + " ") + String(gen(k, 10))));
      k = (k + 1);
    }
  }
  main();
  const _end = _now()
  const _duration = _end - _start
  const _duration_us = Math.trunc(_duration / 1000)
  const _endMem = _mem()
  const _memory_bytes = Math.max(0, _endMem - _startMem)
  console.log(JSON.stringify({
    "duration_us": _duration_us,
    "memory_bytes": _memory_bytes,
    "name": "main"
  }, null, "  "))
}

