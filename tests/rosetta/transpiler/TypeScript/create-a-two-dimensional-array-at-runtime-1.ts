// Generated by Mochi v0.10.39 on 2025-07-24 18:20:06 GMT+7

let _inputData: string[] | null = null;
function _input(): string {
  if (_inputData === null) {
    let data: string;
    if (typeof Deno !== 'undefined') {
      const dec = new TextDecoder();
      const chunks: string[] = [];
      const buf = new Uint8Array(1024);
      for (;;) {
        const n = Deno.stdin.readSync(buf);
        if (n === null) break;
        chunks.push(dec.decode(buf.subarray(0, n)));
        if (n < buf.length) break;
      }
      data = chunks.join('');
    } else {
      const fs = require('fs');
      data = fs.readFileSync(0, 'utf8');
    }
    _inputData = data.split(/\r?\n/);
  }
  const v = _inputData.shift();
  return v === undefined ? '' : v;
}
function main() {
  console.log("enter rows cols: ");
  const row: number = Math.trunc(_input());
  const col: number = Math.trunc(_input());
  let a: number[][] = [];
  let i: number = 0;
  while ((i < row)) {
    let rowArr: number[] = [];
    let j: number = 0;
    while ((j < col)) {
      rowArr = [...rowArr, 0];
      j = (j + 1);
    }
    a = [...a, rowArr];
    i = (i + 1);
  }
  console.log(("a[0][0] = " + String(a[Math.trunc(0)][Math.trunc(0)])));
  a[Math.trunc((row - 1))][Math.trunc((col - 1))] = 7;
  console.log(((((("a[" + String((row - 1))) + "][") + String((col - 1))) + "] = ") + String(a[Math.trunc(Math.trunc((row - 1)))][Math.trunc(Math.trunc((col - 1)))])));
  a = null;
}
main();
