// Generated by Mochi v0.10.39 on 2025-07-24 18:23:00 GMT+7

function sqrtApprox(x: number): number {
  if ((x <= 0.0)) {
    return 0.0;
  }
  let g: number = x;
  let i: number = 0;
  while ((i < 20)) {
    g = ((g + Math.trunc(x / g)) / 2.0);
    i = (i + 1);
  }
  return g;
}
export interface Rsdv { n: number; a: number; q: number }
function newRsdv(): Rsdv {
  return {"n": 0.0, "a": 0.0, "q": 0.0};
}
function add(r: Rsdv, x: number): Rsdv {
  const n1: number = (r.n + 1.0);
  const a1: number = (r.a + Math.trunc((x - r.a) / n1));
  const q1: number = (r.q + ((x - r.a) * (x - a1)));
  return {"n": n1, "a": a1, "q": q1};
}
function sd(r: Rsdv): number {
  return sqrtApprox(Math.trunc(r.q / r.n));
}
function main() {
  let r: Rsdv = newRsdv();
  for (const x of [2.0, 4.0, 4.0, 4.0, 5.0, 5.0, 7.0, 9.0]) {
    r = add(r, x);
    console.log(String(sd(r)));
  }
}
main();
