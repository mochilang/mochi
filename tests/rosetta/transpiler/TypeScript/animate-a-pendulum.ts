// Generated by Mochi v0.10.37 on 2025-07-23 15:51:58 GMT+7

const PI: number = 3.141592653589793;
function sinApprox(x: number): number {
  let term: number = x;
  let sum = x;
  let n: number = 1;
  while ((n <= 10)) {
    const denom = ((2 * n) * ((2 * n) + 1));
    term = (((-term * x) * x) / denom);
    sum = (sum + term);
    n = (n + 1);
  }
  return sum;
}
function cosApprox(x: number): number {
  let term: number = 1.0;
  let sum = 1.0;
  let n: number = 1;
  while ((n <= 10)) {
    const denom = (((2 * n) - 1) * (2 * n));
    term = (((-term * x) * x) / denom);
    sum = (sum + term);
    n = (n + 1);
  }
  return sum;
}
function sqrtApprox(x: number): number {
  let guess: number = x;
  let i: number = 0;
  while ((i < 10)) {
    guess = ((guess + (x / guess)) / 2.0);
    i = (i + 1);
  }
  return guess;
}
const L: number = 10.0;
const G: number = 9.81;
const dt: number = 0.2;
const phi0: number = (PI / 4.0);
const omega: number = sqrtApprox((G / L));
let t: number = 0.0;
for (let step = 0; step < 10; step++) {
  const phi: number = (phi0 * cosApprox((omega * t)));
  const pos: number = ((10.0 * sinApprox(phi)) + 0.5);
  console.log(String(pos));
  t = (t + dt);
}
