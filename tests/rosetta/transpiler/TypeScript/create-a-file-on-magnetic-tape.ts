// Generated by Mochi v0.10.39 on 2025-07-24 17:00:13 GMT+7

export interface Hdr { Name: string; Mode: number; Size: number; ModTime: number; Typeflag: number; Uname: string; Gname: string }
var _nowSeed = 0;
var _nowSeeded = false;
{
  const s = typeof Deno !== "undefined" ? Deno.env.get("MOCHI_NOW_SEED") : (process.env.MOCHI_NOW_SEED || "");
  if (s) {
    const v = parseInt(s, 10);
    if (!isNaN(v)) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
function _now(): number {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  return Date.now() * 1000;
}
function gzipWriter(w) {
  return w;
}
function tarWriter(w) {
  return w;
}
function tarWriteHeader(w, hdr: Record<string, any>) {
}
function tarWrite(w, data: string) {
}
function main() {
  const filename: string = "TAPE.FILE";
  const data: string = "";
  const outfile: string = "";
  const gzipFlag: boolean = false;
  let w = null;
  if ((outfile != "")) {
    w = null;
  }
  if (gzipFlag) {
    w = gzipWriter(w);
  }
  w = tarWriter(w);
  let hdr: Hdr = {"Name": filename, "Mode": 432, "Size": (Array.isArray(data) || typeof data === 'string' ? data.length : Object.keys(data ?? {}).length), "ModTime": _now(), "Typeflag": 0, "Uname": "guest", "Gname": "guest"};
  tarWriteHeader(w, hdr);
  tarWrite(w, data);
}
main();
