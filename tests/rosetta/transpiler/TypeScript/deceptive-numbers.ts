// Generated by Mochi v0.10.39 on 2025-07-24 18:23:17 GMT+7

function isPrime(n: number): boolean {
  if ((n < 2)) {
    return false;
  }
  if (((n % 2) == 0)) {
    return (n == 2);
  }
  if (((n % 3) == 0)) {
    return (n == 3);
  }
  let d: number = 5;
  while (((d * d) <= n)) {
    if (((n % d) == 0)) {
      return false;
    }
    d = (d + 2);
    if (((n % d) == 0)) {
      return false;
    }
    d = (d + 4);
  }
  return true;
}
function listToString(xs: number[]): string {
  let s: string = "[";
  let i: number = 0;
  while ((i < (Array.isArray(xs) || typeof xs === 'string' ? xs.length : Object.keys(xs ?? {}).length))) {
    s = (s + String(xs[i]));
    if ((i < ((Array.isArray(xs) || typeof xs === 'string' ? xs.length : Object.keys(xs ?? {}).length) - 1))) {
      s = (s + " ");
    }
    i = (i + 1);
  }
  return (s + "]");
}
function main() {
  let count: number = 0;
  const limit: number = 25;
  let n: number = 17;
  let repunit: number = 1111111111111111;
  const eleven: number = 11;
  const hundred: number = 100;
  let deceptive: number[] = [];
  while ((count < limit)) {
    if (((!isPrime(n) && ((n % 3) != 0)) && ((n % 5) != 0))) {
      const bn: number = n;
      if (((repunit % bn) == 0)) {
        deceptive = [...deceptive, n];
        count = (count + 1);
      }
    }
    n = (n + 2);
    repunit = ((repunit * hundred) + eleven);
  }
  console.log((("The first " + String(limit)) + " deceptive numbers are:"));
  console.log(listToString(deceptive));
}
main();
