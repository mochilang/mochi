// Generated by Mochi v0.10.39 on 2025-07-24 13:14:20 GMT+7

function isPrime(n: number): boolean {
  if ((n < 2)) {
    return false;
  }
  if (((n % 2) == 0)) {
    return (n == 2);
  }
  if (((n % 3) == 0)) {
    return (n == 3);
  }
  let d: number = 5;
  while (((d * d) <= n)) {
    if (((n % d) == 0)) {
      return false;
    }
    d = (d + 2);
    if (((n % d) == 0)) {
      return false;
    }
    d = (d + 4);
  }
  return true;
}
let circs: number[] = [];
function isCircular(n: number): boolean {
  let nn: number = n;
  let pow: number = 1;
  while ((nn > 0)) {
    pow = (pow * 10);
    nn = Math.trunc(nn / 10);
  }
  nn = n;
  while (true) {
    nn = (nn * 10);
    const f: number = Math.trunc(nn / pow);
    nn = (nn + (f * (1 - pow)));
    if ((nn == n)) {
      break
    }
    if (!isPrime(nn)) {
      return false;
    }
  }
  return true;
}
console.log("The first 19 circular primes are:");
let digits: number[] = [1, 3, 7, 9];
let q: number[] = [1, 2, 3, 5, 7, 9];
let fq: number[] = [1, 2, 3, 5, 7, 9];
let count: number = 0;
while (true) {
  const f: number = q[Math.trunc(0)];
  const fd: number = fq[Math.trunc(0)];
  if ((isPrime(f) && isCircular(f))) {
    circs = [...circs, f];
    count = (count + 1);
    if ((count == 19)) {
      break
    }
  }
  q = q.slice(1);
  fq = fq.slice(1);
  if (((f != 2) && (f != 5))) {
    for (const d of digits) {
      q = [...q, ((f * 10) + d)];
      fq = [...fq, fd];
    }
  }
}
function showList(xs: number[]): string {
  let out: string = "[";
  let i: number = 0;
  while ((i < (Array.isArray(xs) || typeof xs === 'string' ? xs.length : Object.keys(xs ?? {}).length))) {
    out = (out + String(xs[i]));
    if ((i < ((Array.isArray(xs) || typeof xs === 'string' ? xs.length : Object.keys(xs ?? {}).length) - 1))) {
      out = (out + ", ");
    }
    i = (i + 1);
  }
  return (out + "]");
}
console.log(showList(circs));
console.log("\nThe next 4 circular primes, in repunit format, are:");
console.log("[R(19) R(23) R(317) R(1031)]");
console.log("\nThe following repunits are probably circular primes:");
for (const i of [5003, 9887, 15073, 25031, 35317, 49081]) {
  console.log((("R(" + String(i)) + ") : true"));
}
