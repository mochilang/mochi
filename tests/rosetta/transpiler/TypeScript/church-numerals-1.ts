// Generated by Mochi v0.10.38 on 2025-07-23 20:27:53 GMT+7

export type Fn = any;
export type Church = any;
function zero(f) {
  return (x) => {
return x;
};
}
function succ(c) {
  return (f) => {
return (x) => {
return f(c(f)(x));
};
};
}
function add(c, d) {
  return (f) => {
return (x) => {
return c(f)(d(f)(x));
};
};
}
function mul(c, d) {
  return (f) => {
return (x) => {
return c(d(f))(x);
};
};
}
function pow(c, d) {
  let di: number = toInt(d);
  let prod = c;
  let i: number = 1;
  while ((i < di)) {
    prod = mul(prod, c);
    i = (i + 1);
  }
  return prod;
}
function incr(i) {
  return (Math.trunc(i) + 1);
}
function toInt(c): number {
  return Math.trunc(c(incr)(0));
}
function intToChurch(i: number) {
  if ((i == 0)) {
    return zero;
  }
  return succ(intToChurch((i - 1)));
}
const z = zero;
const three = succ(succ(succ(z)));
const four = succ(three);
console.log(("three        -> " + String(toInt(three))));
console.log(("four         -> " + String(toInt(four))));
console.log(("three + four -> " + String(toInt(add(three, four)))));
console.log(("three * four -> " + String(toInt(mul(three, four)))));
console.log(("three ^ four -> " + String(toInt(pow(three, four)))));
console.log(("four ^ three -> " + String(toInt(pow(four, three)))));
console.log(("5 -> five    -> " + String(toInt(intToChurch(5)))));
