// Generated by Mochi v0.10.42 on 2025-07-27 18:45:30 GMT+7

function listStr(xs: number[]): string {
  let s: string = "[";
  let i: number = 0;
  while ((i < (Array.isArray(xs) || typeof xs === 'string' ? xs.length : Object.keys(xs ?? {}).length))) {
    s = (s + String(xs[i]));
    if (((i + 1) < (Array.isArray(xs) || typeof xs === 'string' ? xs.length : Object.keys(xs ?? {}).length))) {
      s = (s + " ");
    }
    i = (i + 1);
  }
  s = (s + "]");
  return s;
}
let a: number[] = [0, 0, 0, 0, 0];
let s: number[] = a.slice(0, 4);
let cap_s: number = 5;
var _nowSeed = 0;
var _nowSeeded = false;
{
  let s = "";
  if (typeof Deno !== "undefined") {
    try {
      s = Deno.env.get("MOCHI_NOW_SEED") ?? "";
    } catch (_e) {
      s = "";
    }
  } else if (typeof process !== "undefined") {
    s = process.env.MOCHI_NOW_SEED || "";
  }
  if (s) {
    const v = parseInt(s, 10);
    if (!isNaN(v)) {
      _nowSeed = v;
      _nowSeeded = true;
    }
  }
}
function _now(): number {
  if (_nowSeeded) {
    _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647;
    return _nowSeed;
  }
  if (typeof Deno !== 'undefined') {
    return Math.trunc(performance.now() * 1e6);
  }
  if (typeof performance !== 'undefined') {
    return Math.trunc(performance.now() * 1e6);
  }
  return Date.now() * 1000;
}
function _mem(): number {
  if (typeof Deno !== 'undefined') {
    return (Deno.memoryUsage?.().rss ?? 0);
  }
  if (typeof process !== 'undefined') {
    return process.memoryUsage().rss;
  }
  return 0;
}
(() => {
  const _startMem = _mem()
  const _start = _now()
  console.log(("len(a) = " + String((Array.isArray(a) || typeof a === 'string' ? a.length : Object.keys(a ?? {}).length))));
  console.log(("a = " + listStr(a)));
  a[0] = 3;
  console.log(("a = " + listStr(a)));
  console.log(("a[0] = " + String(a[Math.trunc(0)])));
  console.log(("s = " + listStr(s)));
  console.log(((("len(s) = " + String((Array.isArray(s) || typeof s === 'string' ? s.length : Object.keys(s ?? {}).length))) + "  cap(s) = ") + String(cap_s)));
  s = a.slice(0, 5);
  console.log(("s = " + listStr(s)));
  a[0] = 22;
  s[0] = 22;
  console.log(("a = " + listStr(a)));
  console.log(("s = " + listStr(s)));
  s.push(4);
  s.push(5);
  s.push(6);
  cap_s = 10;
  console.log(("s = " + listStr(s)));
  console.log(((("len(s) = " + String((Array.isArray(s) || typeof s === 'string' ? s.length : Object.keys(s ?? {}).length))) + "  cap(s) = ") + String(cap_s)));
  a[4] = -1;
  console.log(("a = " + listStr(a)));
  console.log(("s = " + listStr(s)));
  s = [];
  for (let i = 0; i < 8; i++) {
    s.push(0);
  }
  cap_s = 8;
  console.log(("s = " + listStr(s)));
  console.log(((("len(s) = " + String((Array.isArray(s) || typeof s === 'string' ? s.length : Object.keys(s ?? {}).length))) + "  cap(s) = ") + String(cap_s)));
  const _end = _now()
  const _duration = _end - _start
  const _duration_us = Math.trunc(_duration / 1000)
  const _endMem = _mem()
  const _memory_bytes = Math.max(0, _endMem - _startMem)
  console.log(JSON.stringify({
    "duration_us": _duration_us,
    "memory_bytes": _memory_bytes,
    "name": "main"
  }, null, "  "))
})();

