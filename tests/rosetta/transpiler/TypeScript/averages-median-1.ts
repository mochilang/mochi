// Generated by Mochi v0.10.40 on 2025-07-25 17:41:01 GMT+7

function sortFloat(xs: number[]): number[] {
  let arr: number[] = xs;
  let n: number = (Array.isArray(arr) || typeof arr === 'string' ? arr.length : Object.keys(arr ?? {}).length);
  let i: number = 0;
  while ((i < n)) {
    let j: number = 0;
    while ((j < (n - 1))) {
      if ((arr[j] > arr[Math.trunc((j + 1))])) {
        const tmp: number = arr[j];
        arr[j] = arr[Math.trunc((j + 1))];
        arr[(j + 1)] = tmp;
      }
      j = (j + 1);
    }
    i = (i + 1);
  }
  return arr;
}
function median(a: number[]): number {
  let arr: number[] = sortFloat(a);
  const half: number = Math.trunc(Math.trunc((Array.isArray(arr) || typeof arr === 'string' ? arr.length : Object.keys(arr ?? {}).length) / 2));
  let m: number = arr[half];
  if ((((Array.isArray(arr) || typeof arr === 'string' ? arr.length : Object.keys(arr ?? {}).length) % 2) == 0)) {
    m = ((m + arr[Math.trunc((half - 1))]) / 2.0);
  }
  return m;
}
console.log(String(median([3.0, 1.0, 4.0, 1.0])));
console.log(String(median([3.0, 1.0, 4.0, 1.0, 5.0])));
