#!/usr/bin/env escript
-module(main).
-compile([nowarn_shadow_vars, nowarn_unused_vars]).
-export([main/1, main/0]).

% Generated by Mochi transpiler v0.10.39 (6b9be63842) on 2025-07-24 22:46 +0700

main() ->
    try
        M = #{"hello" => 13, "world" => 31, "!" => 71},
        Fun = fun Fun_loop(List, M) ->
    case List of
        [] -> {M};
        [K|Fun_loop_rest] ->
            io:format("~ts~n", [((("key = " ++ K) ++ ", value = ") ++ lists:flatten(io_lib:format("~p", [maps:get(K, M)])))]),
            Fun_loop(Fun_loop_rest, M)
    end
end,
{M} = Fun(maps:keys(M), M),
        Fun_2 = fun Fun_2_loop(List, M) ->
    case List of
        [] -> {M};
        [K_2|Fun_2_loop_rest] ->
            io:format("~ts~n", [("key = " ++ K_2)]),
            Fun_2_loop(Fun_2_loop_rest, M)
    end
end,
{M} = Fun_2(maps:keys(M), M),
        Fun_3 = fun Fun_3_loop(List, M) ->
    case List of
        [] -> {M};
        [K_3|Fun_3_loop_rest] ->
            io:format("~ts~n", [("value = " ++ lists:flatten(io_lib:format("~p", [maps:get(K_3, M)])))]),
            Fun_3_loop(Fun_3_loop_rest, M)
    end
end,
{M} = Fun_3(maps:keys(M), M),
        nil
    catch {return, Ret} -> Ret end.

main(_) ->
    main().
