#!/usr/bin/env escript
-module(main).
-compile([nowarn_shadow_vars, nowarn_unused_vars]).
-export([main/1, maximize/2, main/0]).

% Generated by Mochi transpiler v0.10.55 (1cbd612b6e) on 2025-08-02 20:59 +0700


mochi_now() ->
    case erlang:get(now_seed) of
        undefined ->
            case os:getenv("MOCHI_NOW_SEED") of
                false -> erlang:system_time(nanosecond);
                S ->
                    case catch list_to_integer(S) of
                        {'EXIT', _} -> erlang:system_time(nanosecond);
                        Seed ->
                            erlang:put(now_seed, Seed),
                            mochi_now()
                    end
            end;
        Seed ->
            Seed2 = (Seed * 1664525 + 1013904223) rem 2147483647,
            erlang:put(now_seed, Seed2),
            Seed2
    end.

maximize(S, Win) ->
    try
        Win_2 = maps:put("w", maps:get("w", S, nil), Win),
        Win_3 = maps:put("h", maps:get("h", S, nil), Win_2),
        Win_4 = maps:put("maximized", true, Win_3),
        Win_4
    catch {return, Ret} -> Ret end.

main() ->
    try
        Screen = #{"w" => 1920, "h" => 1080},
        io:format("~ts~n", [((("Screen size: " ++ lists:flatten(io_lib:format("~p", [maps:get("w", Screen, nil)]))) ++ " x ") ++ lists:flatten(io_lib:format("~p", [maps:get("h", Screen, nil)])))]),
        Win_5 = #{"x" => 50, "y" => 50, "w" => 800, "h" => 600, "maximized" => false},
        Win_6 = maximize(Screen, Win_5),
        io:format("~ts~n", [((("Max usable : " ++ lists:flatten(io_lib:format("~p", [maps:get("w", Win_6, nil)]))) ++ " x ") ++ lists:flatten(io_lib:format("~p", [maps:get("h", Win_6, nil)])))]),
        nil
    catch {return, Ret} -> Ret end.

main(_) ->
    BenchStart = mochi_now(),
    BenchStartMem = erlang:memory(total),
    main(),
    BenchEnd = mochi_now(),
    BenchEndMem = erlang:memory(total),
    DurationUs = (BenchEnd - BenchStart) div 1000,
    MemBytes = erlang:abs(BenchEndMem - BenchStartMem),
    io:format("{~n  \"duration_us\": ~p,~n  \"memory_bytes\": ~p,~n  \"name\": \"main\"~n}
", [DurationUs, MemBytes]).
