#!/usr/bin/env escript
-module(main).
-compile([nowarn_shadow_vars, nowarn_unused_vars]).
-export([main/1, mapstring/2, main/0]).

% Generated by Mochi transpiler v0.10.55 (b43d15e5bc) on 2025-08-03 11:14 +0700


mochi_now() ->
    case erlang:get(now_seed) of
        undefined ->
            case os:getenv("MOCHI_NOW_SEED") of
                false -> erlang:system_time(nanosecond);
                S ->
                    case catch list_to_integer(S) of
                        {'EXIT', _} -> erlang:system_time(nanosecond);
                        Seed ->
                            erlang:put(now_seed, Seed),
                            mochi_now()
                    end
            end;
        Seed ->
            Seed2 = (Seed * 1664525 + 1013904223) rem 2147483647,
            erlang:put(now_seed, Seed2),
            Seed2
    end.

mapstring(S, F) ->
    try
        Out = "",
        I = 0,
        Fun = fun Fun_loop(F, I, Out, S) ->
    case (I < length(S)) of
        true ->
            Out_2 = (Out ++ F(string:substr(S, I + 1, ((I + 1) - I)))),
            I_2 = (I + 1),
            Fun_loop(F, I_2, Out_2, S);
        _ -> {F, I, Out, S}
    end
end,
{F, I_2, Out_2, S} = Fun(F, I, Out, S),
        Out_2
    catch {return, Ret} -> Ret end.

main() ->
    try
        Fn = fun(R) ->
    try
        (case (R == " ") of
    true -> "";
    _ -> R
end)
    catch {return, Ret} -> Ret end
end,
        mapstring("Spaces removed", Fn),
        mapstring("Test", fun(R_2) ->
    try
        string:to_lower(R_2)
    catch {return, Ret} -> Ret end
end),
        mapstring("shift", fun(R_3) ->
    try
        R_3
    catch {return, Ret} -> Ret end
end),
        nil
    catch {return, Ret} -> Ret end.

main(_) ->
    __mochi_bench_start = mochi_now(),
    __mochi_bench_start_mem = erlang:memory(total),
    main(),
    __mochi_bench_end = mochi_now(),
    __mochi_bench_end_mem = erlang:memory(total),
    __mochi_bench_duration_us = (__mochi_bench_end - __mochi_bench_start) div 1000,
    __mochi_bench_mem_bytes = erlang:abs(__mochi_bench_end_mem - __mochi_bench_start_mem),
    io:format("{~n  \"duration_us\": ~p,~n  \"memory_bytes\": ~p,~n  \"name\": \"main\"~n}
", [__mochi_bench_duration_us, __mochi_bench_mem_bytes]).
