#!/usr/bin/env escript
-module(main).
-compile([nowarn_shadow_vars, nowarn_unused_vars]).
-export([main/1, newfactory/0]).

% Generated by Mochi transpiler v0.10.41 (228dd6653b) on 2025-07-26 21:45 +0700


mochi_now() ->
    case erlang:get(now_seed) of
        undefined ->
            case os:getenv("MOCHI_NOW_SEED") of
                false -> erlang:system_time(nanosecond);
                S ->
                    case catch list_to_integer(S) of
                        {'EXIT', _} -> erlang:system_time(nanosecond);
                        Seed ->
                            erlang:put(now_seed, Seed),
                            mochi_now()
                    end
            end;
        Seed ->
            Seed2 = (Seed * 1664525 + 1013904223) rem 2147483647,
            erlang:put(now_seed, Seed2),
            Seed2
    end.

newfactory() ->
    try
        Sn = 0,
        New = fun New() ->
    try
        Sn_3 = (Sn_2 + 1),
        B = #{"secret" => Sn_3},
        case (Sn_3 == 1) of
        true -> B_2 = maps:put("Contents", "rabbit", B),
            B_5 = B_2;
        _ -> case (Sn_3 == 2) of
        true -> B_3 = maps:put("Contents", "rock", B),
            B_4 = B_3;
        _ -> B_4 = B
    end,
            B_5 = B_4
    end,
        B_5
    catch {return, Ret} -> Ret end
end,
        Count = fun Count() ->
    try
        Sn_4
    catch {return, Ret} -> Ret end
end,
        [New, Count]
    catch {return, Ret} -> Ret end.

main(_) ->
    Start = mochi_now(),
    StartMem = erlang:memory(total),
    erlang:put('funcs', newfactory()),
    erlang:put('New', lists:nth(0 + 1, erlang:get('funcs'))),
    erlang:put('Count', lists:nth(1 + 1, erlang:get('funcs'))),
    End = mochi_now(),
    EndMem = erlang:memory(total),
    DurationUs = (End - Start) div 1000,
    MemBytes = erlang:abs(EndMem - StartMem),
    io:format("{~n  \"duration_us\": ~p,~n  \"memory_bytes\": ~p,~n  \"name\": \"main\"~n}
", [DurationUs, MemBytes]).
