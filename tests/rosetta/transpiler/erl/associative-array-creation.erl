#!/usr/bin/env escript
-module(main).
-compile([nowarn_shadow_vars, nowarn_unused_vars]).
-export([main/1, removeKey/2, main/0]).

% Generated by Mochi transpiler v0.10.39 (6b9be63842) on 2025-07-24 22:46 +0700

removeKey(M, K) ->
    try
        Out = #{},
        Fun = fun Fun_loop(List, K, M, Out) ->
    case List of
        [] -> {K, M, Out};
        [Key|Fun_loop_rest] ->
            case (Key /= K) of
        true -> Out_2 = maps:put(Key, maps:get(Key, M), Out),
            Out_3 = Out_2;
        _ -> Out_3 = Out
    end,
            Fun_loop(Fun_loop_rest, K, M, Out_3)
    end
end,
{K, M, Out_3} = Fun(maps:keys(M), K, M, Out),
        Out_3
    catch {return, Ret} -> Ret end.

main() ->
    try
        X = nil,
        X_2 = #{},
        X_3 = maps:put("foo", 3, X_2),
        Y1 = maps:get("bar", X_3),
        Ok = maps:is_key("bar", X_3),
        io:format("~p~n", [Y1]),
        io:format("~p~n", [Ok]),
        X_4 = removeKey(X_3, "foo"),
        X_5 = #{"foo" => 2, "bar" => 42, "baz" => -1},
        io:format("~p ~p ~p~n", [maps:get("foo", X_5), maps:get("bar", X_5), maps:get("baz", X_5)]),
        nil
    catch {return, Ret} -> Ret end.

main(_) ->
    main().
