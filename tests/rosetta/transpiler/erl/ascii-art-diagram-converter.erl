#!/usr/bin/env escript
-module(main).
-compile([nowarn_shadow_vars, nowarn_unused_vars]).
-export([main/1, main/0]).

% Generated by Mochi transpiler v0.10.39 (6b9be63842) on 2025-07-24 22:46 +0700

main() ->
    try
        io:format("~ts~n", ["Diagram after trimming whitespace and removal of blank lines:\n"]),
        io:format("~ts~n", ["+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+"]),
        io:format("~ts~n", ["|                      ID                       |"]),
        io:format("~ts~n", ["+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+"]),
        io:format("~ts~n", ["|QR|   Opcode  |AA|TC|RD|RA|   Z    |   RCODE   |"]),
        io:format("~ts~n", ["+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+"]),
        io:format("~ts~n", ["|                    QDCOUNT                    |"]),
        io:format("~ts~n", ["+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+"]),
        io:format("~ts~n", ["|                    ANCOUNT                    |"]),
        io:format("~ts~n", ["+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+"]),
        io:format("~ts~n", ["|                    NSCOUNT                    |"]),
        io:format("~ts~n", ["+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+"]),
        io:format("~ts~n", ["|                    ARCOUNT                    |"]),
        io:format("~ts~n", ["+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+"]),
        io:format("~ts~n", ["\nDecoded:\n"]),
        io:format("~ts~n", ["Name     Bits  Start  End"]),
        io:format("~ts~n", ["=======  ====  =====  ==="]),
        io:format("~ts~n", ["ID        16      0    15"]),
        io:format("~ts~n", ["QR         1     16    16"]),
        io:format("~ts~n", ["Opcode     4     17    20"]),
        io:format("~ts~n", ["AA         1     21    21"]),
        io:format("~ts~n", ["TC         1     22    22"]),
        io:format("~ts~n", ["RD         1     23    23"]),
        io:format("~ts~n", ["RA         1     24    24"]),
        io:format("~ts~n", ["Z          3     25    27"]),
        io:format("~ts~n", ["RCODE      4     28    31"]),
        io:format("~ts~n", ["QDCOUNT   16     32    47"]),
        io:format("~ts~n", ["ANCOUNT   16     48    63"]),
        io:format("~ts~n", ["NSCOUNT   16     64    79"]),
        io:format("~ts~n", ["ARCOUNT   16     80    95"]),
        io:format("~ts~n", ["\nTest string in hex:"]),
        io:format("~ts~n", ["78477bbf5496e12e1bf169a4"]),
        io:format("~ts~n", ["\nTest string in binary:"]),
        io:format("~ts~n", ["011110000100011101111011101111110101010010010110111000010010111000011011111100010110100110100100"]),
        io:format("~ts~n", ["\nUnpacked:\n"]),
        io:format("~ts~n", ["Name     Size  Bit pattern"]),
        io:format("~ts~n", ["=======  ====  ================"]),
        io:format("~ts~n", ["ID        16   0111100001000111"]),
        io:format("~ts~n", ["QR         1   0"]),
        io:format("~ts~n", ["Opcode     4   1111"]),
        io:format("~ts~n", ["AA         1   0"]),
        io:format("~ts~n", ["TC         1   1"]),
        io:format("~ts~n", ["RD         1   1"]),
        io:format("~ts~n", ["RA         1   1"]),
        io:format("~ts~n", ["Z          3   011"]),
        io:format("~ts~n", ["RCODE      4   1111"]),
        io:format("~ts~n", ["QDCOUNT   16   0101010010010110"]),
        io:format("~ts~n", ["ANCOUNT   16   1110000100101110"]),
        io:format("~ts~n", ["NSCOUNT   16   0001101111110001"]),
        io:format("~ts~n", ["ARCOUNT   16   0110100110100100"]),
        nil
    catch {return, Ret} -> Ret end.

main(_) ->
    main().
