#!/usr/bin/env escript
-module(main).
-compile([nowarn_shadow_vars, nowarn_unused_vars]).
-export([main/1, beastKind/1, beastName/1, beastCry/1, bprint/1, main/0]).

% Generated by Mochi transpiler v0.10.38 (0a4e3506ef) on 2025-07-23 20:13 +0700

beastKind(B) ->
    try
        (case B of
    #{"tag" := "dog", "kind" := K, "name" := _} -> K;
    #{"tag" := "cat", "kind" := K, "name" := _} -> K
end)
    catch {return, V} -> V end.

beastName(B2) ->
    try
        (case B2 of
    #{"tag" := "dog", "kind" := _, "name" := N} -> N;
    #{"tag" := "cat", "kind" := _, "name" := N} -> N
end)
    catch {return, V} -> V end.

beastCry(B3) ->
    try
        (case B3 of
    #{"tag" := "dog", "kind" := _, "name" := _} -> "Woof";
    #{"tag" := "cat", "kind" := _, "name" := _} -> "Meow"
end)
    catch {return, V} -> V end.

bprint(B4) ->
    try
        io:format("~ts~n", [(((((beastName(B4) ++ ", who's a ") ++ beastKind(B4)) ++ ", cries: \"") ++ beastCry(B4)) ++ "\".")]),
        nil
    catch {return, V} -> V end.

main() ->
    try
        D = #{"tag" => "dog", "kind" => "labrador", "name" => "Max"},
        C = #{"tag" => "cat", "kind" => "siamese", "name" => "Sammy"},
        bprint(D),
        bprint(C),
        nil
    catch {return, V} -> V end.

main(_) ->
    main().
