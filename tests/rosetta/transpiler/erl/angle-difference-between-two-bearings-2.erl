#!/usr/bin/env escript
-module(main).
-compile([nowarn_shadow_vars, nowarn_unused_vars]).
-export([main/1, anglediff/2]).

% Generated by Mochi transpiler v0.10.40 (029b538ca5) on 2025-07-25 15:20 UTC


mochi_now() ->
    case erlang:get(now_seed) of
        undefined ->
            case os:getenv("MOCHI_NOW_SEED") of
                false -> erlang:system_time(nanosecond);
                S ->
                    case catch list_to_integer(S) of
                        {'EXIT', _} -> erlang:system_time(nanosecond);
                        Seed ->
                            erlang:put(now_seed, Seed),
                            mochi_now()
                    end
            end;
        Seed ->
            Seed2 = (Seed * 1664525 + 1013904223) rem 2147483647,
            erlang:put(now_seed, Seed2),
            Seed2
    end.

anglediff(B1, B2) ->
    try
        Diff = (B2 - B1),
        (math:fmod(((math:fmod(Diff, 360) + 360) + 180), 360) - 180)
    catch {return, Ret} -> Ret end.

main(_) ->
    Start = mochi_now(),
    StartMem = erlang:memory(total),
    erlang:put('testCases', [[20, 45], [(0 - 45), 45], [(0 - 85), 90], [(0 - 95), 90], [(0 - 45), 125], [(0 - 45), 145], [29.4803, (0 - 88.6381)], [(0 - 78.3251), (0 - 159.036)], [(0 - 70099.74233810938), 29840.67437876723], [(0 - 165313.6666297357), 33693.9894517456], [1174.8380510598456, (0 - 154146.66490124757)], [60175.77306795546, 42213.07192354373]]),
    Fun = fun Fun_loop(List) ->
    case List of
        [] -> {};
        [Tc|Tc_rest] ->
            io:format("~p~n", [anglediff(lists:nth(0 + 1, Tc), lists:nth(1 + 1, Tc))]),
            Fun_loop(Tc_rest)
    end
end,
{} = Fun(erlang:get('testCases')),
    End = mochi_now(),
    EndMem = erlang:memory(total),
    DurationUs = (End - Start) div 1000,
    MemBytes = abs(EndMem - StartMem),
    io:format("{~n  \"duration_us\": ~p,~n  \"memory_bytes\": ~p,~n  \"name\": \"main\"~n}
", [DurationUs, MemBytes]).
