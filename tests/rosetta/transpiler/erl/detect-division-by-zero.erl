#!/usr/bin/env escript
-module(main).
-compile([nowarn_shadow_vars, nowarn_unused_vars]).
-export([main/1, divcheck/2, printresult/1, main/0]).

% Generated by Mochi transpiler v0.10.42 (cb76045201) on 2025-07-27 10:24 UTC


mochi_now() ->
    case erlang:get(now_seed) of
        undefined ->
            case os:getenv("MOCHI_NOW_SEED") of
                false -> erlang:system_time(nanosecond);
                S ->
                    case catch list_to_integer(S) of
                        {'EXIT', _} -> erlang:system_time(nanosecond);
                        Seed ->
                            erlang:put(now_seed, Seed),
                            mochi_now()
                    end
            end;
        Seed ->
            Seed2 = (Seed * 1664525 + 1013904223) rem 2147483647,
            erlang:put(now_seed, Seed2),
            Seed2
    end.

divcheck(X, Y) ->
    try
        (case (Y == 0) of
    true -> #{"q" => 0, "ok" => false};
    _ -> #{"q" => (X div Y), "ok" => true}
end)
    catch {return, Ret} -> Ret end.

printresult(R) ->
    try
        io:format("~ts~n", [((lists:flatten(io_lib:format("~p", [maps:get("q", R, nil)])) ++ " ") ++ lists:flatten(io_lib:format("~p", [maps:get("ok", R, nil)])))]),
        nil
    catch {return, Ret} -> Ret end.

main() ->
    try
        printresult(divcheck(3, 2)),
        printresult(divcheck(3, 0)),
        nil
    catch {return, Ret} -> Ret end.

main(_) ->
    BenchStart = mochi_now(),
    BenchStartMem = erlang:memory(total),
    main(),
    BenchEnd = mochi_now(),
    BenchEndMem = erlang:memory(total),
    DurationUs = (BenchEnd - BenchStart) div 1000,
    MemBytes = erlang:abs(BenchEndMem - BenchStartMem),
    io:format("{~n  \"duration_us\": ~p,~n  \"memory_bytes\": ~p,~n  \"name\": \"main\"~n}
", [DurationUs, MemBytes]).
