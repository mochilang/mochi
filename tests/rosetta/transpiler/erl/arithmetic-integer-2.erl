#!/usr/bin/env escript
-module(main).
-compile([nowarn_shadow_vars, nowarn_unused_vars]).
-export([main/1, main/0]).

% Generated by Mochi transpiler v0.10.39 (6b9be63842) on 2025-07-24 22:46 +0700


mochi_to_int(V) ->
    case erlang:is_integer(V) of
        true -> V;
        _ -> case erlang:is_float(V) of
            true -> trunc(V);
            _ -> list_to_integer(V)
        end
    end.

main() ->
    try
        A = 12345678,
        B = 98765,
        io:format("~ts~n", [((((lists:flatten(io_lib:format("~p", [12345678])) ++ " + ") ++ lists:flatten(io_lib:format("~p", [98765]))) ++ " = ") ++ lists:flatten(io_lib:format("~p", [(12345678 + 98765)])))]),
        io:format("~ts~n", [((((lists:flatten(io_lib:format("~p", [12345678])) ++ " - ") ++ lists:flatten(io_lib:format("~p", [98765]))) ++ " = ") ++ lists:flatten(io_lib:format("~p", [(12345678 - 98765)])))]),
        io:format("~ts~n", [((((lists:flatten(io_lib:format("~p", [12345678])) ++ " * ") ++ lists:flatten(io_lib:format("~p", [98765]))) ++ " = ") ++ lists:flatten(io_lib:format("~p", [(12345678 * 98765)])))]),
        io:format("~ts~n", [((((lists:flatten(io_lib:format("~p", [12345678])) ++ " quo ") ++ lists:flatten(io_lib:format("~p", [98765]))) ++ " = ") ++ lists:flatten(io_lib:format("~p", [mochi_to_int((12345678 div 98765))])))]),
        io:format("~ts~n", [((((lists:flatten(io_lib:format("~p", [12345678])) ++ " rem ") ++ lists:flatten(io_lib:format("~p", [98765]))) ++ " = ") ++ lists:flatten(io_lib:format("~p", [(12345678 rem 98765)])))]),
        nil
    catch {return, Ret} -> Ret end.

main(_) ->
    main().
