#!/usr/bin/env escript
-module(main).
-compile([nowarn_shadow_vars, nowarn_unused_vars]).
-export([main/1]).

% Generated by Mochi transpiler v0.10.40 (c9f97e1bd3) on 2025-07-25 19:21 +0700


mochi_now() ->
    case erlang:get(now_seed) of
        undefined ->
            case os:getenv("MOCHI_NOW_SEED") of
                false -> erlang:system_time(nanosecond);
                S ->
                    case catch list_to_integer(S) of
                        {'EXIT', _} -> erlang:system_time(nanosecond);
                        Seed ->
                            erlang:put(now_seed, Seed),
                            mochi_now()
                    end
            end;
        Seed ->
            Seed2 = (Seed * 1664525 + 1013904223) rem 2147483647,
            erlang:put(now_seed, Seed2),
            Seed2
    end.


mochi_lookup_host(Host) ->
    case inet:gethostbyname(Host) of
        {ok, {hostent, _, _, _, _, Addrs}} ->
            IPs = [inet:ntoa(A) || A <- Addrs],
            [IPs, nil];
        {error, Reason} ->
        [nil, Reason]
    end.

main(_) ->
    Start = mochi_now(),
    StartMem = erlang:memory(total),
    erlang:put('res', mochi_lookup_host("www.kame.net")),
    erlang:put('addrs', lists:nth(0 + 1, erlang:get('res'))),
    erlang:put('err', lists:nth(1 + 1, erlang:get('res'))),
    case (erlang:get('err') == nil) of
        true -> io:format("~ts~n", [lists:flatten(io_lib:format("~p", [erlang:get('addrs')]))]);
        _ -> io:format("~p~n", [erlang:get('err')])
    end,
    End = mochi_now(),
    EndMem = erlang:memory(total),
    DurationUs = (End - Start) div 1000,
    MemBytes = abs(EndMem - StartMem),
    io:format("{~n  \"duration_us\": ~p,~n  \"memory_bytes\": ~p,~n  \"name\": \"main\"~n}
", [DurationUs, MemBytes]).
