#!/usr/bin/env escript
-module(main).
-compile([nowarn_shadow_vars, nowarn_unused_vars]).
-export([main/1, main/0]).

% Generated by Mochi transpiler v0.10.39 (b4d35670d6) on 2025-07-24 19:43 +0700

main() ->
    try
        Ss = #{"runtimeFields" => #{}},
        io:format("~ts~n", ["Create two fields at runtime: \n"]),
        I = 1,
        Fun = fun Fun_loop(I, Ss) ->
    case (I =< 2) of
        true ->
            io:format("~ts~n", [(("  Field #" ++ lists:flatten(io_lib:format("~p", [I]))) ++ ":\n")]),
            io:format("~ts~n", ["       Enter name  : "]),
            Name = string:trim(io:get_line("")),
            io:format("~ts~n", ["       Enter value : "]),
            Value = string:trim(io:get_line("")),
            Fields = maps:get("runtimeFields", Ss),
            Fields_2 = maps:put(Name, Value, Fields),
            Ss_2 = maps:put("runtimeFields", Fields_2, Ss),
            io:format("~ts~n", ["\n"]),
            I_2 = (I + 1),
            Fun_loop(I_2, Ss_2);
        _ -> {I, Ss}
    end
end,
{I_2, Ss_2} = Fun(I, Ss),
        Fun_2 = fun Fun_2_loop(I_2, Ss_2) ->
    case true of
        true ->
            io:format("~ts~n", ["Which field do you want to inspect ? "]),
            Name_2 = string:trim(io:get_line("")),
            case (maps:is_key(Name_2, maps:get("runtimeFields", Ss_2)) /= nil) of
        true -> Value_2 = maps:get(Name_2, maps:get("runtimeFields", Ss_2)),
            io:format("~ts~n", [(("Its value is '" ++ Value_2) ++ "'")]),
            throw({return, nil}),
            Value_3 = Value_2;
        _ -> io:format("~ts~n", ["There is no field of that name, try again\n"]),
            Value_3 = nil
    end,
            Fun_2_loop(I_2, Ss_2);
        _ -> {I_2, Ss_2}
    end
end,
{I_2, Ss_2} = Fun_2(I_2, Ss_2),
        nil
    catch {return, Ret} -> Ret end.

main(_) ->
    main().
