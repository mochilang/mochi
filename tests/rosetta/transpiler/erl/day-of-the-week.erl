#!/usr/bin/env escript
-module(main).
-compile([nowarn_shadow_vars, nowarn_unused_vars]).
-export([main/1, weekday/3]).

% Generated by Mochi transpiler v0.10.42 (27abf1810a) on 2025-07-28 04:37 UTC


mochi_now() ->
    case erlang:get(now_seed) of
        undefined ->
            case os:getenv("MOCHI_NOW_SEED") of
                false -> erlang:system_time(nanosecond);
                S ->
                    case catch list_to_integer(S) of
                        {'EXIT', _} -> erlang:system_time(nanosecond);
                        Seed ->
                            erlang:put(now_seed, Seed),
                            mochi_now()
                    end
            end;
        Seed ->
            Seed2 = (Seed * 1664525 + 1013904223) rem 2147483647,
            erlang:put(now_seed, Seed2),
            Seed2
    end.


mochi_to_int(V) ->
    case erlang:is_integer(V) of
        true -> V;
        _ -> case erlang:is_float(V) of
            true -> trunc(V);
            _ -> list_to_integer(V)
        end
    end.

weekday(Y, M, D) ->
    try
        Yy = Y,
        Mm = M,
        case (Mm < 3) of
        true -> Mm_2 = (Mm + 12),
            Yy_2 = (Yy - 1),
            Mm_3 = Mm_2,
            Yy_3 = Yy_2;
        _ -> Mm_3 = Mm,
            Yy_3 = Yy
    end,
        K = (Yy_3 rem 100),
        J = mochi_to_int((Yy_3 div 100)),
        A = mochi_to_int(((13 * (Mm_3 + 1)) div 5)),
        B = mochi_to_int((K div 4)),
        C = mochi_to_int((J div 4)),
        ((((((D + A) + K) + B) + C) + (5 * J)) rem 7)
    catch {return, Ret} -> Ret end.

main(_) ->
    BenchStart = mochi_now(),
    BenchStartMem = erlang:memory(total),
    Fun = fun Fun_loop(List) ->
    case List of
        [] -> {};
        [Year|Year_rest] ->
            case (weekday(Year, 12, 25) == 1) of
        true -> io:format("~ts~n", [(("25 December " ++ lists:flatten(io_lib:format("~p", [Year]))) ++ " is Sunday")]);
        _ -> ok
    end,
            Fun_loop(Year_rest)
    end
end,
{} = Fun(lists:seq(2008, (2122) - 1)),
    BenchEnd = mochi_now(),
    BenchEndMem = erlang:memory(total),
    DurationUs = (BenchEnd - BenchStart) div 1000,
    MemBytes = erlang:abs(BenchEndMem - BenchStartMem),
    io:format("{~n  \"duration_us\": ~p,~n  \"memory_bytes\": ~p,~n  \"name\": \"main\"~n}
", [DurationUs, MemBytes]).
