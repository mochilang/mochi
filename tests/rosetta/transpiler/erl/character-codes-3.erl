#!/usr/bin/env escript
-module(main).
-compile([nowarn_shadow_vars, nowarn_unused_vars]).
-export([main/1, ord/1, chr/1]).

% Generated by Mochi transpiler v0.10.55 (b43d15e5bc) on 2025-08-03 11:14 +0700


mochi_now() ->
    case erlang:get(now_seed) of
        undefined ->
            case os:getenv("MOCHI_NOW_SEED") of
                false -> erlang:system_time(nanosecond);
                S ->
                    case catch list_to_integer(S) of
                        {'EXIT', _} -> erlang:system_time(nanosecond);
                        Seed ->
                            erlang:put(now_seed, Seed),
                            mochi_now()
                    end
            end;
        Seed ->
            Seed2 = (Seed * 1664525 + 1013904223) rem 2147483647,
            erlang:put(now_seed, Seed2),
            Seed2
    end.

ord(Ch) ->
    try
        case (Ch == "a") of
        true -> throw({return, 97});
        _ -> ok
    end,
        case (Ch == "π") of
        true -> throw({return, 960});
        _ -> ok
    end,
        case (Ch == "A") of
        true -> throw({return, 65});
        _ -> ok
    end,
        0
    catch {return, Ret} -> Ret end.

chr(N) ->
    try
        case (N == 97) of
        true -> throw({return, "a"});
        _ -> ok
    end,
        case (N == 960) of
        true -> throw({return, "π"});
        _ -> ok
    end,
        case (N == 65) of
        true -> throw({return, "A"});
        _ -> ok
    end,
        "?"
    catch {return, Ret} -> Ret end.

main(_) ->
    __mochi_bench_start = mochi_now(),
    __mochi_bench_start_mem = erlang:memory(total),
    erlang:put('b', ord("a")),
    erlang:put('r', ord("π")),
    erlang:put('s', "aπ"),
    io:format("~ts~n", [((((lists:flatten(io_lib:format("~p", [erlang:get('b')])) ++ " ") ++ lists:flatten(io_lib:format("~p", [erlang:get('r')]))) ++ " ") ++ erlang:get('s'))]),
    io:format("~ts~n", [(((("string cast to []rune: [" ++ lists:flatten(io_lib:format("~p", [erlang:get('b')]))) ++ " ") ++ lists:flatten(io_lib:format("~p", [erlang:get('r')]))) ++ "]")]),
    io:format("~ts~n", [((("    string range loop: " ++ lists:flatten(io_lib:format("~p", [erlang:get('b')]))) ++ " ") ++ lists:flatten(io_lib:format("~p", [erlang:get('r')])))]),
    io:format("~ts~n", ["         string bytes: 0x61 0xcf 0x80"]),
    __mochi_bench_end = mochi_now(),
    __mochi_bench_end_mem = erlang:memory(total),
    __mochi_bench_duration_us = (__mochi_bench_end - __mochi_bench_start) div 1000,
    __mochi_bench_mem_bytes = erlang:abs(__mochi_bench_end_mem - __mochi_bench_start_mem),
    io:format("{~n  \"duration_us\": ~p,~n  \"memory_bytes\": ~p,~n  \"name\": \"main\"~n}
", [__mochi_bench_duration_us, __mochi_bench_mem_bytes]).
