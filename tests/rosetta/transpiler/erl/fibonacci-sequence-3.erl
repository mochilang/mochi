#!/usr/bin/env escript
-module(main).
-compile([nowarn_shadow_vars, nowarn_unused_vars]).
-export([main/1, fibnumber/0, fibsequence/1]).

% Generated by Mochi transpiler v0.10.50 (e649287d54) on 2025-07-30 14:16 UTC


mochi_now() ->
    case erlang:get(now_seed) of
        undefined ->
            case os:getenv("MOCHI_NOW_SEED") of
                false -> erlang:system_time(nanosecond);
                S ->
                    case catch list_to_integer(S) of
                        {'EXIT', _} -> erlang:system_time(nanosecond);
                        Seed ->
                            erlang:put(now_seed, Seed),
                            mochi_now()
                    end
            end;
        Seed ->
            Seed2 = (Seed * 1664525 + 1013904223) rem 2147483647,
            erlang:put(now_seed, Seed2),
            Seed2
    end.

fibnumber() ->
    try
        A = 0,
        B = 1,
        fun() ->
    try
        Tmp = (A + B),
        A_2 = B,
        B_2 = Tmp,
        A_2
    catch {return, Ret} -> Ret end
end
    catch {return, Ret} -> Ret end.

fibsequence(N) ->
    try
        F = fibnumber(),
        R = 0,
        I = 0,
        Fun = fun Fun_loop(F, I, N, R) ->
    case (I < N) of
        true ->
            R_2 = F(),
            I_2 = (I + 1),
            Fun_loop(F, I_2, N, R_2);
        _ -> {F, I, N, R}
    end
end,
{F, I_2, N, R_2} = Fun(F, I, N, R),
        R_2
    catch {return, Ret} -> Ret end.

main(_) ->
    BenchStart = mochi_now(),
    BenchStartMem = erlang:memory(total),
    BenchEnd = mochi_now(),
    BenchEndMem = erlang:memory(total),
    DurationUs = (BenchEnd - BenchStart) div 1000,
    MemBytes = erlang:abs(BenchEndMem - BenchStartMem),
    io:format("{~n  \"duration_us\": ~p,~n  \"memory_bytes\": ~p,~n  \"name\": \"main\"~n}
", [DurationUs, MemBytes]).
