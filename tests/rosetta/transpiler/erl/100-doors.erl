#!/usr/bin/env escript
-module(main).
-compile([nowarn_shadow_vars, nowarn_unused_vars]).
-export([main/1]).

% Generated by Mochi transpiler v0.10.37 (2ea03adf09) on 2025-07-23 10:03 +0700

main(_) ->
    Doors = [],
    Fun = fun Fun_loop(List, Doors) ->
    case List of
        [] -> {Doors};
        [I|Fun_loop_rest] ->
            Doors2 = lists:append(Doors, [false]),
            Fun_loop(Fun_loop_rest, Doors2)
    end
end,
{Doors2} = Fun(lists:seq(0, (100) - 1), Doors),
    Fun2 = fun Fun2_loop(List, Doors2) ->
    case List of
        [] -> {Doors2};
        [Pass|Fun2_loop_rest] ->
            Idx = (Pass - 1),
            Fun3 = fun Fun3_loop(Doors2, Idx, Pass) ->
    case (Idx < 100) of
        true ->
            Doors3 = lists:sublist(Doors2, Idx) ++ [not lists:nth(Idx + 1, Doors2)] ++ lists:nthtail(Idx + 1, Doors2),
            Idx2 = (Idx + Pass),
            Fun3_loop(Doors3, Idx2, Pass);
        _ -> {Doors2, Idx, Pass}
    end
end,
{Doors3, Idx2, Pass} = Fun3(Doors2, Idx, Pass),
            Fun2_loop(Fun2_loop_rest, Doors3)
    end
end,
{Doors3} = Fun2(lists:seq(1, (101) - 1), Doors2),
    Fun4 = fun Fun4_loop(List, Doors3) ->
    case List of
        [] -> {Doors3};
        [Row|Fun4_loop_rest] ->
            Line = "",
            Fun5 = fun Fun5_loop(List, Doors3, Line, Row) ->
    case List of
        [] -> {Doors3, Line, Row};
        [Col|Fun5_loop_rest] ->
            Idx3 = ((Row * 10) + Col),
            case lists:nth(Idx3 + 1, Doors3) of
        true -> Line2 = (Line ++ "1"),
            Line4 = Line2;
        _ -> Line3 = (Line ++ "0"),
            Line4 = Line3
    end,
            case (Col < 9) of
        true -> Line5 = (Line4 ++ " "),
            Line6 = Line5;
        _ -> Line6 = Line4
    end,
            Fun5_loop(Fun5_loop_rest, Doors3, Line6, Row)
    end
end,
{Doors3, Line6, Row} = Fun5(lists:seq(0, (10) - 1), Doors3, Line, Row),
            io:format("~ts~n", [Line6]),
            Fun4_loop(Fun4_loop_rest, Doors3)
    end
end,
{Doors3} = Fun4(lists:seq(0, (10) - 1), Doors3).
