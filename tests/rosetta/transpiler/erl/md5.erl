#!/usr/bin/env escript
-module(main).
-compile([nowarn_shadow_vars, nowarn_unused_vars]).
-export([main/1]).

% Generated by Mochi transpiler v0.10.55 (26b9f6045a) on 2025-08-02 23:10 +0700


mochi_now() ->
    case erlang:get(now_seed) of
        undefined ->
            case os:getenv("MOCHI_NOW_SEED") of
                false -> erlang:system_time(nanosecond);
                S ->
                    case catch list_to_integer(S) of
                        {'EXIT', _} -> erlang:system_time(nanosecond);
                        Seed ->
                            erlang:put(now_seed, Seed),
                            mochi_now()
                    end
            end;
        Seed ->
            Seed2 = (Seed * 1664525 + 1013904223) rem 2147483647,
            erlang:put(now_seed, Seed2),
            Seed2
    end.

main(_) ->
    BenchStart = mochi_now(),
    BenchStartMem = erlang:memory(total),
    Fun = fun Fun_loop(List) ->
    case List of
        [] -> {};
        [Pair|Pair_rest] ->
            Sum = nil,
            case (nil /= (case erlang:is_map(Pair) of true -> maps:get(0, Pair, nil); _ -> lists:nth(0 + 1, Pair) end)) of
        true -> io:format("~ts~n", ["MD5 fail"]),
            io:format("~ts ~p~n", ["  for string,", (case erlang:is_map(Pair) of true -> maps:get(1, Pair, nil); _ -> lists:nth(1 + 1, Pair) end)]),
            io:format("~ts ~p~n", ["  expected:  ", (case erlang:is_map(Pair) of true -> maps:get(0, Pair, nil); _ -> lists:nth(0 + 1, Pair) end)]),
            io:format("~ts ~p~n", ["  got:       ", nil]);
        _ -> ok
    end,
            Fun_loop(Pair_rest)
    end
end,
{} = Fun([["d41d8cd98f00b204e9800998ecf8427e", ""], ["0cc175b9c0f1b6a831c399e269772661", "a"], ["900150983cd24fb0d6963f7d28e17f72", "abc"], ["f96b697d7cb7938d525a2f31aaf161d0", "message digest"], ["c3fcd3d76192e4007dfb496cca67e13b", "abcdefghijklmnopqrstuvwxyz"], ["d174ab98d277d9f5a5611c2c9f419d9f", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"], ["57edf4a22be3c955ac49da2e2107b67a", ("12345678901234567890" ++ "123456789012345678901234567890123456789012345678901234567890")], ["e38ca1d920c4b8b8d3946b2c72f01680", "The quick brown fox jumped over the lazy dog's back"]]),
    BenchEnd = mochi_now(),
    BenchEndMem = erlang:memory(total),
    DurationUs = (BenchEnd - BenchStart) div 1000,
    MemBytes = erlang:abs(BenchEndMem - BenchStartMem),
    io:format("{~n  \"duration_us\": ~p,~n  \"memory_bytes\": ~p,~n  \"name\": \"main\"~n}
", [DurationUs, MemBytes]).
