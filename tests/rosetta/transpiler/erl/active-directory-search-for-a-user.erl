#!/usr/bin/env escript
-module(main).
-compile([nowarn_shadow_vars, nowarn_unused_vars]).
-export([main/1, search_user/2, main/0]).

% Generated by Mochi transpiler v0.10.39 (de4de9911d) on 2025-07-24 11:45 UTC

search_user(Directory, Username) ->
    try
        maps:get(Username, Directory)
    catch {return, Ret} -> Ret end.

main() ->
    try
        Client = #{"Base" => "dc=example,dc=com", "Host" => "ldap.example.com", "Port" => 389, "GroupFilter" => "(memberUid=%s)"},
        Directory_2 = #{"username" => ["admins", "users"], "john" => ["users"]},
        Groups = search_user(Directory_2, "username"),
        case (length(Groups) > 0) of
        true -> Out = "Groups: [",
            I = 0,
            Fun = fun Fun_loop(Client, Directory_2, Groups, I, Out) ->
    case (I < length(Groups)) of
        true ->
            Out_2 = (((Out ++ "\"") ++ lists:nth(I + 1, Groups)) ++ "\""),
            case (I < (length(Groups) - 1)) of
        true -> Out_3 = (Out_2 ++ ", "),
            Out_4 = Out_3;
        _ -> Out_4 = Out_2
    end,
            I_2 = (I + 1),
            Fun_loop(Client, Directory_2, Groups, I_2, Out_4);
        _ -> {Client, Directory_2, Groups, I, Out}
    end
end,
{Client, Directory_2, Groups, I_2, Out_4} = Fun(Client, Directory_2, Groups, I, Out),
            Out_5 = (Out_4 ++ "]"),
            io:format("~ts~n", [Out_5]),
            Fun_2 = Fun,
            I_3 = I_2,
            Out_6 = Out_5;
        _ -> io:format("~ts~n", ["User not found"]),
            Fun_2 = nil,
            I_3 = nil,
            Out_6 = nil
    end,
        nil
    catch {return, Ret} -> Ret end.

main(_) ->
    main().
