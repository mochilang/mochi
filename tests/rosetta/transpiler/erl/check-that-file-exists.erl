#!/usr/bin/env escript
-module(main).
-compile([nowarn_shadow_vars, nowarn_unused_vars]).
-export([main/1, printstat/2, main/0]).

% Generated by Mochi transpiler v0.10.55 (b43d15e5bc) on 2025-08-03 11:14 +0700


mochi_now() ->
    case erlang:get(now_seed) of
        undefined ->
            case os:getenv("MOCHI_NOW_SEED") of
                false -> erlang:system_time(nanosecond);
                S ->
                    case catch list_to_integer(S) of
                        {'EXIT', _} -> erlang:system_time(nanosecond);
                        Seed ->
                            erlang:put(now_seed, Seed),
                            mochi_now()
                    end
            end;
        Seed ->
            Seed2 = (Seed * 1664525 + 1013904223) rem 2147483647,
            erlang:put(now_seed, Seed2),
            Seed2
    end.

printstat(Fs, Path) ->
    try
        case maps:is_key(Path, Fs) of
        true -> case maps:get(Path, Fs, nil) of
        true -> io:format("~ts~n", [(Path ++ " is a directory")]);
        _ -> io:format("~ts~n", [(Path ++ " is a file")])
    end;
        _ -> io:format("~ts~n", [(("stat " ++ Path) ++ ": no such file or directory")])
    end,
        nil
    catch {return, Ret} -> Ret end.

main() ->
    try
        Fs_2 = #{},
        Fs_3 = maps:put("docs", true, Fs_2),
        Fun = fun Fun_loop(List, Fs_3) ->
    case List of
        [] -> {Fs_3};
        [P|P_rest] ->
            printstat(Fs_3, P),
            Fun_loop(P_rest, Fs_3)
    end
end,
{Fs_3} = Fun(["input.txt", "/input.txt", "docs", "/docs"], Fs_3),
        nil
    catch {return, Ret} -> Ret end.

main(_) ->
    __mochi_bench_start = mochi_now(),
    __mochi_bench_start_mem = erlang:memory(total),
    main(),
    __mochi_bench_end = mochi_now(),
    __mochi_bench_end_mem = erlang:memory(total),
    __mochi_bench_duration_us = (__mochi_bench_end - __mochi_bench_start) div 1000,
    __mochi_bench_mem_bytes = erlang:abs(__mochi_bench_end_mem - __mochi_bench_start_mem),
    io:format("{~n  \"duration_us\": ~p,~n  \"memory_bytes\": ~p,~n  \"name\": \"main\"~n}
", [__mochi_bench_duration_us, __mochi_bench_mem_bytes]).
