// Generated by Mochi 0.10.52 on 2025-07-31 10:42 +0700
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using System.Numerics;
using System.Collections;

class Program {
    static bool seededNow = false;
    static long nowSeed = 0;
    static long _now() {
        if (!seededNow) {
            var s = Environment.GetEnvironmentVariable("MOCHI_NOW_SEED");
            if (long.TryParse(s, out var v)) {
                nowSeed = v;
                seededNow = true;
            }
        }
        if (seededNow) {
            nowSeed = unchecked(nowSeed * 1664525 + 1013904223);
            nowSeed %= 9223372036854775783L;
            if (nowSeed < 0) nowSeed += 9223372036854775783L;
            return nowSeed;
        }
        return DateTime.UtcNow.Ticks / 100;
    }
    static long _mem() {
        return GC.GetTotalMemory(false);
    }
    static string _fmt(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return "[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmt(d[k]));
            return "map[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        if (v is bool b) return b ? "1" : "0";
        return Convert.ToString(v);
    }
    static string _fmtTop(object v) {
        if (v is Array a && a.Length > 0 && a.GetValue(0) is Array) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        return _fmt(v);
    }
    static long[] a_3 = new long[]{0, 0, 0, 0, 0};
    static string listStr(long[] xs_0) {
        string s_1 = "[";
        long i_2 = 0;
        while ((string.Compare(Convert.ToString(i_2), Convert.ToString(xs_0.Length)) < 0)) {
            s_1 = (s_1 + (xs_0[(int)(i_2)]).ToString());
            if ((string.Compare(Convert.ToString((i_2 + 1)), Convert.ToString(xs_0.Length)) < 0)) {
                s_1 = (s_1 + " ");
            }
            i_2 = (i_2 + 1);
        };
        s_1 = (s_1 + "]");
        return s_1;
    }

    static void Main() {
        {
            var __memStart = _mem();
            var __start = _now();
            Console.WriteLine(_fmtTop(("len(a) = " + (a_3.Length).ToString())));
            Console.WriteLine(_fmtTop(("a = " + listStr(a_3))));
            a_3[0] = 3;
            Console.WriteLine(_fmtTop(("a = " + listStr(a_3))));
            Console.WriteLine(_fmtTop(("a[0] = " + (a_3[(int)(0)]).ToString())));
            long[] s_4 = a_3.Skip((int)(0)).Take((int)((4 - 0))).ToArray();
            long cap_s_5 = 5;
            Console.WriteLine(_fmtTop(("s = " + listStr(s_4))));
            Console.WriteLine(_fmtTop(((("len(s) = " + (s_4.Length).ToString()) + "  cap(s) = ") + (cap_s_5).ToString())));
            s_4 = a_3.Skip((int)(0)).Take((int)((5 - 0))).ToArray();
            Console.WriteLine(_fmtTop(("s = " + listStr(s_4))));
            a_3[0] = 22;
            s_4[0] = 22;
            Console.WriteLine(_fmtTop(("a = " + listStr(a_3))));
            Console.WriteLine(_fmtTop(("s = " + listStr(s_4))));
            s_4 = (Enumerable.ToArray(Enumerable.Append(s_4, 4)));
            s_4 = (Enumerable.ToArray(Enumerable.Append(s_4, 5)));
            s_4 = (Enumerable.ToArray(Enumerable.Append(s_4, 6)));
            cap_s_5 = 10;
            Console.WriteLine(_fmtTop(("s = " + listStr(s_4))));
            Console.WriteLine(_fmtTop(((("len(s) = " + (s_4.Length).ToString()) + "  cap(s) = ") + (cap_s_5).ToString())));
            a_3[4] = -1;
            Console.WriteLine(_fmtTop(("a = " + listStr(a_3))));
            Console.WriteLine(_fmtTop(("s = " + listStr(s_4))));
            s_4 = new long[]{};
            for (var i_6 = 0; i_6 < 8; i_6++) {
                s_4 = (Enumerable.ToArray(Enumerable.Append(s_4, 0)));
            }
            cap_s_5 = 8;
            Console.WriteLine(_fmtTop(("s = " + listStr(s_4))));
            Console.WriteLine(_fmtTop(((("len(s) = " + (s_4.Length).ToString()) + "  cap(s) = ") + (cap_s_5).ToString())));
            var __end = _now();
            var __memEnd = _mem();
            var __dur = (__end - __start);
            var __memDiff = __memEnd - __memStart;
            Console.WriteLine(JsonSerializer.Serialize(new SortedDictionary<string, object>{{"name", "main"}, {"duration_us", __dur}, {"memory_bytes", __memDiff}}, new JsonSerializerOptions{ WriteIndented = true }));
        }
    }
}
