// Generated by Mochi 0.10.57 on 2025-08-04 21:00 +0700
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using System.Numerics;
using System.Collections;

class Program {
    static bool seededNow = false;
    static long nowSeed = 0;
    static long _now() {
        if (!seededNow) {
            var s = Environment.GetEnvironmentVariable("MOCHI_NOW_SEED");
            if (long.TryParse(s, out var v)) {
                nowSeed = v;
                seededNow = true;
            }
        }
        if (seededNow) {
            nowSeed = unchecked(nowSeed * 1664525 + 1013904223);
            nowSeed %= 9223372036854775783L;
            if (nowSeed < 0) nowSeed += 9223372036854775783L;
            return nowSeed;
        }
        return DateTime.UtcNow.Ticks / 100;
    }
    static long _mem() {
        return GC.GetTotalAllocatedBytes(true);
    }
    static string _fmt(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return "[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmt(d[k]));
            return "map[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        if (v is bool b) return b ? "true" : "false";
        return Convert.ToString(v);
    }
    public static string _fmtTop(object v) {
        if (v is Array a && a.Length > 0 && a.GetValue(0) is Array) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        return _fmt(v);
    }
    public static long mod(long n_0, long m_1) {
        return (((n_0 % m_1) + m_1) % m_1);
    }

    public static bool isPrime(long n_2) {
        if ((n_2 < 2)) {
            return false;
        };
        if (((n_2 % 2) == 0)) {
            return (n_2 == 2);
        };
        if (((n_2 % 3) == 0)) {
            return (n_2 == 3);
        };
        long d_3 = 5;
        while (((d_3 * d_3) <= n_2)) {
            if (((n_2 % d_3) == 0)) {
                return false;
            }
            d_3 = (d_3 + 2);
            if (((n_2 % d_3) == 0)) {
                return false;
            }
            d_3 = (d_3 + 4);
        };
        return true;
    }

    public static string pad(long n_4, long width_5) {
        string s_6 = _fmt(n_4);
        while ((s_6.Length < width_5)) {
            s_6 = (" " + s_6);
        };
        return s_6;
    }

    public static void carmichael(long p1_7) {
        for (var h3_8 = 2; h3_8 < p1_7; h3_8++) {
            for (var d_9 = 1; d_9 < (h3_8 + p1_7); d_9++) {
                if ((((((h3_8 + p1_7) * (p1_7 - 1)) % d_9) == 0) && (Program.mod((-p1_7 * p1_7), h3_8) == (d_9 % h3_8)))) {
                    long p2_10 = (1 + (((p1_7 - 1) * (h3_8 + p1_7)) / d_9));
                    if ((!Program.isPrime(p2_10))) {
                        continue;
                    }
                    long p3_11 = (1 + ((p1_7 * p2_10) / h3_8));
                    if ((!Program.isPrime(p3_11))) {
                        continue;
                    }
                    if ((((p2_10 * p3_11) % (p1_7 - 1)) != 1)) {
                        continue;
                    }
                    long c_12 = ((p1_7 * p2_10) * p3_11);
                    Console.WriteLine(Program._fmtTop(((((((Program.pad(p1_7, 2) + "   ") + Program.pad(p2_10, 4)) + "   ") + Program.pad(p3_11, 5)) + "     ") + _fmt(c_12))));
                }
            }
        };
    }

    static void Main() {
        {
            var __memStart = _mem();
            var __start = _now();
            Console.WriteLine(Program._fmtTop("The following are Carmichael munbers for p1 <= 61:\n"));
            Console.WriteLine(Program._fmtTop("p1     p2      p3     product"));
            Console.WriteLine(Program._fmtTop("==     ==      ==     ======="));
            for (var p1_13 = 2; p1_13 < 62; p1_13++) {
                if (Program.isPrime(p1_13)) {
                    Program.carmichael(p1_13);
                }
            }
            var __end = _now();
            var __memEnd = _mem();
            var __dur = (__end - __start);
            if (__dur <= 0) __dur = 1;
            var __memDiff = __memEnd - __memStart;
            if (__memDiff <= 0) __memDiff = __memEnd;
            Console.WriteLine("{\"name\":\"main\",\"duration_us\":" + __dur + ",\"memory_bytes\":" + __memDiff + "}");
        }
    }
}
