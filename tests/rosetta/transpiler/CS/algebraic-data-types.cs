// Generated by Mochi 0.10.40 on 2025-07-25 20:19 +0700
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using System.Collections;

class Program {
    static bool seededNow = false;
    static long nowSeed = 0;
    static long _now() {
        if (!seededNow) {
            var s = Environment.GetEnvironmentVariable("MOCHI_NOW_SEED");
            if (long.TryParse(s, out var v)) {
                nowSeed = v;
                seededNow = true;
            }
        }
        if (seededNow) {
            nowSeed = unchecked(nowSeed * 1664525 + 1013904223);
            nowSeed %= 9223372036854775783L;
            if (nowSeed < 0) nowSeed += 9223372036854775783L;
            return nowSeed;
        }
        return DateTime.UtcNow.Ticks / 100;
    }
    static long _mem() {
        return GC.GetTotalMemory(false);
    }
    static string _fmt(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return "[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmt(d[k]));
            return "map[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        if (v is bool b) return b ? "1" : "0";
        return Convert.ToString(v);
    }
    static string _fmtTop(object v) {
        if (v is Array a && a.Length > 0 && a.GetValue(0) is Array) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        return _fmt(v);
    }
    static dynamic tr_16 = null;
    static long i_17 = 1;
    static Dictionary<string, object> node(string cl, object le, long aa, object ri) {
        return new Dictionary<string, object>{{"cl", cl}, {"le", le}, {"aa", aa}, {"ri", ri}};
    }

    static string treeString(object t) {
        if ((t == null)) {
            return "E";
        };
        Dictionary<string, object> m_0 = (Dictionary<string, object>)t;
        return ((((((((((dynamic)"T(") + ((dynamic)((dynamic)m_0)["cl"])) + ", ") + treeString(((dynamic)m_0)["le"])) + ", ") + (((dynamic)m_0)["aa"]).ToString()) + ", ") + treeString(((dynamic)m_0)["ri"])) + ")");
    }

    static object balance(object t) {
        if ((t == null)) {
            return t;
        };
        Dictionary<string, object> m_1 = (Dictionary<string, object>)t;
        if ((((dynamic)m_1)["cl"] != "B")) {
            return t;
        };
        var le_2 = ((dynamic)m_1)["le"];
        var ri_3 = ((dynamic)m_1)["ri"];
        if ((le_2 != null)) {
            Dictionary<string, object> leMap_4 = (Dictionary<string, object>)le_2;
            if ((((dynamic)leMap_4)["cl"] == "R")) {
                var lele_5 = ((dynamic)leMap_4)["le"];
                if ((lele_5 != null)) {
                    Dictionary<string, object> leleMap_6 = (Dictionary<string, object>)lele_5;
                    if ((((dynamic)leleMap_6)["cl"] == "R")) {
                        return (object)node("R", node("B", ((dynamic)leleMap_6)["le"], ((dynamic)leleMap_6)["aa"], ((dynamic)leleMap_6)["ri"]), ((dynamic)leMap_4)["aa"], node("B", ((dynamic)leMap_4)["ri"], ((dynamic)m_1)["aa"], ri_3));
                    }
                }
                var leri_7 = ((dynamic)leMap_4)["ri"];
                if ((leri_7 != null)) {
                    Dictionary<string, object> leriMap_8 = (Dictionary<string, object>)leri_7;
                    if ((((dynamic)leriMap_8)["cl"] == "R")) {
                        return (object)node("R", node("B", ((dynamic)leMap_4)["le"], ((dynamic)leMap_4)["aa"], ((dynamic)leriMap_8)["le"]), ((dynamic)leriMap_8)["aa"], node("B", ((dynamic)leriMap_8)["ri"], ((dynamic)m_1)["aa"], ri_3));
                    }
                }
            }
        };
        if ((ri_3 != null)) {
            Dictionary<string, object> riMap_9 = (Dictionary<string, object>)ri_3;
            if ((((dynamic)riMap_9)["cl"] == "R")) {
                var rile_10 = ((dynamic)riMap_9)["le"];
                if ((rile_10 != null)) {
                    Dictionary<string, object> rileMap_11 = (Dictionary<string, object>)rile_10;
                    if ((((dynamic)rileMap_11)["cl"] == "R")) {
                        return (object)node("R", node("B", ((dynamic)m_1)["le"], ((dynamic)m_1)["aa"], ((dynamic)rileMap_11)["le"]), ((dynamic)rileMap_11)["aa"], node("B", ((dynamic)rileMap_11)["ri"], ((dynamic)riMap_9)["aa"], ((dynamic)riMap_9)["ri"]));
                    }
                }
                var riri_12 = ((dynamic)riMap_9)["ri"];
                if ((riri_12 != null)) {
                    Dictionary<string, object> ririMap_13 = (Dictionary<string, object>)riri_12;
                    if ((((dynamic)ririMap_13)["cl"] == "R")) {
                        return (object)node("R", node("B", ((dynamic)m_1)["le"], ((dynamic)m_1)["aa"], ((dynamic)riMap_9)["le"]), ((dynamic)riMap_9)["aa"], node("B", ((dynamic)ririMap_13)["le"], ((dynamic)ririMap_13)["aa"], ((dynamic)ririMap_13)["ri"]));
                    }
                }
            }
        };
        return t;
    }

    static object ins(object tr, long x) {
        if ((tr == null)) {
            return (object)node("R", null, x, null);
        };
        if ((x < ((dynamic)tr)["aa"])) {
            return balance(node(((dynamic)tr)["cl"], ins(((dynamic)tr)["le"], x), ((dynamic)tr)["aa"], ((dynamic)tr)["ri"]));
        };
        if ((x > ((dynamic)tr)["aa"])) {
            return balance(node(((dynamic)tr)["cl"], ((dynamic)tr)["le"], ((dynamic)tr)["aa"], ins(((dynamic)tr)["ri"], x)));
        };
        return tr;
    }

    static object insert(object tr, long x) {
        var t_14 = ins(tr, x);
        if ((t_14 == null)) {
            return null;
        };
        Dictionary<string, object> m_15 = (Dictionary<string, object>)t_14;
        return (object)node("B", ((dynamic)m_15)["le"], ((dynamic)m_15)["aa"], ((dynamic)m_15)["ri"]);
    }

    static void Main() {
        {
            var __memStart = _mem();
            var __start = _now();
            while ((i_17 <= 16)) {
                tr_16 = insert(tr_16, i_17);
                i_17 = (i_17 + 1);
            }
            Console.WriteLine(_fmtTop(treeString(tr_16)));
            var __end = _now();
            var __memEnd = _mem();
            var __dur = (__end - __start);
            var __memDiff = __memEnd - __memStart;
            Console.WriteLine(JsonSerializer.Serialize(new SortedDictionary<string, object>{{"name", "main"}, {"duration_us", __dur}, {"memory_bytes", __memDiff}}, new JsonSerializerOptions{ WriteIndented = true }));
        }
    }
}
