// Generated by Mochi 0.10.39 on 2025-07-24 15:41 +0700
using System;
using System.Collections;
using System.Collections.Generic;

class Program {
    static string _fmt(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return "[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmt(d[k]));
            return "map[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        if (v is bool b) return b ? "1" : "0";
        return Convert.ToString(v);
    }
    static string _fmtTop(object v) {
        if (v is Array a && a.Length > 0 && a.GetValue(0) is Array) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        return _fmt(v);
    }
    static int pfacSum(int i) {
        int sum = 0;
        int p = 1;
        while ((p <= (i / 2))) {
            if (((i % p) == 0)) {
                sum = (sum + p);
            }
            p = (p + 1);
        };
        return sum;
    }

    static void main() {
        int d = 0;
        int a = 0;
        int pnum = 0;
        int i = 1;
        while ((i <= 20000)) {
            int j = pfacSum(i);
            if ((j < i)) {
                d = (d + 1);
            }
            if ((j == i)) {
                pnum = (pnum + 1);
            }
            if ((j > i)) {
                a = (a + 1);
            }
            i = (i + 1);
        };
        Console.WriteLine(_fmtTop((("There are " + d.ToString()) + " deficient numbers between 1 and 20000")));
        Console.WriteLine(_fmtTop((("There are " + a.ToString()) + " abundant numbers  between 1 and 20000")));
        Console.WriteLine(_fmtTop((("There are " + pnum.ToString()) + " perfect numbers between 1 and 20000")));
    }

    static void Main() {
        main();
    }
}
