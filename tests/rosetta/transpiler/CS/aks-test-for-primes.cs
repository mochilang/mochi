// Generated by Mochi 0.10.39 on 2025-07-24 15:41 +0700
using System;
using System.Collections;
using System.Collections.Generic;

class Program {
    static string _fmt(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return "[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmt(d[k]));
            return "map[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        if (v is bool b) return b ? "1" : "0";
        return Convert.ToString(v);
    }
    static string _fmtTop(object v) {
        if (v is Array a && a.Length > 0 && a.GetValue(0) is Array) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        return _fmt(v);
    }
    static string poly(int p) {
        string s = "";
        int coef = 1;
        int i = p;
        if ((coef != 1)) {
            s = (s + coef.ToString());
        };
        while ((i > 0)) {
            s = (s + "x");
            if ((i != 1)) {
                s = ((s + "^") + i.ToString());
            }
            coef = Convert.ToInt32(((coef * i) / ((p - i) + 1)));
            var d = coef;
            if ((((p - (i - 1)) % 2) == 1)) {
                d = -d;
            }
            if ((d < 0)) {
                s = ((s + " - ") + -d.ToString());
            } else {
                s = ((s + " + ") + d.ToString());
            }
            i = (i - 1);
        };
        if ((s == "")) {
            s = "1";
        };
        return s;
    }

    static bool aks(int n) {
        if ((n < 2)) {
            return false;
        };
        int c = n;
        int i = 1;
        while ((i < n)) {
            if (((c % n) != 0)) {
                return false;
            }
            c = Convert.ToInt32(((c * (n - i)) / (i + 1)));
            i = (i + 1);
        };
        return true;
    }

    static void main() {
        int p = 0;
        while ((p <= 7)) {
            Console.WriteLine(_fmtTop(((p.ToString() + ":  ") + poly(p))));
            p = (p + 1);
        };
        bool first = true;
        p = 2;
        string line = "";
        while ((p < 50)) {
            if (aks(p)) {
                if (first) {
                    line = (line + p.ToString());
                    first = false;
                } else {
                    line = ((line + " ") + p.ToString());
                }
            }
            p = (p + 1);
        };
        Console.WriteLine(_fmtTop(line));
    }

    static void Main() {
        main();
    }
}
