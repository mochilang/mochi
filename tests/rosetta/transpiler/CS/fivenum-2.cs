// Generated by Mochi 0.10.50 on 2025-07-30 21:05 +0700
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using System.Numerics;
using System.Collections;

class Program {
    static bool seededNow = false;
    static long nowSeed = 0;
    static long _now() {
        if (!seededNow) {
            var s = Environment.GetEnvironmentVariable("MOCHI_NOW_SEED");
            if (long.TryParse(s, out var v)) {
                nowSeed = v;
                seededNow = true;
            }
        }
        if (seededNow) {
            nowSeed = unchecked(nowSeed * 1664525 + 1013904223);
            nowSeed %= 9223372036854775783L;
            if (nowSeed < 0) nowSeed += 9223372036854775783L;
            return nowSeed;
        }
        return DateTime.UtcNow.Ticks / 100;
    }
    static long _mem() {
        return GC.GetTotalMemory(false);
    }
    static string _fmt(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return "[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmt(d[k]));
            return "map[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        if (v is bool b) return b ? "1" : "0";
        return Convert.ToString(v);
    }
    static string _fmtTop(object v) {
        if (v is Array a && a.Length > 0 && a.GetValue(0) is Array) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        return _fmt(v);
    }
    static double[] x1_16 = new double[]{36, 40, 7, 39, 41, 15};
    static double[] x2_17 = new double[]{15, 6, 42, 41, 7, 36, 49, 40, 39, 47, 43};
    static double[] x3_18 = new double[]{0.14082834, 0.0974879, 1.73131507, 0.87636009, -1.95059594, 0.73438555, -0.03035726, 1.4667597, -0.74621349, -0.72588772, 0.6390516, 0.61501527, -0.9898378, -1.00447874, -0.62759469, 0.66206163, 1.04312009, -0.10305385, 0.75775634, 0.32566578};
    static double qsel(double[] a_0, long k_1) {
        double[] arr_2 = a_0;
        while ((arr_2.Length > 1)) {
            long px_3 = (((dynamic)_now()) % ((dynamic)arr_2.Length));
            double pv_4 = arr_2[(int)(px_3)];
            long last_5 = (((dynamic)arr_2.Length) - ((dynamic)1));
            double tmp_6 = arr_2[(int)(px_3)];
            arr_2[px_3] = arr_2[(int)(last_5)];
            arr_2[last_5] = tmp_6;
            px_3 = 0;
            long i_7 = 0;
            while ((i_7 < last_5)) {
                double v_8 = arr_2[(int)(i_7)];
                if ((v_8 < pv_4)) {
                    double t_9 = arr_2[(int)(px_3)];
                    arr_2[px_3] = arr_2[(int)(i_7)];
                    arr_2[i_7] = t_9;
                    px_3 = (px_3 + 1);
                }
                i_7 = (i_7 + 1);
            }
            arr_2[px_3] = pv_4;
            if ((px_3 == k_1)) {
                return pv_4;
            }
            if ((k_1 < px_3)) {
                arr_2 = arr_2.Skip((int)(0)).Take((int)((px_3 - 0))).ToArray();
            } else {
                arr_2 = arr_2.Skip((int)((px_3 + 1))).Take((int)((arr_2.Length - (px_3 + 1)))).ToArray();
                k_1 = (k_1 - (px_3 + 1));
            }
        };
        return arr_2[(int)(0)];
    }

    static double[] fivenum(double[] a_10) {
        long last_11 = (((dynamic)a_10.Length) - ((dynamic)1));
        long m_12 = (last_11 / 2);
        double[] n5_13 = new double[]{};
        n5_13 = (Enumerable.ToArray(Enumerable.Append(n5_13, qsel(a_10.Skip((int)(0)).Take((int)((m_12 - 0))).ToArray(), 0))));
        n5_13 = (Enumerable.ToArray(Enumerable.Append(n5_13, qsel(a_10.Skip((int)(0)).Take((int)((m_12 - 0))).ToArray(), (((dynamic)a_10.Length) / ((dynamic)4))))));
        n5_13 = (Enumerable.ToArray(Enumerable.Append(n5_13, qsel(a_10, m_12))));
        double[] arr2_14 = a_10.Skip((int)(m_12)).Take((int)((a_10.Length - m_12))).ToArray();
        long q3_15 = ((last_11 - m_12) - (((dynamic)a_10.Length) / ((dynamic)4)));
        n5_13 = (Enumerable.ToArray(Enumerable.Append(n5_13, qsel(arr2_14, q3_15))));
        arr2_14 = arr2_14.Skip((int)(q3_15)).Take((int)((arr2_14.Length - q3_15))).ToArray();
        n5_13 = (Enumerable.ToArray(Enumerable.Append(n5_13, qsel(arr2_14, (((dynamic)arr2_14.Length) - ((dynamic)1))))));
        return n5_13;
    }

    static void Main() {
        {
            var __memStart = _mem();
            var __start = _now();
            Console.WriteLine(_fmtTop((fivenum(x1_16)).ToString()));
            Console.WriteLine(_fmtTop((fivenum(x2_17)).ToString()));
            Console.WriteLine(_fmtTop((fivenum(x3_18)).ToString()));
            var __end = _now();
            var __memEnd = _mem();
            var __dur = (__end - __start);
            var __memDiff = __memEnd - __memStart;
            Console.WriteLine(JsonSerializer.Serialize(new SortedDictionary<string, object>{{"name", "main"}, {"duration_us", __dur}, {"memory_bytes", __memDiff}}, new JsonSerializerOptions{ WriteIndented = true }));
        }
    }
}
