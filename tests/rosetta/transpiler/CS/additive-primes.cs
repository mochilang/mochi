// Generated by Mochi 0.10.39 on 2025-07-24 15:41 +0700
using System;
using System.Collections;
using System.Collections.Generic;

class Program {
    static string _fmt(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return "[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmt(d[k]));
            return "map[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        if (v is bool b) return b ? "1" : "0";
        return Convert.ToString(v);
    }
    static string _fmtTop(object v) {
        if (v is Array a && a.Length > 0 && a.GetValue(0) is Array) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        return _fmt(v);
    }
    static bool isPrime(int n) {
        if ((n < 2)) {
            return false;
        };
        if (((n % 2) == 0)) {
            return (n == 2);
        };
        if (((n % 3) == 0)) {
            return (n == 3);
        };
        int d = 5;
        while (((d * d) <= n)) {
            if (((n % d) == 0)) {
                return false;
            }
            d = (d + 2);
            if (((n % d) == 0)) {
                return false;
            }
            d = (d + 4);
        };
        return true;
    }

    static int sumDigits(int n) {
        int s = 0;
        int x = n;
        while ((x > 0)) {
            s = (s + (x % 10));
            x = Convert.ToInt32((x / 10));
        };
        return s;
    }

    static string pad(int n) {
        if ((n < 10)) {
            return ("  " + n.ToString());
        };
        if ((n < 100)) {
            return (" " + n.ToString());
        };
        return n.ToString();
    }

    static void main() {
        Console.WriteLine(_fmtTop("Additive primes less than 500:"));
        int count = 0;
        string line = "";
        int lineCount = 0;
        int i = 2;
        while ((i < 500)) {
            if ((isPrime(i) && isPrime(sumDigits(i)))) {
                count = (count + 1);
                line = ((line + pad(i)) + "  ");
                lineCount = (lineCount + 1);
                if ((lineCount == 10)) {
                    Console.WriteLine(_fmtTop(line.Substring(0, ((line.Length - 2) - 0))));
                    line = "";
                    lineCount = 0;
                }
            }
            if ((i > 2)) {
                i = (i + 2);
            } else {
                i = (i + 1);
            }
        };
        if ((lineCount > 0)) {
            Console.WriteLine(_fmtTop(line.Substring(0, ((line.Length - 2) - 0))));
        };
        Console.WriteLine(_fmtTop((count.ToString() + " additive primes found.")));
    }

    static void Main() {
        main();
    }
}
