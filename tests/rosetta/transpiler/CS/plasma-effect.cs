// Generated by Mochi 0.10.52 on 2025-07-31 09:21 +0700
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using System.Numerics;
using System.Collections;

class Program {
    static bool seededNow = false;
    static long nowSeed = 0;
    static long _now() {
        if (!seededNow) {
            var s = Environment.GetEnvironmentVariable("MOCHI_NOW_SEED");
            if (long.TryParse(s, out var v)) {
                nowSeed = v;
                seededNow = true;
            }
        }
        if (seededNow) {
            nowSeed = unchecked(nowSeed * 1664525 + 1013904223);
            nowSeed %= 9223372036854775783L;
            if (nowSeed < 0) nowSeed += 9223372036854775783L;
            return nowSeed;
        }
        return DateTime.UtcNow.Ticks / 100;
    }
    static long _mem() {
        return GC.GetTotalMemory(false);
    }
    static string _fmt(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return "[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmt(d[k]));
            return "map[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        if (v is bool b) return b ? "1" : "0";
        return Convert.ToString(v);
    }
    static string _fmtTop(object v) {
        if (v is Array a && a.Length > 0 && a.GetValue(0) is Array) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        return _fmt(v);
    }
    static double PI_0 = 3.141592653589793;
    static long nframes_12 = 10;
    static long w_13 = 32;
    static long h_14 = 32;
    static long total_15 = 0;
    static long f_16 = 1;
    static double floorf(double x_1) {
        long i_2 = Convert.ToInt64(x_1);
        if ((Convert.ToDouble(i_2) > x_1)) {
            i_2 = (i_2 - 1);
        };
        return Convert.ToDouble(i_2);
    }

    static double frac(double x_3) {
        return (x_3 - floorf(x_3));
    }

    static double sinApprox(double x_4) {
        double term_5 = x_4;
        double sum_6 = x_4;
        long n_7 = 1;
        while ((n_7 <= 10)) {
            var denom_8 = Convert.ToDouble(((2 * n_7) * ((2 * n_7) + 1)));
            term_5 = (((dynamic)(((-term_5 * x_4) * x_4))) / ((dynamic)(denom_8)));
            sum_6 = (sum_6 + term_5);
            n_7 = (n_7 + 1);
        };
        return sum_6;
    }

    static double sqrtApprox(double x_9) {
        if ((x_9 <= 0)) {
            return 0.0;
        };
        double guess_10 = x_9;
        long i_11 = 0;
        while ((i_11 < 10)) {
            guess_10 = ((guess_10 + (x_9 / guess_10)) / 2.0);
            i_11 = (i_11 + 1);
        };
        return guess_10;
    }

    static void Main() {
        {
            var __memStart = _mem();
            var __start = _now();
            while ((f_16 <= nframes_12)) {
                long y_17 = 0;
                while ((y_17 < h_14)) {
                    long x_18 = 0;
                    while ((x_18 < w_13)) {
                        var fx_19 = Convert.ToDouble(x_18);
                        var fy_20 = Convert.ToDouble(y_17);
                        double value_21 = sinApprox((((dynamic)(fx_19)) / ((dynamic)(16.0))));
                        value_21 = (value_21 + sinApprox((((dynamic)(fy_20)) / ((dynamic)(8.0)))));
                        value_21 = (value_21 + sinApprox((((dynamic)((((dynamic)(fx_19)) + ((dynamic)(fy_20))))) / ((dynamic)(16.0)))));
                        value_21 = (value_21 + sinApprox((sqrtApprox((((dynamic)((((dynamic)(fx_19)) * ((dynamic)(fx_19))))) + ((dynamic)((((dynamic)(fy_20)) * ((dynamic)(fy_20))))))) / 8.0)));
                        value_21 = (value_21 + 4.0);
                        value_21 = (value_21 / 8.0);
                        double rem_22 = frac((((dynamic)(value_21)) + ((dynamic)((((dynamic)(Convert.ToDouble(f_16))) / ((dynamic)(Convert.ToDouble(nframes_12))))))));
                        long ci_23 = (((dynamic)(Convert.ToInt64((((dynamic)(Convert.ToDouble(nframes_12))) * ((dynamic)(rem_22)))))) + ((dynamic)(1)));
                        total_15 = (total_15 + ci_23);
                        x_18 = (x_18 + 1);
                    }
                    y_17 = (y_17 + 1);
                }
                f_16 = (f_16 + 1);
            }
            Console.WriteLine(_fmtTop(total_15));
            var __end = _now();
            var __memEnd = _mem();
            var __dur = (__end - __start);
            var __memDiff = __memEnd - __memStart;
            Console.WriteLine(JsonSerializer.Serialize(new SortedDictionary<string, object>{{"name", "main"}, {"duration_us", __dur}, {"memory_bytes", __memDiff}}, new JsonSerializerOptions{ WriteIndented = true }));
        }
    }
}
