// Generated by Mochi 0.10.39 on 2025-07-24 15:41 +0700
using System;
using System.Collections;
using System.Collections.Generic;

class Program {
    static string _fmt(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return "[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmt(d[k]));
            return "map[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        if (v is bool b) return b ? "1" : "0";
        return Convert.ToString(v);
    }
    static string _fmtTop(object v) {
        if (v is Array a && a.Length > 0 && a.GetValue(0) is Array) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        return _fmt(v);
    }
    static int ackermann(int m, int n) {
        if ((m == 0)) {
            return (n + 1);
        };
        if ((n == 0)) {
            return ackermann((m - 1), 1);
        };
        return ackermann((m - 1), ackermann(m, (n - 1)));
    }

    static void main() {
        Console.WriteLine(_fmtTop(("A(0, 0) = " + ackermann(0, 0).ToString())));
        Console.WriteLine(_fmtTop(("A(1, 2) = " + ackermann(1, 2).ToString())));
        Console.WriteLine(_fmtTop(("A(2, 4) = " + ackermann(2, 4).ToString())));
        Console.WriteLine(_fmtTop(("A(3, 4) = " + ackermann(3, 4).ToString())));
    }

    static void Main() {
        main();
    }
}
