// Generated by Mochi 0.10.39 on 2025-07-24 15:41 +0700
using System;
using System.Collections;
using System.Collections.Generic;

struct Dog {
    public string kind;
    public string name;
    public override string ToString() => $"Dog {{kind = \"{kind}\", name = \"{name}\"}}";
}
struct Cat {
    public string kind;
    public string name;
    public override string ToString() => $"Cat {{kind = \"{kind}\", name = \"{name}\"}}";
}
class Program {
    static string _fmt(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return "[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmt(d[k]));
            return "map[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        if (v is bool b) return b ? "1" : "0";
        return Convert.ToString(v);
    }
    static string _fmtTop(object v) {
        if (v is Array a && a.Length > 0 && a.GetValue(0) is Array) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        return _fmt(v);
    }
    static string beastKind(object b) {
        return ((Func<object>)(() => { var __t = b; if (__t is Dog _p0) { var k = _p0.kind; var _ = _p0.name; return k; } else if (__t is Cat _p1) { var k = _p1.kind; var _ = _p1.name; return k; } return default(object); }))();
    }

    static string beastName(object b) {
        return ((Func<object>)(() => { var __t = b; if (__t is Dog _p0) { var _ = _p0.kind; var n = _p0.name; return n; } else if (__t is Cat _p1) { var _ = _p1.kind; var n = _p1.name; return n; } return default(object); }))();
    }

    static string beastCry(object b) {
        return ((Func<string>)(() => { var __t = b; if (__t is Dog _p0) { var _ = _p0.kind; var _ = _p0.name; return "Woof"; } else if (__t is Cat _p1) { var _ = _p1.kind; var _ = _p1.name; return "Meow"; } return default(string); }))();
    }

    static void bprint(object b) {
        Console.WriteLine(_fmtTop((((((beastName(b) + ", who's a ") + beastKind(b)) + ", cries: \"") + beastCry(b)) + "\".")));
    }

    static void main() {
        Dog d = new Dog{kind = "labrador", name = "Max"};
        Cat c = new Cat{kind = "siamese", name = "Sammy"};
        bprint(d);
        bprint(c);
    }

    static void Main() {
        main();
    }
}
