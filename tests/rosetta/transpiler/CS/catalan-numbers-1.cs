// Generated by Mochi 0.10.42 on 2025-07-27 16:44 UTC
using System;
using System.Linq;
using System.Numerics;
using System.Collections;
using System.Collections.Generic;

class Program {
    static string _fmt(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return "[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmt(d[k]));
            return "map[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        if (v is bool b) return b ? "1" : "0";
        return Convert.ToString(v);
    }
    static string _fmtTop(object v) {
        if (v is Array a && a.Length > 0 && a.GetValue(0) is Array) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        return _fmt(v);
    }
    static long binom(long n_0, long k_1) {
        if (((k_1 < 0) || (k_1 > n_0))) {
            return 0;
        };
        long kk_2 = k_1;
        if ((kk_2 > (n_0 - kk_2))) {
            kk_2 = (n_0 - kk_2);
        };
        long res_3 = 1;
        long i_4 = 0;
        while ((i_4 < kk_2)) {
            res_3 = (res_3 * (n_0 - i_4));
            i_4 = (i_4 + 1);
            res_3 = Convert.ToInt64((res_3 / i_4));
        };
        return res_3;
    }

    static long catalan(long n_5) {
        return Convert.ToInt64((binom((2 * n_5), n_5) / (n_5 + 1)));
    }

    static void main() {
        for (var i_6 = 0; i_6 < 15; i_6++) {
            Console.WriteLine(_fmtTop((catalan(i_6)).ToString()));
        };
    }

    static void Main() {
        main();
    }
}
