// Generated by Mochi 0.10.42 on 2025-07-28 10:03 +0700
using System;
using System.Linq;
using System.Numerics;
using System.Collections;
using System.Collections.Generic;

class Program {
    static string _fmt(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return "[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmt(d[k]));
            return "map[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        if (v is bool b) return b ? "1" : "0";
        return Convert.ToString(v);
    }
    static string _fmtTop(object v) {
        if (v is Array a && a.Length > 0 && a.GetValue(0) is Array) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        return _fmt(v);
    }
    static long[] randInt(long s_0, long n_1) {
        long next_2 = (((s_0 * 1664525) + 1013904223) % 2147483647);
        return new long[]{next_2, (next_2 % n_1)};
    }

    static string padLeft(string s_3, long w_4) {
        string res_5 = "";
        long n_6 = (((dynamic)w_4) - ((dynamic)s_3.Length));
        while ((n_6 > 0)) {
            res_5 = (res_5 + " ");
            n_6 = (n_6 - 1);
        };
        return (res_5 + s_3);
    }

    static object[] makeSeq(long s_7, long le_8) {
        string bases_9 = "ACGT";
        string out_10 = "";
        long i_11 = 0;
        while ((i_11 < le_8)) {
            long[] r_12 = randInt(s_7, 4);
            s_7 = r_12[(int)(0)];
            var idx_13 = Convert.ToInt64(r_12[(int)(1)]);
            out_10 = (out_10 + bases_9.Substring((int)(idx_13), (int)((((dynamic)idx_13) + ((dynamic)1)) - idx_13)));
            i_11 = (i_11 + 1);
        };
        return new object[]{s_7, out_10};
    }

    static object[] mutate(long s_14, string dna_15, long[] w_16) {
        string bases_17 = "ACGT";
        var le_18 = dna_15.Length;
        long[] r_19 = randInt(s_14, le_18);
        s_14 = r_19[(int)(0)];
        var p_20 = Convert.ToInt64(r_19[(int)(1)]);
        r_19 = randInt(s_14, 300);
        s_14 = r_19[(int)(0)];
        var x_21 = Convert.ToInt64(r_19[(int)(1)]);
        string[] arr_22 = new string[]{};
        long i_23 = 0;
        while ((i_23 < le_18)) {
            arr_22 = (Enumerable.ToArray(Enumerable.Append(arr_22, dna_15.Substring((int)(i_23), (int)((i_23 + 1) - i_23)))));
            i_23 = (i_23 + 1);
        };
        if ((x_21 < w_16[(int)(0)])) {
            r_19 = randInt(s_14, 4);
            s_14 = r_19[(int)(0)];
            var idx_24 = Convert.ToInt64(r_19[(int)(1)]);
            string b_25 = bases_17.Substring((int)(idx_24), (int)((((dynamic)idx_24) + ((dynamic)1)) - idx_24));
            Console.WriteLine(_fmtTop((((((("  Change @" + padLeft((p_20).ToString(), 3)) + " '") + arr_22[(int)(p_20)]) + "' to '") + b_25) + "'")));
            arr_22[p_20] = b_25;
        } else {
            if ((x_21 < (w_16[(int)(0)] + w_16[(int)(1)]))) {
                Console.WriteLine(_fmtTop((((("  Delete @" + padLeft((p_20).ToString(), 3)) + " '") + arr_22[(int)(p_20)]) + "'")));
                long j_26 = p_20;
                while ((j_26 < (((dynamic)arr_22.Length) - ((dynamic)1)))) {
                    arr_22[j_26] = arr_22[(int)((j_26 + 1))];
                    j_26 = (j_26 + 1);
                }
                arr_22 = arr_22.Skip((int)(0)).Take((int)(((((dynamic)arr_22.Length) - ((dynamic)1)) - 0))).ToArray();
            } else {
                r_19 = randInt(s_14, 4);
                s_14 = r_19[(int)(0)];
                var idx2_27 = Convert.ToInt64(r_19[(int)(1)]);
                string b_28 = bases_17.Substring((int)(idx2_27), (int)((((dynamic)idx2_27) + ((dynamic)1)) - idx2_27));
                arr_22 = (Enumerable.ToArray(Enumerable.Append(arr_22, "")));
                long j_29 = (((dynamic)arr_22.Length) - ((dynamic)1));
                while ((j_29 > p_20)) {
                    arr_22[j_29] = arr_22[(int)((j_29 - 1))];
                    j_29 = (j_29 - 1);
                }
                Console.WriteLine(_fmtTop((((("  Insert @" + padLeft((p_20).ToString(), 3)) + " '") + b_28) + "'")));
                arr_22[p_20] = b_28;
            }
        };
        string out_30 = "";
        i_23 = 0;
        while ((i_23 < arr_22.Length)) {
            out_30 = (out_30 + arr_22[(int)(i_23)]);
            i_23 = (i_23 + 1);
        };
        return new object[]{s_14, out_30};
    }

    static void prettyPrint(string dna_31, long rowLen_32) {
        Console.WriteLine(_fmtTop("SEQUENCE:"));
        var le_33 = dna_31.Length;
        long i_34 = 0;
        while ((i_34 < le_33)) {
            long k_35 = (i_34 + rowLen_32);
            if ((k_35 > le_33)) {
                k_35 = le_33;
            }
            Console.WriteLine(_fmtTop(((padLeft((i_34).ToString(), 5) + ": ") + dna_31.Substring((int)(i_34), (int)(k_35 - i_34)))));
            i_34 = (i_34 + rowLen_32);
        };
        long a_36 = 0;
        long c_37 = 0;
        long g_38 = 0;
        long t_39 = 0;
        long idx_40 = 0;
        while ((idx_40 < le_33)) {
            string ch_41 = dna_31.Substring((int)(idx_40), (int)((idx_40 + 1) - idx_40));
            if ((ch_41 == "A")) {
                a_36 = (a_36 + 1);
            } else {
                if ((ch_41 == "C")) {
                    c_37 = (c_37 + 1);
                } else {
                    if ((ch_41 == "G")) {
                        g_38 = (g_38 + 1);
                    } else {
                        if ((ch_41 == "T")) {
                            t_39 = (t_39 + 1);
                        }
                    }
                }
            }
            idx_40 = (idx_40 + 1);
        };
        Console.WriteLine(_fmtTop(""));
        Console.WriteLine(_fmtTop("BASE COUNT:"));
        Console.WriteLine(_fmtTop(("    A: " + padLeft((a_36).ToString(), 3))));
        Console.WriteLine(_fmtTop(("    C: " + padLeft((c_37).ToString(), 3))));
        Console.WriteLine(_fmtTop(("    G: " + padLeft((g_38).ToString(), 3))));
        Console.WriteLine(_fmtTop(("    T: " + padLeft((t_39).ToString(), 3))));
        Console.WriteLine(_fmtTop("    ------"));
        Console.WriteLine(_fmtTop(("    Î£: " + (le_33).ToString())));
        Console.WriteLine(_fmtTop("    ======"));
    }

    static string wstring(long[] w_42) {
        return (((((("  Change: " + (w_42[(int)(0)]).ToString()) + "\n  Delete: ") + (w_42[(int)(1)]).ToString()) + "\n  Insert: ") + (w_42[(int)(2)]).ToString()) + "\n");
    }

    static void main() {
        var seed_43 = 1;
        object[] res_44 = makeSeq(seed_43, 250);
        seed_43 = ((dynamic)res_44)[0];
        string dna_45 = ((dynamic)res_44)[1];
        prettyPrint(dna_45, 50);
        long muts_46 = 10;
        long[] w_47 = new long[]{100, 100, 100};
        Console.WriteLine(_fmtTop("\nWEIGHTS (ex 300):"));
        Console.WriteLine(_fmtTop(wstring(w_47)));
        Console.WriteLine(_fmtTop((("MUTATIONS (" + (muts_46).ToString()) + "):")));
        long i_48 = 0;
        while ((i_48 < muts_46)) {
            res_44 = mutate(seed_43, dna_45, w_47);
            seed_43 = ((dynamic)res_44)[0];
            dna_45 = ((dynamic)res_44)[1];
            i_48 = (i_48 + 1);
        };
        Console.WriteLine(_fmtTop(""));
        prettyPrint(dna_45, 50);
    }

    static void Main() {
        main();
    }
}
