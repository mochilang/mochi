// Generated by Mochi 0.10.39 on 2025-07-24 08:16 UTC
using System;
using System.Linq;
using System.Collections;
using System.Collections.Generic;
using System.Net;
using System.Linq;
static class net {
    public static object[] LookupHost(string host) {
        try {
            var addrs = Dns.GetHostAddresses(host).Select(a => a.ToString()).ToArray();
            return new object[]{addrs, null};
        } catch (Exception ex) {
            return new object[]{null, ex.Message};
        }
    }
}

class Program {
    static string _fmt(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return "[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmt(d[k]));
            return "map[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        if (v is bool b) return b ? "1" : "0";
        return Convert.ToString(v);
    }
    static string _fmtTop(object v) {
        if (v is Array a && a.Length > 0 && a.GetValue(0) is Array) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        return _fmt(v);
    }
    static dynamic res = net.LookupHost("www.kame.net");
    static dynamic addrs = res[0];
    static dynamic err = res[1];
    static void Main() {
        if ((err == null)) {
            Console.WriteLine(_fmtTop(addrs.ToString()));
        } else {
            Console.WriteLine(_fmtTop(err));
        }
    }
}
