// Generated by Mochi 0.10.50 on 2025-07-31 07:41 +0700
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using System.Numerics;
using System.Collections;

class Program {
    static bool seededNow = false;
    static long nowSeed = 0;
    static long _now() {
        if (!seededNow) {
            var s = Environment.GetEnvironmentVariable("MOCHI_NOW_SEED");
            if (long.TryParse(s, out var v)) {
                nowSeed = v;
                seededNow = true;
            }
        }
        if (seededNow) {
            nowSeed = unchecked(nowSeed * 1664525 + 1013904223);
            nowSeed %= 9223372036854775783L;
            if (nowSeed < 0) nowSeed += 9223372036854775783L;
            return nowSeed;
        }
        return DateTime.UtcNow.Ticks / 100;
    }
    static long _mem() {
        return GC.GetTotalMemory(false);
    }
    static string _fmt(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return "[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmt(d[k]));
            return "map[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        if (v is bool b) return b ? "1" : "0";
        return Convert.ToString(v);
    }
    static string _fmtTop(object v) {
        if (v is Array a && a.Length > 0 && a.GetValue(0) is Array) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        return _fmt(v);
    }
    static string listStr(long[] xs_0) {
        string s_1 = "[";
        long i_2 = 0;
        while ((i_2 < xs_0.Length)) {
            s_1 = (s_1 + (xs_0[(int)(i_2)]).ToString());
            if ((i_2 < (((dynamic)xs_0.Length) - ((dynamic)1)))) {
                s_1 = (s_1 + " ");
            }
            i_2 = (i_2 + 1);
        };
        s_1 = (s_1 + "]");
        return s_1;
    }

    static bool ordered(long[] xs_3) {
        if ((xs_3.Length == 0)) {
            return true;
        };
        long prev_4 = xs_3[(int)(0)];
        long i_5 = 1;
        while ((i_5 < xs_3.Length)) {
            if ((xs_3[(int)(i_5)] < prev_4)) {
                return false;
            }
            prev_4 = xs_3[(int)(i_5)];
            i_5 = (i_5 + 1);
        };
        return true;
    }

    static long[] outOfOrder(long n_6) {
        if ((n_6 < 2)) {
            return new long[]{};
        };
        long[] r_7 = new long[]{};
        while (true) {
            r_7 = new long[]{};
            long i_8 = 0;
            while ((i_8 < n_6)) {
                r_7 = (Enumerable.ToArray(Enumerable.Append(r_7, (_now() % 3))));
                i_8 = (i_8 + 1);
            }
            if ((!ordered(r_7))) {
                break;
            }
        };
        return r_7;
    }

    static long[] sort3(long[] a_9) {
        long lo_10 = 0;
        long mid_11 = 0;
        long hi_12 = (((dynamic)a_9.Length) - ((dynamic)1));
        while ((mid_11 <= hi_12)) {
            long v_13 = a_9[(int)(mid_11)];
            if ((v_13 == 0)) {
                long tmp_14 = a_9[(int)(lo_10)];
                a_9[lo_10] = a_9[(int)(mid_11)];
                a_9[mid_11] = tmp_14;
                lo_10 = (lo_10 + 1);
                mid_11 = (mid_11 + 1);
            } else {
                if ((v_13 == 1)) {
                    mid_11 = (mid_11 + 1);
                } else {
                    long tmp_15 = a_9[(int)(mid_11)];
                    a_9[mid_11] = a_9[(int)(hi_12)];
                    a_9[hi_12] = tmp_15;
                    hi_12 = (hi_12 - 1);
                }
            }
        };
        return a_9;
    }

    static void main() {
        long[] f_16 = outOfOrder(12);
        Console.WriteLine(_fmtTop(listStr(f_16)));
        f_16 = sort3(f_16);
        Console.WriteLine(_fmtTop(listStr(f_16)));
    }

    static void Main() {
        {
            var __memStart = _mem();
            var __start = _now();
            main();
            var __end = _now();
            var __memEnd = _mem();
            var __dur = (__end - __start);
            var __memDiff = __memEnd - __memStart;
            Console.WriteLine(JsonSerializer.Serialize(new SortedDictionary<string, object>{{"name", "main"}, {"duration_us", __dur}, {"memory_bytes", __memDiff}}, new JsonSerializerOptions{ WriteIndented = true }));
        }
    }
}
