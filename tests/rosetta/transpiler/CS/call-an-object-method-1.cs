// Generated by Mochi 0.10.57 on 2025-08-04 18:30 +0700
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using System.Numerics;

class Foo {
    public void PointerMethod(long x) {
    }

    public void ValueMethod(long x) {
    }

    public override string ToString() => $"Foo {{}}";
}
class Program {
    static bool seededNow = false;
    static long nowSeed = 0;
    static long _now() {
        if (!seededNow) {
            var s = Environment.GetEnvironmentVariable("MOCHI_NOW_SEED");
            if (long.TryParse(s, out var v)) {
                nowSeed = v;
                seededNow = true;
            }
        }
        if (seededNow) {
            nowSeed = unchecked(nowSeed * 1664525 + 1013904223);
            nowSeed %= 9223372036854775783L;
            if (nowSeed < 0) nowSeed += 9223372036854775783L;
            return nowSeed;
        }
        return DateTime.UtcNow.Ticks / 100;
    }
    static long _mem() {
        return GC.GetTotalAllocatedBytes(true);
    }
    static Foo myValue_0 = new Foo{};
    static Foo myPointer_1 = new Foo{};
    static void Main() {
        {
            var __memStart = _mem();
            var __start = _now();
            myValue_0.ValueMethod(0);
            myPointer_1.PointerMethod(0);
            myPointer_1.ValueMethod(0);
            myValue_0.PointerMethod(0);
            myValue_0.ValueMethod(0);
            myPointer_1.PointerMethod(0);
            var __end = _now();
            var __memEnd = _mem();
            var __dur = (__end - __start);
            if (__dur <= 0) __dur = 1;
            var __memDiff = __memEnd - __memStart;
            if (__memDiff <= 0) __memDiff = __memEnd;
            Console.WriteLine("{\"name\":\"main\",\"duration_us\":" + __dur + ",\"memory_bytes\":" + __memDiff + "}");
        }
    }
}
