// Generated by Mochi 0.10.37 on 2025-07-23 13:23 +0700
using System;
using System.Linq;

class Program {
    static bool seededNow = false;
    static int nowSeed = 0;
    static int _now() {
        if (!seededNow) {
            var s = Environment.GetEnvironmentVariable("MOCHI_NOW_SEED");
            if (int.TryParse(s, out var v)) {
                nowSeed = v;
                seededNow = true;
            }
        }
        if (seededNow) {
            nowSeed = (nowSeed*1664525 + 1013904223) % 2147483647;
            return nowSeed;
        }
        return (int)(DateTimeOffset.UtcNow.ToUnixTimeMilliseconds() % int.MaxValue);
    }
    static int[] shuffle(int[] xs) {
        int[] arr = xs;
        int i = 99;
        while ((i > 0)) {
            int j = (_now() % (i + 1));
            int tmp = arr[i];
            arr[i] = arr[j];
            arr[j] = tmp;
            i = (i - 1);
        };
        return arr;
    }

    static void doTrials(int trials, int np, string strategy) {
        int pardoned = 0;
        int t = 0;
        while ((t < trials)) {
            int[] drawers = new int[]{};
            int i = 0;
            while ((i < 100)) {
                drawers = (drawers.Append(i).ToArray());
                i = (i + 1);
            }
            drawers = shuffle(drawers);
            int p = 0;
            bool success = true;
            while ((p < np)) {
                bool found = false;
                if ((strategy == "optimal")) {
                    int prev = p;
                    int d = 0;
                    while ((d < 50)) {
                        int _this = drawers[prev];
                        if ((_this == p)) {
                            found = true;
                            break;
                        }
                        prev = _this;
                        d = (d + 1);
                    }
                } else {
                    bool[] opened = new bool[]{};
                    int k = 0;
                    while ((k < 100)) {
                        opened = (opened.Append(false).ToArray());
                        k = (k + 1);
                    }
                    int d = 0;
                    while ((d < 50)) {
                        int n = (_now() % 100);
                        while (opened[n]) {
                            n = (_now() % 100);
                        }
                        opened[n] = true;
                        if ((drawers[n] == p)) {
                            found = true;
                            break;
                        }
                        d = (d + 1);
                    }
                }
                if ((!found)) {
                    success = false;
                    break;
                }
                p = (p + 1);
            }
            if (success) {
                pardoned = (pardoned + 1);
            }
            t = (t + 1);
        };
        double rf = ((Convert.ToDouble(pardoned) / Convert.ToDouble(trials)) * 100);
        Console.WriteLine((((((("  strategy = " + strategy) + "  pardoned = ") + pardoned.ToString()) + " relative frequency = ") + rf.ToString()) + "%"));
    }

    static void main() {
        int trials = 1000;
        foreach (var np in new int[]{10, 100}) {
            Console.WriteLine((((("Results from " + trials.ToString()) + " trials with ") + np.ToString()) + " prisoners:\n"));
            foreach (var strat in new string[]{"random", "optimal"}) {
                doTrials(trials, np, strat);
            }
        };
    }

    static void Main() {
        main();
    }
}
