// Generated by Mochi 0.10.39 on 2025-07-24 15:41 +0700
using System;
using System.Linq;
using System.Collections;
using System.Collections.Generic;

class Program {
    static string _fmt(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return "[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmt(d[k]));
            return "map[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        if (v is bool b) return b ? "1" : "0";
        return Convert.ToString(v);
    }
    static string _fmtTop(object v) {
        if (v is Array a && a.Length > 0 && a.GetValue(0) is Array) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        return _fmt(v);
    }
    static bool kPrime(int n, int k) {
        int nf = 0;
        int i = 2;
        while ((i <= n)) {
            while (((n % i) == 0)) {
                if ((nf == k)) {
                    return false;
                }
                nf = (nf + 1);
                n = (n / i);
            }
            i = (i + 1);
        };
        return (nf == k);
    }

    static int[] gen(int k, int count) {
        int[] r = new int[]{};
        int n = 2;
        while ((r.Length < count)) {
            if (kPrime(n, k)) {
                r = (r.Append(n).ToArray());
            }
            n = (n + 1);
        };
        return r;
    }

    static void main() {
        int k = 1;
        while ((k <= 5)) {
            Console.WriteLine(_fmtTop(((k.ToString() + " ") + gen(k, 10).ToString())));
            k = (k + 1);
        };
    }

    static void Main() {
        main();
    }
}
