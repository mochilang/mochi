// Generated by Mochi 0.10.50 on 2025-07-31 02:12 UTC
using System;
using System.Linq;
using System.Numerics;
using System.Collections;
using System.Collections.Generic;

class Program {
    static string _fmt(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return "[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmt(d[k]));
            return "map[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        if (v is bool b) return b ? "1" : "0";
        return Convert.ToString(v);
    }
    static string _fmtTop(object v) {
        if (v is Array a && a.Length > 0 && a.GetValue(0) is Array) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        return _fmt(v);
    }
    static string[] small_1 = new string[]{"zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"};
    static string[] tens_2 = new string[]{"", "", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety"};
    static string[] illions_3 = new string[]{"", " thousand", " million", " billion", " trillion", " quadrillion", " quintillion"};
    static string capitalize(string s_0) {
        if ((s_0.Length == 0)) {
            return s_0;
        };
        return (s_0.Substring((int)(0), (int)(1 - 0)).ToUpper() + s_0.Substring((int)(1), (int)(s_0.Length - 1)));
    }

    static string say(long n_4) {
        string t_5 = "";
        if ((n_4 < 0)) {
            t_5 = "negative ";
            n_4 = -n_4;
        };
        if ((n_4 < 20)) {
            return (t_5 + small_1[(int)(n_4)]);
        } else {
            if ((n_4 < 100)) {
                t_5 = tens_2[(int)((n_4 / 10))];
                long s_6 = (n_4 % 10);
                if ((s_6 > 0)) {
                    t_5 = ((t_5 + "-") + small_1[(int)(s_6)]);
                }
                return t_5;
            } else {
                if ((n_4 < 1000)) {
                    t_5 = (small_1[(int)((n_4 / 100))] + " hundred");
                    long s_7 = (n_4 % 100);
                    if ((s_7 > 0)) {
                        t_5 = ((t_5 + " ") + say(s_7));
                    }
                    return t_5;
                }
            }
        };
        string sx_8 = "";
        long i_9 = 0;
        long nn_10 = n_4;
        while ((nn_10 > 0)) {
            long p_11 = (nn_10 % 1000);
            nn_10 = (nn_10 / 1000);
            if ((p_11 > 0)) {
                string ix_12 = (say(p_11) + illions_3[(int)(i_9)]);
                if ((sx_8 != "")) {
                    ix_12 = ((ix_12 + " ") + sx_8);
                }
                sx_8 = ix_12;
            }
            i_9 = (i_9 + 1);
        };
        return (t_5 + sx_8);
    }

    static string fourIsMagic(long n_13) {
        string s_14 = say(n_13);
        s_14 = capitalize(s_14);
        string t_15 = s_14;
        while ((n_13 != 4)) {
            n_13 = s_14.Length;
            s_14 = say(n_13);
            t_15 = ((((t_15 + " is ") + s_14) + ", ") + s_14);
        };
        t_15 = (t_15 + " is magic.");
        return t_15;
    }

    static void main() {
        long[] nums_16 = new long[]{0, 4, 6, 11, 13, 75, 100, 337, -164, 9223372036854775807L};
        foreach (var n_17 in nums_16) {
            Console.WriteLine(_fmtTop(fourIsMagic(n_17)));
        };
    }

    static void Main() {
        main();
    }
}
