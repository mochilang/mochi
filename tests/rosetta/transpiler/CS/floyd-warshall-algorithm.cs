// Generated by Mochi 0.10.50 on 2025-07-31 09:00 +0700
using System;
using System.Linq;
using System.Numerics;
using System.Collections;
using System.Collections.Generic;

class Program {
    static string _fmt(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return "[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmt(d[k]));
            return "map[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        if (v is bool b) return b ? "1" : "0";
        return Convert.ToString(v);
    }
    static string _fmtTop(object v) {
        if (v is Array a && a.Length > 0 && a.GetValue(0) is Array) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        return _fmt(v);
    }
    static void main() {
        long INF_0 = 1000000000;
        long n_1 = 4;
        long[][] dist_2 = new long[][]{};
        long[][] next_3 = new long[][]{};
        long i_4 = 0;
        while ((i_4 < n_1)) {
            long[] row_5 = new long[]{};
            long[] nrow_6 = new long[]{};
            long j_7 = 0;
            while ((j_7 < n_1)) {
                if ((i_4 == j_7)) {
                    row_5 = (Enumerable.ToArray(Enumerable.Append(row_5, 0)));
                } else {
                    row_5 = (Enumerable.ToArray(Enumerable.Append(row_5, INF_0)));
                }
                nrow_6 = (Enumerable.ToArray(Enumerable.Append(nrow_6, (0 - 1))));
                j_7 = (j_7 + 1);
            }
            dist_2 = (Enumerable.ToArray(Enumerable.Append(dist_2, row_5)));
            next_3 = (Enumerable.ToArray(Enumerable.Append(next_3, nrow_6)));
            i_4 = (i_4 + 1);
        };
        dist_2[(int)(0)][2] = -2;
        next_3[(int)(0)][2] = 2;
        dist_2[(int)(2)][3] = 2;
        next_3[(int)(2)][3] = 3;
        dist_2[(int)(3)][1] = -1;
        next_3[(int)(3)][1] = 1;
        dist_2[(int)(1)][0] = 4;
        next_3[(int)(1)][0] = 0;
        dist_2[(int)(1)][2] = 3;
        next_3[(int)(1)][2] = 2;
        long k_8 = 0;
        while ((k_8 < n_1)) {
            long i_9 = 0;
            while ((i_9 < n_1)) {
                long j_10 = 0;
                while ((j_10 < n_1)) {
                    if (((dist_2[(int)(i_9)][(int)(k_8)] < INF_0) && (dist_2[(int)(k_8)][(int)(j_10)] < INF_0))) {
                        long alt_11 = (dist_2[(int)(i_9)][(int)(k_8)] + dist_2[(int)(k_8)][(int)(j_10)]);
                        if ((alt_11 < dist_2[(int)(i_9)][(int)(j_10)])) {
                            dist_2[(int)(i_9)][j_10] = alt_11;
                            next_3[(int)(i_9)][j_10] = next_3[(int)(i_9)][(int)(k_8)];
                        }
                    }
                    j_10 = (j_10 + 1);
                }
                i_9 = (i_9 + 1);
            }
            k_8 = (k_8 + 1);
        };
        Func<long, long, long[]> path = null;
        path = (long u_12, long v_13) => {long ui_14 = (u_12 - 1); long vi_15 = (v_13 - 1); if ((next_3[(int)(ui_14)][(int)(vi_15)] == (0 - 1))) {
            return new long[]{};
        }; long[] p_16 = new long[]{u_12}; long cur_17 = ui_14; while ((cur_17 != vi_15)) {
            cur_17 = next_3[(int)(cur_17)][(int)(vi_15)];
            p_16 = (Enumerable.ToArray(Enumerable.Append(p_16, (cur_17 + 1))));
        }; return p_16;};
        Func<long[], string> pathStr = null;
        pathStr = (long[] p_18) => {string s_19 = ""; bool first_20 = true; long idx_21 = 0; while ((idx_21 < p_18.Length)) {
            long x_22 = p_18[(int)(idx_21)];
            if ((!first_20)) {
                s_19 = (s_19 + " -> ");
            }
            s_19 = (s_19 + (x_22).ToString());
            first_20 = false;
            idx_21 = (idx_21 + 1);
        }; return s_19;};
        Console.WriteLine(_fmtTop("pair\tdist\tpath"));
        long a_23 = 0;
        while ((a_23 < n_1)) {
            long b_24 = 0;
            while ((b_24 < n_1)) {
                if ((a_23 != b_24)) {
                    Console.WriteLine(_fmtTop(((((((((a_23 + 1)).ToString() + " -> ") + ((b_24 + 1)).ToString()) + "\t") + (dist_2[(int)(a_23)][(int)(b_24)]).ToString()) + "\t") + pathStr(path((a_23 + 1), (b_24 + 1))))));
                }
                b_24 = (b_24 + 1);
            }
            a_23 = (a_23 + 1);
        };
    }

    static void Main() {
        main();
    }
}
