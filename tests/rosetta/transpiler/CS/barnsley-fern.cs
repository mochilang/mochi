// Generated by Mochi 0.10.42 on 2025-07-28 10:03 +0700
using System;
using System.Linq;
using System.Numerics;
using System.Collections;
using System.Collections.Generic;

class Program {
    static string _fmt(object v) {
        if (v is Array a) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return "[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IDictionary d) {
            var keys = new List<string>();
            foreach (var k in d.Keys) keys.Add(k.ToString());
            keys.Sort();
            var parts = new List<string>();
            foreach (var k in keys) parts.Add(k + ":" + _fmt(d[k]));
            return "map[" + string.Join(" ", parts) + "]";
        }
        if (v is System.Collections.IEnumerable e && !(v is string)) {
            var parts = new List<string>();
            foreach (var x in e) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        if (v is bool b) return b ? "1" : "0";
        return Convert.ToString(v);
    }
    static string _fmtTop(object v) {
        if (v is Array a && a.Length > 0 && a.GetValue(0) is Array) {
            var parts = new List<string>();
            foreach (var x in a) parts.Add(_fmt(x));
            return string.Join(" ", parts);
        }
        return _fmt(v);
    }
    static double xMin_0 = -2.182;
    static double xMax_1 = 2.6558;
    static double yMin_2 = 0;
    static double yMax_3 = 9.9983;
    static long width_4 = 60;
    static long nIter_5 = 10000;
    static double dx_6 = (xMax_1 - xMin_0);
    static double dy_7 = (yMax_3 - yMin_2);
    static dynamic height_8 = Convert.ToInt64(((width_4 * dy_7) / dx_6));
    static string[][] grid_9 = new string[][]{};
    static long row_10 = 0;
    static long seed_13 = 1;
    static double x_17 = 0;
    static double y_18 = 0;
    static dynamic ix_19 = Convert.ToInt64(((((dynamic)Convert.ToDouble(width_4)) * ((dynamic)(x_17 - xMin_0))) / dx_6));
    static dynamic iy_20 = Convert.ToInt64(((((dynamic)Convert.ToDouble(height_8)) * ((dynamic)(yMax_3 - y_18))) / dy_7));
    static long i_21 = 0;
    static long[] randInt(long s_14, long n_15) {
        long next_16 = (((s_14 * 1664525) + 1013904223) % 2147483647);
        return new long[]{next_16, (next_16 % n_15)};
    }

    static void Main() {
        while ((row_10 < height_8)) {
            string[] line_11 = new string[]{};
            long col_12 = 0;
            while ((col_12 < width_4)) {
                line_11 = (Enumerable.ToArray(Enumerable.Append(line_11, " ")));
                col_12 = (col_12 + 1);
            }
            grid_9 = (Enumerable.ToArray(Enumerable.Append(grid_9, line_11)));
            row_10 = (row_10 + 1);
        }
        if (((((ix_19 >= 0) && (ix_19 < width_4)) && (iy_20 >= 0)) && (iy_20 < height_8))) {
            grid_9[(int)(iy_20)][ix_19] = "*";
        }
        while ((i_21 < nIter_5)) {
            long[] res_22 = randInt(seed_13, 100);
            seed_13 = res_22[(int)(0)];
            long r_23 = res_22[(int)(1)];
            if ((r_23 < 85)) {
                double nx_24 = ((0.85 * x_17) + (0.04 * y_18));
                double ny_25 = (((-0.04 * x_17) + (0.85 * y_18)) + 1.6);
                x_17 = nx_24;
                y_18 = ny_25;
            } else {
                if ((r_23 < 92)) {
                    double nx_26 = ((0.2 * x_17) - (0.26 * y_18));
                    double ny_27 = (((0.23 * x_17) + (0.22 * y_18)) + 1.6);
                    x_17 = nx_26;
                    y_18 = ny_27;
                } else {
                    if ((r_23 < 99)) {
                        double nx_28 = ((-0.15 * x_17) + (0.28 * y_18));
                        double ny_29 = (((0.26 * x_17) + (0.24 * y_18)) + 0.44);
                        x_17 = nx_28;
                        y_18 = ny_29;
                    } else {
                        x_17 = 0;
                        y_18 = (0.16 * y_18);
                    }
                }
            }
            ix_19 = Convert.ToInt64(((((dynamic)Convert.ToDouble(width_4)) * ((dynamic)(x_17 - xMin_0))) / dx_6));
            iy_20 = Convert.ToInt64(((((dynamic)Convert.ToDouble(height_8)) * ((dynamic)(yMax_3 - y_18))) / dy_7));
            if (((((ix_19 >= 0) && (ix_19 < width_4)) && (iy_20 >= 0)) && (iy_20 < height_8))) {
                grid_9[(int)(iy_20)][ix_19] = "*";
            }
            i_21 = (i_21 + 1);
        }
        row_10 = 0;
        while ((row_10 < height_8)) {
            string line_30 = "";
            long col_31 = 0;
            while ((col_31 < width_4)) {
                line_30 = (line_30 + grid_9[(int)(row_10)][(int)(col_31)]);
                col_31 = (col_31 + 1);
            }
            Console.WriteLine(_fmtTop(line_30));
            row_10 = (row_10 + 1);
        }
    }
}
