//go:build ignore

// Generated by Mochi v0.10.57 on 2025-08-04 15:27:38 GMT+7
package main

import (
	"encoding/json"
	"fmt"
	testpkg "mochi/runtime/ffi/go/testpkg"
	"os"
	"runtime"
	"strconv"
	"time"
)

var seededNow bool
var nowSeed int64

func init() {
	if s := os.Getenv("MOCHI_NOW_SEED"); s != "" {
		if v, err := strconv.ParseInt(s, 10, 64); err == nil {
			nowSeed = v
			seededNow = true
		}
	}
}
func _now() int {
	if seededNow {
		nowSeed = (nowSeed*1664525 + 1013904223) % 2147483647
		return int(nowSeed)
	}
	return int(time.Now().UnixNano())
}

func main() {
	func() {
		var ms runtime.MemStats
		runtime.ReadMemStats(&ms)
		startMem := ms.Alloc
		benchStart := time.Now().UnixNano()
		for _, pair := range [][]string{[]string{"d41d8cd98f00b204e9800998ecf8427e", ""}, []string{"0cc175b9c0f1b6a831c399e269772661", "a"}, []string{"900150983cd24fb0d6963f7d28e17f72", "abc"}, []string{"f96b697d7cb7938d525a2f31aaf161d0", "message digest"}, []string{"c3fcd3d76192e4007dfb496cca67e13b", "abcdefghijklmnopqrstuvwxyz"}, []string{"d174ab98d277d9f5a5611c2c9f419d9f", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"}, []string{"57edf4a22be3c955ac49da2e2107b67a", ("12345678901234567890" + "123456789012345678901234567890123456789012345678901234567890")}, []string{"e38ca1d920c4b8b8d3946b2c72f01680", "The quick brown fox jumped over the lazy dog's back"}} {
			sum := testpkg.MD5Hex(pair[1])
			_ = sum
			if fmt.Sprint(sum) != pair[0] {
				fmt.Println("MD5 fail")
				fmt.Println("  for string,", pair[1])
				fmt.Println("  expected:  ", pair[0])
				fmt.Println("  got:       ", sum)
			}
		}
		runtime.ReadMemStats(&ms)
		endMem := ms.Alloc
		benchEnd := time.Now().UnixNano()
		data := map[string]any{"name": "main", "duration_us": (benchEnd - benchStart) / 1000, "memory_bytes": endMem - startMem}
		out, _ := json.MarshalIndent(data, "", "  ")
		fmt.Println(string(out))
	}()
}
