//go:build ignore

// Generated by Mochi v0.10.42 on 2025-07-27 22:17:34 GMT+7
package main

import (
	"fmt"
)

func Node(value string, next any, prev any) map[string]any {
	return map[string]any{"value": value, "next": next, "prev": prev}
}

func mochiMain() {
	var a map[string]any = Node("A", nil, nil)
	var b map[string]any = Node("B", nil, a)
	a["next"] = b
	var c map[string]any = Node("C", nil, b)
	b["next"] = c
	var p map[string]any = a
	var line string = ""
	for p != nil {
		line = (line + p["value"].(string))
		p = func(v any) map[string]any {
			if v == nil {
				return nil
			}
			if vv, ok := v.(map[string]any); ok {
				return vv
			}
			return nil
		}(p["next"])
		if p != nil {
			line = (line + " ")
		}
	}
	fmt.Println(line)
	p = c
	line = ""
	for p != nil {
		line = (line + p["value"].(string))
		p = func(v any) map[string]any {
			if v == nil {
				return nil
			}
			if vv, ok := v.(map[string]any); ok {
				return vv
			}
			return nil
		}(p["prev"])
		if p != nil {
			line = (line + " ")
		}
	}
	fmt.Println(line)
}

func main() {
	mochiMain()
}
