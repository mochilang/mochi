//go:build ignore

// Generated by Mochi v0.10.37 on 2025-07-23 13:01:35 GMT+7
package main

import (
	"fmt"
	"strings"
)

func fields(s string) []string {
	var res []string = []string{}
	var cur string = ""
	var i int = 0
	for i < len(s) {
		var c string = string([]rune(s)[i:(i + 1)])
		if c == " " {
			if len(cur) > 0 {
				res = append(res, cur)
				cur = ""
			}
		} else {
			cur = (cur + c)
		}
		i = (i + 1)
	}
	if len(cur) > 0 {
		res = append(res, cur)
	}
	return res
}

func canSpell(word string, blks []string) bool {
	if len(word) == 0 {
		return true
	}
	var c string = strings.ToLower(string([]rune(word)[0:1]))
	var i int = 0
	for i < len(blks) {
		var b string = blks[i]
		if (c == strings.ToLower(string([]rune(b)[0:1]))) || (c == strings.ToLower(string([]rune(b)[1:2]))) {
			var rest []string = []string{}
			var j int = 0
			for j < len(blks) {
				if j != i {
					rest = append(rest, blks[j])
				}
				j = (j + 1)
			}
			if canSpell(string([]rune(word)[1:]), rest) {
				return true
			}
		}
		i = (i + 1)
	}
	return false
}

func newSpeller(blocks string) func(string) bool {
	var bl []string = fields(blocks)
	return func(w string) bool {
		return canSpell(w, bl)
	}
}

func mochiMain() {
	sp := newSpeller("BO XK DQ CP NA GT RE TG QD FS JW HU VI AN OB ER FS LY PC ZM")
	for _, word := range []string{"A", "BARK", "BOOK", "TREAT", "COMMON", "SQUAD", "CONFUSE"} {
		fmt.Println(((word + " ") + fmt.Sprint(sp(word))))
	}
}

func main() {
	mochiMain()
}
