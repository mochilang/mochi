//go:build ignore

// Generated by Mochi v0.10.38 on 2025-07-23 23:44:34 GMT+7
package main

import (
	"fmt"
)

var PI float64 = 3.141592653589793

func sinApprox(x float64) float64 {
	var term float64 = x
	_ = term
	var sum float64 = x
	_ = sum
	var n int = 1
	_ = n
	for n <= 10 {
		var denom float64 = float64(((2 * n) * ((2 * n) + 1)))
		_ = denom
		term = ((((0 - term) * x) * x) / denom)
		sum = (sum + term)
		n = (n + 1)
	}
	return sum
}

func cosApprox(x float64) float64 {
	var term float64 = 1.0
	_ = term
	var sum float64 = 1.0
	_ = sum
	var n int = 1
	_ = n
	for n <= 10 {
		var denom float64 = float64((((2 * n) - 1) * (2 * n)))
		_ = denom
		term = ((((0 - term) * x) * x) / denom)
		sum = (sum + term)
		n = (n + 1)
	}
	return sum
}

func sqrtApprox(x float64) float64 {
	var guess float64 = x
	_ = guess
	var i int = 0
	_ = i
	for i < 10 {
		guess = ((guess + (x / guess)) / 2.0)
		i = (i + 1)
	}
	return guess
}

var L float64 = 10.0

var G float64 = 9.81

var dt float64 = 0.2

var phi0 float64 = (PI / 4.0)

var omega float64 = sqrtApprox((G / L))

var t float64 = 0.0

func main() {
	for step := 0; step < 10; step++ {
		var phi float64 = (phi0 * cosApprox((omega * t)))
		_ = phi
		var pos int = int(((10.0 * sinApprox(phi)) + 0.5))
		_ = pos
		fmt.Println(fmt.Sprint(pos))
		t = (t + dt)
	}
}
