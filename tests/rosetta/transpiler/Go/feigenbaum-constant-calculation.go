//go:build ignore

// Generated by Mochi v0.10.52 on 2025-08-01 19:08:06 GMT+7
package main

import (
	"fmt"
	"strings"
)

func _substr(s string, start, end int) string {
	r := []rune(s)
	if start < 0 {
		start = 0
	}
	if end > len(r) {
		end = len(r)
	}
	if start > len(r) {
		start = len(r)
	}
	if end < start {
		end = start
	}
	return string(r[start:end])
}

func floorf(x float64) float64 {
	var y int = int(x)
	_ = y
	_ = y
	return float64(y)
}

func indexOf(s string, ch string) int {
	var i int = 0
	_ = i
	for i < len(s) {
		if _substr(s, i, (i+1)) == ch {
			return i
		}
		i = (i + 1)
	}
	return (0 - 1)
}

func fmt8(x float64) string {
	var y float64 = (floorf(((x * 100000000.0) + 0.5)) / 100000000.0)
	_ = y
	var s string = fmt.Sprint(y)
	_ = s
	var dot int = strings.Index(s, ".")
	_ = dot
	if dot == (0 - 1) {
		s = (s + ".00000000")
	} else {
		var decs int = ((len(s) - dot) - 1)
		_ = decs
		for decs < 8 {
			s = (s + "0")
			decs = (decs + 1)
		}
	}
	return s
}

func pad2(x int) string {
	var s string = fmt.Sprint(x)
	_ = s
	if len(s) < 2 {
		s = (" " + s)
	}
	return s
}

func mochiMain() {
	var maxIt int = 13
	_ = maxIt
	var maxItJ int = 10
	_ = maxItJ
	var a1 float64 = 1.0
	_ = a1
	var a2 float64 = 0.0
	_ = a2
	var d1 float64 = 3.2
	_ = d1
	fmt.Println(" i       d")
	var i int = 2
	_ = i
	for i <= maxIt {
		var a float64 = (a1 + ((a1 - a2) / d1))
		_ = a
		var j int = 1
		_ = j
		for j <= maxItJ {
			var x float64 = 0.0
			_ = x
			var y float64 = 0.0
			_ = y
			var k int = 1
			_ = k
			var limit int = pow_int(2, i)
			_ = limit
			for k <= limit {
				y = (1.0 - ((2.0 * y) * x))
				x = (a - (x * x))
				k = (k + 1)
			}
			a = (a - (x / y))
			j = (j + 1)
		}
		var d float64 = ((a1 - a2) / (a - a1))
		_ = d
		fmt.Println(((pad2(i) + "    ") + fmt8(d)))
		d1 = d
		a2 = a1
		a1 = a
		i = (i + 1)
	}
}

func pow_int(base int, exp int) int {
	var r int = 1
	_ = r
	var b int = base
	_ = b
	var e int = exp
	_ = e
	for e > 0 {
		if (e % 2) == 1 {
			r = (r * b)
		}
		b = (b * b)
		e = int((e / 2))
	}
	return r
}

func main() {
	mochiMain()
}
