//go:build ignore

// Generated by Mochi v0.10.39 on 2025-07-25 09:02:13 GMT+7
package main

import (
	"fmt"
)

func angleDiff(b1 float64, b2 float64) float64 {
	var diff float64 = (b2 - b1)
	_ = diff
	return (((((diff % 360.0) + 360.0) + 180.0) % 360.0) - 180.0)
}

var testCases [][]float64

func main() {
	testCases = [][]float64{[]float64{20.0, 45.0}, []float64{(float64(0) - 45.0), 45.0}, []float64{(float64(0) - 85.0), 90.0}, []float64{(float64(0) - 95.0), 90.0}, []float64{(float64(0) - 45.0), 125.0}, []float64{(float64(0) - 45.0), 145.0}, []float64{29.4803, (float64(0) - 88.6381)}, []float64{(float64(0) - 78.3251), (float64(0) - 159.036)}, []float64{(float64(0) - 70099.74233810938), 29840.67437876723}, []float64{(float64(0) - 165313.6666297357), 33693.9894517456}, []float64{1174.8380510598456, (float64(0) - 154146.66490124757)}, []float64{60175.77306795546, 42213.07192354373}}
	for _, tc := range testCases {
		fmt.Println(func() string {
			f := float64(angleDiff(tc[0], tc[1]))
			if f == float64(int(f)) {
				return fmt.Sprintf("%.1f", f)
			}
			return fmt.Sprint(f)
		}())
	}
}
