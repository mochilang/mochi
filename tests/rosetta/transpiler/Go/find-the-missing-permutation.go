//go:build ignore

// Generated by Mochi v0.10.52 on 2025-08-01 19:02:29 GMT+7
package main

import (
	"fmt"
)

func _substr(s string, start, end int) string {
	r := []rune(s)
	if start < 0 {
		start = 0
	}
	if end > len(r) {
		end = len(r)
	}
	if start > len(r) {
		start = len(r)
	}
	if end < start {
		end = start
	}
	return string(r[start:end])
}

var given []string

func idx(ch string) int {
	if ch == "A" {
		return 0
	}
	if ch == "B" {
		return 1
	}
	if ch == "C" {
		return 2
	}
	return 3
}

func mochiMain() {
	var res string = ""
	_ = res
	var i int = 0
	_ = i
	for i < len(given[0]) {
		var counts []int = []int{0, 0, 0, 0}
		_ = counts
		for _, p := range given {
			var ch string = _substr(p, i, (i + 1))
			_ = ch
			var j int = idx(ch)
			_ = j
			counts[j] = (counts[j] + 1)
		}
		var j int = 0
		_ = j
		for j < 4 {
			if (counts[j] % 2) == 1 {
				if j == 0 {
					res = (res + "A")
				} else {
					if j == 1 {
						res = (res + "B")
					} else {
						if j == 2 {
							res = (res + "C")
						} else {
							res = (res + "D")
						}
					}
				}
			}
			j = (j + 1)
		}
		i = (i + 1)
	}
	fmt.Println(res)
}

func main() {
	given = []string{"ABCD", "CABD", "ACDB", "DACB", "BCDA", "ACBD", "ADCB", "CDAB", "DABC", "BCAD", "CADB", "CDBA", "CBAD", "ABDC", "ADBC", "BDCA", "DCBA", "BACD", "BADC", "BDAC", "CBDA", "DBCA", "DCAB"}
	mochiMain()
}
