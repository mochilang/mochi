//go:build ignore

// Generated by Mochi v0.10.52 on 2025-08-01 19:12:40 GMT+7
package main

import (
	"fmt"
)

type If2 struct {
	Cond1 bool `json:"cond1"`
	Cond2 bool `json:"cond2"`
}

func else1(i If2, f func()) If2 {
	if i.Cond1 && (i.Cond2 == false) {
		f()
	}
	return i
}

func else2(i If2, f func()) If2 {
	if i.Cond2 && (i.Cond1 == false) {
		f()
	}
	return i
}

func else0(i If2, f func()) If2 {
	if (i.Cond1 == false) && (i.Cond2 == false) {
		f()
	}
	return i
}

func if2(cond1 bool, cond2 bool, f func()) If2 {
	if cond1 && cond2 {
		f()
	}
	return If2{
		Cond1: cond1,
		Cond2: cond2,
	}
}

var a int

var b int

var t If2

func main() {
	a = 0
	b = 1
	t = if2((a == 1), (b == 3), func() {
		fmt.Println("a = 1 and b = 3")
	})
	t = else1(t, func() {
		fmt.Println("a = 1 and b <> 3")
	})
	t = else2(t, func() {
		fmt.Println("a <> 1 and b = 3")
	})
	else0(t, func() {
		fmt.Println("a <> 1 and b <> 3")
	})
	a = 1
	b = 0
	t = if2((a == 1), (b == 3), func() {
		fmt.Println("a = 1 and b = 3")
	})
	t = else0(t, func() {
		fmt.Println("a <> 1 and b <> 3")
	})
	else1(t, func() {
		fmt.Println("a = 1 and b <> 3")
	})
}
