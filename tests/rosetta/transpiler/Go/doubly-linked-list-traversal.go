//go:build ignore

// Generated by Mochi v0.10.42 on 2025-07-27 22:22:56 GMT+7
package main

import (
	"fmt"
)

var nodes map[int]map[string]any

var head int

var tail int

func listString() string {
	if head == (0 - 1) {
		return "<nil>"
	}
	var r string = ("[" + fmt.Sprint(nodes[head]["value"]))
	var id int = nodes[head]["next"].(int)
	for id != (0 - 1) {
		r = ((r + " ") + fmt.Sprint(nodes[id]["value"]))
		id = nodes[id]["next"].(int)
	}
	r = (r + "]")
	return r
}

var out string

var id int

func main() {
	nodes = map[int]map[string]any{}
	head = (0 - 1)
	tail = (0 - 1)
	fmt.Println(listString())
	nodes[0] = map[string]any{"value": "A", "next": (0 - 1), "prev": (0 - 1)}
	head = 0
	tail = 0
	nodes[1] = map[string]any{"value": "B", "next": (0 - 1), "prev": 0}
	nodes[0]["next"] = 1
	tail = 1
	fmt.Println(listString())
	nodes[2] = map[string]any{"value": "C", "next": 1, "prev": 0}
	nodes[1]["prev"] = 2
	nodes[0]["next"] = 2
	fmt.Println(listString())
	out = "From tail:"
	id = tail
	for id != (0 - 1) {
		out = ((out + " ") + fmt.Sprint(nodes[id]["value"].(string)))
		id = nodes[id]["prev"].(int)
	}
	fmt.Println(out)
}
