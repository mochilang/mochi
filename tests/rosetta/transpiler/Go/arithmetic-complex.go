//go:build ignore

// Generated by Mochi v0.10.38 on 2025-07-24 00:03:54 GMT+7
package main

import (
	"fmt"
)

type Complex struct {
	Re float64 `json:"re"`
	Im float64 `json:"im"`
}

func add(a Complex, b Complex) Complex {
	return Complex{
		Re: (a.Re + b.Re),
		Im: (a.Im + b.Im),
	}
}

func mul(a Complex, b Complex) Complex {
	return Complex{
		Re: ((a.Re * b.Re) - (a.Im * b.Im)),
		Im: ((a.Re * b.Im) + (a.Im * b.Re)),
	}
}

func neg(a Complex) Complex {
	return Complex{
		Re: (0 - a.Re),
		Im: (0 - a.Im),
	}
}

func inv(a Complex) Complex {
	var denom float64 = ((a.Re * a.Re) + (a.Im * a.Im))
	_ = denom
	return Complex{
		Re: (a.Re / denom),
		Im: ((0 - a.Im) / denom),
	}
}

func conj(a Complex) Complex {
	return Complex{
		Re: a.Re,
		Im: (0 - a.Im),
	}
}

func cstr(a Complex) string {
	var s string = ("(" + fmt.Sprint(a.Re))
	_ = s
	if a.Im >= 0 {
		s = (((s + "+") + fmt.Sprint(a.Im)) + "i)")
	} else {
		s = ((s + fmt.Sprint(a.Im)) + "i)")
	}
	return s
}

var a Complex = Complex{
	Re: 1.0,
	Im: 1.0,
}

var b Complex = Complex{
	Re: 3.14159,
	Im: 1.25,
}

func main() {
	fmt.Println(("a:       " + cstr(a)))
	fmt.Println(("b:       " + cstr(b)))
	fmt.Println(("a + b:   " + cstr(add(a, b))))
	fmt.Println(("a * b:   " + cstr(mul(a, b))))
	fmt.Println(("-a:      " + cstr(neg(a))))
	fmt.Println(("1 / a:   " + cstr(inv(a))))
	fmt.Println(("aÌ…:       " + cstr(conj(a))))
}
