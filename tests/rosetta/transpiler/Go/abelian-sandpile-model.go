//go:build ignore

// Generated by Mochi v0.10.37 on 2025-07-23 13:10:44 GMT+7
package main

import (
	"fmt"
)

var dim int = 16

func newPile(d int) [][]int {
	var b [][]int = [][]int{}
	var y int = 0
	for y < d {
		var row []int = []int{}
		var x int = 0
		for x < d {
			row = append(row, 0)
			x = (x + 1)
		}
		b = append(b, row)
		y = (y + 1)
	}
	return b
}

func handlePile(pile [][]int, x int, y int) [][]int {
	if pile[y][x] >= 4 {
		pile[y][x] = (pile[y][x] - 4)
		if y > 0 {
			pile[(y - 1)][x] = (pile[(y - 1)][x] + 1)
			if pile[(y - 1)][x] >= 4 {
				pile = handlePile(pile, x, (y - 1))
			}
		}
		if x > 0 {
			pile[y][(x - 1)] = (pile[y][(x-1)] + 1)
			if pile[y][(x-1)] >= 4 {
				pile = handlePile(pile, (x - 1), y)
			}
		}
		if y < (dim - 1) {
			pile[(y + 1)][x] = (pile[(y + 1)][x] + 1)
			if pile[(y + 1)][x] >= 4 {
				pile = handlePile(pile, x, (y + 1))
			}
		}
		if x < (dim - 1) {
			pile[y][(x + 1)] = (pile[y][(x+1)] + 1)
			if pile[y][(x+1)] >= 4 {
				pile = handlePile(pile, (x + 1), y)
			}
		}
		pile = handlePile(pile, x, y)
	}
	return pile
}

func drawPile(pile [][]int, d int) {
	var chars []string = []string{" ", "░", "▓", "█"}
	var row int = 0
	for row < d {
		var line string = ""
		var col int = 0
		for col < d {
			var v int = pile[row][col]
			if v > 3 {
				v = 3
			}
			line = (line + chars[v])
			col = (col + 1)
		}
		fmt.Println(line)
		row = (row + 1)
	}
}

func mochiMain() {
	var pile [][]int = newPile(16)
	var hdim int = 7
	pile[hdim][hdim] = 16
	pile = handlePile(pile, hdim, hdim)
	drawPile(pile, 16)
}

func main() {
	mochiMain()
}
