//go:build ignore

// Generated by Mochi v0.10.39 on 2025-07-24 18:59:20 GMT+7
package main

import (
	"fmt"
)

func _substr(s string, start, end int) string {
	r := []rune(s)
	if start < 0 {
		start = 0
	}
	if end > len(r) {
		end = len(r)
	}
	if start > len(r) {
		start = len(r)
	}
	if end < start {
		end = start
	}
	return string(r[start:end])
}

func padLeft(s string, w int) string {
	var res string = ""
	_ = res
	var n int = (w - len(s))
	_ = n
	for n > 0 {
		res = (res + " ")
		n = (n - 1)
	}
	return (res + s)
}

var dna string

var le int

var i int

var a int

var c int

var g int

var t int

var idx int

func main() {
	dna = (((((((((("" + "CGTAAAAAATTACAACGTCCTTTGGCTATCTCTTAAACTCCTGCTAAATG") + "CTCGTGCTTTCCAATTATGTAAGCGTTCCGAGACGGGGTGGTCGATTCTG") + "AGGACAAAGGTCAAGATGGAGCGCATCGAACGCAATAAGGATCATTTGAT") + "GGGACGTTTCGTCGACAAAGTCTTGTTTCGAGAGTAACGGCTACCGTCTT") + "CGATTCTGCTTATAACACTATGTTCTTATGAAATGGATGTTCTGAGTTGG") + "TCAGTCCCAATGTGCGGGGTTTCTTTTAGTACGTCGGGAGTGGTATTATA") + "TTTAATTTTTCTATATAGCGATCTGTATTTAAGCAATTCATTTAGGTTAT") + "CGCCGCGATGCTCGGTTCGGACCGCCAAGCATCTGGCTCCACTGCTAGTG") + "TCCTAAATTTGAATGGCAAACACAAATAAGATTTAGCAATTCGTGTAGAC") + "GACCGGGGACTTGCATGATGGGAGCAGCTTTGTTAAACTACGAACGTAAT")
	fmt.Println("SEQUENCE:")
	le = len(dna)
	i = 0
	for i < le {
		var k int = (i + 50)
		_ = k
		if k > le {
			k = le
		}
		fmt.Println(((padLeft(fmt.Sprint(i), 5) + ": ") + string([]rune(dna)[i:k])))
		i = (i + 50)
	}
	a = 0
	c = 0
	g = 0
	t = 0
	idx = 0
	for idx < le {
		var ch string = _substr(dna, idx, (idx + 1))
		_ = ch
		if ch == "A" {
			a = (a + 1)
		} else {
			if ch == "C" {
				c = (c + 1)
			} else {
				if ch == "G" {
					g = (g + 1)
				} else {
					if ch == "T" {
						t = (t + 1)
					}
				}
			}
		}
		idx = (idx + 1)
	}
	fmt.Println("")
	fmt.Println("BASE COUNT:")
	fmt.Println(("    A: " + padLeft(fmt.Sprint(a), 3)))
	fmt.Println(("    C: " + padLeft(fmt.Sprint(c), 3)))
	fmt.Println(("    G: " + padLeft(fmt.Sprint(g), 3)))
	fmt.Println(("    T: " + padLeft(fmt.Sprint(t), 3)))
	fmt.Println("    ------")
	fmt.Println(("    Î£: " + fmt.Sprint(le)))
	fmt.Println("    ======")
}
