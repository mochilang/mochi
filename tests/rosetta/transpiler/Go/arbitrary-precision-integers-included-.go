//go:build ignore

// Generated by Mochi v0.10.38 on 2025-07-23 23:44:42 GMT+7
package main

import (
	"fmt"
	"math/big"
)

func _substr(s string, start, end int) string {
	r := []rune(s)
	if start < 0 {
		start = 0
	}
	if end > len(r) {
		end = len(r)
	}
	if start > len(r) {
		start = len(r)
	}
	if end < start {
		end = start
	}
	return string(r[start:end])
}

func pow_int(base int, exp int) int {
	var result int = 1
	_ = result
	var b int = base
	_ = b
	var e int = exp
	_ = e
	for e > 0 {
		if (e % 2) == 1 {
			result = (result * b)
		}
		b = (b * b)
		e = int((e / 2))
	}
	return result
}

func pow_big(base *big.Int, exp int) *big.Int {
	var result *big.Int = big.NewInt(int64(1))
	_ = result
	var b *big.Int = base
	_ = b
	var e int = exp
	_ = e
	for e > 0 {
		if (e % 2) == 1 {
			result = new(big.Int).Mul(result, b)
		}
		b = new(big.Int).Mul(b, b)
		e = int((e / 2))
	}
	return result
}

var e1 int = pow_int(3, 2)

var e2 int = pow_int(4, e1)

var base *big.Int = big.NewInt(int64(5))

var x *big.Int = pow_big(base, e2)

var s string = fmt.Sprint(x)

func main() {
	fmt.Println("5^(4^(3^2)) has", len(s), "digits:", _substr(s, 0, 20), "...", _substr(s, (len(s)-20), len(s)))
}
