//go:build ignore

// Generated by Mochi v0.10.39 on 2025-07-25 09:00:28 GMT+7
package main

import (
	"bufio"
	"fmt"
	"os"
	"strconv"
	"time"
)

var seededNow bool
var nowSeed int64

func init() {
	if s := os.Getenv("MOCHI_NOW_SEED"); s != "" {
		if v, err := strconv.ParseInt(s, 10, 64); err == nil {
			nowSeed = v
			seededNow = true
		}
	}
}
func _now() int {
	if seededNow {
		nowSeed = (nowSeed*1664525 + 1013904223) % 2147483647
		return int(nowSeed)
	}
	return int(time.Now().UnixNano())
}

var _scanner = bufio.NewScanner(os.Stdin)

func _input() string {
	if !_scanner.Scan() {
		return ""
	}
	return _scanner.Text()
}

func parseIntStr(str string) int {
	var i int = 0
	_ = i
	var neg bool = false
	_ = neg
	if (len(str) > 0) && (string([]rune(str)[0:1]) == "-") {
		neg = true
		i = 1
	}
	var n int = 0
	_ = n
	var digits map[string]int = map[string]int{"0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9}
	_ = digits
	for i < len(str) {
		n = ((n * 10) + digits[string([]rune(str)[i:(i+1)])])
		i = (i + 1)
	}
	if neg {
		n = (0 - n)
	}
	return n
}

func mochiMain() {
	var total int = 0
	_ = total
	var computer bool = ((_now() % 2) == 0)
	_ = computer
	fmt.Println("Enter q to quit at any time\n")
	if computer {
		fmt.Println("The computer will choose first")
	} else {
		fmt.Println("You will choose first")
	}
	fmt.Println("\n\nRunning total is now 0\n\n")
	var round int = 1
	_ = round
	var done bool = false
	_ = done
	for !done {
		fmt.Println((("ROUND " + fmt.Sprint(round)) + ":\n\n"))
		var i int = 0
		_ = i
		for (i < 2) && !done {
			if computer {
				var choice int = 0
				_ = choice
				if total < 18 {
					choice = ((_now() % 3) + 1)
				} else {
					choice = (21 - total)
				}
				total = (total + choice)
				fmt.Println(("The computer chooses " + fmt.Sprint(choice)))
				fmt.Println(("Running total is now " + fmt.Sprint(total)))
				if total == 21 {
					fmt.Println("\nSo, commiserations, the computer has won!")
					done = true
				}
			} else {
				for {
					fmt.Println("Your choice 1 to 3 : ")
					var line string = _input()
					_ = line
					if (line == "q") || (line == "Q") {
						fmt.Println("OK, quitting the game")
						done = true
						break
					}
					var num int = parseIntStr(line)
					_ = num
					if (num < 1) || (num > 3) {
						if (total + num) > 21 {
							fmt.Println("Too big, try again")
						} else {
							fmt.Println("Out of range, try again")
						}
						continue
					}
					if (total + num) > 21 {
						fmt.Println("Too big, try again")
						continue
					}
					total = (total + num)
					fmt.Println(("Running total is now " + fmt.Sprint(total)))
					break
				}
				if total == 21 {
					fmt.Println("\nSo, congratulations, you've won!")
					done = true
				}
			}
			fmt.Println("\n")
			computer = !computer
			i = (i + 1)
		}
		round = (round + 1)
	}
}

func main() {
	mochiMain()
}
