//go:build ignore

// Generated by Mochi v0.10.38 on 2025-07-23 23:12:13 GMT+7
package main

import (
	"bufio"
	"fmt"
	"os"
)

var _scanner = bufio.NewScanner(os.Stdin)

func _input() string {
	if !_scanner.Scan() {
		return ""
	}
	return _scanner.Text()
}

type SomeStruct struct {
	RuntimeFields map[string]string `json:"runtimeFields"`
}

func mochiMain() {
	var ss SomeStruct = SomeStruct{
		RuntimeFields: map[string]string{},
	}
	_ = ss
	fmt.Println("Create two fields at runtime: \n")
	var i int = 1
	_ = i
	for i <= 2 {
		fmt.Println((("  Field #" + fmt.Sprint(i)) + ":\n"))
		fmt.Println("       Enter name  : ")
		var name string = _input()
		_ = name
		fmt.Println("       Enter value : ")
		var value string = _input()
		_ = value
		var fields map[string]string = ss["runtimeFields"]
		_ = fields
		fields[name] = value
		ss.RuntimeFields = fields
		fmt.Println("\n")
		i = (i + 1)
	}
	for true {
		fmt.Println("Which field do you want to inspect ? ")
		var name string = _input()
		_ = name
		if func() bool { _, ok := ss["runtimeFields"][name]; return ok }() {
			var value string = string([]rune(ss["runtimeFields"])[name])
			_ = value
			fmt.Println((("Its value is '" + value) + "'"))
			return
		} else {
			fmt.Println("There is no field of that name, try again\n")
		}
	}
}

func main() {
	mochiMain()
}
