//go:build ignore

// Generated by Mochi v0.10.52 on 2025-08-01 19:08:58 GMT+7
package main

import (
	"fmt"
)

func printFactors(n int) {
	if n < 1 {
		fmt.Println((("\nFactors of " + fmt.Sprint(n)) + " not computed"))
		return
	}
	fmt.Println((("\nFactors of " + fmt.Sprint(n)) + ": "))
	var fs []int = []int{1}
	_ = fs
	var apf func(int, int)
	_ = apf
	apf = func(p int, e int) {
		var orig int = len(fs)
		_ = orig
		var pp int = p
		_ = pp
		var i int = 0
		_ = i
		for i < e {
			var j int = 0
			_ = j
			for j < orig {
				fs = append(fs, (fs[j] * pp))
				j = (j + 1)
			}
			i = (i + 1)
			pp = (pp * p)
		}
	}
	var e int = 0
	_ = e
	var m int = n
	_ = m
	for (m % 2) == 0 {
		m = int((m / 2))
		e = (e + 1)
	}
	apf(2, e)
	var d int = 3
	_ = d
	for m > 1 {
		if (d * d) > m {
			d = m
		}
		e = 0
		for (m % d) == 0 {
			m = int((m / d))
			e = (e + 1)
		}
		if e > 0 {
			apf(d, e)
		}
		d = (d + 2)
	}
	fmt.Println(fmt.Sprint(fs))
	fmt.Println(("Number of factors = " + fmt.Sprint(len(fs))))
}

func main() {
	printFactors((0 - 1))
	printFactors(0)
	printFactors(1)
	printFactors(2)
	printFactors(3)
	printFactors(53)
	printFactors(45)
	printFactors(64)
	printFactors(600851475143)
	printFactors(999999999999999989)
}
