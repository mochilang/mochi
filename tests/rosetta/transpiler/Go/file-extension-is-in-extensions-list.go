//go:build ignore

// Generated by Mochi v0.10.52 on 2025-08-01 19:06:30 GMT+7
package main

import (
	"fmt"
	"strings"
)

func _substr(s string, start, end int) string {
	r := []rune(s)
	if start < 0 {
		start = 0
	}
	if end > len(r) {
		end = len(r)
	}
	if start > len(r) {
		start = len(r)
	}
	if end < start {
		end = start
	}
	return string(r[start:end])
}

func endsWith(s string, suf string) bool {
	if len(s) < len(suf) {
		return false
	}
	return (_substr(s, (len(s)-len(suf)), len(s)) == suf)
}

func lastIndexOf(s string, sub string) int {
	var idx int = (0 - 1)
	_ = idx
	var i int = 0
	_ = i
	for i <= (len(s) - len(sub)) {
		if _substr(s, i, (i+len(sub))) == sub {
			idx = i
		}
		i = (i + 1)
	}
	return idx
}

var extensions []string

func fileExtInList(filename string) []any {
	var fl string = strings.ToLower(filename)
	_ = fl
	for _, ext := range extensions {
		var ext2 string = ("." + strings.ToLower(ext))
		_ = ext2
		if endsWith(fl, ext2) {
			return []any{true, ext}
		}
	}
	var idx int = lastIndexOf(filename, ".")
	_ = idx
	if idx != (0 - 1) {
		var t string = _substr(filename, (idx + 1), len(filename))
		_ = t
		if t != "" {
			return []any{false, t}
		}
		return []any{false, "<empty>"}
	}
	return []any{false, "<none>"}
}

func pad(s string, w int) string {
	var t string = s
	_ = t
	for len(t) < w {
		t = (t + " ")
	}
	return t
}

func mochiMain() {
	fmt.Println("The listed extensions are:")
	fmt.Println(strings.Join(extensions, " "))
	var tests []string = []string{"MyData.a##", "MyData.tar.Gz", "MyData.gzip", "MyData.7z.backup", "MyData...", "MyData", "MyData_v1.0.tar.bz2", "MyData_v1.0.bz2"}
	_ = tests
	for _, t := range tests {
		var res []any = fileExtInList(t)
		_ = res
		var ok bool = res[0].(bool)
		_ = ok
		var ext string = res[1].(string)
		_ = ext
		fmt.Println((((((pad(t, 20) + " => ") + fmt.Sprint(ok)) + "  (extension = ") + ext) + ")"))
	}
}

func main() {
	extensions = []string{"zip", "rar", "7z", "gz", "archive", "A##", "tar.bz2"}
	mochiMain()
}
