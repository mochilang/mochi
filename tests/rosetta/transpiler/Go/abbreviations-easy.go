//go:build ignore

// Generated by Mochi v0.10.40 on 2025-07-25 10:45:20 GMT+7
package main

import (
	"fmt"
	"strings"
)

func _substr(s string, start, end int) string {
	r := []rune(s)
	if start < 0 {
		start = 0
	}
	if end > len(r) {
		end = len(r)
	}
	if start > len(r) {
		start = len(r)
	}
	if end < start {
		end = start
	}
	return string(r[start:end])
}

func fields(s string) []string {
	var words []string = []string{}
	_ = words
	var cur string = ""
	_ = cur
	var i int = 0
	_ = i
	for i < len(s) {
		var ch string = _substr(s, i, (i + 1))
		_ = ch
		if ((ch == " ") || (ch == "\n")) || (ch == "\t") {
			if len(cur) > 0 {
				words = append(words, cur)
				cur = ""
			}
		} else {
			cur = (cur + ch)
		}
		i = (i + 1)
	}
	if len(cur) > 0 {
		words = append(words, cur)
	}
	return words
}

func padRight(s string, width int) string {
	var out string = s
	_ = out
	var i int = len(s)
	_ = i
	for i < width {
		out = (out + " ")
		i = (i + 1)
	}
	return out
}

func join(xs []string, sep string) string {
	var res string = ""
	_ = res
	var i int = 0
	_ = i
	for i < len(xs) {
		if i > 0 {
			res = (res + sep)
		}
		res = (res + xs[i])
		i = (i + 1)
	}
	return res
}

func validate(commands []string, words []string, mins []int) []string {
	var results []string = []string{}
	_ = results
	if len(words) == 0 {
		return results
	}
	var wi int = 0
	_ = wi
	for wi < len(words) {
		var w string = words[wi]
		_ = w
		var found bool = false
		_ = found
		var wlen int = len(w)
		_ = wlen
		var ci int = 0
		_ = ci
		for ci < len(commands) {
			var cmd string = commands[ci]
			_ = cmd
			if ((mins[ci] != 0) && (wlen >= mins[ci])) && (wlen <= len(cmd)) {
				var c string = strings.ToUpper(cmd)
				_ = c
				var ww string = strings.ToUpper(w)
				_ = ww
				if _substr(c, 0, wlen) == ww {
					results = append(results, c)
					found = true
					break
				}
			}
			ci = (ci + 1)
		}
		if !found {
			results = append(results, "*error*")
		}
		wi = (wi + 1)
	}
	return results
}

func mochiMain() {
	var table string = (((((("Add ALTer  BAckup Bottom  CAppend Change SCHANGE  CInsert CLAst COMPress Copy " + "COUnt COVerlay CURsor DELete CDelete Down DUPlicate Xedit EXPand EXTract Find ") + "NFind NFINDUp NFUp CFind FINdup FUp FOrward GET Help HEXType Input POWerinput ") + " Join SPlit SPLTJOIN  LOAD  Locate CLocate  LOWercase UPPercase  LPrefix MACRO ") + "MErge MODify MOve MSG Next Overlay PARSE PREServe PURge PUT PUTD  Query  QUIT ") + "READ  RECover REFRESH RENum REPeat  Replace CReplace  RESet  RESTore  RGTLEFT ") + "RIght LEft  SAVE  SET SHift SI  SORT  SOS  STAck STATus  TOP TRAnsfer TypeUp ")
	_ = table
	var commands []string = fields(table)
	_ = commands
	var mins []int = []int{}
	_ = mins
	var i int = 0
	_ = i
	for i < len(commands) {
		var count int = 0
		_ = count
		var j int = 0
		_ = j
		var cmd string = commands[i]
		_ = cmd
		for j < len(cmd) {
			var ch string = _substr(cmd, j, (j + 1))
			_ = ch
			if (ch >= "A") && (ch <= "Z") {
				count = (count + 1)
			}
			j = (j + 1)
		}
		mins = append(mins, count)
		i = (i + 1)
	}
	var sentence string = "riG   rePEAT copies  put mo   rest    types   fup.    6       poweRin"
	_ = sentence
	var words []string = fields(sentence)
	_ = words
	var results []string = validate(commands, words, mins)
	_ = results
	var out1 string = "user words:  "
	_ = out1
	var k int = 0
	_ = k
	for k < len(words) {
		out1 = ((out1 + padRight(words[k], len(results[k]))) + " ")
		k = (k + 1)
	}
	fmt.Println(out1)
	fmt.Println(("full words:  " + join(results, " ")))
}

func main() {
	mochiMain()
}
