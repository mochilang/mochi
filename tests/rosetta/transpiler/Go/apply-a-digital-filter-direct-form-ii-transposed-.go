//go:build ignore

// Generated by Mochi v0.10.38 on 2025-07-23 23:44:41 GMT+7
package main

import (
	"fmt"
)

func applyFilter(input []float64, a []float64, b []float64) []float64 {
	var out []float64 = []float64{}
	_ = out
	var scale float64 = (1.0 / a[0])
	_ = scale
	var i int = 0
	_ = i
	for i < len(input) {
		var tmp float64 = 0.0
		_ = tmp
		var j int = 0
		_ = j
		for (j <= i) && (j < len(b)) {
			tmp = (tmp + (b[j] * input[(i-j)]))
			j = (j + 1)
		}
		j = 0
		for (j < i) && ((j + 1) < len(a)) {
			tmp = (tmp - (a[(j+1)] * out[((i-j)-1)]))
			j = (j + 1)
		}
		out = append(out, (tmp * scale))
		i = (i + 1)
	}
	return out
}

var a []float64 = []float64{1.0, (0 - 2.7756e-16), 0.33333333, (0 - 1.85e-17)}

var b []float64 = []float64{0.16666667, 0.5, 0.5, 0.16666667}

var sig []float64 = []float64{(0 - 0.917843918645), 0.141984778794, 1.20536903482, 0.190286794412, (0 - 0.662370894973), (0 - 1.00700480494), (0 - 0.404707073677), 0.800482325044, 0.743500089861, 1.01090520172, 0.741527555207, 0.277841675195, 0.400833448236, (0 - 0.2085993586), (0 - 0.172842103641), (0 - 0.134316096293), 0.0259303398477, 0.490105989562, 0.549391221511, 0.9047198589}

var res []float64 = applyFilter(sig, a, b)

var k int = 0

func main() {
	for k < len(res) {
		fmt.Println(func() string {
			f := float64(res[k])
			if f == float64(int(f)) {
				return fmt.Sprintf("%.1f", f)
			}
			return fmt.Sprint(f)
		}())
		k = (k + 1)
	}
}
