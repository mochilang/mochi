//go:build ignore

// Generated by Mochi v0.10.38 on 2025-07-24 00:35:42 GMT+7
package main

import (
	"fmt"
	"sort"
)

func removeKey(m map[string]int, k string) map[string]int {
	var out map[string]int = map[string]int{}
	_ = out
	for _, key := range func() []string {
		keys := make([]string, 0, len(m))
		for k := range m {
			keys = append(keys, k)
		}
		sort.Slice(keys, func(i, j int) bool { return fmt.Sprint(keys[i]) < fmt.Sprint(keys[j]) })
		return keys
	}() {
		if key != k {
			out[key] = m[key]
		}
	}
	return out
}

func mochiMain() {
	var x map[string]int = nil
	_ = x
	x = map[string]int{}
	x["foo"] = 3
	var y1 int = x["bar"]
	_ = y1
	var ok bool = func() bool { _, ok := x["bar"]; return ok }()
	_ = ok
	fmt.Println(y1)
	fmt.Println(ok)
	x = removeKey(x, "foo")
	x = map[string]int{"foo": 2, "bar": 42, "baz": (0 - 1)}
	fmt.Println(x["foo"], x["bar"], x["baz"])
}

func main() {
	mochiMain()
}
