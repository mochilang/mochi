;; Generated on 2025-07-25 12:33 +0700
(import (only (scheme base) call/cc when list-ref list-set! list))
(import (scheme time))
(import (chibi string))
(import (only (scheme char) string-upcase string-downcase))
(import (srfi 69))
(define (to-str x)
  (cond ((pair? x)
         (string-append "[" (string-join (map to-str x) ", ") "]"))
        ((hash-table? x)
         (let* ((ks (hash-table-keys x))
                (pairs (map (lambda (k)
                              (string-append (to-str k) ":" (to-str (hash-table-ref x k))))
                            ks)))
           (string-append "{" (string-join pairs ", ") "}")))
        ((null? x) "")
        ((string? x) x)
        ((boolean? x) (if x "1" "0"))
        (else (number->string x))))
(define (upper s) (string-upcase s))
(define (lower s) (string-downcase s))
(define (fmod a b) (- a (* (floor (/ a b)) b)))
(define (merge base update)
 (call/cc (lambda (ret1)
 (let ((result (alist->hash-table (list)
)
)
)
 (begin (call/cc (lambda (break3)
 (letrec ((loop2 (lambda (xs)
 (if (null? xs)
 (quote ()
)
 (begin (let ((k (car xs)
)
)
 (begin (hash-table-set! result k (hash-table-ref/default base k (quote ()
)
)
)
)
)
 (loop2 (cdr xs)
)
)
)
)
)
)
 (loop2 (hash-table-keys base)
)
)
)
)
 (call/cc (lambda (break5)
 (letrec ((loop4 (lambda (xs)
 (if (null? xs)
 (quote ()
)
 (begin (let ((k (car xs)
)
)
 (begin (hash-table-set! result k (hash-table-ref/default update k (quote ()
)
)
)
)
)
 (loop4 (cdr xs)
)
)
)
)
)
)
 (loop4 (hash-table-keys update)
)
)
)
)
 (ret1 result)
)
)
)
)
)
(define (main)
 (call/cc (lambda (ret6)
 (let ((base (alist->hash-table (list (cons "name" "Rocket Skates")
 (cons "price" 12.75)
 (cons "color" "yellow")
)
)
)
)
 (begin (let ((update (alist->hash-table (list (cons "price" 15.25)
 (cons "color" "red")
 (cons "year" 1974)
)
)
)
)
 (begin (let ((result (merge base update)
)
)
 (begin (display (to-str result)
)
 (newline)
)
)
)
)
)
)
)
)
)
(main)
