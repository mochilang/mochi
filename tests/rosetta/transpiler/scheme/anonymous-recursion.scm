;; Generated on 2025-07-25 01:31 +0700
(import (only (scheme base) call/cc when list-ref list-set! list))
(import (scheme time))
(import (chibi string))
(import (only (scheme char) string-upcase string-downcase))
(define (to-str x)
  (cond ((pair? x)
         (string-append "[" (string-join (map to-str x) ", ") "]"))
        ((string? x) x)
        ((boolean? x) (if x "1" "0"))
        (else (number->string x))))
(define (upper s) (string-upcase s))
(define (lower s) (string-downcase s))
(define (fmod a b) (- a (* (floor (/ a b)) b)))
(define (fib n)
 (call/cc (lambda (ret1)
 (begin (if (< n 2)
 (begin (ret1 n)
)
 (quote nil)
)
 (ret1 (+ (fib (- n 1)
)
 (fib (- n 2)
)
)
)
)
)
)
)
(define (main)
 (call/cc (lambda (ret2)
 (let ((i (- 1)
)
)
 (begin (call/cc (lambda (break4)
 (letrec ((loop3 (lambda ()
 (if (<= i 10)
 (begin (if (< i 0)
 (begin (display (to-str (string-append (string-append "fib(" (to-str i)
)
 ")
 returned error: negative n is forbidden")
)
)
 (newline)
)
 (begin (display (to-str (string-append (string-append (string-append "fib(" (to-str i)
)
 ")
 = ")
 (to-str (fib i)
)
)
)
)
 (newline)
)
)
 (set! i (+ i 1)
)
 (loop3)
)
 (quote nil)
)
)
)
)
 (loop3)
)
)
)
)
)
)
)
)
(main)
