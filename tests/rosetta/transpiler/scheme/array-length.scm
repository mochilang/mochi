;; Generated on 2025-07-25 12:33 +0700
(import (only (scheme base) call/cc when list-ref list-set! list))
(import (scheme time))
(import (chibi string))
(import (only (scheme char) string-upcase string-downcase))
(define (to-str x)
  (cond ((pair? x)
         (string-append "[" (string-join (map to-str x) ", ") "]"))
        ((string? x) x)
        ((boolean? x) (if x "1" "0"))
        (else (number->string x))))
(define (upper s) (string-upcase s))
(define (lower s) (string-downcase s))
(define (fmod a b) (- a (* (floor (/ a b)) b)))
(define (main)
 (call/cc (lambda (ret1)
 (let ((arr (list "apple" "orange" "pear")
)
)
 (begin (display (to-str (string-append (string-append (string-append (string-append "Length of " (to-str arr)
)
 " is ")
 (to-str (cond ((string? arr)
 (string-length arr)
)
 ((hash-table? arr)
 (hash-table-size arr)
)
 (else (length arr)
)
)
)
)
 ".")
)
)
 (newline)
)
)
)
)
)
(main)
