;; Generated on 2025-07-23 13:04 +0700
(import (only (scheme base) call/cc list-ref list-set! list))
(import (scheme time))
(define (to-str x)
  (cond ((pair? x)
         (string-append "[" (string-join (map to-str x) ", ") "]"))
        ((string? x) x)
        ((boolean? x) (if x "1" "0"))
        (else (number->string x))))
(define (bottles n)
 (call/cc (lambda (ret1)
 (begin (if (= n 0)
 (begin (ret1 "No more bottles")
)
 (quote nil)
)
 (if (= n 1)
 (begin (ret1 "1 bottle")
)
 (quote nil)
)
 (ret1 (string-append (number->string n)
 " bottles")
)
)
)
)
)
(define (main)
 (call/cc (lambda (ret2)
 (let ((i 99)
)
 (begin (call/cc (lambda (break4)
 (letrec ((loop3 (lambda ()
 (if (> i 0)
 (begin (display (to-str (string-append (bottles i)
 " of beer on the wall")
)
)
 (newline)
 (display (to-str (string-append (bottles i)
 " of beer")
)
)
 (newline)
 (display (to-str "Take one down, pass it around")
)
 (newline)
 (display (to-str (string-append (bottles (- i 1)
)
 " of beer on the wall")
)
)
 (newline)
 (set! i (- i 1)
)
 (loop3)
)
 (quote nil)
)
)
)
)
 (loop3)
)
)
)
)
)
)
)
)
(main)
