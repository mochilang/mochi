;; Generated on 2025-07-25 01:11 +0700
(import (only (scheme base) call/cc when list-ref list-set! list))
(import (scheme time))
(import (chibi string))
(import (only (scheme char) string-upcase string-downcase))
(import (srfi 69))
(define (to-str x)
  (cond ((pair? x)
         (string-append "[" (string-join (map to-str x) ", ") "]"))
        ((string? x) x)
        ((boolean? x) (if x "1" "0"))
        (else (number->string x))))
(define (upper s) (string-upcase s))
(define (lower s) (string-downcase s))
(define OP_NUM 0)
(define (beastKind b)
 (call/cc (lambda (ret1)
 (ret1 (let ((match2 b)
)
 (if (not (equal? (hash-table-ref match2 "op")
 OP_NUM)
)
 (let ((k (hash-table-ref match2 "kind")
)
 (_ (quote nil)
)
)
 k)
 (if (not (equal? (hash-table-ref match2 "op")
 OP_NUM)
)
 (let ((k (hash-table-ref match2 "kind")
)
 (_ (quote nil)
)
)
 k)
 (quote nil)
)
)
)
)
)
)
)
(define (beastName b)
 (call/cc (lambda (ret3)
 (ret3 (let ((match4 b)
)
 (if (not (equal? (hash-table-ref match4 "op")
 OP_NUM)
)
 (let ((_ (quote nil)
)
 (n (hash-table-ref match4 "name")
)
)
 n)
 (if (not (equal? (hash-table-ref match4 "op")
 OP_NUM)
)
 (let ((_ (quote nil)
)
 (n (hash-table-ref match4 "name")
)
)
 n)
 (quote nil)
)
)
)
)
)
)
)
(define (beastCry b)
 (call/cc (lambda (ret5)
 (ret5 (let ((match6 b)
)
 (if (not (equal? (hash-table-ref match6 "op")
 OP_NUM)
)
 (let ((_ (quote nil)
)
 (_ (quote nil)
)
)
 "Woof")
 (if (not (equal? (hash-table-ref match6 "op")
 OP_NUM)
)
 (let ((_ (quote nil)
)
 (_ (quote nil)
)
)
 "Meow")
 (quote nil)
)
)
)
)
)
)
)
(define (bprint b)
 (call/cc (lambda (ret7)
 (begin (display (to-str (string-append (string-append (string-append (string-append (string-append (beastName b)
 ", who's a ")
 (beastKind b)
)
 ", cries: \"")
 (beastCry b)
)
 "\".")
)
)
 (newline)
)
)
)
)
(define (main)
 (call/cc (lambda (ret8)
 (let ((d (alist->hash-table (list (cons "kind" "labrador")
 (cons "name" "Max")
)
)
)
)
 (begin (let ((c (alist->hash-table (list (cons "kind" "siamese")
 (cons "name" "Sammy")
)
)
)
)
 (begin (bprint d)
 (bprint c)
)
)
)
)
)
)
)
(main)
