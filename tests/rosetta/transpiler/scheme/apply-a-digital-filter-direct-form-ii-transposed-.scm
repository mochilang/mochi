;; Generated on 2025-07-25 01:31 +0700
(import (only (scheme base) call/cc when list-ref list-set! list))
(import (scheme time))
(import (chibi string))
(import (only (scheme char) string-upcase string-downcase))
(define (to-str x)
  (cond ((pair? x)
         (string-append "[" (string-join (map to-str x) ", ") "]"))
        ((string? x) x)
        ((boolean? x) (if x "1" "0"))
        (else (number->string x))))
(define (upper s) (string-upcase s))
(define (lower s) (string-downcase s))
(define (fmod a b) (- a (* (floor (/ a b)) b)))
(define (applyFilter input a b)
 (call/cc (lambda (ret1)
 (let ((out (list)
)
)
 (begin (let ((scale (/ 1.0 (list-ref a 0)
)
)
)
 (begin (let ((i 0)
)
 (begin (call/cc (lambda (break3)
 (letrec ((loop2 (lambda ()
 (if (< i (cond ((string? input)
 (string-length input)
)
 ((hash-table? input)
 (hash-table-size input)
)
 (else (length input)
)
)
)
 (begin (let ((tmp 0.0)
)
 (begin (let ((j 0)
)
 (begin (call/cc (lambda (break5)
 (letrec ((loop4 (lambda ()
 (if (and (<= j i)
 (< j (cond ((string? b)
 (string-length b)
)
 ((hash-table? b)
 (hash-table-size b)
)
 (else (length b)
)
)
)
)
 (begin (set! tmp (+ tmp (* (list-ref b j)
 (list-ref input (- i j)
)
)
)
)
 (set! j (+ j 1)
)
 (loop4)
)
 (quote nil)
)
)
)
)
 (loop4)
)
)
)
 (set! j 0)
 (call/cc (lambda (break7)
 (letrec ((loop6 (lambda ()
 (if (and (< j i)
 (< (+ j 1)
 (cond ((string? a)
 (string-length a)
)
 ((hash-table? a)
 (hash-table-size a)
)
 (else (length a)
)
)
)
)
 (begin (set! tmp (- tmp (* (list-ref a (+ j 1)
)
 (list-ref out (- (- i j)
 1)
)
)
)
)
 (set! j (+ j 1)
)
 (loop6)
)
 (quote nil)
)
)
)
)
 (loop6)
)
)
)
 (set! out (append out (list (* tmp scale)
)
)
)
 (set! i (+ i 1)
)
)
)
)
)
 (loop2)
)
 (quote nil)
)
)
)
)
 (loop2)
)
)
)
 (ret1 out)
)
)
)
)
)
)
)
)
)
(define a (list 1.0 (- 2.7756e-16)
 0.33333333 (- 1.85e-17)
)
)
(define b (list 0.16666667 0.5 0.5 0.16666667)
)
(define sig (list (- 0.917843918645)
 0.141984778794 1.20536903482 0.190286794412 (- 0.662370894973)
 (- 1.00700480494)
 (- 0.404707073677)
 0.800482325044 0.743500089861 1.01090520172 0.741527555207 0.277841675195 0.400833448236 (- 0.2085993586)
 (- 0.172842103641)
 (- 0.134316096293)
 0.0259303398477 0.490105989562 0.549391221511 0.9047198589)
)
(define res (applyFilter sig a b)
)
(define k 0)
(call/cc (lambda (break9)
 (letrec ((loop8 (lambda ()
 (if (< k (cond ((string? res)
 (string-length res)
)
 ((hash-table? res)
 (hash-table-size res)
)
 (else (length res)
)
)
)
 (begin (display (to-str (list-ref res k)
)
)
 (newline)
 (set! k (+ k 1)
)
 (loop8)
)
 (quote nil)
)
)
)
)
 (loop8)
)
)
)
