;; Generated on 2025-07-25 08:58 +0700
(import (only (scheme base) call/cc when list-ref list-set! list))
(import (scheme time))
(import (chibi string))
(import (only (scheme char) string-upcase string-downcase))
(import (chibi time) (srfi 98))
(define _now_seeded #f)
(define _now_seed 0)
(define (now)
  (when (not _now_seeded)
    (let ((s (get-environment-variable "MOCHI_NOW_SEED")))
      (when (and s (string->number s))
        (set! _now_seed (string->number s))
        (set! _now_seeded #t))))
  (if _now_seeded
      (begin
        (set! _now_seed (modulo (+ (* _now_seed 1664525) 1013904223) 2147483647))
        _now_seed)
      (* (current-seconds) 1000000000)))(import (chibi time))
(define (_mem) (* 1024 (resource-usage-max-rss (get-resource-usage resource-usage/self))))
(import (chibi json))
(define (to-str x)
  (cond ((pair? x)
         (string-append "[" (string-join (map to-str x) ", ") "]"))
        ((string? x) x)
        ((boolean? x) (if x "1" "0"))
        (else (number->string x))))
(define (upper s) (string-upcase s))
(define (lower s) (string-downcase s))
(define (fmod a b) (- a (* (floor (/ a b)) b)))
(let ((start4 (now)
)
)
 (begin (define (accumulator sum)
 (call/cc (lambda (ret1)
 (let ((store (list sum)
)
)
 (begin (define (add nv)
 (call/cc (lambda (ret2)
 (begin (list-set! store 0 (+ (list-ref store 0)
 nv)
)
 (ret2 (list-ref store 0)
)
)
)
)
)
 (ret1 "add")
)
)
)
)
)
 (define (main)
 (call/cc (lambda (ret3)
 (let ((x (accumulator 1)
)
)
 (begin (x 5)
 (accumulator 3)
 (display (to-str (to-str (x 2.3)
)
)
)
 (newline)
)
)
)
)
)
 (main)
 (let ((end5 (now)
)
)
 (let ((dur6 (quotient (- end5 start4)
 1000)
)
)
 (begin (display (string-append "{\n  \"duration_us\": " (number->string dur6)
 ",\n  \"memory_bytes\": " (number->string (_mem)
)
 ",\n  \"name\": \"main\"\n}")
)
 (newline)
)
)
)
)
)
