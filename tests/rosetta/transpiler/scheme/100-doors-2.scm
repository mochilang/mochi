;; Generated on 2025-07-22 21:48 +0700
(import (only (scheme base) call/cc list-ref list-set! list))
(import (scheme time))
(define (to-str x)
  (cond ((pair? x)
         (string-append "[" (string-join (map to-str x) ", ") "]"))
        ((string? x) x)
        ((boolean? x) (if x "1" "0"))
        (else (number->string x))))
(define door 1)
(define incrementer 0)
(call/cc (lambda (break2)
 (letrec ((loop1 (lambda (current)
 (if (< current 101)
 (begin (begin (let ((line (string-append (string-append "Door " (number->string current)
)
 " ")
)
)
 (begin (if (= current door)
 (begin (set! line (string-append line "Open")
)
 (set! incrementer (+ incrementer 1)
)
 (set! door (+ (+ door (* 2 incrementer)
)
 1)
)
)
 (begin (set! line (string-append line "Closed")
)
)
)
 (display (to-str line)
)
 (newline)
)
)
)
 (loop1 (+ current 1)
)
)
 (quote nil)
)
)
)
)
 (loop1 1)
)
)
)
