;; Generated on 2025-07-25 01:31 +0700
(import (only (scheme base) call/cc when list-ref list-set! list))
(import (scheme time))
(import (chibi string))
(import (only (scheme char) string-upcase string-downcase))
(define (to-str x)
  (cond ((pair? x)
         (string-append "[" (string-join (map to-str x) ", ") "]"))
        ((string? x) x)
        ((boolean? x) (if x "1" "0"))
        (else (number->string x))))
(define (upper s) (string-upcase s))
(define (lower s) (string-downcase s))
(define (fmod a b) (- a (* (floor (/ a b)) b)))
(define (fib n)
 (call/cc (lambda (ret1)
 (begin (if (< n 2)
 (begin (ret1 n)
)
 (quote nil)
)
 (let ((a 0)
)
 (begin (let ((b 1)
)
 (begin (let ((i 1)
)
 (begin (call/cc (lambda (break3)
 (letrec ((loop2 (lambda ()
 (if (< i n)
 (begin (let ((t (+ a b)
)
)
 (begin (set! a b)
 (set! b t)
 (set! i (+ i 1)
)
)
)
 (loop2)
)
 (quote nil)
)
)
)
)
 (loop2)
)
)
)
 (ret1 b)
)
)
)
)
)
)
)
)
)
)
(define (main)
 (call/cc (lambda (ret4)
 (call/cc (lambda (break6)
 (letrec ((loop5 (lambda (xs)
 (if (null? xs)
 (quote nil)
 (begin (let ((n (car xs)
)
)
 (begin (if (< n 0)
 (begin (display (to-str "fib undefined for negative numbers")
)
 (newline)
)
 (begin (display (to-str (string-append (string-append (string-append "fib " (to-str n)
)
 " = ")
 (to-str (fib n)
)
)
)
)
 (newline)
)
)
)
)
 (loop5 (cdr xs)
)
)
)
)
)
)
 (loop5 (list 0 1 2 3 4 5 10 40 (- 1)
)
)
)
)
)
)
)
)
(main)
