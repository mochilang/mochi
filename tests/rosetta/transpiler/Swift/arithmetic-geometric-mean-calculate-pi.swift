// Generated by Mochi transpiler v0.10.40 on 2025-07-26 05:32:25 GMT+7
import Foundation

func abs(_ x: Double) -> Double {
    if (x < 0.0) {
        return (-x as! Double)
    }
    return (x as! Double)
}
func sqrtApprox(_ x: Double) -> Double {
    var guess = x
    var i = 0
    while (i < 20) {
        guess = (((guess + (x / guess)) / 2.0) as! Double)
        i = ((i + 1) as! Int)
    }
    return (guess as! Double)
}
func agmPi() -> Double {
    var a = 1.0
    var g = (1.0 / sqrtApprox(2.0))
    var sum = 0.0
    var pow = 2.0
    while (abs(((a - g) as! Double)) > 0.000000000000001) {
        var t = ((a + g) / 2.0)
        var u = sqrtApprox(((a * g) as! Double))
        a = (t as! Double)
        g = (u as! Double)
        pow = ((pow * 2.0) as! Double)
        var diff = ((a * a) - (g * g))
        sum = ((sum + (diff * pow)) as! Double)
    }
    var pi = (((4.0 * a) * a) / (1.0 - sum))
    return (pi as! Double)
}
func main() {
    print(String(describing: agmPi()))
}
_ = main()
