// Generated by Mochi transpiler v0.10.52 on 2025-08-02 01:31:38 GMT+7
import Foundation

func _p(_ v: Any?) -> String {
    if let val = v {
        if let d = val as? Double {
            if d.rounded(.towardZero) == d {
                return String(Int64(d))
            }
        }
        return String(describing: val)
    }
    return "<nil>"
}

var _nowSeed = 0
var _nowSeeded = false
func _now() -> Int {
    if !_nowSeeded {
        if let s = ProcessInfo.processInfo.environment["MOCHI_NOW_SEED"], let v = Int(s) {
            _nowSeed = v
            _nowSeeded = true
        }
    }
    if _nowSeeded {
        _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647
        return _nowSeed
    }
    return Int(Date().timeIntervalSince1970 * 1_000_000_000)
}
func pad2(_ n: Int) -> String {
    if (n < 10) {
        return ("0" + _p(n))
    }
    return _p(n)
}
func weekdayName(_ z: Int) -> String {
    let names: [String] = (["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"] as! [String])
    return (names[(Int((z &+ 4)) % 7)] as! String)
}
func main() {
    let ts = ((Int(_now()) / 1000000000) as! Int)
    var days: Int = ((ts / 86400) as! Int)
    var z: Int = (days &+ 719468)
    var era: Int = ((z / 146097) as! Int)
    var doe: Int = (z &- (era &* 146097))
    var yoe: Int = (Int((((doe &- (doe / 1460)) &+ (doe / 36524)) &- (doe / 146096))) / 365)
    var y: Int = (yoe &+ (era &* 400))
    var doy: Int = (doe &- Int((((365 &* yoe) &+ (yoe / 4)) &- (yoe / 100))))
    var mp: Int = (Int(((5 &* doy) &+ 2)) / 153)
    var d: Int = (((doy &- Int((Int(((153 &* mp) &+ 2)) / 5))) &+ 1) as! Int)
    var m: Int = ((mp &+ 3) as! Int)
    if (m > 12) {
        y = ((y &+ 1) as! Int)
        m = ((m &- 12) as! Int)
    }
    let iso = ((((_p(y) + "-") + String(describing: pad2((m as! Int)))) + "-") + String(describing: pad2((d as! Int))))
    print(_p(iso))
    let months: [String] = (["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"] as! [String])
    let line = ((((((String(describing: weekdayName((days as! Int))) + ", ") + (months[(m &- 1)] as! String)) + " ") + _p(d)) + ", ") + _p(y))
    print(_p(line))
}
_ = main()
