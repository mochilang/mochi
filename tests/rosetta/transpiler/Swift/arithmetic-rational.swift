// Generated by Mochi transpiler v0.10.40 on 2025-07-26 09:56:18 GMT+7
import Foundation

var _nowSeed = 0
var _nowSeeded = false
func _now() -> Int {
    if !_nowSeeded {
        if let s = ProcessInfo.processInfo.environment["MOCHI_NOW_SEED"], let v = Int(s) {
            _nowSeed = v
            _nowSeeded = true
        }
    }
    if _nowSeeded {
        _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647
        return _nowSeed
    }
    return Int(Date().timeIntervalSince1970 * 1_000_000_000)
}
func _mem() -> Int {
    if let status = try? String(contentsOfFile: "/proc/self/status") {
        for line in status.split(separator: "\n") {
            if line.hasPrefix("VmRSS:") {
                let parts = line.split(whereSeparator: { $0 == " " || $0 == "\t" })
                if parts.count >= 2, let kb = Int(parts[1]) {
                    return kb * 1024
                }
            }
        }
    }
    return 0
}
do {
    let _benchMemStart = _mem()
    let _benchStart = _now()
    func intSqrt(_ x: Int) -> Int {
        if (x < 2) {
            return Int(x)
        }
        var left = 1
        var right = (x / 2)
        var ans = 0
        while (left <= right) {
            let mid = (left + (Int((right - left)) / 2))
            let sq = (mid * mid)
            if (sq == x) {
                return Int(mid)
            }
            if (sq < x) {
                left = Int((mid + 1))
                ans = Int(mid)
            } else {
                right = Int((mid - 1))
            }
        }
        return Int(ans)
    }
    func sumRecip(_ n: Int) -> Int {
        var s = 1
        let limit = Int(intSqrt(Int(n)))
        var f = 2
        while (f <= limit) {
            if ((n % f) == 0) {
                s = Int((s + (n / f)))
                let f2 = (n / f)
                if (f2 != f) {
                    s = Int((s + f))
                }
            }
            f = Int((f + 1))
        }
        return Int(s)
    }
    func main() {
        let nums = ([6, 28, 120, 496, 672, 8128, 30240, 32760, 523776] as! [Int])
        for n in nums {
            let s = Int(sumRecip(Int(n)))
            if ((s % n) == 0) {
                let val = (s / n)
                var perfect = ""
                if (val == 1) {
                    perfect = "perfect!"
                }
                print(((((("Sum of recipr. factors of " + String(describing: n)) + " = ") + String(describing: val)) + " exactly ") + perfect))
            }
        }
    }
    _ = main()
    let _benchEnd = _now()
    let _benchMemEnd = _mem()
    print("{\n  \"duration_us\": \((_benchEnd - _benchStart) / 1000),\n  \"memory_bytes\": \(_benchMemEnd - _benchMemStart),\n  \"name\": \"main\"\n}")
}
