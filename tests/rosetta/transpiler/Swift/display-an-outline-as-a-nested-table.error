exit status 1
/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:60:21: warning: forced cast of '[String]' to same type has no effect
 58 |         }
 59 |         out = (_append(out, cur) as! [String])
 60 |         return (out as! [String])
    |                     `- warning: forced cast of '[String]' to same type has no effect
 61 |     }
 62 |     func join(_ xs: [String], _ sep: String) -> String {

/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:82:63: warning: forced cast of '[String]' to same type has no effect
 80 |     }
 81 |     func makeIndent(_ outline: String, _ tab: Int) -> [[String: Any]] {
 82 |         let lines = (split(String(describing: outline), "\n") as! [String])
    |                                                               `- warning: forced cast of '[String]' to same type has no effect
 83 |         var nodes: [[String: Any]] = ([] as! [[String: Any]])
 84 |         for line in lines {

/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:89:23: warning: forced cast of '[[String : Any]]' to same type has no effect
 87 |             nodes = ((_append(nodes, ["level": level, "name": line2]) as! [Any]) as! [[String: Any]])
 88 |         }
 89 |         return (nodes as! [[String: Any]])
    |                       `- warning: forced cast of '[[String : Any]]' to same type has no effect
 90 |     }
 91 |     func toNest(_ nodes: [[String: Any]], _ start: Int, _ level: Int, _ n: inout [String: Any]) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:93:36: warning: forced cast of '[String : Any]' to same type has no effect
 91 |     func toNest(_ nodes: [[String: Any]], _ start: Int, _ level: Int, _ n: inout [String: Any]) {
 92 |         if (level == 0) {
 93 |             n["name"] = ((nodes[0] as! [String: Any])["name"] as! Any)
    |                                    `- warning: forced cast of '[String : Any]' to same type has no effect
 94 |         }
 95 |         var i: Int = (start + 1)

/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:93:63: warning: forced cast from 'Any?' to 'Any' only unwraps optionals; did you mean to use '!'?
 91 |     func toNest(_ nodes: [[String: Any]], _ start: Int, _ level: Int, _ n: inout [String: Any]) {
 92 |         if (level == 0) {
 93 |             n["name"] = ((nodes[0] as! [String: Any])["name"] as! Any)
    |                                                               `- warning: forced cast from 'Any?' to 'Any' only unwraps optionals; did you mean to use '!'?
 94 |         }
 95 |         var i: Int = (start + 1)

/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:97:34: warning: forced cast of '[String : Any]' to same type has no effect
 95 |         var i: Int = (start + 1)
 96 |         while (i < Int(((nodes).count))) {
 97 |             let node = (nodes[i] as! [String: Any])
    |                                  `- warning: forced cast of '[String : Any]' to same type has no effect
 98 |             let lev = (node["level"]! as! Int)
 99 |             if (lev == (level + 1)) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:101:83: error: cannot convert value of type 'Any' to expected argument type '[String : Any]'
 99 |             if (lev == (level + 1)) {
100 |                 var child: Any = ["name": node["name"]!, "children": [] as [Any]]
101 |                 _ = toNest((nodes as! [[String: Any]]), Int(i), Int((level + 1)), &child)
    |                                                                                   `- error: cannot convert value of type 'Any' to expected argument type '[String : Any]'
102 |                 var cs: [Any] = (n["children"]! as! [Any])
103 |                 cs = (_append(cs, child) as! [Any])

/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:101:35: warning: forced cast of '[[String : Any]]' to same type has no effect
 99 |             if (lev == (level + 1)) {
100 |                 var child: Any = ["name": node["name"]!, "children": [] as [Any]]
101 |                 _ = toNest((nodes as! [[String: Any]]), Int(i), Int((level + 1)), &child)
    |                                   `- warning: forced cast of '[[String : Any]]' to same type has no effect
102 |                 var cs: [Any] = (n["children"]! as! [Any])
103 |                 cs = (_append(cs, child) as! [Any])

/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:130:34: warning: forced cast of '[[String : Any]]' to same type has no effect
128 |             levels = (_append(levels, current) as! [[[String: Any]]])
129 |             var next: [[String: Any]] = ([] as! [[String: Any]])
130 |             for _item in current as! [[String: Any]] {
    |                                  `- warning: forced cast of '[[String : Any]]' to same type has no effect
131 |                 let n = _item as! [String: Any]
132 |                 let kids = (n["children"]! as! [Any])

/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:131:31: warning: forced cast of '[String : Any]' to same type has no effect
129 |             var next: [[String: Any]] = ([] as! [[String: Any]])
130 |             for _item in current as! [[String: Any]] {
131 |                 let n = _item as! [String: Any]
    |                               `- warning: forced cast of '[String : Any]' to same type has no effect
132 |                 let kids = (n["children"]! as! [Any])
133 |                 for k in kids {

/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:137:29: warning: forced cast of '[[String : Any]]' to same type has no effect
135 |                 }
136 |             }
137 |             current = (next as! [[String: Any]])
    |                             `- warning: forced cast of '[[String : Any]]' to same type has no effect
138 |             d = Int((d + 1))
139 |         }

/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:140:24: warning: forced cast of '[[[String : Any]]]' to same type has no effect
138 |             d = Int((d + 1))
139 |         }
140 |         return (levels as! [[[String: Any]]])
    |                        `- warning: forced cast of '[[[String : Any]]]' to same type has no effect
141 |     }
142 |     func toMarkup(_ n: [String: Any], _ cols: [String], _ depth: Int) -> String {

/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:147:39: warning: forced cast of '[String : Any]' to same type has no effect
145 |         let l1 = "|-"
146 |         lines = (_append(lines, l1) as! [String])
147 |         var span = Int(countLeaves((n as! [String: Any])))
    |                                       `- warning: forced cast of '[String : Any]' to same type has no effect
148 |         lines = (_append(lines, ((((("| style=\"background: " + String(describing: cols[0])) + " \" colSpan=") + _p(span)) + " | ") + String(describing: n["name"]!))) as! [String])
149 |         lines = (_append(lines, l1) as! [String])

/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:150:37: warning: forced cast of '[String : Any]' to same type has no effect
148 |         lines = (_append(lines, ((((("| style=\"background: " + String(describing: cols[0])) + " \" colSpan=") + _p(span)) + " | ") + String(describing: n["name"]!))) as! [String])
149 |         lines = (_append(lines, l1) as! [String])
150 |         let lvls = (nodesByDepth((n as! [String: Any]), Int(depth)) as! [[[String: Any]]])
    |                                     `- warning: forced cast of '[String : Any]' to same type has no effect
151 |         var lvl: Int = 1
152 |         while (lvl < depth) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:150:69: warning: forced cast of '[[[String : Any]]]' to same type has no effect
148 |         lines = (_append(lines, ((((("| style=\"background: " + String(describing: cols[0])) + " \" colSpan=") + _p(span)) + " | ") + String(describing: n["name"]!))) as! [String])
149 |         lines = (_append(lines, l1) as! [String])
150 |         let lvls = (nodesByDepth((n as! [String: Any]), Int(depth)) as! [[[String: Any]]])
    |                                                                     `- warning: forced cast of '[[[String : Any]]]' to same type has no effect
151 |         var lvl: Int = 1
152 |         while (lvl < depth) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:153:36: warning: forced cast of '[[String : Any]]' to same type has no effect
151 |         var lvl: Int = 1
152 |         while (lvl < depth) {
153 |             let nodes = (lvls[lvl] as! [[String: Any]])
    |                                    `- warning: forced cast of '[[String : Any]]' to same type has no effect
154 |             if (Int(((nodes).count)) == 0) {
155 |                 lines = (_append(lines, "|  |") as! [String])

/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:159:44: warning: forced cast of '[String : Any]' to same type has no effect
157 |                 var idx: Int = 0
158 |                 while (idx < Int(((nodes).count))) {
159 |                     let node = (nodes[idx] as! [String: Any])
    |                                            `- warning: forced cast of '[String : Any]' to same type has no effect
160 |                     span = Int(countLeaves((node as! [String: Any])))
161 |                     var col: Int = lvl

/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:160:50: warning: forced cast of '[String : Any]' to same type has no effect
158 |                 while (idx < Int(((nodes).count))) {
159 |                     let node = (nodes[idx] as! [String: Any])
160 |                     span = Int(countLeaves((node as! [String: Any])))
    |                                                  `- warning: forced cast of '[String : Any]' to same type has no effect
161 |                     var col: Int = lvl
162 |                     if (lvl == 1) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:179:47: warning: forced cast of '[String]' to same type has no effect
177 |         }
178 |         lines = (_append(lines, "|}") as! [String])
179 |         return String(describing: join((lines as! [String]), "\n"))
    |                                               `- warning: forced cast of '[String]' to same type has no effect
180 |     }
181 |     func main() {

/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:189:65: warning: forced cast of '[[String : Any]]' to same type has no effect
187 |         let pink = "#ffeeff;"
188 |         let cols = ([yellow, orange, green, blue, pink] as! [String])
189 |         let nodes = (makeIndent(String(describing: outline), 4) as! [[String: Any]])
    |                                                                 `- warning: forced cast of '[[String : Any]]' to same type has no effect
190 |         var n: Any = ["name": "", "children": [] as [Any]]
191 |         _ = toNest((nodes as! [[String: Any]]), 0, 0, &n)

/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:191:55: error: cannot convert value of type 'Any' to expected argument type '[String : Any]'
189 |         let nodes = (makeIndent(String(describing: outline), 4) as! [[String: Any]])
190 |         var n: Any = ["name": "", "children": [] as [Any]]
191 |         _ = toNest((nodes as! [[String: Any]]), 0, 0, &n)
    |                                                       `- error: cannot convert value of type 'Any' to expected argument type '[String : Any]'
192 |         print(_p(String(describing: toMarkup((n as! [String: Any]), (cols as! [String]), 4))))
193 |         print(_p("\n"))

/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:191:27: warning: forced cast of '[[String : Any]]' to same type has no effect
189 |         let nodes = (makeIndent(String(describing: outline), 4) as! [[String: Any]])
190 |         var n: Any = ["name": "", "children": [] as [Any]]
191 |         _ = toNest((nodes as! [[String: Any]]), 0, 0, &n)
    |                           `- warning: forced cast of '[[String : Any]]' to same type has no effect
192 |         print(_p(String(describing: toMarkup((n as! [String: Any]), (cols as! [String]), 4))))
193 |         print(_p("\n"))

/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:192:75: warning: forced cast of '[String]' to same type has no effect
190 |         var n: Any = ["name": "", "children": [] as [Any]]
191 |         _ = toNest((nodes as! [[String: Any]]), 0, 0, &n)
192 |         print(_p(String(describing: toMarkup((n as! [String: Any]), (cols as! [String]), 4))))
    |                                                                           `- warning: forced cast of '[String]' to same type has no effect
193 |         print(_p("\n"))
194 |         let outline2 = ((((((((((((("Display an outline as a nested table.\n" + "    Parse the outline to a tree,\n") + "        measuring the indent of each line,\n") + "        translating the indentation to a nested structure,\n") + "        and padding the tree to even depth.\n") + "    count the leaves descending from each node,\n") + "        defining the width of a leaf as 1,\n") + "        and the width of a parent node as a sum.\n") + "            (The sum of the widths of its children)\n") + "            Propagating the sums upward as necessary.\n") + "    and write out a table with 'colspan' values\n") + "        either as a wiki table,\n") + "        or as HTML.\n") + "    Optionally add color to the nodes.")

/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:196:67: warning: forced cast of '[[String : Any]]' to same type has no effect
194 |         let outline2 = ((((((((((((("Display an outline as a nested table.\n" + "    Parse the outline to a tree,\n") + "        measuring the indent of each line,\n") + "        translating the indentation to a nested structure,\n") + "        and padding the tree to even depth.\n") + "    count the leaves descending from each node,\n") + "        defining the width of a leaf as 1,\n") + "        and the width of a parent node as a sum.\n") + "            (The sum of the widths of its children)\n") + "            Propagating the sums upward as necessary.\n") + "    and write out a table with 'colspan' values\n") + "        either as a wiki table,\n") + "        or as HTML.\n") + "    Optionally add color to the nodes.")
195 |         let cols2 = ([blue, yellow, orange, green, pink] as! [String])
196 |         let nodes2 = (makeIndent(String(describing: outline2), 4) as! [[String: Any]])
    |                                                                   `- warning: forced cast of '[[String : Any]]' to same type has no effect
197 |         var n2: Any = ["name": "", "children": [] as [Any]]
198 |         _ = toNest((nodes2 as! [[String: Any]]), 0, 0, &n2)

/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:198:56: error: cannot convert value of type 'Any' to expected argument type '[String : Any]'
196 |         let nodes2 = (makeIndent(String(describing: outline2), 4) as! [[String: Any]])
197 |         var n2: Any = ["name": "", "children": [] as [Any]]
198 |         _ = toNest((nodes2 as! [[String: Any]]), 0, 0, &n2)
    |                                                        `- error: cannot convert value of type 'Any' to expected argument type '[String : Any]'
199 |         print(_p(String(describing: toMarkup((n2 as! [String: Any]), (cols2 as! [String]), 4))))
200 |     }

/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:198:28: warning: forced cast of '[[String : Any]]' to same type has no effect
196 |         let nodes2 = (makeIndent(String(describing: outline2), 4) as! [[String: Any]])
197 |         var n2: Any = ["name": "", "children": [] as [Any]]
198 |         _ = toNest((nodes2 as! [[String: Any]]), 0, 0, &n2)
    |                            `- warning: forced cast of '[[String : Any]]' to same type has no effect
199 |         print(_p(String(describing: toMarkup((n2 as! [String: Any]), (cols2 as! [String]), 4))))
200 |     }

/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:199:77: warning: forced cast of '[String]' to same type has no effect
197 |         var n2: Any = ["name": "", "children": [] as [Any]]
198 |         _ = toNest((nodes2 as! [[String: Any]]), 0, 0, &n2)
199 |         print(_p(String(describing: toMarkup((n2 as! [String: Any]), (cols2 as! [String]), 4))))
    |                                                                             `- warning: forced cast of '[String]' to same type has no effect
200 |     }
201 |     _ = main()

/tmp/TestSwiftTranspiler_Rosetta_Golden2454826504/001/main.swift:201:5: warning: using '_' to ignore the result of a Void-returning function is redundant
199 |         print(_p(String(describing: toMarkup((n2 as! [String: Any]), (cols2 as! [String]), 4))))
200 |     }
201 |     _ = main()
    |     `- warning: using '_' to ignore the result of a Void-returning function is redundant
202 |     let _benchEnd = _now()
203 |     let _benchMemEnd = _mem()
