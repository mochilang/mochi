exit status 1
/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:165:1: warning: using '_' to ignore the result of a Void-returning function is redundant
163 |     print(_p(String(describing: toMarkup((n2 as! [String: Any]), (cols2 as! [String]), 4))))
164 | }
165 | _ = main()
    | `- warning: using '_' to ignore the result of a Void-returning function is redundant
166 | 

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:24:17: warning: forced cast of '[String]' to same type has no effect
 22 |     }
 23 |     out = ((out + [cur]) as! [String])
 24 |     return (out as! [String])
    |                 `- warning: forced cast of '[String]' to same type has no effect
 25 | }
 26 | func join(_ xs: [String], _ sep: String) -> String {

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:33:36: warning: forced cast of 'String' to same type has no effect
 31 |             res = String((res + sep))
 32 |         }
 33 |         res = String((res + (xs[i] as! String)))
    |                                    `- warning: forced cast of 'String' to same type has no effect
 34 |         i = Int((i + 1))
 35 |     }

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:46:47: warning: forced cast of '[String]' to same type has no effect
 44 | }
 45 | func makeIndent(_ outline: String, _ tab: Int) -> [[String: Any]] {
 46 |     let lines = (split(String(outline), "\n") as! [String])
    |                                               `- warning: forced cast of '[String]' to same type has no effect
 47 |     var nodes: [[String: Any]] = ([] as! [[String: Any]])
 48 |     for line in lines {

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:51:85: warning: forced cast from '[[String : Any]]' to '[Any]' always succeeds; did you mean to use 'as'?
 49 |         let line2 = String(describing: trimLeftSpaces(String(line)))
 50 |         let level = (Int((Int(((line).count)) - Int(((line2).count)))) / tab)
 51 |         nodes = ((((nodes + [["level": level, "name": line2]]) as! [[String: Any]]) as! [Any]) as! [[String: Any]])
    |                                                                                     `- warning: forced cast from '[[String : Any]]' to '[Any]' always succeeds; did you mean to use 'as'?
 52 |     }
 53 |     return (nodes as! [[String: Any]])

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:53:19: warning: forced cast of '[[String : Any]]' to same type has no effect
 51 |         nodes = ((((nodes + [["level": level, "name": line2]]) as! [[String: Any]]) as! [Any]) as! [[String: Any]])
 52 |     }
 53 |     return (nodes as! [[String: Any]])
    |                   `- warning: forced cast of '[[String : Any]]' to same type has no effect
 54 | }
 55 | func toNest(_ nodes: [[String: Any]], _ start: Int, _ level: Int, _ n: inout [String: Any]) {

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:57:32: warning: forced cast of '[String : Any]' to same type has no effect
 55 | func toNest(_ nodes: [[String: Any]], _ start: Int, _ level: Int, _ n: inout [String: Any]) {
 56 |     if (level == 0) {
 57 |         n["name"] = ((nodes[0] as! [String: Any])["name"] as! Any)
    |                                `- warning: forced cast of '[String : Any]' to same type has no effect
 58 |     }
 59 |     var i: Int = (start + 1)

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:57:59: warning: forced cast from 'Any?' to 'Any' only unwraps optionals; did you mean to use '!'?
 55 | func toNest(_ nodes: [[String: Any]], _ start: Int, _ level: Int, _ n: inout [String: Any]) {
 56 |     if (level == 0) {
 57 |         n["name"] = ((nodes[0] as! [String: Any])["name"] as! Any)
    |                                                           `- warning: forced cast from 'Any?' to 'Any' only unwraps optionals; did you mean to use '!'?
 58 |     }
 59 |     var i: Int = (start + 1)

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:61:30: warning: forced cast of '[String : Any]' to same type has no effect
 59 |     var i: Int = (start + 1)
 60 |     while (i < Int(((nodes).count))) {
 61 |         let node = (nodes[i] as! [String: Any])
    |                              `- warning: forced cast of '[String : Any]' to same type has no effect
 62 |         let lev = (node["level"]! as! Int)
 63 |         if (lev == (level + 1)) {

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:65:79: error: cannot convert value of type 'Any' to expected argument type '[String : Any]'
 63 |         if (lev == (level + 1)) {
 64 |             var child: Any = ["name": node["name"]!, "children": [] as [Any]]
 65 |             _ = toNest((nodes as! [[String: Any]]), Int(i), Int((level + 1)), &child)
    |                                                                               `- error: cannot convert value of type 'Any' to expected argument type '[String : Any]'
 66 |             var cs: [Any] = (n["children"]! as! [Any])
 67 |             cs = ((cs + [child]) as! [Any])

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:65:31: warning: forced cast of '[[String : Any]]' to same type has no effect
 63 |         if (lev == (level + 1)) {
 64 |             var child: Any = ["name": node["name"]!, "children": [] as [Any]]
 65 |             _ = toNest((nodes as! [[String: Any]]), Int(i), Int((level + 1)), &child)
    |                               `- warning: forced cast of '[[String : Any]]' to same type has no effect
 66 |             var cs: [Any] = (n["children"]! as! [Any])
 67 |             cs = ((cs + [child]) as! [Any])

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:94:30: warning: forced cast of '[[String : Any]]' to same type has no effect
 92 |         levels = ((levels + [current]) as! [[[String: Any]]])
 93 |         var next: [[String: Any]] = ([] as! [[String: Any]])
 94 |         for _item in current as! [[String: Any]] {
    |                              `- warning: forced cast of '[[String : Any]]' to same type has no effect
 95 |             let n = _item as! [String: Any]
 96 |             let kids = (n["children"]! as! [Any])

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:95:27: warning: forced cast of '[String : Any]' to same type has no effect
 93 |         var next: [[String: Any]] = ([] as! [[String: Any]])
 94 |         for _item in current as! [[String: Any]] {
 95 |             let n = _item as! [String: Any]
    |                           `- warning: forced cast of '[String : Any]' to same type has no effect
 96 |             let kids = (n["children"]! as! [Any])
 97 |             for k in kids {

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:101:25: warning: forced cast of '[[String : Any]]' to same type has no effect
 99 |             }
100 |         }
101 |         current = (next as! [[String: Any]])
    |                         `- warning: forced cast of '[[String : Any]]' to same type has no effect
102 |         d = Int((d + 1))
103 |     }

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:104:20: warning: forced cast of '[[[String : Any]]]' to same type has no effect
102 |         d = Int((d + 1))
103 |     }
104 |     return (levels as! [[[String: Any]]])
    |                    `- warning: forced cast of '[[[String : Any]]]' to same type has no effect
105 | }
106 | func toMarkup(_ n: [String: Any], _ cols: [String], _ depth: Int) -> String {

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:111:35: warning: forced cast of '[String : Any]' to same type has no effect
109 |     let l1 = "|-"
110 |     lines = ((lines + [l1]) as! [String])
111 |     var span = Int(countLeaves((n as! [String: Any])))
    |                                   `- warning: forced cast of '[String : Any]' to same type has no effect
112 |     lines = ((lines + [((((("| style=\"background: " + (cols[0] as! String)) + " \" colSpan=") + _p(span)) + " | ") + (n["name"]! as! String))]) as! [String])
113 |     lines = ((lines + [l1]) as! [String])

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:112:65: warning: forced cast of 'String' to same type has no effect
110 |     lines = ((lines + [l1]) as! [String])
111 |     var span = Int(countLeaves((n as! [String: Any])))
112 |     lines = ((lines + [((((("| style=\"background: " + (cols[0] as! String)) + " \" colSpan=") + _p(span)) + " | ") + (n["name"]! as! String))]) as! [String])
    |                                                                 `- warning: forced cast of 'String' to same type has no effect
113 |     lines = ((lines + [l1]) as! [String])
114 |     let lvls = (nodesByDepth((n as! [String: Any]), Int(depth)) as! [[[String: Any]]])

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:114:33: warning: forced cast of '[String : Any]' to same type has no effect
112 |     lines = ((lines + [((((("| style=\"background: " + (cols[0] as! String)) + " \" colSpan=") + _p(span)) + " | ") + (n["name"]! as! String))]) as! [String])
113 |     lines = ((lines + [l1]) as! [String])
114 |     let lvls = (nodesByDepth((n as! [String: Any]), Int(depth)) as! [[[String: Any]]])
    |                                 `- warning: forced cast of '[String : Any]' to same type has no effect
115 |     var lvl: Int = 1
116 |     while (lvl < depth) {

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:114:65: warning: forced cast of '[[[String : Any]]]' to same type has no effect
112 |     lines = ((lines + [((((("| style=\"background: " + (cols[0] as! String)) + " \" colSpan=") + _p(span)) + " | ") + (n["name"]! as! String))]) as! [String])
113 |     lines = ((lines + [l1]) as! [String])
114 |     let lvls = (nodesByDepth((n as! [String: Any]), Int(depth)) as! [[[String: Any]]])
    |                                                                 `- warning: forced cast of '[[[String : Any]]]' to same type has no effect
115 |     var lvl: Int = 1
116 |     while (lvl < depth) {

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:117:32: warning: forced cast of '[[String : Any]]' to same type has no effect
115 |     var lvl: Int = 1
116 |     while (lvl < depth) {
117 |         let nodes = (lvls[lvl] as! [[String: Any]])
    |                                `- warning: forced cast of '[[String : Any]]' to same type has no effect
118 |         if (Int(((nodes).count)) == 0) {
119 |             lines = ((lines + ["|  |"]) as! [String])

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:123:40: warning: forced cast of '[String : Any]' to same type has no effect
121 |             var idx: Int = 0
122 |             while (idx < Int(((nodes).count))) {
123 |                 let node = (nodes[idx] as! [String: Any])
    |                                        `- warning: forced cast of '[String : Any]' to same type has no effect
124 |                 span = Int(countLeaves((node as! [String: Any])))
125 |                 var col: Int = lvl

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:124:46: warning: forced cast of '[String : Any]' to same type has no effect
122 |             while (idx < Int(((nodes).count))) {
123 |                 let node = (nodes[idx] as! [String: Any])
124 |                 span = Int(countLeaves((node as! [String: Any])))
    |                                              `- warning: forced cast of '[String : Any]' to same type has no effect
125 |                 var col: Int = lvl
126 |                 if (lvl == 1) {

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:132:71: warning: forced cast of 'String' to same type has no effect
130 |                     col = Int((Int(((cols).count)) - 1))
131 |                 }
132 |                 let cell = ((((("| style=\"background: " + (cols[col] as! String)) + " \" colspan=") + _p(span)) + " | ") + (node["name"]! as! String))
    |                                                                       `- warning: forced cast of 'String' to same type has no effect
133 |                 lines = ((lines + [cell]) as! [String])
134 |                 idx = Int((idx + 1))

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:143:43: warning: forced cast of '[String]' to same type has no effect
141 |     }
142 |     lines = ((lines + ["|}"]) as! [String])
143 |     return String(describing: join((lines as! [String]), "\n"))
    |                                           `- warning: forced cast of '[String]' to same type has no effect
144 | }
145 | func main() {

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:153:49: warning: forced cast of '[[String : Any]]' to same type has no effect
151 |     let pink = "#ffeeff;"
152 |     let cols = ([yellow, orange, green, blue, pink] as! [String])
153 |     let nodes = (makeIndent(String(outline), 4) as! [[String: Any]])
    |                                                 `- warning: forced cast of '[[String : Any]]' to same type has no effect
154 |     var n: Any = ["name": "", "children": [] as [Any]]
155 |     _ = toNest((nodes as! [[String: Any]]), 0, 0, &n)

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:155:51: error: cannot convert value of type 'Any' to expected argument type '[String : Any]'
153 |     let nodes = (makeIndent(String(outline), 4) as! [[String: Any]])
154 |     var n: Any = ["name": "", "children": [] as [Any]]
155 |     _ = toNest((nodes as! [[String: Any]]), 0, 0, &n)
    |                                                   `- error: cannot convert value of type 'Any' to expected argument type '[String : Any]'
156 |     print(_p(String(describing: toMarkup((n as! [String: Any]), (cols as! [String]), 4))))
157 |     print(_p("\n"))

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:155:23: warning: forced cast of '[[String : Any]]' to same type has no effect
153 |     let nodes = (makeIndent(String(outline), 4) as! [[String: Any]])
154 |     var n: Any = ["name": "", "children": [] as [Any]]
155 |     _ = toNest((nodes as! [[String: Any]]), 0, 0, &n)
    |                       `- warning: forced cast of '[[String : Any]]' to same type has no effect
156 |     print(_p(String(describing: toMarkup((n as! [String: Any]), (cols as! [String]), 4))))
157 |     print(_p("\n"))

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:156:71: warning: forced cast of '[String]' to same type has no effect
154 |     var n: Any = ["name": "", "children": [] as [Any]]
155 |     _ = toNest((nodes as! [[String: Any]]), 0, 0, &n)
156 |     print(_p(String(describing: toMarkup((n as! [String: Any]), (cols as! [String]), 4))))
    |                                                                       `- warning: forced cast of '[String]' to same type has no effect
157 |     print(_p("\n"))
158 |     let outline2 = ((((((((((((("Display an outline as a nested table.\n" + "    Parse the outline to a tree,\n") + "        measuring the indent of each line,\n") + "        translating the indentation to a nested structure,\n") + "        and padding the tree to even depth.\n") + "    count the leaves descending from each node,\n") + "        defining the width of a leaf as 1,\n") + "        and the width of a parent node as a sum.\n") + "            (The sum of the widths of its children)\n") + "            Propagating the sums upward as necessary.\n") + "    and write out a table with 'colspan' values\n") + "        either as a wiki table,\n") + "        or as HTML.\n") + "    Optionally add color to the nodes.")

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:160:51: warning: forced cast of '[[String : Any]]' to same type has no effect
158 |     let outline2 = ((((((((((((("Display an outline as a nested table.\n" + "    Parse the outline to a tree,\n") + "        measuring the indent of each line,\n") + "        translating the indentation to a nested structure,\n") + "        and padding the tree to even depth.\n") + "    count the leaves descending from each node,\n") + "        defining the width of a leaf as 1,\n") + "        and the width of a parent node as a sum.\n") + "            (The sum of the widths of its children)\n") + "            Propagating the sums upward as necessary.\n") + "    and write out a table with 'colspan' values\n") + "        either as a wiki table,\n") + "        or as HTML.\n") + "    Optionally add color to the nodes.")
159 |     let cols2 = ([blue, yellow, orange, green, pink] as! [String])
160 |     let nodes2 = (makeIndent(String(outline2), 4) as! [[String: Any]])
    |                                                   `- warning: forced cast of '[[String : Any]]' to same type has no effect
161 |     var n2: Any = ["name": "", "children": [] as [Any]]
162 |     _ = toNest((nodes2 as! [[String: Any]]), 0, 0, &n2)

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:162:52: error: cannot convert value of type 'Any' to expected argument type '[String : Any]'
160 |     let nodes2 = (makeIndent(String(outline2), 4) as! [[String: Any]])
161 |     var n2: Any = ["name": "", "children": [] as [Any]]
162 |     _ = toNest((nodes2 as! [[String: Any]]), 0, 0, &n2)
    |                                                    `- error: cannot convert value of type 'Any' to expected argument type '[String : Any]'
163 |     print(_p(String(describing: toMarkup((n2 as! [String: Any]), (cols2 as! [String]), 4))))
164 | }

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:162:24: warning: forced cast of '[[String : Any]]' to same type has no effect
160 |     let nodes2 = (makeIndent(String(outline2), 4) as! [[String: Any]])
161 |     var n2: Any = ["name": "", "children": [] as [Any]]
162 |     _ = toNest((nodes2 as! [[String: Any]]), 0, 0, &n2)
    |                        `- warning: forced cast of '[[String : Any]]' to same type has no effect
163 |     print(_p(String(describing: toMarkup((n2 as! [String: Any]), (cols2 as! [String]), 4))))
164 | }

/tmp/TestSwiftTranspiler_Rosetta_Golden3962566786/001/main.swift:163:73: warning: forced cast of '[String]' to same type has no effect
161 |     var n2: Any = ["name": "", "children": [] as [Any]]
162 |     _ = toNest((nodes2 as! [[String: Any]]), 0, 0, &n2)
163 |     print(_p(String(describing: toMarkup((n2 as! [String: Any]), (cols2 as! [String]), 4))))
    |                                                                         `- warning: forced cast of '[String]' to same type has no effect
164 | }
165 | _ = main()
