// Generated by Mochi transpiler v0.10.39 on 2025-07-24 20:09:15 GMT+7
import Foundation

func pow(_ base: Int, _ exp: Int) -> Int {
    var result = 1
    var i = 0
    while (Int(i) < Int(exp)) {
        result = ((Int(result) * Int(base)) as! Int)
        i = ((Int(i) + 1) as! Int)
    }
    return Int(result)
}
func ackermann2(_ m: Int, _ n: Int) -> Int {
    if (Int(m) == 0) {
        return ((Int(n) + 1) as! Int)
    }
    if (Int(m) == 1) {
        return ((Int(n) + 2) as! Int)
    }
    if (Int(m) == 2) {
        return (((2 * Int(n)) + 3) as! Int)
    }
    if (Int(m) == 3) {
        return (((8 * Int(pow(2, Int(n)))) - 3) as! Int)
    }
    if (Int(n) == 0) {
        return Int(ackermann2(((Int(m) - 1) as! Int), 1))
    }
    return Int(ackermann2(((Int(m) - 1) as! Int), Int(ackermann2(Int(m), ((Int(n) - 1) as! Int)))))
}
func main() {
    print(("A(0, 0) = " + String(String(describing: Int(ackermann2(0, 0))))))
    print(("A(1, 2) = " + String(String(describing: Int(ackermann2(1, 2))))))
    print(("A(2, 4) = " + String(String(describing: Int(ackermann2(2, 4))))))
    print(("A(3, 4) = " + String(String(describing: Int(ackermann2(3, 4))))))
}
_ = main()
