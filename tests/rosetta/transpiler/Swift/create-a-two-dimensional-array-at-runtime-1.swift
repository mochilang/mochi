// Generated by Mochi transpiler v0.10.42 on 2025-07-28 11:37:38 GMT+7
import Foundation

func _p(_ v: Any?) -> String {
    if let val = v { return String(describing: val) }
    return "<nil>"
}

func _append<T>(_ xs: [T], _ v: T) -> [T] {
    var out = xs
    out.append(v)
    return out
}
func main() {
    let row = 3
    let col = 4
    var a: [[Int]] = ([] as! [[Int]])
    var i: Int = 0
    while (i < row) {
        var rowArr: [Int] = ([] as! [Int])
        var j: Int = 0
        while (j < col) {
            rowArr = (_append(rowArr, 0) as! [Int])
            j = Int((j + 1))
        }
        a = (_append(a, rowArr) as! [[Int]])
        i = Int((i + 1))
    }
    print(_p(("a[0][0] = " + _p((a[0][0] as! Int)))))
    a[Int((row - 1))][Int((col - 1))] = 7
    print(_p(((((("a[" + _p((row - 1))) + "][") + _p((col - 1))) + "] = ") + _p((a[Int((row - 1))][Int((col - 1))] as! Int)))))
    a = []
}
_ = main()
