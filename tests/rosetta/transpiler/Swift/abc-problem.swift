// Generated by Mochi transpiler v0.10.38 on 2025-07-24 13:12:09 GMT+7
import Foundation

func fields(_ s: String) -> [String] {
    var s = s
    var res: [String] = ([] as! [String])
    var cur = ""
    var i = 0
    while (Int(i) < Int(((String(s)).count))) {
        let c = String(String(Array(s)[Int(i)..<(Int(i) + 1)]))
        if (String(c) == " ") {
            if (Int(((String(cur)).count)) > 0) {
                res = (((res as! [String]) + [String(cur)]) as! [String])
                cur = ""
            }
        } else {
            cur = ((String(cur) + String(c)) as! String)
        }
        i = ((Int(i) + 1) as! Int)
    }
    if (Int(((String(cur)).count)) > 0) {
        res = (((res as! [String]) + [String(cur)]) as! [String])
    }
    return (res as! [String])
}
func canSpell(_ word: String, _ blks: [String]) -> Bool {
    var word = word
    var blks = blks
    if (Int(((String(word)).count)) == 0) {
        return true
    }
    let c = String((String(String(Array(word)[0..<1])).lowercased()))
    var i = 0
    while (Int(i) < Int((((blks as! [String])).count))) {
        let b = String(blks[Int(i)])
        if ((String(c) == String((String(String(Array(b)[0..<1])).lowercased()))) || (String(c) == String((String(String(Array(b)[1..<2])).lowercased())))) {
            var rest: [String] = ([] as! [String])
            var j = 0
            while (Int(j) < Int((((blks as! [String])).count))) {
                if (Int(j) != Int(i)) {
                    rest = (((rest as! [String]) + [String(blks[Int(j)])]) as! [String])
                }
                j = ((Int(j) + 1) as! Int)
            }
            if Bool(canSpell(String(String(Array(word)[1..<Array(word).count])), (rest as! [String]))) {
                return true
            }
        }
        i = ((Int(i) + 1) as! Int)
    }
    return false
}
func newSpeller(_ blocks: String) -> (String) -> Bool {
    var blocks = blocks
    let bl = (fields(String(blocks)) as! [String])
    return { (w: String) -> Bool in Bool(canSpell((w as! String), (bl as! [String]))) }
}
func main() {
    let sp = newSpeller("BO XK DQ CP NA GT RE TG QD FS JW HU VI AN OB ER FS LY PC ZM")
    for word in (["A", "BARK", "BOOK", "TREAT", "COMMON", "SQUAD", "CONFUSE"] as! [String]) {
        print(((String(word) + " ") + String(String(describing: Bool(sp((word as! String)))))))
    }
}
main()
