// Generated by Mochi transpiler v0.10.39 on 2025-07-24 20:01:31 GMT+7
import Foundation

func pfacSum(_ i: Int) -> Int {
    var sum = 0
    var p = 1
    while (Int(p) <= (Int(i) / 2)) {
        if ((Int(i) % Int(p)) == 0) {
            sum = ((Int(sum) + Int(p)) as! Int)
        }
        p = ((Int(p) + 1) as! Int)
    }
    return Int(sum)
}
func main() {
    var d = 0
    var a = 0
    var pnum = 0
    var i = 1
    while (Int(i) <= 20000) {
        let j = Int(pfacSum(Int(i)))
        if (Int(j) < Int(i)) {
            d = ((Int(d) + 1) as! Int)
        }
        if (Int(j) == Int(i)) {
            pnum = ((Int(pnum) + 1) as! Int)
        }
        if (Int(j) > Int(i)) {
            a = ((Int(a) + 1) as! Int)
        }
        i = ((Int(i) + 1) as! Int)
    }
    print((("There are " + String(String(describing: Int(d)))) + " deficient numbers between 1 and 20000"))
    print((("There are " + String(String(describing: Int(a)))) + " abundant numbers  between 1 and 20000"))
    print((("There are " + String(String(describing: Int(pnum)))) + " perfect numbers between 1 and 20000"))
}
_ = main()
