// Generated by Mochi transpiler v0.10.39 on 2025-07-25 09:14:27 GMT+7
import Foundation

func pfacSum(_ i: Int) -> Int {
    var sum = 0
    var p = 1
    while (p <= (i / 2)) {
        if ((i % p) == 0) {
            sum = ((sum + p) as! Int)
        }
        p = ((p + 1) as! Int)
    }
    return (sum as! Int)
}
func main() {
    var d = 0
    var a = 0
    var pnum = 0
    var i = 1
    while (i <= 20000) {
        let j = Int(pfacSum((i as! Int)))
        if (j < i) {
            d = ((d + 1) as! Int)
        }
        if (j == i) {
            pnum = ((pnum + 1) as! Int)
        }
        if (j > i) {
            a = ((a + 1) as! Int)
        }
        i = ((i + 1) as! Int)
    }
    print((("There are " + String(describing: d)) + " deficient numbers between 1 and 20000"))
    print((("There are " + String(describing: a)) + " abundant numbers  between 1 and 20000"))
    print((("There are " + String(describing: pnum)) + " perfect numbers between 1 and 20000"))
}
_ = main()
