// Generated by Mochi transpiler v0.10.39 on 2025-07-25 09:15:07 GMT+7
import Foundation

func kPrime(_ n: Int, _ k: Int) -> Bool {
    var n = n
    var nf = 0
    var i = 2
    while (i <= n) {
        while ((n % i) == 0) {
            if (nf == k) {
                return false
            }
            nf = ((nf + 1) as! Int)
            n = ((n / i) as! Int)
        }
        i = ((i + 1) as! Int)
    }
    return ((nf == k) as! Bool)
}
func gen(_ k: Int, _ count: Int) -> [Int] {
    var r: [Int] = ([] as! [Int])
    var n = 2
    while (Int(((r).count)) < count) {
        if Bool(kPrime((n as! Int), (k as! Int))) {
            r = ((r + [n]) as! [Int])
        }
        n = ((n + 1) as! Int)
    }
    return (r as! [Int])
}
func main() {
    var k = 1
    while (k <= 5) {
        print(((String(describing: k) + " ") + String(describing: (gen((k as! Int), 10) as! [Int]))))
        k = ((k + 1) as! Int)
    }
}
_ = main()
