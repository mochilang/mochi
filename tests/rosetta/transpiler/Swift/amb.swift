// Generated by Mochi transpiler v0.10.39 on 2025-07-25 09:15:09 GMT+7
import Foundation

func amb(_ wordsets: [[String]], _ res: inout [String], _ idx: Int) -> Bool {
    if (idx == Int(((wordsets).count))) {
        return true
    }
    var prev = ""
    if (idx > 0) {
        prev = String(describing: res[(idx - 1)])
    }
    var i = 0
    while (i < Int((((wordsets[idx] as! [String])).count))) {
        let w = String(describing: String(Array(wordsets[idx])[i]))
        if ((idx == 0) || (String(describing: String(Array((prev as! String))[((Int(((prev).count)) - 1) as! Int)..<Int(((prev).count))])) == String(describing: String(Array((w as! String))[0..<1])))) {
            res[idx] = (w as! String)
            if Bool(amb((wordsets as! [[String]]), &res, ((idx + 1) as! Int))) {
                return true
            }
        }
        i = ((i + 1) as! Int)
    }
    return false
}
func main() {
    let wordset = ([(["the", "that", "a"] as! [String]), (["frog", "elephant", "thing"] as! [String]), (["walked", "treaded", "grows"] as! [String]), (["slowly", "quickly"] as! [String])] as! [[String]])
    var res: [String] = ([] as! [String])
    var i = 0
    while (i < Int(((wordset).count))) {
        res = ((res + [""]) as! [String])
        i = ((i + 1) as! Int)
    }
    if Bool(amb((wordset as! [[String]]), &res, 0)) {
        var out = (("[" + String(describing: res[0])) as! String)
        var j = 1
        while (j < Int(((res).count))) {
            out = (((out + " ") + String(describing: res[j])) as! String)
            j = ((j + 1) as! Int)
        }
        out = ((out + "]") as! String)
        print(out)
    } else {
        print("No amb found")
    }
}
_ = main()
