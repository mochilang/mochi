// Generated by Mochi transpiler v0.10.39 on 2025-07-24 20:10:00 GMT+7
import Foundation

func amb(_ wordsets: [[String]], _ res: inout [String], _ idx: Int) -> Bool {
    if (Int(idx) == Int((((wordsets as! [[String]])).count))) {
        return true
    }
    var prev = ""
    if (Int(idx) > 0) {
        prev = String(res[(Int(idx) - 1)])
    }
    var i = 0
    while (Int(i) < Int((((wordsets[Int(idx)] as! [String])).count))) {
        let w = String(String(Array(wordsets[Int(idx)])[Int(i)]))
        if ((Int(idx) == 0) || (String(String(Array(String(prev))[((Int(((String(prev)).count)) - 1) as! Int)..<Int(((String(prev)).count))])) == String(String(Array(String(w))[0..<1])))) {
            res[Int(idx)] = String(w)
            if Bool(amb((wordsets as! [[String]]), &res, ((Int(idx) + 1) as! Int))) {
                return true
            }
        }
        i = ((Int(i) + 1) as! Int)
    }
    return false
}
func main() {
    let wordset = ([(["the", "that", "a"] as! [String]), (["frog", "elephant", "thing"] as! [String]), (["walked", "treaded", "grows"] as! [String]), (["slowly", "quickly"] as! [String])] as! [[String]])
    var res: [String] = ([] as! [String])
    var i = 0
    while (Int(i) < Int((((wordset as! [[String]])).count))) {
        res = (((res as! [String]) + [""]) as! [String])
        i = ((Int(i) + 1) as! Int)
    }
    if Bool(amb((wordset as! [[String]]), &res, 0)) {
        var out = (("[" + String(res[0])) as! String)
        var j = 1
        while (Int(j) < Int((((res as! [String])).count))) {
            out = (((String(out) + " ") + String(res[Int(j)])) as! String)
            j = ((Int(j) + 1) as! Int)
        }
        out = ((String(out) + "]") as! String)
        print(String(out))
    } else {
        print("No amb found")
    }
}
_ = main()
