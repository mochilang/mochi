// Generated by Mochi transpiler v0.10.52 on 2025-08-01 22:07:20 GMT+7
import Foundation

func _p(_ v: Any?) -> String {
    if let val = v { return String(describing: val) }
    return "<nil>"
}

var _nowSeed = 0
var _nowSeeded = false
func _now() -> Int {
    if !_nowSeeded {
        if let s = ProcessInfo.processInfo.environment["MOCHI_NOW_SEED"], let v = Int(s) {
            _nowSeed = v
            _nowSeeded = true
        }
    }
    if _nowSeeded {
        _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647
        return _nowSeed
    }
    return Int(Date().timeIntervalSince1970 * 1_000_000_000)
}
func shuffle(_ xs: [String]) -> [String] {
    var arr: [String] = xs
    var i: Int = (Int(((arr).count)) - 1)
    while (i > 0) {
        let j = (Int(_now()) % Int((i + 1)))
        let tmp = (arr[i] as! String)
        arr[i] = (arr[j] as! String)
        arr[j] = (tmp as! String)
        i = ((i - 1) as! Int)
    }
    return arr
}
for w in (shuffle(([("Enjoy" as! Any), ("Rosetta" as! Any), ("Code" as! Any)] as! [String])) as! [String]) {
    print(_p(w))
}
