// Generated by Mochi transpiler v0.10.56 on 2025-08-03 23:54:25 GMT+7
import Foundation

let stdout = FileHandle.standardOutput
extension FileHandle {
    func write(_ string: String) {
        if let data = string.data(using: .utf8) {
            self.write(data)
        }
    }
}

func _p(_ v: Any?) -> String {
    if let val = v {
        if let d = val as? Double {
            if d.rounded(.towardZero) == d {
                return String(Int64(d))
            }
        }
        return String(describing: val)
    }
    return "<nil>"
}

extension Double { init(_ v: Any) { if let d = v as? Double { self = d } else if let i = v as? Int { self = Double(i) } else if let i = v as? Int64 { self = Double(i) } else if let s = v as? String { self = Double(s) ?? 0 } else { self = 0 } } }
func ln(_ x: Double) -> Double {
    var k: Double = 0.0
    var v: Double = x
    while (v >= 2.0) {
        v = Double((v / 2.0))
        k = Double((k + 1.0))
    }
    while (v < 1.0) {
        v = Double((v * 2.0))
        k = Double((k - 1.0))
    }
    let z = (Double((v - 1.0)) / Double((v + 1.0)))
    var zpow: Double = z
    var sum: Double = z
    var i: Int = 3
    while (i <= 9) {
        zpow = Double(((zpow * z) * z))
        sum = Double((sum + (zpow / Double(i))))
        i = Int((i &+ 2))
    }
    let ln2 = 0.6931471805599453
    return (Double((k * ln2)) + (2.0 * sum))
}
func expf(_ x: Double) -> Double {
    var term: Double = 1.0
    var sum: Double = 1.0
    var i: Int = 1
    while (i < 20) {
        term = Double(((term * x) / Double(Double(i))))
        sum = Double((sum + term))
        i = Int((i &+ 1))
    }
    return sum
}
func powf(_ base: Double, _ exp: Double) -> Double {
    return Double(expf(Double((exp * Double(ln(Double(base)))))))
}
func lanczos7(_ z: Double) -> Double {
    let t = (z + 6.5)
    let x = ((((((((0.9999999999998099 + (676.5203681218851 / z)) - (1259.1392167224028 / Double((z + 1.0)))) + (771.3234287776531 / Double((z + 2.0)))) - (176.6150291621406 / Double((z + 3.0)))) + (12.507343278686905 / Double((z + 4.0)))) - (0.13857109526572012 / Double((z + 5.0)))) + (0.000009984369578019572 / Double((z + 6.0)))) + (0.00000015056327351493116 / Double((z + 7.0))))
    return (((2.5066282746310002 * Double(powf(Double(t), Double((z - 0.5))))) * Double(powf(2.718281828459045, Double(-t)))) * x)
}
let xs: [Double] = ([-0.5, 0.1, 0.5, 1.0, 1.5, 2.0, 3.0, 10.0, 140.0, 170.0] as! [Double])
for x in xs {
    print(_p(((String(describing: x) + " ") + String(describing: Double(lanczos7(Double(x)))))))
}
