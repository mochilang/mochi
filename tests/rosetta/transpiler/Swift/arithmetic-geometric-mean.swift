// Generated by Mochi transpiler v0.10.40 on 2025-07-26 05:32:31 GMT+7
import Foundation

func abs(_ x: Double) -> Double {
    if (x < 0.0) {
        return (-x as! Double)
    }
    return (x as! Double)
}
func sqrtApprox(_ x: Double) -> Double {
    var guess = x
    var i = 0
    while (i < 20) {
        guess = (((guess + (x / guess)) / 2.0) as! Double)
        i = ((i + 1) as! Int)
    }
    return (guess as! Double)
}
func agm(_ a: Double, _ g: Double) -> Double {
    var a = a
    var g = g
    let eps = 0.00000000000001
    while (abs(((a - g) as! Double)) > (abs((a as! Double)) * eps)) {
        let newA = ((a + g) / 2.0)
        let newG = sqrtApprox(((a * g) as! Double))
        a = (newA as! Double)
        g = (newG as! Double)
    }
    return (a as! Double)
}
func main() {
    print(String(describing: agm(1.0, ((1.0 / sqrtApprox(2.0)) as! Double))))
}
_ = main()
