exit status 1
/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:60:33: warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
58 | }
59 | let z: Church = zero
60 | let three = succ((succ((succ((z as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?))
   |                                 `- warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
61 | let four = succ((three as! ((Any?) -> Any?) -> (Any?) -> Any?))
62 | print(_p(("three        -> " + _p(Int(toInt((three as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:60:74: warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
58 | }
59 | let z: Church = zero
60 | let three = succ((succ((succ((z as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?))
   |                                                                          `- warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
61 | let four = succ((three as! ((Any?) -> Any?) -> (Any?) -> Any?))
62 | print(_p(("three        -> " + _p(Int(toInt((three as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:60:115: warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
58 | }
59 | let z: Church = zero
60 | let three = succ((succ((succ((z as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?))
   |                                                                                                                   `- warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
61 | let four = succ((three as! ((Any?) -> Any?) -> (Any?) -> Any?))
62 | print(_p(("three        -> " + _p(Int(toInt((three as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:61:24: warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
59 | let z: Church = zero
60 | let three = succ((succ((succ((z as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?))
61 | let four = succ((three as! ((Any?) -> Any?) -> (Any?) -> Any?))
   |                        `- warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
62 | print(_p(("three        -> " + _p(Int(toInt((three as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
63 | print(_p(("four         -> " + _p(Int(toInt((four as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:62:52: warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
60 | let three = succ((succ((succ((z as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?))
61 | let four = succ((three as! ((Any?) -> Any?) -> (Any?) -> Any?))
62 | print(_p(("three        -> " + _p(Int(toInt((three as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
   |                                                    `- warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
63 | print(_p(("four         -> " + _p(Int(toInt((four as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
64 | print(_p(("three + four -> " + _p(Int(toInt((add((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:63:51: warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
61 | let four = succ((three as! ((Any?) -> Any?) -> (Any?) -> Any?))
62 | print(_p(("three        -> " + _p(Int(toInt((three as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
63 | print(_p(("four         -> " + _p(Int(toInt((four as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
   |                                                   `- warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
64 | print(_p(("three + four -> " + _p(Int(toInt((add((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
65 | print(_p(("three * four -> " + _p(Int(toInt((mul((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:64:57: warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
62 | print(_p(("three        -> " + _p(Int(toInt((three as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
63 | print(_p(("four         -> " + _p(Int(toInt((four as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
64 | print(_p(("three + four -> " + _p(Int(toInt((add((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
   |                                                         `- warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
65 | print(_p(("three * four -> " + _p(Int(toInt((mul((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
66 | print(_p(("three ^ four -> " + _p(Int(toInt((pow((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:64:104: warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
62 | print(_p(("three        -> " + _p(Int(toInt((three as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
63 | print(_p(("four         -> " + _p(Int(toInt((four as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
64 | print(_p(("three + four -> " + _p(Int(toInt((add((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
   |                                                                                                        `- warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
65 | print(_p(("three * four -> " + _p(Int(toInt((mul((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
66 | print(_p(("three ^ four -> " + _p(Int(toInt((pow((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:64:145: warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
62 | print(_p(("three        -> " + _p(Int(toInt((three as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
63 | print(_p(("four         -> " + _p(Int(toInt((four as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
64 | print(_p(("three + four -> " + _p(Int(toInt((add((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
   |                                                                                                                                                 `- warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
65 | print(_p(("three * four -> " + _p(Int(toInt((mul((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
66 | print(_p(("three ^ four -> " + _p(Int(toInt((pow((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:65:57: warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
63 | print(_p(("four         -> " + _p(Int(toInt((four as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
64 | print(_p(("three + four -> " + _p(Int(toInt((add((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
65 | print(_p(("three * four -> " + _p(Int(toInt((mul((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
   |                                                         `- warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
66 | print(_p(("three ^ four -> " + _p(Int(toInt((pow((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
67 | print(_p(("four ^ three -> " + _p(Int(toInt((pow((four as! ((Any?) -> Any?) -> (Any?) -> Any?), (three as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:65:104: warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
63 | print(_p(("four         -> " + _p(Int(toInt((four as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
64 | print(_p(("three + four -> " + _p(Int(toInt((add((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
65 | print(_p(("three * four -> " + _p(Int(toInt((mul((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
   |                                                                                                        `- warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
66 | print(_p(("three ^ four -> " + _p(Int(toInt((pow((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
67 | print(_p(("four ^ three -> " + _p(Int(toInt((pow((four as! ((Any?) -> Any?) -> (Any?) -> Any?), (three as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:65:145: warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
63 | print(_p(("four         -> " + _p(Int(toInt((four as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
64 | print(_p(("three + four -> " + _p(Int(toInt((add((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
65 | print(_p(("three * four -> " + _p(Int(toInt((mul((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
   |                                                                                                                                                 `- warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
66 | print(_p(("three ^ four -> " + _p(Int(toInt((pow((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
67 | print(_p(("four ^ three -> " + _p(Int(toInt((pow((four as! ((Any?) -> Any?) -> (Any?) -> Any?), (three as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:66:57: warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
64 | print(_p(("three + four -> " + _p(Int(toInt((add((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
65 | print(_p(("three * four -> " + _p(Int(toInt((mul((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
66 | print(_p(("three ^ four -> " + _p(Int(toInt((pow((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
   |                                                         `- warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
67 | print(_p(("four ^ three -> " + _p(Int(toInt((pow((four as! ((Any?) -> Any?) -> (Any?) -> Any?), (three as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
68 | print(_p(("5 -> five    -> " + _p(Int(toInt((intToChurch(5) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:66:104: warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
64 | print(_p(("three + four -> " + _p(Int(toInt((add((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
65 | print(_p(("three * four -> " + _p(Int(toInt((mul((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
66 | print(_p(("three ^ four -> " + _p(Int(toInt((pow((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
   |                                                                                                        `- warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
67 | print(_p(("four ^ three -> " + _p(Int(toInt((pow((four as! ((Any?) -> Any?) -> (Any?) -> Any?), (three as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
68 | print(_p(("5 -> five    -> " + _p(Int(toInt((intToChurch(5) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:66:145: warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
64 | print(_p(("three + four -> " + _p(Int(toInt((add((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
65 | print(_p(("three * four -> " + _p(Int(toInt((mul((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
66 | print(_p(("three ^ four -> " + _p(Int(toInt((pow((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
   |                                                                                                                                                 `- warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
67 | print(_p(("four ^ three -> " + _p(Int(toInt((pow((four as! ((Any?) -> Any?) -> (Any?) -> Any?), (three as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
68 | print(_p(("5 -> five    -> " + _p(Int(toInt((intToChurch(5) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:67:56: warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
65 | print(_p(("three * four -> " + _p(Int(toInt((mul((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
66 | print(_p(("three ^ four -> " + _p(Int(toInt((pow((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
67 | print(_p(("four ^ three -> " + _p(Int(toInt((pow((four as! ((Any?) -> Any?) -> (Any?) -> Any?), (three as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
   |                                                        `- warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
68 | print(_p(("5 -> five    -> " + _p(Int(toInt((intToChurch(5) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
69 | 

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:67:104: warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
65 | print(_p(("three * four -> " + _p(Int(toInt((mul((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
66 | print(_p(("three ^ four -> " + _p(Int(toInt((pow((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
67 | print(_p(("four ^ three -> " + _p(Int(toInt((pow((four as! ((Any?) -> Any?) -> (Any?) -> Any?), (three as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
   |                                                                                                        `- warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
68 | print(_p(("5 -> five    -> " + _p(Int(toInt((intToChurch(5) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
69 | 

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:67:145: warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
65 | print(_p(("three * four -> " + _p(Int(toInt((mul((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
66 | print(_p(("three ^ four -> " + _p(Int(toInt((pow((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
67 | print(_p(("four ^ three -> " + _p(Int(toInt((pow((four as! ((Any?) -> Any?) -> (Any?) -> Any?), (three as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
   |                                                                                                                                                 `- warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
68 | print(_p(("5 -> five    -> " + _p(Int(toInt((intToChurch(5) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
69 | 

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:68:61: warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
66 | print(_p(("three ^ four -> " + _p(Int(toInt((pow((three as! ((Any?) -> Any?) -> (Any?) -> Any?), (four as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
67 | print(_p(("four ^ three -> " + _p(Int(toInt((pow((four as! ((Any?) -> Any?) -> (Any?) -> Any?), (three as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
68 | print(_p(("5 -> five    -> " + _p(Int(toInt((intToChurch(5) as! ((Any?) -> Any?) -> (Any?) -> Any?)))))))
   |                                                             `- warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
69 | 

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:19:20: warning: cast from '(Any?) -> Any?' to unrelated type '(Any?) -> Any?' always fails
17 |     return { (f: Fn) -> Fn in
18 |     return { (x: Any?) -> Any? in
19 |     return f((c((f as! (Any?) -> Any?))(x) as! Any?))
   |                    `- warning: cast from '(Any?) -> Any?' to unrelated type '(Any?) -> Any?' always fails
20 | }
21 | }

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:19:44: warning: forced cast of 'Any?' to same type has no effect
17 |     return { (f: Fn) -> Fn in
18 |     return { (x: Any?) -> Any? in
19 |     return f((c((f as! (Any?) -> Any?))(x) as! Any?))
   |                                            `- warning: forced cast of 'Any?' to same type has no effect
20 | }
21 | }

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:26:17: warning: cast from '(Any?) -> Any?' to unrelated type '(Any?) -> Any?' always fails
24 |     return { (f: Fn) -> Fn in
25 |     return { (x: Any?) -> Any? in
26 |     return c((f as! (Any?) -> Any?))(d((f as! (Any?) -> Any?))(x))
   |                 `- warning: cast from '(Any?) -> Any?' to unrelated type '(Any?) -> Any?' always fails
27 | }
28 | }

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:26:43: warning: cast from '(Any?) -> Any?' to unrelated type '(Any?) -> Any?' always fails
24 |     return { (f: Fn) -> Fn in
25 |     return { (x: Any?) -> Any? in
26 |     return c((f as! (Any?) -> Any?))(d((f as! (Any?) -> Any?))(x))
   |                                           `- warning: cast from '(Any?) -> Any?' to unrelated type '(Any?) -> Any?' always fails
27 | }
28 | }

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:33:20: warning: cast from '(Any?) -> Any?' to unrelated type '(Any?) -> Any?' always fails
31 |     return { (f: Fn) -> Fn in
32 |     return { (x: Any?) -> Any? in
33 |     return c((d((f as! (Any?) -> Any?)) as! (Any?) -> Any?))(x)
   |                    `- warning: cast from '(Any?) -> Any?' to unrelated type '(Any?) -> Any?' always fails
34 | }
35 | }

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:33:41: warning: forced cast of '(Any?) -> Any?' to same type has no effect
31 |     return { (f: Fn) -> Fn in
32 |     return { (x: Any?) -> Any? in
33 |     return c((d((f as! (Any?) -> Any?)) as! (Any?) -> Any?))(x)
   |                                         `- warning: forced cast of '(Any?) -> Any?' to same type has no effect
34 | }
35 | }

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:38:32: warning: cast from '((Any?) -> Any?) -> Fn' (aka '((Optional<Any>) -> Optional<Any>) -> (Optional<Any>) -> Optional<Any>') to unrelated type '((Any?) -> Any?) -> (Any?) -> Any?' always fails
36 | }
37 | func pow(_ c: Church, _ d: Church) -> Church {
38 |     var di: Int = Int(toInt((d as! ((Any?) -> Any?) -> (Any?) -> Any?)))
   |                                `- warning: cast from '((Any?) -> Any?) -> Fn' (aka '((Optional<Any>) -> Optional<Any>) -> (Optional<Any>) -> Optional<Any>') to unrelated type '((Any?) -> Any?) -> (Any?) -> Any?' always fails
39 |     var prod: ((Any?) -> Any?) -> (Any?) -> Any? = c
40 |     var i: Int = 1

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:39:52: error: using non-escaping parameter 'c' in a context expecting an @escaping closure
35 | }
36 | }
37 | func pow(_ c: Church, _ d: Church) -> Church {
   |            `- note: parameter 'c' is implicitly non-escaping
38 |     var di: Int = Int(toInt((d as! ((Any?) -> Any?) -> (Any?) -> Any?)))
39 |     var prod: ((Any?) -> Any?) -> (Any?) -> Any? = c
   |                                                    `- error: using non-escaping parameter 'c' in a context expecting an @escaping closure
40 |     var i: Int = 1
41 |     while (i < di) {

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:42:27: warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
40 |     var i: Int = 1
41 |     while (i < di) {
42 |         prod = (mul((prod as! ((Any?) -> Any?) -> (Any?) -> Any?), (c as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)
   |                           `- warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
43 |         i = ((i + 1) as! Int)
44 |     }

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:42:71: warning: cast from '((Any?) -> Any?) -> Fn' (aka '((Optional<Any>) -> Optional<Any>) -> (Optional<Any>) -> Optional<Any>') to unrelated type '((Any?) -> Any?) -> (Any?) -> Any?' always fails
40 |     var i: Int = 1
41 |     while (i < di) {
42 |         prod = (mul((prod as! ((Any?) -> Any?) -> (Any?) -> Any?), (c as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)
   |                                                                       `- warning: cast from '((Any?) -> Any?) -> Fn' (aka '((Optional<Any>) -> Optional<Any>) -> (Optional<Any>) -> Optional<Any>') to unrelated type '((Any?) -> Any?) -> (Any?) -> Any?' always fails
43 |         i = ((i + 1) as! Int)
44 |     }

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:42:112: warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
40 |     var i: Int = 1
41 |     while (i < di) {
42 |         prod = (mul((prod as! ((Any?) -> Any?) -> (Any?) -> Any?), (c as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)
   |                                                                                                                `- warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
43 |         i = ((i + 1) as! Int)
44 |     }

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:43:22: warning: forced cast of 'Int' to same type has no effect
41 |     while (i < di) {
42 |         prod = (mul((prod as! ((Any?) -> Any?) -> (Any?) -> Any?), (c as! ((Any?) -> Any?) -> (Any?) -> Any?)) as! ((Any?) -> Any?) -> (Any?) -> Any?)
43 |         i = ((i + 1) as! Int)
   |                      `- warning: forced cast of 'Int' to same type has no effect
44 |     }
45 |     return prod

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:48:31: warning: forced cast from 'Int' to 'Any?' always succeeds; did you mean to use 'as'?
46 | }
47 | func incr(_ i: Any?) -> Any? {
48 |     return (((i as! Int) + 1) as! Any?)
   |                               `- warning: forced cast from 'Int' to 'Any?' always succeeds; did you mean to use 'as'?
49 | }
50 | func toInt(_ c: Church) -> Int {

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:51:21: warning: forced cast of '(Any?) -> Any?' to same type has no effect
49 | }
50 | func toInt(_ c: Church) -> Int {
51 |     return (c((incr as! (Any?) -> Any?))(0) as! Int)
   |                     `- warning: forced cast of '(Any?) -> Any?' to same type has no effect
52 | }
53 | func intToChurch(_ i: Int) -> Church {

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:57:39: warning: forced cast of 'Int' to same type has no effect
55 |         return zero
56 |     }
57 |     return succ((intToChurch(((i - 1) as! Int)) as! ((Any?) -> Any?) -> (Any?) -> Any?))
   |                                       `- warning: forced cast of 'Int' to same type has no effect
58 | }
59 | let z: Church = zero

/tmp/TestSwiftTranspiler_Rosetta_Golden772900820/001/main.swift:57:49: warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
55 |         return zero
56 |     }
57 |     return succ((intToChurch(((i - 1) as! Int)) as! ((Any?) -> Any?) -> (Any?) -> Any?))
   |                                                 `- warning: forced cast of '((Any?) -> Any?) -> (Any?) -> Any?' to same type has no effect
58 | }
59 | let z: Church = zero
