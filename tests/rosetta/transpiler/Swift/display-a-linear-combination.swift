// Generated by Mochi transpiler v0.10.41 on 2025-07-26 19:32:55 GMT+7
import Foundation

func _p(_ v: Any?) -> String {
    if let val = v { return String(describing: val) }
    return "<nil>"
}

func padRight(_ s: String, _ w: Int) -> String {
    var r = s
    while (Int(((r).count)) < w) {
        r = String((r + " "))
    }
    return String(r)
}
func linearCombo(_ c: [Int]) -> String {
    var out = ""
    var i = 0
    while (i < Int(((c).count))) {
        let n = (c[i] as! Int)
        if (n != 0) {
            var op = ""
            if ((n < 0) && (Int(((out).count)) == 0)) {
                op = "-"
            } else if (n < 0) {
                op = " - "
            } else if ((n > 0) && (Int(((out).count)) == 0)) {
                op = ""
            } else {
                op = " + "
            }
            
            
            var av = n
            if (av < 0) {
                av = Int(-av)
            }
            var coeff = (_p(av) + "*")
            if (av == 1) {
                coeff = ""
            }
            out = String((((((out + op) + coeff) + "e(") + _p((i + 1))) + ")"))
        }
        i = Int((i + 1))
    }
    if (Int(((out).count)) == 0) {
        return "0"
    }
    return String(out)
}
func main() {
    let combos = ([([1, 2, 3] as! [Int]), ([0, 1, 2, 3] as! [Int]), ([1, 0, 3, 4] as! [Int]), ([1, 2, 0] as! [Int]), ([0, 0, 0] as! [Int]), ([0] as! [Int]), ([1, 1, 1] as! [Int]), ([-1, -1, -1] as! [Int]), ([-1, -2, 0, -3] as! [Int]), ([-1] as! [Int])] as! [[Int]])
    var idx = 0
    while (idx < Int(((combos).count))) {
        let c = (combos[idx] as! [Int])
        var t = "["
        var j = 0
        while (j < Int(((c).count))) {
            t = String((t + _p((c[j] as! Int))))
            if (j < (Int(((c).count)) - 1)) {
                t = String((t + ", "))
            }
            j = Int((j + 1))
        }
        t = String((t + "]"))
        let lc = String(describing: linearCombo((c as! [Int])))
        print(_p(((String(describing: padRight(String(t), 15)) + "  ->  ") + lc)))
        idx = Int((idx + 1))
    }
}
_ = main()
