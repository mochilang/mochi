exit status 1
/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:160:1: warning: using '_' to ignore the result of a Void-returning function is redundant
158 |     _ = prettyPrint(String(dna), 50)
159 | }
160 | _ = main()
    | `- warning: using '_' to ignore the result of a Void-returning function is redundant
161 | 

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:28:44: warning: forced cast of '[Int]' to same type has no effect
 26 |     var i: Int = 0
 27 |     while (i < le) {
 28 |         var r: [Int] = (randInt(Int(s), 4) as! [Int])
    |                                            `- warning: forced cast of '[Int]' to same type has no effect
 29 |         s = (r[0] as! Int)
 30 |         let idx = (r[1] as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:29:19: warning: forced cast of 'Int' to same type has no effect
 27 |     while (i < le) {
 28 |         var r: [Int] = (randInt(Int(s), 4) as! [Int])
 29 |         s = (r[0] as! Int)
    |                   `- warning: forced cast of 'Int' to same type has no effect
 30 |         let idx = (r[1] as! Int)
 31 |         out = String((out + String(describing: String(Array(String(describing: String(bases)))[Int(idx)..<Int((idx + 1))]))))

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:30:25: warning: forced cast of 'Int' to same type has no effect
 28 |         var r: [Int] = (randInt(Int(s), 4) as! [Int])
 29 |         s = (r[0] as! Int)
 30 |         let idx = (r[1] as! Int)
    |                         `- warning: forced cast of 'Int' to same type has no effect
 31 |         out = String((out + String(describing: String(Array(String(describing: String(bases)))[Int(idx)..<Int((idx + 1))]))))
 32 |         i = Int((i + 1))

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:28:13: warning: variable 'r' was never mutated; consider changing to 'let' constant
 26 |     var i: Int = 0
 27 |     while (i < le) {
 28 |         var r: [Int] = (randInt(Int(s), 4) as! [Int])
    |             `- warning: variable 'r' was never mutated; consider changing to 'let' constant
 29 |         s = (r[0] as! Int)
 30 |         let idx = (r[1] as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:40:46: warning: forced cast of '[Int]' to same type has no effect
 38 |     let bases = "ACGT"
 39 |     let le = Int(((dna).count))
 40 |     var r: [Int] = (randInt(Int(s), Int(le)) as! [Int])
    |                                              `- warning: forced cast of '[Int]' to same type has no effect
 41 |     s = (r[0] as! Int)
 42 |     let p = (r[1] as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:41:15: warning: forced cast of 'Int' to same type has no effect
 39 |     let le = Int(((dna).count))
 40 |     var r: [Int] = (randInt(Int(s), Int(le)) as! [Int])
 41 |     s = (r[0] as! Int)
    |               `- warning: forced cast of 'Int' to same type has no effect
 42 |     let p = (r[1] as! Int)
 43 |     r = (randInt(Int(s), 300) as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:42:19: warning: forced cast of 'Int' to same type has no effect
 40 |     var r: [Int] = (randInt(Int(s), Int(le)) as! [Int])
 41 |     s = (r[0] as! Int)
 42 |     let p = (r[1] as! Int)
    |                   `- warning: forced cast of 'Int' to same type has no effect
 43 |     r = (randInt(Int(s), 300) as! [Int])
 44 |     s = (r[0] as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:43:31: warning: forced cast of '[Int]' to same type has no effect
 41 |     s = (r[0] as! Int)
 42 |     let p = (r[1] as! Int)
 43 |     r = (randInt(Int(s), 300) as! [Int])
    |                               `- warning: forced cast of '[Int]' to same type has no effect
 44 |     s = (r[0] as! Int)
 45 |     let x = (r[1] as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:44:15: warning: forced cast of 'Int' to same type has no effect
 42 |     let p = (r[1] as! Int)
 43 |     r = (randInt(Int(s), 300) as! [Int])
 44 |     s = (r[0] as! Int)
    |               `- warning: forced cast of 'Int' to same type has no effect
 45 |     let x = (r[1] as! Int)
 46 |     var arr: [String] = ([] as! [String])

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:45:19: warning: forced cast of 'Int' to same type has no effect
 43 |     r = (randInt(Int(s), 300) as! [Int])
 44 |     s = (r[0] as! Int)
 45 |     let x = (r[1] as! Int)
    |                   `- warning: forced cast of 'Int' to same type has no effect
 46 |     var arr: [String] = ([] as! [String])
 47 |     var i: Int = 0

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:52:19: warning: forced cast of 'Int' to same type has no effect
 50 |         i = Int((i + 1))
 51 |     }
 52 |     if (x < (w[0] as! Int)) {
    |                   `- warning: forced cast of 'Int' to same type has no effect
 53 |         r = (randInt(Int(s), 4) as! [Int])
 54 |         s = (r[0] as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:53:33: warning: forced cast of '[Int]' to same type has no effect
 51 |     }
 52 |     if (x < (w[0] as! Int)) {
 53 |         r = (randInt(Int(s), 4) as! [Int])
    |                                 `- warning: forced cast of '[Int]' to same type has no effect
 54 |         s = (r[0] as! Int)
 55 |         let idx = (r[1] as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:54:19: warning: forced cast of 'Int' to same type has no effect
 52 |     if (x < (w[0] as! Int)) {
 53 |         r = (randInt(Int(s), 4) as! [Int])
 54 |         s = (r[0] as! Int)
    |                   `- warning: forced cast of 'Int' to same type has no effect
 55 |         let idx = (r[1] as! Int)
 56 |         let b = String(describing: String(Array(String(describing: String(bases)))[Int(idx)..<Int((idx + 1))]))

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:55:25: warning: forced cast of 'Int' to same type has no effect
 53 |         r = (randInt(Int(s), 4) as! [Int])
 54 |         s = (r[0] as! Int)
 55 |         let idx = (r[1] as! Int)
    |                         `- warning: forced cast of 'Int' to same type has no effect
 56 |         let b = String(describing: String(Array(String(describing: String(bases)))[Int(idx)..<Int((idx + 1))]))
 57 |         print(_p((((((("  Change @" + String(describing: padLeft(String(_p(p)), 3))) + " '") + (arr[p] as! String)) + "' to '") + b) + "'")))

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:57:104: warning: forced cast of 'String' to same type has no effect
 55 |         let idx = (r[1] as! Int)
 56 |         let b = String(describing: String(Array(String(describing: String(bases)))[Int(idx)..<Int((idx + 1))]))
 57 |         print(_p((((((("  Change @" + String(describing: padLeft(String(_p(p)), 3))) + " '") + (arr[p] as! String)) + "' to '") + b) + "'")))
    |                                                                                                        `- warning: forced cast of 'String' to same type has no effect
 58 |         arr[p] = String(b)
 59 |     } else if (x < ((w[0] as! Int) + (w[1] as! Int))) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:59:27: warning: forced cast of 'Int' to same type has no effect
 57 |         print(_p((((((("  Change @" + String(describing: padLeft(String(_p(p)), 3))) + " '") + (arr[p] as! String)) + "' to '") + b) + "'")))
 58 |         arr[p] = String(b)
 59 |     } else if (x < ((w[0] as! Int) + (w[1] as! Int))) {
    |                           `- warning: forced cast of 'Int' to same type has no effect
 60 |         print(_p((((("  Delete @" + String(describing: padLeft(String(_p(p)), 3))) + " '") + (arr[p] as! String)) + "'")))
 61 |         var j: Int = p

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:59:44: warning: forced cast of 'Int' to same type has no effect
 57 |         print(_p((((((("  Change @" + String(describing: padLeft(String(_p(p)), 3))) + " '") + (arr[p] as! String)) + "' to '") + b) + "'")))
 58 |         arr[p] = String(b)
 59 |     } else if (x < ((w[0] as! Int) + (w[1] as! Int))) {
    |                                            `- warning: forced cast of 'Int' to same type has no effect
 60 |         print(_p((((("  Delete @" + String(describing: padLeft(String(_p(p)), 3))) + " '") + (arr[p] as! String)) + "'")))
 61 |         var j: Int = p

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:60:102: warning: forced cast of 'String' to same type has no effect
 58 |         arr[p] = String(b)
 59 |     } else if (x < ((w[0] as! Int) + (w[1] as! Int))) {
 60 |         print(_p((((("  Delete @" + String(describing: padLeft(String(_p(p)), 3))) + " '") + (arr[p] as! String)) + "'")))
    |                                                                                                      `- warning: forced cast of 'String' to same type has no effect
 61 |         var j: Int = p
 62 |         while (j < (Int(((arr).count)) - 1)) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:63:36: warning: forced cast of 'String' to same type has no effect
 61 |         var j: Int = p
 62 |         while (j < (Int(((arr).count)) - 1)) {
 63 |             arr[j] = (arr[(j + 1)] as! String)
    |                                    `- warning: forced cast of 'String' to same type has no effect
 64 |             j = Int((j + 1))
 65 |         }

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:68:33: warning: forced cast of '[Int]' to same type has no effect
 66 |         arr = (Array(arr[0..<(Int(((arr).count)) - 1)]) as! [String])
 67 |     } else {
 68 |         r = (randInt(Int(s), 4) as! [Int])
    |                                 `- warning: forced cast of '[Int]' to same type has no effect
 69 |         s = (r[0] as! Int)
 70 |         let idx2 = (r[1] as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:69:19: warning: forced cast of 'Int' to same type has no effect
 67 |     } else {
 68 |         r = (randInt(Int(s), 4) as! [Int])
 69 |         s = (r[0] as! Int)
    |                   `- warning: forced cast of 'Int' to same type has no effect
 70 |         let idx2 = (r[1] as! Int)
 71 |         let b = String(describing: String(Array(String(describing: String(bases)))[Int(idx2)..<Int((idx2 + 1))]))

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:70:26: warning: forced cast of 'Int' to same type has no effect
 68 |         r = (randInt(Int(s), 4) as! [Int])
 69 |         s = (r[0] as! Int)
 70 |         let idx2 = (r[1] as! Int)
    |                          `- warning: forced cast of 'Int' to same type has no effect
 71 |         let b = String(describing: String(Array(String(describing: String(bases)))[Int(idx2)..<Int((idx2 + 1))]))
 72 |         arr = ((arr + [""]) as! [String])

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:75:36: warning: forced cast of 'String' to same type has no effect
 73 |         var j: Int = (Int(((arr).count)) - 1)
 74 |         while (j > p) {
 75 |             arr[j] = (arr[(j - 1)] as! String)
    |                                    `- warning: forced cast of 'String' to same type has no effect
 76 |             j = Int((j - 1))
 77 |         }

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:85:37: warning: forced cast of 'String' to same type has no effect
 83 |     i = 0
 84 |     while (i < Int(((arr).count))) {
 85 |         out = String((out + (arr[i] as! String)))
    |                                     `- warning: forced cast of 'String' to same type has no effect
 86 |         i = Int((i + 1))
 87 |     }

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:137:49: warning: forced cast of 'Int' to same type has no effect
135 | }
136 | func wstring(_ w: [Int]) -> String {
137 |     return String((((((("  Change: " + _p((w[0] as! Int))) + "\n  Delete: ") + _p((w[1] as! Int))) + "\n  Insert: ") + _p((w[2] as! Int))) + "\n"))
    |                                                 `- warning: forced cast of 'Int' to same type has no effect
138 | }
139 | func main() {

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:137:89: warning: forced cast of 'Int' to same type has no effect
135 | }
136 | func wstring(_ w: [Int]) -> String {
137 |     return String((((((("  Change: " + _p((w[0] as! Int))) + "\n  Delete: ") + _p((w[1] as! Int))) + "\n  Insert: ") + _p((w[2] as! Int))) + "\n"))
    |                                                                                         `- warning: forced cast of 'Int' to same type has no effect
138 | }
139 | func main() {

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:137:129: warning: forced cast of 'Int' to same type has no effect
135 | }
136 | func wstring(_ w: [Int]) -> String {
137 |     return String((((((("  Change: " + _p((w[0] as! Int))) + "\n  Delete: ") + _p((w[1] as! Int))) + "\n  Insert: ") + _p((w[2] as! Int))) + "\n"))
    |                                                                                                                                 `- warning: forced cast of 'Int' to same type has no effect
138 | }
139 | func main() {

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:141:47: warning: forced cast of '[Any]' to same type has no effect
139 | func main() {
140 |     var seed: Int = 1
141 |     var res: [Any] = (makeSeq(Int(seed), 250) as! [Any])
    |                                               `- warning: forced cast of '[Any]' to same type has no effect
142 |     seed = Int(((res as! [Any])[0] as! Any))
143 |     var dna: String = ((res as! [Any])[1] as! String)

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:142:12: error: initializer 'init(_:)' requires that 'T' conform to 'BinaryInteger'
140 |     var seed: Int = 1
141 |     var res: [Any] = (makeSeq(Int(seed), 250) as! [Any])
142 |     seed = Int(((res as! [Any])[0] as! Any))
    |            `- error: initializer 'init(_:)' requires that 'T' conform to 'BinaryInteger'
143 |     var dna: String = ((res as! [Any])[1] as! String)
144 |     _ = prettyPrint(String(dna), 50)

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:142:22: warning: forced cast of '[Any]' to same type has no effect
140 |     var seed: Int = 1
141 |     var res: [Any] = (makeSeq(Int(seed), 250) as! [Any])
142 |     seed = Int(((res as! [Any])[0] as! Any))
    |                      `- warning: forced cast of '[Any]' to same type has no effect
143 |     var dna: String = ((res as! [Any])[1] as! String)
144 |     _ = prettyPrint(String(dna), 50)

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:142:36: warning: forced cast of 'Any' to same type has no effect
140 |     var seed: Int = 1
141 |     var res: [Any] = (makeSeq(Int(seed), 250) as! [Any])
142 |     seed = Int(((res as! [Any])[0] as! Any))
    |                                    `- warning: forced cast of 'Any' to same type has no effect
143 |     var dna: String = ((res as! [Any])[1] as! String)
144 |     _ = prettyPrint(String(dna), 50)

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:143:29: warning: forced cast of '[Any]' to same type has no effect
141 |     var res: [Any] = (makeSeq(Int(seed), 250) as! [Any])
142 |     seed = Int(((res as! [Any])[0] as! Any))
143 |     var dna: String = ((res as! [Any])[1] as! String)
    |                             `- warning: forced cast of '[Any]' to same type has no effect
144 |     _ = prettyPrint(String(dna), 50)
145 |     let muts = 10

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:144:5: warning: using '_' to ignore the result of a Void-returning function is redundant
142 |     seed = Int(((res as! [Any])[0] as! Any))
143 |     var dna: String = ((res as! [Any])[1] as! String)
144 |     _ = prettyPrint(String(dna), 50)
    |     `- warning: using '_' to ignore the result of a Void-returning function is redundant
145 |     let muts = 10
146 |     let w = ([100, 100, 100] as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:148:44: warning: forced cast of '[Int]' to same type has no effect
146 |     let w = ([100, 100, 100] as! [Int])
147 |     print(_p("\nWEIGHTS (ex 300):"))
148 |     print(_p(String(describing: wstring((w as! [Int])))))
    |                                            `- warning: forced cast of '[Int]' to same type has no effect
149 |     print(_p((("MUTATIONS (" + _p(muts)) + "):")))
150 |     var i: Int = 0

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:152:50: warning: forced cast of '[Int]' to same type has no effect
150 |     var i: Int = 0
151 |     while (i < muts) {
152 |         res = (mutate(Int(seed), String(dna), (w as! [Int])) as! [Any])
    |                                                  `- warning: forced cast of '[Int]' to same type has no effect
153 |         seed = Int(((res as! [Any])[0] as! Any))
154 |         dna = ((res as! [Any])[1] as! String)

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:152:62: warning: forced cast of '[Any]' to same type has no effect
150 |     var i: Int = 0
151 |     while (i < muts) {
152 |         res = (mutate(Int(seed), String(dna), (w as! [Int])) as! [Any])
    |                                                              `- warning: forced cast of '[Any]' to same type has no effect
153 |         seed = Int(((res as! [Any])[0] as! Any))
154 |         dna = ((res as! [Any])[1] as! String)

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:153:16: error: initializer 'init(_:)' requires that 'T' conform to 'BinaryInteger'
151 |     while (i < muts) {
152 |         res = (mutate(Int(seed), String(dna), (w as! [Int])) as! [Any])
153 |         seed = Int(((res as! [Any])[0] as! Any))
    |                `- error: initializer 'init(_:)' requires that 'T' conform to 'BinaryInteger'
154 |         dna = ((res as! [Any])[1] as! String)
155 |         i = Int((i + 1))

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:153:26: warning: forced cast of '[Any]' to same type has no effect
151 |     while (i < muts) {
152 |         res = (mutate(Int(seed), String(dna), (w as! [Int])) as! [Any])
153 |         seed = Int(((res as! [Any])[0] as! Any))
    |                          `- warning: forced cast of '[Any]' to same type has no effect
154 |         dna = ((res as! [Any])[1] as! String)
155 |         i = Int((i + 1))

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:153:40: warning: forced cast of 'Any' to same type has no effect
151 |     while (i < muts) {
152 |         res = (mutate(Int(seed), String(dna), (w as! [Int])) as! [Any])
153 |         seed = Int(((res as! [Any])[0] as! Any))
    |                                        `- warning: forced cast of 'Any' to same type has no effect
154 |         dna = ((res as! [Any])[1] as! String)
155 |         i = Int((i + 1))

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:154:21: warning: forced cast of '[Any]' to same type has no effect
152 |         res = (mutate(Int(seed), String(dna), (w as! [Int])) as! [Any])
153 |         seed = Int(((res as! [Any])[0] as! Any))
154 |         dna = ((res as! [Any])[1] as! String)
    |                     `- warning: forced cast of '[Any]' to same type has no effect
155 |         i = Int((i + 1))
156 |     }

/tmp/TestSwiftTranspiler_Rosetta_Golden2656702047/001/main.swift:158:5: warning: using '_' to ignore the result of a Void-returning function is redundant
156 |     }
157 |     print(_p(""))
158 |     _ = prettyPrint(String(dna), 50)
    |     `- warning: using '_' to ignore the result of a Void-returning function is redundant
159 | }
160 | _ = main()
