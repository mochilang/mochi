exit status 1
/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:394:1: warning: using '_' to ignore the result of a Void-returning function is redundant
392 | print(out)
393 | }
394 | _ = main()
    | `- warning: using '_' to ignore the result of a Void-returning function is redundant
395 | 

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:14:22: warning: forced cast of 'Int' to same type has no effect
 12 |     while ((n > 1) && (Int(a[(n - 1)]) == 0)) {
 13 |         a = (Array(a[0..<(n - 1)]) as! [Int])
 14 |         n = ((n - 1) as! Int)
    |                      `- warning: forced cast of 'Int' to same type has no effect
 15 |     }
 16 |     return (a as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:16:15: warning: forced cast of '[Int]' to same type has no effect
 14 |         n = ((n - 1) as! Int)
 15 |     }
 16 |     return (a as! [Int])
    |               `- warning: forced cast of '[Int]' to same type has no effect
 17 | }
 18 | func bigFromInt(_ x: Int) -> [Int] {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:23:16: warning: forced cast of 'Int' to same type has no effect
 21 |     }
 22 |     var digits: [Int] = ([] as! [Int])
 23 |     var n = (x as! Int)
    |                `- warning: forced cast of 'Int' to same type has no effect
 24 |     while (n > 0) {
 25 |         digits = ((digits + [(n % 10)]) as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:26:23: warning: forced cast of 'Int' to same type has no effect
 24 |     while (n > 0) {
 25 |         digits = ((digits + [(n % 10)]) as! [Int])
 26 |         n = ((n / 10) as! Int)
    |                       `- warning: forced cast of 'Int' to same type has no effect
 27 |     }
 28 |     return (digits as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:28:20: warning: forced cast of '[Int]' to same type has no effect
 26 |         n = ((n / 10) as! Int)
 27 |     }
 28 |     return (digits as! [Int])
    |                    `- warning: forced cast of '[Int]' to same type has no effect
 29 | }
 30 | func bigCmp(_ a: [Int], _ b: [Int]) -> Int {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:35:20: warning: forced cast of 'Int' to same type has no effect
 33 |     }
 34 |     if (Int(((a).count)) < Int(((b).count))) {
 35 |         return (-1 as! Int)
    |                    `- warning: forced cast of 'Int' to same type has no effect
 36 |     }
 37 |     var i = ((Int(((a).count)) - 1) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:37:37: warning: forced cast of 'Int' to same type has no effect
 35 |         return (-1 as! Int)
 36 |     }
 37 |     var i = ((Int(((a).count)) - 1) as! Int)
    |                                     `- warning: forced cast of 'Int' to same type has no effect
 38 |     while (i >= 0) {
 39 |         if (Int(a[i]) > Int(b[i])) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:43:24: warning: forced cast of 'Int' to same type has no effect
 41 |         }
 42 |         if (Int(a[i]) < Int(b[i])) {
 43 |             return (-1 as! Int)
    |                        `- warning: forced cast of 'Int' to same type has no effect
 44 |         }
 45 |         i = ((i - 1) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:45:22: warning: forced cast of 'Int' to same type has no effect
 43 |             return (-1 as! Int)
 44 |         }
 45 |         i = ((i - 1) as! Int)
    |                      `- warning: forced cast of 'Int' to same type has no effect
 46 |     }
 47 |     return 0

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:62:38: warning: forced cast of 'Int' to same type has no effect
 60 |             bv = Int(b[i])
 61 |         }
 62 |         var s = (((av + bv) + carry) as! Int)
    |                                      `- warning: forced cast of 'Int' to same type has no effect
 63 |         res = ((res + [(s % 10)]) as! [Int])
 64 |         carry = ((s / 10) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:64:27: warning: forced cast of 'Int' to same type has no effect
 62 |         var s = (((av + bv) + carry) as! Int)
 63 |         res = ((res + [(s % 10)]) as! [Int])
 64 |         carry = ((s / 10) as! Int)
    |                           `- warning: forced cast of 'Int' to same type has no effect
 65 |         i = ((i + 1) as! Int)
 66 |     }

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:65:22: warning: forced cast of 'Int' to same type has no effect
 63 |         res = ((res + [(s % 10)]) as! [Int])
 64 |         carry = ((s / 10) as! Int)
 65 |         i = ((i + 1) as! Int)
    |                      `- warning: forced cast of 'Int' to same type has no effect
 66 |     }
 67 |     return (bigTrim(&res) as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:67:27: warning: forced cast of '[Int]' to same type has no effect
 65 |         i = ((i + 1) as! Int)
 66 |     }
 67 |     return (bigTrim(&res) as! [Int])
    |                           `- warning: forced cast of '[Int]' to same type has no effect
 68 | }
 69 | func bigSub(_ a: [Int], _ b: [Int]) -> [Int] {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:62:13: warning: variable 's' was never mutated; consider changing to 'let' constant
 60 |             bv = Int(b[i])
 61 |         }
 62 |         var s = (((av + bv) + carry) as! Int)
    |             `- warning: variable 's' was never mutated; consider changing to 'let' constant
 63 |         res = ((res + [(s % 10)]) as! [Int])
 64 |         carry = ((s / 10) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:79:42: warning: forced cast of 'Int' to same type has no effect
 77 |             bv = Int(b[i])
 78 |         }
 79 |         var diff = (((av - bv) - borrow) as! Int)
    |                                          `- warning: forced cast of 'Int' to same type has no effect
 80 |         if (diff < 0) {
 81 |             diff = ((diff + 10) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:81:33: warning: forced cast of 'Int' to same type has no effect
 79 |         var diff = (((av - bv) - borrow) as! Int)
 80 |         if (diff < 0) {
 81 |             diff = ((diff + 10) as! Int)
    |                                 `- warning: forced cast of 'Int' to same type has no effect
 82 |             borrow = 1
 83 |         } else {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:87:22: warning: forced cast of 'Int' to same type has no effect
 85 |         }
 86 |         res = ((res + [diff]) as! [Int])
 87 |         i = ((i + 1) as! Int)
    |                      `- warning: forced cast of 'Int' to same type has no effect
 88 |     }
 89 |     return (bigTrim(&res) as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:89:27: warning: forced cast of '[Int]' to same type has no effect
 87 |         i = ((i + 1) as! Int)
 88 |     }
 89 |     return (bigTrim(&res) as! [Int])
    |                           `- warning: forced cast of '[Int]' to same type has no effect
 90 | }
 91 | func bigMulSmall(_ a: [Int], _ m: Int) -> [Int] {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:74:13: warning: variable 'av' was never mutated; consider changing to 'let' constant
 72 |     var i = 0
 73 |     while (i < Int(((a).count))) {
 74 |         var av = Int(a[i])
    |             `- warning: variable 'av' was never mutated; consider changing to 'let' constant
 75 |         var bv = 0
 76 |         if (i < Int(((b).count))) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:99:47: warning: forced cast of 'Int' to same type has no effect
 97 |     var i = 0
 98 |     while (i < Int(((a).count))) {
 99 |         var prod = (((Int(a[i]) * m) + carry) as! Int)
    |                                               `- warning: forced cast of 'Int' to same type has no effect
100 |         res = ((res + [(prod % 10)]) as! [Int])
101 |         carry = ((prod / 10) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:101:30: warning: forced cast of 'Int' to same type has no effect
 99 |         var prod = (((Int(a[i]) * m) + carry) as! Int)
100 |         res = ((res + [(prod % 10)]) as! [Int])
101 |         carry = ((prod / 10) as! Int)
    |                              `- warning: forced cast of 'Int' to same type has no effect
102 |         i = ((i + 1) as! Int)
103 |     }

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:102:22: warning: forced cast of 'Int' to same type has no effect
100 |         res = ((res + [(prod % 10)]) as! [Int])
101 |         carry = ((prod / 10) as! Int)
102 |         i = ((i + 1) as! Int)
    |                      `- warning: forced cast of 'Int' to same type has no effect
103 |     }
104 |     while (carry > 0) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:106:31: warning: forced cast of 'Int' to same type has no effect
104 |     while (carry > 0) {
105 |         res = ((res + [(carry % 10)]) as! [Int])
106 |         carry = ((carry / 10) as! Int)
    |                               `- warning: forced cast of 'Int' to same type has no effect
107 |     }
108 |     return (bigTrim(&res) as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:108:27: warning: forced cast of '[Int]' to same type has no effect
106 |         carry = ((carry / 10) as! Int)
107 |     }
108 |     return (bigTrim(&res) as! [Int])
    |                           `- warning: forced cast of '[Int]' to same type has no effect
109 | }
110 | func bigMulBig(_ a: [Int], _ b: [Int]) -> [Int] {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:99:13: warning: variable 'prod' was never mutated; consider changing to 'let' constant
 97 |     var i = 0
 98 |     while (i < Int(((a).count))) {
 99 |         var prod = (((Int(a[i]) * m) + carry) as! Int)
    |             `- warning: variable 'prod' was never mutated; consider changing to 'let' constant
100 |         res = ((res + [(prod % 10)]) as! [Int])
101 |         carry = ((prod / 10) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:115:22: warning: forced cast of 'Int' to same type has no effect
113 |     while (i < (Int(((a).count)) + Int(((b).count)))) {
114 |         res = ((res + [0]) as! [Int])
115 |         i = ((i + 1) as! Int)
    |                      `- warning: forced cast of 'Int' to same type has no effect
116 |     }
117 |     i = 0

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:122:32: warning: forced cast of 'Int' to same type has no effect
120 |         var j = 0
121 |         while (j < Int(((b).count))) {
122 |             var idx = ((i + j) as! Int)
    |                                `- warning: forced cast of 'Int' to same type has no effect
123 |             var prod = (((Int(res[idx]) + (Int(a[i]) * Int(b[j]))) + carry) as! Int)
124 |             res[idx] = ((prod % 10) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:123:77: warning: forced cast of 'Int' to same type has no effect
121 |         while (j < Int(((b).count))) {
122 |             var idx = ((i + j) as! Int)
123 |             var prod = (((Int(res[idx]) + (Int(a[i]) * Int(b[j]))) + carry) as! Int)
    |                                                                             `- warning: forced cast of 'Int' to same type has no effect
124 |             res[idx] = ((prod % 10) as! Int)
125 |             carry = ((prod / 10) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:124:37: warning: forced cast of 'Int' to same type has no effect
122 |             var idx = ((i + j) as! Int)
123 |             var prod = (((Int(res[idx]) + (Int(a[i]) * Int(b[j]))) + carry) as! Int)
124 |             res[idx] = ((prod % 10) as! Int)
    |                                     `- warning: forced cast of 'Int' to same type has no effect
125 |             carry = ((prod / 10) as! Int)
126 |             j = ((j + 1) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:125:34: warning: forced cast of 'Int' to same type has no effect
123 |             var prod = (((Int(res[idx]) + (Int(a[i]) * Int(b[j]))) + carry) as! Int)
124 |             res[idx] = ((prod % 10) as! Int)
125 |             carry = ((prod / 10) as! Int)
    |                                  `- warning: forced cast of 'Int' to same type has no effect
126 |             j = ((j + 1) as! Int)
127 |         }

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:126:26: warning: forced cast of 'Int' to same type has no effect
124 |             res[idx] = ((prod % 10) as! Int)
125 |             carry = ((prod / 10) as! Int)
126 |             j = ((j + 1) as! Int)
    |                          `- warning: forced cast of 'Int' to same type has no effect
127 |         }
128 |         var idx = ((i + Int(((b).count))) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:128:43: warning: forced cast of 'Int' to same type has no effect
126 |             j = ((j + 1) as! Int)
127 |         }
128 |         var idx = ((i + Int(((b).count))) as! Int)
    |                                           `- warning: forced cast of 'Int' to same type has no effect
129 |         while (carry > 0) {
130 |             var prod = ((Int(res[idx]) + carry) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:130:49: warning: forced cast of 'Int' to same type has no effect
128 |         var idx = ((i + Int(((b).count))) as! Int)
129 |         while (carry > 0) {
130 |             var prod = ((Int(res[idx]) + carry) as! Int)
    |                                                 `- warning: forced cast of 'Int' to same type has no effect
131 |             res[idx] = ((prod % 10) as! Int)
132 |             carry = ((prod / 10) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:131:37: warning: forced cast of 'Int' to same type has no effect
129 |         while (carry > 0) {
130 |             var prod = ((Int(res[idx]) + carry) as! Int)
131 |             res[idx] = ((prod % 10) as! Int)
    |                                     `- warning: forced cast of 'Int' to same type has no effect
132 |             carry = ((prod / 10) as! Int)
133 |             idx = ((idx + 1) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:132:34: warning: forced cast of 'Int' to same type has no effect
130 |             var prod = ((Int(res[idx]) + carry) as! Int)
131 |             res[idx] = ((prod % 10) as! Int)
132 |             carry = ((prod / 10) as! Int)
    |                                  `- warning: forced cast of 'Int' to same type has no effect
133 |             idx = ((idx + 1) as! Int)
134 |         }

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:133:30: warning: forced cast of 'Int' to same type has no effect
131 |             res[idx] = ((prod % 10) as! Int)
132 |             carry = ((prod / 10) as! Int)
133 |             idx = ((idx + 1) as! Int)
    |                              `- warning: forced cast of 'Int' to same type has no effect
134 |         }
135 |         i = ((i + 1) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:135:22: warning: forced cast of 'Int' to same type has no effect
133 |             idx = ((idx + 1) as! Int)
134 |         }
135 |         i = ((i + 1) as! Int)
    |                      `- warning: forced cast of 'Int' to same type has no effect
136 |     }
137 |     return (bigTrim(&res) as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:137:27: warning: forced cast of '[Int]' to same type has no effect
135 |         i = ((i + 1) as! Int)
136 |     }
137 |     return (bigTrim(&res) as! [Int])
    |                           `- warning: forced cast of '[Int]' to same type has no effect
138 | }
139 | func bigMulPow10(_ a: inout [Int], _ k: Int) -> [Int] {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:122:17: warning: variable 'idx' was never mutated; consider changing to 'let' constant
120 |         var j = 0
121 |         while (j < Int(((b).count))) {
122 |             var idx = ((i + j) as! Int)
    |                 `- warning: variable 'idx' was never mutated; consider changing to 'let' constant
123 |             var prod = (((Int(res[idx]) + (Int(a[i]) * Int(b[j]))) + carry) as! Int)
124 |             res[idx] = ((prod % 10) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:123:17: warning: variable 'prod' was never mutated; consider changing to 'let' constant
121 |         while (j < Int(((b).count))) {
122 |             var idx = ((i + j) as! Int)
123 |             var prod = (((Int(res[idx]) + (Int(a[i]) * Int(b[j]))) + carry) as! Int)
    |                 `- warning: variable 'prod' was never mutated; consider changing to 'let' constant
124 |             res[idx] = ((prod % 10) as! Int)
125 |             carry = ((prod / 10) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:130:17: warning: variable 'prod' was never mutated; consider changing to 'let' constant
128 |         var idx = ((i + Int(((b).count))) as! Int)
129 |         while (carry > 0) {
130 |             var prod = ((Int(res[idx]) + carry) as! Int)
    |                 `- warning: variable 'prod' was never mutated; consider changing to 'let' constant
131 |             res[idx] = ((prod % 10) as! Int)
132 |             carry = ((prod / 10) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:143:22: warning: forced cast of 'Int' to same type has no effect
141 |     while (i < k) {
142 |         a = ((([0] as! [Int]) + a) as! [Int])
143 |         i = ((i + 1) as! Int)
    |                      `- warning: forced cast of 'Int' to same type has no effect
144 |     }
145 |     return (a as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:145:15: warning: forced cast of '[Int]' to same type has no effect
143 |         i = ((i + 1) as! Int)
144 |     }
145 |     return (a as! [Int])
    |               `- warning: forced cast of '[Int]' to same type has no effect
146 | }
147 | func bigDivSmall(_ a: [Int], _ m: Int) -> [Int] {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:150:37: warning: forced cast of 'Int' to same type has no effect
148 |     var res: [Int] = ([] as! [Int])
149 |     var rem = 0
150 |     var i = ((Int(((a).count)) - 1) as! Int)
    |                                     `- warning: forced cast of 'Int' to same type has no effect
151 |     while (i >= 0) {
152 |         var cur = (((rem * 10) + Int(a[i])) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:152:45: warning: forced cast of 'Int' to same type has no effect
150 |     var i = ((Int(((a).count)) - 1) as! Int)
151 |     while (i >= 0) {
152 |         var cur = (((rem * 10) + Int(a[i])) as! Int)
    |                                             `- warning: forced cast of 'Int' to same type has no effect
153 |         var q = ((cur / m) as! Int)
154 |         rem = ((cur % m) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:153:28: warning: forced cast of 'Int' to same type has no effect
151 |     while (i >= 0) {
152 |         var cur = (((rem * 10) + Int(a[i])) as! Int)
153 |         var q = ((cur / m) as! Int)
    |                            `- warning: forced cast of 'Int' to same type has no effect
154 |         rem = ((cur % m) as! Int)
155 |         res = ((([q] as! [Int]) + res) as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:154:26: warning: forced cast of 'Int' to same type has no effect
152 |         var cur = (((rem * 10) + Int(a[i])) as! Int)
153 |         var q = ((cur / m) as! Int)
154 |         rem = ((cur % m) as! Int)
    |                          `- warning: forced cast of 'Int' to same type has no effect
155 |         res = ((([q] as! [Int]) + res) as! [Int])
156 |         i = ((i - 1) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:156:22: warning: forced cast of 'Int' to same type has no effect
154 |         rem = ((cur % m) as! Int)
155 |         res = ((([q] as! [Int]) + res) as! [Int])
156 |         i = ((i - 1) as! Int)
    |                      `- warning: forced cast of 'Int' to same type has no effect
157 |     }
158 |     return (bigTrim(&res) as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:158:27: warning: forced cast of '[Int]' to same type has no effect
156 |         i = ((i - 1) as! Int)
157 |     }
158 |     return (bigTrim(&res) as! [Int])
    |                           `- warning: forced cast of '[Int]' to same type has no effect
159 | }
160 | func bigToString(_ a: [Int]) -> String {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:152:13: warning: variable 'cur' was never mutated; consider changing to 'let' constant
150 |     var i = ((Int(((a).count)) - 1) as! Int)
151 |     while (i >= 0) {
152 |         var cur = (((rem * 10) + Int(a[i])) as! Int)
    |             `- warning: variable 'cur' was never mutated; consider changing to 'let' constant
153 |         var q = ((cur / m) as! Int)
154 |         rem = ((cur % m) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:153:13: warning: variable 'q' was never mutated; consider changing to 'let' constant
151 |     while (i >= 0) {
152 |         var cur = (((rem * 10) + Int(a[i])) as! Int)
153 |         var q = ((cur / m) as! Int)
    |             `- warning: variable 'q' was never mutated; consider changing to 'let' constant
154 |         rem = ((cur % m) as! Int)
155 |         res = ((([q] as! [Int]) + res) as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:162:37: warning: forced cast of 'Int' to same type has no effect
160 | func bigToString(_ a: [Int]) -> String {
161 |     var s = ""
162 |     var i = ((Int(((a).count)) - 1) as! Int)
    |                                     `- warning: forced cast of 'Int' to same type has no effect
163 |     while (i >= 0) {
164 |         s = ((s + String(describing: Int(a[i]))) as! String)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:164:50: warning: forced cast of 'String' to same type has no effect
162 |     var i = ((Int(((a).count)) - 1) as! Int)
163 |     while (i >= 0) {
164 |         s = ((s + String(describing: Int(a[i]))) as! String)
    |                                                  `- warning: forced cast of 'String' to same type has no effect
165 |         i = ((i - 1) as! Int)
166 |     }

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:165:22: warning: forced cast of 'Int' to same type has no effect
163 |     while (i >= 0) {
164 |         s = ((s + String(describing: Int(a[i]))) as! String)
165 |         i = ((i - 1) as! Int)
    |                      `- warning: forced cast of 'Int' to same type has no effect
166 |     }
167 |     return (s as! String)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:167:15: warning: forced cast of 'String' to same type has no effect
165 |         i = ((i - 1) as! Int)
166 |     }
167 |     return (s as! String)
    |               `- warning: forced cast of 'String' to same type has no effect
168 | }
169 | func `repeat`(_ ch: String, _ n: Int) -> String {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:173:23: warning: forced cast of 'String' to same type has no effect
171 |     var i = 0
172 |     while (i < n) {
173 |         s = ((s + ch) as! String)
    |                       `- warning: forced cast of 'String' to same type has no effect
174 |         i = ((i + 1) as! Int)
175 |     }

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:174:22: warning: forced cast of 'Int' to same type has no effect
172 |     while (i < n) {
173 |         s = ((s + ch) as! String)
174 |         i = ((i + 1) as! Int)
    |                      `- warning: forced cast of 'Int' to same type has no effect
175 |     }
176 |     return (s as! String)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:176:15: warning: forced cast of 'String' to same type has no effect
174 |         i = ((i + 1) as! Int)
175 |     }
176 |     return (s as! String)
    |               `- warning: forced cast of 'String' to same type has no effect
177 | }
178 | func sortInts(_ xs: [Int]) -> [Int] {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:180:19: warning: forced cast of '[Int]' to same type has no effect
178 | func sortInts(_ xs: [Int]) -> [Int] {
179 |     var res: [Int] = ([] as! [Int])
180 |     var tmp = (xs as! [Int])
    |                   `- warning: forced cast of '[Int]' to same type has no effect
181 |     while (Int(((tmp).count)) > 0) {
182 |         var min = Int(tmp[0])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:188:26: warning: forced cast of 'Int' to same type has no effect
186 |             if (Int(tmp[i]) < min) {
187 |                 min = Int(tmp[i])
188 |                 idx = (i as! Int)
    |                          `- warning: forced cast of 'Int' to same type has no effect
189 |             }
190 |             i = ((i + 1) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:190:26: warning: forced cast of 'Int' to same type has no effect
188 |                 idx = (i as! Int)
189 |             }
190 |             i = ((i + 1) as! Int)
    |                          `- warning: forced cast of 'Int' to same type has no effect
191 |         }
192 |         res = ((res + ([min] as! [Int])) as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:199:26: warning: forced cast of 'Int' to same type has no effect
197 |                 out = ((out + ([Int(tmp[j])] as! [Int])) as! [Int])
198 |             }
199 |             j = ((j + 1) as! Int)
    |                          `- warning: forced cast of 'Int' to same type has no effect
200 |         }
201 |         tmp = (out as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:201:20: warning: forced cast of '[Int]' to same type has no effect
199 |             j = ((j + 1) as! Int)
200 |         }
201 |         tmp = (out as! [Int])
    |                    `- warning: forced cast of '[Int]' to same type has no effect
202 |     }
203 |     return (res as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:203:17: warning: forced cast of '[Int]' to same type has no effect
201 |         tmp = (out as! [Int])
202 |     }
203 |     return (res as! [Int])
    |                 `- warning: forced cast of '[Int]' to same type has no effect
204 | }
205 | func primesUpTo(_ n: Int) -> [Int] {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:210:22: warning: forced cast of 'Int' to same type has no effect
208 |     while (i <= n) {
209 |         sieve = ((sieve + [true]) as! [Bool])
210 |         i = ((i + 1) as! Int)
    |                      `- warning: forced cast of 'Int' to same type has no effect
211 |     }
212 |     var p = 2

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:214:22: warning: forced cast of 'Bool' to same type has no effect
212 |     var p = 2
213 |     while ((p * p) <= n) {
214 |         if (sieve[p] as! Bool) {
    |                      `- warning: forced cast of 'Bool' to same type has no effect
215 |             var m = ((p * p) as! Int)
216 |             while (m <= n) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:215:30: warning: forced cast of 'Int' to same type has no effect
213 |     while ((p * p) <= n) {
214 |         if (sieve[p] as! Bool) {
215 |             var m = ((p * p) as! Int)
    |                              `- warning: forced cast of 'Int' to same type has no effect
216 |             while (m <= n) {
217 |                 sieve[m] = false

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:218:30: warning: forced cast of 'Int' to same type has no effect
216 |             while (m <= n) {
217 |                 sieve[m] = false
218 |                 m = ((m + p) as! Int)
    |                              `- warning: forced cast of 'Int' to same type has no effect
219 |             }
220 |         }

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:221:22: warning: forced cast of 'Int' to same type has no effect
219 |             }
220 |         }
221 |         p = ((p + 1) as! Int)
    |                      `- warning: forced cast of 'Int' to same type has no effect
222 |     }
223 |     var res: [Int] = ([] as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:226:22: warning: forced cast of 'Bool' to same type has no effect
224 |     var x = 2
225 |     while (x <= n) {
226 |         if (sieve[x] as! Bool) {
    |                      `- warning: forced cast of 'Bool' to same type has no effect
227 |             res = ((res + [x]) as! [Int])
228 |         }

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:229:22: warning: forced cast of 'Int' to same type has no effect
227 |             res = ((res + [x]) as! [Int])
228 |         }
229 |         x = ((x + 1) as! Int)
    |                      `- warning: forced cast of 'Int' to same type has no effect
230 |     }
231 |     return (res as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:231:17: warning: forced cast of '[Int]' to same type has no effect
229 |         x = ((x + 1) as! Int)
230 |     }
231 |     return (res as! [Int])
    |                 `- warning: forced cast of '[Int]' to same type has no effect
232 | }
233 | func factorialExp(_ n: Int, _ primes: [Int]) -> [String: Int] {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:236:16: warning: forced cast of 'Int' to same type has no effect
234 |     var m: [String: Int] = ([:] as! [String: Int])
235 |     for p in primes {
236 |         if ((p as! Int) > n) {
    |                `- warning: forced cast of 'Int' to same type has no effect
237 |             break
238 |         }

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:239:20: warning: forced cast of 'Int' to same type has no effect
237 |             break
238 |         }
239 |         var t = (n as! Int)
    |                    `- warning: forced cast of 'Int' to same type has no effect
240 |         var e = 0
241 |         while (t > 0) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:242:26: warning: forced cast of 'Int' to same type has no effect
240 |         var e = 0
241 |         while (t > 0) {
242 |             t = ((t / (p as! Int)) as! Int)
    |                          `- warning: forced cast of 'Int' to same type has no effect
243 |             e = ((e + t) as! Int)
244 |         }

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:242:36: warning: forced cast of 'Int' to same type has no effect
240 |         var e = 0
241 |         while (t > 0) {
242 |             t = ((t / (p as! Int)) as! Int)
    |                                    `- warning: forced cast of 'Int' to same type has no effect
243 |             e = ((e + t) as! Int)
244 |         }

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:243:26: warning: forced cast of 'Int' to same type has no effect
241 |         while (t > 0) {
242 |             t = ((t / (p as! Int)) as! Int)
243 |             e = ((e + t) as! Int)
    |                          `- warning: forced cast of 'Int' to same type has no effect
244 |         }
245 |         m[String(describing: p)] = (e as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:245:39: warning: forced cast of 'Int' to same type has no effect
243 |             e = ((e + t) as! Int)
244 |         }
245 |         m[String(describing: p)] = (e as! Int)
    |                                       `- warning: forced cast of 'Int' to same type has no effect
246 |     }
247 |     return (m as! [String: Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:247:15: warning: forced cast of '[String : Int]' to same type has no effect
245 |         m[String(describing: p)] = (e as! Int)
246 |     }
247 |     return (m as! [String: Int])
    |               `- warning: forced cast of '[String : Int]' to same type has no effect
248 | }
249 | func factorSmall(_ x: Int, _ primes: [Int]) -> [String: Int] {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:251:16: warning: forced cast of 'Int' to same type has no effect
249 | func factorSmall(_ x: Int, _ primes: [Int]) -> [String: Int] {
250 |     var f: [String: Int] = ([:] as! [String: Int])
251 |     var n = (x as! Int)
    |                `- warning: forced cast of 'Int' to same type has no effect
252 |     for p in primes {
253 |         if ((_num(p) * _num(p)) > (n as! Double)) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:253:38: warning: cast from 'Int' to unrelated type 'Double' always fails
251 |     var n = (x as! Int)
252 |     for p in primes {
253 |         if ((_num(p) * _num(p)) > (n as! Double)) {
    |                                      `- warning: cast from 'Int' to unrelated type 'Double' always fails
254 |             break
255 |         }

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:257:24: warning: forced cast of 'Int' to same type has no effect
255 |         }
256 |         var c = 0
257 |         while ((n % (p as! Int)) == 0) {
    |                        `- warning: forced cast of 'Int' to same type has no effect
258 |             c = ((c + 1) as! Int)
259 |             n = ((n / (p as! Int)) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:258:26: warning: forced cast of 'Int' to same type has no effect
256 |         var c = 0
257 |         while ((n % (p as! Int)) == 0) {
258 |             c = ((c + 1) as! Int)
    |                          `- warning: forced cast of 'Int' to same type has no effect
259 |             n = ((n / (p as! Int)) as! Int)
260 |         }

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:259:26: warning: forced cast of 'Int' to same type has no effect
257 |         while ((n % (p as! Int)) == 0) {
258 |             c = ((c + 1) as! Int)
259 |             n = ((n / (p as! Int)) as! Int)
    |                          `- warning: forced cast of 'Int' to same type has no effect
260 |         }
261 |         if (c > 0) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:259:36: warning: forced cast of 'Int' to same type has no effect
257 |         while ((n % (p as! Int)) == 0) {
258 |             c = ((c + 1) as! Int)
259 |             n = ((n / (p as! Int)) as! Int)
    |                                    `- warning: forced cast of 'Int' to same type has no effect
260 |         }
261 |         if (c > 0) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:262:43: warning: forced cast of 'Int' to same type has no effect
260 |         }
261 |         if (c > 0) {
262 |             f[String(describing: p)] = (c as! Int)
    |                                           `- warning: forced cast of 'Int' to same type has no effect
263 |         }
264 |     }

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:266:69: warning: forced cast of 'Int' to same type has no effect
264 |     }
265 |     if (n > 1) {
266 |         f[String(describing: n)] = (((f[String(describing: n)] ?? 0 as! Int) + 1) as! Int)
    |                                                                     `- warning: forced cast of 'Int' to same type has no effect
267 |     }
268 |     return (f as! [String: Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:266:83: warning: forced cast of 'Int' to same type has no effect
264 |     }
265 |     if (n > 1) {
266 |         f[String(describing: n)] = (((f[String(describing: n)] ?? 0 as! Int) + 1) as! Int)
    |                                                                                   `- warning: forced cast of 'Int' to same type has no effect
267 |     }
268 |     return (f as! [String: Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:268:15: warning: forced cast of '[String : Int]' to same type has no effect
266 |         f[String(describing: n)] = (((f[String(describing: n)] ?? 0 as! Int) + 1) as! Int)
267 |     }
268 |     return (f as! [String: Int])
    |               `- warning: forced cast of '[String : Int]' to same type has no effect
269 | }
270 | func computeIP(_ n: Int, _ primes: [Int]) -> [Int] {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:271:39: warning: forced cast of 'Int' to same type has no effect
269 | }
270 | func computeIP(_ n: Int, _ primes: [Int]) -> [Int] {
271 |     var exps = (factorialExp(((6 * n) as! Int), (primes as! [Int])) as! [String: Int])
    |                                       `- warning: forced cast of 'Int' to same type has no effect
272 |     let fn = (factorialExp((n as! Int), (primes as! [Int])) as! [String: Int])
273 |     for k in fn.keys.sorted() {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:271:57: warning: forced cast of '[Int]' to same type has no effect
269 | }
270 | func computeIP(_ n: Int, _ primes: [Int]) -> [Int] {
271 |     var exps = (factorialExp(((6 * n) as! Int), (primes as! [Int])) as! [String: Int])
    |                                                         `- warning: forced cast of '[Int]' to same type has no effect
272 |     let fn = (factorialExp((n as! Int), (primes as! [Int])) as! [String: Int])
273 |     for k in fn.keys.sorted() {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:271:69: warning: forced cast of '[String : Int]' to same type has no effect
269 | }
270 | func computeIP(_ n: Int, _ primes: [Int]) -> [Int] {
271 |     var exps = (factorialExp(((6 * n) as! Int), (primes as! [Int])) as! [String: Int])
    |                                                                     `- warning: forced cast of '[String : Int]' to same type has no effect
272 |     let fn = (factorialExp((n as! Int), (primes as! [Int])) as! [String: Int])
273 |     for k in fn.keys.sorted() {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:272:31: warning: forced cast of 'Int' to same type has no effect
270 | func computeIP(_ n: Int, _ primes: [Int]) -> [Int] {
271 |     var exps = (factorialExp(((6 * n) as! Int), (primes as! [Int])) as! [String: Int])
272 |     let fn = (factorialExp((n as! Int), (primes as! [Int])) as! [String: Int])
    |                               `- warning: forced cast of 'Int' to same type has no effect
273 |     for k in fn.keys.sorted() {
274 |         exps[k] = (((exps[k] ?? 0 as! Int) - (6 * Int(fn[k]!))) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:272:49: warning: forced cast of '[Int]' to same type has no effect
270 | func computeIP(_ n: Int, _ primes: [Int]) -> [Int] {
271 |     var exps = (factorialExp(((6 * n) as! Int), (primes as! [Int])) as! [String: Int])
272 |     let fn = (factorialExp((n as! Int), (primes as! [Int])) as! [String: Int])
    |                                                 `- warning: forced cast of '[Int]' to same type has no effect
273 |     for k in fn.keys.sorted() {
274 |         exps[k] = (((exps[k] ?? 0 as! Int) - (6 * Int(fn[k]!))) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:272:61: warning: forced cast of '[String : Int]' to same type has no effect
270 | func computeIP(_ n: Int, _ primes: [Int]) -> [Int] {
271 |     var exps = (factorialExp(((6 * n) as! Int), (primes as! [Int])) as! [String: Int])
272 |     let fn = (factorialExp((n as! Int), (primes as! [Int])) as! [String: Int])
    |                                                             `- warning: forced cast of '[String : Int]' to same type has no effect
273 |     for k in fn.keys.sorted() {
274 |         exps[k] = (((exps[k] ?? 0 as! Int) - (6 * Int(fn[k]!))) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:274:35: warning: forced cast of 'Int' to same type has no effect
272 |     let fn = (factorialExp((n as! Int), (primes as! [Int])) as! [String: Int])
273 |     for k in fn.keys.sorted() {
274 |         exps[k] = (((exps[k] ?? 0 as! Int) - (6 * Int(fn[k]!))) as! Int)
    |                                   `- warning: forced cast of 'Int' to same type has no effect
275 |     }
276 |     exps["2"] = (((exps["2"] ?? 0 as! Int) + 5) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:274:65: warning: forced cast of 'Int' to same type has no effect
272 |     let fn = (factorialExp((n as! Int), (primes as! [Int])) as! [String: Int])
273 |     for k in fn.keys.sorted() {
274 |         exps[k] = (((exps[k] ?? 0 as! Int) - (6 * Int(fn[k]!))) as! Int)
    |                                                                 `- warning: forced cast of 'Int' to same type has no effect
275 |     }
276 |     exps["2"] = (((exps["2"] ?? 0 as! Int) + 5) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:276:35: warning: forced cast of 'Int' to same type has no effect
274 |         exps[k] = (((exps[k] ?? 0 as! Int) - (6 * Int(fn[k]!))) as! Int)
275 |     }
276 |     exps["2"] = (((exps["2"] ?? 0 as! Int) + 5) as! Int)
    |                                   `- warning: forced cast of 'Int' to same type has no effect
277 |     let t2 = ((((532 * n) * n) + (126 * n)) + 9)
278 |     let ft2 = (factorSmall((t2 as! Int), (primes as! [Int])) as! [String: Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:276:49: warning: forced cast of 'Int' to same type has no effect
274 |         exps[k] = (((exps[k] ?? 0 as! Int) - (6 * Int(fn[k]!))) as! Int)
275 |     }
276 |     exps["2"] = (((exps["2"] ?? 0 as! Int) + 5) as! Int)
    |                                                 `- warning: forced cast of 'Int' to same type has no effect
277 |     let t2 = ((((532 * n) * n) + (126 * n)) + 9)
278 |     let ft2 = (factorSmall((t2 as! Int), (primes as! [Int])) as! [String: Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:278:32: warning: forced cast of 'Int' to same type has no effect
276 |     exps["2"] = (((exps["2"] ?? 0 as! Int) + 5) as! Int)
277 |     let t2 = ((((532 * n) * n) + (126 * n)) + 9)
278 |     let ft2 = (factorSmall((t2 as! Int), (primes as! [Int])) as! [String: Int])
    |                                `- warning: forced cast of 'Int' to same type has no effect
279 |     for k in ft2.keys.sorted() {
280 |         exps[k] = (((exps[k] ?? 0 as! Int) + Int(ft2[k]!)) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:278:50: warning: forced cast of '[Int]' to same type has no effect
276 |     exps["2"] = (((exps["2"] ?? 0 as! Int) + 5) as! Int)
277 |     let t2 = ((((532 * n) * n) + (126 * n)) + 9)
278 |     let ft2 = (factorSmall((t2 as! Int), (primes as! [Int])) as! [String: Int])
    |                                                  `- warning: forced cast of '[Int]' to same type has no effect
279 |     for k in ft2.keys.sorted() {
280 |         exps[k] = (((exps[k] ?? 0 as! Int) + Int(ft2[k]!)) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:278:62: warning: forced cast of '[String : Int]' to same type has no effect
276 |     exps["2"] = (((exps["2"] ?? 0 as! Int) + 5) as! Int)
277 |     let t2 = ((((532 * n) * n) + (126 * n)) + 9)
278 |     let ft2 = (factorSmall((t2 as! Int), (primes as! [Int])) as! [String: Int])
    |                                                              `- warning: forced cast of '[String : Int]' to same type has no effect
279 |     for k in ft2.keys.sorted() {
280 |         exps[k] = (((exps[k] ?? 0 as! Int) + Int(ft2[k]!)) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:280:35: warning: forced cast of 'Int' to same type has no effect
278 |     let ft2 = (factorSmall((t2 as! Int), (primes as! [Int])) as! [String: Int])
279 |     for k in ft2.keys.sorted() {
280 |         exps[k] = (((exps[k] ?? 0 as! Int) + Int(ft2[k]!)) as! Int)
    |                                   `- warning: forced cast of 'Int' to same type has no effect
281 |     }
282 |     exps["3"] = (((exps["3"] ?? 0 as! Int) - 1) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:280:60: warning: forced cast of 'Int' to same type has no effect
278 |     let ft2 = (factorSmall((t2 as! Int), (primes as! [Int])) as! [String: Int])
279 |     for k in ft2.keys.sorted() {
280 |         exps[k] = (((exps[k] ?? 0 as! Int) + Int(ft2[k]!)) as! Int)
    |                                                            `- warning: forced cast of 'Int' to same type has no effect
281 |     }
282 |     exps["3"] = (((exps["3"] ?? 0 as! Int) - 1) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:282:35: warning: forced cast of 'Int' to same type has no effect
280 |         exps[k] = (((exps[k] ?? 0 as! Int) + Int(ft2[k]!)) as! Int)
281 |     }
282 |     exps["3"] = (((exps["3"] ?? 0 as! Int) - 1) as! Int)
    |                                   `- warning: forced cast of 'Int' to same type has no effect
283 |     var keys: [Int] = ([] as! [Int])
284 |     for k in exps.keys.sorted() {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:282:49: warning: forced cast of 'Int' to same type has no effect
280 |         exps[k] = (((exps[k] ?? 0 as! Int) + Int(ft2[k]!)) as! Int)
281 |     }
282 |     exps["3"] = (((exps["3"] ?? 0 as! Int) - 1) as! Int)
    |                                                 `- warning: forced cast of 'Int' to same type has no effect
283 |     var keys: [Int] = ([] as! [Int])
284 |     for k in exps.keys.sorted() {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:285:29: warning: cast from 'Dictionary<String, Int>.Keys.Element' (aka 'String') to unrelated type 'Int' always fails
283 |     var keys: [Int] = ([] as! [Int])
284 |     for k in exps.keys.sorted() {
285 |         keys = ((keys + [(k as! Int)]) as! [Int])
    |                             `- warning: cast from 'Dictionary<String, Int>.Keys.Element' (aka 'String') to unrelated type 'Int' always fails
286 |     }
287 |     keys = (sortInts((keys as! [Int])) as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:287:28: warning: forced cast of '[Int]' to same type has no effect
285 |         keys = ((keys + [(k as! Int)]) as! [Int])
286 |     }
287 |     keys = (sortInts((keys as! [Int])) as! [Int])
    |                            `- warning: forced cast of '[Int]' to same type has no effect
288 |     var res = (bigFromInt(1) as! [Int])
289 |     for p in keys {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:287:40: warning: forced cast of '[Int]' to same type has no effect
285 |         keys = ((keys + [(k as! Int)]) as! [Int])
286 |     }
287 |     keys = (sortInts((keys as! [Int])) as! [Int])
    |                                        `- warning: forced cast of '[Int]' to same type has no effect
288 |     var res = (bigFromInt(1) as! [Int])
289 |     for p in keys {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:288:30: warning: forced cast of '[Int]' to same type has no effect
286 |     }
287 |     keys = (sortInts((keys as! [Int])) as! [Int])
288 |     var res = (bigFromInt(1) as! [Int])
    |                              `- warning: forced cast of '[Int]' to same type has no effect
289 |     for p in keys {
290 |         var e = Int(exps[String(describing: p)]!)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:293:37: warning: forced cast of '[Int]' to same type has no effect
291 |         var i = 0
292 |         while (i < e) {
293 |             res = (bigMulSmall((res as! [Int]), (p as! Int)) as! [Int])
    |                                     `- warning: forced cast of '[Int]' to same type has no effect
294 |             i = ((i + 1) as! Int)
295 |         }

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:293:52: warning: forced cast of 'Int' to same type has no effect
291 |         var i = 0
292 |         while (i < e) {
293 |             res = (bigMulSmall((res as! [Int]), (p as! Int)) as! [Int])
    |                                                    `- warning: forced cast of 'Int' to same type has no effect
294 |             i = ((i + 1) as! Int)
295 |         }

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:293:62: warning: forced cast of '[Int]' to same type has no effect
291 |         var i = 0
292 |         while (i < e) {
293 |             res = (bigMulSmall((res as! [Int]), (p as! Int)) as! [Int])
    |                                                              `- warning: forced cast of '[Int]' to same type has no effect
294 |             i = ((i + 1) as! Int)
295 |         }

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:294:26: warning: forced cast of 'Int' to same type has no effect
292 |         while (i < e) {
293 |             res = (bigMulSmall((res as! [Int]), (p as! Int)) as! [Int])
294 |             i = ((i + 1) as! Int)
    |                          `- warning: forced cast of 'Int' to same type has no effect
295 |         }
296 |     }

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:297:17: warning: forced cast of '[Int]' to same type has no effect
295 |         }
296 |     }
297 |     return (res as! [Int])
    |                 `- warning: forced cast of '[Int]' to same type has no effect
298 | }
299 | func formatTerm(_ ip: [Int], _ pw: Int) -> String {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:290:13: warning: variable 'e' was never mutated; consider changing to 'let' constant
288 |     var res = (bigFromInt(1) as! [Int])
289 |     for p in keys {
290 |         var e = Int(exps[String(describing: p)]!)
    |             `- warning: variable 'e' was never mutated; consider changing to 'let' constant
291 |         var i = 0
292 |         while (i < e) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:300:48: warning: forced cast of '[Int]' to same type has no effect
298 | }
299 | func formatTerm(_ ip: [Int], _ pw: Int) -> String {
300 |     var s = String(describing: bigToString((ip as! [Int])))
    |                                                `- warning: forced cast of '[Int]' to same type has no effect
301 |     if (pw >= Int(((s).count))) {
302 |         var frac = ((String(describing: `repeat`("0", ((pw - Int(((s).count))) as! Int))) + s) as! String)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:302:80: warning: forced cast of 'Int' to same type has no effect
300 |     var s = String(describing: bigToString((ip as! [Int])))
301 |     if (pw >= Int(((s).count))) {
302 |         var frac = ((String(describing: `repeat`("0", ((pw - Int(((s).count))) as! Int))) + s) as! String)
    |                                                                                `- warning: forced cast of 'Int' to same type has no effect
303 |         if (Int(((frac).count)) < 33) {
304 |             frac = ((frac + String(describing: `repeat`("0", ((33 - Int(((frac).count))) as! Int)))) as! String)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:302:96: warning: forced cast of 'String' to same type has no effect
300 |     var s = String(describing: bigToString((ip as! [Int])))
301 |     if (pw >= Int(((s).count))) {
302 |         var frac = ((String(describing: `repeat`("0", ((pw - Int(((s).count))) as! Int))) + s) as! String)
    |                                                                                                `- warning: forced cast of 'String' to same type has no effect
303 |         if (Int(((frac).count)) < 33) {
304 |             frac = ((frac + String(describing: `repeat`("0", ((33 - Int(((frac).count))) as! Int)))) as! String)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:304:90: warning: forced cast of 'Int' to same type has no effect
302 |         var frac = ((String(describing: `repeat`("0", ((pw - Int(((s).count))) as! Int))) + s) as! String)
303 |         if (Int(((frac).count)) < 33) {
304 |             frac = ((frac + String(describing: `repeat`("0", ((33 - Int(((frac).count))) as! Int)))) as! String)
    |                                                                                          `- warning: forced cast of 'Int' to same type has no effect
305 |         }
306 |         return (("0." + String(describing: String(Array((frac as! String))[0..<33]))) as! String)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:304:102: warning: forced cast of 'String' to same type has no effect
302 |         var frac = ((String(describing: `repeat`("0", ((pw - Int(((s).count))) as! Int))) + s) as! String)
303 |         if (Int(((frac).count)) < 33) {
304 |             frac = ((frac + String(describing: `repeat`("0", ((33 - Int(((frac).count))) as! Int)))) as! String)
    |                                                                                                      `- warning: forced cast of 'String' to same type has no effect
305 |         }
306 |         return (("0." + String(describing: String(Array((frac as! String))[0..<33]))) as! String)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:306:63: warning: forced cast of 'String' to same type has no effect
304 |             frac = ((frac + String(describing: `repeat`("0", ((33 - Int(((frac).count))) as! Int)))) as! String)
305 |         }
306 |         return (("0." + String(describing: String(Array((frac as! String))[0..<33]))) as! String)
    |                                                               `- warning: forced cast of 'String' to same type has no effect
307 |     }
308 |     var intpart = String(describing: String(Array((s as! String))[0..<((Int(((s).count)) - pw) as! Int)]))

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:306:87: warning: forced cast of 'String' to same type has no effect
304 |             frac = ((frac + String(describing: `repeat`("0", ((33 - Int(((frac).count))) as! Int)))) as! String)
305 |         }
306 |         return (("0." + String(describing: String(Array((frac as! String))[0..<33]))) as! String)
    |                                                                                       `- warning: forced cast of 'String' to same type has no effect
307 |     }
308 |     var intpart = String(describing: String(Array((s as! String))[0..<((Int(((s).count)) - pw) as! Int)]))

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:308:54: warning: forced cast of 'String' to same type has no effect
306 |         return (("0." + String(describing: String(Array((frac as! String))[0..<33]))) as! String)
307 |     }
308 |     var intpart = String(describing: String(Array((s as! String))[0..<((Int(((s).count)) - pw) as! Int)]))
    |                                                      `- warning: forced cast of 'String' to same type has no effect
309 |     var frac = String(describing: String(Array((s as! String))[((Int(((s).count)) - pw) as! Int)..<Int(((s).count))]))
310 |     if (Int(((frac).count)) < 33) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:308:96: warning: forced cast of 'Int' to same type has no effect
306 |         return (("0." + String(describing: String(Array((frac as! String))[0..<33]))) as! String)
307 |     }
308 |     var intpart = String(describing: String(Array((s as! String))[0..<((Int(((s).count)) - pw) as! Int)]))
    |                                                                                                `- warning: forced cast of 'Int' to same type has no effect
309 |     var frac = String(describing: String(Array((s as! String))[((Int(((s).count)) - pw) as! Int)..<Int(((s).count))]))
310 |     if (Int(((frac).count)) < 33) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:309:51: warning: forced cast of 'String' to same type has no effect
307 |     }
308 |     var intpart = String(describing: String(Array((s as! String))[0..<((Int(((s).count)) - pw) as! Int)]))
309 |     var frac = String(describing: String(Array((s as! String))[((Int(((s).count)) - pw) as! Int)..<Int(((s).count))]))
    |                                                   `- warning: forced cast of 'String' to same type has no effect
310 |     if (Int(((frac).count)) < 33) {
311 |         frac = ((frac + String(describing: `repeat`("0", ((33 - Int(((frac).count))) as! Int)))) as! String)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:309:89: warning: forced cast of 'Int' to same type has no effect
307 |     }
308 |     var intpart = String(describing: String(Array((s as! String))[0..<((Int(((s).count)) - pw) as! Int)]))
309 |     var frac = String(describing: String(Array((s as! String))[((Int(((s).count)) - pw) as! Int)..<Int(((s).count))]))
    |                                                                                         `- warning: forced cast of 'Int' to same type has no effect
310 |     if (Int(((frac).count)) < 33) {
311 |         frac = ((frac + String(describing: `repeat`("0", ((33 - Int(((frac).count))) as! Int)))) as! String)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:311:86: warning: forced cast of 'Int' to same type has no effect
309 |     var frac = String(describing: String(Array((s as! String))[((Int(((s).count)) - pw) as! Int)..<Int(((s).count))]))
310 |     if (Int(((frac).count)) < 33) {
311 |         frac = ((frac + String(describing: `repeat`("0", ((33 - Int(((frac).count))) as! Int)))) as! String)
    |                                                                                      `- warning: forced cast of 'Int' to same type has no effect
312 |     }
313 |     return (((intpart + ".") + String(describing: String(Array((frac as! String))[0..<33]))) as! String)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:311:98: warning: forced cast of 'String' to same type has no effect
309 |     var frac = String(describing: String(Array((s as! String))[((Int(((s).count)) - pw) as! Int)..<Int(((s).count))]))
310 |     if (Int(((frac).count)) < 33) {
311 |         frac = ((frac + String(describing: `repeat`("0", ((33 - Int(((frac).count))) as! Int)))) as! String)
    |                                                                                                  `- warning: forced cast of 'String' to same type has no effect
312 |     }
313 |     return (((intpart + ".") + String(describing: String(Array((frac as! String))[0..<33]))) as! String)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:313:70: warning: forced cast of 'String' to same type has no effect
311 |         frac = ((frac + String(describing: `repeat`("0", ((33 - Int(((frac).count))) as! Int)))) as! String)
312 |     }
313 |     return (((intpart + ".") + String(describing: String(Array((frac as! String))[0..<33]))) as! String)
    |                                                                      `- warning: forced cast of 'String' to same type has no effect
314 | }
315 | func bigAbsDiff(_ a: [Int], _ b: [Int]) -> [Int] {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:313:94: warning: forced cast of 'String' to same type has no effect
311 |         frac = ((frac + String(describing: `repeat`("0", ((33 - Int(((frac).count))) as! Int)))) as! String)
312 |     }
313 |     return (((intpart + ".") + String(describing: String(Array((frac as! String))[0..<33]))) as! String)
    |                                                                                              `- warning: forced cast of 'String' to same type has no effect
314 | }
315 | func bigAbsDiff(_ a: [Int], _ b: [Int]) -> [Int] {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:300:9: warning: variable 's' was never mutated; consider changing to 'let' constant
298 | }
299 | func formatTerm(_ ip: [Int], _ pw: Int) -> String {
300 |     var s = String(describing: bigToString((ip as! [Int])))
    |         `- warning: variable 's' was never mutated; consider changing to 'let' constant
301 |     if (pw >= Int(((s).count))) {
302 |         var frac = ((String(describing: `repeat`("0", ((pw - Int(((s).count))) as! Int))) + s) as! String)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:308:9: warning: variable 'intpart' was never mutated; consider changing to 'let' constant
306 |         return (("0." + String(describing: String(Array((frac as! String))[0..<33]))) as! String)
307 |     }
308 |     var intpart = String(describing: String(Array((s as! String))[0..<((Int(((s).count)) - pw) as! Int)]))
    |         `- warning: variable 'intpart' was never mutated; consider changing to 'let' constant
309 |     var frac = String(describing: String(Array((s as! String))[((Int(((s).count)) - pw) as! Int)..<Int(((s).count))]))
310 |     if (Int(((frac).count)) < 33) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:316:23: warning: forced cast of '[Int]' to same type has no effect
314 | }
315 | func bigAbsDiff(_ a: [Int], _ b: [Int]) -> [Int] {
316 |     if (Int(bigCmp((a as! [Int]), (b as! [Int]))) >= 0) {
    |                       `- warning: forced cast of '[Int]' to same type has no effect
317 |         return (bigSub((a as! [Int]), (b as! [Int])) as! [Int])
318 |     }

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:316:38: warning: forced cast of '[Int]' to same type has no effect
314 | }
315 | func bigAbsDiff(_ a: [Int], _ b: [Int]) -> [Int] {
316 |     if (Int(bigCmp((a as! [Int]), (b as! [Int]))) >= 0) {
    |                                      `- warning: forced cast of '[Int]' to same type has no effect
317 |         return (bigSub((a as! [Int]), (b as! [Int])) as! [Int])
318 |     }

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:317:27: warning: forced cast of '[Int]' to same type has no effect
315 | func bigAbsDiff(_ a: [Int], _ b: [Int]) -> [Int] {
316 |     if (Int(bigCmp((a as! [Int]), (b as! [Int]))) >= 0) {
317 |         return (bigSub((a as! [Int]), (b as! [Int])) as! [Int])
    |                           `- warning: forced cast of '[Int]' to same type has no effect
318 |     }
319 |     return (bigSub((b as! [Int]), (a as! [Int])) as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:317:42: warning: forced cast of '[Int]' to same type has no effect
315 | func bigAbsDiff(_ a: [Int], _ b: [Int]) -> [Int] {
316 |     if (Int(bigCmp((a as! [Int]), (b as! [Int]))) >= 0) {
317 |         return (bigSub((a as! [Int]), (b as! [Int])) as! [Int])
    |                                          `- warning: forced cast of '[Int]' to same type has no effect
318 |     }
319 |     return (bigSub((b as! [Int]), (a as! [Int])) as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:317:54: warning: forced cast of '[Int]' to same type has no effect
315 | func bigAbsDiff(_ a: [Int], _ b: [Int]) -> [Int] {
316 |     if (Int(bigCmp((a as! [Int]), (b as! [Int]))) >= 0) {
317 |         return (bigSub((a as! [Int]), (b as! [Int])) as! [Int])
    |                                                      `- warning: forced cast of '[Int]' to same type has no effect
318 |     }
319 |     return (bigSub((b as! [Int]), (a as! [Int])) as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:319:23: warning: forced cast of '[Int]' to same type has no effect
317 |         return (bigSub((a as! [Int]), (b as! [Int])) as! [Int])
318 |     }
319 |     return (bigSub((b as! [Int]), (a as! [Int])) as! [Int])
    |                       `- warning: forced cast of '[Int]' to same type has no effect
320 | }
321 | func main() {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:319:38: warning: forced cast of '[Int]' to same type has no effect
317 |         return (bigSub((a as! [Int]), (b as! [Int])) as! [Int])
318 |     }
319 |     return (bigSub((b as! [Int]), (a as! [Int])) as! [Int])
    |                                      `- warning: forced cast of '[Int]' to same type has no effect
320 | }
321 | func main() {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:319:50: warning: forced cast of '[Int]' to same type has no effect
317 |         return (bigSub((a as! [Int]), (b as! [Int])) as! [Int])
318 |     }
319 |     return (bigSub((b as! [Int]), (a as! [Int])) as! [Int])
    |                                                  `- warning: forced cast of '[Int]' to same type has no effect
320 | }
321 | func main() {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:322:36: warning: forced cast of '[Int]' to same type has no effect
320 | }
321 | func main() {
322 |     let primes = (primesUpTo(2000) as! [Int])
    |                                    `- warning: forced cast of '[Int]' to same type has no effect
323 |     print("N                               Integer Portion  Pow  Nth Term (33 dp)")
324 |     let line = String(describing: `repeat`("-", 89))

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:326:30: warning: forced cast of '[Int]' to same type has no effect
324 |     let line = String(describing: `repeat`("-", 89))
325 |     print(line)
326 |     var sum = (bigFromInt(0) as! [Int])
    |                              `- warning: forced cast of '[Int]' to same type has no effect
327 |     var prev = (bigFromInt(0) as! [Int])
328 |     var denomPow = 0

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:327:31: warning: forced cast of '[Int]' to same type has no effect
325 |     print(line)
326 |     var sum = (bigFromInt(0) as! [Int])
327 |     var prev = (bigFromInt(0) as! [Int])
    |                               `- warning: forced cast of '[Int]' to same type has no effect
328 |     var denomPow = 0
329 |     var n = 0

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:331:32: warning: forced cast of 'Int' to same type has no effect
329 |     var n = 0
330 |     while true {
331 |         let ip = (computeIP((n as! Int), (primes as! [Int])) as! [Int])
    |                                `- warning: forced cast of 'Int' to same type has no effect
332 |         let pw = ((6 * n) + 3)
333 |         if (pw > denomPow) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:331:50: warning: forced cast of '[Int]' to same type has no effect
329 |     var n = 0
330 |     while true {
331 |         let ip = (computeIP((n as! Int), (primes as! [Int])) as! [Int])
    |                                                  `- warning: forced cast of '[Int]' to same type has no effect
332 |         let pw = ((6 * n) + 3)
333 |         if (pw > denomPow) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:331:62: warning: forced cast of '[Int]' to same type has no effect
329 |     var n = 0
330 |     while true {
331 |         let ip = (computeIP((n as! Int), (primes as! [Int])) as! [Int])
    |                                                              `- warning: forced cast of '[Int]' to same type has no effect
332 |         let pw = ((6 * n) + 3)
333 |         if (pw > denomPow) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:334:55: warning: forced cast of 'Int' to same type has no effect
332 |         let pw = ((6 * n) + 3)
333 |         if (pw > denomPow) {
334 |             sum = (bigMulPow10(&sum, ((pw - denomPow) as! Int)) as! [Int])
    |                                                       `- warning: forced cast of 'Int' to same type has no effect
335 |             prev = (bigMulPow10(&prev, ((pw - denomPow) as! Int)) as! [Int])
336 |             denomPow = (pw as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:334:65: warning: forced cast of '[Int]' to same type has no effect
332 |         let pw = ((6 * n) + 3)
333 |         if (pw > denomPow) {
334 |             sum = (bigMulPow10(&sum, ((pw - denomPow) as! Int)) as! [Int])
    |                                                                 `- warning: forced cast of '[Int]' to same type has no effect
335 |             prev = (bigMulPow10(&prev, ((pw - denomPow) as! Int)) as! [Int])
336 |             denomPow = (pw as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:335:57: warning: forced cast of 'Int' to same type has no effect
333 |         if (pw > denomPow) {
334 |             sum = (bigMulPow10(&sum, ((pw - denomPow) as! Int)) as! [Int])
335 |             prev = (bigMulPow10(&prev, ((pw - denomPow) as! Int)) as! [Int])
    |                                                         `- warning: forced cast of 'Int' to same type has no effect
336 |             denomPow = (pw as! Int)
337 |         }

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:335:67: warning: forced cast of '[Int]' to same type has no effect
333 |         if (pw > denomPow) {
334 |             sum = (bigMulPow10(&sum, ((pw - denomPow) as! Int)) as! [Int])
335 |             prev = (bigMulPow10(&prev, ((pw - denomPow) as! Int)) as! [Int])
    |                                                                   `- warning: forced cast of '[Int]' to same type has no effect
336 |             denomPow = (pw as! Int)
337 |         }

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:336:28: warning: forced cast of 'Int' to same type has no effect
334 |             sum = (bigMulPow10(&sum, ((pw - denomPow) as! Int)) as! [Int])
335 |             prev = (bigMulPow10(&prev, ((pw - denomPow) as! Int)) as! [Int])
336 |             denomPow = (pw as! Int)
    |                            `- warning: forced cast of 'Int' to same type has no effect
337 |         }
338 |         if (n < 10) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:339:61: warning: forced cast of '[Int]' to same type has no effect
337 |         }
338 |         if (n < 10) {
339 |             let termStr = String(describing: formatTerm((ip as! [Int]), (pw as! Int)))
    |                                                             `- warning: forced cast of '[Int]' to same type has no effect
340 |             var ipStr = String(describing: bigToString((ip as! [Int])))
341 |             while (Int(((ipStr).count)) < 44) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:339:77: warning: forced cast of 'Int' to same type has no effect
337 |         }
338 |         if (n < 10) {
339 |             let termStr = String(describing: formatTerm((ip as! [Int]), (pw as! Int)))
    |                                                                             `- warning: forced cast of 'Int' to same type has no effect
340 |             var ipStr = String(describing: bigToString((ip as! [Int])))
341 |             while (Int(((ipStr).count)) < 44) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:340:60: warning: forced cast of '[Int]' to same type has no effect
338 |         if (n < 10) {
339 |             let termStr = String(describing: formatTerm((ip as! [Int]), (pw as! Int)))
340 |             var ipStr = String(describing: bigToString((ip as! [Int])))
    |                                                            `- warning: forced cast of '[Int]' to same type has no effect
341 |             while (Int(((ipStr).count)) < 44) {
342 |                 ipStr = ((" " + ipStr) as! String)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:342:40: warning: forced cast of 'String' to same type has no effect
340 |             var ipStr = String(describing: bigToString((ip as! [Int])))
341 |             while (Int(((ipStr).count)) < 44) {
342 |                 ipStr = ((" " + ipStr) as! String)
    |                                        `- warning: forced cast of 'String' to same type has no effect
343 |             }
344 |             var pwStr = String(String(describing: -pw))!

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:344:25: error: no exact matches in call to initializer 
342 |                 ipStr = ((" " + ipStr) as! String)
343 |             }
344 |             var pwStr = String(String(describing: -pw))!
    |                         |- error: no exact matches in call to initializer 
    |                         `- note: found candidate with type '(String) -> String'
345 |             while (Int(((pwStr).count)) < 3) {
346 |                 pwStr = ((" " + pwStr) as! String)

Swift.String.init:3:21: note: incorrect labels for candidate (have: '(_:)', expected: '(validatingCString:)')
1 | struct String {
2 | @available(*, deprecated, message: "Use a copy of the String argument")
3 |   @inlinable public init?(validatingCString nullTerminatedUTF8: String)}
  |                     `- note: incorrect labels for candidate (have: '(_:)', expected: '(validatingCString:)')
4 | 

Swift.String.init:3:21: note: incorrect labels for candidate (have: '(_:)', expected: '(validatingUTF8:)')
1 | struct String {
2 | @available(*, deprecated, message: "Use a copy of the String argument")
3 |   @inlinable public init?(validatingUTF8 cString: String)}
  |                     `- note: incorrect labels for candidate (have: '(_:)', expected: '(validatingUTF8:)')
4 | 

Foundation.String.init:3:10: note: incorrect labels for candidate (have: '(_:)', expected: '(utf8String:)')
1 | struct String {
2 | @available(*, deprecated, message: "Use a copy of the String argument")
3 |   public init?(utf8String bytes: String)}
  |          `- note: incorrect labels for candidate (have: '(_:)', expected: '(utf8String:)')
4 | 

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:346:40: warning: forced cast of 'String' to same type has no effect
344 |             var pwStr = String(String(describing: -pw))!
345 |             while (Int(((pwStr).count)) < 3) {
346 |                 pwStr = ((" " + pwStr) as! String)
    |                                        `- warning: forced cast of 'String' to same type has no effect
347 |             }
348 |             var padTerm = (termStr as! String)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:348:36: warning: forced cast of 'String' to same type has no effect
346 |                 pwStr = ((" " + pwStr) as! String)
347 |             }
348 |             var padTerm = (termStr as! String)
    |                                    `- warning: forced cast of 'String' to same type has no effect
349 |             while (Int(((padTerm).count)) < 35) {
350 |                 padTerm = ((padTerm + " ") as! String)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:350:44: warning: forced cast of 'String' to same type has no effect
348 |             var padTerm = (termStr as! String)
349 |             while (Int(((padTerm).count)) < 35) {
350 |                 padTerm = ((padTerm + " ") as! String)
    |                                            `- warning: forced cast of 'String' to same type has no effect
351 |             }
352 |             print(((((((String(describing: n) + "  ") + ipStr) + "  ") + pwStr) + "  ") + padTerm))

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:354:28: warning: forced cast of '[Int]' to same type has no effect
352 |             print(((((((String(describing: n) + "  ") + ipStr) + "  ") + pwStr) + "  ") + padTerm))
353 |         }
354 |         sum = (bigAdd((sum as! [Int]), (ip as! [Int])) as! [Int])
    |                            `- warning: forced cast of '[Int]' to same type has no effect
355 |         let diff = (bigAbsDiff((sum as! [Int]), (prev as! [Int])) as! [Int])
356 |         if ((denomPow >= 70) && (Int(bigCmp((diff as! [Int]), ({ () -> Any in

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:354:44: warning: forced cast of '[Int]' to same type has no effect
352 |             print(((((((String(describing: n) + "  ") + ipStr) + "  ") + pwStr) + "  ") + padTerm))
353 |         }
354 |         sum = (bigAdd((sum as! [Int]), (ip as! [Int])) as! [Int])
    |                                            `- warning: forced cast of '[Int]' to same type has no effect
355 |         let diff = (bigAbsDiff((sum as! [Int]), (prev as! [Int])) as! [Int])
356 |         if ((denomPow >= 70) && (Int(bigCmp((diff as! [Int]), ({ () -> Any in

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:354:56: warning: forced cast of '[Int]' to same type has no effect
352 |             print(((((((String(describing: n) + "  ") + ipStr) + "  ") + pwStr) + "  ") + padTerm))
353 |         }
354 |         sum = (bigAdd((sum as! [Int]), (ip as! [Int])) as! [Int])
    |                                                        `- warning: forced cast of '[Int]' to same type has no effect
355 |         let diff = (bigAbsDiff((sum as! [Int]), (prev as! [Int])) as! [Int])
356 |         if ((denomPow >= 70) && (Int(bigCmp((diff as! [Int]), ({ () -> Any in

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:355:37: warning: forced cast of '[Int]' to same type has no effect
353 |         }
354 |         sum = (bigAdd((sum as! [Int]), (ip as! [Int])) as! [Int])
355 |         let diff = (bigAbsDiff((sum as! [Int]), (prev as! [Int])) as! [Int])
    |                                     `- warning: forced cast of '[Int]' to same type has no effect
356 |         if ((denomPow >= 70) && (Int(bigCmp((diff as! [Int]), ({ () -> Any in
357 |         var _tmp0 = bigFromInt(1)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:355:55: warning: forced cast of '[Int]' to same type has no effect
353 |         }
354 |         sum = (bigAdd((sum as! [Int]), (ip as! [Int])) as! [Int])
355 |         let diff = (bigAbsDiff((sum as! [Int]), (prev as! [Int])) as! [Int])
    |                                                       `- warning: forced cast of '[Int]' to same type has no effect
356 |         if ((denomPow >= 70) && (Int(bigCmp((diff as! [Int]), ({ () -> Any in
357 |         var _tmp0 = bigFromInt(1)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:355:67: warning: forced cast of '[Int]' to same type has no effect
353 |         }
354 |         sum = (bigAdd((sum as! [Int]), (ip as! [Int])) as! [Int])
355 |         let diff = (bigAbsDiff((sum as! [Int]), (prev as! [Int])) as! [Int])
    |                                                                   `- warning: forced cast of '[Int]' to same type has no effect
356 |         if ((denomPow >= 70) && (Int(bigCmp((diff as! [Int]), ({ () -> Any in
357 |         var _tmp0 = bigFromInt(1)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:356:51: warning: forced cast of '[Int]' to same type has no effect
354 |         sum = (bigAdd((sum as! [Int]), (ip as! [Int])) as! [Int])
355 |         let diff = (bigAbsDiff((sum as! [Int]), (prev as! [Int])) as! [Int])
356 |         if ((denomPow >= 70) && (Int(bigCmp((diff as! [Int]), ({ () -> Any in
    |                                                   `- warning: forced cast of '[Int]' to same type has no effect
357 |         var _tmp0 = bigFromInt(1)
358 |         return bigMulPow10(&_tmp0, ((denomPow - 70) as! Int))

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:358:53: warning: forced cast of 'Int' to same type has no effect
356 |         if ((denomPow >= 70) && (Int(bigCmp((diff as! [Int]), ({ () -> Any in
357 |         var _tmp0 = bigFromInt(1)
358 |         return bigMulPow10(&_tmp0, ((denomPow - 70) as! Int))
    |                                                     `- warning: forced cast of 'Int' to same type has no effect
359 |     }() as! [Int]))) < 0)) {
360 |         break

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:362:17: warning: forced cast of '[Int]' to same type has no effect
360 |         break
361 |     }
362 |     prev = (sum as! [Int])
    |                 `- warning: forced cast of '[Int]' to same type has no effect
363 |     n = ((n + 1) as! Int)
364 | }

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:363:18: warning: forced cast of 'Int' to same type has no effect
361 |     }
362 |     prev = (sum as! [Int])
363 |     n = ((n + 1) as! Int)
    |                  `- warning: forced cast of 'Int' to same type has no effect
364 | }
365 | let precision = 70

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:368:58: warning: forced cast of 'Int' to same type has no effect
366 | let target = ({ () -> Any in
367 | var _tmp0 = bigFromInt(1)
368 | return bigMulPow10(&_tmp0, ((denomPow + (2 * precision)) as! Int))
    |                                                          `- warning: forced cast of 'Int' to same type has no effect
369 | }() as! [Int])
370 | var low = (bigFromInt(0) as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:370:26: warning: forced cast of '[Int]' to same type has no effect
368 | return bigMulPow10(&_tmp0, ((denomPow + (2 * precision)) as! Int))
369 | }() as! [Int])
370 | var low = (bigFromInt(0) as! [Int])
    |                          `- warning: forced cast of '[Int]' to same type has no effect
371 | var high = ({ () -> Any in
372 | var _tmp0 = bigFromInt(1)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:373:45: warning: forced cast of 'Int' to same type has no effect
371 | var high = ({ () -> Any in
372 | var _tmp0 = bigFromInt(1)
373 | return bigMulPow10(&_tmp0, ((precision + 1) as! Int))
    |                                             `- warning: forced cast of 'Int' to same type has no effect
374 | }() as! [Int])
375 | while (Int(bigCmp((low as! [Int]), (bigSub((high as! [Int]), (bigFromInt(1) as! [Int])) as! [Int]))) < 0) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:375:24: warning: forced cast of '[Int]' to same type has no effect
373 | return bigMulPow10(&_tmp0, ((precision + 1) as! Int))
374 | }() as! [Int])
375 | while (Int(bigCmp((low as! [Int]), (bigSub((high as! [Int]), (bigFromInt(1) as! [Int])) as! [Int]))) < 0) {
    |                        `- warning: forced cast of '[Int]' to same type has no effect
376 |     var mid = (bigDivSmall((bigAdd((low as! [Int]), (high as! [Int])) as! [Int]), 2) as! [Int])
377 |     var prod = (bigMulBig((bigMulBig((mid as! [Int]), (mid as! [Int])) as! [Int]), (sum as! [Int])) as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:375:50: warning: forced cast of '[Int]' to same type has no effect
373 | return bigMulPow10(&_tmp0, ((precision + 1) as! Int))
374 | }() as! [Int])
375 | while (Int(bigCmp((low as! [Int]), (bigSub((high as! [Int]), (bigFromInt(1) as! [Int])) as! [Int]))) < 0) {
    |                                                  `- warning: forced cast of '[Int]' to same type has no effect
376 |     var mid = (bigDivSmall((bigAdd((low as! [Int]), (high as! [Int])) as! [Int]), 2) as! [Int])
377 |     var prod = (bigMulBig((bigMulBig((mid as! [Int]), (mid as! [Int])) as! [Int]), (sum as! [Int])) as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:375:77: warning: forced cast of '[Int]' to same type has no effect
373 | return bigMulPow10(&_tmp0, ((precision + 1) as! Int))
374 | }() as! [Int])
375 | while (Int(bigCmp((low as! [Int]), (bigSub((high as! [Int]), (bigFromInt(1) as! [Int])) as! [Int]))) < 0) {
    |                                                                             `- warning: forced cast of '[Int]' to same type has no effect
376 |     var mid = (bigDivSmall((bigAdd((low as! [Int]), (high as! [Int])) as! [Int]), 2) as! [Int])
377 |     var prod = (bigMulBig((bigMulBig((mid as! [Int]), (mid as! [Int])) as! [Int]), (sum as! [Int])) as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:375:89: warning: forced cast of '[Int]' to same type has no effect
373 | return bigMulPow10(&_tmp0, ((precision + 1) as! Int))
374 | }() as! [Int])
375 | while (Int(bigCmp((low as! [Int]), (bigSub((high as! [Int]), (bigFromInt(1) as! [Int])) as! [Int]))) < 0) {
    |                                                                                         `- warning: forced cast of '[Int]' to same type has no effect
376 |     var mid = (bigDivSmall((bigAdd((low as! [Int]), (high as! [Int])) as! [Int]), 2) as! [Int])
377 |     var prod = (bigMulBig((bigMulBig((mid as! [Int]), (mid as! [Int])) as! [Int]), (sum as! [Int])) as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:376:41: warning: forced cast of '[Int]' to same type has no effect
374 | }() as! [Int])
375 | while (Int(bigCmp((low as! [Int]), (bigSub((high as! [Int]), (bigFromInt(1) as! [Int])) as! [Int]))) < 0) {
376 |     var mid = (bigDivSmall((bigAdd((low as! [Int]), (high as! [Int])) as! [Int]), 2) as! [Int])
    |                                         `- warning: forced cast of '[Int]' to same type has no effect
377 |     var prod = (bigMulBig((bigMulBig((mid as! [Int]), (mid as! [Int])) as! [Int]), (sum as! [Int])) as! [Int])
378 |     if (Int(bigCmp((prod as! [Int]), (target as! [Int]))) <= 0) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:376:59: warning: forced cast of '[Int]' to same type has no effect
374 | }() as! [Int])
375 | while (Int(bigCmp((low as! [Int]), (bigSub((high as! [Int]), (bigFromInt(1) as! [Int])) as! [Int]))) < 0) {
376 |     var mid = (bigDivSmall((bigAdd((low as! [Int]), (high as! [Int])) as! [Int]), 2) as! [Int])
    |                                                           `- warning: forced cast of '[Int]' to same type has no effect
377 |     var prod = (bigMulBig((bigMulBig((mid as! [Int]), (mid as! [Int])) as! [Int]), (sum as! [Int])) as! [Int])
378 |     if (Int(bigCmp((prod as! [Int]), (target as! [Int]))) <= 0) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:376:71: warning: forced cast of '[Int]' to same type has no effect
374 | }() as! [Int])
375 | while (Int(bigCmp((low as! [Int]), (bigSub((high as! [Int]), (bigFromInt(1) as! [Int])) as! [Int]))) < 0) {
376 |     var mid = (bigDivSmall((bigAdd((low as! [Int]), (high as! [Int])) as! [Int]), 2) as! [Int])
    |                                                                       `- warning: forced cast of '[Int]' to same type has no effect
377 |     var prod = (bigMulBig((bigMulBig((mid as! [Int]), (mid as! [Int])) as! [Int]), (sum as! [Int])) as! [Int])
378 |     if (Int(bigCmp((prod as! [Int]), (target as! [Int]))) <= 0) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:376:86: warning: forced cast of '[Int]' to same type has no effect
374 | }() as! [Int])
375 | while (Int(bigCmp((low as! [Int]), (bigSub((high as! [Int]), (bigFromInt(1) as! [Int])) as! [Int]))) < 0) {
376 |     var mid = (bigDivSmall((bigAdd((low as! [Int]), (high as! [Int])) as! [Int]), 2) as! [Int])
    |                                                                                      `- warning: forced cast of '[Int]' to same type has no effect
377 |     var prod = (bigMulBig((bigMulBig((mid as! [Int]), (mid as! [Int])) as! [Int]), (sum as! [Int])) as! [Int])
378 |     if (Int(bigCmp((prod as! [Int]), (target as! [Int]))) <= 0) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:377:43: warning: forced cast of '[Int]' to same type has no effect
375 | while (Int(bigCmp((low as! [Int]), (bigSub((high as! [Int]), (bigFromInt(1) as! [Int])) as! [Int]))) < 0) {
376 |     var mid = (bigDivSmall((bigAdd((low as! [Int]), (high as! [Int])) as! [Int]), 2) as! [Int])
377 |     var prod = (bigMulBig((bigMulBig((mid as! [Int]), (mid as! [Int])) as! [Int]), (sum as! [Int])) as! [Int])
    |                                           `- warning: forced cast of '[Int]' to same type has no effect
378 |     if (Int(bigCmp((prod as! [Int]), (target as! [Int]))) <= 0) {
379 |         low = (mid as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:377:60: warning: forced cast of '[Int]' to same type has no effect
375 | while (Int(bigCmp((low as! [Int]), (bigSub((high as! [Int]), (bigFromInt(1) as! [Int])) as! [Int]))) < 0) {
376 |     var mid = (bigDivSmall((bigAdd((low as! [Int]), (high as! [Int])) as! [Int]), 2) as! [Int])
377 |     var prod = (bigMulBig((bigMulBig((mid as! [Int]), (mid as! [Int])) as! [Int]), (sum as! [Int])) as! [Int])
    |                                                            `- warning: forced cast of '[Int]' to same type has no effect
378 |     if (Int(bigCmp((prod as! [Int]), (target as! [Int]))) <= 0) {
379 |         low = (mid as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:377:72: warning: forced cast of '[Int]' to same type has no effect
375 | while (Int(bigCmp((low as! [Int]), (bigSub((high as! [Int]), (bigFromInt(1) as! [Int])) as! [Int]))) < 0) {
376 |     var mid = (bigDivSmall((bigAdd((low as! [Int]), (high as! [Int])) as! [Int]), 2) as! [Int])
377 |     var prod = (bigMulBig((bigMulBig((mid as! [Int]), (mid as! [Int])) as! [Int]), (sum as! [Int])) as! [Int])
    |                                                                        `- warning: forced cast of '[Int]' to same type has no effect
378 |     if (Int(bigCmp((prod as! [Int]), (target as! [Int]))) <= 0) {
379 |         low = (mid as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:377:89: warning: forced cast of '[Int]' to same type has no effect
375 | while (Int(bigCmp((low as! [Int]), (bigSub((high as! [Int]), (bigFromInt(1) as! [Int])) as! [Int]))) < 0) {
376 |     var mid = (bigDivSmall((bigAdd((low as! [Int]), (high as! [Int])) as! [Int]), 2) as! [Int])
377 |     var prod = (bigMulBig((bigMulBig((mid as! [Int]), (mid as! [Int])) as! [Int]), (sum as! [Int])) as! [Int])
    |                                                                                         `- warning: forced cast of '[Int]' to same type has no effect
378 |     if (Int(bigCmp((prod as! [Int]), (target as! [Int]))) <= 0) {
379 |         low = (mid as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:377:101: warning: forced cast of '[Int]' to same type has no effect
375 | while (Int(bigCmp((low as! [Int]), (bigSub((high as! [Int]), (bigFromInt(1) as! [Int])) as! [Int]))) < 0) {
376 |     var mid = (bigDivSmall((bigAdd((low as! [Int]), (high as! [Int])) as! [Int]), 2) as! [Int])
377 |     var prod = (bigMulBig((bigMulBig((mid as! [Int]), (mid as! [Int])) as! [Int]), (sum as! [Int])) as! [Int])
    |                                                                                                     `- warning: forced cast of '[Int]' to same type has no effect
378 |     if (Int(bigCmp((prod as! [Int]), (target as! [Int]))) <= 0) {
379 |         low = (mid as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:378:26: warning: forced cast of '[Int]' to same type has no effect
376 |     var mid = (bigDivSmall((bigAdd((low as! [Int]), (high as! [Int])) as! [Int]), 2) as! [Int])
377 |     var prod = (bigMulBig((bigMulBig((mid as! [Int]), (mid as! [Int])) as! [Int]), (sum as! [Int])) as! [Int])
378 |     if (Int(bigCmp((prod as! [Int]), (target as! [Int]))) <= 0) {
    |                          `- warning: forced cast of '[Int]' to same type has no effect
379 |         low = (mid as! [Int])
380 |     } else {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:378:46: warning: forced cast of '[Int]' to same type has no effect
376 |     var mid = (bigDivSmall((bigAdd((low as! [Int]), (high as! [Int])) as! [Int]), 2) as! [Int])
377 |     var prod = (bigMulBig((bigMulBig((mid as! [Int]), (mid as! [Int])) as! [Int]), (sum as! [Int])) as! [Int])
378 |     if (Int(bigCmp((prod as! [Int]), (target as! [Int]))) <= 0) {
    |                                              `- warning: forced cast of '[Int]' to same type has no effect
379 |         low = (mid as! [Int])
380 |     } else {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:379:20: warning: forced cast of '[Int]' to same type has no effect
377 |     var prod = (bigMulBig((bigMulBig((mid as! [Int]), (mid as! [Int])) as! [Int]), (sum as! [Int])) as! [Int])
378 |     if (Int(bigCmp((prod as! [Int]), (target as! [Int]))) <= 0) {
379 |         low = (mid as! [Int])
    |                    `- warning: forced cast of '[Int]' to same type has no effect
380 |     } else {
381 |         high = (bigSub((mid as! [Int]), (bigFromInt(1) as! [Int])) as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:381:29: warning: forced cast of '[Int]' to same type has no effect
379 |         low = (mid as! [Int])
380 |     } else {
381 |         high = (bigSub((mid as! [Int]), (bigFromInt(1) as! [Int])) as! [Int])
    |                             `- warning: forced cast of '[Int]' to same type has no effect
382 |     }
383 | }

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:381:56: warning: forced cast of '[Int]' to same type has no effect
379 |         low = (mid as! [Int])
380 |     } else {
381 |         high = (bigSub((mid as! [Int]), (bigFromInt(1) as! [Int])) as! [Int])
    |                                                        `- warning: forced cast of '[Int]' to same type has no effect
382 |     }
383 | }

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:381:68: warning: forced cast of '[Int]' to same type has no effect
379 |         low = (mid as! [Int])
380 |     } else {
381 |         high = (bigSub((mid as! [Int]), (bigFromInt(1) as! [Int])) as! [Int])
    |                                                                    `- warning: forced cast of '[Int]' to same type has no effect
382 |     }
383 | }

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:384:18: warning: forced cast of '[Int]' to same type has no effect
382 |     }
383 | }
384 | var piInt = (low as! [Int])
    |                  `- warning: forced cast of '[Int]' to same type has no effect
385 | var piStr = String(describing: bigToString((piInt as! [Int])))
386 | if (Int(((piStr).count)) <= precision) {

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:385:51: warning: forced cast of '[Int]' to same type has no effect
383 | }
384 | var piInt = (low as! [Int])
385 | var piStr = String(describing: bigToString((piInt as! [Int])))
    |                                                   `- warning: forced cast of '[Int]' to same type has no effect
386 | if (Int(((piStr).count)) <= precision) {
387 |     piStr = ((String(describing: `repeat`("0", (((precision - Int(((piStr).count))) + 1) as! Int))) + piStr) as! String)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:387:90: warning: forced cast of 'Int' to same type has no effect
385 | var piStr = String(describing: bigToString((piInt as! [Int])))
386 | if (Int(((piStr).count)) <= precision) {
387 |     piStr = ((String(describing: `repeat`("0", (((precision - Int(((piStr).count))) + 1) as! Int))) + piStr) as! String)
    |                                                                                          `- warning: forced cast of 'Int' to same type has no effect
388 | }
389 | var out = (((String(describing: String(Array((piStr as! String))[0..<((Int(((piStr).count)) - precision) as! Int)])) + ".") + String(describing: String(Array((piStr as! String))[((Int(((piStr).count)) - precision) as! Int)..<Int(((piStr).count))]))) as! String)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:387:110: warning: forced cast of 'String' to same type has no effect
385 | var piStr = String(describing: bigToString((piInt as! [Int])))
386 | if (Int(((piStr).count)) <= precision) {
387 |     piStr = ((String(describing: `repeat`("0", (((precision - Int(((piStr).count))) + 1) as! Int))) + piStr) as! String)
    |                                                                                                              `- warning: forced cast of 'String' to same type has no effect
388 | }
389 | var out = (((String(describing: String(Array((piStr as! String))[0..<((Int(((piStr).count)) - precision) as! Int)])) + ".") + String(describing: String(Array((piStr as! String))[((Int(((piStr).count)) - precision) as! Int)..<Int(((piStr).count))]))) as! String)

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:389:53: warning: forced cast of 'String' to same type has no effect
387 |     piStr = ((String(describing: `repeat`("0", (((precision - Int(((piStr).count))) + 1) as! Int))) + piStr) as! String)
388 | }
389 | var out = (((String(describing: String(Array((piStr as! String))[0..<((Int(((piStr).count)) - precision) as! Int)])) + ".") + String(describing: String(Array((piStr as! String))[((Int(((piStr).count)) - precision) as! Int)..<Int(((piStr).count))]))) as! String)
    |                                                     `- warning: forced cast of 'String' to same type has no effect
390 | print("")
391 | print("Pi to 70 decimal places is:")

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:389:106: warning: forced cast of 'Int' to same type has no effect
387 |     piStr = ((String(describing: `repeat`("0", (((precision - Int(((piStr).count))) + 1) as! Int))) + piStr) as! String)
388 | }
389 | var out = (((String(describing: String(Array((piStr as! String))[0..<((Int(((piStr).count)) - precision) as! Int)])) + ".") + String(describing: String(Array((piStr as! String))[((Int(((piStr).count)) - precision) as! Int)..<Int(((piStr).count))]))) as! String)
    |                                                                                                          `- warning: forced cast of 'Int' to same type has no effect
390 | print("")
391 | print("Pi to 70 decimal places is:")

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:389:166: warning: forced cast of 'String' to same type has no effect
387 |     piStr = ((String(describing: `repeat`("0", (((precision - Int(((piStr).count))) + 1) as! Int))) + piStr) as! String)
388 | }
389 | var out = (((String(describing: String(Array((piStr as! String))[0..<((Int(((piStr).count)) - precision) as! Int)])) + ".") + String(describing: String(Array((piStr as! String))[((Int(((piStr).count)) - precision) as! Int)..<Int(((piStr).count))]))) as! String)
    |                                                                                                                                                                      `- warning: forced cast of 'String' to same type has no effect
390 | print("")
391 | print("Pi to 70 decimal places is:")

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:389:215: warning: forced cast of 'Int' to same type has no effect
387 |     piStr = ((String(describing: `repeat`("0", (((precision - Int(((piStr).count))) + 1) as! Int))) + piStr) as! String)
388 | }
389 | var out = (((String(describing: String(Array((piStr as! String))[0..<((Int(((piStr).count)) - precision) as! Int)])) + ".") + String(describing: String(Array((piStr as! String))[((Int(((piStr).count)) - precision) as! Int)..<Int(((piStr).count))]))) as! String)
    |                                                                                                                                                                                                                       `- warning: forced cast of 'Int' to same type has no effect
390 | print("")
391 | print("Pi to 70 decimal places is:")

/tmp/TestSwiftTranspiler_Rosetta_Golden2327368048/001/main.swift:389:251: warning: forced cast of 'String' to same type has no effect
387 |     piStr = ((String(describing: `repeat`("0", (((precision - Int(((piStr).count))) + 1) as! Int))) + piStr) as! String)
388 | }
389 | var out = (((String(describing: String(Array((piStr as! String))[0..<((Int(((piStr).count)) - precision) as! Int)])) + ".") + String(describing: String(Array((piStr as! String))[((Int(((piStr).count)) - precision) as! Int)..<Int(((piStr).count))]))) as! String)
    |                                                                                                                                                                                                                                                           `- warning: forced cast of 'String' to same type has no effect
390 | print("")
391 | print("Pi to 70 decimal places is:")
