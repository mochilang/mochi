// Generated by Mochi transpiler v0.10.39 on 2025-07-25 09:14:57 GMT+7
import Foundation

func poly(_ p: Int) -> String {
    var s: String = ""
    var coef: Int = 1
    var i = (p as! Int)
    if (coef != 1) {
        s = ((s + String(describing: coef)) as! String)
    }
    while (i > 0) {
        s = ((s + "x") as! String)
        if (i != 1) {
            s = (((s + "^") + String(describing: i)) as! String)
        }
        coef = Int(((coef * i) / Int(((p - i) + 1))))
        var d = (coef as! Int)
        if ((Int((p - Int((i - 1)))) % 2) == 1) {
            d = (-d as! Int)
        }
        if (d < 0) {
            s = (((s + " - ") + String(describing: -d)) as! String)
        } else {
            s = (((s + " + ") + String(describing: d)) as! String)
        }
        i = ((i - 1) as! Int)
    }
    if (s == "") {
        s = "1"
    }
    return (s as! String)
}
func aks(_ n: Int) -> Bool {
    if (n < 2) {
        return false
    }
    var c: Int = (n as! Int)
    var i = 1
    while (i < n) {
        if ((c % n) != 0) {
            return false
        }
        c = Int(((c * Int((n - i))) / Int((i + 1))))
        i = ((i + 1) as! Int)
    }
    return true
}
func main() {
    var p = 0
    while (p <= 7) {
        print(((String(describing: p) + ":  ") + String(describing: poly((p as! Int)))))
        p = ((p + 1) as! Int)
    }
    var first = true
    p = 2
    var line: String = ""
    while (p < 50) {
        if Bool(aks((p as! Int))) {
            if first {
                line = ((line + String(describing: p)) as! String)
                first = false
            } else {
                line = (((line + " ") + String(describing: p)) as! String)
            }
        }
        p = ((p + 1) as! Int)
    }
    print(line)
}
_ = main()
