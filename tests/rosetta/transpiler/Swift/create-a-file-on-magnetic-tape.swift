// Generated by Mochi transpiler v0.10.55 on 2025-08-02 21:13:45 GMT+7
import Foundation

let stdout = FileHandle.standardOutput
extension FileHandle {
    func write(_ string: String) {
        if let data = string.data(using: .utf8) {
            self.write(data)
        }
    }
}

func _p(_ v: Any?) -> String {
    if let val = v {
        if let d = val as? Double {
            if d.rounded(.towardZero) == d {
                return String(Int64(d))
            }
        }
        return String(describing: val)
    }
    return "<nil>"
}

extension Double { init(_ v: Any) { if let d = v as? Double { self = d } else if let i = v as? Int { self = Double(i) } else if let i = v as? Int64 { self = Double(i) } else if let s = v as? String { self = Double(s) ?? 0 } else { self = 0 } } }
var _nowSeed = 0
var _nowSeeded = false
func _now() -> Int {
    if !_nowSeeded {
        if let s = ProcessInfo.processInfo.environment["MOCHI_NOW_SEED"], let v = Int(s) {
            _nowSeed = v
            _nowSeeded = true
        }
    }
    if _nowSeeded {
        _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647
        return _nowSeed
    }
    return Int(Date().timeIntervalSince1970 * 1_000_000_000)
}
func gzipWriter(_ w: Any?) -> Any? {
    return w
}
func tarWriter(_ w: Any?) -> Any? {
    return w
}
func tarWriteHeader(_ w: Any?, _ hdr: [String: Any?]) {
}
func tarWrite(_ w: Any?, _ data: String) {
}
func main() {
    let filename = "TAPE.FILE"
    let data = ""
    let outfile = ""
    let gzipFlag = false
    var w: Any? = nil
    if (outfile != "") {
        w = nil
    }
    if gzipFlag {
        w = gzipWriter(w)
    }
    w = tarWriter(w)
    var hdr: [String: Any?] = (["Name": filename, "Mode": 432, "Size": Int(((data).count)), "ModTime": Int(_now()), "Typeflag": 0, "Uname": "guest", "Gname": "guest"] as! [String: Any?])
    _ = tarWriteHeader(w, (hdr as! [String: Any?]))
    _ = tarWrite(w, (data as! String))
}
_ = main()
