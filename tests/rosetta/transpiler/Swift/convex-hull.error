exit status 1
/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:79:42: warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
77 |     return s
78 | }
79 | let pts: [Point] = ([(Point(x: 16, y: 3) as! Any), (Point(x: 12, y: 17) as! Any), (Point(x: 0, y: 6) as! Any), (Point(x: -4, y: -6) as! Any), (Point(x: 16, y: 6) as! Any), (Point(x: 16, y: -7) as! Any), (Point(x: 16, y: -3) as! Any), (Point(x: 17, y: -4) as! Any), (Point(x: 5, y: 19) as! Any), (Point(x: 19, y: -8) as! Any), (Point(x: 3, y: 16) as! Any), (Point(x: 12, y: 13) as! Any), (Point(x: 3, y: -4) as! Any), (Point(x: 17, y: 5) as! Any), (Point(x: -3, y: 15) as! Any), (Point(x: -3, y: -9) as! Any), (Point(x: 0, y: 11) as! Any), (Point(x: -9, y: -3) as! Any), (Point(x: -4, y: -2) as! Any), (Point(x: 12, y: 10) as! Any)] as! [Point])
   |                                          `- warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
80 | let hull: [Point] = (convexHull(&pts) as! [Point])
81 | print(_p(("Convex Hull: " + String(describing: hullStr((hull as! [Point]))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:79:73: warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
77 |     return s
78 | }
79 | let pts: [Point] = ([(Point(x: 16, y: 3) as! Any), (Point(x: 12, y: 17) as! Any), (Point(x: 0, y: 6) as! Any), (Point(x: -4, y: -6) as! Any), (Point(x: 16, y: 6) as! Any), (Point(x: 16, y: -7) as! Any), (Point(x: 16, y: -3) as! Any), (Point(x: 17, y: -4) as! Any), (Point(x: 5, y: 19) as! Any), (Point(x: 19, y: -8) as! Any), (Point(x: 3, y: 16) as! Any), (Point(x: 12, y: 13) as! Any), (Point(x: 3, y: -4) as! Any), (Point(x: 17, y: 5) as! Any), (Point(x: -3, y: 15) as! Any), (Point(x: -3, y: -9) as! Any), (Point(x: 0, y: 11) as! Any), (Point(x: -9, y: -3) as! Any), (Point(x: -4, y: -2) as! Any), (Point(x: 12, y: 10) as! Any)] as! [Point])
   |                                                                         `- warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
80 | let hull: [Point] = (convexHull(&pts) as! [Point])
81 | print(_p(("Convex Hull: " + String(describing: hullStr((hull as! [Point]))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:79:102: warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
77 |     return s
78 | }
79 | let pts: [Point] = ([(Point(x: 16, y: 3) as! Any), (Point(x: 12, y: 17) as! Any), (Point(x: 0, y: 6) as! Any), (Point(x: -4, y: -6) as! Any), (Point(x: 16, y: 6) as! Any), (Point(x: 16, y: -7) as! Any), (Point(x: 16, y: -3) as! Any), (Point(x: 17, y: -4) as! Any), (Point(x: 5, y: 19) as! Any), (Point(x: 19, y: -8) as! Any), (Point(x: 3, y: 16) as! Any), (Point(x: 12, y: 13) as! Any), (Point(x: 3, y: -4) as! Any), (Point(x: 17, y: 5) as! Any), (Point(x: -3, y: 15) as! Any), (Point(x: -3, y: -9) as! Any), (Point(x: 0, y: 11) as! Any), (Point(x: -9, y: -3) as! Any), (Point(x: -4, y: -2) as! Any), (Point(x: 12, y: 10) as! Any)] as! [Point])
   |                                                                                                      `- warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
80 | let hull: [Point] = (convexHull(&pts) as! [Point])
81 | print(_p(("Convex Hull: " + String(describing: hullStr((hull as! [Point]))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:79:133: warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
77 |     return s
78 | }
79 | let pts: [Point] = ([(Point(x: 16, y: 3) as! Any), (Point(x: 12, y: 17) as! Any), (Point(x: 0, y: 6) as! Any), (Point(x: -4, y: -6) as! Any), (Point(x: 16, y: 6) as! Any), (Point(x: 16, y: -7) as! Any), (Point(x: 16, y: -3) as! Any), (Point(x: 17, y: -4) as! Any), (Point(x: 5, y: 19) as! Any), (Point(x: 19, y: -8) as! Any), (Point(x: 3, y: 16) as! Any), (Point(x: 12, y: 13) as! Any), (Point(x: 3, y: -4) as! Any), (Point(x: 17, y: 5) as! Any), (Point(x: -3, y: 15) as! Any), (Point(x: -3, y: -9) as! Any), (Point(x: 0, y: 11) as! Any), (Point(x: -9, y: -3) as! Any), (Point(x: -4, y: -2) as! Any), (Point(x: 12, y: 10) as! Any)] as! [Point])
   |                                                                                                                                     `- warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
80 | let hull: [Point] = (convexHull(&pts) as! [Point])
81 | print(_p(("Convex Hull: " + String(describing: hullStr((hull as! [Point]))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:79:163: warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
77 |     return s
78 | }
79 | let pts: [Point] = ([(Point(x: 16, y: 3) as! Any), (Point(x: 12, y: 17) as! Any), (Point(x: 0, y: 6) as! Any), (Point(x: -4, y: -6) as! Any), (Point(x: 16, y: 6) as! Any), (Point(x: 16, y: -7) as! Any), (Point(x: 16, y: -3) as! Any), (Point(x: 17, y: -4) as! Any), (Point(x: 5, y: 19) as! Any), (Point(x: 19, y: -8) as! Any), (Point(x: 3, y: 16) as! Any), (Point(x: 12, y: 13) as! Any), (Point(x: 3, y: -4) as! Any), (Point(x: 17, y: 5) as! Any), (Point(x: -3, y: 15) as! Any), (Point(x: -3, y: -9) as! Any), (Point(x: 0, y: 11) as! Any), (Point(x: -9, y: -3) as! Any), (Point(x: -4, y: -2) as! Any), (Point(x: 12, y: 10) as! Any)] as! [Point])
   |                                                                                                                                                                   `- warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
80 | let hull: [Point] = (convexHull(&pts) as! [Point])
81 | print(_p(("Convex Hull: " + String(describing: hullStr((hull as! [Point]))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:79:194: warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
77 |     return s
78 | }
79 | let pts: [Point] = ([(Point(x: 16, y: 3) as! Any), (Point(x: 12, y: 17) as! Any), (Point(x: 0, y: 6) as! Any), (Point(x: -4, y: -6) as! Any), (Point(x: 16, y: 6) as! Any), (Point(x: 16, y: -7) as! Any), (Point(x: 16, y: -3) as! Any), (Point(x: 17, y: -4) as! Any), (Point(x: 5, y: 19) as! Any), (Point(x: 19, y: -8) as! Any), (Point(x: 3, y: 16) as! Any), (Point(x: 12, y: 13) as! Any), (Point(x: 3, y: -4) as! Any), (Point(x: 17, y: 5) as! Any), (Point(x: -3, y: 15) as! Any), (Point(x: -3, y: -9) as! Any), (Point(x: 0, y: 11) as! Any), (Point(x: -9, y: -3) as! Any), (Point(x: -4, y: -2) as! Any), (Point(x: 12, y: 10) as! Any)] as! [Point])
   |                                                                                                                                                                                                  `- warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
80 | let hull: [Point] = (convexHull(&pts) as! [Point])
81 | print(_p(("Convex Hull: " + String(describing: hullStr((hull as! [Point]))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:79:225: warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
77 |     return s
78 | }
79 | let pts: [Point] = ([(Point(x: 16, y: 3) as! Any), (Point(x: 12, y: 17) as! Any), (Point(x: 0, y: 6) as! Any), (Point(x: -4, y: -6) as! Any), (Point(x: 16, y: 6) as! Any), (Point(x: 16, y: -7) as! Any), (Point(x: 16, y: -3) as! Any), (Point(x: 17, y: -4) as! Any), (Point(x: 5, y: 19) as! Any), (Point(x: 19, y: -8) as! Any), (Point(x: 3, y: 16) as! Any), (Point(x: 12, y: 13) as! Any), (Point(x: 3, y: -4) as! Any), (Point(x: 17, y: 5) as! Any), (Point(x: -3, y: 15) as! Any), (Point(x: -3, y: -9) as! Any), (Point(x: 0, y: 11) as! Any), (Point(x: -9, y: -3) as! Any), (Point(x: -4, y: -2) as! Any), (Point(x: 12, y: 10) as! Any)] as! [Point])
   |                                                                                                                                                                                                                                 `- warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
80 | let hull: [Point] = (convexHull(&pts) as! [Point])
81 | print(_p(("Convex Hull: " + String(describing: hullStr((hull as! [Point]))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:79:256: warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
77 |     return s
78 | }
79 | let pts: [Point] = ([(Point(x: 16, y: 3) as! Any), (Point(x: 12, y: 17) as! Any), (Point(x: 0, y: 6) as! Any), (Point(x: -4, y: -6) as! Any), (Point(x: 16, y: 6) as! Any), (Point(x: 16, y: -7) as! Any), (Point(x: 16, y: -3) as! Any), (Point(x: 17, y: -4) as! Any), (Point(x: 5, y: 19) as! Any), (Point(x: 19, y: -8) as! Any), (Point(x: 3, y: 16) as! Any), (Point(x: 12, y: 13) as! Any), (Point(x: 3, y: -4) as! Any), (Point(x: 17, y: 5) as! Any), (Point(x: -3, y: 15) as! Any), (Point(x: -3, y: -9) as! Any), (Point(x: 0, y: 11) as! Any), (Point(x: -9, y: -3) as! Any), (Point(x: -4, y: -2) as! Any), (Point(x: 12, y: 10) as! Any)] as! [Point])
   |                                                                                                                                                                                                                                                                `- warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
80 | let hull: [Point] = (convexHull(&pts) as! [Point])
81 | print(_p(("Convex Hull: " + String(describing: hullStr((hull as! [Point]))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:79:286: warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
77 |     return s
78 | }
79 | let pts: [Point] = ([(Point(x: 16, y: 3) as! Any), (Point(x: 12, y: 17) as! Any), (Point(x: 0, y: 6) as! Any), (Point(x: -4, y: -6) as! Any), (Point(x: 16, y: 6) as! Any), (Point(x: 16, y: -7) as! Any), (Point(x: 16, y: -3) as! Any), (Point(x: 17, y: -4) as! Any), (Point(x: 5, y: 19) as! Any), (Point(x: 19, y: -8) as! Any), (Point(x: 3, y: 16) as! Any), (Point(x: 12, y: 13) as! Any), (Point(x: 3, y: -4) as! Any), (Point(x: 17, y: 5) as! Any), (Point(x: -3, y: 15) as! Any), (Point(x: -3, y: -9) as! Any), (Point(x: 0, y: 11) as! Any), (Point(x: -9, y: -3) as! Any), (Point(x: -4, y: -2) as! Any), (Point(x: 12, y: 10) as! Any)] as! [Point])
   |                                                                                                                                                                                                                                                                                              `- warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
80 | let hull: [Point] = (convexHull(&pts) as! [Point])
81 | print(_p(("Convex Hull: " + String(describing: hullStr((hull as! [Point]))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:79:317: warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
77 |     return s
78 | }
79 | let pts: [Point] = ([(Point(x: 16, y: 3) as! Any), (Point(x: 12, y: 17) as! Any), (Point(x: 0, y: 6) as! Any), (Point(x: -4, y: -6) as! Any), (Point(x: 16, y: 6) as! Any), (Point(x: 16, y: -7) as! Any), (Point(x: 16, y: -3) as! Any), (Point(x: 17, y: -4) as! Any), (Point(x: 5, y: 19) as! Any), (Point(x: 19, y: -8) as! Any), (Point(x: 3, y: 16) as! Any), (Point(x: 12, y: 13) as! Any), (Point(x: 3, y: -4) as! Any), (Point(x: 17, y: 5) as! Any), (Point(x: -3, y: 15) as! Any), (Point(x: -3, y: -9) as! Any), (Point(x: 0, y: 11) as! Any), (Point(x: -9, y: -3) as! Any), (Point(x: -4, y: -2) as! Any), (Point(x: 12, y: 10) as! Any)] as! [Point])
   |                                                                                                                                                                                                                                                                                                                             `- warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
80 | let hull: [Point] = (convexHull(&pts) as! [Point])
81 | print(_p(("Convex Hull: " + String(describing: hullStr((hull as! [Point]))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:79:347: warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
77 |     return s
78 | }
79 | let pts: [Point] = ([(Point(x: 16, y: 3) as! Any), (Point(x: 12, y: 17) as! Any), (Point(x: 0, y: 6) as! Any), (Point(x: -4, y: -6) as! Any), (Point(x: 16, y: 6) as! Any), (Point(x: 16, y: -7) as! Any), (Point(x: 16, y: -3) as! Any), (Point(x: 17, y: -4) as! Any), (Point(x: 5, y: 19) as! Any), (Point(x: 19, y: -8) as! Any), (Point(x: 3, y: 16) as! Any), (Point(x: 12, y: 13) as! Any), (Point(x: 3, y: -4) as! Any), (Point(x: 17, y: 5) as! Any), (Point(x: -3, y: 15) as! Any), (Point(x: -3, y: -9) as! Any), (Point(x: 0, y: 11) as! Any), (Point(x: -9, y: -3) as! Any), (Point(x: -4, y: -2) as! Any), (Point(x: 12, y: 10) as! Any)] as! [Point])
   |                                                                                                                                                                                                                                                                                                                                                           `- warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
80 | let hull: [Point] = (convexHull(&pts) as! [Point])
81 | print(_p(("Convex Hull: " + String(describing: hullStr((hull as! [Point]))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:79:378: warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
77 |     return s
78 | }
79 | let pts: [Point] = ([(Point(x: 16, y: 3) as! Any), (Point(x: 12, y: 17) as! Any), (Point(x: 0, y: 6) as! Any), (Point(x: -4, y: -6) as! Any), (Point(x: 16, y: 6) as! Any), (Point(x: 16, y: -7) as! Any), (Point(x: 16, y: -3) as! Any), (Point(x: 17, y: -4) as! Any), (Point(x: 5, y: 19) as! Any), (Point(x: 19, y: -8) as! Any), (Point(x: 3, y: 16) as! Any), (Point(x: 12, y: 13) as! Any), (Point(x: 3, y: -4) as! Any), (Point(x: 17, y: 5) as! Any), (Point(x: -3, y: 15) as! Any), (Point(x: -3, y: -9) as! Any), (Point(x: 0, y: 11) as! Any), (Point(x: -9, y: -3) as! Any), (Point(x: -4, y: -2) as! Any), (Point(x: 12, y: 10) as! Any)] as! [Point])
   |                                                                                                                                                                                                                                                                                                                                                                                          `- warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
80 | let hull: [Point] = (convexHull(&pts) as! [Point])
81 | print(_p(("Convex Hull: " + String(describing: hullStr((hull as! [Point]))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:79:408: warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
77 |     return s
78 | }
79 | let pts: [Point] = ([(Point(x: 16, y: 3) as! Any), (Point(x: 12, y: 17) as! Any), (Point(x: 0, y: 6) as! Any), (Point(x: -4, y: -6) as! Any), (Point(x: 16, y: 6) as! Any), (Point(x: 16, y: -7) as! Any), (Point(x: 16, y: -3) as! Any), (Point(x: 17, y: -4) as! Any), (Point(x: 5, y: 19) as! Any), (Point(x: 19, y: -8) as! Any), (Point(x: 3, y: 16) as! Any), (Point(x: 12, y: 13) as! Any), (Point(x: 3, y: -4) as! Any), (Point(x: 17, y: 5) as! Any), (Point(x: -3, y: 15) as! Any), (Point(x: -3, y: -9) as! Any), (Point(x: 0, y: 11) as! Any), (Point(x: -9, y: -3) as! Any), (Point(x: -4, y: -2) as! Any), (Point(x: 12, y: 10) as! Any)] as! [Point])
   |                                                                                                                                                                                                                                                                                                                                                                                                                        `- warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
80 | let hull: [Point] = (convexHull(&pts) as! [Point])
81 | print(_p(("Convex Hull: " + String(describing: hullStr((hull as! [Point]))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:79:438: warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
77 |     return s
78 | }
79 | let pts: [Point] = ([(Point(x: 16, y: 3) as! Any), (Point(x: 12, y: 17) as! Any), (Point(x: 0, y: 6) as! Any), (Point(x: -4, y: -6) as! Any), (Point(x: 16, y: 6) as! Any), (Point(x: 16, y: -7) as! Any), (Point(x: 16, y: -3) as! Any), (Point(x: 17, y: -4) as! Any), (Point(x: 5, y: 19) as! Any), (Point(x: 19, y: -8) as! Any), (Point(x: 3, y: 16) as! Any), (Point(x: 12, y: 13) as! Any), (Point(x: 3, y: -4) as! Any), (Point(x: 17, y: 5) as! Any), (Point(x: -3, y: 15) as! Any), (Point(x: -3, y: -9) as! Any), (Point(x: 0, y: 11) as! Any), (Point(x: -9, y: -3) as! Any), (Point(x: -4, y: -2) as! Any), (Point(x: 12, y: 10) as! Any)] as! [Point])
   |                                                                                                                                                                                                                                                                                                                                                                                                                                                      `- warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
80 | let hull: [Point] = (convexHull(&pts) as! [Point])
81 | print(_p(("Convex Hull: " + String(describing: hullStr((hull as! [Point]))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:79:469: warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
77 |     return s
78 | }
79 | let pts: [Point] = ([(Point(x: 16, y: 3) as! Any), (Point(x: 12, y: 17) as! Any), (Point(x: 0, y: 6) as! Any), (Point(x: -4, y: -6) as! Any), (Point(x: 16, y: 6) as! Any), (Point(x: 16, y: -7) as! Any), (Point(x: 16, y: -3) as! Any), (Point(x: 17, y: -4) as! Any), (Point(x: 5, y: 19) as! Any), (Point(x: 19, y: -8) as! Any), (Point(x: 3, y: 16) as! Any), (Point(x: 12, y: 13) as! Any), (Point(x: 3, y: -4) as! Any), (Point(x: 17, y: 5) as! Any), (Point(x: -3, y: 15) as! Any), (Point(x: -3, y: -9) as! Any), (Point(x: 0, y: 11) as! Any), (Point(x: -9, y: -3) as! Any), (Point(x: -4, y: -2) as! Any), (Point(x: 12, y: 10) as! Any)] as! [Point])
   |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     `- warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
80 | let hull: [Point] = (convexHull(&pts) as! [Point])
81 | print(_p(("Convex Hull: " + String(describing: hullStr((hull as! [Point]))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:79:500: warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
77 |     return s
78 | }
79 | let pts: [Point] = ([(Point(x: 16, y: 3) as! Any), (Point(x: 12, y: 17) as! Any), (Point(x: 0, y: 6) as! Any), (Point(x: -4, y: -6) as! Any), (Point(x: 16, y: 6) as! Any), (Point(x: 16, y: -7) as! Any), (Point(x: 16, y: -3) as! Any), (Point(x: 17, y: -4) as! Any), (Point(x: 5, y: 19) as! Any), (Point(x: 19, y: -8) as! Any), (Point(x: 3, y: 16) as! Any), (Point(x: 12, y: 13) as! Any), (Point(x: 3, y: -4) as! Any), (Point(x: 17, y: 5) as! Any), (Point(x: -3, y: 15) as! Any), (Point(x: -3, y: -9) as! Any), (Point(x: 0, y: 11) as! Any), (Point(x: -9, y: -3) as! Any), (Point(x: -4, y: -2) as! Any), (Point(x: 12, y: 10) as! Any)] as! [Point])
   |`- warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
80 | let hull: [Point] = (convexHull(&pts) as! [Point])
81 | print(_p(("Convex Hull: " + String(describing: hullStr((hull as! [Point]))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:79:530: warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
77 |     return s
78 | }
79 | let pts: [Point] = ([(Point(x: 16, y: 3) as! Any), (Point(x: 12, y: 17) as! Any), (Point(x: 0, y: 6) as! Any), (Point(x: -4, y: -6) as! Any), (Point(x: 16, y: 6) as! Any), (Point(x: 16, y: -7) as! Any), (Point(x: 16, y: -3) as! Any), (Point(x: 17, y: -4) as! Any), (Point(x: 5, y: 19) as! Any), (Point(x: 19, y: -8) as! Any), (Point(x: 3, y: 16) as! Any), (Point(x: 12, y: 13) as! Any), (Point(x: 3, y: -4) as! Any), (Point(x: 17, y: 5) as! Any), (Point(x: -3, y: 15) as! Any), (Point(x: -3, y: -9) as! Any), (Point(x: 0, y: 11) as! Any), (Point(x: -9, y: -3) as! Any), (Point(x: -4, y: -2) as! Any), (Point(x: 12, y: 10) as! Any)] as! [Point])
   |`- warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
80 | let hull: [Point] = (convexHull(&pts) as! [Point])
81 | print(_p(("Convex Hull: " + String(describing: hullStr((hull as! [Point]))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:79:561: warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
77 |     return s
78 | }
79 | let pts: [Point] = ([(Point(x: 16, y: 3) as! Any), (Point(x: 12, y: 17) as! Any), (Point(x: 0, y: 6) as! Any), (Point(x: -4, y: -6) as! Any), (Point(x: 16, y: 6) as! Any), (Point(x: 16, y: -7) as! Any), (Point(x: 16, y: -3) as! Any), (Point(x: 17, y: -4) as! Any), (Point(x: 5, y: 19) as! Any), (Point(x: 19, y: -8) as! Any), (Point(x: 3, y: 16) as! Any), (Point(x: 12, y: 13) as! Any), (Point(x: 3, y: -4) as! Any), (Point(x: 17, y: 5) as! Any), (Point(x: -3, y: 15) as! Any), (Point(x: -3, y: -9) as! Any), (Point(x: 0, y: 11) as! Any), (Point(x: -9, y: -3) as! Any), (Point(x: -4, y: -2) as! Any), (Point(x: 12, y: 10) as! Any)] as! [Point])
   |`- warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
80 | let hull: [Point] = (convexHull(&pts) as! [Point])
81 | print(_p(("Convex Hull: " + String(describing: hullStr((hull as! [Point]))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:79:592: warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
77 |     return s
78 | }
79 | let pts: [Point] = ([(Point(x: 16, y: 3) as! Any), (Point(x: 12, y: 17) as! Any), (Point(x: 0, y: 6) as! Any), (Point(x: -4, y: -6) as! Any), (Point(x: 16, y: 6) as! Any), (Point(x: 16, y: -7) as! Any), (Point(x: 16, y: -3) as! Any), (Point(x: 17, y: -4) as! Any), (Point(x: 5, y: 19) as! Any), (Point(x: 19, y: -8) as! Any), (Point(x: 3, y: 16) as! Any), (Point(x: 12, y: 13) as! Any), (Point(x: 3, y: -4) as! Any), (Point(x: 17, y: 5) as! Any), (Point(x: -3, y: 15) as! Any), (Point(x: -3, y: -9) as! Any), (Point(x: 0, y: 11) as! Any), (Point(x: -9, y: -3) as! Any), (Point(x: -4, y: -2) as! Any), (Point(x: 12, y: 10) as! Any)] as! [Point])
   |`- warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
80 | let hull: [Point] = (convexHull(&pts) as! [Point])
81 | print(_p(("Convex Hull: " + String(describing: hullStr((hull as! [Point]))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:79:623: warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
77 |     return s
78 | }
79 | let pts: [Point] = ([(Point(x: 16, y: 3) as! Any), (Point(x: 12, y: 17) as! Any), (Point(x: 0, y: 6) as! Any), (Point(x: -4, y: -6) as! Any), (Point(x: 16, y: 6) as! Any), (Point(x: 16, y: -7) as! Any), (Point(x: 16, y: -3) as! Any), (Point(x: 17, y: -4) as! Any), (Point(x: 5, y: 19) as! Any), (Point(x: 19, y: -8) as! Any), (Point(x: 3, y: 16) as! Any), (Point(x: 12, y: 13) as! Any), (Point(x: 3, y: -4) as! Any), (Point(x: 17, y: 5) as! Any), (Point(x: -3, y: 15) as! Any), (Point(x: -3, y: -9) as! Any), (Point(x: 0, y: 11) as! Any), (Point(x: -9, y: -3) as! Any), (Point(x: -4, y: -2) as! Any), (Point(x: 12, y: 10) as! Any)] as! [Point])
   |`- warning: forced cast from 'Point' to 'Any' always succeeds; did you mean to use 'as'?
80 | let hull: [Point] = (convexHull(&pts) as! [Point])
81 | print(_p(("Convex Hull: " + String(describing: hullStr((hull as! [Point]))))))

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:80:33: error: cannot pass immutable value as inout argument: 'pts' is a 'let' constant
77 |     return s
78 | }
79 | let pts: [Point] = ([(Point(x: 16, y: 3) as! Any), (Point(x: 12, y: 17) as! Any), (Point(x: 0, y: 6) as! Any), (Point(x: -4, y: -6) as! Any), (Point(x: 16, y: 6) as! Any), (Point(x: 16, y: -7) as! Any), (Point(x: 16, y: -3) as! Any), (Point(x: 17, y: -4) as! Any), (Point(x: 5, y: 19) as! Any), (Point(x: 19, y: -8) as! Any), (Point(x: 3, y: 16) as! Any), (Point(x: 12, y: 13) as! Any), (Point(x: 3, y: -4) as! Any), (Point(x: 17, y: 5) as! Any), (Point(x: -3, y: 15) as! Any), (Point(x: -3, y: -9) as! Any), (Point(x: 0, y: 11) as! Any), (Point(x: -9, y: -3) as! Any), (Point(x: -4, y: -2) as! Any), (Point(x: 12, y: 10) as! Any)] as! [Point])
   | `- note: change 'let' to 'var' to make it mutable
80 | let hull: [Point] = (convexHull(&pts) as! [Point])
   |                                 `- error: cannot pass immutable value as inout argument: 'pts' is a 'let' constant
81 | print(_p(("Convex Hull: " + String(describing: hullStr((hull as! [Point]))))))
82 | 

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:80:39: warning: forced cast of '[Point]' to same type has no effect
78 | }
79 | let pts: [Point] = ([(Point(x: 16, y: 3) as! Any), (Point(x: 12, y: 17) as! Any), (Point(x: 0, y: 6) as! Any), (Point(x: -4, y: -6) as! Any), (Point(x: 16, y: 6) as! Any), (Point(x: 16, y: -7) as! Any), (Point(x: 16, y: -3) as! Any), (Point(x: 17, y: -4) as! Any), (Point(x: 5, y: 19) as! Any), (Point(x: 19, y: -8) as! Any), (Point(x: 3, y: 16) as! Any), (Point(x: 12, y: 13) as! Any), (Point(x: 3, y: -4) as! Any), (Point(x: 17, y: 5) as! Any), (Point(x: -3, y: 15) as! Any), (Point(x: -3, y: -9) as! Any), (Point(x: 0, y: 11) as! Any), (Point(x: -9, y: -3) as! Any), (Point(x: -4, y: -2) as! Any), (Point(x: 12, y: 10) as! Any)] as! [Point])
80 | let hull: [Point] = (convexHull(&pts) as! [Point])
   |                                       `- warning: forced cast of '[Point]' to same type has no effect
81 | print(_p(("Convex Hull: " + String(describing: hullStr((hull as! [Point]))))))
82 | 

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:81:62: warning: forced cast of '[Point]' to same type has no effect
79 | let pts: [Point] = ([(Point(x: 16, y: 3) as! Any), (Point(x: 12, y: 17) as! Any), (Point(x: 0, y: 6) as! Any), (Point(x: -4, y: -6) as! Any), (Point(x: 16, y: 6) as! Any), (Point(x: 16, y: -7) as! Any), (Point(x: 16, y: -3) as! Any), (Point(x: 17, y: -4) as! Any), (Point(x: 5, y: 19) as! Any), (Point(x: 19, y: -8) as! Any), (Point(x: 3, y: 16) as! Any), (Point(x: 12, y: 13) as! Any), (Point(x: 3, y: -4) as! Any), (Point(x: 17, y: 5) as! Any), (Point(x: -3, y: 15) as! Any), (Point(x: -3, y: -9) as! Any), (Point(x: 0, y: 11) as! Any), (Point(x: -9, y: -3) as! Any), (Point(x: -4, y: -2) as! Any), (Point(x: 12, y: 10) as! Any)] as! [Point])
80 | let hull: [Point] = (convexHull(&pts) as! [Point])
81 | print(_p(("Convex Hull: " + String(describing: hullStr((hull as! [Point]))))))
   |                                                              `- warning: forced cast of '[Point]' to same type has no effect
82 | 

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:30:29: warning: forced cast of 'Point' to same type has no effect
28 |         var j: Int = 0
29 |         while (j < (n - 1)) {
30 |             let p = (arr[j] as! Point)
   |                             `- warning: forced cast of 'Point' to same type has no effect
31 |             let q = (arr[(j + 1)] as! Point)
32 |             if ((p.x > q.x) || ((p.x == q.x) && (p.y > q.y))) {

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:31:35: warning: forced cast of 'Point' to same type has no effect
29 |         while (j < (n - 1)) {
30 |             let p = (arr[j] as! Point)
31 |             let q = (arr[(j + 1)] as! Point)
   |                                   `- warning: forced cast of 'Point' to same type has no effect
32 |             if ((p.x > q.x) || ((p.x == q.x) && (p.y > q.y))) {
33 |                 arr[j] = (q as! Point)

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:33:29: warning: forced cast of 'Point' to same type has no effect
31 |             let q = (arr[(j + 1)] as! Point)
32 |             if ((p.x > q.x) || ((p.x == q.x) && (p.y > q.y))) {
33 |                 arr[j] = (q as! Point)
   |                             `- warning: forced cast of 'Point' to same type has no effect
34 |                 arr[(j + 1)] = (p as! Point)
35 |             }

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:34:35: warning: forced cast of 'Point' to same type has no effect
32 |             if ((p.x > q.x) || ((p.x == q.x) && (p.y > q.y))) {
33 |                 arr[j] = (q as! Point)
34 |                 arr[(j + 1)] = (p as! Point)
   |                                   `- warning: forced cast of 'Point' to same type has no effect
35 |             }
36 |             j = ((j + 1) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:36:26: warning: forced cast of 'Int' to same type has no effect
34 |                 arr[(j + 1)] = (p as! Point)
35 |             }
36 |             j = ((j + 1) as! Int)
   |                          `- warning: forced cast of 'Int' to same type has no effect
37 |         }
38 |         i = ((i + 1) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:38:22: warning: forced cast of 'Int' to same type has no effect
36 |             j = ((j + 1) as! Int)
37 |         }
38 |         i = ((i + 1) as! Int)
   |                      `- warning: forced cast of 'Int' to same type has no effect
39 |     }
40 |     return arr

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:25:9: warning: variable 'n' was never mutated; consider changing to 'let' constant
23 | func sortPoints(_ ps: [Point]) -> [Point] {
24 |     var arr: [Point] = ps
25 |     var n: Int = Int(((arr).count))
   |         `- warning: variable 'n' was never mutated; consider changing to 'let' constant
26 |     var i: Int = 0
27 |     while (i < n) {

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:43:26: warning: forced cast of '[Point]' to same type has no effect
41 | }
42 | func convexHull(_ ps: inout [Point]) -> [Point] {
43 |     ps = (sortPoints((ps as! [Point])) as! [Point])
   |                          `- warning: forced cast of '[Point]' to same type has no effect
44 |     var h: [Point] = ([] as! [Point])
45 |     for pt in ps {

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:43:40: warning: forced cast of '[Point]' to same type has no effect
41 | }
42 | func convexHull(_ ps: inout [Point]) -> [Point] {
43 |     ps = (sortPoints((ps as! [Point])) as! [Point])
   |                                        `- warning: forced cast of '[Point]' to same type has no effect
44 |     var h: [Point] = ([] as! [Point])
45 |     for pt in ps {

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:46:75: warning: forced cast of 'Point' to same type has no effect
44 |     var h: [Point] = ([] as! [Point])
45 |     for pt in ps {
46 |         while ((Int(((h).count)) >= 2) && (ccw((h[(Int(((h).count)) - 2)] as! Point), (h[(Int(((h).count)) - 1)] as! Point), (pt as! Point)) == false)) {
   |                                                                           `- warning: forced cast of 'Point' to same type has no effect
47 |             h = (Array(h[0..<(Int(((h).count)) - 1)]) as! [Point])
48 |         }

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:46:114: warning: forced cast of 'Point' to same type has no effect
44 |     var h: [Point] = ([] as! [Point])
45 |     for pt in ps {
46 |         while ((Int(((h).count)) >= 2) && (ccw((h[(Int(((h).count)) - 2)] as! Point), (h[(Int(((h).count)) - 1)] as! Point), (pt as! Point)) == false)) {
   |                                                                                                                  `- warning: forced cast of 'Point' to same type has no effect
47 |             h = (Array(h[0..<(Int(((h).count)) - 1)]) as! [Point])
48 |         }

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:46:130: warning: forced cast of 'Point' to same type has no effect
44 |     var h: [Point] = ([] as! [Point])
45 |     for pt in ps {
46 |         while ((Int(((h).count)) >= 2) && (ccw((h[(Int(((h).count)) - 2)] as! Point), (h[(Int(((h).count)) - 1)] as! Point), (pt as! Point)) == false)) {
   |                                                                                                                                  `- warning: forced cast of 'Point' to same type has no effect
47 |             h = (Array(h[0..<(Int(((h).count)) - 1)]) as! [Point])
48 |         }

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:54:25: warning: forced cast of 'Point' to same type has no effect
52 |     let t = (Int(((h).count)) + 1)
53 |     while (i >= 0) {
54 |         let pt = (ps[i] as! Point)
   |                         `- warning: forced cast of 'Point' to same type has no effect
55 |         while ((Int(((h).count)) >= t) && (ccw((h[(Int(((h).count)) - 2)] as! Point), (h[(Int(((h).count)) - 1)] as! Point), (pt as! Point)) == false)) {
56 |             h = (Array(h[0..<(Int(((h).count)) - 1)]) as! [Point])

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:55:75: warning: forced cast of 'Point' to same type has no effect
53 |     while (i >= 0) {
54 |         let pt = (ps[i] as! Point)
55 |         while ((Int(((h).count)) >= t) && (ccw((h[(Int(((h).count)) - 2)] as! Point), (h[(Int(((h).count)) - 1)] as! Point), (pt as! Point)) == false)) {
   |                                                                           `- warning: forced cast of 'Point' to same type has no effect
56 |             h = (Array(h[0..<(Int(((h).count)) - 1)]) as! [Point])
57 |         }

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:55:114: warning: forced cast of 'Point' to same type has no effect
53 |     while (i >= 0) {
54 |         let pt = (ps[i] as! Point)
55 |         while ((Int(((h).count)) >= t) && (ccw((h[(Int(((h).count)) - 2)] as! Point), (h[(Int(((h).count)) - 1)] as! Point), (pt as! Point)) == false)) {
   |                                                                                                                  `- warning: forced cast of 'Point' to same type has no effect
56 |             h = (Array(h[0..<(Int(((h).count)) - 1)]) as! [Point])
57 |         }

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:55:130: warning: forced cast of 'Point' to same type has no effect
53 |     while (i >= 0) {
54 |         let pt = (ps[i] as! Point)
55 |         while ((Int(((h).count)) >= t) && (ccw((h[(Int(((h).count)) - 2)] as! Point), (h[(Int(((h).count)) - 1)] as! Point), (pt as! Point)) == false)) {
   |                                                                                                                                  `- warning: forced cast of 'Point' to same type has no effect
56 |             h = (Array(h[0..<(Int(((h).count)) - 1)]) as! [Point])
57 |         }

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:59:22: warning: forced cast of 'Int' to same type has no effect
57 |         }
58 |         h = (_append(h, pt) as! [Point])
59 |         i = ((i - 1) as! Int)
   |                      `- warning: forced cast of 'Int' to same type has no effect
60 |     }
61 |     return (Array(h[0..<(Int(((h).count)) - 1)]) as! [Point])

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:70:53: warning: forced cast of 'Point' to same type has no effect
68 |     var i: Int = 0
69 |     while (i < Int(((h).count))) {
70 |         s = ((s + String(describing: pointStr((h[i] as! Point)))) as! String)
   |                                                     `- warning: forced cast of 'Point' to same type has no effect
71 |         if (i < (Int(((h).count)) - 1)) {
72 |             s = ((s + " ") as! String)

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:70:67: warning: forced cast of 'String' to same type has no effect
68 |     var i: Int = 0
69 |     while (i < Int(((h).count))) {
70 |         s = ((s + String(describing: pointStr((h[i] as! Point)))) as! String)
   |                                                                   `- warning: forced cast of 'String' to same type has no effect
71 |         if (i < (Int(((h).count)) - 1)) {
72 |             s = ((s + " ") as! String)

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:72:28: warning: forced cast of 'String' to same type has no effect
70 |         s = ((s + String(describing: pointStr((h[i] as! Point)))) as! String)
71 |         if (i < (Int(((h).count)) - 1)) {
72 |             s = ((s + " ") as! String)
   |                            `- warning: forced cast of 'String' to same type has no effect
73 |         }
74 |         i = ((i + 1) as! Int)

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:74:22: warning: forced cast of 'Int' to same type has no effect
72 |             s = ((s + " ") as! String)
73 |         }
74 |         i = ((i + 1) as! Int)
   |                      `- warning: forced cast of 'Int' to same type has no effect
75 |     }
76 |     s = ((s + "]") as! String)

/tmp/TestSwiftTranspiler_Rosetta_Golden1526625561/001/main.swift:76:20: warning: forced cast of 'String' to same type has no effect
74 |         i = ((i + 1) as! Int)
75 |     }
76 |     s = ((s + "]") as! String)
   |                    `- warning: forced cast of 'String' to same type has no effect
77 |     return s
78 | }
