// Generated by Mochi transpiler v0.10.56 on 2025-08-04 08:23:09 GMT+7
import Foundation

let stdout = FileHandle.standardOutput
extension FileHandle {
    func write(_ string: String) {
        if let data = string.data(using: .utf8) {
            self.write(data)
        }
    }
}

func _p(_ v: Any?) -> String {
    if let val = v {
        if let d = val as? Double {
            if d.rounded(.towardZero) == d {
                return String(Int64(d))
            }
        }
        return String(describing: val)
    }
    return "<nil>"
}

extension Double { init(_ v: Any) { if let d = v as? Double { self = d } else if let i = v as? Int { self = Double(i) } else if let i = v as? Int64 { self = Double(i) } else if let s = v as? String { self = Double(s) ?? 0 } else { self = 0 } } }
func bubbleSort(_ a: [Int]) -> [Int] {
    var arr: [Int] = a
    var itemCount: Int = (Int(((arr).count)) &- 1)
    while true {
        var hasChanged: Bool = false
        var index: Int = 0
        while (index < itemCount) {
            if ((arr[index] as! Int) > (arr[(index &+ 1)] as! Int)) {
                let tmp = (arr[index] as! Int)
                arr[index] = (arr[(index &+ 1)] as! Int)
                arr[(index &+ 1)] = (tmp as! Int)
                hasChanged = true
            }
            index = Int((index &+ 1))
        }
        if (!hasChanged) {
            break
        }
        itemCount = Int((itemCount &- 1))
    }
    return arr
}
var list: [Int] = ([31, 41, 59, 26, 53, 58, 97, 93, 23, 84] as! [Int])
print(_p(("unsorted: " + String(describing: list))))
list = (bubbleSort((list as! [Int])) as! [Int])
print(_p(("sorted!  " + String(describing: list))))
