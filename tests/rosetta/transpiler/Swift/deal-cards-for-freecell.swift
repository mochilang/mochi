// Generated by Mochi transpiler v0.10.54 on 2025-08-02 11:10:54 GMT+7
import Foundation

let stdout = FileHandle.standardOutput
extension FileHandle {
    func write(_ string: String) {
        if let data = string.data(using: .utf8) {
            self.write(data)
        }
    }
}

func _p(_ v: Any?) -> String {
    if let val = v {
        if let d = val as? Double {
            if d.rounded(.towardZero) == d {
                return String(Int64(d))
            }
        }
        return String(describing: val)
    }
    return "<nil>"
}

func _append<T>(_ xs: [T], _ v: T) -> [T] {
    var out = xs
    out.append(v)
    return out
}
var seed: Int = 1
func rnd() -> Int {
    seed = ((Int(((seed &* 214013) &+ 2531011)) % 2147483648) as! Int)
    return (seed / 65536)
}
func deal(_ game: Int) -> [Int] {
    seed = (game as! Int)
    var deck: [Int] = ([] as! [Int])
    var i: Int = 0
    while (i < 52) {
        deck = (_append(deck, (51 &- i)) as! [Int])
        i = ((i &+ 1) as! Int)
    }
    i = 0
    while (i < 51) {
        let j = (51 &- Int((Int(rnd()) % Int((52 &- i)))))
        let tmp = (deck[i] as! Int)
        deck[i] = (deck[j] as! Int)
        deck[j] = (tmp as! Int)
        i = ((i &+ 1) as! Int)
    }
    return deck
}
let suits = "CDHS"
let nums = "A23456789TJQK"
func show(_ cards: [Int]) {
    var i: Int = 0
    while (i < Int(((cards).count))) {
        let c = (cards[i] as! Int)
        _ = stdout.write(((" " + String(describing: String(Array(String(describing: (nums as! String)))[((c / 4) as! Int)..<(((c / 4) &+ 1) as! Int)]))) + String(describing: String(Array(String(describing: (suits as! String)))[((c % 4) as! Int)..<(((c % 4) &+ 1) as! Int)]))))
        if (((Int((i &+ 1)) % 8) == 0) || ((i &+ 1) == Int(((cards).count)))) {
            print(_p(""))
        }
        i = ((i &+ 1) as! Int)
    }
}
print(_p(""))
print(_p("Game #1"))
_ = show((deal(1) as! [Int]))
print(_p(""))
print(_p("Game #617"))
_ = show((deal(617) as! [Int]))
