// Generated by Mochi transpiler v0.10.55 on 2025-08-02 21:12:44 GMT+7
import Foundation

let stdout = FileHandle.standardOutput
extension FileHandle {
    func write(_ string: String) {
        if let data = string.data(using: .utf8) {
            self.write(data)
        }
    }
}

func _p(_ v: Any?) -> String {
    if let val = v {
        if let d = val as? Double {
            if d.rounded(.towardZero) == d {
                return String(Int64(d))
            }
        }
        return String(describing: val)
    }
    return "<nil>"
}

extension Double { init(_ v: Any) { if let d = v as? Double { self = d } else if let i = v as? Int { self = Double(i) } else if let i = v as? Int64 { self = Double(i) } else if let s = v as? String { self = Double(s) ?? 0 } else { self = 0 } } }
func timeStr(_ sec: Int) -> String {
    var sec = sec
    var wks: Int = (sec / 604800)
    sec = Int((sec % 604800))
    var ds: Int = (sec / 86400)
    sec = Int((sec % 86400))
    var hrs: Int = (sec / 3600)
    sec = Int((sec % 3600))
    var mins: Int = (sec / 60)
    sec = Int((sec % 60))
    var res: String = ""
    var comma: Bool = false
    if (wks != 0) {
        res = (((res + String(describing: wks)) + " wk") as! String)
        comma = true
    }
    if (ds != 0) {
        if comma {
            res = ((res + ", ") as! String)
        }
        res = (((res + String(describing: ds)) + " d") as! String)
        comma = true
    }
    if (hrs != 0) {
        if comma {
            res = ((res + ", ") as! String)
        }
        res = (((res + String(describing: hrs)) + " hr") as! String)
        comma = true
    }
    if (mins != 0) {
        if comma {
            res = ((res + ", ") as! String)
        }
        res = (((res + String(describing: mins)) + " min") as! String)
        comma = true
    }
    if (sec != 0) {
        if comma {
            res = ((res + ", ") as! String)
        }
        res = (((res + String(describing: sec)) + " sec") as! String)
    }
    return res
}
print(_p(String(describing: timeStr(7259))))
print(_p(String(describing: timeStr(86400))))
print(_p(String(describing: timeStr(6000000))))
