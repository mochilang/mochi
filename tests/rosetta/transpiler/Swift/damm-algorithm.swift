// Generated by Mochi transpiler v0.10.52 on 2025-08-02 01:31:32 GMT+7
import Foundation

func _p(_ v: Any?) -> String {
    if let val = v {
        if let d = val as? Double {
            if d.rounded(.towardZero) == d {
                return String(Int64(d))
            }
        }
        return String(describing: val)
    }
    return "<nil>"
}

func damm(_ s: String) -> Bool {
    let tbl: [[Int]] = ([([0, 3, 1, 7, 5, 9, 8, 6, 4, 2] as! [Int]), ([7, 0, 9, 2, 1, 5, 4, 8, 6, 3] as! [Int]), ([4, 2, 0, 6, 8, 7, 1, 3, 5, 9] as! [Int]), ([1, 7, 5, 0, 9, 8, 3, 4, 2, 6] as! [Int]), ([6, 1, 2, 3, 0, 4, 5, 9, 7, 8] as! [Int]), ([3, 6, 7, 4, 2, 0, 9, 5, 8, 1] as! [Int]), ([5, 8, 6, 9, 7, 2, 0, 1, 3, 4] as! [Int]), ([8, 9, 4, 5, 3, 6, 2, 0, 1, 7] as! [Int]), ([9, 4, 3, 8, 6, 1, 7, 2, 0, 5] as! [Int]), ([2, 5, 8, 1, 4, 3, 6, 7, 9, 0] as! [Int])] as! [[Int]])
    let digits = ["0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9]
    var interim: Int = 0
    var i: Int = 0
    while (i < Int(((s).count))) {
        let digit = (digits[String(Array(s)[i..<(i &+ 1)])]! as! Int)
        let row: [Int] = (tbl[interim] as! [Int])
        interim = (row[digit] as! Int)
        i = ((i &+ 1) as! Int)
    }
    return (interim == 0)
}
func padLeft(_ s: String, _ width: Int) -> String {
    var s = s
    while (Int(((s).count)) < width) {
        s = ((" " + s) as! String)
    }
    return s
}
func main() {
    for s in (["5724", "5727", "112946", "112949"] as! [String]) {
        print(_p(((String(describing: padLeft((s as! String), 6)) + "  ") + _p(damm((s as! String))))))
    }
}
_ = main()
