// Generated by Mochi transpiler v0.10.39 on 2025-07-25 09:13:22 GMT+7
import Foundation

func _num(_ v: Any) -> Double {
    if let d = v as? Double { return d }
    if let i = v as? Int { return Double(i) }
    if let i = v as? Int64 { return Double(i) }
    return 0
}
var doors: [Any] = ([] as! [Any])
for i in 0..<100 {
    doors = ((((doors + [false]) as! [Any]) as! [Bool]) as! [Any])
}
for pass in 1..<101 {
    var idx = ((pass as! Int) - 1)
    while ((idx as! Int) < 100) {
        doors[idx] = (!((doors as! [Any])[idx] as! Bool))
        idx = (_num(idx) + _num(pass))
    }
}
for row in 0..<10 {
    var line = ""
    for col in 0..<10 {
        let idx = (((row as! Int) * 10) + (col as! Int))
        if ((doors as! [Any])[idx] as! Bool) {
            line = ((line + "1") as! String)
        } else {
            line = ((line + "0") as! String)
        }
        if ((col as! Int) < 9) {
            line = ((line + " ") as! String)
        }
    }
    print(line)
}
