// Generated by Mochi transpiler v0.10.42 on 2025-07-28 10:32:27 GMT+7
import Foundation

func _p(_ v: Any?) -> String {
    if let val = v { return String(describing: val) }
    return "<nil>"
}

var _nowSeed = 0
var _nowSeeded = false
func _now() -> Int {
    if !_nowSeeded {
        if let s = ProcessInfo.processInfo.environment["MOCHI_NOW_SEED"], let v = Int(s) {
            _nowSeed = v
            _nowSeeded = true
        }
    }
    if _nowSeeded {
        _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647
        return _nowSeed
    }
    return Int(Date().timeIntervalSince1970 * 1_000_000_000)
}
func _mem() -> Int {
    if let status = try? String(contentsOfFile: "/proc/self/status") {
        for line in status.split(separator: "\n") {
            if line.hasPrefix("VmRSS:") {
                let parts = line.split(whereSeparator: { $0 == " " || $0 == "\t" })
                if parts.count >= 2, let kb = Int(parts[1]) {
                    return kb * 1024
                }
            }
        }
    }
    return 0
}
do {
    let _benchMemStart = _mem()
    let _benchStart = _now()
    func absInt(_ n: Int) -> Int {
        if (n < 0) {
            return Int(-n)
        }
        return Int(n)
    }
    func main() {
        var b: Int = 1
        while (b <= 5) {
            if (b != 5) {
                var c: Int = 1
                while (c <= 5) {
                    if ((c != 1) && (c != b)) {
                        var f: Int = 1
                        while (f <= 5) {
                            if (((((f != 1) && (f != 5)) && (f != b)) && (f != c)) && (Int(absInt(Int((f - c)))) > 1)) {
                                var m: Int = 1
                                while (m <= 5) {
                                    if ((((m != b) && (m != c)) && (m != f)) && (m > c)) {
                                        var s: Int = 1
                                        while (s <= 5) {
                                            if (((((s != b) && (s != c)) && (s != f)) && (s != m)) && (Int(absInt(Int((s - f)))) > 1)) {
                                                print(_p((((((((((("Baker in " + _p(b)) + ", Cooper in ") + _p(c)) + ", Fletcher in ") + _p(f)) + ", Miller in ") + _p(m)) + ", Smith in ") + _p(s)) + ".")))
                                                return
                                            }
                                            s = Int((s + 1))
                                        }
                                    }
                                    m = Int((m + 1))
                                }
                            }
                            f = Int((f + 1))
                        }
                    }
                    c = Int((c + 1))
                }
            }
            b = Int((b + 1))
        }
        print(_p("No solution found."))
    }
    _ = main()
    let _benchEnd = _now()
    let _benchMemEnd = _mem()
    print("{\n  \"duration_us\": \((_benchEnd - _benchStart) / 1000),\n  \"memory_bytes\": \(_benchMemEnd - _benchMemStart),\n  \"name\": \"main\"\n}")
}
