// Generated by Mochi transpiler v0.10.39 on 2025-07-25 09:15:11 GMT+7
import Foundation

func pfacSum(_ i: Int) -> Int {
    var sum = 0
    var p = 1
    while (p <= (i / 2)) {
        if ((i % p) == 0) {
            sum = ((sum + p) as! Int)
        }
        p = ((p + 1) as! Int)
    }
    return (sum as! Int)
}
func pad(_ n: Int, _ width: Int) -> String {
    var s = String(String(describing: n))!
    while (Int(((s).count)) < width) {
        s = ((" " + s) as! String)
    }
    return (s as! String)
}
func main() {
    var sums: [Int] = ([] as! [Int])
    var i = 0
    while (i < 20000) {
        sums = ((sums + [0]) as! [Int])
        i = ((i + 1) as! Int)
    }
    i = 1
    while (i < 20000) {
        sums[i] = Int(pfacSum((i as! Int)))
        i = ((i + 1) as! Int)
    }
    print("The amicable pairs below 20,000 are:")
    var n = 2
    while (n < 19999) {
        let m = Int(sums[n])
        if (((m > n) && (m < 20000)) && (n == Int(sums[m]))) {
            print(((("  " + String(describing: pad((n as! Int), 5))) + " and ") + String(describing: pad((m as! Int), 5))))
        }
        n = ((n + 1) as! Int)
    }
}
_ = main()
