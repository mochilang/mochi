// Generated by Mochi transpiler v0.10.39 on 2025-07-24 20:10:04 GMT+7
import Foundation

func pfacSum(_ i: Int) -> Int {
    var sum = 0
    var p = 1
    while (Int(p) <= (Int(i) / 2)) {
        if ((Int(i) % Int(p)) == 0) {
            sum = ((Int(sum) + Int(p)) as! Int)
        }
        p = ((Int(p) + 1) as! Int)
    }
    return Int(sum)
}
func pad(_ n: Int, _ width: Int) -> String {
    var s = String(String(describing: Int(n)))
    while (Int(((String(s)).count)) < Int(width)) {
        s = ((" " + String(s)) as! String)
    }
    return String(s)
}
func main() {
    var sums: [Int] = ([] as! [Int])
    var i = 0
    while (Int(i) < 20000) {
        sums = (((sums as! [Int]) + [0]) as! [Int])
        i = ((Int(i) + 1) as! Int)
    }
    i = 1
    while (Int(i) < 20000) {
        sums[Int(i)] = Int(pfacSum(Int(i)))
        i = ((Int(i) + 1) as! Int)
    }
    print("The amicable pairs below 20,000 are:")
    var n = 2
    while (Int(n) < 19999) {
        let m = Int(sums[Int(n)])
        if (((Int(m) > Int(n)) && (Int(m) < 20000)) && (Int(n) == Int(sums[Int(m)]))) {
            print(((("  " + String(pad(Int(n), 5))) + " and ") + String(pad(Int(m), 5))))
        }
        n = ((Int(n) + 1) as! Int)
    }
}
_ = main()
