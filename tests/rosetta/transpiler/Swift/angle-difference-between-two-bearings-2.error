exit status 1
/tmp/TestSwiftTranspiler_Rosetta_Golden2656345284/001/main.swift:9:22: warning: forced cast of '[[Double]]' to same type has no effect
 7 | }
 8 | var testCases = ([([20.0, 45.0] as! [Double]), ([(0 - 45.0), 45.0] as! [Double]), ([(0 - 85.0), 90.0] as! [Double]), ([(0 - 95.0), 90.0] as! [Double]), ([(0 - 45.0), 125.0] as! [Double]), ([(0 - 45.0), 145.0] as! [Double]), ([29.4803, (0 - 88.6381)] as! [Double]), ([(0 - 78.3251), (0 - 159.036)] as! [Double]), ([(0 - 70099.74233810938), 29840.67437876723] as! [Double]), ([(0 - 165313.6666297357), 33693.9894517456] as! [Double]), ([1174.8380510598456, (0 - 154146.66490124757)] as! [Double]), ([60175.77306795546, 42213.07192354373] as! [Double])] as! [[Double]])
 9 | for tc in (testCases as! [[Double]]) {
   |                      `- warning: forced cast of '[[Double]]' to same type has no effect
10 |     print(Double(angleDiff(((tc as! [Any])[0] as! Double), ((tc as! [Any])[1] as! Double))))
11 | }

/tmp/TestSwiftTranspiler_Rosetta_Golden2656345284/001/main.swift:10:33: warning: forced cast from '[Double]' to '[Any]' always succeeds; did you mean to use 'as'?
 8 | var testCases = ([([20.0, 45.0] as! [Double]), ([(0 - 45.0), 45.0] as! [Double]), ([(0 - 85.0), 90.0] as! [Double]), ([(0 - 95.0), 90.0] as! [Double]), ([(0 - 45.0), 125.0] as! [Double]), ([(0 - 45.0), 145.0] as! [Double]), ([29.4803, (0 - 88.6381)] as! [Double]), ([(0 - 78.3251), (0 - 159.036)] as! [Double]), ([(0 - 70099.74233810938), 29840.67437876723] as! [Double]), ([(0 - 165313.6666297357), 33693.9894517456] as! [Double]), ([1174.8380510598456, (0 - 154146.66490124757)] as! [Double]), ([60175.77306795546, 42213.07192354373] as! [Double])] as! [[Double]])
 9 | for tc in (testCases as! [[Double]]) {
10 |     print(Double(angleDiff(((tc as! [Any])[0] as! Double), ((tc as! [Any])[1] as! Double))))
   |                                 `- warning: forced cast from '[Double]' to '[Any]' always succeeds; did you mean to use 'as'?
11 | }
12 | 

/tmp/TestSwiftTranspiler_Rosetta_Golden2656345284/001/main.swift:10:65: warning: forced cast from '[Double]' to '[Any]' always succeeds; did you mean to use 'as'?
 8 | var testCases = ([([20.0, 45.0] as! [Double]), ([(0 - 45.0), 45.0] as! [Double]), ([(0 - 85.0), 90.0] as! [Double]), ([(0 - 95.0), 90.0] as! [Double]), ([(0 - 45.0), 125.0] as! [Double]), ([(0 - 45.0), 145.0] as! [Double]), ([29.4803, (0 - 88.6381)] as! [Double]), ([(0 - 78.3251), (0 - 159.036)] as! [Double]), ([(0 - 70099.74233810938), 29840.67437876723] as! [Double]), ([(0 - 165313.6666297357), 33693.9894517456] as! [Double]), ([1174.8380510598456, (0 - 154146.66490124757)] as! [Double]), ([60175.77306795546, 42213.07192354373] as! [Double])] as! [[Double]])
 9 | for tc in (testCases as! [[Double]]) {
10 |     print(Double(angleDiff(((tc as! [Any])[0] as! Double), ((tc as! [Any])[1] as! Double))))
   |                                                                 `- warning: forced cast from '[Double]' to '[Any]' always succeeds; did you mean to use 'as'?
11 | }
12 | 

/tmp/TestSwiftTranspiler_Rosetta_Golden2656345284/001/main.swift:6:12: error: the compiler is unable to type-check this expression in reasonable time; try breaking up the expression into distinct sub-expressions
 4 | func angleDiff(_ b1: Double, _ b2: Double) -> Double {
 5 |     let diff = (Double(b2) - Double(b1))
 6 |     return ((Double((Double((((Double(diff) % 360.0) + 360.0) + 180.0)) % 360.0)) - 180.0) as! Double)
   |            `- error: the compiler is unable to type-check this expression in reasonable time; try breaking up the expression into distinct sub-expressions
 7 | }
 8 | var testCases = ([([20.0, 45.0] as! [Double]), ([(0 - 45.0), 45.0] as! [Double]), ([(0 - 85.0), 90.0] as! [Double]), ([(0 - 95.0), 90.0] as! [Double]), ([(0 - 45.0), 125.0] as! [Double]), ([(0 - 45.0), 145.0] as! [Double]), ([29.4803, (0 - 88.6381)] as! [Double]), ([(0 - 78.3251), (0 - 159.036)] as! [Double]), ([(0 - 70099.74233810938), 29840.67437876723] as! [Double]), ([(0 - 165313.6666297357), 33693.9894517456] as! [Double]), ([1174.8380510598456, (0 - 154146.66490124757)] as! [Double]), ([60175.77306795546, 42213.07192354373] as! [Double])] as! [[Double]])
