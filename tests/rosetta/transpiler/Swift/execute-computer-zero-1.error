exit status 1
/tmp/TestSwiftTranspiler_Rosetta_Golden1500618168/001/main.swift:76:23: warning: forced cast of '[String]' to same type has no effect
 74 |         }
 75 |         parts = (_append(parts, cur) as! [String])
 76 |         return (parts as! [String])
    |                       `- warning: forced cast of '[String]' to same type has no effect
 77 |     }
 78 |     func splitWS(_ s: String) -> [String] {

/tmp/TestSwiftTranspiler_Rosetta_Golden1500618168/001/main.swift:97:21: warning: forced cast of '[String]' to same type has no effect
 95 |             out = (_append(out, cur) as! [String])
 96 |         }
 97 |         return (out as! [String])
    |                     `- warning: forced cast of '[String]' to same type has no effect
 98 |     }
 99 |     func indexOf(_ s: String, _ ch: String) -> Int {

/tmp/TestSwiftTranspiler_Rosetta_Golden1500618168/001/main.swift:119:94: error: cannot convert value of type 'Any' to expected argument type 'Int'
117 |         let digits: [String: Any] = ["0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9]
118 |         while (i < Int(((str).count))) {
119 |             n = Int(((n * 10) + ((digits as! [String: Any])[String(Array(str)[i..<(i + 1)])] as! Any)))
    |                                                                                              `- error: cannot convert value of type 'Any' to expected argument type 'Int'
120 |             i = Int((i + 1))
121 |         }

/tmp/TestSwiftTranspiler_Rosetta_Golden1500618168/001/main.swift:119:42: warning: forced cast of '[String : Any]' to same type has no effect
117 |         let digits: [String: Any] = ["0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9]
118 |         while (i < Int(((str).count))) {
119 |             n = Int(((n * 10) + ((digits as! [String: Any])[String(Array(str)[i..<(i + 1)])] as! Any)))
    |                                          `- warning: forced cast of '[String : Any]' to same type has no effect
120 |             i = Int((i + 1))
121 |         }

/tmp/TestSwiftTranspiler_Rosetta_Golden1500618168/001/main.swift:119:94: warning: forced cast from 'Any?' to 'Any' only unwraps optionals; did you mean to use '!'?
117 |         let digits: [String: Any] = ["0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9]
118 |         while (i < Int(((str).count))) {
119 |             n = Int(((n * 10) + ((digits as! [String: Any])[String(Array(str)[i..<(i + 1)])] as! Any)))
    |                                                                                              `- warning: forced cast from 'Any?' to 'Any' only unwraps optionals; did you mean to use '!'?
120 |             i = Int((i + 1))
121 |         }

/tmp/TestSwiftTranspiler_Rosetta_Golden1500618168/001/main.swift:128:59: warning: forced cast of '[String]' to same type has no effect
126 |     }
127 |     func parseAsm(_ asm: String) -> [String: Any] {
128 |         let lines = (split(String(describing: asm), "\n") as! [String])
    |                                                           `- warning: forced cast of '[String]' to same type has no effect
129 |         var instrs: [Instruction] = ([] as! [Instruction])
130 |         var labels: [String: Int] = ([:] as! [String: Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden1500618168/001/main.swift:148:64: warning: forced cast of '[String]' to same type has no effect
146 |             var arg: String = ""
147 |             if (Int(((line).count)) > 0) {
148 |                 let parts = (splitWS(String(describing: line)) as! [String])
    |                                                                `- warning: forced cast of '[String]' to same type has no effect
149 |                 if (Int(((parts).count)) > 0) {
150 |                     opcode = String(describing: parts[0])

/tmp/TestSwiftTranspiler_Rosetta_Golden1500618168/001/main.swift:156:40: error: missing argument label 'where:' in call
154 |                 } else {
155 |                     let ops: [String: Any] = ["NOP": 0, "LDA": 1, "STA": 2, "ADD": 3, "SUB": 4, "BRZ": 5, "JMP": 6, "STP": 7]
156 |                     if (!(ops.contains(opcode))) {
    |                                        `- error: missing argument label 'where:' in call
157 |                         arg = String(describing: opcode)
158 |                         opcode = ""

/tmp/TestSwiftTranspiler_Rosetta_Golden1500618168/001/main.swift:156:40: error: cannot convert value of type 'String' to expected argument type '(Dictionary<String, Any>.Element) throws -> Bool' (aka '((key: String, value: Any)) throws -> Bool')
154 |                 } else {
155 |                     let ops: [String: Any] = ["NOP": 0, "LDA": 1, "STA": 2, "ADD": 3, "SUB": 4, "BRZ": 5, "JMP": 6, "STP": 7]
156 |                     if (!(ops.contains(opcode))) {
    |                                        `- error: cannot convert value of type 'String' to expected argument type '(Dictionary<String, Any>.Element) throws -> Bool' (aka '((key: String, value: Any)) throws -> Bool')
157 |                         arg = String(describing: opcode)
158 |                         opcode = ""

/tmp/TestSwiftTranspiler_Rosetta_Golden1500618168/001/main.swift:178:34: warning: forced cast of 'Instruction' to same type has no effect
176 |         let opcodes: [String: Any] = ["NOP": 0, "LDA": 1, "STA": 2, "ADD": 3, "SUB": 4, "BRZ": 5, "JMP": 6, "STP": 7]
177 |         while (i < Int(((instrs).count))) {
178 |             let ins = (instrs[i] as! Instruction)
    |                                  `- warning: forced cast of 'Instruction' to same type has no effect
179 |             var arg: Int = 0
180 |             if (ins.Arg != "") {

/tmp/TestSwiftTranspiler_Rosetta_Golden1500618168/001/main.swift:182:45: warning: forced cast of 'Int' to same type has no effect
180 |             if (ins.Arg != "") {
181 |                 if (labels[ins.Arg] != nil) {
182 |                     arg = (labels[ins.Arg]! as! Int)
    |                                             `- warning: forced cast of 'Int' to same type has no effect
183 |                 } else {
184 |                     arg = Int(Int(String(describing: String(describing: ins.Arg)))!)

/tmp/TestSwiftTranspiler_Rosetta_Golden1500618168/001/main.swift:189:34: warning: forced cast of '[String : Any]' to same type has no effect
187 |             var code: Int = 0
188 |             if (ins.Opcode != "") {
189 |                 code = ((opcodes as! [String: Any])[ins.Opcode] as! Int)
    |                                  `- warning: forced cast of '[String : Any]' to same type has no effect
190 |             }
191 |             bytecode = (_append(bytecode, ((code * 32) + arg)) as! [Int])

/tmp/TestSwiftTranspiler_Rosetta_Golden1500618168/001/main.swift:197:26: warning: forced cast of '[Int]' to same type has no effect
195 |             bytecode = (_append(bytecode, 0) as! [Int])
196 |         }
197 |         return (bytecode as! [Int])
    |                          `- warning: forced cast of '[Int]' to same type has no effect
198 |     }
199 |     func floorMod(_ a: Int, _ b: Int) -> Int {

/tmp/TestSwiftTranspiler_Rosetta_Golden1500618168/001/main.swift:212:46: warning: forced cast of 'Int' to same type has no effect
210 |         var i: Int = 0
211 |         while (i < Int(((bytecode).count))) {
212 |             mem = (_append(mem, (bytecode[i] as! Int)) as! [Int])
    |                                              `- warning: forced cast of 'Int' to same type has no effect
213 |             i = Int((i + 1))
214 |         }

/tmp/TestSwiftTranspiler_Rosetta_Golden1500618168/001/main.swift:216:32: warning: forced cast of 'Int' to same type has no effect
214 |         }
215 |         while (pc < 32) {
216 |             let op = ((mem[pc] as! Int) / 32)
    |                                `- warning: forced cast of 'Int' to same type has no effect
217 |             let arg = ((mem[pc] as! Int) % 32)
218 |             pc = Int((pc + 1))

/tmp/TestSwiftTranspiler_Rosetta_Golden1500618168/001/main.swift:217:33: warning: forced cast of 'Int' to same type has no effect
215 |         while (pc < 32) {
216 |             let op = ((mem[pc] as! Int) / 32)
217 |             let arg = ((mem[pc] as! Int) % 32)
    |                                 `- warning: forced cast of 'Int' to same type has no effect
218 |             pc = Int((pc + 1))
219 |             if (op == 0) {

/tmp/TestSwiftTranspiler_Rosetta_Golden1500618168/001/main.swift:222:33: warning: forced cast of 'Int' to same type has no effect
220 |                 continue
221 |             } else if (op == 1) {
222 |                 acc = (mem[arg] as! Int)
    |                                 `- warning: forced cast of 'Int' to same type has no effect
223 |             } else if (op == 2) {
224 |                 mem[arg] = Int(acc)

/tmp/TestSwiftTranspiler_Rosetta_Golden1500618168/001/main.swift:226:57: warning: forced cast of 'Int' to same type has no effect
224 |                 mem[arg] = Int(acc)
225 |             } else if (op == 3) {
226 |                 acc = Int(floorMod(Int((acc + (mem[arg] as! Int))), 256))
    |                                                         `- warning: forced cast of 'Int' to same type has no effect
227 |             } else if (op == 4) {
228 |                 acc = Int(floorMod(Int((acc - (mem[arg] as! Int))), 256))

/tmp/TestSwiftTranspiler_Rosetta_Golden1500618168/001/main.swift:228:57: warning: forced cast of 'Int' to same type has no effect
226 |                 acc = Int(floorMod(Int((acc + (mem[arg] as! Int))), 256))
227 |             } else if (op == 4) {
228 |                 acc = Int(floorMod(Int((acc - (mem[arg] as! Int))), 256))
    |                                                         `- warning: forced cast of 'Int' to same type has no effect
229 |             } else if (op == 5) {
230 |                 if (acc == 0) {

/tmp/TestSwiftTranspiler_Rosetta_Golden1500618168/001/main.swift:251:57: warning: forced cast of '[String : Any]' to same type has no effect
249 |     }
250 |     func execute(_ asm: String) -> Int {
251 |         let parsed = (parseAsm(String(describing: asm)) as! [String: Any])
    |                                                         `- warning: forced cast of '[String : Any]' to same type has no effect
252 |         let bc = (compile((parsed as! [String: Any])) as! [Int])
253 |         return Int(run((bc as! [Int])))

/tmp/TestSwiftTranspiler_Rosetta_Golden1500618168/001/main.swift:252:35: warning: forced cast of '[String : Any]' to same type has no effect
250 |     func execute(_ asm: String) -> Int {
251 |         let parsed = (parseAsm(String(describing: asm)) as! [String: Any])
252 |         let bc = (compile((parsed as! [String: Any])) as! [Int])
    |                                   `- warning: forced cast of '[String : Any]' to same type has no effect
253 |         return Int(run((bc as! [Int])))
254 |     }

/tmp/TestSwiftTranspiler_Rosetta_Golden1500618168/001/main.swift:252:55: warning: forced cast of '[Int]' to same type has no effect
250 |     func execute(_ asm: String) -> Int {
251 |         let parsed = (parseAsm(String(describing: asm)) as! [String: Any])
252 |         let bc = (compile((parsed as! [String: Any])) as! [Int])
    |                                                       `- warning: forced cast of '[Int]' to same type has no effect
253 |         return Int(run((bc as! [Int])))
254 |     }

/tmp/TestSwiftTranspiler_Rosetta_Golden1500618168/001/main.swift:253:28: warning: forced cast of '[Int]' to same type has no effect
251 |         let parsed = (parseAsm(String(describing: asm)) as! [String: Any])
252 |         let bc = (compile((parsed as! [String: Any])) as! [Int])
253 |         return Int(run((bc as! [Int])))
    |                            `- warning: forced cast of '[Int]' to same type has no effect
254 |     }
255 |     func main() {

/tmp/TestSwiftTranspiler_Rosetta_Golden1500618168/001/main.swift:264:5: warning: using '_' to ignore the result of a Void-returning function is redundant
262 |         }
263 |     }
264 |     _ = main()
    |     `- warning: using '_' to ignore the result of a Void-returning function is redundant
265 |     let _benchEnd = _now()
266 |     let _benchMemEnd = _mem()
