// Generated by Mochi transpiler v0.10.47 on 2025-07-28 12:01:04 GMT+7
import Foundation

func _p(_ v: Any?) -> String {
    if let val = v { return String(describing: val) }
    return "<nil>"
}

func _append<T>(_ xs: [T], _ v: T) -> [T] {
    var out = xs
    out.append(v)
    return out
}
func listStr(_ xs: [Int]) -> String {
    var s: String = "["
    var i: Int = 0
    while (i < Int(((xs).count))) {
        s = ((s + _p((xs[i] as! Int))) as! String)
        if (i < (Int(((xs).count)) - 1)) {
            s = ((s + " ") as! String)
        }
        i = ((i + 1) as! Int)
    }
    s = ((s + "]") as! String)
    return (s as! String)
}
func llStr(_ lst: [[Int]]) -> String {
    var s: String = "["
    var i: Int = 0
    while (i < Int(((lst).count))) {
        s = ((s + String(describing: listStr((lst[i] as! [Int])))) as! String)
        if (i < (Int(((lst).count)) - 1)) {
            s = ((s + " ") as! String)
        }
        i = ((i + 1) as! Int)
    }
    s = ((s + "]") as! String)
    return (s as! String)
}
func copy(_ xs: [Int]) -> [Int] {
    var out: [Int] = ([] as! [Int])
    for v in xs {
        out = (_append(out, v) as! [Int])
    }
    return (out as! [Int])
}
func cartN(_ lists: Any?) -> [[Int]] {
    if (String(describing: lists)
    == String(describing: nil as Any?)
    ) {
        return ([] as! [[Int]])
    }
    let a = (lists as! [[Int]])
    if (Int(((a).count)) == 0) {
        return (([[]] as! [[Any]]) as! [[Int]])
    }
    var out: [[Int]] = ([] as! [[Int]])
    let last = (Int(((a).count)) - 1)
    let left = (cartN((Array(a[0..<last]) as! [[Int]])) as! [[Int]])
    for p in left {
        for x in (a[last] as! [Int]) {
            var row: [Int] = (copy((p as! [Int])) as! [Int])
            row = (_append(row, x) as! [Int])
            out = (_append(out, row) as! [[Int]])
        }
    }
    return (out as! [[Int]])
}
func main() {
    print(_p(String(describing: llStr((cartN(([([1, 2] as! [Int]), ([3, 4] as! [Int])] as! [[Int]])) as! [[Int]])))))
    print(_p(String(describing: llStr((cartN(([([3, 4] as! [Int]), ([1, 2] as! [Int])] as! [[Int]])) as! [[Int]])))))
    print(_p(String(describing: llStr((cartN([([1, 2] as! [Int]), []]) as! [[Int]])))))
    print(_p(String(describing: llStr((cartN([[], ([1, 2] as! [Int])]) as! [[Int]])))))
    print(_p(""))
    print(_p("["))
    for p in (cartN(([([1776, 1789] as! [Int]), ([7, 12] as! [Int]), ([4, 14, 23] as! [Int]), ([0, 1] as! [Int])] as! [[Int]])) as! [[Int]]) {
        print(_p((" " + String(describing: listStr((p as! [Int]))))))
    }
    print(_p("]"))
    print(_p(String(describing: llStr((cartN(([([1, 2, 3] as! [Int]), ([30] as! [Int]), ([500, 100] as! [Int])] as! [[Int]])) as! [[Int]])))))
    print(_p(String(describing: llStr((cartN([([1, 2, 3] as! [Int]), [], ([500, 100] as! [Int])]) as! [[Int]])))))
    print(_p(""))
    print(_p(String(describing: llStr((cartN(nil) as! [[Int]])))))
    print(_p(String(describing: llStr((cartN([]) as! [[Int]])))))
}
_ = main()
