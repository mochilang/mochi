// Generated by Mochi transpiler v0.10.56 on 2025-08-04 00:34:30 GMT+7
import Foundation

let stdout = FileHandle.standardOutput
extension FileHandle {
    func write(_ string: String) {
        if let data = string.data(using: .utf8) {
            self.write(data)
        }
    }
}

func _p(_ v: Any?) -> String {
    if let val = v {
        if let d = val as? Double {
            if d.rounded(.towardZero) == d {
                return String(Int64(d))
            }
        }
        return String(describing: val)
    }
    return "<nil>"
}

extension Double { init(_ v: Any) { if let d = v as? Double { self = d } else if let i = v as? Int { self = Double(i) } else if let i = v as? Int64 { self = Double(i) } else if let s = v as? String { self = Double(s) ?? 0 } else { self = 0 } } }
let max = 20
let words: [Int: String] = ([3: "Fizz", 5: "Buzz", 7: "Baxx"] as! [Int: String])
let keys: [Int] = ([3, 5, 7] as! [Int])
for i in 1..<Int((max &+ 1)) {
    var text: String = ""
    for n in keys {
        if ((i % n) == 0) {
            text = ((text + (words[n] as! String)) as! String)
        }
    }
    if (text == "") {
        text = String(describing: i)
    }
    print(_p(text))
}
