// Generated by Mochi transpiler v0.10.40 on 2025-07-26 09:59:16 GMT+7
import Foundation

var _nowSeed = 0
var _nowSeeded = false
func _now() -> Int {
    if !_nowSeeded {
        if let s = ProcessInfo.processInfo.environment["MOCHI_NOW_SEED"], let v = Int(s) {
            _nowSeed = v
            _nowSeeded = true
        }
    }
    if _nowSeeded {
        _nowSeed = (_nowSeed * 1664525 + 1013904223) % 2147483647
        return _nowSeed
    }
    return Int(Date().timeIntervalSince1970 * 1_000_000_000)
}
func _mem() -> Int {
    if let status = try? String(contentsOfFile: "/proc/self/status") {
        for line in status.split(separator: "\n") {
            if line.hasPrefix("VmRSS:") {
                let parts = line.split(whereSeparator: { $0 == " " || $0 == "\t" })
                if parts.count >= 2, let kb = Int(parts[1]) {
                    return kb * 1024
                }
            }
        }
    }
    return 0
}
do {
    let _benchMemStart = _mem()
    let _benchStart = _now()
    func listStr(_ xs: [Int]) -> String {
        var s = "["
        var i = 0
        while (i < Int(((xs).count))) {
            s = String((s + String(describing: Int(xs[i]))))
            if ((i + 1) < Int(((xs).count))) {
                s = String((s + " "))
            }
            i = Int((i + 1))
        }
        s = String((s + "]"))
        return String(s)
    }
    var a = ([0, 0, 0, 0, 0] as! [Int])
    print(("len(a) = " + String(describing: Int(((a).count)))))
    print(("a = " + String(describing: listStr((a as! [Int])))))
    a[0] = 3
    print(("a = " + String(describing: listStr((a as! [Int])))))
    print(("a[0] = " + String(describing: Int(a[0]))))
    var s = (Array(a[0..<4]) as! [Int])
    var cap_s = 5
    print(("s = " + String(describing: listStr((s as! [Int])))))
    print(((("len(s) = " + String(describing: Int(((s).count)))) + "  cap(s) = ") + String(describing: cap_s)))
    s = (Array(a[0..<5]) as! [Int])
    print(("s = " + String(describing: listStr((s as! [Int])))))
    a[0] = 22
    s[0] = 22
    print(("a = " + String(describing: listStr((a as! [Int])))))
    print(("s = " + String(describing: listStr((s as! [Int])))))
    s = ((s + [4]) as! [Int])
    s = ((s + [5]) as! [Int])
    s = ((s + [6]) as! [Int])
    cap_s = 10
    print(("s = " + String(describing: listStr((s as! [Int])))))
    print(((("len(s) = " + String(describing: Int(((s).count)))) + "  cap(s) = ") + String(describing: cap_s)))
    a[4] = Int(-1)
    print(("a = " + String(describing: listStr((a as! [Int])))))
    print(("s = " + String(describing: listStr((s as! [Int])))))
    s = ([] as! [Int])
    for i in 0..<8 {
        s = ((s + [0]) as! [Int])
    }
    cap_s = 8
    print(("s = " + String(describing: listStr((s as! [Int])))))
    print(((("len(s) = " + String(describing: Int(((s).count)))) + "  cap(s) = ") + String(describing: cap_s)))
    let _benchEnd = _now()
    let _benchMemEnd = _mem()
    print("{\n  \"duration_us\": \((_benchEnd - _benchStart) / 1000),\n  \"memory_bytes\": \(_benchMemEnd - _benchMemStart),\n  \"name\": \"main\"\n}")
}
