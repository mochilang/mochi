# Code generated by Mochi transpiler.
# Version 0.10.40, generated on 2025-07-25 13:13 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
@dataclass
class Point:
    x: int
    y: int
def ccw(a, b, c):
    lhs = (b.x - a.x) * (c.y - a.y)
    rhs = (b.y - a.y) * (c.x - a.x)
    return lhs > rhs
def sortPoints(ps):
    arr = ps
    n = len(arr)
    i = 0
    while i < n:
        j = 0
        while j < n - 1:
            p = arr[j]
            q = arr[j + 1]
            if p.x > q.x or (p.x == q.x and p.y > q.y):
                arr[j] = q
                arr[j + 1] = p
            j = j + 1
        i = i + 1
    return arr
def convexHull(ps):
    ps = sortPoints(ps)
    h = []
    for pt in ps:
        while len(h) >= 2 and ccw(h[len(h) - 2], h[len(h) - 1], pt) == False:
            h = h[:len(h) - 1]
        h = h + [pt]
    i = len(ps) - 2
    t = len(h) + 1
    while i >= 0:
        pt = ps[i]
        while len(h) >= t and ccw(h[len(h) - 2], h[len(h) - 1], pt) == False:
            h = h[:len(h) - 1]
        h = h + [pt]
        i = i - 1
    return h[:len(h) - 1]
def pointStr(p):
    return "(" + str(p.x) + "," + str(p.y) + ")"
def hullStr(h):
    s = "["
    i = 0
    while i < len(h):
        s = s + pointStr(h[i])
        if i < len(h) - 1:
            s = s + " "
        i = i + 1
    s = s + "]"
    return s
pts = [Point(x=16, y=3), Point(x=12, y=17), Point(x=0, y=6), Point(x=-4, y=-6), Point(x=16, y=6), Point(x=16, y=-7), Point(x=16, y=-3), Point(x=17, y=-4), Point(x=5, y=19), Point(x=19, y=-8), Point(x=3, y=16), Point(x=12, y=13), Point(x=3, y=-4), Point(x=17, y=5), Point(x=-3, y=15), Point(x=-3, y=-9), Point(x=0, y=11), Point(x=-9, y=-3), Point(x=-4, y=-2), Point(x=12, y=10)]
hull = convexHull(pts)
print("Convex Hull: " + hullStr(hull))
_bench_end = _now()
_bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
