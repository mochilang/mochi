# Code generated by Mochi transpiler.
# Version 0.10.42, generated on 2025-07-27 22:25 +0700
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict
import dataclasses

import sys
sys.set_int_max_str_digits(0)

@dataclass
class FileInfo:
    name: str
    size: int
    kind: str

@dataclass
class FTPConn:
    dir: str

serverData = {"pub": {"somefile.bin": "This is a file from the FTP server.", "readme.txt": "Hello from ftp."}}
serverNames = {"pub": ["somefile.bin", "readme.txt"]}
def connect(hostport):
    print("Connected to " + hostport)
    return FTPConn(dir="/")
def login(conn, user, pass):
    print("Logged in as " + user)
def changeDir(conn, dir):
    conn = dataclasses.replace(conn, dir=dir)
def list(conn):
    names = serverNames.get(conn.dir)
    dataDir = serverData.get(conn.dir)
    out = []
    for name in names:
        content = dataDir[name]
        out = out + [FileInfo(name=name, size=len(content), kind="file")]
    return out
def retrieve(conn, name):
    return serverData.get(conn.dir).get(name)
def main():
    conn = connect("localhost:21")
    login(conn, "anonymous", "anonymous")
    changeDir(conn, "pub")
    print(conn.dir)
    files = list(conn)
    for f in files:
        print(f.name + " " + str(f.size))
    data = retrieve(conn, "somefile.bin")
    print("Wrote " + str(len(data)) + " bytes to somefile.bin")
main()
