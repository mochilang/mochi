# Code generated by Mochi transpiler.
# Version 0.10.38, generated on 2025-07-24 00:17 +0700
import sys
sys.set_int_max_str_digits(0)

def indexOf(s, ch):
    i = 0
    while i < len(s):
        if s[i:i + 1] == ch:
            return i
        i = i + 1
    return -1
def ord(ch):
    upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    lower = "abcdefghijklmnopqrstuvwxyz"
    idx = indexOf(upper, ch)
    if idx >= 0:
        return 65 + idx
    idx = indexOf(lower, ch)
    if idx >= 0:
        return 97 + idx
    return 0
def chr(n):
    upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    lower = "abcdefghijklmnopqrstuvwxyz"
    if n >= 65 and n < 91:
        return upper[n - 65:n - 64]
    if n >= 97 and n < 123:
        return lower[n - 97:n - 96]
    return "?"
def shiftRune(r, k):
    if r >= "a" and r <= "z":
        return chr(((ord(r) - 97 + k) % 26) + 97)
    if r >= "A" and r <= "Z":
        return chr(((ord(r) - 65 + k) % 26) + 65)
    return r
def encipher(s, k):
    out = ""
    i = 0
    while i < len(s):
        out = out + shiftRune(s[i:i + 1], k)
        i = i + 1
    return out
def decipher(s, k):
    return encipher(s, (26 - k % 26) % 26)
def main():
    pt = "The five boxing wizards jump quickly"
    print("Plaintext: " + pt)
    for key in [0, 1, 7, 25, 26]:
        if key < 1 or key > 25:
            print("Key " + str(key) + " invalid")
            continue
        ct = encipher(pt, key)
        print("Key " + str(key))
        print("  Enciphered: " + ct)
        print("  Deciphered: " + decipher(ct, key))
main()
