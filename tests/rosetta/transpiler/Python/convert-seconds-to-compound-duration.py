# Code generated by Mochi transpiler.
# Version 0.10.40, generated on 2025-07-25 21:13 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
def timeStr(sec):
    wks = sec // 604800
    sec = sec % 604800
    ds = sec // 86400
    sec = sec % 86400
    hrs = sec // 3600
    sec = sec % 3600
    mins = sec // 60
    sec = sec % 60
    res = ""
    comma = False
    if wks != 0:
        res = res + str(wks) + " wk"
        comma = True
    if ds != 0:
        if comma:
            res = res + ", "
        res = res + str(ds) + " d"
        comma = True
    if hrs != 0:
        if comma:
            res = res + ", "
        res = res + str(hrs) + " hr"
        comma = True
    if mins != 0:
        if comma:
            res = res + ", "
        res = res + str(mins) + " min"
        comma = True
    if sec != 0:
        if comma:
            res = res + ", "
        res = res + str(sec) + " sec"
    return res
print(timeStr(7259))
print(timeStr(86400))
print(timeStr(6000000))
_bench_end = _now()
_bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
