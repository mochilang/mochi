# Code generated by Mochi transpiler.
# Version 0.10.57, generated on 2025-08-04 16:12 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
try:
    res = {"D": "1234567890", "X": "43162711582587979080031819627904423023685561091192625653251495188141318209988", "Y": "86807430002474105664458509423764867536342689150582922106807036347047552480521", "Hash": "0xe6f9ed0d", "R": "43162711582587979080031819627904423023685561091192625653251495188141318209988", "S": "94150071556658883365738746782965214584303361499725266605620843043083873122499", "Valid": True}
    print("Private key:\nD: " + res["D"])
    print("\nPublic key:")
    print("X: " + res["X"])
    print("Y: " + res["Y"])
    print("\nMessage: Rosetta Code")
    print("Hash   : " + res["Hash"])
    print("\nSignature:")
    print("R: " + res["R"])
    print("S: " + res["S"])
    print("\nSignature verified: " + str(res["Valid"]))
finally:
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
