# Code generated by Mochi transpiler.
# Version 0.10.42, generated on 2025-07-28 00:40 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def poolPut(p, x):
    return p + [x]
def poolGet(p):
    if len(p) == 0:
        print("pool empty")
        return {"pool": p, "val": 0}
    idx = len(p) - 1
    v = p[idx]
    p = p[0:idx]
    return {"pool": p, "val": v}
def clearPool(p):
    return []
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    pool = []
    i = 1
    j = 2
    print(str(i + j))
    pool = poolPut(pool, i)
    pool = poolPut(pool, j)
    i = 0
    j = 0
    res1 = poolGet(pool)
    pool = res1.get("pool")
    i = int(res1.get("val"))
    res2 = poolGet(pool)
    pool = res2.get("pool")
    j = int(res2.get("val"))
    i = 4
    j = 5
    print(str(i + j))
    pool = poolPut(pool, i)
    pool = poolPut(pool, j)
    i = 0
    j = 0
    pool = clearPool(pool)
    res3 = poolGet(pool)
    pool = res3.get("pool")
    i = int(res3.get("val"))
    res4 = poolGet(pool)
    pool = res4.get("pool")
    j = int(res4.get("val"))
    i = 7
    j = 8
    print(str(i + j))
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
