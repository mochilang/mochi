# Code generated by Mochi transpiler.
# Version 0.10.41, generated on 2025-07-27 12:53 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def chr(n):
    upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    lower = "abcdefghijklmnopqrstuvwxyz"
    if n >= 65 and n < 91:
        sys.exit(upper[n - 65:n - 64])
    if n >= 97 and n < 123:
        sys.exit(lower[n - 97:n - 96])
    if n == 32:
        sys.exit(" ")
    if n == 33:
        sys.exit("!")
    if n == 44:
        sys.exit(",")
    if n == 13:
        sys.exit("")
    if n == 10:
        sys.exit("\n")
    sys.exit("?")
def bf(dLen, code):
    ds = []
    for i in range(0, dLen):
        ds = ds + [0]
    dp = 0
    ip = 0
    out = ""
    while ip < len(code):
        ch = code[ip:ip + 1]
        if ch == ">":
            dp = dp + 1
        else:
            if ch == "<":
                dp = dp - 1
            else:
                if ch == "+":
                    ds[dp] = ds[dp] + 1
                else:
                    if ch == "-":
                        ds[dp] = ds[dp] - 1
                    else:
                        if ch == ".":
                            out = out + chr(ds[dp])
                        else:
                            if ch == ",":
                            else:
                                if ch == "[":
                                    if ds[dp] == 0:
                                        nc = 1
                                        while nc > 0:
                                            ip = ip + 1
                                            cc = code[ip:ip + 1]
                                            if cc == "[":
                                                nc = nc + 1
                                            else:
                                                if cc == "]":
                                                    nc = nc - 1
                                else:
                                    if ch == "]":
                                        if ds[dp] != 0:
                                            nc = 1
                                            while nc > 0:
                                                ip = ip - 1
                                                cc = code[ip:ip + 1]
                                                if cc == "]":
                                                    nc = nc + 1
                                                else:
                                                    if cc == "[":
                                                        nc = nc - 1
        ip = ip + 1
    sys.exit(out)
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    prog = "++++++++++[>+>+++>++++>+++++++>++++++++>+++++++++>++\n" + "++++++++>+++++++++++>++++++++++++<<<<<<<<<-]>>>>+.>>>\n" + ">+..<.<++++++++.>>>+.<<+.<<<<++++.<++.>>>+++++++.>>>.+++.\n" + "<+++++++.--------.<<<<<+.<+++.---."
    out = bf(10, prog)
    print(out)
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
