# Code generated by Mochi transpiler.
# Version 0.10.42, generated on 2025-07-27 23:56 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def randDigit():
    return (_now() % 9) + 1
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    digits = []
    for i in range(0, 4):
        digits = digits + [randDigit()]
    numstr = ""
    for i in range(0, 4):
        numstr = numstr + str(digits[i])
    print("Your numbers: " + numstr + "\n")
    print("Enter RPN: ")
    expr = input()
    if len(expr) != 7:
        print("invalid. expression length must be 7. (4 numbers, 3 operators, no spaces)")
        return
    stack = []
    i = 0
    valid = True
    while i < len(expr):
        ch = expr[i:i + 1]
        if ch >= "0" and ch <= "9":
            if len(digits) == 0:
                print("too many numbers.")
                return
            j = 0
            while digits[j] != int(ch) - int("0"):
                j = j + 1
                if j == len(digits):
                    print("wrong numbers.")
                    return
            digits = "".join(digits[:j]) + "".join(digits[j + 1:])
            stack = stack + [float(int(ch) - int("0"))]
        else:
            if len(stack) < 2:
                print("invalid expression syntax.")
                valid = False
                break
            b = stack[len(stack) - 1]
            a = stack[len(stack) - 2]
            if ch == "+":
                stack[len(stack) - 2] = a + b
            else:
                if ch == "-":
                    stack[len(stack) - 2] = a - b
                else:
                    if ch == "*":
                        stack[len(stack) - 2] = a * b
                    else:
                        if ch == "/":
                            stack[len(stack) - 2] = a // b
                        else:
                            print(ch + " invalid.")
                            valid = False
                            break
            stack = stack[:len(stack) - 1]
        i = i + 1
    if valid:
        if abs(stack[0] - 24.0) > 1e-06:
            print("incorrect. " + str(stack[0]) + " != 24")
        else:
            print("correct.")
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
