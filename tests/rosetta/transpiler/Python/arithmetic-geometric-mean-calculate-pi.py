# Code generated by Mochi transpiler.
# Version 0.10.42, generated on 2025-07-28 00:41 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def abs(x):
    if x < 0.0:
        return -x
    return x
def sqrtApprox(x):
    guess = x
    i = 0
    while i < 20:
        guess = (guess + x // guess) / 2.0
        i = i + 1
    return guess
def agmPi():
    a = 1.0
    g = 1.0 / sqrtApprox(2.0)
    sum = 0.0
    pow = 2.0
    while abs(a - g) > 1e-15:
        t = (a + g) / 2.0
        u = sqrtApprox(a * g)
        a = t
        g = u
        pow = pow * 2.0
        diff = a * a - g * g
        sum = sum + diff * pow
    pi = 4.0 * a * a / (1.0 - sum)
    return pi
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    print(str(agmPi()))
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
