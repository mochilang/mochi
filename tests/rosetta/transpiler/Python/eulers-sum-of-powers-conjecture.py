# Code generated by Mochi transpiler.
# Version 0.10.50, generated on 2025-07-31 00:20 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

def eulerSum():
    pow5 = []
    i = 0
    while i < 250:
        pow5 = pow5 + [i * i * i * i * i]
        i = i + 1
    sums = {}
    x2 = 2
    while x2 < 250:
        x3 = 1
        while x3 < x2:
            s = pow5[x2] + pow5[x3]
            if not (s in sums):
                sums[s] = [x2, x3]
            x3 = x3 + 1
        x2 = x2 + 1
    x0 = 4
    while x0 < 250:
        x1 = 3
        while x1 < x0:
            y = x0 + 1
            while y < 250:
                rem = pow5[y] - pow5[x0] - pow5[x1]
                if rem in sums:
                    pair = sums[rem]
                    a = pair[0]
                    b = pair[1]
                    if x1 > a and a > b:
                        return [x0, x1, a, b, y]
                y = y + 1
            x1 = x1 + 1
        x0 = x0 + 1
    return [0, 0, 0, 0, 0]
def main():
    r = eulerSum()
    print(str(r[0]) + " " + str(r[1]) + " " + str(r[2]) + " " + str(r[3]) + " " + str(r[4]))
main()
