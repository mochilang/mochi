# Code generated by Mochi transpiler.
# Version 0.10.40, generated on 2025-07-25 17:48 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def parseBool(s):
    l = s.lower()
    if l == "1" or l == "t" or l == True or l == "yes" or l == "y":
        return True
    return False
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    n = True
    print(("True" if n else "False"))
    print("bool")
    n = not n
    print(("True" if n else "False"))
    x = 5
    y = 8
    print("x == y:", (1 if x == y else 0))
    print("x < y:", (1 if x < y else 0))
    print("\nConvert String into Boolean Data type\n")
    str1 = "japan"
    print("Before :", "string")
    bolStr = parseBool(str1)
    print("After :", "bool")
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
