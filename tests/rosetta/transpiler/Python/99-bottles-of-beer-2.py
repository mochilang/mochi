# Code generated by Mochi transpiler.
# Version 0.10.42, generated on 2025-07-28 10:14 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def fields(s):
    words = []
    cur = ""
    i = 0
    while i < len(s):
        ch = s[i:i + 1]
        if ch == " " or ch == "\n" or ch == "\t":
            if len(cur) > 0:
                words = words + [cur]
                cur = ""
        else:
            cur = cur + ch
        i = i + 1
    if len(cur) > 0:
        words = words + [cur]
    return words
def join(xs, sep):
    res = ""
    i = 0
    while i < len(xs):
        if i > 0:
            res = res + sep
        res = res + xs[i]
        i = i + 1
    return res
def numberName(n):
    small = ["no", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"]
    tens = ["ones", "ten", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety"]
    if n < 0:
        return ""
    if n < 20:
        return small[n]
    if n < 100:
        t = tens[int((n // 10))]
        s = n % 10
        if s > 0:
            t = t + " " + small[s]
        return t
    return ""
def pluralizeFirst(s, n):
    if n == 1:
        return s
    w = fields(s)
    if len(w) > 0:
        w[0] = w[0] + "s"
    return join(w, " ")
def randInt(seed, n):
    next = (seed * 1664525 + 1013904223) % 2147483647
    return next % n
def slur(p, d):
    if len(p) <= 2:
        return p
    a = []
    i = 1
    while i < len(p) - 1:
        a = a + [p[i:i + 1]]
        i = i + 1
    idx = len(a) - 1
    seed = d
    while idx >= 1:
        seed = (seed * 1664525 + 1013904223) % 2147483647
        if seed % 100 >= d:
            j = seed % (idx + 1)
            tmp = a[idx]
            a[idx] = a[j]
            a[j] = tmp
        idx = idx - 1
    s = p[0:1]
    k = 0
    while k < len(a):
        s = s + a[k]
        k = k + 1
    s = s + "".join(p[len(p) - 1:len(p)])
    w = fields(s)
    return join(w, " ")
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    i = 99
    while i > 0:
        print(slur(numberName(i), i) + " " + pluralizeFirst(slur("bottle of", i), i) + " " + slur("beer on the wall", i))
        print(slur(numberName(i), i) + " " + pluralizeFirst(slur("bottle of", i), i) + " " + slur("beer", i))
        print(slur("take one", i) + " " + slur("down", i) + " " + slur("pass it around", i))
        print(slur(numberName(i - 1), i) + " " + pluralizeFirst(slur("bottle of", i), i - 1) + " " + slur("beer on the wall", i))
        i = i - 1
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
