# Code generated by Mochi transpiler.
# Version 0.10.40, generated on 2025-07-25 14:40 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    print("Diagram after trimming whitespace and removal of blank lines:\n")
    print("+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+")
    print("|                      ID                       |")
    print("+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+")
    print("|QR|   Opcode  |AA|TC|RD|RA|   Z    |   RCODE   |")
    print("+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+")
    print("|                    QDCOUNT                    |")
    print("+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+")
    print("|                    ANCOUNT                    |")
    print("+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+")
    print("|                    NSCOUNT                    |")
    print("+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+")
    print("|                    ARCOUNT                    |")
    print("+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+")
    print("\nDecoded:\n")
    print("Name     Bits  Start  End")
    print("=======  ====  =====  ===")
    print("ID        16      0    15")
    print("QR         1     16    16")
    print("Opcode     4     17    20")
    print("AA         1     21    21")
    print("TC         1     22    22")
    print("RD         1     23    23")
    print("RA         1     24    24")
    print("Z          3     25    27")
    print("RCODE      4     28    31")
    print("QDCOUNT   16     32    47")
    print("ANCOUNT   16     48    63")
    print("NSCOUNT   16     64    79")
    print("ARCOUNT   16     80    95")
    print("\nTest string in hex:")
    print("78477bbf5496e12e1bf169a4")
    print("\nTest string in binary:")
    print("011110000100011101111011101111110101010010010110111000010010111000011011111100010110100110100100")
    print("\nUnpacked:\n")
    print("Name     Size  Bit pattern")
    print("=======  ====  ================")
    print("ID        16   0111100001000111")
    print("QR         1   0")
    print("Opcode     4   1111")
    print("AA         1   0")
    print("TC         1   1")
    print("RD         1   1")
    print("RA         1   1")
    print("Z          3   011")
    print("RCODE      4   1111")
    print("QDCOUNT   16   0101010010010110")
    print("ANCOUNT   16   1110000100101110")
    print("NSCOUNT   16   0001101111110001")
    print("ARCOUNT   16   0110100110100100")
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
