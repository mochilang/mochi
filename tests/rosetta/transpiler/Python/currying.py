# Code generated by Mochi transpiler.
# Version 0.10.39, generated on 2025-07-24 20:06 +0700
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict

import sys
sys.set_int_max_str_digits(0)

def pow(base, exp):
    result = 1.0
    i = 0
    while i < int(exp):
        result = result * base
        i = i + 1
    return result
def PowN(b):
    return lambda e: pow(b, e)
def PowE(e):
    return lambda b: pow(b, e)
@dataclass
class Foo:
    value: int
    def Method(self, b):
        return self.value + b

def main():
    pow2 = PowN(2.0)
    cube = PowE(3.0)
    print("2^8 = " + str(pow2(8.0)))
    print("4Â³ = " + str(cube(4.0)))
    a = Foo(value=2)
    fn1 = lambda b: a.Method(b)
    fn2 = lambda f, b: f.Method(b)
    print("2 + 2 = " + str(a.Method(2)))
    print("2 + 3 = " + str(fn1(3)))
    print("2 + 4 = " + str(fn2(a, 4)))
    print("3 + 5 = " + str(fn2(Foo(value=3), 5)))
main()
