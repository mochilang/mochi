# Code generated by Mochi transpiler.
# Version 0.10.50, generated on 2025-07-31 01:07 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def weekday(y, m, d):
    yy = y
    mm = m
    if mm < 3:
        mm = mm + 12
        yy = yy - 1
    k = yy % 100
    j = int((yy // 100))
    a = int(((13 * (mm + 1)) // 5))
    b = int((k // 4))
    c = int((j // 4))
    return (d + a + k + b + c + 5 * j) % 7
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    months31 = [1, 3, 5, 7, 8, 10, 12]
    names = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
    count = 0
    firstY = 0
    firstM = 0
    lastY = 0
    lastM = 0
    haveNone = []
    print("Months with five weekends:")
    for year in range(1900, 2101):
        hasOne = False
        for m in months31:
            if weekday(year, m, 1) == 6:
                print("  " + str(year) + " " + names[m - 1])
                count = count + 1
                hasOne = True
                lastY = year
                lastM = m
                if firstY == 0:
                    firstY = year
                    firstM = m
        if not hasOne:
            haveNone = haveNone + [year]
    print(str(count) + " total")
    print("")
    print("First five dates of weekends:")
    for i in range(0, 5):
        day = 1 + 7 * i
        print("  Friday, " + names[firstM - 1] + " " + str(day) + ", " + str(firstY))
    print("Last five dates of weekends:")
    for i in range(0, 5):
        day = 1 + 7 * i
        print("  Friday, " + names[lastM - 1] + " " + str(day) + ", " + str(lastY))
    print("")
    print("Years with no months with five weekends:")
    for y in haveNone:
        print("  " + str(y))
    print(str(len(haveNone)) + " total")
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
