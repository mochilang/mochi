# Code generated by Mochi transpiler.
# Version 0.10.40, generated on 2025-07-25 17:48 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
grid = [[".", ".", ".", ".", "."], [".", "#", "#", "#", "."], [".", "#", ".", "#", "."], [".", "#", "#", "#", "."], [".", ".", ".", ".", "."]]
def flood(x, y, repl):
    target = grid[y][x]
    if target == repl:
        return
    def ff(px, py):
        if px < 0 or py < 0 or py >= len(grid) or px >= len(grid[0]):
            return
        if grid[py][px] != target:
            return
        grid[py][px] = repl
        ff(px - 1, py)
        ff(px + 1, py)
        ff(px, py - 1)
        ff(px, py + 1)
    ff(x, y)
flood(2, 2, "o")
for row in grid:
    line = ""
    for ch in row:
        line = line + ch
    print(line)
_bench_end = _now()
_bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
