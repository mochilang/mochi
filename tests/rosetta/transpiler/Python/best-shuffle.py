# Code generated by Mochi transpiler.
# Version 0.10.37, generated on 2025-07-23 15:05 +0700
import sys
sys.set_int_max_str_digits(0)

def nextRand(seed):
    return (seed * 1664525 + 1013904223) % 2147483647
def shuffleChars(s, seed):
    chars = []
    i = 0
    while i < len(s):
        chars = chars + [s[i:i + 1]]
        i = i + 1
    sd = seed
    idx = len(chars) - 1
    while idx > 0:
        sd = nextRand(sd)
        j = sd % (idx + 1)
        tmp = chars[idx]
        chars[idx] = chars[j]
        chars[j] = tmp
        idx = idx - 1
    res = ""
    i = 0
    while i < len(chars):
        res = res + chars[i]
        i = i + 1
    return [res, sd]
def bestShuffle(s, seed):
    r = shuffleChars(s, seed)
    t = r[0]
    sd = r[1]
    arr = []
    i = 0
    while i < len(t):
        arr = arr + [t[i:i + 1]]
        i = i + 1
    i = 0
    while i < len(arr):
        j = 0
        while j < len(arr):
            if i != j and arr[i] != s[j:j + 1] and arr[j] != s[i:i + 1]:
                tmp = arr[i]
                arr[i] = arr[j]
                arr[j] = tmp
                break
            j = j + 1
        i = i + 1
    count = 0
    i = 0
    while i < len(arr):
        if arr[i] == s[i:i + 1]:
            count = count + 1
        i = i + 1
    out = ""
    i = 0
    while i < len(arr):
        out = out + arr[i]
        i = i + 1
    return [out, sd, count]
def main():
    ts = ["abracadabra", "seesaw", "elk", "grrrrrr", "up", "a"]
    seed = 1
    i = 0
    while i < len(ts):
        r = bestShuffle(ts[i], seed)
        shuf = r[0]
        seed = r[1]
        cnt = r[2]
        print(ts[i] + " -> " + shuf + " (" + str(cnt) + ")")
        i = i + 1
main()
