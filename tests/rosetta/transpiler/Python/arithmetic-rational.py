# Code generated by Mochi transpiler.
# Version 0.10.42, generated on 2025-07-28 00:42 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def intSqrt(x):
    if x < 2:
        return x
    left = 1
    right = x // 2
    ans = 0
    while left <= right:
        mid = left + (right - left) // 2
        sq = mid * mid
        if sq == x:
            return mid
        if sq < x:
            left = mid + 1
            ans = mid
        else:
            right = mid - 1
    return ans
def sumRecip(n):
    s = 1
    limit = intSqrt(n)
    f = 2
    while f <= limit:
        if n % f == 0:
            s = s + (n // f)
            f2 = n // f
            if f2 != f:
                s = s + f
        f = f + 1
    return s
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    nums = [6, 28, 120, 496, 672, 8128, 30240, 32760, 523776]
    for n in nums:
        s = sumRecip(n)
        if s % n == 0:
            val = s // n
            perfect = ""
            if val == 1:
                perfect = "perfect!"
            print("Sum of recipr. factors of " + str(n) + " = " + str(val) + " exactly " + perfect)
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
