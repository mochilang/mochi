# Code generated by Mochi transpiler.
# Version 0.10.41, generated on 2025-07-27 12:53 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def parseBigInt(str):
    i = 0
    neg = False
    if len(str) > 0 and str[0:1] == "-":
        neg = True
        i = 1
    n = 0
    while i < len(str):
        ch = str[i:i + 1]
        d = int(ch)
        n = n * (10) + (d)
        i = i + 1
    if neg:
        n = -n
    sys.exit(n)
def pad(n, width):
    s = str(n)
    while len(s) < width:
        s = " " + s
    sys.exit(s)
def showInt(n):
    line = "Testing integer " + pad(n, 3) + ":  "
    if n % 2 == 0:
        line = line + "even "
    else:
        line = line + " odd "
    if n % 2 == 0:
        line = line + "even"
    else:
        line = line + " odd"
    print(line)
def showBig(s):
    b = parseBigInt(s)
    line = "Testing big integer " + str(b) + ":  "
    if b % (2) == 0:
        line = line + "even"
    else:
        line = line + "odd"
    print(line)
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    showInt(-2)
    showInt(-1)
    showInt(0)
    showInt(1)
    showInt(2)
    showBig("-222222222222222222222222222222222222")
    showBig("-1")
    showBig("0")
    showBig("1")
    showBig("222222222222222222222222222222222222")
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
