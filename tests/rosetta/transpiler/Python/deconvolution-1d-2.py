# Code generated by Mochi transpiler.
# Version 0.10.42, generated on 2025-07-28 10:14 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def indexOf(s, ch):
    i = 0
    while i < len(s):
        if s[i:i + 1] == ch:
            return i
        i = i + 1
    return -1
def fmt1(x):
    y = float(int(((x * 10.0) + 0.5))) / 10.0
    s = str(y)
    dot = s.find(".")
    if dot < 0:
        s = s + ".0"
    return s
def listToString1(xs):
    s = "["
    i = 0
    while i < len(xs):
        s = s + fmt1(xs[i])
        if i < len(xs) - 1:
            s = s + " "
        i = i + 1
    return s + "]"
def deconv(g, f):
    out = []
    i = 0
    while i <= len(g) - len(f):
        sum = g[i]
        j = 1
        while j < len(f):
            if j <= i:
                sum = sum - out[i - j] * f[j]
            j = j + 1
        out = out + [sum / f[0]]
        i = i + 1
    return out
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    h = [-8.0, -9.0, -3.0, -1.0, -6.0, 7.0]
    f = [-3.0, -6.0, -1.0, 8.0, -6.0, 3.0, -1.0, -9.0, -9.0, 3.0, -2.0, 5.0, 2.0, -2.0, -7.0, -1.0]
    g = [24.0, 75.0, 71.0, -34.0, 3.0, 22.0, -45.0, 23.0, 245.0, 25.0, 52.0, 25.0, -67.0, -96.0, 96.0, 31.0, 55.0, 36.0, 29.0, -43.0, -7.0]
    print(listToString1(h))
    print(listToString1(deconv(g, f)))
    print(listToString1(f))
    print(listToString1(deconv(g, h)))
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
