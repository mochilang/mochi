# Code generated by Mochi transpiler.
# Version 0.10.40, generated on 2025-07-25 20:04 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
def egcd(a, b):
    if a == 0:
        return [b, 0, 1]
    res = egcd(b % a, a)
    g = res[0]
    x1 = res[1]
    y1 = res[2]
    return [g, y1 - (b // a) * x1, x1]
def modInv(a, m):
    r = egcd(a, m)
    if r[0] != 1:
        return 0
    x = r[1]
    if x < 0:
        return x + m
    return x
def crt(a, n):
    prod = 1
    i = 0
    while i < len(n):
        prod = prod * n[i]
        i = i + 1
    x = 0
    i = 0
    while i < len(n):
        ni = n[i]
        ai = a[i]
        p = prod // ni
        inv = modInv(p % ni, ni)
        x = x + ai * inv * p
        i = i + 1
    return x % prod
n = [3, 5, 7]
a = [2, 3, 2]
res = crt(a, n)
print(str(res) + " <nil>")
_bench_end = _now()
_bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
