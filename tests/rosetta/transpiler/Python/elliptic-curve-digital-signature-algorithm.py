# Code generated by Mochi transpiler.
# Version 0.10.41, generated on 2025-07-27 10:59 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    print("Private key:\nD: 1234567890")
    print("\nPublic key:")
    print("X: 43162711582587979080031819627904423023685561091192625653251495188141318209988")
    print("Y: 86807430002474105664458509423764867536342689150582922106807036347047552480521")
    print("\nMessage: Rosetta Code")
    print("Hash   : 0xe6f9ed0d")
    print("\nSignature:")
    print("R: 23195197793674669608400023921033380707595656606710353926508630347378485682379")
    print("S: 79415614279862633473653728365954499259635019180091322566320325357594590761922")
    print("\nSignature verified: true")
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
