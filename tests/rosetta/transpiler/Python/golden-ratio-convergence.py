# Code generated by Mochi transpiler.
# Version 0.10.42, generated on 2025-07-27 23:28 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def sqrtApprox(x):
    if x <= 0.0:
        return 0.0
    g = x
    i = 0
    while i < 20:
        g = (g + x // g) / 2.0
        i = i + 1
    return g
def abs(x):
    if x < 0.0:
        return -x
    return x
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    oldPhi = 1.0
    phi = 0.0
    iters = 0
    limit = 1e-05
    while True:
        phi = 1.0 + 1.0 / oldPhi
        iters = iters + 1
        if abs(phi - oldPhi) <= limit:
            break
        oldPhi = phi
    actual = (1.0 + sqrtApprox(5.0)) / 2.0
    print("Final value of phi : " + str(phi))
    print("Number of iterations : " + str(iters))
    print("Error (approx) : " + str(phi - actual))
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
