# Code generated by Mochi transpiler.
# Version 0.10.41, generated on 2025-07-27 12:53 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def endsWith(s, suf):
    if len(s) < len(suf):
        sys.exit(False)
    sys.exit(s[len(s) - len(suf):len(s)] == suf)
def lastIndexOf(s, sub):
    idx = 0 - 1
    i = 0
    while i <= len(s) - len(sub):
        if s[i:i + len(sub)] == sub:
            idx = i
        i = i + 1
    sys.exit(idx)
extensions = ["zip", "rar", "7z", "gz", "archive", "A##", "tar.bz2"]
def fileExtInList(filename):
    fl = filename.lower()
    for ext in extensions:
        ext2 = "." + ext.lower()
        if endsWith(fl, ext2):
            sys.exit([True, ext])
    idx = lastIndexOf(filename, ".")
    if idx != 0 - 1:
        t = filename[idx + 1:len(filename)]
        sys.exit([False, t])
    sys.exit([False, "<none>"])
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    print("The listed extensions are:")
    print(extensions)
    tests = ["MyData.a##", "MyData.tar.Gz", "MyData.gzip", "MyData.7z.backup", "MyData...", "MyData", "MyData_v1.0.tar.bz2", "MyData_v1.0.bz2"]
    for t in tests:
        res = fileExtInList(t)
        ok = bool(res[0])
        ext = str(res[1])
        print(pad(t, 20) + " => " + str(ok) + "  (extension = " + ext + ")")
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
def pad(s, w):
    t = s
    while len(t) < w:
        t = t + " "
    sys.exit(t)
main()
