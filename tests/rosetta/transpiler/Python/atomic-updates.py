# Code generated by Mochi transpiler.
# Version 0.10.37, generated on 2025-07-23 14:09 +0700
import sys
sys.set_int_max_str_digits(0)

def randOrder(seed, n):
    next = (seed * 1664525 + 1013904223) % 2147483647
    return [next, next % n]
def randChaos(seed, n):
    next = (seed * 1103515245 + 12345) % 2147483647
    return [next, next % n]
def main():
    nBuckets = 10
    initialSum = 1000
    buckets = []
    for i in range(0, nBuckets):
        buckets = buckets + [0]
    i = nBuckets
    dist = initialSum
    while i > 0:
        v = dist // i
        i = i - 1
        buckets[i] = v
        dist = dist - v
    tc0 = 0
    tc1 = 0
    total = 0
    nTicks = 0
    seedOrder = 1
    seedChaos = 2
    print("sum  ---updates---    mean  buckets")
    t = 0
    while t < 5:
        r = randOrder(seedOrder, nBuckets)
        seedOrder = r[0]
        b1 = r[1]
        b2 = (b1 + 1) % nBuckets
        v1 = buckets[b1]
        v2 = buckets[b2]
        if v1 > v2:
            a = int(v1 - v2 // 2)
            if a > buckets[b1]:
                a = buckets[b1]
            buckets[b1] = buckets[b1] - a
            buckets[b2] = buckets[b2] + a
        else:
            a = int(v2 - v1 // 2)
            if a > buckets[b2]:
                a = buckets[b2]
            buckets[b2] = buckets[b2] - a
            buckets[b1] = buckets[b1] + a
        tc0 = tc0 + 1
        r = randChaos(seedChaos, nBuckets)
        seedChaos = r[0]
        b1 = r[1]
        b2 = (b1 + 1) % nBuckets
        r = randChaos(seedChaos, buckets[b1] + 1)
        seedChaos = r[0]
        amt = r[1]
        if amt > buckets[b1]:
            amt = buckets[b1]
        buckets[b1] = buckets[b1] - amt
        buckets[b2] = buckets[b2] + amt
        tc1 = tc1 + 1
        sum = 0
        idx = 0
        while idx < nBuckets:
            sum = sum + buckets[idx]
            idx = idx + 1
        total = total + tc0 + tc1
        nTicks = nTicks + 1
        print(str(sum) + " " + str(tc0) + " " + str(tc1) + " " + str(total // nTicks) + "  " + str(buckets))
        tc0 = 0
        tc1 = 0
        t = t + 1
main()
