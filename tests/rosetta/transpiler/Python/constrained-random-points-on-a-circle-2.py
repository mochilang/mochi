# Code generated by Mochi transpiler.
# Version 0.10.42, generated on 2025-07-28 08:06 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
nPts = 100
rMin = 10
rMax = 15
span = rMax + 1 + rMax
poss = []
min2 = rMin * rMin
max2 = rMax * rMax
y = -rMax
while y <= rMax:
    x = -rMax
    while x <= rMax:
        r2 = x * x + y * y
        if r2 >= min2 and r2 <= max2:
            poss = poss + [[x, y]]
        x = x + 1
    y = y + 1
print(str(len(poss)) + " possible points")
rows = []
r = 0
while r < span:
    row = []
    c = 0
    while c < span * 2:
        row = row + [" "]
        c = c + 1
    rows = rows + [row]
    r = r + 1
u = 0
seen = {}
n = 0
while n < nPts:
    i = _now() % len(poss)
    x = poss[i][0]
    yy = poss[i][1]
    row = yy + rMax
    col = (x + rMax) * 2
    rows[row][col] = "*"
    key = str(row) + "," + str(col)
    if not seen.get(key):
        seen[key] = True
        u = u + 1
    n = n + 1
i2 = 0
while i2 < span:
    line = ""
    j = 0
    while j < span * 2:
        line = line + rows[i2][j]
        j = j + 1
    print(line)
    i2 = i2 + 1
print(str(u) + " unique points")
_bench_end = _now()
_bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
