# Code generated by Mochi transpiler.
# Version 0.10.38, generated on 2025-07-23 21:33 +0700
import sys
sys.set_int_max_str_digits(0)

def isPrime(n):
    if n < 2:
        return False
    if n % 2 == 0:
        return n == 2
    if n % 3 == 0:
        return n == 3
    d = 5
    while d * d <= n:
        if n % d == 0:
            return False
        d = d + 2
        if n % d == 0:
            return False
        d = d + 4
    return True
def firstPrimeFactor(n):
    if n == 1:
        return 1
    if n % 3 == 0:
        return 3
    if n % 5 == 0:
        return 5
    inc = [4, 2, 4, 2, 4, 6, 2, 6]
    k = 7
    i = 0
    while k * k <= n:
        if n % k == 0:
            return k
        k = k + inc[i]
        i = (i + 1) % len(inc)
    return n
def indexOf(s, ch):
    i = 0
    while i < len(s):
        if s[i:i + 1] == ch:
            return i
        i = i + 1
    return -1
def padLeft(n, width):
    s = str(n)
    while len(s) < width:
        s = " " + s
    return s
def formatFloat(f, prec):
    s = str(f)
    idx = indexOf(s, ".")
    if idx < 0:
        return s
    need = idx + 1 + prec
    if len(s) > need:
        return s[0:need]
    return s
def main():
    blum = []
    counts = [0, 0, 0, 0]
    digits = [1, 3, 7, 9]
    i = 1
    bc = 0
    while True:
        p = firstPrimeFactor(i)
        if p % 4 == 3:
            q = int((i // p))
            if q != p and q % 4 == 3 and isPrime(q):
                if bc < 50:
                    blum = blum + [i]
                d = i % 10
                if d == 1:
                    counts[0] = counts[0] + 1
                else:
                    if d == 3:
                        counts[1] = counts[1] + 1
                    else:
                        if d == 7:
                            counts[2] = counts[2] + 1
                        else:
                            if d == 9:
                                counts[3] = counts[3] + 1
                bc = bc + 1
                if bc == 50:
                    print("First 50 Blum integers:")
                    idx = 0
                    while idx < 50:
                        line = ""
                        j = 0
                        while j < 10:
                            line = line + padLeft(blum[idx], 3) + " "
                            idx = idx + 1
                            j = j + 1
                        print(line[0:len(line) - 1])
                    break
        if i % 5 == 3:
            i = i + 4
        else:
            i = i + 2
main()
