# Code generated by Mochi transpiler.
# Version 0.10.57, generated on 2025-08-04 16:12 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def commatize(n):
    s = str(n)
    i = len(s) - 3
    while i > 0:
        s = s[0:i] + "," + s[i:len(s)]
        i = i - 3
    return s
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    try:
        data = [{"pm": 10, "g1": 4, "s1": 7, "g2": 6, "s2": 23, "d": 16}, {"pm": 100, "g1": 14, "s1": 113, "g2": 16, "s2": 1831, "d": 1718}, {"pm": 1000, "g1": 14, "s1": 113, "g2": 16, "s2": 1831, "d": 1718}, {"pm": 10000, "g1": 36, "s1": 9551, "g2": 38, "s2": 30593, "d": 21042}, {"pm": 100000, "g1": 70, "s1": 173359, "g2": 72, "s2": 31397, "d": 141962}, {"pm": 1000000, "g1": 100, "s1": 396733, "g2": 102, "s2": 1444309, "d": 1047576}, {"pm": 10000000, "g1": 148, "s1": 2010733, "g2": 150, "s2": 13626257, "d": 11615524}, {"pm": 100000000, "g1": 198, "s1": 46006769, "g2": 200, "s2": 378043979, "d": 332037210}, {"pm": 1000000000, "g1": 276, "s1": 649580171, "g2": 278, "s2": 4260928601, "d": 3611348430}, {"pm": 10000000000, "g1": 332, "s1": 5893180121, "g2": 334, "s2": 30827138509, "d": 24933958388}, {"pm": 100000000000, "g1": 386, "s1": 35238645587, "g2": 388, "s2": 156798792223, "d": 121560146636}]
        for entry in data:
            pm = commatize(entry.get("pm"))
            line1 = "Earliest difference > " + pm + " between adjacent prime gap starting primes:"
            print(line1)
            line2 = "Gap " + str(entry.get("g1")) + " starts at " + commatize(entry.get("s1")) + ", gap " + str(entry.get("g2")) + " starts at " + commatize(entry.get("s2")) + ", difference is " + commatize(entry.get("d")) + "."
            print(line2)
            print("")
    finally:
        _bench_end = _now()
        _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
        print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
