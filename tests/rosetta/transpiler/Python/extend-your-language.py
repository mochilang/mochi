# Code generated by Mochi transpiler.
# Version 0.10.41, generated on 2025-07-27 12:53 +0700
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict
import dataclasses
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
@dataclass
class If2:
    cond1: bool
    cond2: bool
def else1(i, f):
    if i.cond1 and (i.cond2 == False):
        f()
    return i
def else2(i, f):
    if i.cond2 and (i.cond1 == False):
        f()
    return i
def else0(i, f):
    if (i.cond1 == False) and (i.cond2 == False):
        f()
    return i
def if2(cond1, cond2, f):
    if cond1 and cond2:
        f()
    return If2(cond1=cond1, cond2=cond2)
a = 0
b = 1
t = if2(a == 1, b == 3, lambda : print("a = 1 and b = 3"))
t = else1(t, lambda : print("a = 1 and b <> 3"))
t = else2(t, lambda : print("a <> 1 and b = 3"))
else0(t, lambda : print("a <> 1 and b <> 3"))
a = 1
b = 0
t = if2(a == 1, b == 3, lambda : print("a = 1 and b = 3"))
t = else0(t, lambda : print("a <> 1 and b <> 3"))
else1(t, lambda : print("a = 1 and b <> 3"))
_bench_end = _now()
_bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
