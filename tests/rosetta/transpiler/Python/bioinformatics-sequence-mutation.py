# Code generated by Mochi transpiler.
# Version 0.10.37, generated on 2025-07-23 15:05 +0700
import sys
sys.set_int_max_str_digits(0)

def randInt(s, n):
    next = (s * 1664525 + 1013904223) % 2147483647
    return [next, next % n]
def padLeft(s, w):
    res = ""
    n = w - len(s)
    while n > 0:
        res = res + " "
        n = n - 1
    return res + s
def makeSeq(s, le):
    bases = "ACGT"
    out = ""
    i = 0
    while i < le:
        r = randInt(s, 4)
        s = r[0]
        idx = int(r[1])
        out = out + "".join(bases[idx:idx + 1])
        i = i + 1
    return [s, out]
def mutate(s, dna, w):
    bases = "ACGT"
    le = len(dna)
    r = randInt(s, le)
    s = r[0]
    p = int(r[1])
    r = randInt(s, 300)
    s = r[0]
    x = int(r[1])
    arr = []
    i = 0
    while i < le:
        arr = arr + [dna[i:i + 1]]
        i = i + 1
    if x < w[0]:
        r = randInt(s, 4)
        s = r[0]
        idx = int(r[1])
        b = bases[idx:idx + 1]
        print("  Change @" + padLeft(str(p), 3) + " '" + arr[p] + "' to '" + b + "'")
        arr[p] = b
    else:
        if x < w[0] + w[1]:
            print("  Delete @" + padLeft(str(p), 3) + " '" + arr[p] + "'")
            j = p
            while j < len(arr) - 1:
                arr[j] = arr[j + 1]
                j = j + 1
            arr = arr[0:len(arr) - 1]
        else:
            r = randInt(s, 4)
            s = r[0]
            idx2 = int(r[1])
            b = bases[idx2:idx2 + 1]
            arr = arr + [""]
            j = len(arr) - 1
            while j > p:
                arr[j] = arr[j - 1]
                j = j - 1
            print("  Insert @" + padLeft(str(p), 3) + " '" + b + "'")
            arr[p] = b
    out = ""
    i = 0
    while i < len(arr):
        out = out + arr[i]
        i = i + 1
    return [s, out]
def prettyPrint(dna, rowLen):
    print("SEQUENCE:")
    le = len(dna)
    i = 0
    while i < le:
        k = i + rowLen
        if k > le:
            k = le
        print(padLeft(str(i), 5) + ": " + "".join(dna[i:k]))
        i = i + rowLen
    a = 0
    c = 0
    g = 0
    t = 0
    idx = 0
    while idx < le:
        ch = dna[idx:idx + 1]
        if ch == "A":
            a = a + 1
        else:
            if ch == "C":
                c = c + 1
            else:
                if ch == "G":
                    g = g + 1
                else:
                    if ch == "T":
                        t = t + 1
        idx = idx + 1
    print("")
    print("BASE COUNT:")
    print("    A: " + padLeft(str(a), 3))
    print("    C: " + padLeft(str(c), 3))
    print("    G: " + padLeft(str(g), 3))
    print("    T: " + padLeft(str(t), 3))
    print("    ------")
    print("    Î£: " + str(le))
    print("    ======")
def wstring(w):
    return "  Change: " + str(w[0]) + "\n  Delete: " + str(w[1]) + "\n  Insert: " + str(w[2]) + "\n"
def main():
    seed = 1
    res = makeSeq(seed, 250)
    seed = res[0]
    dna = str(res[1])
    prettyPrint(dna, 50)
    muts = 10
    w = [100, 100, 100]
    print("\nWEIGHTS (ex 300):")
    print(wstring(w))
    print("MUTATIONS (" + str(muts) + "):")
    i = 0
    while i < muts:
        res = mutate(seed, dna, w)
        seed = res[0]
        dna = str(res[1])
        i = i + 1
    print("")
    prettyPrint(dna, 50)
main()
