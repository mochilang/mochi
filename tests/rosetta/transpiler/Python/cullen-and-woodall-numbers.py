# Code generated by Mochi transpiler.
# Version 0.10.39, generated on 2025-07-24 20:06 +0700
import sys
sys.set_int_max_str_digits(0)

def pow_big(base, exp):
    result = 1
    b = base
    e = exp
    while e > 0:
        if e % 2 == 1:
            result = result * b
        b = b * b
        e = int((e // 2))
    return result
def cullen(n):
    two_n = pow_big(2, n)
    return (two_n * (n)) + (1)
def woodall(n):
    return cullen(n) - (2)
def show_list(xs):
    line = ""
    i = 0
    while i < len(xs):
        line = line + str(xs[i])
        if i < len(xs) - 1:
            line = line + " "
        i = i + 1
    return line
def main():
    cnums = []
    i = 1
    while i <= 20:
        cnums = cnums + [cullen(i)]
        i = i + 1
    print("First 20 Cullen numbers (n * 2^n + 1):")
    print(show_list(cnums))
    wnums = []
    i = 1
    while i <= 20:
        wnums = wnums + [woodall(i)]
        i = i + 1
    print("\nFirst 20 Woodall numbers (n * 2^n - 1):")
    print(show_list(wnums))
    cprimes = [1, 141, 4713, 5795, 6611]
    print("\nFirst 5 Cullen primes (in terms of n):")
    print(show_list(cprimes))
    wprimes = [2, 3, 6, 30, 75, 81, 115, 123, 249, 362, 384, 462]
    print("\nFirst 12 Woodall primes (in terms of n):")
    print(show_list(wprimes))
main()
