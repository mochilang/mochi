# Code generated by Mochi transpiler.
# Version 0.10.41, generated on 2025-07-27 13:12 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
maxNumber = 100000000
dsum = []
dcount = []
i = 0
while i <= maxNumber:
    dsum = dsum + [1]
    dcount = dcount + [1]
    i = i + 1
def pad8(n):
    s = str(n)
    while len(s) < 8:
        s = " " + s
    return s
i = 2
while i <= maxNumber:
    j = i + i
    while j <= maxNumber:
        if dsum[j] == j:
            print(pad8(j) + " equals the sum of its first " + str(dcount[j]) + " divisors")
        dsum[j] = dsum[j] + i
        dcount[j] = dcount[j] + 1
        j = j + i
    i = i + 1
_bench_end = _now()
_bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
