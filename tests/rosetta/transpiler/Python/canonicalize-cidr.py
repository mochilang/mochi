# Code generated by Mochi transpiler.
# Version 0.10.39, generated on 2025-07-24 09:22 +0000
import sys
sys.set_int_max_str_digits(0)

def split(s, sep):
    parts = []
    cur = ""
    i = 0
    while i < len(s):
        if len(sep) > 0 and i + len(sep) <= len(s) and s[i:i + len(sep)] == sep:
            parts = parts + [cur]
            cur = ""
            i = i + len(sep)
        else:
            cur = cur + "".join(s[i:i + 1])
            i = i + 1
    parts = parts + [cur]
    return parts
def join(xs, sep):
    res = ""
    i = 0
    while i < len(xs):
        if i > 0:
            res = res + sep
        res = res + xs[i]
        i = i + 1
    return res
def repeat(ch, n):
    out = ""
    i = 0
    while i < n:
        out = out + ch
        i = i + 1
    return out
def parseIntStr(str):
    i = 0
    neg = False
    if len(str) > 0 and str[0:1] == "-":
        neg = True
        i = 1
    n = 0
    digits = {"0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9}
    while i < len(str):
        n = n * 10 + digits[str[i:i + 1]]
        i = i + 1
    if neg:
        n = -n
    return n
def toBinary(n, bits):
    b = ""
    val = n
    i = 0
    while i < bits:
        b = str(val % 2) + b
        val = int((val // 2))
        i = i + 1
    return b
def binToInt(bits):
    n = 0
    i = 0
    while i < len(bits):
        n = n * 2 + parseIntStr(bits[i:i + 1])
        i = i + 1
    return n
def padRight(s, width):
    out = s
    while len(out) < width:
        out = out + " "
    return out
def canonicalize(cidr):
    parts = split(cidr, "/")
    dotted = parts[0]
    size = parseIntStr(parts[1])
    binParts = []
    for p in split(dotted, "."):
        binParts = binParts + [toBinary(parseIntStr(p), 8)]
    binary = join(binParts, "")
    binary = "".join(binary[0:size]) + repeat("0", 32 - size)
    canonParts = []
    i = 0
    while i < len(binary):
        canonParts = canonParts + [str(binToInt(binary[i:i + 8]))]
        i = i + 8
    return join(canonParts, ".") + "/" + parts[1]
tests = ["87.70.141.1/22", "36.18.154.103/12", "62.62.197.11/29", "67.137.119.181/4", "161.214.74.21/24", "184.232.176.184/18"]
for t in tests:
    print(padRight(t, 18) + " -> " + canonicalize(t))
