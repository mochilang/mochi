# Code generated by Mochi transpiler.
# Version 0.10.42, generated on 2025-07-28 01:21 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def bellTriangle(n):
    tri = []
    i = 0
    while i < n:
        row = []
        j = 0
        while j < i:
            row = row + [0]
            j = j + 1
        tri = tri + [row]
        i = i + 1
    tri[1][0] = 1
    i = 2
    while i < n:
        tri[i][0] = tri[i - 1][i - 2]
        j = 1
        while j < i:
            tri[i][j] = tri[i][j - 1] + tri[i - 1][j - 1]
            j = j + 1
        i = i + 1
    return tri
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    bt = bellTriangle(51)
    print("First fifteen and fiftieth Bell numbers:")
    for i in range(1, 16):
        print("" + str(i).rjust(2, " ") + ": " + str(bt[i][0]))
    print("50: " + str(bt[50][0]))
    print("")
    print("The first ten rows of Bell's triangle:")
    for i in range(1, 11):
        print(bt[i])
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
