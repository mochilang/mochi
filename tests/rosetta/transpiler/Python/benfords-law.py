# Code generated by Mochi transpiler.
# Version 0.10.37, generated on 2025-07-23 15:05 +0700
import sys
sys.set_int_max_str_digits(0)

def floorf(x):
    return float(int(x))
def indexOf(s, ch):
    i = 0
    while i < len(s):
        if s[i:i + 1] == ch:
            return i
        i = i + 1
    return -1
def fmtF3(x):
    y = floorf(x * 1000.0 + 0.5) / 1000.0
    s = str(y)
    dot = indexOf(s, ".")
    if dot == 0 - 1:
        s = s + ".000"
    else:
        decs = len(s) - dot - 1
        if decs > 3:
            s = s[0:dot + 4]
        else:
            while decs < 3:
                s = s + "0"
                decs = decs + 1
    return s
def padFloat3(x, width):
    s = fmtF3(x)
    while len(s) < width:
        s = " " + s
    return s
def fib1000():
    a = 0.0
    b = 1.0
    res = []
    i = 0
    while i < 1000:
        res = res + [b]
        t = b
        b = b + a
        a = t
        i = i + 1
    return res
def leadingDigit(x):
    if x < 0.0:
        x = -x
    while x >= 10.0:
        x = x / 10.0
    while x > 0.0 and x < 1.0:
        x = x * 10.0
    return int(x)
def show(nums, title):
    counts = [0, 0, 0, 0, 0, 0, 0, 0, 0]
    for n in nums:
        d = leadingDigit(n)
        if d >= 1 and d <= 9:
            counts[d - 1] = counts[d - 1] + 1
    preds = [0.301, 0.176, 0.125, 0.097, 0.079, 0.067, 0.058, 0.051, 0.046]
    total = len(nums)
    print(title)
    print("Digit  Observed  Predicted")
    i = 0
    while i < 9:
        obs = float(counts[i]) // float(total)
        line = "  " + str(i + 1) + "  " + padFloat3(obs, 9) + "  " + padFloat3(preds[i], 8)
        print(line)
        i = i + 1
def main():
    show(fib1000(), "First 1000 Fibonacci numbers")
main()
