# Code generated by Mochi transpiler.
# Version 0.10.55, generated on 2025-08-02 17:26 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def fields(s):
    res = []
    cur = ""
    i = 0
    while i < len(s):
        c = s[i:i + 1]
        if c == " ":
            if len(cur) > 0:
                res = res + [cur]
                cur = ""
        else:
            cur = cur + c
        i = i + 1
    if len(cur) > 0:
        res = res + [cur]
    return res
def canSpell(word, blks):
    if len(word) == 0:
        return True
    c = word[0:1].lower()
    i = 0
    while i < len(blks):
        b = blks[i]
        if c == b[0:1].lower() or c == b[1:2].lower():
            rest = []
            j = 0
            while j < len(blks):
                if j != i:
                    rest = rest + [blks[j]]
                j = j + 1
            if canSpell(word[1:], rest):
                return True
        i = i + 1
    return False
def newSpeller(blocks):
    bl = fields(blocks)
    return lambda w: canSpell(w, bl)
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    sp = newSpeller("BO XK DQ CP NA GT RE TG QD FS JW HU VI AN OB ER FS LY PC ZM")
    for word in ["A", "BARK", "BOOK", "TREAT", "COMMON", "SQUAD", "CONFUSE"]:
        print(word + " " + str(sp(word)))
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
