# Code generated by Mochi transpiler.
# Version 0.10.41, generated on 2025-07-26 17:30 +0700
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict
import dataclasses
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

@dataclass
class TinyInt:
    value: int
    def Add(self, t2):
        return NewTinyInt(self.value + t2.value)
    def Sub(self, t2):
        return NewTinyInt(self.value - t2.value)
    def Mul(self, t2):
        return NewTinyInt(self.value * t2.value)
    def Div(self, t2):
        return NewTinyInt(self.value // t2.value)
    def Rem(self, t2):
        return NewTinyInt(self.value % t2.value)
    def Inc(self):
        return Add(NewTinyInt(1))
    def Dec(self):
        return Sub(NewTinyInt(1))

def NewTinyInt(i):
    if i < 1:
        i = 1
    else:
        if i > 10:
            i = 10
    return TinyInt(value=i)
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    t1 = NewTinyInt(6)
    t2 = NewTinyInt(3)
    print("t1      = " + str(t1.value))
    print("t2      = " + str(t2.value))
    print("t1 + t2 = " + str(t1.Add(t2).get("value")))
    print("t1 - t2 = " + str(t1.Sub(t2).get("value")))
    print("t1 * t2 = " + str(t1.Mul(t2).get("value")))
    print("t1 / t2 = " + str(t1.Div(t2).get("value")))
    print("t1 % t2 = " + str(t1.Rem(t2).get("value")))
    print("t1 + 1  = " + str(t1.Inc().get("value")))
    print("t1 - 1  = " + str(t1.Dec().get("value")))
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
