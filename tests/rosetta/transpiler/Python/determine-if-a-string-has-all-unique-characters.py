# Code generated by Mochi transpiler.
# Version 0.10.57, generated on 2025-08-04 15:16 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

def indexOf3(s, ch, start):
    i = start
    while i < len(s):
        if s[i:i + 1] == ch:
            return i
        i = i + 1
    return -1
def ord(ch):
    digits = "0123456789"
    idx = indexOf3(digits, ch, 0)
    if idx >= 0:
        return 48 + idx
    if ch == "X":
        return 88
    if ch == "é":
        return 233
    if ch == "😍":
        return 128525
    if ch == "🐡":
        return 128033
    return 0
def toHex(n):
    digits = "0123456789ABCDEF"
    if n == 0:
        return "0"
    v = n
    out = ""
    while v > 0:
        d = v % 16
        out = digits[d:d + 1] + out
        v = v // 16
    return out
def analyze(s):
    le = len(s)
    print("Analyzing \"" + s + "\" which has a length of " + str(le) + ":")
    if le > 1:
        i = 0
        while i < le - 1:
            j = i + 1
            while j < le:
                if s[j:j + 1] == s[i:i + 1]:
                    ch = s[i:i + 1]
                    print("  Not all characters in the string are unique.")
                    print("  '" + ch + "' (0x" + toHex(ord(ch)).lower() + ") is duplicated at positions " + str(i + 1) + " and " + str(j + 1) + ".\n")
                    return
                j = j + 1
            i = i + 1
    print("  All characters in the string are unique.\n")
def main():
    strings = ["", ".", "abcABC", "XYZ ZYX", "1234567890ABCDEFGHIJKLMN0PQRSTUVWXYZ", "01234567890ABCDEFGHIJKLMN0PQRSTUVWXYZ0X", "hétérogénéité", "🎆🎃🎇🎈", "😍😀🙌💃😍🙌", "🐠🐟🐡🦈🐬🐳🐋🐡"]
    i = 0
    while i < len(strings):
        analyze(strings[i])
        i = i + 1
main()
