# Code generated by Mochi transpiler.
# Version 0.10.42, generated on 2025-07-28 08:06 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def id(x):
    return x
def compose(f, g):
    return lambda x: f(g(x))
def zero():
    return lambda f: id
def one():
    return id
def succ(n):
    return lambda f: compose(f, n(f))
def plus(m, n):
    return lambda f: compose(m(f), n(f))
def mult(m, n):
    return compose(m, n)
def exp(m, n):
    return n(m)
def toInt(x):
    counter = 0
    def fCounter(f):
        nonlocal counter
        counter = counter + 1
        return f
    x(fCounter)(id)
    return counter
def toStr(x):
    s = ""
    def fCounter(f):
        nonlocal s
        s = s + "|"
        return f
    x(fCounter)(id)
    return s
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    print("zero = " + str(toInt(zero())))
    onev = one()
    print("one = " + str(toInt(onev)))
    two = succ(succ(zero()))
    print("two = " + str(toInt(two)))
    three = plus(onev, two)
    print("three = " + str(toInt(three)))
    four = mult(two, two)
    print("four = " + str(toInt(four)))
    eight = exp(two, three)
    print("eight = " + str(toInt(eight)))
    print("toStr(four) = " + toStr(four))
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
