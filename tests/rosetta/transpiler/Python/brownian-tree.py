# Code generated by Mochi transpiler.
# Version 0.10.38, generated on 2025-07-24 00:17 +0700
import os
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

w = 400
h = 300
n = 15000
frost = 255
grid = []
y = 0
while y < h:
    row = []
    x = 0
    while x < w:
        row = row + [0]
        x = x + 1
    grid = grid + [row]
    y = y + 1
grid[h // 3][w // 3] = frost
def inBounds(x, y):
    return x >= 0 and x < w and y >= 0 and y < h
def hasNeighbor(x, y):
    dy = -1
    while dy <= 1:
        dx = -1
        while dx <= 1:
            if not (dx == 0 and dy == 0):
                nx = x + dx
                ny = y + dy
                if inBounds(nx, ny) and grid[ny][nx] == frost:
                    return True
            dx = dx + 1
        dy = dy + 1
    return False
a = 0
while a < n:
    px = _now() % w
    py = _now() % h
    if grid[py][px] == frost:
        lost = False
        while True:
            px = px + (_now() % 3) - 1
            py = py + (_now() % 3) - 1
            if not inBounds(px, py):
                lost = True
                break
            if grid[py][px] != frost:
                break
        if lost:
            continue
    else:
        lost = False
        while not hasNeighbor(px, py):
            px = px + (_now() % 3) - 1
            py = py + (_now() % 3) - 1
            if not inBounds(px, py):
                lost = True
                break
        if lost:
            continue
    grid[py][px] = frost
    a = a + 1
