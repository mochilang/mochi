# Code generated by Mochi transpiler.
# Version 0.10.42, generated on 2025-07-27 22:13 +0700
import os
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def qsel(a, k):
    arr = a
    while len(arr) > 1:
        px = _now() % len(arr)
        pv = arr[px]
        last = len(arr) - 1
        tmp = arr[px]
        arr[px] = arr[last]
        arr[last] = tmp
        px = 0
        i = 0
        while i < last:
            v = arr[i]
            if v < pv:
                t = arr[px]
                arr[px] = arr[i]
                arr[i] = t
                px = px + 1
            i = i + 1
        arr[px] = pv
        if px == k:
            return pv
        if k < px:
            arr = arr[0:px]
        else:
            arr = arr[(px + 1):]
            k = k - (px + 1)
    return arr[0]
def fivenum(a):
    last = len(a) - 1
    m = last // 2
    n5 = []
    n5 = n5 + [qsel(a[0:m], 0)]
    n5 = n5 + [qsel(a[0:m], len(a) // 4)]
    n5 = n5 + [qsel(a, m)]
    arr2 = a[m:]
    q3 = last - m - (len(a) // 4)
    n5 = n5 + [qsel(arr2, q3)]
    arr2 = arr2[q3:]
    n5 = n5 + [qsel(arr2, len(arr2) - 1)]
    return n5
x1 = [36.0, 40.0, 7.0, 39.0, 41.0, 15.0]
x2 = [15.0, 6.0, 42.0, 41.0, 7.0, 36.0, 49.0, 40.0, 39.0, 47.0, 43.0]
x3 = [0.14082834, 0.0974879, 1.73131507, 0.87636009, -1.95059594, 0.73438555, -0.03035726, 1.4667597, -0.74621349, -0.72588772, 0.6390516, 0.61501527, -0.9898378, -1.00447874, -0.62759469, 0.66206163, 1.04312009, -0.10305385, 0.75775634, 0.32566578]
print(str(fivenum(x1)))
print(str(fivenum(x2)))
print(str(fivenum(x3)))
