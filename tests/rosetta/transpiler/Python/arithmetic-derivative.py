# Code generated by Mochi transpiler.
# Version 0.10.37, generated on 2025-07-23 11:36 +0700
import sys
sys.set_int_max_str_digits(0)

def primeFactors(n):
    factors = []
    x = n
    while x % 2 == 0:
        factors = factors + [2]
        x = int(x // 2)
    p = 3
    while p * p <= x:
        while x % p == 0:
            factors = factors + [p]
            x = int(x // p)
        p = p + 2
    if x > 1:
        factors = factors + [x]
    return factors
def repeat(ch, n):
    s = ""
    i = 0
    while i < n:
        s = s + ch
        i = i + 1
    return s
def D(n):
    if n < 0.0:
        return -D(-n)
    if n < 2.0:
        return 0.0
    factors = []
    if n < 1e+19:
        factors = primeFactors(int(n))
    else:
        g = int(n / 100.0)
        factors = primeFactors(g)
        factors = factors + [2]
        factors = factors + [2]
        factors = factors + [5]
        factors = factors + [5]
    c = len(factors)
    if c == 1:
        return 1.0
    if c == 2:
        return float(factors[0] + factors[1])
    d = n / float(factors[0])
    return D(d) * float(factors[0]) + d
def pad(n):
    s = str(n)
    while len(s) < 4:
        s = " " + s
    return s
def main():
    vals = []
    n = -99
    while n < 101:
        vals = vals + [int(D(float(n)))]
        n = n + 1
    i = 0
    while i < len(vals):
        line = ""
        j = 0
        while j < 10:
            line = line + pad(vals[i + j])
            if j < 9:
                line = line + " "
            j = j + 1
        print(line)
        i = i + 10
    pow = 1.0
    m = 1
    while m < 21:
        pow = pow * 10.0
        exp = str(m)
        if len(exp) < 2:
            exp = exp + " "
        res = str(m) + repeat("0", m - 1)
        print("D(10^" + exp + ") / 7 = " + res)
        m = m + 1
main()
