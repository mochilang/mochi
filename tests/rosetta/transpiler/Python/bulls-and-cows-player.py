# Code generated by Mochi transpiler.
# Version 0.10.40, generated on 2025-07-25 19:02 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def indexOf(s, ch):
    i = 0
    while i < len(s):
        if s[i:i + 1] == ch:
            return i
        i = i + 1
    return -1
def fields(s):
    words = []
    cur = ""
    i = 0
    while i < len(s):
        ch = s[i:i + 1]
        if ch == " " or ch == "\t" or ch == "\n":
            if len(cur) > 0:
                words = words + [cur]
                cur = ""
        else:
            cur = cur + ch
        i = i + 1
    if len(cur) > 0:
        words = words + [cur]
    return words
def makePatterns():
    digits = ["1", "2", "3", "4", "5", "6", "7", "8", "9"]
    pats = []
    i = 0
    while i < len(digits):
        j = 0
        while j < len(digits):
            if j != i:
                k = 0
                while k < len(digits):
                    if k != i and k != j:
                        l = 0
                        while l < len(digits):
                            if l != i and l != j and l != k:
                                pats = pats + [digits[i] + digits[j] + digits[k] + digits[l]]
                            l = l + 1
                    k = k + 1
            j = j + 1
        i = i + 1
    return pats
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    print("Cows and bulls/player\n" + "You think of four digit number of unique digits in the range 1 to 9.\n" + "I guess.  You score my guess:\n" + "    A correct digit but not in the correct place is a cow.\n" + "    A correct digit in the correct place is a bull.\n" + "You give my score as two numbers separated with a space.")
    patterns = makePatterns()
    while True:
        if len(patterns) == 0:
            print("Oops, check scoring.")
            return
        guess = patterns[0]
        patterns = patterns[1:]
        cows = 0
        bulls = 0
        while True:
            print("My guess: " + guess + ".  Score? (c b) ")
            line = input()
            toks = fields(line)
            if len(toks) == 2:
                c = int(toks[0])
                b = int(toks[1])
                if c >= 0 and c <= 4 and b >= 0 and b <= 4 and c + b <= 4:
                    cows = c
                    bulls = b
                    break
            print("Score guess as two numbers: cows bulls")
        if bulls == 4:
            print("I did it. :)")
            return
        next = []
        idx = 0
        while idx < len(patterns):
            pat = patterns[idx]
            c = 0
            b = 0
            i = 0
            while i < 4:
                cg = guess[i:i + 1]
                cp = pat[i:i + 1]
                if cg == cp:
                    b = b + 1
                else:
                    if pat.find(cg) >= 0:
                        c = c + 1
                i = i + 1
            if c == cows and b == bulls:
                next = next + [pat]
            idx = idx + 1
        patterns = next
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
