# Code generated by Mochi transpiler.
# Version 0.10.42, generated on 2025-07-28 00:39 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
def applyFilter(input, a, b):
    out = []
    scale = 1.0 / a[0]
    i = 0
    while i < len(input):
        tmp = 0.0
        j = 0
        while j <= i and j < len(b):
            tmp = tmp + b[j] * input[i - j]
            j = j + 1
        j = 0
        while j < i and j + 1 < len(a):
            tmp = tmp - a[j + 1] * out[i - j - 1]
            j = j + 1
        out = out + [tmp * scale]
        i = i + 1
    return out
a = [1.0, -2.7756e-16, 0.33333333, -1.85e-17]
b = [0.16666667, 0.5, 0.5, 0.16666667]
sig = [-0.917843918645, 0.141984778794, 1.20536903482, 0.190286794412, -0.662370894973, -1.00700480494, -0.404707073677, 0.800482325044, 0.743500089861, 1.01090520172, 0.741527555207, 0.277841675195, 0.400833448236, -0.2085993586, -0.172842103641, -0.134316096293, 0.0259303398477, 0.490105989562, 0.549391221511, 0.9047198589]
res = applyFilter(sig, a, b)
k = 0
while k < len(res):
    print(res[k])
    k = k + 1
_bench_end = _now()
_bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
