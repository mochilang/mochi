# Code generated by Mochi transpiler.
# Version 0.10.57, generated on 2025-08-04 15:16 +0700
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict
import dataclasses

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

@dataclass
class Delegator:
    delegate: Dict[str, Callable[[], str]]

def operation(d):
    if "thing" in d.delegate:
        return d.delegate.get("thing")()
    return "default implementation"
def newDelegate():
    m = {}
    m["thing"] = lambda : "delegate implementation"
    return m
a = Delegator(delegate={})
print(operation(a))
print(operation(a))
print(operation(a))
