# Code generated by Mochi transpiler.
# Version 0.10.42, generated on 2025-07-28 00:51 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

seed = 1
def prng(max):
    global seed
    seed = (seed * 1103515245 + 12345) % 2147483648
    return seed % max
def gen(n):
    arr = []
    i = 0
    while i < n:
        arr = arr + ["["]
        arr = arr + ["]"]
        i = i + 1
    j = len(arr) - 1
    while j > 0:
        k = prng(j + 1)
        tmp = arr[j]
        arr[j] = arr[k]
        arr[k] = tmp
        j = j - 1
    out = ""
    for ch in arr:
        out = out + ch
    return out
def testBalanced(s):
    open = 0
    i = 0
    while i < len(s):
        c = s[i:i + 1]
        if c == "[":
            open = open + 1
        else:
            if c == "]":
                if open == 0:
                    print(s + ": not ok")
                    return
                open = open - 1
            else:
                print(s + ": not ok")
                return
        i = i + 1
    if open == 0:
        print(s + ": ok")
    else:
        print(s + ": not ok")
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    i = 0
    while i < 10:
        testBalanced(gen(i))
        i = i + 1
    testBalanced("()")
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
