# Code generated by Mochi transpiler.
# Version 0.10.39, generated on 2025-07-24 09:30 +0000
import sys
sys.set_int_max_str_digits(0)

def mod(n, m):
    return ((n % m) + m) % m
def isPrime(n):
    if n < 2:
        return False
    if n % 2 == 0:
        return n == 2
    if n % 3 == 0:
        return n == 3
    d = 5
    while d * d <= n:
        if n % d == 0:
            return False
        d = d + 2
        if n % d == 0:
            return False
        d = d + 4
    return True
def pad(n, width):
    s = str(n)
    while len(s) < width:
        s = " " + s
    return s
def carmichael(p1):
    for h3 in range(2, p1):
        for d in range(1, (h3 + p1)):
            if ((h3 + p1) * (p1 - 1)) % d == 0 and mod(-p1 * p1, h3) == d % h3:
                p2 = 1 + ((p1 - 1) * (h3 + p1) // d)
                if not isPrime(p2):
                    continue
                p3 = 1 + (p1 * p2 // h3)
                if not isPrime(p3):
                    continue
                if (p2 * p3) % (p1 - 1) != 1:
                    continue
                c = p1 * p2 * p3
                print(pad(p1, 2) + "   " + pad(p2, 4) + "   " + pad(p3, 5) + "     " + str(c))
print("The following are Carmichael munbers for p1 <= 61:\n")
print("p1     p2      p3     product")
print("==     ==      ==     =======")
for p1 in range(2, 62):
    if isPrime(p1):
        carmichael(p1)
