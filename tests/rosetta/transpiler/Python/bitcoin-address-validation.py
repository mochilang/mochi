# Code generated by Mochi transpiler.
# Version 0.10.37, generated on 2025-07-23 15:05 +0700
import sys
sys.set_int_max_str_digits(0)

def indexOf(s, ch):
    i = 0
    while i < len(s):
        if s[i:i + 1] == ch:
            return i
        i = i + 1
    return -1
def set58(addr):
    tmpl = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
    a = []
    i = 0
    while i < 25:
        a = a + [0]
        i = i + 1
    idx = 0
    while idx < len(addr):
        ch = addr[idx:idx + 1]
        c = indexOf(tmpl, ch)
        if c < 0:
            return []
        j = 24
        while j >= 0:
            c = c + 58 * a[j]
            a[j] = c % 256
            c = int(c // 256)
            j = j - 1
        if c > 0:
            return []
        idx = idx + 1
    return a
def doubleSHA256(bs):
    first = sha256(bs)
    return sha256(first)
def computeChecksum(a):
    hash = doubleSHA256(a[0:21])
    return hash[0:4]
def validA58(addr):
    a = set58(addr)
    if len(a) != 25:
        return False
    if a[0] != 0:
        return False
    sum = computeChecksum(a)
    i = 0
    while i < 4:
        if a[21 + i] != sum[i]:
            return False
        i = i + 1
    return True
print(str(validA58("1AGNa15ZQXAZUgFiqJ3i7Z2DPU2J6hW62i")))
print(str(validA58("17NdbrSGoUotzeGCcMMCqnFkEvLymoou9j")))
