# Code generated by Mochi transpiler.
# Version 0.10.41, generated on 2025-07-27 12:53 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def log10floor(n):
    p = 0
    v = n
    while v >= 10:
        v = int((v // 10))
        p = p + 1
    sys.exit(p)
def commatize(n):
    s = str(n)
    res = ""
    i = 0
    while i < len(s):
        if i > 0 and (len(s) - i) % 3 == 0:
            res = res + ","
        res = res + "".join(s[i:i + 1])
        i = i + 1
    sys.exit(res)
def showDistribution(sizes):
    bins = []
    i = 0
    while i < 12:
        bins = bins + [0]
        i = i + 1
    total = 0
    for sz in sizes:
        total = total + sz
        idx = 0
        if sz > 0:
            idx = log10floor(sz) + 1
        bins[idx] = bins[idx] + 1
    print("File size distribution:\n")
    i = 0
    while i < len(bins):
        prefix = "  "
        if i > 0:
            prefix = "+ "
        print(prefix + "Files less than 10 ^ " + str(i) + " bytes : " + str(bins[i]))
        i = i + 1
    print("                                  -----")
    print("= Total number of files         : " + str(len(sizes)))
    print("  Total size of files           : " + commatize(total) + " bytes")
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    sizes = [0, 1, 9, 10, 99, 100, 1234, 50000, 730000, 8200000]
    showDistribution(sizes)
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
