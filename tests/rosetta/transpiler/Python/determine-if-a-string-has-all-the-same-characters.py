# Code generated by Mochi transpiler.
# Version 0.10.57, generated on 2025-08-04 15:16 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

def ord(ch):
    if ch == "5":
        return 53
    if ch == "T":
        return 84
    if ch == " ":
        return 32
    if ch == "é":
        return 233
    if ch == "🐺":
        return 128058
    return 0
def hex(n):
    digits = "0123456789abcdef"
    if n == 0:
        return "0x0"
    m = n
    out = ""
    while m > 0:
        d = m % 16
        out = digits[d:d + 1] + out
        m = m // 16
    return "0x" + out
def quote(s):
    return "'" + s + "'"
def analyze(s):
    le = len(s)
    print("Analyzing " + quote(s) + " which has a length of " + str(le) + ":")
    if le > 1:
        i = 1
        while i < le:
            cur = s[i:i + 1]
            prev = s[i - 1:i]
            if cur != prev:
                print("  Not all characters in the string are the same.")
                print("  " + quote(cur) + " (" + hex(ord(cur)) + ") is different at position " + str(i + 1) + ".")
                print("")
                return
            i = i + 1
    print("  All characters in the string are the same.")
    print("")
def main():
    strings = ["", "   ", "2", "333", ".55", "tttTTT", "4444 444k", "pépé", "🐶🐶🐺🐶", "🎄🎄🎄🎄"]
    i = 0
    while i < len(strings):
        analyze(strings[i])
        i = i + 1
main()
