# Code generated by Mochi transpiler.
# Version 0.10.37, generated on 2025-07-23 08:14 +0000
from fractions import Fraction

import sys
sys.set_int_max_str_digits(0)


def _pad_start(s, length, ch):
    return str(s).rjust(length, ch)

def bernoulli(n):
    a = []
    m = 0
    while m <= n:
        a = a + [Fraction(1) / Fraction(m + 1)]
        j = m
        while j >= 1:
            a[j - 1] = Fraction(j) * (a[j - 1] - a[j])
            j = j - 1
        m = m + 1
    return a[0]
for i in range(0, 61):
    b = bernoulli(i)
    if b.numerator != 0:
        numStr = str(b.numerator)
        denStr = str(b.denominator)
        print("B(" + _pad_start(str(i), 2, " ") + ") =" + _pad_start(numStr, 45, " ") + "/" + denStr)
