# Code generated by Mochi transpiler.
# Version 0.10.42, generated on 2025-07-27 16:50 +0700
import sys
sys.set_int_max_str_digits(0)

def splitPath(p):
    parts = []
    cur = ""
    i = 0
    while i < len(p):
        if p[i:i + 1] == "/":
            if cur != "":
                parts = parts + [cur]
                cur = ""
        else:
            cur = cur + "".join(p[i:i + 1])
        i = i + 1
    if cur != "":
        parts = parts + [cur]
    return parts
def joinPath(parts):
    s = ""
    i = 0
    while i < len(parts):
        s = s + "/" + parts[i]
        i = i + 1
    return s
def commonPrefix(paths):
    if len(paths) == 0:
        return ""
    base = splitPath(paths[0])
    i = 0
    prefix = []
    while i < len(base):
        comp = base[i]
        ok = True
        for p in paths:
            parts = splitPath(p)
            if i >= len(parts) or parts[i] != comp:
                ok = False
                break
        if ok:
            prefix = prefix + [comp]
        else:
            break
        i = i + 1
    return joinPath(prefix)
def main():
    paths = ["/home/user1/tmp/coverage/test", "/home/user1/tmp/covert/operator", "/home/user1/tmp/coven/members", "/home//user1/tmp/coventry", "/home/user1/././tmp/covertly/foo", "/home/bob/../user1/tmp/coved/bar"]
    c = commonPrefix(paths)
    if c == "":
        print("No common path")
    else:
        print("Common path: " + c)
main()
