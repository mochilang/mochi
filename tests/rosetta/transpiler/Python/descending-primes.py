# Code generated by Mochi transpiler.
# Version 0.10.57, generated on 2025-08-04 15:16 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

def isPrime(n):
    if n < 2:
        return False
    if n % 2 == 0:
        return n == 2
    d = 3
    while d * d <= n:
        if n % d == 0:
            return False
        d = d + 2
    return True
digits = [9, 8, 7, 6, 5, 4, 3, 2, 1]
def gen(idx, cur, used):
    if idx == len(digits):
        if used and isPrime(cur):
            return [cur]
        return []
    with_ = gen(idx + 1, cur * 10 + digits[idx], True)
    without = gen(idx + 1, cur, used)
    return (with_ + without)
primes = gen(0, 0, False)
def pad(n, width):
    s = str(n)
    while len(s) < width:
        s = " " + s
    return s
print("There are " + str(len(primes)) + " descending primes, namely:")
i = 0
line = ""
while i < len(primes):
    line = line + pad(primes[i], 8) + " "
    if (i + 1) % 10 == 0:
        print(line[0:len(line) - 1])
        line = ""
    i = i + 1
if len(line) > 0:
    print(line[0:len(line) - 1])
