# Code generated by Mochi transpiler.
# Version 0.10.50, generated on 2025-07-31 07:47 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

def main():
    INF = 1000000000
    n = 4
    dist = []
    next = []
    i = 0
    while i < n:
        row = []
        nrow = []
        j = 0
        while j < n:
            if i == j:
                row = row + [0]
            else:
                row = row + [INF]
            nrow = nrow + [0 - 1]
            j = j + 1
        dist = dist + [row]
        next = next + [nrow]
        i = i + 1
    dist[0][2] = -2
    next[0][2] = 2
    dist[2][3] = 2
    next[2][3] = 3
    dist[3][1] = -1
    next[3][1] = 1
    dist[1][0] = 4
    next[1][0] = 0
    dist[1][2] = 3
    next[1][2] = 2
    k = 0
    while k < n:
        i = 0
        while i < n:
            j = 0
            while j < n:
                if dist[i][k] < INF and dist[k][j] < INF:
                    alt = dist[i][k] + dist[k][j]
                    if alt < dist[i][j]:
                        dist[i][j] = alt
                        next[i][j] = next[i][k]
                j = j + 1
            i = i + 1
        k = k + 1
    def path(u, v):
        ui = u - 1
        vi = v - 1
        if next[ui][vi] == 0 - 1:
            return []
        p = [u]
        cur = ui
        while cur != vi:
            cur = next[cur][vi]
            p = p + [cur + 1]
        return p
    def pathStr(p):
        s = ""
        first = True
        idx = 0
        while idx < len(p):
            x = p[idx]
            if not first:
                s = s + " -> "
            s = s + str(x)
            first = False
            idx = idx + 1
        return s
    print("pair\tdist\tpath")
    a = 0
    while a < n:
        b = 0
        while b < n:
            if a != b:
                print(str(a + 1) + " -> " + str(b + 1) + "\t" + str(dist[a][b]) + "\t" + pathStr(path(a + 1, b + 1)))
            b = b + 1
        a = a + 1
main()
