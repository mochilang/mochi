# Code generated by Mochi transpiler.
# Version 0.10.42, generated on 2025-07-28 10:08 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    INF = 1000000000
    n = 4
    dist = []
    next = []
    i = 0
    while i < n:
        row = []
        nrow = []
        j = 0
        while j < n:
            if i == j:
                row = row + [0]
            else:
                row = row + [INF]
            nrow = nrow + [0 - 1]
            j = j + 1
        dist = dist + [row]
        next = next + [nrow]
        i = i + 1
    dist[0][2] = -2
    next[0][2] = 2
    dist[2][3] = 2
    next[2][3] = 3
    dist[3][1] = -1
    next[3][1] = 1
    dist[1][0] = 4
    next[1][0] = 0
    dist[1][2] = 3
    next[1][2] = 2
    k = 0
    while k < n:
        i = 0
        while i < n:
            j = 0
            while j < n:
                if dist[i][k] < INF and dist[k][j] < INF:
                    alt = dist[i][k] + dist[k][j]
                    if alt < dist[i][j]:
                        dist[i][j] = alt
                        next[i][j] = next[i][k]
                j = j + 1
            i = i + 1
        k = k + 1
    def path(u, v):
        ui = u - 1
        vi = v - 1
        if next[ui][vi] == 0 - 1:
            return []
        p = [u]
        cur = ui
        while cur != vi:
            cur = next[cur][vi]
            p = p + [cur + 1]
        return p
    def pathStr(p):
        s = ""
        first = True
        idx = 0
        while idx < len(p):
            x = p[idx]
            if not first:
                s = s + " -> "
            s = s + str(x)
            first = False
            idx = idx + 1
        return s
    print("pair\tdist\tpath")
    a = 0
    while a < n:
        b = 0
        while b < n:
            if a != b:
                print(str(a + 1) + " -> " + str(b + 1) + "\t" + str(dist[a][b]) + "\t" + pathStr(path(a + 1, b + 1)))
            b = b + 1
        a = a + 1
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
