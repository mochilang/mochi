# Code generated by Mochi transpiler.
# Version 0.10.50, generated on 2025-07-31 00:17 +0700
import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))

digits = "0123456789abcdef"
def toBase(n, b):
    if n == 0:
        return "0"
    v = n
    out = ""
    while v > 0:
        d = v % b
        out = "".join(digits[d:d + 1]) + out
        v = v // b
    return out
def uabs(a, b):
    if a > b:
        return a - b
    return b - a
def isEsthetic(n, b):
    if n == 0:
        return False
    i = n % b
    n = n // b
    while n > 0:
        j = n % b
        if uabs(i, j) != 1:
            return False
        n = n // b
        i = j
    return True
esths = []
def dfs(n, m, i):
    global esths
    if i >= n and i <= m:
        esths = esths + [i]
    if i == 0 or i > m:
        return
    d = i % 10
    i1 = i * 10 + d - 1
    i2 = i1 + 2
    if d == 0:
        dfs(n, m, i2)
    else:
        if d == 9:
            dfs(n, m, i1)
        else:
            dfs(n, m, i1)
            dfs(n, m, i2)
def commatize(n):
    s = str(n)
    i = len(s) - 3
    while i >= 1:
        s = "".join(s[0:i]) + "," + "".join(s[i:len(s)])
        i = i - 3
    return s
def listEsths(n, n2, m, m2, perLine, showAll):
    global esths
    esths = []
    i = 0
    while i < 10:
        dfs(n2, m2, i)
        i = i + 1
    le = len(esths)
    print("Base 10: " + commatize(le) + " esthetic numbers between " + commatize(n) + " and " + commatize(m) + ":")
    if showAll:
        c = 0
        line = ""
        for v in esths:
            if len(line) > 0:
                line = line + " "
            line = line + str(v)
            c = c + 1
            if c % perLine == 0:
                print(line)
                line = ""
        if len(line) > 0:
            print(line)
    else:
        line = ""
        idx = 0
        while idx < perLine:
            if len(line) > 0:
                line = line + " "
            line = line + str(esths[idx])
            idx = idx + 1
        print(line)
        print("............")
        line = ""
        idx = le - perLine
        while idx < le:
            if len(line) > 0:
                line = line + " "
            line = line + str(esths[idx])
            idx = idx + 1
        print(line)
    print("")
def main():
    b = 2
    while b <= 16:
        start = 4 * b
        stop = 6 * b
        print("Base " + str(b) + ": " + str(start) + "th to " + str(stop) + "th esthetic numbers:")
        n = 1
        c = 0
        line = ""
        while c < stop:
            if isEsthetic(n, b):
                c = c + 1
                if c >= start:
                    if len(line) > 0:
                        line = line + " "
                    line = line + toBase(n, b)
            n = n + 1
        print(line)
        print("")
        b = b + 1
    listEsths(1000, 1010, 9999, 9898, 16, True)
    listEsths(100000000, 101010101, 130000000, 123456789, 9, True)
    listEsths(100000000000, 101010101010, 130000000000, 123456789898, 7, False)
    listEsths(100000000000000, 101010101010101, 130000000000000, 123456789898989, 5, False)
    listEsths(100000000000000000, 101010101010101010, 130000000000000000, 123456789898989898, 4, False)
main()
