# Code generated by Mochi transpiler.
# Version 0.10.41, generated on 2025-07-26 19:54 +0700
import sys
sys.set_int_max_str_digits(0)

def parseIntStr(str):
    i = 0
    neg = False
    if len(str) > 0 and str[0:1] == "-":
        neg = True
        i = 1
    n = 0
    digits = {"0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9}
    while i < len(str):
        n = n * 10 + digits[str[i:i + 1]]
        i = i + 1
    if neg:
        n = -n
    return n
days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
def anchorDay(y):
    return (2 + 5 * (y % 4) + 4 * (y % 100) + 6 * (y % 400)) % 7
def isLeapYear(y):
    return y % 4 == 0 and (y % 100 != 0 or y % 400 == 0)
firstDaysCommon = [3, 7, 7, 4, 2, 6, 4, 1, 5, 3, 7, 5]
firstDaysLeap = [4, 1, 7, 4, 2, 6, 4, 1, 5, 3, 7, 5]
def main():
    dates = ["1800-01-06", "1875-03-29", "1915-12-07", "1970-12-23", "2043-05-14", "2077-02-12", "2101-04-02"]
    print("Days of week given by Doomsday rule:")
    for date in dates:
        y = parseIntStr(date[0:4])
        m = parseIntStr(date[5:7]) - 1
        d = parseIntStr(date[8:10])
        a = anchorDay(y)
        f = firstDaysCommon[m]
        if isLeapYear(y):
            f = firstDaysLeap[m]
        w = d - f
        if w < 0:
            w = 7 + w
        dow = (a + w) % 7
        print(date + " -> " + days[dow])
main()
