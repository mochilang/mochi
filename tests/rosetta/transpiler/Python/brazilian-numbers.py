# Code generated by Mochi transpiler.
# Version 0.10.40, generated on 2025-07-25 19:02 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def sameDigits(n, b):
    f = n % b
    n = int((n // b))
    while n > 0:
        if n % b != f:
            return False
        n = int((n // b))
    return True
def isBrazilian(n):
    if n < 7:
        return False
    if n % 2 == 0 and n >= 8:
        return True
    b = 2
    while b < n - 1:
        if sameDigits(n, b):
            return True
        b = b + 1
    return False
def isPrime(n):
    if n < 2:
        return False
    if n % 2 == 0:
        return n == 2
    if n % 3 == 0:
        return n == 3
    d = 5
    while d * d <= n:
        if n % d == 0:
            return False
        d = d + 2
        if n % d == 0:
            return False
        d = d + 4
    return True
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    kinds = [" ", " odd ", " prime "]
    for kind in kinds:
        print("First 20" + kind + "Brazilian numbers:")
        c = 0
        n = 7
        while True:
            if isBrazilian(n):
                print(str(n) + " ")
                c = c + 1
                if c == 20:
                    print("\n")
                    break
            if kind == " ":
                n = n + 1
            else:
                if kind == " odd ":
                    n = n + 2
                else:
                    while True:
                        n = n + 2
                        if isPrime(n):
                            break
    n = 7
    c = 0
    while c < 100000:
        if isBrazilian(n):
            c = c + 1
        n = n + 1
    print("The 100,000th Brazilian number: " + str(n - 1))
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
