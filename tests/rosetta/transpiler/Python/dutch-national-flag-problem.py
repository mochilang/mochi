# Code generated by Mochi transpiler.
# Version 0.10.41, generated on 2025-07-26 19:54 +0700
import os
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def listStr(xs):
    s = "["
    i = 0
    while i < len(xs):
        s = s + str(xs[i])
        if i < len(xs) - 1:
            s = s + " "
        i = i + 1
    s = s + "]"
    return s
def ordered(xs):
    if len(xs) == 0:
        return True
    prev = xs[0]
    i = 1
    while i < len(xs):
        if xs[i] < prev:
            return False
        prev = xs[i]
        i = i + 1
    return True
def outOfOrder(n):
    if n < 2:
        return []
    r = []
    while True:
        r = []
        i = 0
        while i < n:
            r = r + [_now() % 3]
            i = i + 1
        if not ordered(r):
            break
    return r
def sort3(a):
    lo = 0
    mid = 0
    hi = len(a) - 1
    while mid <= hi:
        v = a[mid]
        if v == 0:
            tmp = a[lo]
            a[lo] = a[mid]
            a[mid] = tmp
            lo = lo + 1
            mid = mid + 1
        else:
            if v == 1:
                mid = mid + 1
            else:
                tmp = a[mid]
                a[mid] = a[hi]
                a[hi] = tmp
                hi = hi - 1
    return a
def main():
    f = outOfOrder(12)
    print(listStr(f))
    f = sort3(f)
    print(listStr(f))
main()
