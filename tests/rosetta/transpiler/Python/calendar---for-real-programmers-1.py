# Code generated by Mochi transpiler.
# Version 0.10.40, generated on 2025-07-25 19:02 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
start = [3, 6, 6, 2, 4, 0, 2, 5, 1, 3, 6, 1]
months = [" January ", " February", "  March  ", "  April  ", "   May   ", "   June  ", "   July  ", "  August ", "September", " October ", " November", " December"]
days = ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"]
print("                                [SNOOPY]\n")
print("                                  1969\n")
qtr = 0
while qtr < 4:
    mi = 0
    while mi < 3:
        print("      " + months[qtr * 3 + mi] + "           ", ("True" if False else "False"))
        mi = mi + 1
    print("")
    mi = 0
    while mi < 3:
        d = 0
        while d < 7:
            print(" " + days[d], ("True" if False else "False"))
            d = d + 1
        print("     ", ("True" if False else "False"))
        mi = mi + 1
    print("")
    week = 0
    while week < 6:
        mi = 0
        while mi < 3:
            day = 0
            while day < 7:
                m = qtr * 3 + mi
                val = week * 7 + day - start[m] + 1
                if val >= 1 and val <= daysInMonth[m]:
                    s = str(val)
                    if len(s) == 1:
                        s = " " + s
                    print(" " + s, ("True" if False else "False"))
                else:
                    print("   ", ("True" if False else "False"))
                day = day + 1
            print("     ", ("True" if False else "False"))
            mi = mi + 1
        print("")
        week = week + 1
    print("")
    qtr = qtr + 1
_bench_end = _now()
_bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
