# Code generated by Mochi transpiler.
# Version 0.10.42, generated on 2025-07-28 10:08 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
def ln(x):
    k = 0.0
    v = x
    while v >= 2.0:
        v = v / 2.0
        k = k + 1.0
    while v < 1.0:
        v = v * 2.0
        k = k - 1.0
    z = (v - 1.0) / (v + 1.0)
    zpow = z
    sum = z
    i = 3
    while i <= 9:
        zpow = zpow * z * z
        sum = sum + zpow / (float(i))
        i = i + 2
    ln2 = 0.6931471805599453
    return (k * ln2) + 2.0 * sum
def expf(x):
    term = 1.0
    sum = 1.0
    i = 1
    while i < 20:
        term = term * x / float(i)
        sum = sum + term
        i = i + 1
    return sum
def powf(base, exp):
    return expf(exp * ln(base))
def lanczos7(z):
    t = z + 6.5
    x = 0.9999999999998099 + 676.5203681218851 / z - 1259.1392167224028 / (z + 1.0) + 771.3234287776531 / (z + 2.0) - 176.6150291621406 / (z + 3.0) + 12.507343278686905 / (z + 4.0) - 0.13857109526572012 / (z + 5.0) + 9.984369578019572e-06 / (z + 6.0) + 1.5056327351493116e-07 / (z + 7.0)
    return 2.5066282746310002 * powf(t, z - 0.5) * powf(2.718281828459045, -t) * x
xs = [-0.5, 0.1, 0.5, 1.0, 1.5, 2.0, 3.0, 10.0, 140.0, 170.0]
for x in xs:
    print(str(x) + " " + str(lanczos7(x)))
_bench_end = _now()
_bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
