# Code generated by Mochi transpiler.
# Version 0.10.37, generated on 2025-07-23 11:36 +0700
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict

import sys
sys.set_int_max_str_digits(0)

@dataclass
class Complex:
    re: float
    im: float

def add(a, b):
    return Complex(re=a.re + b.re, im=a.im + b.im)
def mul(a, b):
    return Complex(re=a.re * b.re - a.im * b.im, im=a.re * b.im + a.im * b.re)
def neg(a):
    return Complex(re=-a.re, im=-a.im)
def inv(a):
    denom = a.re * a.re + a.im * a.im
    return Complex(re=a.re / denom, im=-a.im / denom)
def conj(a):
    return Complex(re=a.re, im=-a.im)
def cstr(a):
    s = "(" + str(a.re)
    if a.im >= 0:
        s = s + "+" + str(a.im) + "i)"
    else:
        s = s + str(a.im) + "i)"
    return s
a = Complex(re=1.0, im=1.0)
b = Complex(re=3.14159, im=1.25)
print("a:       " + cstr(a))
print("b:       " + cstr(b))
print("a + b:   " + cstr(add(a, b)))
print("a * b:   " + cstr(mul(a, b)))
print("-a:      " + cstr(neg(a)))
print("1 / a:   " + cstr(inv(a)))
print("aÌ…:       " + cstr(conj(a)))
