# Code generated by Mochi transpiler.
# Version 0.10.57, generated on 2025-08-04 16:12 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def parseIntStr(str):
    i = 0
    neg = False
    if len(str) > 0 and str[0:1] == "-":
        neg = True
        i = 1
    n = 0
    digits = {"0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9}
    while i < len(str):
        n = n * 10 + digits[str[i:i + 1]]
        i = i + 1
    if neg:
        n = -n
    return n
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    try:
        n = 0
        while n < 1 or n > 5:
            print("How many integer variables do you want to create (max 5) : ")
            line = input()
            if len(line) > 0:
                n = parseIntStr(line)
        vars = {}
        print("OK, enter the variable names and their values, below\n")
        i = 1
        while i <= n:
            print("\n  Variable " + str(i) + "\n")
            print("    Name  : ")
            name = input()
            if name in vars:
                print("  Sorry, you've already created a variable of that name, try again")
                continue
            value = 0
            while True:
                print("    Value : ")
                valstr = input()
                if len(valstr) == 0:
                    print("  Not a valid integer, try again")
                    continue
                ok = True
                j = 0
                neg = False
                if valstr[0:1] == "-":
                    neg = True
                    j = 1
                while j < len(valstr):
                    ch = valstr[j:j + 1]
                    if ch < "0" or ch > "9":
                        ok = False
                        break
                    j = j + 1
                if not ok:
                    print("  Not a valid integer, try again")
                    continue
                value = parseIntStr(valstr)
                break
            vars[name] = value
            i = i + 1
        print("\nEnter q to quit")
        while True:
            print("\nWhich variable do you want to inspect : ")
            name = input()
            if name.lower() == "q":
                return
            if name in vars:
                print("It's value is " + str(vars[name]))
            else:
                print("Sorry there's no variable of that name, try again")
    finally:
        _bench_end = _now()
        _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
        print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
