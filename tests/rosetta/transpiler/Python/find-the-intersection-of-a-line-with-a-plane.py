# Code generated by Mochi transpiler.
# Version 0.10.42, generated on 2025-07-27 22:10 +0700
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict
import dataclasses

import sys
sys.set_int_max_str_digits(0)

@dataclass
class Vector:
    x: float
    y: float
    z: float

def add(a, b):
    return Vector(x=a.x + b.x, y=a.y + b.y, z=a.z + b.z)
def sub(a, b):
    return Vector(x=a.x - b.x, y=a.y - b.y, z=a.z - b.z)
def mul(v, s):
    return Vector(x=v.x * s, y=v.y * s, z=v.z * s)
def dot(a, b):
    return a.x * b.x + a.y * b.y + a.z * b.z
def intersectPoint(rv, rp, pn, pp):
    diff = sub(rp, pp)
    prod1 = dot(diff, pn)
    prod2 = dot(rv, pn)
    prod3 = prod1 // prod2
    return sub(rp, mul(rv, prod3))
def main():
    rv = Vector(x=0.0, y=-1.0, z=-1.0)
    rp = Vector(x=0.0, y=0.0, z=10.0)
    pn = Vector(x=0.0, y=0.0, z=1.0)
    pp = Vector(x=0.0, y=0.0, z=5.0)
    ip = intersectPoint(rv, rp, pn, pp)
    print("The ray intersects the plane at (" + str(ip.x) + ", " + str(ip.y) + ", " + str(ip.z) + ")")
main()
