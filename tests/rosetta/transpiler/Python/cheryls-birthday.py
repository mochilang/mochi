# Code generated by Mochi transpiler.
# Version 0.10.42, generated on 2025-07-28 07:52 +0700
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict
import dataclasses
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
@dataclass
class Birthday:
    month: int
    day: int
def monthUnique(b, list):
    c = 0
    for x in list:
        if x.month == b.month:
            c = c + 1
    return c == 1
def dayUnique(b, list):
    c = 0
    for x in list:
        if x.day == b.day:
            c = c + 1
    return c == 1
def monthWithUniqueDay(b, list):
    for x in list:
        if x.month == b.month and dayUnique(x, list):
            return True
    return False
def bstr(b):
    months = ["", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
    return months[b.month] + " " + str(b.day)
choices = [Birthday(month=5, day=15), Birthday(month=5, day=16), Birthday(month=5, day=19), Birthday(month=6, day=17), Birthday(month=6, day=18), Birthday(month=7, day=14), Birthday(month=7, day=16), Birthday(month=8, day=14), Birthday(month=8, day=15), Birthday(month=8, day=17)]
filtered = []
for bd in choices:
    if not monthUnique(bd, choices):
        filtered = filtered + [bd]
filtered2 = []
for bd in filtered:
    if not monthWithUniqueDay(bd, filtered):
        filtered2 = filtered2 + [bd]
filtered3 = []
for bd in filtered2:
    if dayUnique(bd, filtered2):
        filtered3 = filtered3 + [bd]
filtered4 = []
for bd in filtered3:
    if monthUnique(bd, filtered3):
        filtered4 = filtered4 + [bd]
if len(filtered4) == 1:
    print("Cheryl's birthday is " + bstr(filtered4[0]))
else:
    print("Something went wrong!")
_bench_end = _now()
_bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
