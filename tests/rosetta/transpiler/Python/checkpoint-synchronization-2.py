# Code generated by Mochi transpiler.
# Version 0.10.40, generated on 2025-07-25 20:04 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
def lower(ch):
    upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    lower = "abcdefghijklmnopqrstuvwxyz"
    i = 0
    while i < len(upper):
        if ch == upper[i:i + 1]:
            return lower[i:i + 1]
        i = i + 1
    return ch
partList = ["A", "B", "C", "D"]
nAssemblies = 3
for cycle in range(1, (nAssemblies + 1)):
    print("begin assembly cycle " + str(cycle))
    a = ""
    for p in partList:
        print(p + " worker begins part")
        print(p + " worker completed " + p.lower())
        a = a + p.lower()
    print(a + " assembled.  cycle " + str(cycle) + " complete")
_bench_end = _now()
_bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
