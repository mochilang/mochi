# Code generated by Mochi transpiler.
# Version 0.10.37, generated on 2025-07-23 15:05 +0700
import sys
sys.set_int_max_str_digits(0)

def padLeft(s, w):
    res = ""
    n = w - len(s)
    while n > 0:
        res = res + " "
        n = n - 1
    return res + s
dna = "" + "CGTAAAAAATTACAACGTCCTTTGGCTATCTCTTAAACTCCTGCTAAATG" + "CTCGTGCTTTCCAATTATGTAAGCGTTCCGAGACGGGGTGGTCGATTCTG" + "AGGACAAAGGTCAAGATGGAGCGCATCGAACGCAATAAGGATCATTTGAT" + "GGGACGTTTCGTCGACAAAGTCTTGTTTCGAGAGTAACGGCTACCGTCTT" + "CGATTCTGCTTATAACACTATGTTCTTATGAAATGGATGTTCTGAGTTGG" + "TCAGTCCCAATGTGCGGGGTTTCTTTTAGTACGTCGGGAGTGGTATTATA" + "TTTAATTTTTCTATATAGCGATCTGTATTTAAGCAATTCATTTAGGTTAT" + "CGCCGCGATGCTCGGTTCGGACCGCCAAGCATCTGGCTCCACTGCTAGTG" + "TCCTAAATTTGAATGGCAAACACAAATAAGATTTAGCAATTCGTGTAGAC" + "GACCGGGGACTTGCATGATGGGAGCAGCTTTGTTAAACTACGAACGTAAT"
print("SEQUENCE:")
le = len(dna)
i = 0
while i < le:
    k = i + 50
    if k > le:
        k = le
    print(padLeft(str(i), 5) + ": " + "".join(dna[i:k]))
    i = i + 50
a = 0
c = 0
g = 0
t = 0
idx = 0
while idx < le:
    ch = dna[idx:idx + 1]
    if ch == "A":
        a = a + 1
    else:
        if ch == "C":
            c = c + 1
        else:
            if ch == "G":
                g = g + 1
            else:
                if ch == "T":
                    t = t + 1
    idx = idx + 1
print("")
print("BASE COUNT:")
print("    A: " + padLeft(str(a), 3))
print("    C: " + padLeft(str(c), 3))
print("    G: " + padLeft(str(g), 3))
print("    T: " + padLeft(str(t), 3))
print("    ------")
print("    Î£: " + str(le))
print("    ======")
