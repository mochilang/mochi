# Code generated by Mochi transpiler.
# Version 0.10.39, generated on 2025-07-24 18:31 +0700
import sys
sys.set_int_max_str_digits(0)

def newTerm(a, b):
    return {"a": a, "b": b}
def cfSqrt2(nTerms):
    f = []
    n = 0
    while n < nTerms:
        f = f + [newTerm(2, 1)]
        n = n + 1
    if nTerms > 0:
        f[0]["a"] = 1
    return f
def cfNap(nTerms):
    f = []
    n = 0
    while n < nTerms:
        f = f + [newTerm(n, n - 1)]
        n = n + 1
    if nTerms > 0:
        f[0]["a"] = 2
    if nTerms > 1:
        f[1]["b"] = 1
    return f
def cfPi(nTerms):
    f = []
    n = 0
    while n < nTerms:
        g = 2 * n - 1
        f = f + [newTerm(6, g * g)]
        n = n + 1
    if nTerms > 0:
        f[0]["a"] = 3
    return f
def real(f):
    r = 0.0
    i = len(f) - 1
    while i > 0:
        r = (float(f[i]["b"])) // ((float(f[i]["a"])) + r)
        i = i - 1
    if len(f) > 0:
        r = r + (float(f[0]["a"]))
    return r
def main():
    print("sqrt2: " + str(real(cfSqrt2(20))))
    print("nap:   " + str(real(cfNap(20))))
    print("pi:    " + str(real(cfPi(20))))
main()
