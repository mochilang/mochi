# Code generated by Mochi transpiler.
# Version 0.10.39, generated on 2025-07-24 09:30 +0000
import sys
sys.set_int_max_str_digits(0)

def indexOf(s, ch):
    i = 0
    while i < len(s):
        if s[i:i + 1] == ch:
            return i
        i = i + 1
    return -1
def rotate(s, n):
    return "".join(s[n:]) + "".join(s[:n])
def scrambleLeft(s):
    return "".join(s[0:1]) + "".join(s[2:14]) + "".join(s[1:2]) + "".join(s[14:])
def scrambleRight(s):
    return "".join(s[1:3]) + "".join(s[4:15]) + "".join(s[3:4]) + "".join(s[15:]) + "".join(s[0:1])
def chao(text, encode):
    left = "HXUCZVAMDSLKPEFJRIGTWOBNYQ"
    right = "PTLNBQDEOYSFAVZKGJRIHWXUMC"
    out = ""
    i = 0
    while i < len(text):
        ch = text[i:i + 1]
        idx = 0
        if encode:
            idx = indexOf(right, ch)
            out = out + "".join(left[idx:idx + 1])
        else:
            idx = indexOf(left, ch)
            out = out + "".join(right[idx:idx + 1])
        left = rotate(left, idx)
        right = rotate(right, idx)
        left = scrambleLeft(left)
        right = scrambleRight(right)
        i = i + 1
    return out
def main():
    plain = "WELLDONEISBETTERTHANWELLSAID"
    cipher = chao(plain, True)
    print(plain)
    print(cipher)
    print(chao(cipher, False))
main()
