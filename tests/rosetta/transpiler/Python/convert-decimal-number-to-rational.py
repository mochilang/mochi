# Code generated by Mochi transpiler.
# Version 0.10.42, generated on 2025-07-28 08:06 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def gcd(a, b):
    x = a
    if x < 0:
        x = -x
    y = b
    if y < 0:
        y = -y
    while y != 0:
        t = x % y
        x = y
        y = t
    return x
def parseRational(s):
    intPart = 0
    fracPart = 0
    denom = 1
    afterDot = False
    i = 0
    while i < len(s):
        ch = s[i:i + 1]
        if ch == ".":
            afterDot = True
        else:
            d = int(ch) - int("0")
            if not afterDot:
                intPart = intPart * 10 + d
            else:
                fracPart = fracPart * 10 + d
                denom = denom * 10
        i = i + 1
    num = intPart * denom + fracPart
    g = gcd(num, denom)
    return {"num": int((num / g)), "den": int((denom / g))}
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    inputs = ["0.9054054", "0.518518", "0.75"]
    for s in inputs:
        r = parseRational(s)
        print(s + " = " + str(r.get("num")) + "/" + str(r.get("den")))
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
