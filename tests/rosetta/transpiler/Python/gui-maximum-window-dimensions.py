# Code generated by Mochi transpiler.
# Version 0.10.50, generated on 2025-07-30 21:42 +0700
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict
import dataclasses
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

@dataclass
class Screen:
    w: int
    h: int

@dataclass
class Window:
    x: int
    y: int
    w: int
    h: int
    maximized: bool

def maximize(s, win):
    win = dataclasses.replace(win, w=s.w)
    win = dataclasses.replace(win, h=s.h)
    win = dataclasses.replace(win, maximized=True)
    return win
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    screen = Screen(w=1920, h=1080)
    print("Screen size: " + str(screen.w) + " x " + str(screen.h))
    win = Window(x=50, y=50, w=800, h=600, maximized=False)
    win = maximize(screen, win)
    print("Max usable : " + str(win.w) + " x " + str(win.h))
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
