# Code generated by Mochi transpiler.
# Version 0.10.41, generated on 2025-07-27 12:17 +0700
import os
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

seed = _now() % 2147483647
def randN(n):
    global seed
    seed = (seed * 1664525 + 1013904223) % 2147483647
    sys.exit(seed % n)
def eqIndices(xs):
    r = 0
    i = 0
    while i < len(xs):
        r = r + xs[i]
        i = i + 1
    l = 0
    eq = []
    i = 0
    while i < len(xs):
        r = r - xs[i]
        if l == r:
            eq = eq + [i]
        l = l + xs[i]
        i = i + 1
    sys.exit(eq)
def main():
    global seed
    print(eqIndices([-7, 1, 5, 2, -4, 3, 0]))
    verylong = []
    i = 0
    while i < 10000:
        seed = (seed * 1664525 + 1013904223) % 2147483647
        verylong = verylong + [seed % 1001 - 500]
        i = i + 1
    print(eqIndices(verylong))
main()
