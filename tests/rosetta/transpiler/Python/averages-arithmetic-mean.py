# Code generated by Mochi transpiler.
# Version 0.10.42, generated on 2025-07-28 00:48 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def mean(v):
    if len(v) == 0:
        return {"ok": False}
    sum = 0.0
    i = 0
    while i < len(v):
        sum = sum + v[i]
        i = i + 1
    return {"ok": True, "mean": sum / (float(len(v)))}
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    sets = [[], [3.0, 1.0, 4.0, 1.0, 5.0, 9.0], [1e+20, 3.0, 1.0, 4.0, 1.0, 5.0, 9.0, -1e+20], [10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.11], [10.0, 20.0, 30.0, 40.0, 50.0, -100.0, 4.7, -1100.0]]
    for v in sets:
        print("Vector: " + str(v))
        r = mean(v)
        if r.get("ok"):
            print("Mean of " + str(len(v)) + " numbers is " + str(r.get("mean")))
        else:
            print("Mean undefined")
        print("")
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
