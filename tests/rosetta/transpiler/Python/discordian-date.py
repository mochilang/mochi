# Code generated by Mochi transpiler.
# Version 0.10.41, generated on 2025-07-26 19:54 +0700
import sys
sys.set_int_max_str_digits(0)

dayNames = ["Sweetmorn", "Boomtime", "Pungenday", "Prickle-Prickle", "Setting Orange"]
seasons = ["Chaos", "Discord", "Confusion", "Bureaucracy", "The Aftermath"]
holydays = [["Mungday", "Chaoflux"], ["Mojoday", "Discoflux"], ["Syaday", "Confuflux"], ["Zaraday", "Bureflux"], ["Maladay", "Afflux"]]
def isLeap(y):
    if y % 400 == 0:
        return True
    if y % 100 == 0:
        return False
    return y % 4 == 0
daysBefore = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]
def dayOfYear(y, m, d):
    doy = daysBefore[m - 1] + d
    if m > 2 and isLeap(y):
        doy = doy + 1
    return doy
def ordinal(n):
    suff = "th"
    mod100 = n % 100
    if mod100 < 11 or mod100 > 13:
        r = n % 10
        if r == 1:
            suff = "st"
        else:
            if r == 2:
                suff = "nd"
            else:
                if r == 3:
                    suff = "rd"
    return str(n) + suff
def discordian(y, m, d):
    if isLeap(y) and m == 2 and d == 29:
        return "St. Tib's Day, YOLD " + str(y + 1166)
    doy = dayOfYear(y, m, d)
    if isLeap(y) and doy > 60:
        doy = doy - 1
    idx = doy - 1
    season = idx // 73
    day = idx % 73
    res = dayNames[idx % 5] + ", the " + ordinal(day + 1) + " day of " + seasons[season] + " in the YOLD " + str(y + 1166)
    if day == 4:
        res = res + ". Celebrate " + holydays[season][0] + "!"
    if day == 49:
        res = res + ". Celebrate " + holydays[season][1] + "!"
    return res
def main():
    dates = [[2010, 7, 22], [2012, 2, 28], [2012, 2, 29], [2012, 3, 1], [2012, 12, 31], [2013, 1, 1], [2100, 12, 31], [2015, 10, 19], [2010, 1, 5], [2011, 5, 3], [2000, 3, 13]]
    i = 0
    while i < len(dates):
        dt = dates[i]
        print(discordian(dt[0], dt[1], dt[2]))
        i = i + 1
main()
