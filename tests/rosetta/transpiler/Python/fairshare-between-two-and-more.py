# Code generated by Mochi transpiler.
# Version 0.10.42, generated on 2025-07-27 16:50 +0700
import sys
sys.set_int_max_str_digits(0)

def digitSumMod(n, base):
    sum = 0
    j = n
    while j > 0:
        sum = sum + j % base
        j = j // base
    return sum % base
def fairshareList(n, base):
    res = []
    i = 0
    while i < n:
        res = res + [digitSumMod(i, base)]
        i = i + 1
    return res
def sortInts(xs):
    arr = xs
    i = 0
    while i < len(arr):
        j = 0
        while j < len(arr) - 1:
            if arr[j] > arr[j + 1]:
                t = arr[j]
                arr[j] = arr[j + 1]
                arr[j + 1] = t
            j = j + 1
        i = i + 1
    return arr
def turns(n, base):
    counts = []
    i = 0
    while i < base:
        counts = counts + [0]
        i = i + 1
    i = 0
    while i < n:
        v = digitSumMod(i, base)
        counts[v] = counts[v] + 1
        i = i + 1
    freq = {}
    fkeys = []
    i = 0
    while i < base:
        c = counts[i]
        if c > 0:
            if c in freq:
                freq[c] = freq[c] + 1
            else:
                freq[c] = 1
                fkeys = fkeys + [c]
        i = i + 1
    total = 0
    i = 0
    while i < len(fkeys):
        total = total + freq[fkeys[i]]
        i = i + 1
    if total != base:
        return "only " + str(total) + " have a turn"
    fkeys = sortInts(fkeys)
    res = ""
    i = 0
    while i < len(fkeys):
        if i > 0:
            res = res + " or "
        res = res + str(fkeys[i])
        i = i + 1
    return res
def main():
    bases1 = [2, 3, 5, 11]
    i = 0
    while i < len(bases1):
        b = bases1[i]
        print(str(b).rjust(2, " ") + " : " + str(fairshareList(25, b)))
        i = i + 1
    print("")
    print("How many times does each get a turn in 50000 iterations?")
    bases2 = [191, 1377, 49999, 50000, 50001]
    i = 0
    while i < len(bases2):
        b = bases2[i]
        t = turns(50000, b)
        print("  With " + str(b) + " people: " + t)
        i = i + 1
main()
