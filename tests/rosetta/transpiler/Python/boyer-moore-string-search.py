# Code generated by Mochi transpiler.
# Version 0.10.38, generated on 2025-07-23 21:33 +0700
import sys
sys.set_int_max_str_digits(0)

def indexOfStr(h, n):
    hlen = len(h)
    nlen = len(n)
    if nlen == 0:
        return 0
    i = 0
    while i <= hlen - nlen:
        if h[i:i + nlen] == n:
            return i
        i = i + 1
    return -1
def stringSearchSingle(h, n):
    return indexOfStr(h, n)
def stringSearch(h, n):
    result = []
    start = 0
    hlen = len(h)
    nlen = len(n)
    while start < hlen:
        idx = indexOfStr(h[start:hlen], n)
        if idx >= 0:
            result = result + [start + idx]
            start = start + idx + nlen
        else:
            break
    return result
def display(nums):
    s = "["
    i = 0
    while i < len(nums):
        if i > 0:
            s = s + ", "
        s = s + str(nums[i])
        i = i + 1
    s = s + "]"
    return s
def main():
    texts = ["GCTAGCTCTACGAGTCTA", "GGCTATAATGCGTA", "there would have been a time for such a word", "needle need noodle needle", "DKnuthusesandprogramsanimaginarycomputertheMIXanditsassociatedmachinecodeandassemblylanguages", "Nearby farms grew an acre of alfalfa on the dairy's behalf, with bales of that alfalfa exchanged for milk."]
    patterns = ["TCTA", "TAATAAA", "word", "needle", "and", "alfalfa"]
    i = 0
    while i < len(texts):
        print("text" + str(i + 1) + " = " + texts[i])
        i = i + 1
    print("")
    j = 0
    while j < len(texts):
        idxs = stringSearch(texts[j], patterns[j])
        print("Found \"" + patterns[j] + "\" in 'text" + str(j + 1) + "' at indexes " + display(idxs))
        j = j + 1
main()
