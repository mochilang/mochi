# Code generated by Mochi transpiler.
# Version 0.10.42, generated on 2025-07-27 23:57 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def poly(p):
    s = ""
    coef = 1
    i = p
    if coef != 1:
        s = s + str(coef)
    while i > 0:
        s = s + "x"
        if i != 1:
            s = s + "^" + str(i)
        coef = int((coef * i // (p - i + 1)))
        d = coef
        if (p - (i - 1)) % 2 == 1:
            d = -d
        if d < 0:
            s = s + " - " + str(-d)
        else:
            s = s + " + " + str(d)
        i = i - 1
    if s == "":
        s = "1"
    return s
def aks(n):
    if n < 2:
        return False
    c = n
    i = 1
    while i < n:
        if c % n != 0:
            return False
        c = int((c * (n - i) // (i + 1)))
        i = i + 1
    return True
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    p = 0
    while p <= 7:
        print(str(p) + ":  " + poly(p))
        p = p + 1
    first = True
    p = 2
    line = ""
    while p < 50:
        if aks(p):
            if first:
                line = line + str(p)
                first = False
            else:
                line = line + " " + str(p)
        p = p + 1
    print(line)
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
