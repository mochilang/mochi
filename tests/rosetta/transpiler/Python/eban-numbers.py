# Code generated by Mochi transpiler.
# Version 0.10.57, generated on 2025-08-04 16:12 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)
import os
if os.path.dirname(__file__) in sys.path:
    sys.path.remove(os.path.dirname(__file__))


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

vals = [0, 2, 4, 6, 30, 32, 34, 36, 40, 42, 44, 46, 50, 52, 54, 56, 60, 62, 64, 66]
billions = [0, 2, 4, 6]
def ebanNumbers(start, stop):
    nums = []
    for b in billions:
        for m in vals:
            for t in vals:
                for r in vals:
                    n = b * 1000000000 + m * 1000000 + t * 1000 + r
                    if (n >= start) and (n <= stop):
                        nums = nums + [n]
    return nums
def countEban(start, stop):
    count = 0
    for b in billions:
        for m in vals:
            for t in vals:
                for r in vals:
                    n = b * 1000000000 + m * 1000000 + t * 1000 + r
                    if (n >= start) and (n <= stop):
                        count = count + 1
    return count
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    try:
        ranges = [[2, 1000, True], [1000, 4000, True], [2, 10000, False], [2, 100000, False], [2, 1000000, False], [2, 10000000, False], [2, 100000000, False], [2, 1000000000, False]]
        for rg in ranges:
            start = int(rg[0])
            stop = int(rg[1])
            show = bool(rg[2])
            if start == 2:
                print("eban numbers up to and including " + str(stop) + ":")
            else:
                print("eban numbers between " + str(start) + " and " + str(stop) + " (inclusive):")
            if show:
                nums = ebanNumbers(start, stop)
                line = ""
                i = 0
                while i < len(nums):
                    line = line + str(nums[i]) + " "
                    i = i + 1
                if len(line) > 0:
                    print(line[0:len(line) - 1])
            c = countEban(start, stop)
            print("count = " + str(c) + "\n")
    finally:
        _bench_end = _now()
        _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
        print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
