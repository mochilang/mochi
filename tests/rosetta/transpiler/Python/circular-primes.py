# Code generated by Mochi transpiler.
# Version 0.10.39, generated on 2025-07-24 11:14 +0000
import sys
sys.set_int_max_str_digits(0)

def isPrime(n):
    if n < 2:
        return False
    if n % 2 == 0:
        return n == 2
    if n % 3 == 0:
        return n == 3
    d = 5
    while d * d <= n:
        if n % d == 0:
            return False
        d = d + 2
        if n % d == 0:
            return False
        d = d + 4
    return True
circs = []
def isCircular(n):
    nn = n
    pow = 1
    while nn > 0:
        pow = pow * 10
        nn = nn // 10
    nn = n
    while True:
        nn = nn * 10
        f = nn // pow
        nn = nn + f * (1 - pow)
        if nn == n:
            break
        if not isPrime(nn):
            return False
    return True
print("The first 19 circular primes are:")
digits = [1, 3, 7, 9]
q = [1, 2, 3, 5, 7, 9]
fq = [1, 2, 3, 5, 7, 9]
count = 0
while True:
    f = q[0]
    fd = fq[0]
    if isPrime(f) and isCircular(f):
        circs = circs + [f]
        count = count + 1
        if count == 19:
            break
    q = q[1:]
    fq = fq[1:]
    if f != 2 and f != 5:
        for d in digits:
            q = q + [f * 10 + d]
            fq = fq + [fd]
def showList(xs):
    out = "["
    i = 0
    while i < len(xs):
        out = out + str(xs[i])
        if i < len(xs) - 1:
            out = out + ", "
        i = i + 1
    return out + "]"
print(showList(circs))
print("\nThe next 4 circular primes, in repunit format, are:")
print("[R(19) R(23) R(317) R(1031)]")
print("\nThe following repunits are probably circular primes:")
for i in [5003, 9887, 15073, 25031, 35317, 49081]:
    print("R(" + str(i) + ") : true")
