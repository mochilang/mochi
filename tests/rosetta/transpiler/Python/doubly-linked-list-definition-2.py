# Code generated by Mochi transpiler.
# Version 0.10.41, generated on 2025-07-26 19:54 +0700
import sys
sys.set_int_max_str_digits(0)

def newList():
    return {"nodes": {}, "head": 0, "tail": 0, "nextID": 1}
def newNode(l, v):
    id = int(l.get("nextID"))
    l["nextID"] = id + 1
    nodes = l.get("nodes")
    n = {"id": id, "value": v, "next": 0, "prev": 0}
    nodes[id] = n
    l["nodes"] = nodes
    return n
def pushFront(l, v):
    n = newNode(l, v)
    n["next"] = l.get("head")
    if (int(l.get("head"))) != 0:
        nodes = l.get("nodes")
        h = nodes[int(l.get("head"))]
        h["prev"] = n.get("id")
        nodes[int(h.get("id"))] = h
        l["nodes"] = nodes
    else:
        l["tail"] = n.get("id")
    l["head"] = n.get("id")
    nodes2 = l.get("nodes")
    nodes2[int(n.get("id"))] = n
    l["nodes"] = nodes2
    return n
def pushBack(l, v):
    n = newNode(l, v)
    n["prev"] = l.get("tail")
    if (int(l.get("tail"))) != 0:
        nodes = l.get("nodes")
        t = nodes[int(l.get("tail"))]
        t["next"] = n.get("id")
        nodes[int(t.get("id"))] = t
        l["nodes"] = nodes
    else:
        l["head"] = n.get("id")
    l["tail"] = n.get("id")
    nodes2 = l.get("nodes")
    nodes2[int(n.get("id"))] = n
    l["nodes"] = nodes2
    return n
def insertBefore(l, refID, v):
    if refID == 0:
        return pushFront(l, v)
    nodes = l.get("nodes")
    ref = nodes[refID]
    n = newNode(l, v)
    n["prev"] = ref.get("prev")
    n["next"] = ref.get("id")
    if (int(ref.get("prev"))) != 0:
        p = nodes[int(ref.get("prev"))]
        p["next"] = n.get("id")
        nodes[int(p.get("id"))] = p
    else:
        l["head"] = n.get("id")
    ref["prev"] = n.get("id")
    nodes[refID] = ref
    nodes[int(n.get("id"))] = n
    l["nodes"] = nodes
    return n
def insertAfter(l, refID, v):
    if refID == 0:
        return pushBack(l, v)
    nodes = l.get("nodes")
    ref = nodes[refID]
    n = newNode(l, v)
    n["next"] = ref.get("next")
    n["prev"] = ref.get("id")
    if (int(ref.get("next"))) != 0:
        nx = nodes[int(ref.get("next"))]
        nx["prev"] = n.get("id")
        nodes[int(nx.get("id"))] = nx
    else:
        l["tail"] = n.get("id")
    ref["next"] = n.get("id")
    nodes[refID] = ref
    nodes[int(n.get("id"))] = n
    l["nodes"] = nodes
    return n
def main():
    l = newList()
    e4 = pushBack(l, 4)
    e1 = pushFront(l, 1)
    insertBefore(l, int(e4.get("id")), 3)
    insertAfter(l, int(e1.get("id")), "two")
    id = int(l.get("head"))
    nodes = l.get("nodes")
    while id != 0:
        node = nodes[id]
        print(str(node.get("value")))
        id = int(node.get("next"))
main()
