# Code generated by Mochi transpiler.
# Version 0.10.39, generated on 2025-07-24 09:22 +0000
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict

import sys
sys.set_int_max_str_digits(0)

width = 81
height = 5
lines = []
for i in range(0, height):
    row = ""
    j = 0
    while j < width:
        row = row + "*"
        j = j + 1
    lines = lines + [row]
def setChar(s, idx, ch):
    return "".join(s[0:idx]) + ch + "".join(s[idx + 1:len(s)])
@dataclass
class Stack:
    start: int
    len: int
    index: int

stack = [Stack(0, width, 1)]
while len(stack) > 0:
    frame = stack[len(stack) - 1]
    stack = stack[:len(stack) - 1]
    start = frame.start
    lenSeg = frame.len
    index = frame.index
    seg = int((lenSeg // 3))
    if seg == 0:
        continue
    i = index
    while i < height:
        j = start + seg
        while j < start + 2 * seg:
            lines[i] = setChar(lines[i], j, " ")
            j = j + 1
        i = i + 1
    stack = stack + [Stack(start, seg, index + 1)]
    stack = stack + [Stack(start + seg * 2, seg, index + 1)]
for line in lines:
    print(line)
