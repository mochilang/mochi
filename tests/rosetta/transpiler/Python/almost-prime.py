# Code generated by Mochi transpiler.
# Version 0.10.42, generated on 2025-07-28 10:14 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

def kPrime(n, k):
    nf = 0
    i = 2
    while i <= n:
        while n % i == 0:
            if nf == k:
                return False
            nf = nf + 1
            n = n // i
        i = i + 1
    return nf == k
def gen(k, count):
    r = []
    n = 2
    while len(r) < count:
        if kPrime(n, k):
            r = r + [n]
        n = n + 1
    return r
def main():
    _bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    _bench_start = _now()
    k = 1
    while k <= 5:
        print(str(k) + " " + str(gen(k, 10)))
        k = k + 1
    _bench_end = _now()
    _bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
    print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
main()
