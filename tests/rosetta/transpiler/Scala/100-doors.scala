// Generated by Mochi v0.10.40 on 2025-07-25 12:50:19 GMT+7
import scala.collection.mutable.{ArrayBuffer, Map}
object Main {
  var doors: ArrayBuffer[Any] = ArrayBuffer()
  
  def main(args: Array[String]): Unit = {
    for (i <- 0 until 100) {
      doors = doors :+ false
    }
    for (pass <- 1 until 101) {
      var idx = pass - 1
      while (idx.asInstanceOf[Int] < 100) {
        doors(idx) = !(doors(idx)).asInstanceOf[Boolean]
        idx = idx.asInstanceOf[Int] + pass.asInstanceOf[Int]
      }
    }
    for (row <- 0 until 10) {
      var line: String = ""
      for (col <- 0 until 10) {
        val idx: Int = (row * 10).asInstanceOf[Int] + col.asInstanceOf[Int]
        if ((doors(idx)).asInstanceOf[Boolean]) {
          line = line + "1"
        } else {
          line = line + "0"
        }
        if (col.asInstanceOf[Int] < 9) {
          line = line + " "
        }
      }
      println(line)
    }
  }
}
