// Generated by Mochi v0.10.57 on 2025-08-04 17:15:58 GMT+7
import scala.collection.mutable.{ArrayBuffer, Map}
import scala.math.BigInt
object Main {
  def main(): Any = {
    val row: BigInt = 3
    val col: BigInt = 4
    var a: ArrayBuffer[ArrayBuffer[BigInt]] = (ArrayBuffer()).asInstanceOf[ArrayBuffer[ArrayBuffer[BigInt]]]
    var i: BigInt = 0
    while (i < row) {
      var rowArr: ArrayBuffer[BigInt] = (ArrayBuffer()).asInstanceOf[ArrayBuffer[BigInt]]
      var j: BigInt = 0
      while (j < col) {
        rowArr = rowArr :+ BigInt(0)
        j = j + 1
      }
      a = a :+ rowArr
      i = i + 1
    }
    println("a[0][0] = " + String.valueOf(a((0.toInt).toInt)((0.toInt).toInt)))
    a((row - 1).toInt)((col - 1).toInt) = 7
    println("a[" + String.valueOf(row - 1) + "][" + String.valueOf(col - 1) + "] = " + String.valueOf(a((row - 1.toInt).toInt)((col - 1.toInt).toInt)))
    a = null.asInstanceOf[ArrayBuffer[ArrayBuffer[BigInt]]]
  }
  
  def main(args: Array[String]): Unit = {
    main()
  }
}
