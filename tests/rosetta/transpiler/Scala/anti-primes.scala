// Generated by Mochi v0.10.39 on 2025-07-25 00:26:26 GMT+7
import scala.collection.mutable.{ArrayBuffer, Map}
object Main {
  def countDivisors(n: Int): Int = {
    if (n < 2) {
      return 1
    }
    var count: Int = 2
    var i: Int = 2
    while (i <= (n / 2).asInstanceOf[Int]) {
      if (n % i == 0) {
        count = (count + 1).asInstanceOf[Int]
      }
      i = (i + 1).asInstanceOf[Int]
    }
    return count
  }
  
  def main() = {
    println("The first 20 anti-primes are:")
    var maxDiv: Int = 0
    var count: Int = 0
    var n: Int = 1
    var line: String = ""
    while (count < 20) {
      val d: Int = countDivisors(n)
      if (d > maxDiv) {
        line = line + String.valueOf(n) + " "
        maxDiv = d
        count = (count + 1).asInstanceOf[Int]
      }
      n = (n + 1).asInstanceOf[Int]
    }
    line = line.substring(0, (line).size - 1)
    println(line)
  }
  
  def main(args: Array[String]): Unit = {
    main()
  }
}
