// Generated by Mochi v0.10.39 on 2025-07-25 01:13:59 GMT+7
import scala.collection.mutable.{ArrayBuffer, Map}
object Main {
  def listStr(xs: ArrayBuffer[Int]): String = {
    var s: String = "["
    var i: Int = 0
    while (i < (xs).size) {
      s = (s + String.valueOf(xs(i))).asInstanceOf[String]
      if ((i + 1).asInstanceOf[Int] < (xs).size) {
        s = s + " "
      }
      i = (i + 1).asInstanceOf[Int]
    }
    s = s + "]"
    return s
  }
  
  var a: ArrayBuffer[Int] = ArrayBuffer(0, 0, 0, 0, 0)
  
  var s = a.slice(0, 4)
  
  var cap_s: Int = 5
  
  def main(args: Array[String]): Unit = {
    println("len(a) = " + String.valueOf((a).size))
    println("a = " + listStr(a))
    a(0) = 3
    println("a = " + listStr(a))
    println("a[0] = " + String.valueOf(a(0)))
    println("s = " + listStr(s.asInstanceOf[ArrayBuffer[Int]]))
    println("len(s) = " + String.valueOf((s).size) + "  cap(s) = " + String.valueOf(cap_s))
    s = a.slice(0, 5)
    println("s = " + listStr(s.asInstanceOf[ArrayBuffer[Int]]))
    a(0) = 22
    s.asInstanceOf[ArrayBuffer[Any]](0) = 22
    println("a = " + listStr(a))
    println("s = " + listStr(s.asInstanceOf[ArrayBuffer[Int]]))
    s = s :+ 4
    s = s :+ 5
    s = s :+ 6
    cap_s = 10
    println("s = " + listStr(s.asInstanceOf[ArrayBuffer[Int]]))
    println("len(s) = " + String.valueOf((s).size) + "  cap(s) = " + String.valueOf(cap_s))
    a(4) = 0 - 1
    println("a = " + listStr(a))
    println("s = " + listStr(s.asInstanceOf[ArrayBuffer[Int]]))
    s = ArrayBuffer()
    for (i <- 0 until 8) {
      s = s :+ 0
    }
    cap_s = 8
    println("s = " + listStr(s.asInstanceOf[ArrayBuffer[Int]]))
    println("len(s) = " + String.valueOf((s).size) + "  cap(s) = " + String.valueOf(cap_s))
  }
}
