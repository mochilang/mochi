// Generated by Mochi v0.10.57 on 2025-08-04 21:08:02 GMT+7
import scala.collection.mutable.{ArrayBuffer, Map}
import scala.math.BigInt
object Main {
  def rnd(): BigInt = {
    seed = (seed * 214013 + 2531011) % BigInt("2147483648")
    return seed / 65536
  }
  
  def deal(game: BigInt): ArrayBuffer[BigInt] = {
    seed = game
    var deck: ArrayBuffer[BigInt] = (ArrayBuffer()).asInstanceOf[ArrayBuffer[BigInt]]
    var i: BigInt = 0
    while (i < 52) {
      deck = deck :+ 51 - i
      i = i + 1
    }
    i = 0
    while (i < 51) {
      val j: BigInt = 51 - rnd() % (52 - i)
      val tmp: BigInt = deck((i.toInt).toInt)
      deck((i).toInt) = deck((j.toInt).toInt)
      deck((j).toInt) = tmp
      i = i + 1
    }
    return deck
  }
  
  def show(cards: ArrayBuffer[BigInt]): Any = {
    var i: BigInt = 0
    while (i < BigInt(((cards).size).toInt)) {
      val c: BigInt = cards((i.toInt).toInt)
      print(" " + nums.slice((c / 4).toInt, (c / 4 + 1).toInt) + suits.slice((c % 4).toInt, (c % 4 + 1).toInt))
      if (((i + 1) % 8 == 0 || i + 1 == (cards).size).asInstanceOf[Boolean]) {
        println("")
      }
      i = i + 1
    }
  }
  
  var seed: BigInt = 1
  
  val suits: String = "CDHS"
  
  val nums: String = "A23456789TJQK"
  
  def main(args: Array[String]): Unit = {
    println("")
    println("Game #1")
    show(deal(1))
    println("")
    println("Game #617")
    show(deal(617))
  }
}
