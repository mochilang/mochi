// Generated by Mochi v0.10.39 on 2025-07-24 20:09:06 GMT+7
import scala.collection.mutable.{ArrayBuffer, Map}
object Main {
  def search_user(directory: Map[String,ArrayBuffer[String]], username: String): ArrayBuffer[String] = {
    return directory(username)
  }
  
  def main() = {
    val client: Map[String,Any] = Map("Base" -> ("dc=example,dc=com"), "Host" -> ("ldap.example.com"), "Port" -> (389), "GroupFilter" -> ("(memberUid=%s)"))
    val directory: Map[String,ArrayBuffer[String]] = Map("username" -> (ArrayBuffer("admins", "users")), "john" -> (ArrayBuffer("users")))
    val groups: ArrayBuffer[String] = search_user(directory, "username")
    if ((groups).size > 0) {
      var out: String = "Groups: ["
      var i: Int = 0
      while (i < (groups).size) {
        out = out + "\"" + groups(i) + "\""
        if (i < (groups).size - 1) {
          out = out + ", "
        }
        i = (i + 1).asInstanceOf[Int]
      }
      out = out + "]"
      println(out)
    } else {
      println("User not found")
    }
  }
  
  def main(args: Array[String]): Unit = {
    main()
  }
}
