// Generated by Mochi v0.10.39 on 2025-07-25 01:15:47 GMT+7
import scala.collection.mutable.{ArrayBuffer, Map}
object Main {
  def removeKey(m: Map[String,Int], k: String): Map[String,Int] = {
    var out: Map[String,Int] = Map()
    for (key <- m.keys) {
      if (key != k) {
        out(key) = m.getOrElse(key, null.asInstanceOf[Int])
      }
    }
    return out
  }
  
  def main() = {
    var x: Map[String,Int] = null
    x = Map()
    x("foo") = 3
    val y1: Int = x.getOrElse("bar", null.asInstanceOf[Int])
    val ok = x.contains("bar")
    println(y1)
    println(ok)
    x = removeKey(x, "foo")
    x = Map("foo" -> (2), "bar" -> (42), "baz" -> (0 - 1))
    println(List(x.getOrElse("foo", null.asInstanceOf[Int]), x.getOrElse("bar", null.asInstanceOf[Int]), x.getOrElse("baz", null.asInstanceOf[Int])).mkString(" "))
  }
  
  def main(args: Array[String]): Unit = {
    main()
  }
}
