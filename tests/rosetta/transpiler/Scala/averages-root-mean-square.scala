// Generated by Mochi v0.10.39 on 2025-07-25 01:20:48 GMT+7
import scala.collection.mutable.{ArrayBuffer, Map}
object Main {
  def sqrtApprox(x: Double): Double = {
    var guess: Double = x
    var i: Int = 0
    while (i < 20) {
      guess = (guess + x / guess) / 2.0
      i = (i + 1).asInstanceOf[Int]
    }
    return guess
  }
  
  val n: Int = 10
  
  var sum: Double = 0.0
  
  var x: Int = 1
  
  val rms: Double = sqrtApprox(sum / n.toString.toDouble)
  
  def main(args: Array[String]): Unit = {
    while (x <= n) {
      sum = sum + x.toString.toDouble * x.toString.toDouble
      x = (x + 1).asInstanceOf[Int]
    }
    println(String.valueOf(rms))
  }
}
