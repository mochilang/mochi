// Generated by Mochi v0.10.52 on 2025-08-01 18:24:04 GMT+7
import scala.collection.mutable.{ArrayBuffer, Map}
import scala.math.BigInt
object Main {
  def absInt(n: BigInt): BigInt = {
    if (n < BigInt(0)) {
      return BigInt(0) - n
    }
    return n
  }
  
  def main(): Any = {
    var b: BigInt = BigInt(1)
    while (b <= BigInt(5)) {
      if (b != BigInt(5)) {
        var c: BigInt = BigInt(1)
        while (c <= BigInt(5)) {
          if ((c != BigInt(1) && c != b).asInstanceOf[Boolean]) {
            var f: BigInt = BigInt(1)
            while (f <= BigInt(5)) {
              if (((((f != BigInt(1) && f != BigInt(5)).asInstanceOf[Boolean] && f != b).asInstanceOf[Boolean] && f != c).asInstanceOf[Boolean] && absInt(f - c) > BigInt(1)).asInstanceOf[Boolean]) {
                var m: BigInt = BigInt(1)
                while (m <= BigInt(5)) {
                  if ((((m != b && m != c).asInstanceOf[Boolean] && m != f).asInstanceOf[Boolean] && m > c).asInstanceOf[Boolean]) {
                    var s: BigInt = BigInt(1)
                    while (s <= BigInt(5)) {
                      if (((((s != b && s != c).asInstanceOf[Boolean] && s != f).asInstanceOf[Boolean] && s != m).asInstanceOf[Boolean] && absInt(s - f) > BigInt(1)).asInstanceOf[Boolean]) {
                        println("Baker in " + String.valueOf(b) + ", Cooper in " + String.valueOf(c) + ", Fletcher in " + String.valueOf(f) + ", Miller in " + String.valueOf(m) + ", Smith in " + String.valueOf(s) + ".")
                        return
                      }
                      s = s + BigInt(1)
                    }
                  }
                  m = m + BigInt(1)
                }
              }
              f = f + BigInt(1)
            }
          }
          c = c + BigInt(1)
        }
      }
      b = b + BigInt(1)
    }
    println("No solution found.")
    return
  }
  
  def main(args: Array[String]): Unit = {
    main()
  }
}
