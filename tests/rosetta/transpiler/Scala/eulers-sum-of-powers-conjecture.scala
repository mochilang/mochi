// Generated by Mochi v0.10.56 on 2025-08-03 18:02:46 GMT+7
import scala.collection.mutable.{ArrayBuffer, Map}
import scala.math.BigInt
object Main {
  def eulerSum(): ArrayBuffer[BigInt] = {
    var pow5: ArrayBuffer[BigInt] = ArrayBuffer()
    var i: BigInt = BigInt(0)
    while (i < BigInt(250)) {
      pow5 = pow5 :+ i * i * i * i * i
      i = i + BigInt(1)
    }
    var sums: scala.collection.mutable.Map[BigInt,ArrayBuffer[BigInt]] = scala.collection.mutable.Map()
    var x2: BigInt = BigInt(2)
    while (x2 < BigInt(250)) {
      var x3: BigInt = BigInt(1)
      while (x3 < x2) {
        val s: BigInt = pow5((x2.toInt).toInt) + pow5((x3.toInt).toInt)
        if ((!(sums.contains(s)).asInstanceOf[Boolean]).asInstanceOf[Boolean]) {
          sums.update(s, ArrayBuffer(x2, x3))
        }
        x3 = x3 + BigInt(1)
      }
      x2 = x2 + BigInt(1)
    }
    var x0: BigInt = BigInt(4)
    while (x0 < BigInt(250)) {
      var x1: BigInt = BigInt(3)
      while (x1 < x0) {
        var y: BigInt = x0 + BigInt(1)
        while (y < BigInt(250)) {
          val rem: BigInt = pow5((y.toInt).toInt) - pow5((x0.toInt).toInt) - pow5((x1.toInt).toInt)
          if ((sums.contains(rem)).asInstanceOf[Boolean]) {
            val pair: ArrayBuffer[BigInt] = sums.getOrElse(rem, ArrayBuffer()).asInstanceOf[ArrayBuffer[BigInt]]
            val a: BigInt = pair((BigInt(0).toInt).toInt)
            val b: BigInt = pair((BigInt(1).toInt).toInt)
            if ((x1 > a && a > b).asInstanceOf[Boolean]) {
              return (ArrayBuffer(x0, x1, a, b, y)).asInstanceOf[ArrayBuffer[BigInt]]
            }
          }
          y = y + BigInt(1)
        }
        x1 = x1 + BigInt(1)
      }
      x0 = x0 + BigInt(1)
    }
    return ArrayBuffer(BigInt(0), BigInt(0), BigInt(0), BigInt(0), BigInt(0))
  }
  
  def main(): Any = {
    val r: ArrayBuffer[BigInt] = eulerSum()
    println(String.valueOf(r((BigInt(0).toInt).toInt)) + " " + String.valueOf(r((BigInt(1).toInt).toInt)) + " " + String.valueOf(r((BigInt(2).toInt).toInt)) + " " + String.valueOf(r((BigInt(3).toInt).toInt)) + " " + String.valueOf(r((BigInt(4).toInt).toInt)))
  }
  
  def main(args: Array[String]): Unit = {
    main()
  }
}
