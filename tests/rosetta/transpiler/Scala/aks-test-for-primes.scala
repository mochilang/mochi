// Generated by Mochi v0.10.39 on 2025-07-24 21:13:49 GMT+7
import scala.collection.mutable.{ArrayBuffer, Map}
object Main {
  def poly(p: Int): String = {
    var s: String = ""
    var coef: Int = 1
    var i: Int = p
    if (coef != 1) {
      s = (s + String.valueOf(coef)).asInstanceOf[String]
    }
    while (i > 0) {
      s = s + "x"
      if (i != 1) {
        s = s + "^" + String.valueOf(i)
      }
      coef = ((coef * i).toString.toDouble / (p - i + 1).toString.toDouble).asInstanceOf[Int]
      var d: Int = coef
      if ((p - i - 1) % 2 == 1) {
        d = (0 - d).asInstanceOf[Int]
      }
      if (d < 0) {
        s = s + " - " + String.valueOf(0 - d)
      } else {
        s = s + " + " + String.valueOf(d)
      }
      i = (i - 1).asInstanceOf[Int]
    }
    if (s == "") {
      s = "1"
    }
    return s
  }
  
  def aks(n: Int): Boolean = {
    if (n < 2) {
      return false
    }
    var c: Int = n
    var i: Int = 1
    while (i < n) {
      if (c % n != 0) {
        return false
      }
      c = ((c * (n - i)).toString.toDouble / (i + 1).toString.toDouble).asInstanceOf[Int]
      i = (i + 1).asInstanceOf[Int]
    }
    return true
  }
  
  def main() = {
    var p: Int = 0
    while (p <= 7) {
      println(String.valueOf(p) + ":  " + poly(p))
      p = (p + 1).asInstanceOf[Int]
    }
    var first: Boolean = true
    p = 2
    var line: String = ""
    while (p < 50) {
      if (aks(p)) {
        if (first) {
          line = (line + String.valueOf(p)).asInstanceOf[String]
          first = false
        } else {
          line = line + " " + String.valueOf(p)
        }
      }
      p = (p + 1).asInstanceOf[Int]
    }
    println(line)
  }
  
  def main(args: Array[String]): Unit = {
    main()
  }
}
