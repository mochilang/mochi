// Generated by Mochi v0.10.39 on 2025-07-25 01:17:28 GMT+7
import scala.collection.mutable.{ArrayBuffer, Map}
object Main {
  def merge(base: Map[String,Any], update: Map[String,Any]): Map[String,Any] = {
    var result: Map[String,Any] = Map()
    for (k <- base.keys) {
      result(k) = base.getOrElse(k, null.asInstanceOf[Any])
    }
    for (k <- update.keys) {
      result(k) = update.getOrElse(k, null.asInstanceOf[Any])
    }
    return result
  }
  
  def main() = {
    val base: Map[String,Any] = Map("name" -> ("Rocket Skates"), "price" -> (12.75), "color" -> ("yellow"))
    val update: Map[String,Any] = Map("price" -> (15.25), "color" -> ("red"), "year" -> (1974))
    val result: Map[String,Any] = merge(base, update)
    println(result)
  }
  
  def main(args: Array[String]): Unit = {
    main()
  }
}
