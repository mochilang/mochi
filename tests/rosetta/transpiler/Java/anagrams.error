compile: exit status 1
/tmp/TestJavaTranspiler_Rosetta_Goldenanagrams2834149005/001/Main.java:15: error: bad operand types for binary operator '>'
                if (arr[j] > arr[j + 1]) {
                           ^
  first type:  String
  second type: String
/tmp/TestJavaTranspiler_Rosetta_Goldenanagrams2834149005/001/Main.java:68: error: incompatible types: String cannot be converted to int
groups.put(k, new int[]{w});
                        ^
/tmp/TestJavaTranspiler_Rosetta_Goldenanagrams2834149005/001/Main.java:70: error: no suitable method found for stream(Object)
groups.put(k, java.util.stream.Stream.concat(java.util.Arrays.stream((Object)(groups.get(k))), java.util.stream.Stream.of(w)).toArray(String[]::new));
                                                             ^
    method Arrays.<T#1>stream(T#1[]) is not applicable
      (cannot infer type-variable(s) T#1
        (argument mismatch; Object cannot be converted to T#1[]))
    method Arrays.<T#2>stream(T#2[],int,int) is not applicable
      (cannot infer type-variable(s) T#2
        (actual and formal argument lists differ in length))
    method Arrays.stream(int[]) is not applicable
      (argument mismatch; Object cannot be converted to int[])
    method Arrays.stream(long[]) is not applicable
      (argument mismatch; Object cannot be converted to long[])
    method Arrays.stream(double[]) is not applicable
      (argument mismatch; Object cannot be converted to double[])
  where T#1,T#2 are type-variables:
    T#1 extends Object declared in method <T#1>stream(T#1[])
    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)
/tmp/TestJavaTranspiler_Rosetta_Goldenanagrams2834149005/001/Main.java:72: error: cannot find symbol
            if ((Object)(groups.get(k)).length() > maxLen) {
                                       ^
  symbol:   method length()
  location: class Object
/tmp/TestJavaTranspiler_Rosetta_Goldenanagrams2834149005/001/Main.java:72: error: bad operand types for binary operator '>'
            if ((Object)(groups.get(k)).length() > maxLen) {
                                                 ^
  first type:  Object
  second type: int
/tmp/TestJavaTranspiler_Rosetta_Goldenanagrams2834149005/001/Main.java:73: error: cannot find symbol
                maxLen = (Object)(groups.get(k)).length();
                                                ^
  symbol:   method length()
  location: class Object
/tmp/TestJavaTranspiler_Rosetta_Goldenanagrams2834149005/001/Main.java:73: error: incompatible types: Object cannot be converted to int
                maxLen = (Object)(groups.get(k)).length();
                         ^
/tmp/TestJavaTranspiler_Rosetta_Goldenanagrams2834149005/001/Main.java:76: error: incompatible types: LinkedHashMap<String,Object> cannot be converted to Map<String,Boolean>
        java.util.Map<String,Boolean> printed = new java.util.LinkedHashMap<String, Object>();
                                                ^
/tmp/TestJavaTranspiler_Rosetta_Goldenanagrams2834149005/001/Main.java:79: error: cannot find symbol
            if ((Object)(groups.get(k)).length() == maxLen) {
                                       ^
  symbol:   method length()
  location: class Object
/tmp/TestJavaTranspiler_Rosetta_Goldenanagrams2834149005/001/Main.java:79: error: bad operand types for binary operator '=='
            if ((Object)(groups.get(k)).length() == maxLen) {
                                                 ^
  first type:  Object
  second type: int
/tmp/TestJavaTranspiler_Rosetta_Goldenanagrams2834149005/001/Main.java:81: error: incompatible types: Object cannot be converted to String[]
                    String[] g = sortStrings((Object)(groups.get(k)));
                                             ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
11 errors
