warning: unnecessary trailing semicolon
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:87:2
   |
87 | };
   |  ^ help: remove this semicolon
   |
   = note: `#[warn(redundant_semicolons)]` on by default

warning: unnecessary trailing semicolon
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:138:2
    |
138 | };
    |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:158:2
    |
158 | };
    |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:165:2
    |
165 | };
    |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:181:2
    |
181 | };
    |  ^ help: remove this semicolon

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:79:17
   |
79 |     let mut i = ((h.len() as i64) - 1);
   |                 ^                    ^
   |
   = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
   |
79 -     let mut i = ((h.len() as i64) - 1);
79 +     let mut i = (h.len() as i64) - 1;
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:80:11
   |
80 |     while ((i > 0) && (h[(i - 1) as usize].clone()["s"] > h[i as usize].clone()["s"])) {
   |           ^                                                                          ^
   |
help: remove these parentheses
   |
80 -     while ((i > 0) && (h[(i - 1) as usize].clone()["s"] > h[i as usize].clone()["s"])) {
80 +     while (i > 0) && (h[(i - 1) as usize].clone()["s"] > h[i as usize].clone()["s"]) {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:84:13
   |
84 |         i = (i - 1);
   |             ^     ^
   |
help: remove these parentheses
   |
84 -         i = (i - 1);
84 +         i = i - 1;
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:89:11
   |
89 |     while (((h.len() as i64) == 0) || ((nv * nv) <= h[0 as usize].clone()["s"])) {
   |           ^                                                                    ^
   |
help: remove these parentheses
   |
89 -     while (((h.len() as i64) == 0) || ((nv * nv) <= h[0 as usize].clone()["s"])) {
89 +     while ((h.len() as i64) == 0) || ((nv * nv) <= h[0 as usize].clone()["s"]) {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:91:14
   |
91 |         nv = (nv + 1);
   |              ^      ^
   |
help: remove these parentheses
   |
91 -         nv = (nv + 1);
91 +         nv = nv + 1;
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:95:11
   |
95 |     while (((h.len() as i64) > 0) && (h[0 as usize].clone()["s"] == s)) {
   |           ^                                                           ^
   |
help: remove these parentheses
   |
95 -     while (((h.len() as i64) > 0) && (h[0 as usize].clone()["s"] == s)) {
95 +     while ((h.len() as i64) > 0) && (h[0 as usize].clone()["s"] == s) {
   |

warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:99:12
   |
99 |         if (it.get("a").cloned().unwrap_or_default() > it.get("b").cloned().unwrap_or_default()) {
   |            ^                                                                                   ^
   |
help: remove these parentheses
   |
99 -         if (it.get("a").cloned().unwrap_or_default() > it.get("b").cloned().unwrap_or_default()) {
99 +         if it.get("a").cloned().unwrap_or_default() > it.get("b").cloned().unwrap_or_default() {
   |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:109:12
    |
109 |         if (p[0 as usize] != p[1 as usize]) {
    |            ^                              ^
    |
help: remove these parentheses
    |
109 -         if (p[0 as usize] != p[1 as usize]) {
109 +         if p[0 as usize] != p[1 as usize] {
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:115:12
    |
115 |         if (p[1 as usize] != 0) {
    |            ^                  ^
    |
help: remove these parentheses
    |
115 -         if (p[1 as usize] != 0) {
115 +         if p[1 as usize] != 0 {
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:121:12
    |
121 |         if (p[0 as usize] != 0) {
    |            ^                  ^
    |
help: remove these parentheses
    |
121 -         if (p[0 as usize] != 0) {
121 +         if p[0 as usize] != 0 {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:128:30
    |
128 |         let mut cross: i64 = ((p[0 as usize] * dir[1 as usize]) - (p[1 as usize] * dir[0 as usize]));
    |                              ^                                                                     ^
    |
help: remove these parentheses
    |
128 -         let mut cross: i64 = ((p[0 as usize] * dir[1 as usize]) - (p[1 as usize] * dir[0 as usize]));
128 +         let mut cross: i64 = (p[0 as usize] * dir[1 as usize]) - (p[1 as usize] * dir[0 as usize]);
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:129:12
    |
129 |         if (cross >= 0) {
    |            ^          ^
    |
help: remove these parentheses
    |
129 -         if (cross >= 0) {
129 +         if cross >= 0 {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:130:32
    |
130 |             let mut dot: i64 = ((p[0 as usize] * dir[0 as usize]) + (p[1 as usize] * dir[1 as usize]));
    |                                ^                                                                     ^
    |
help: remove these parentheses
    |
130 -             let mut dot: i64 = ((p[0 as usize] * dir[0 as usize]) + (p[1 as usize] * dir[1 as usize]));
130 +             let mut dot: i64 = (p[0 as usize] * dir[0 as usize]) + (p[1 as usize] * dir[1 as usize]);
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:131:16
    |
131 |             if (dot > bestDot) {
    |                ^             ^
    |
help: remove these parentheses
    |
131 -             if (dot > bestDot) {
131 +             if dot > bestDot {
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:147:11
    |
147 |     while (i < n) {
    |           ^     ^
    |
help: remove these parentheses
    |
147 -     while (i < n) {
147 +     while i < n {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:153:13
    |
153 |         x = (x + dir[0 as usize]);
    |             ^                   ^
    |
help: remove these parentheses
    |
153 -         x = (x + dir[0 as usize]);
153 +         x = x + dir[0 as usize];
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:154:13
    |
154 |         y = (y + dir[1 as usize]);
    |             ^                   ^
    |
help: remove these parentheses
    |
154 -         y = (y + dir[1 as usize]);
154 +         y = y + dir[1 as usize];
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:155:13
    |
155 |         i = (i + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
155 -         i = (i + 1);
155 +         i = i + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:161:11
    |
161 |     while ((r.len() as i64) < w) {
    |           ^                    ^
    |
help: remove these parentheses
    |
161 -     while ((r.len() as i64) < w) {
161 +     while (r.len() as i64) < w {
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:171:11
    |
171 |     while (i < (pts.len() as i64)) {
    |           ^                      ^
    |
help: remove these parentheses
    |
171 -     while (i < (pts.len() as i64)) {
171 +     while i < (pts.len() as i64) {
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:175:12
    |
175 |         if (((i + 1) % 10) == 0) {
    |            ^                   ^
    |
help: remove these parentheses
    |
175 -         if (((i + 1) % 10) == 0) {
175 +         if ((i + 1) % 10) == 0 {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:179:13
    |
179 |         i = (i + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
179 -         i = (i + 1);
179 +         i = i + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:185:28
    |
185 |     let duration_us: i64 = ((_end - _start) / 1000);
    |                            ^                      ^
    |
help: remove these parentheses
    |
185 -     let duration_us: i64 = ((_end - _start) / 1000);
185 +     let duration_us: i64 = (_end - _start) / 1000;
    |

error[E0308]: mismatched types
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:90:29
   |
90 |         h = push(h.clone(), Map {s: (nv * nv), a: nv, b: 0});
   |             ----            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `HashMap<String, i64>`, found `Map`
   |             |
   |             arguments to this function are incorrect
   |
   = note: expected struct `HashMap<String, i64>`
              found struct `Map`
note: function defined here
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:77:8
   |
77 |     fn push(mut h: Vec<HashMap<String, i64>>, mut it: HashMap<String, i64>) -> Vec<HashMap<String, i64>> {
   |        ^^^^                                   ----------------------------

error[E0308]: mismatched types
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:151:34
    |
151 |         let mut heap: Vec<i64> = st.heap;
    |                       --------   ^^^^^^^ expected `Vec<i64>`, found `Vec<HashMap<String, i64>>`
    |                       |
    |                       expected due to this
    |
    = note: expected struct `Vec<i64>`
               found struct `Vec<HashMap<String, i64>>`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:77:47
   |
77 |     fn push(mut h: Vec<HashMap<String, i64>>, mut it: HashMap<String, i64>) -> Vec<HashMap<String, i64>> {
   |                                               ----^^
   |                                               |
   |                                               help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:81:13
   |
81 |         let mut tmp: HashMap<String, i64> = h[(i - 1) as usize].clone();
   |             ----^^^
   |             |
   |             help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:159:21
    |
159 |     fn pad(s: &str, mut w: i64) -> String {
    |                     ----^
    |                     |
    |                     help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:167:9
    |
167 |     let mut pts: Vec<Vec<i64>> = positions(40);
    |         ----^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:172:13
    |
172 |         let mut p: Vec<i64> = pts[i as usize].clone();
    |             ----^
    |             |
    |             help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/babylonian-spiral.rs:173:13
    |
173 | ...   let mut s: String = pad(&format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", "(", p[0 as usize].to_string()), ", "), p[...
    |           ----^
    |           |
    |           help: remove this `mut`

error: aborting due to 2 previous errors; 34 warnings emitted

For more information about this error, try `rustc --explain E0308`.
