// Generated by Mochi transpiler v0.10.54 on 2025-08-02 11:34 +0700
fn primeFactors(mut n: i64) -> Vec<i64> {
    let mut factors: Vec<i64> = vec![];
    let mut last: i64 = 0;
    let mut x: i64 = n;
    while ((x % 2) == 0) {
        if (last == 2) {
            return vec![]
        }
        factors = { let mut _v = factors.clone(); _v.push(2); _v };
        last = 2;
        x = (x / 2);
    }
    let mut p: i64 = 3;
    while ((p * p) <= x) {
        while ((x % p) == 0) {
            if (last == p) {
                return vec![]
            }
            factors = { let mut _v = factors.clone(); _v.push(p); _v };
            last = p;
            x = (x / p);
        }
        p = (p + 2);
    }
    if (x > 1) {
        if (last == x) {
            return vec![]
        }
        factors = { let mut _v = factors.clone(); _v.push(x); _v };
    }
    return factors
}

fn isGiuga(mut n: i64) -> bool {
    let mut facs: Vec<i64> = primeFactors(n);
    if ((facs.len() as i64) <= 2) {
        return false
    }
    for f in facs.clone() {
        if ((((n / f) - 1) % f) != 0) {
            return false
        }
    }
    return true
}

fn mochi_main() {
    let mut known: Vec<i64> = vec![30, 858, 1722, 66198];
    let mut nums: Vec<i64> = vec![];
    for n in known.clone() {
        if isGiuga(n) {
            nums = { let mut _v = nums.clone(); _v.push(n); _v };
        }
    }
    println!("{}", "The first 4 Giuga numbers are:");
    println!("{:?}", nums);
}

fn main() {
    mochi_main();
}
