warning: unnecessary trailing semicolon
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/anagrams-deranged-anagrams.rs:69:2
   |
69 | };
   |  ^ help: remove this semicolon
   |
   = note: `#[warn(redundant_semicolons)]` on by default

warning: unnecessary trailing semicolon
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/anagrams-deranged-anagrams.rs:82:2
   |
82 | };
   |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/anagrams-deranged-anagrams.rs:109:2
    |
109 | };
    |  ^ help: remove this semicolon

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/anagrams-deranged-anagrams.rs:44:11
   |
44 |     while (i < (s.len() as i64)) {
   |           ^                    ^
   |
   = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
   |
44 -     while (i < (s.len() as i64)) {
44 +     while i < (s.len() as i64) {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/anagrams-deranged-anagrams.rs:46:13
   |
46 |         i = (i + 1);
   |             ^     ^
   |
help: remove these parentheses
   |
46 -         i = (i + 1);
46 +         i = i + 1;
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/anagrams-deranged-anagrams.rs:48:17
   |
48 |     let mut n = (arr.len() as i64);
   |                 ^                ^
   |
help: remove these parentheses
   |
48 -     let mut n = (arr.len() as i64);
48 +     let mut n = arr.len() as i64;
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/anagrams-deranged-anagrams.rs:50:11
   |
50 |     while (m < n) {
   |           ^     ^
   |
help: remove these parentheses
   |
50 -     while (m < n) {
50 +     while m < n {
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/anagrams-deranged-anagrams.rs:52:15
   |
52 |         while (j < (n - 1)) {
   |               ^           ^
   |
help: remove these parentheses
   |
52 -         while (j < (n - 1)) {
52 +         while j < (n - 1) {
   |

warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/anagrams-deranged-anagrams.rs:53:16
   |
53 |             if (arr[j as usize].clone().as_str() > arr[(j + 1) as usize].clone()) {
   |                ^                                                                ^
   |
help: remove these parentheses
   |
53 -             if (arr[j as usize].clone().as_str() > arr[(j + 1) as usize].clone()) {
53 +             if arr[j as usize].clone().as_str() > arr[(j + 1) as usize].clone() {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/anagrams-deranged-anagrams.rs:58:17
   |
58 |             j = (j + 1);
   |                 ^     ^
   |
help: remove these parentheses
   |
58 -             j = (j + 1);
58 +             j = j + 1;
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/anagrams-deranged-anagrams.rs:60:13
   |
60 |         m = (m + 1);
   |             ^     ^
   |
help: remove these parentheses
   |
60 -         m = (m + 1);
60 +         m = m + 1;
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/anagrams-deranged-anagrams.rs:64:11
   |
64 |     while (i < n) {
   |           ^     ^
   |
help: remove these parentheses
   |
64 -     while (i < n) {
64 +     while i < n {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/anagrams-deranged-anagrams.rs:66:13
   |
66 |         i = (i + 1);
   |             ^     ^
   |
help: remove these parentheses
   |
66 -         i = (i + 1);
66 +         i = i + 1;
   |

warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/anagrams-deranged-anagrams.rs:71:8
   |
71 |     if ((a.len() as i64) != (b.len() as i64)) {
   |        ^                                    ^
   |
help: remove these parentheses
   |
71 -     if ((a.len() as i64) != (b.len() as i64)) {
71 +     if (a.len() as i64) != (b.len() as i64) {
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/anagrams-deranged-anagrams.rs:75:11
   |
75 |     while (i < (a.len() as i64)) {
   |           ^                    ^
   |
help: remove these parentheses
   |
75 -     while (i < (a.len() as i64)) {
75 +     while i < (a.len() as i64) {
   |

warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/anagrams-deranged-anagrams.rs:76:12
   |
76 |         if (a[i as usize..(i + 1) as usize].to_string().as_str() == b[i as usize..(i + 1) as usize].to_string()) {
   |            ^                                                                                                   ^
   |
help: remove these parentheses
   |
76 -         if (a[i as usize..(i + 1) as usize].to_string().as_str() == b[i as usize..(i + 1) as usize].to_string()) {
76 +         if a[i as usize..(i + 1) as usize].to_string().as_str() == b[i as usize..(i + 1) as usize].to_string() {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/anagrams-deranged-anagrams.rs:79:13
   |
79 |         i = (i + 1);
   |             ^     ^
   |
help: remove these parentheses
   |
79 -         i = (i + 1);
79 +         i = i + 1;
   |

warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/anagrams-deranged-anagrams.rs:90:12
   |
90 |         if ((w.len() as i64) <= bestLen) {
   |            ^                           ^
   |
help: remove these parentheses
   |
90 -         if ((w.len() as i64) <= bestLen) {
90 +         if (w.len() as i64) <= bestLen {
   |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/anagrams-deranged-anagrams.rs:100:27
    |
100 |                 bestLen = (w.len() as i64);
    |                           ^              ^
    |
help: remove these parentheses
    |
100 -                 bestLen = (w.len() as i64);
100 +                 bestLen = w.len() as i64;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/anagrams-deranged-anagrams.rs:113:28
    |
113 |     let duration_us: i64 = ((_end - _start) / 1000);
    |                            ^                      ^
    |
help: remove these parentheses
    |
113 -     let duration_us: i64 = ((_end - _start) / 1000);
113 +     let duration_us: i64 = (_end - _start) / 1000;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/anagrams-deranged-anagrams.rs:114:29
    |
114 |     let memory_bytes: i64 = (_end_mem - _start_mem);
    |                             ^                     ^
    |
help: remove these parentheses
    |
114 -     let memory_bytes: i64 = (_end_mem - _start_mem);
114 +     let memory_bytes: i64 = _end_mem - _start_mem;
    |

error[E0308]: mismatched types
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/anagrams-deranged-anagrams.rs:53:52
   |
53 |             if (arr[j as usize].clone().as_str() > arr[(j + 1) as usize].clone()) {
   |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&str`, found `String`
   |
help: consider dereferencing the borrow
   |
53 |             if (*arr[j as usize].clone().as_str() > arr[(j + 1) as usize].clone()) {
   |                 +

error[E0308]: mismatched types
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/anagrams-deranged-anagrams.rs:95:38
   |
95 |             m.insert(k.clone(), vec![w]);
   |                                      ^- help: try using a conversion method: `.to_string()`
   |                                      |
   |                                      expected `String`, found `&String`

error[E0308]: mismatched types
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/anagrams-deranged-anagrams.rs:101:22
    |
87  |     let mut w1 = String::from("");
    |                  ---------------- expected due to this value
...
101 |                 w1 = c;
    |                      ^- help: try using a conversion method: `.to_string()`
    |                      |
    |                      expected `String`, found `&String`

error[E0308]: mismatched types
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/anagrams-deranged-anagrams.rs:102:22
    |
88  |     let mut w2 = String::from("");
    |                  ---------------- expected due to this value
...
102 |                 w2 = w;
    |                      ^- help: try using a conversion method: `.to_string()`
    |                      |
    |                      expected `String`, found `&String`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/anagrams-deranged-anagrams.rs:70:17
   |
70 |     fn deranged(mut a: String, mut b: String) -> bool {
   |                 ----^
   |                 |
   |                 help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/anagrams-deranged-anagrams.rs:70:32
   |
70 |     fn deranged(mut a: String, mut b: String) -> bool {
   |                                ----^
   |                                |
   |                                help: remove this `mut`

error: aborting due to 4 previous errors; 23 warnings emitted

For more information about this error, try `rustc --explain E0308`.
