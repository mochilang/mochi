warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:42:11
   |
42 |     while (i < (s.len() as i64)) {
   |           ^                    ^
   |
   = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
   |
42 -     while (i < (s.len() as i64)) {
42 +     while i < (s.len() as i64) {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:44:13
   |
44 |         i = (i + 1);
   |             ^     ^
   |
help: remove these parentheses
   |
44 -         i = (i + 1);
44 +         i = i + 1;
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:46:17
   |
46 |     let mut j = ((arr.len() as i64) - 1);
   |                 ^                      ^
   |
help: remove these parentheses
   |
46 -     let mut j = ((arr.len() as i64) - 1);
46 +     let mut j = (arr.len() as i64) - 1;
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:47:11
   |
47 |     while (j > 0) {
   |           ^     ^
   |
help: remove these parentheses
   |
47 -     while (j > 0) {
47 +     while j > 0 {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:48:17
   |
48 |         let k = (_now() % (j + 1));
   |                 ^                ^
   |
help: remove these parentheses
   |
48 -         let k = (_now() % (j + 1));
48 +         let k = _now() % (j + 1);
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:52:13
   |
52 |         j = (j - 1);
   |             ^     ^
   |
help: remove these parentheses
   |
52 -         j = (j - 1);
52 +         j = j - 1;
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:56:11
   |
56 |     while (i < (arr.len() as i64)) {
   |           ^                      ^
   |
help: remove these parentheses
   |
56 -     while (i < (arr.len() as i64)) {
56 +     while i < (arr.len() as i64) {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:58:13
   |
58 |         i = (i + 1);
   |             ^     ^
   |
help: remove these parentheses
   |
58 -         i = (i + 1);
58 +         i = i + 1;
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:67:11
   |
67 |     while (li < (g_adfgvx.len() as i64)) {
   |           ^                            ^
   |
help: remove these parentheses
   |
67 -     while (li < (g_adfgvx.len() as i64)) {
67 +     while li < (g_adfgvx.len() as i64) {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:69:14
   |
69 |         li = (li + 1);
   |              ^      ^
   |
help: remove these parentheses
   |
69 -         li = (li + 1);
69 +         li = li + 1;
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:76:11
   |
76 |     while (i < 6) {
   |           ^     ^
   |
help: remove these parentheses
   |
76 -     while (i < 6) {
76 +     while i < 6 {
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:81:15
   |
81 |         while (j < 6) {
   |               ^     ^
   |
help: remove these parentheses
   |
81 -         while (j < 6) {
81 +         while j < 6 {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:83:17
   |
83 |             j = (j + 1);
   |                 ^     ^
   |
help: remove these parentheses
   |
83 -             j = (j + 1);
83 +             j = j + 1;
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:86:13
   |
86 |         i = (i + 1);
   |             ^     ^
   |
help: remove these parentheses
   |
86 -         i = (i + 1);
86 +         i = i + 1;
   |

warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:92:8
   |
92 |     if ((n < 7) || (n > 12)) {
   |        ^                   ^
   |
help: remove these parentheses
   |
92 -     if ((n < 7) || (n > 12)) {
92 +     if (n < 7) || (n > 12) {
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:98:11
   |
98 |     while (i < n) {
   |           ^     ^
   |
help: remove these parentheses
   |
98 -     while (i < n) {
98 +     while i < n {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:99:19
   |
99 |         let idx = (_now() % (pool.len() as i64));
   |                   ^                            ^
   |
help: remove these parentheses
   |
99 -         let idx = (_now() % (pool.len() as i64));
99 +         let idx = _now() % (pool.len() as i64);
   |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:102:13
    |
102 |         i = (i + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
102 -         i = (i + 1);
102 +         i = i + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:111:11
    |
111 |     while (i < (key.len() as i64)) {
    |           ^                      ^
    |
help: remove these parentheses
    |
111 -     while (i < (key.len() as i64)) {
111 +     while i < (key.len() as i64) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:113:13
    |
113 |         i = (i + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
113 -         i = (i + 1);
113 +         i = i + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:115:17
    |
115 |     let mut n = (pairs.len() as i64);
    |                 ^                  ^
    |
help: remove these parentheses
    |
115 -     let mut n = (pairs.len() as i64);
115 +     let mut n = pairs.len() as i64;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:117:11
    |
117 |     while (m < n) {
    |           ^     ^
    |
help: remove these parentheses
    |
117 -     while (m < n) {
117 +     while m < n {
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:119:15
    |
119 |         while (j < (n - 1)) {
    |               ^           ^
    |
help: remove these parentheses
    |
119 -         while (j < (n - 1)) {
119 +         while j < (n - 1) {
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:120:16
    |
120 |             if (pairs[j as usize].clone()[0 as usize].clone().as_str() > pairs[(j + 1) as usize].clone()[0 as usize].clone()) {
    |                ^                                                                                                            ^
    |
help: remove these parentheses
    |
120 -             if (pairs[j as usize].clone()[0 as usize].clone().as_str() > pairs[(j + 1) as usize].clone()[0 as usize].clone()) {
120 +             if pairs[j as usize].clone()[0 as usize].clone().as_str() > pairs[(j + 1) as usize].clone()[0 as usize].clone() {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:125:17
    |
125 |             j = (j + 1);
    |                 ^     ^
    |
help: remove these parentheses
    |
125 -             j = (j + 1);
125 +             j = j + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:127:13
    |
127 |         m = (m + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
127 -         m = (m + 1);
127 +         m = m + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:131:11
    |
131 |     while (i < n) {
    |           ^     ^
    |
help: remove these parentheses
    |
131 -     while (i < n) {
131 +     while i < n {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:133:13
    |
133 |         i = (i + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
133 -         i = (i + 1);
133 +         i = i + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:141:11
    |
141 |     while (li < (g_adfgvx.len() as i64)) {
    |           ^                            ^
    |
help: remove these parentheses
    |
141 -     while (li < (g_adfgvx.len() as i64)) {
141 +     while li < (g_adfgvx.len() as i64) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:143:14
    |
143 |         li = (li + 1);
    |              ^      ^
    |
help: remove these parentheses
    |
143 -         li = (li + 1);
143 +         li = li + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:147:11
    |
147 |     while (i < (plainText.len() as i64)) {
    |           ^                            ^
    |
help: remove these parentheses
    |
147 -     while (i < (plainText.len() as i64)) {
147 +     while i < (plainText.len() as i64) {
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:149:15
    |
149 |         while (r < 6) {
    |               ^     ^
    |
help: remove these parentheses
    |
149 -         while (r < 6) {
149 +         while r < 6 {
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:151:19
    |
151 |             while (c < 6) {
    |                   ^     ^
    |
help: remove these parentheses
    |
151 -             while (c < 6) {
151 +             while c < 6 {
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:152:20
    |
152 | ...if (polybius[r as usize].clone()[c as usize..(c + 1) as usize].to_string().as_str() == plainText[i as usize..(i + 1) as usize].to_string()) {
    |       ^                                                                                                                                      ^
    |
help: remove these parentheses
    |
152 -                 if (polybius[r as usize].clone()[c as usize..(c + 1) as usize].to_string().as_str() == plainText[i as usize..(i + 1) as usize].to_string()) {
152 +                 if polybius[r as usize].clone()[c as usize..(c + 1) as usize].to_string().as_str() == plainText[i as usize..(i + 1) as usize].to_string() {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:155:21
    |
155 |                 c = (c + 1);
    |                     ^     ^
    |
help: remove these parentheses
    |
155 -                 c = (c + 1);
155 +                 c = c + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:157:17
    |
157 |             r = (r + 1);
    |                 ^     ^
    |
help: remove these parentheses
    |
157 -             r = (r + 1);
157 +             r = r + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:159:13
    |
159 |         i = (i + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
159 -         i = (i + 1);
159 +         i = i + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:161:22
    |
161 |     let mut colLen = ((temp.len() as i64) / (key.len() as i64));
    |                      ^                                        ^
    |
help: remove these parentheses
    |
161 -     let mut colLen = ((temp.len() as i64) / (key.len() as i64));
161 +     let mut colLen = (temp.len() as i64) / (key.len() as i64);
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:162:8
    |
162 |     if (((temp.len() as i64) % (key.len() as i64)) > 0) {
    |        ^                                              ^
    |
help: remove these parentheses
    |
162 -     if (((temp.len() as i64) % (key.len() as i64)) > 0) {
162 +     if ((temp.len() as i64) % (key.len() as i64)) > 0 {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:163:18
    |
163 |         colLen = (colLen + 1);
    |                  ^          ^
    |
help: remove these parentheses
    |
163 -         colLen = (colLen + 1);
163 +         colLen = colLen + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:167:11
    |
167 |     while (rIdx < colLen) {
    |           ^             ^
    |
help: remove these parentheses
    |
167 -     while (rIdx < colLen) {
167 +     while rIdx < colLen {
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:170:15
    |
170 |         while (j < (key.len() as i64)) {
    |               ^                      ^
    |
help: remove these parentheses
    |
170 -         while (j < (key.len() as i64)) {
170 +         while j < (key.len() as i64) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:172:17
    |
172 |             j = (j + 1);
    |                 ^     ^
    |
help: remove these parentheses
    |
172 -             j = (j + 1);
172 +             j = j + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:175:16
    |
175 |         rIdx = (rIdx + 1);
    |                ^        ^
    |
help: remove these parentheses
    |
175 -         rIdx = (rIdx + 1);
175 +         rIdx = rIdx + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:178:11
    |
178 |     while (idx < (temp.len() as i64)) {
    |           ^                         ^
    |
help: remove these parentheses
    |
178 -     while (idx < (temp.len() as i64)) {
178 +     while idx < (temp.len() as i64) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:179:24
    |
179 |         let row: i64 = (idx / (key.len() as i64));
    |                        ^                        ^
    |
help: remove these parentheses
    |
179 -         let row: i64 = (idx / (key.len() as i64));
179 +         let row: i64 = idx / (key.len() as i64);
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:180:24
    |
180 |         let col: i64 = (idx % (key.len() as i64));
    |                        ^                        ^
    |
help: remove these parentheses
    |
180 -         let col: i64 = (idx % (key.len() as i64));
180 +         let col: i64 = idx % (key.len() as i64);
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:182:15
    |
182 |         idx = (idx + 1);
    |               ^       ^
    |
help: remove these parentheses
    |
182 -         idx = (idx + 1);
182 +         idx = idx + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:187:11
    |
187 |     while (ci < (key.len() as i64)) {
    |           ^                       ^
    |
help: remove these parentheses
    |
187 -     while (ci < (key.len() as i64)) {
187 +     while ci < (key.len() as i64) {
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:190:15
    |
190 |         while (ri < colLen) {
    |               ^           ^
    |
help: remove these parentheses
    |
190 -         while (ri < colLen) {
190 +         while ri < colLen {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:192:18
    |
192 |             ri = (ri + 1);
    |                  ^      ^
    |
help: remove these parentheses
    |
192 -             ri = (ri + 1);
192 +             ri = ri + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:195:14
    |
195 |         ci = (ci + 1);
    |              ^      ^
    |
help: remove these parentheses
    |
195 -         ci = (ci + 1);
195 +         ci = ci + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:199:11
    |
199 |     while (ci < (cols.len() as i64)) {
    |           ^                        ^
    |
help: remove these parentheses
    |
199 -     while (ci < (cols.len() as i64)) {
199 +     while ci < (cols.len() as i64) {
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:201:12
    |
201 |         if (ci < ((cols.len() as i64) - 1)) {
    |            ^                              ^
    |
help: remove these parentheses
    |
201 -         if (ci < ((cols.len() as i64) - 1)) {
201 +         if ci < ((cols.len() as i64) - 1) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:204:14
    |
204 |         ci = (ci + 1);
    |              ^      ^
    |
help: remove these parentheses
    |
204 -         ci = (ci + 1);
204 +         ci = ci + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:211:11
    |
211 |     while (i < (s.len() as i64)) {
    |           ^                    ^
    |
help: remove these parentheses
    |
211 -     while (i < (s.len() as i64)) {
211 +     while i < (s.len() as i64) {
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:212:12
    |
212 |         if (s[i as usize..(i + 1) as usize].to_string().as_str() == ch) {
    |            ^                                                          ^
    |
help: remove these parentheses
    |
212 -         if (s[i as usize..(i + 1) as usize].to_string().as_str() == ch) {
212 +         if s[i as usize..(i + 1) as usize].to_string().as_str() == ch {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:215:13
    |
215 |         i = (i + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
215 -         i = (i + 1);
215 +         i = i + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:224:11
    |
224 |     while (i <= (cipherText.len() as i64)) {
    |           ^                              ^
    |
help: remove these parentheses
    |
224 -     while (i <= (cipherText.len() as i64)) {
224 +     while i <= (cipherText.len() as i64) {
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:225:12
    |
225 |         if ((i == (cipherText.len() as i64)) || (cipherText.chars().nth(i as usize).unwrap() == " ")) {
    |            ^                                                                                        ^
    |
help: remove these parentheses
    |
225 -         if ((i == (cipherText.len() as i64)) || (cipherText.chars().nth(i as usize).unwrap() == " ")) {
225 +         if (i == (cipherText.len() as i64)) || (cipherText.chars().nth(i as usize).unwrap() == " ") {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:227:21
    |
227 |             start = (i + 1);
    |                     ^     ^
    |
help: remove these parentheses
    |
227 -             start = (i + 1);
227 +             start = i + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:229:13
    |
229 |         i = (i + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
229 -         i = (i + 1);
229 +         i = i + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:233:11
    |
233 |     while (i < (colStrs.len() as i64)) {
    |           ^                          ^
    |
help: remove these parentheses
    |
233 -     while (i < (colStrs.len() as i64)) {
233 +     while i < (colStrs.len() as i64) {
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:234:12
    |
234 |         if ((colStrs[i as usize].clone().len() as i64) > maxColLen) {
    |            ^                                                      ^
    |
help: remove these parentheses
    |
234 -         if ((colStrs[i as usize].clone().len() as i64) > maxColLen) {
234 +         if (colStrs[i as usize].clone().len() as i64) > maxColLen {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:235:25
    |
235 |             maxColLen = (colStrs[i as usize].clone().len() as i64);
    |                         ^                                        ^
    |
help: remove these parentheses
    |
235 -             maxColLen = (colStrs[i as usize].clone().len() as i64);
235 +             maxColLen = colStrs[i as usize].clone().len() as i64;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:237:13
    |
237 |         i = (i + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
237 -         i = (i + 1);
237 +         i = i + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:241:11
    |
241 |     while (i < (colStrs.len() as i64)) {
    |           ^                          ^
    |
help: remove these parentheses
    |
241 -     while (i < (colStrs.len() as i64)) {
241 +     while i < (colStrs.len() as i64) {
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:245:15
    |
245 |         while (j < (s.len() as i64)) {
    |               ^                    ^
    |
help: remove these parentheses
    |
245 -         while (j < (s.len() as i64)) {
245 +         while j < (s.len() as i64) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:247:17
    |
247 |             j = (j + 1);
    |                 ^     ^
    |
help: remove these parentheses
    |
247 -             j = (j + 1);
247 +             j = j + 1;
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:249:12
    |
249 |         if ((s.len() as i64) < maxColLen) {
    |            ^                            ^
    |
help: remove these parentheses
    |
249 -         if ((s.len() as i64) < maxColLen) {
249 +         if (s.len() as i64) < maxColLen {
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:252:19
    |
252 |             while (k < maxColLen) {
    |                   ^             ^
    |
help: remove these parentheses
    |
252 -             while (k < maxColLen) {
252 +             while k < maxColLen {
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:253:20
    |
253 |                 if (k < (ls.len() as i64)) {
    |                    ^                     ^
    |
help: remove these parentheses
    |
253 -                 if (k < (ls.len() as i64)) {
253 +                 if k < (ls.len() as i64) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:258:21
    |
258 |                 k = (k + 1);
    |                     ^     ^
    |
help: remove these parentheses
    |
258 -                 k = (k + 1);
258 +                 k = k + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:264:13
    |
264 |         i = (i + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
264 -         i = (i + 1);
264 +         i = i + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:268:11
    |
268 |     while (r < maxColLen) {
    |           ^             ^
    |
help: remove these parentheses
    |
268 -     while (r < maxColLen) {
268 +     while r < maxColLen {
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:271:15
    |
271 |         while (c < (key.len() as i64)) {
    |               ^                      ^
    |
help: remove these parentheses
    |
271 -         while (c < (key.len() as i64)) {
271 +         while c < (key.len() as i64) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:273:17
    |
273 |             c = (c + 1);
    |                 ^     ^
    |
help: remove these parentheses
    |
273 -             c = (c + 1);
273 +             c = c + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:276:13
    |
276 |         r = (r + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
276 -         r = (r + 1);
276 +         r = r + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:280:11
    |
280 |     while (r < maxColLen) {
    |           ^             ^
    |
help: remove these parentheses
    |
280 -     while (r < maxColLen) {
280 +     while r < maxColLen {
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:282:15
    |
282 |         while (c < (key.len() as i64)) {
    |               ^                      ^
    |
help: remove these parentheses
    |
282 -         while (c < (key.len() as i64)) {
282 +         while c < (key.len() as i64) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:284:17
    |
284 |             c = (c + 1);
    |                 ^     ^
    |
help: remove these parentheses
    |
284 -             c = (c + 1);
284 +             c = c + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:286:13
    |
286 |         r = (r + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
286 -         r = (r + 1);
286 +         r = r + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:290:11
    |
290 |     while (r < (table.len() as i64)) {
    |           ^                        ^
    |
help: remove these parentheses
    |
290 -     while (r < (table.len() as i64)) {
290 +     while r < (table.len() as i64) {
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:292:15
    |
292 |         while (j < (table[r as usize].clone().len() as i64)) {
    |               ^                                            ^
    |
help: remove these parentheses
    |
292 -         while (j < (table[r as usize].clone().len() as i64)) {
292 +         while j < (table[r as usize].clone().len() as i64) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:294:17
    |
294 |             j = (j + 1);
    |                 ^     ^
    |
help: remove these parentheses
    |
294 -             j = (j + 1);
294 +             j = j + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:296:13
    |
296 |         r = (r + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
296 -         r = (r + 1);
296 +         r = r + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:300:11
    |
300 |     while (idx < (temp.len() as i64)) {
    |           ^                         ^
    |
help: remove these parentheses
    |
300 -     while (idx < (temp.len() as i64)) {
300 +     while idx < (temp.len() as i64) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:304:15
    |
304 |         idx = (idx + 2);
    |               ^       ^
    |
help: remove these parentheses
    |
304 -         idx = (idx + 2);
304 +         idx = idx + 2;
    |

error[E0308]: mismatched types
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:112:105
    |
112 |         pairs = { let mut v = pairs.clone(); v.push(vec![key[i as usize..(i + 1) as usize].to_string(), i]); v };
    |                                                                                                         ^- help: try using a conversion method: `.to_string()`
    |                                                                                                         |
    |                                                                                                         expected `String`, found `i64`

error[E0308]: mismatched types
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:135:12
    |
108 | unsafe fn orderKey(mut key: String) -> Vec<i64> {
    |                                        -------- expected `Vec<i64>` because of return type
...
132 |         res = { let mut v = res.clone(); v.push(String::from(pairs[i as usize].clone()[1 as usize].clone())); v };
    |         --- here the type of `res` is inferred to be `Vec<String>`
...
135 |     return res
    |            ^^^ expected `Vec<i64>`, found `Vec<String>`
    |
    = note: expected struct `Vec<i64>`
               found struct `Vec<String>`

error[E0277]: `Vec<String>` doesn't implement `std::fmt::Display`
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:153:66
    |
153 | ..."{}{}", temp, labels[r as usize..(r + 1) as usize].to_vec()), labels[c as usize..(c + 1) as usize].to_vec());
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `Vec<String>` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `Vec<String>`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `Vec<String>` doesn't implement `std::fmt::Display`
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:153:114
    |
153 | ...e].to_vec()), labels[c as usize..(c + 1) as usize].to_vec());
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `Vec<String>` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `Vec<String>`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:225:97
    |
225 |         if ((i == (cipherText.len() as i64)) || (cipherText.chars().nth(i as usize).unwrap() == " ")) {
    |                                                  -------------------------------------------    ^^^ expected `char`, found `&str`
    |                                                  |
    |                                                  expected because this is `char`
    |
help: if you meant to write a `char` literal, use single quotes
    |
225 -         if ((i == (cipherText.len() as i64)) || (cipherText.chars().nth(i as usize).unwrap() == " ")) {
225 +         if ((i == (cipherText.len() as i64)) || (cipherText.chars().nth(i as usize).unwrap() == ' ')) {
    |

error[E0277]: the type `str` cannot be indexed by `i64`
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:303:80
    |
303 |         plainText = format!("{}{}", plainText, polybius[rIdx as usize].clone()[cIdx]);
    |                                                                                ^^^^ string indices are ranges of `usize`
    |
    = help: the trait `SliceIndex<str>` is not implemented for `i64`
    = help: the trait `SliceIndex<[T]>` is implemented for `usize`
    = note: required for `String` to implement `Index<i64>`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:39:22
   |
39 | unsafe fn shuffleStr(mut s: String) -> String {
   |                      ----^
   |                      |
   |                      help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:77:13
   |
77 |         let mut row: String = shuffled[(i * 6) as usize..((i + 1) * 6) as usize].to_string().clone();
   |             ----^^^
   |             |
   |             help: remove this `mut`

error[E0507]: cannot move out of static item `g_alphabet`
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:64:39
   |
64 |     let shuffled: String = shuffleStr(g_alphabet).clone();
   |                                       ^^^^^^^^^^ move occurs because `g_alphabet` has type `String`, which does not implement the `Copy` trait
   |
help: consider cloning the value if the performance cost is acceptable
   |
64 |     let shuffled: String = shuffleStr(g_alphabet.clone()).clone();
   |                                                 ++++++++

error[E0382]: borrow of moved value: `row`
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:82:58
   |
77 |         let mut row: String = shuffled[(i * 6) as usize..((i + 1) * 6) as usize].to_string().clone();
   |             ------- move occurs because `row` has type `String`, which does not implement the `Copy` trait
78 |         p = { let mut v = p.clone(); v.push(String::from(row)); v };
   |                                                          --- value moved here
...
82 |             line = format!("{}{}", format!("{}{}", line, row[j as usize..(j + 1) as usize].to_string()), " ");
   |                                                          ^^^ value borrowed here after move
   |
help: consider cloning the value if the performance cost is acceptable
   |
78 |         p = { let mut v = p.clone(); v.push(String::from(row.clone())); v };
   |                                                             ++++++++

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:91:21
   |
91 | unsafe fn createKey(mut n: i64) -> String {
   |                     ----^
   |                     |
   |                     help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:209:19
    |
209 | unsafe fn indexOf(mut s: String, mut ch: String) -> i64 {
    |                   ----^
    |                   |
    |                   help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:209:34
    |
209 | unsafe fn indexOf(mut s: String, mut ch: String) -> i64 {
    |                                  ----^^
    |                                  |
    |                                  help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:311:9
    |
311 |     let mut polybius: Vec<String> = createPolybius();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

error[E0382]: use of moved value: `key`
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:316:56
    |
312 |     let key: String = createKey(9).clone();
    |         --- move occurs because `key` has type `String`, which does not implement the `Copy` trait
313 |     println!("{}", format!("{}{}", "\nPlaintext : ", plainText));
314 |     let cipherText: String = encrypt(polybius.clone(), key, plainText).clone();
    |                                                        --- value moved here
315 |     println!("{}", format!("{}{}", "\nEncrypted : ", cipherText));
316 |     let plainText2: String = decrypt(polybius.clone(), key, cipherText).clone();
    |                                                        ^^^ value used here after move
    |
note: consider changing this parameter type in function `encrypt` to borrow instead if owning the value isn't necessary
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:138:55
    |
138 | unsafe fn encrypt(mut polybius: Vec<String>, mut key: String, mut plainText: String) -> String {
    |           ------- in this function                    ^^^^^^ this parameter takes ownership of the value
help: consider cloning the value if the performance cost is acceptable
    |
314 |     let cipherText: String = encrypt(polybius.clone(), key.clone(), plainText).clone();
    |                                                           ++++++++

warning: unnecessary `unsafe` block
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:324:9
    |
321 |     unsafe {
    |     ------ because it's nested under this `unsafe` block
...
324 |         unsafe { mochi_main(); }
    |         ^^^^^^ unnecessary `unsafe` block
    |
    = note: `#[warn(unused_unsafe)]` on by default

error: aborting due to 9 previous errors; 95 warnings emitted

Some errors have detailed explanations: E0277, E0308, E0382, E0507.
For more information about an error, try `rustc --explain E0277`.
