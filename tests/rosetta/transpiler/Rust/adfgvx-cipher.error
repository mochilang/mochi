warning: unnecessary trailing semicolon
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:45:53
   |
45 |         static mut g_adfgvx: String = String::new();;
   |                                                     ^ help: remove this semicolon
   |
   = note: `#[warn(redundant_semicolons)]` on by default

warning: unnecessary trailing semicolon
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:46:55
   |
46 |         static mut g_alphabet: String = String::new();;
   |                                                       ^ help: remove this semicolon

warning: unnecessary trailing semicolon
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:69:2
   |
69 | };
   |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:96:2
   |
96 | };
   |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:112:2
    |
112 | };
    |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:141:2
    |
141 | };
    |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:211:2
    |
211 | };
    |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:221:2
    |
221 | };
    |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:309:2
    |
309 | };
    |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:319:2
    |
319 | };
    |  ^ help: remove this semicolon

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:50:11
   |
50 |     while (i < (s.len() as i64)) {
   |           ^                    ^
   |
   = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
   |
50 -     while (i < (s.len() as i64)) {
50 +     while i < (s.len() as i64) {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:52:13
   |
52 |         i = (i + 1);
   |             ^     ^
   |
help: remove these parentheses
   |
52 -         i = (i + 1);
52 +         i = i + 1;
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:54:17
   |
54 |     let mut j = ((arr.len() as i64) - 1);
   |                 ^                      ^
   |
help: remove these parentheses
   |
54 -     let mut j = ((arr.len() as i64) - 1);
54 +     let mut j = (arr.len() as i64) - 1;
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:55:11
   |
55 |     while (j > 0) {
   |           ^     ^
   |
help: remove these parentheses
   |
55 -     while (j > 0) {
55 +     while j > 0 {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:56:21
   |
56 |         let mut k = (_now() % (j + 1));
   |                     ^                ^
   |
help: remove these parentheses
   |
56 -         let mut k = (_now() % (j + 1));
56 +         let mut k = _now() % (j + 1);
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:60:13
   |
60 |         j = (j - 1);
   |             ^     ^
   |
help: remove these parentheses
   |
60 -         j = (j - 1);
60 +         j = j - 1;
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:64:11
   |
64 |     while (i < (arr.len() as i64)) {
   |           ^                      ^
   |
help: remove these parentheses
   |
64 -     while (i < (arr.len() as i64)) {
64 +     while i < (arr.len() as i64) {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:66:13
   |
66 |         i = (i + 1);
   |             ^     ^
   |
help: remove these parentheses
   |
66 -         i = (i + 1);
66 +         i = i + 1;
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:74:11
   |
74 |     while (li < (g_adfgvx.len() as i64)) {
   |           ^                            ^
   |
help: remove these parentheses
   |
74 -     while (li < (g_adfgvx.len() as i64)) {
74 +     while li < (g_adfgvx.len() as i64) {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:76:14
   |
76 |         li = (li + 1);
   |              ^      ^
   |
help: remove these parentheses
   |
76 -         li = (li + 1);
76 +         li = li + 1;
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:83:11
   |
83 |     while (i < 6) {
   |           ^     ^
   |
help: remove these parentheses
   |
83 -     while (i < 6) {
83 +     while i < 6 {
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:88:15
   |
88 |         while (j < 6) {
   |               ^     ^
   |
help: remove these parentheses
   |
88 -         while (j < 6) {
88 +         while j < 6 {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:90:17
   |
90 |             j = (j + 1);
   |                 ^     ^
   |
help: remove these parentheses
   |
90 -             j = (j + 1);
90 +             j = j + 1;
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:93:13
   |
93 |         i = (i + 1);
   |             ^     ^
   |
help: remove these parentheses
   |
93 -         i = (i + 1);
93 +         i = i + 1;
   |

warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:98:8
   |
98 |     if ((n < 7) || (n > 12)) {
   |        ^                   ^
   |
help: remove these parentheses
   |
98 -     if ((n < 7) || (n > 12)) {
98 +     if (n < 7) || (n > 12) {
   |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:104:11
    |
104 |     while (i < n) {
    |           ^     ^
    |
help: remove these parentheses
    |
104 -     while (i < n) {
104 +     while i < n {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:105:23
    |
105 |         let mut idx = (_now() % (pool.len() as i64));
    |                       ^                            ^
    |
help: remove these parentheses
    |
105 -         let mut idx = (_now() % (pool.len() as i64));
105 +         let mut idx = _now() % (pool.len() as i64);
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:108:13
    |
108 |         i = (i + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
108 -         i = (i + 1);
108 +         i = i + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:116:11
    |
116 |     while (i < (key.len() as i64)) {
    |           ^                      ^
    |
help: remove these parentheses
    |
116 -     while (i < (key.len() as i64)) {
116 +     while i < (key.len() as i64) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:118:13
    |
118 |         i = (i + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
118 -         i = (i + 1);
118 +         i = i + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:120:17
    |
120 |     let mut n = (pairs.len() as i64);
    |                 ^                  ^
    |
help: remove these parentheses
    |
120 -     let mut n = (pairs.len() as i64);
120 +     let mut n = pairs.len() as i64;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:122:11
    |
122 |     while (m < n) {
    |           ^     ^
    |
help: remove these parentheses
    |
122 -     while (m < n) {
122 +     while m < n {
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:124:15
    |
124 |         while (j < (n - 1)) {
    |               ^           ^
    |
help: remove these parentheses
    |
124 -         while (j < (n - 1)) {
124 +         while j < (n - 1) {
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:125:16
    |
125 |             if (pairs[j as usize].clone()[0 as usize].clone().as_str() > pairs[(j + 1) as usize].clone()[0 as usize].clone().as_str()) {
    |                ^                                                                                                                     ^
    |
help: remove these parentheses
    |
125 -             if (pairs[j as usize].clone()[0 as usize].clone().as_str() > pairs[(j + 1) as usize].clone()[0 as usize].clone().as_str()) {
125 +             if pairs[j as usize].clone()[0 as usize].clone().as_str() > pairs[(j + 1) as usize].clone()[0 as usize].clone().as_str() {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:130:17
    |
130 |             j = (j + 1);
    |                 ^     ^
    |
help: remove these parentheses
    |
130 -             j = (j + 1);
130 +             j = j + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:132:13
    |
132 |         m = (m + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
132 -         m = (m + 1);
132 +         m = m + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:136:11
    |
136 |     while (i < n) {
    |           ^     ^
    |
help: remove these parentheses
    |
136 -     while (i < n) {
136 +     while i < n {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:138:13
    |
138 |         i = (i + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
138 -         i = (i + 1);
138 +         i = i + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:145:11
    |
145 |     while (li < (g_adfgvx.len() as i64)) {
    |           ^                            ^
    |
help: remove these parentheses
    |
145 -     while (li < (g_adfgvx.len() as i64)) {
145 +     while li < (g_adfgvx.len() as i64) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:147:14
    |
147 |         li = (li + 1);
    |              ^      ^
    |
help: remove these parentheses
    |
147 -         li = (li + 1);
147 +         li = li + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:151:11
    |
151 |     while (i < (plainText.len() as i64)) {
    |           ^                            ^
    |
help: remove these parentheses
    |
151 -     while (i < (plainText.len() as i64)) {
151 +     while i < (plainText.len() as i64) {
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:153:15
    |
153 |         while (r < 6) {
    |               ^     ^
    |
help: remove these parentheses
    |
153 -         while (r < 6) {
153 +         while r < 6 {
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:155:19
    |
155 |             while (c < 6) {
    |                   ^     ^
    |
help: remove these parentheses
    |
155 -             while (c < 6) {
155 +             while c < 6 {
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:156:20
    |
156 | ...if (polybius[r as usize].clone()[c as usize..(c + 1) as usize].to_string().as_str() == plainText[i as usize..(i + 1) as usize].to_string().as_str()) {
    |       ^                                                                                                                                               ^
    |
help: remove these parentheses
    |
156 -                 if (polybius[r as usize].clone()[c as usize..(c + 1) as usize].to_string().as_str() == plainText[i as usize..(i + 1) as usize].to_string().as_str()) {
156 +                 if polybius[r as usize].clone()[c as usize..(c + 1) as usize].to_string().as_str() == plainText[i as usize..(i + 1) as usize].to_string().as_str() {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:159:21
    |
159 |                 c = (c + 1);
    |                     ^     ^
    |
help: remove these parentheses
    |
159 -                 c = (c + 1);
159 +                 c = c + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:161:17
    |
161 |             r = (r + 1);
    |                 ^     ^
    |
help: remove these parentheses
    |
161 -             r = (r + 1);
161 +             r = r + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:163:13
    |
163 |         i = (i + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
163 -         i = (i + 1);
163 +         i = i + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:165:22
    |
165 |     let mut colLen = ((temp.len() as i64) / (key.len() as i64));
    |                      ^                                        ^
    |
help: remove these parentheses
    |
165 -     let mut colLen = ((temp.len() as i64) / (key.len() as i64));
165 +     let mut colLen = (temp.len() as i64) / (key.len() as i64);
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:166:8
    |
166 |     if (((temp.len() as i64) % (key.len() as i64)) > 0) {
    |        ^                                              ^
    |
help: remove these parentheses
    |
166 -     if (((temp.len() as i64) % (key.len() as i64)) > 0) {
166 +     if ((temp.len() as i64) % (key.len() as i64)) > 0 {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:167:18
    |
167 |         colLen = (colLen + 1);
    |                  ^          ^
    |
help: remove these parentheses
    |
167 -         colLen = (colLen + 1);
167 +         colLen = colLen + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:171:11
    |
171 |     while (rIdx < colLen) {
    |           ^             ^
    |
help: remove these parentheses
    |
171 -     while (rIdx < colLen) {
171 +     while rIdx < colLen {
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:174:15
    |
174 |         while (j < (key.len() as i64)) {
    |               ^                      ^
    |
help: remove these parentheses
    |
174 -         while (j < (key.len() as i64)) {
174 +         while j < (key.len() as i64) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:176:17
    |
176 |             j = (j + 1);
    |                 ^     ^
    |
help: remove these parentheses
    |
176 -             j = (j + 1);
176 +             j = j + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:179:16
    |
179 |         rIdx = (rIdx + 1);
    |                ^        ^
    |
help: remove these parentheses
    |
179 -         rIdx = (rIdx + 1);
179 +         rIdx = rIdx + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:182:11
    |
182 |     while (idx < (temp.len() as i64)) {
    |           ^                         ^
    |
help: remove these parentheses
    |
182 -     while (idx < (temp.len() as i64)) {
182 +     while idx < (temp.len() as i64) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:183:28
    |
183 |         let mut row: i64 = (idx / (key.len() as i64));
    |                            ^                        ^
    |
help: remove these parentheses
    |
183 -         let mut row: i64 = (idx / (key.len() as i64));
183 +         let mut row: i64 = idx / (key.len() as i64);
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:184:28
    |
184 |         let mut col: i64 = (idx % (key.len() as i64));
    |                            ^                        ^
    |
help: remove these parentheses
    |
184 -         let mut col: i64 = (idx % (key.len() as i64));
184 +         let mut col: i64 = idx % (key.len() as i64);
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:186:15
    |
186 |         idx = (idx + 1);
    |               ^       ^
    |
help: remove these parentheses
    |
186 -         idx = (idx + 1);
186 +         idx = idx + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:191:11
    |
191 |     while (ci < (key.len() as i64)) {
    |           ^                       ^
    |
help: remove these parentheses
    |
191 -     while (ci < (key.len() as i64)) {
191 +     while ci < (key.len() as i64) {
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:194:15
    |
194 |         while (ri < colLen) {
    |               ^           ^
    |
help: remove these parentheses
    |
194 -         while (ri < colLen) {
194 +         while ri < colLen {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:196:18
    |
196 |             ri = (ri + 1);
    |                  ^      ^
    |
help: remove these parentheses
    |
196 -             ri = (ri + 1);
196 +             ri = ri + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:199:14
    |
199 |         ci = (ci + 1);
    |              ^      ^
    |
help: remove these parentheses
    |
199 -         ci = (ci + 1);
199 +         ci = ci + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:203:11
    |
203 |     while (ci < (cols.len() as i64)) {
    |           ^                        ^
    |
help: remove these parentheses
    |
203 -     while (ci < (cols.len() as i64)) {
203 +     while ci < (cols.len() as i64) {
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:205:12
    |
205 |         if (ci < ((cols.len() as i64) - 1)) {
    |            ^                              ^
    |
help: remove these parentheses
    |
205 -         if (ci < ((cols.len() as i64) - 1)) {
205 +         if ci < ((cols.len() as i64) - 1) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:208:14
    |
208 |         ci = (ci + 1);
    |              ^      ^
    |
help: remove these parentheses
    |
208 -         ci = (ci + 1);
208 +         ci = ci + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:214:11
    |
214 |     while (i < (s.len() as i64)) {
    |           ^                    ^
    |
help: remove these parentheses
    |
214 -     while (i < (s.len() as i64)) {
214 +     while i < (s.len() as i64) {
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:215:12
    |
215 |         if (s[i as usize..(i + 1) as usize].to_string() == ch) {
    |            ^                                                 ^
    |
help: remove these parentheses
    |
215 -         if (s[i as usize..(i + 1) as usize].to_string() == ch) {
215 +         if s[i as usize..(i + 1) as usize].to_string() == ch {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:218:13
    |
218 |         i = (i + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
218 -         i = (i + 1);
218 +         i = i + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:226:11
    |
226 |     while (i <= (cipherText.len() as i64)) {
    |           ^                              ^
    |
help: remove these parentheses
    |
226 -     while (i <= (cipherText.len() as i64)) {
226 +     while i <= (cipherText.len() as i64) {
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:227:12
    |
227 |         if ((i == (cipherText.len() as i64)) || (cipherText.chars().nth(i as usize).unwrap() == " ")) {
    |            ^                                                                                        ^
    |
help: remove these parentheses
    |
227 -         if ((i == (cipherText.len() as i64)) || (cipherText.chars().nth(i as usize).unwrap() == " ")) {
227 +         if (i == (cipherText.len() as i64)) || (cipherText.chars().nth(i as usize).unwrap() == " ") {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:229:21
    |
229 |             start = (i + 1);
    |                     ^     ^
    |
help: remove these parentheses
    |
229 -             start = (i + 1);
229 +             start = i + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:231:13
    |
231 |         i = (i + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
231 -         i = (i + 1);
231 +         i = i + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:235:11
    |
235 |     while (i < (colStrs.len() as i64)) {
    |           ^                          ^
    |
help: remove these parentheses
    |
235 -     while (i < (colStrs.len() as i64)) {
235 +     while i < (colStrs.len() as i64) {
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:236:12
    |
236 |         if ((colStrs[i as usize].clone().len() as i64) > maxColLen) {
    |            ^                                                      ^
    |
help: remove these parentheses
    |
236 -         if ((colStrs[i as usize].clone().len() as i64) > maxColLen) {
236 +         if (colStrs[i as usize].clone().len() as i64) > maxColLen {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:237:25
    |
237 |             maxColLen = (colStrs[i as usize].clone().len() as i64);
    |                         ^                                        ^
    |
help: remove these parentheses
    |
237 -             maxColLen = (colStrs[i as usize].clone().len() as i64);
237 +             maxColLen = colStrs[i as usize].clone().len() as i64;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:239:13
    |
239 |         i = (i + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
239 -         i = (i + 1);
239 +         i = i + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:243:11
    |
243 |     while (i < (colStrs.len() as i64)) {
    |           ^                          ^
    |
help: remove these parentheses
    |
243 -     while (i < (colStrs.len() as i64)) {
243 +     while i < (colStrs.len() as i64) {
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:247:15
    |
247 |         while (j < (s.len() as i64)) {
    |               ^                    ^
    |
help: remove these parentheses
    |
247 -         while (j < (s.len() as i64)) {
247 +         while j < (s.len() as i64) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:249:17
    |
249 |             j = (j + 1);
    |                 ^     ^
    |
help: remove these parentheses
    |
249 -             j = (j + 1);
249 +             j = j + 1;
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:251:12
    |
251 |         if ((s.len() as i64) < maxColLen) {
    |            ^                            ^
    |
help: remove these parentheses
    |
251 -         if ((s.len() as i64) < maxColLen) {
251 +         if (s.len() as i64) < maxColLen {
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:254:19
    |
254 |             while (k < maxColLen) {
    |                   ^             ^
    |
help: remove these parentheses
    |
254 -             while (k < maxColLen) {
254 +             while k < maxColLen {
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:255:20
    |
255 |                 if (k < (ls.len() as i64)) {
    |                    ^                     ^
    |
help: remove these parentheses
    |
255 -                 if (k < (ls.len() as i64)) {
255 +                 if k < (ls.len() as i64) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:260:21
    |
260 |                 k = (k + 1);
    |                     ^     ^
    |
help: remove these parentheses
    |
260 -                 k = (k + 1);
260 +                 k = k + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:266:13
    |
266 |         i = (i + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
266 -         i = (i + 1);
266 +         i = i + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:270:11
    |
270 |     while (r < maxColLen) {
    |           ^             ^
    |
help: remove these parentheses
    |
270 -     while (r < maxColLen) {
270 +     while r < maxColLen {
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:273:15
    |
273 |         while (c < (key.len() as i64)) {
    |               ^                      ^
    |
help: remove these parentheses
    |
273 -         while (c < (key.len() as i64)) {
273 +         while c < (key.len() as i64) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:275:17
    |
275 |             c = (c + 1);
    |                 ^     ^
    |
help: remove these parentheses
    |
275 -             c = (c + 1);
275 +             c = c + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:278:13
    |
278 |         r = (r + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
278 -         r = (r + 1);
278 +         r = r + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:282:11
    |
282 |     while (r < maxColLen) {
    |           ^             ^
    |
help: remove these parentheses
    |
282 -     while (r < maxColLen) {
282 +     while r < maxColLen {
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:284:15
    |
284 |         while (c < (key.len() as i64)) {
    |               ^                      ^
    |
help: remove these parentheses
    |
284 -         while (c < (key.len() as i64)) {
284 +         while c < (key.len() as i64) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:286:17
    |
286 |             c = (c + 1);
    |                 ^     ^
    |
help: remove these parentheses
    |
286 -             c = (c + 1);
286 +             c = c + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:288:13
    |
288 |         r = (r + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
288 -         r = (r + 1);
288 +         r = r + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:292:11
    |
292 |     while (r < (table.len() as i64)) {
    |           ^                        ^
    |
help: remove these parentheses
    |
292 -     while (r < (table.len() as i64)) {
292 +     while r < (table.len() as i64) {
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:294:15
    |
294 |         while (j < (table[r as usize].clone().len() as i64)) {
    |               ^                                            ^
    |
help: remove these parentheses
    |
294 -         while (j < (table[r as usize].clone().len() as i64)) {
294 +         while j < (table[r as usize].clone().len() as i64) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:296:17
    |
296 |             j = (j + 1);
    |                 ^     ^
    |
help: remove these parentheses
    |
296 -             j = (j + 1);
296 +             j = j + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:298:13
    |
298 |         r = (r + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
298 -         r = (r + 1);
298 +         r = r + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:302:11
    |
302 |     while (idx < (temp.len() as i64)) {
    |           ^                         ^
    |
help: remove these parentheses
    |
302 -     while (idx < (temp.len() as i64)) {
302 +     while idx < (temp.len() as i64) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:306:15
    |
306 |         idx = (idx + 2);
    |               ^       ^
    |
help: remove these parentheses
    |
306 -         idx = (idx + 2);
306 +         idx = idx + 2;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:323:32
    |
323 |         let duration_us: i64 = ((_end - _start) / 1000);
    |                                ^                      ^
    |
help: remove these parentheses
    |
323 -         let duration_us: i64 = ((_end - _start) / 1000);
323 +         let duration_us: i64 = (_end - _start) / 1000;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:324:33
    |
324 |         let memory_bytes: i64 = (_end_mem - _start_mem);
    |                                 ^                     ^
    |
help: remove these parentheses
    |
324 -         let memory_bytes: i64 = (_end_mem - _start_mem);
324 +         let memory_bytes: i64 = _end_mem - _start_mem;
    |

error[E0308]: mismatched types
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:117:107
    |
117 |         pairs = { let mut _v = pairs.clone(); _v.push(vec![key[i as usize..(i + 1) as usize].to_string(), i]); _v };
    |                                                                                                           ^- help: try using a conversion method: `.to_string()`
    |                                                                                                           |
    |                                                                                                           expected `String`, found `i64`

error[E0277]: `Vec<String>` doesn't implement `std::fmt::Display`
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:157:66
    |
157 | ..."{}{}", temp, labels[r as usize..(r + 1) as usize].to_vec()), labels[c as usize..(c + 1) as usize].to_vec());
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `Vec<String>` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `Vec<String>`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `Vec<String>` doesn't implement `std::fmt::Display`
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:157:114
    |
157 | ...e].to_vec()), labels[c as usize..(c + 1) as usize].to_vec());
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `Vec<String>` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `Vec<String>`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0608]: cannot index into a value of type `i64`
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:195:78
    |
195 |             colStr = format!("{}{}", colStr, table[ri as usize].clone()[order[ci as usize] as usize].clone());
    |                                                                              ^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:227:97
    |
227 |         if ((i == (cipherText.len() as i64)) || (cipherText.chars().nth(i as usize).unwrap() == " ")) {
    |                                                  -------------------------------------------    ^^^ expected `char`, found `&str`
    |                                                  |
    |                                                  expected because this is `char`
    |
help: if you meant to write a `char` literal, use single quotes
    |
227 -         if ((i == (cipherText.len() as i64)) || (cipherText.chars().nth(i as usize).unwrap() == " ")) {
227 +         if ((i == (cipherText.len() as i64)) || (cipherText.chars().nth(i as usize).unwrap() == ' ')) {
    |

error[E0608]: cannot index into a value of type `i64`
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:285:36
    |
285 |             table[r as usize][order[c as usize] as usize] = cols[c as usize].clone()[r as usize].clone();
    |                                    ^^^^^^^^^^^^

error[E0277]: the type `str` cannot be indexed by `usize`
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:305:80
    |
305 |         plainText = format!("{}{}", plainText, polybius[rIdx as usize].clone()[cIdx as usize]);
    |                                                                                ^^^^^^^^^^^^^ string indices are ranges of `usize`
    |
    = help: the trait `SliceIndex<str>` is not implemented for `usize`
            but trait `SliceIndex<[_]>` is implemented for it
    = help: for that trait implementation, expected `[_]`, found `str`
    = note: required for `String` to implement `Index<usize>`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:47:30
   |
47 |         unsafe fn shuffleStr(mut s: String) -> String {
   |                              ----^
   |                              |
   |                              help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:56:13
   |
56 |         let mut k = (_now() % (j + 1));
   |             ----^
   |             |
   |             help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:57:13
   |
57 |         let mut tmp: String = arr[j as usize].clone().clone();
   |             ----^^^
   |             |
   |             help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:71:9
   |
71 |     let mut shuffled: String = shuffleStr(g_alphabet.clone()).clone();
   |         ----^^^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:84:13
   |
84 |         let mut row: String = shuffled[(i * 6) as usize..((i + 1) * 6) as usize].to_string().clone();
   |             ----^^^
   |             |
   |             help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:97:29
   |
97 |         unsafe fn createKey(mut n: i64) -> String {
   |                             ----^
   |                             |
   |                             help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:105:13
    |
105 |         let mut idx = (_now() % (pool.len() as i64));
    |             ----^^^
    |             |
    |             help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:212:27
    |
212 |         unsafe fn indexOf(mut s: String, ch: &str) -> i64 {
    |                           ----^
    |                           |
    |                           help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:311:9
    |
311 |     let mut plainText: String = String::from("ATTACKAT1200AM").clone();
    |         ----^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:312:9
    |
312 |     let mut polybius: Vec<String> = createPolybius();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:313:9
    |
313 |     let mut key: String = createKey(9).clone();
    |         ----^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:315:9
    |
315 |     let mut cipherText: String = encrypt(polybius.clone(), key.clone(), plainText.clone()).clone();
    |         ----^^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/adfgvx-cipher.rs:317:9
    |
317 |     let mut plainText2: String = decrypt(polybius.clone(), key.clone(), cipherText.clone()).clone();
    |         ----^^^^^^^^^^
    |         |
    |         help: remove this `mut`

error: aborting due to 7 previous errors; 113 warnings emitted

Some errors have detailed explanations: E0277, E0308, E0608.
For more information about an error, try `rustc --explain E0277`.
