// Generated by Mochi transpiler v0.10.50 on 2025-07-31 01:01 +0700
fn removeName(mut names: Vec<String>, name: &str) -> Vec<String> {
    let mut out: Vec<String> = vec![];
    for n in names.clone() {
        if (n != name) {
            out = { let mut _v = out.clone(); _v.push(n.to_string()); _v };
        }
    }
    return out
}

fn mochi_main() {
    let mut clients: Vec<String> = vec![];
    let broadcast = move |msg: &str| {
    println!("{}", msg);
};
    let add = move |name: &str| {
    clients = { let mut _v = clients.clone(); _v.push(name.to_string()); _v };
    broadcast(&format!("{}{}", format!("{}{}", "+++ \"", name), "\" connected +++\n"));
};
    let send = move |name: &str, msg: &str| {
    broadcast(&format!("{}{}", format!("{}{}", format!("{}{}", name, "> "), msg), "\n"));
};
    let remove = move |name: &str| {
    clients = removeName(clients.clone(), name);
    broadcast(&format!("{}{}", format!("{}{}", "--- \"", name), "\" disconnected ---\n"));
};
    add(&"Alice");
    add(&"Bob");
    send(&"Alice", &"Hello Bob!");
    send(&"Bob", &"Hi Alice!");
    remove(&"Bob");
    remove(&"Alice");
    broadcast(&"Server stopping!\n");
}

fn main() {
    mochi_main();
}
