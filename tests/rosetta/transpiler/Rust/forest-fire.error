warning: unnecessary trailing semicolon
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:52:36
   |
52 |         static mut g_rows: i64 = 0;;
   |                                    ^ help: remove this semicolon
   |
   = note: `#[warn(redundant_semicolons)]` on by default

warning: unnecessary trailing semicolon
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:53:36
   |
53 |         static mut g_cols: i64 = 0;;
   |                                    ^ help: remove this semicolon

warning: unnecessary trailing semicolon
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:54:35
   |
54 |         static mut g_p: f64 = 0.0;;
   |                                   ^ help: remove this semicolon

warning: unnecessary trailing semicolon
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:55:35
   |
55 |         static mut g_f: f64 = 0.0;;
   |                                   ^ help: remove this semicolon

warning: unnecessary trailing semicolon
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:64:2
   |
64 | };
   |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:68:2
   |
68 | };
   |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:87:2
   |
87 | };
   |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:133:2
    |
133 | };
    |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:152:2
    |
152 | };
    |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:153:59
    |
153 |         static mut g_board: Vec<Vec<String>> = Vec::new();;
    |                                                           ^ help: remove this semicolon

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:59:11
   |
59 |     while (i < n) {
   |           ^     ^
   |
   = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
   |
59 -     while (i < n) {
59 +     while i < n {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:61:13
   |
61 |         i = (i + 1);
   |             ^     ^
   |
help: remove these parentheses
   |
61 -         i = (i + 1);
61 +         i = i + 1;
   |

warning: unnecessary parentheses around function argument
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:66:34
   |
66 |     let mut threshold: i64 = int((prob * 1000.0));
   |                                  ^             ^
   |
help: remove these parentheses
   |
66 -     let mut threshold: i64 = int((prob * 1000.0));
66 +     let mut threshold: i64 = int(prob * 1000.0);
   |

warning: unnecessary parentheses around `return` value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:67:12
   |
67 |     return ((_now() % 1000) < threshold)
   |            ^                           ^
   |
help: remove these parentheses
   |
67 -     return ((_now() % 1000) < threshold)
67 +     return (_now() % 1000) < threshold
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:72:11
   |
72 |     while (r < g_rows) {
   |           ^          ^
   |
help: remove these parentheses
   |
72 -     while (r < g_rows) {
72 +     while r < g_rows {
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:75:15
   |
75 |         while (c < g_cols) {
   |               ^          ^
   |
help: remove these parentheses
   |
75 -         while (c < g_cols) {
75 +         while c < g_cols {
   |

warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:76:16
   |
76 |             if ((_now() % 2) == 0) {
   |                ^                 ^
   |
help: remove these parentheses
   |
76 -             if ((_now() % 2) == 0) {
76 +             if (_now() % 2) == 0 {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:81:17
   |
81 |             c = (c + 1);
   |                 ^     ^
   |
help: remove these parentheses
   |
81 -             c = (c + 1);
81 +             c = c + 1;
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:84:13
   |
84 |         r = (r + 1);
   |             ^     ^
   |
help: remove these parentheses
   |
84 -         r = (r + 1);
84 +         r = r + 1;
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:91:11
   |
91 |     while (r < g_rows) {
   |           ^          ^
   |
help: remove these parentheses
   |
91 -     while (r < g_rows) {
91 +     while r < g_rows {
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:94:15
   |
94 |         while (c < g_cols) {
   |               ^          ^
   |
help: remove these parentheses
   |
94 -         while (c < g_cols) {
94 +         while c < g_cols {
   |

warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:97:16
   |
97 |             if (cell.as_str() == "#") {
   |                ^                    ^
   |
help: remove these parentheses
   |
97 -             if (cell.as_str() == "#") {
97 +             if cell.as_str() == "#" {
   |

warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:99:23
   |
99 |             } else if (cell.as_str() == "T") {
   |                       ^                    ^
   |
help: remove these parentheses
   |
99 -             } else if (cell.as_str() == "T") {
99 +             } else if cell.as_str() == "T" {
   |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:102:23
    |
102 |                 while (dr <= 1) {
    |                       ^       ^
    |
help: remove these parentheses
    |
102 -                 while (dr <= 1) {
102 +                 while dr <= 1 {
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:104:27
    |
104 |                     while (dc <= 1) {
    |                           ^       ^
    |
help: remove these parentheses
    |
104 -                     while (dc <= 1) {
104 +                     while dc <= 1 {
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:105:28
    |
105 |                         if ((dr != 0) || (dc != 0)) {
    |                            ^                      ^
    |
help: remove these parentheses
    |
105 -                         if ((dr != 0) || (dc != 0)) {
105 +                         if (dr != 0) || (dc != 0) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:106:47
    |
106 | ...                   let mut rr: i64 = (r + dr);
    |                                         ^      ^
    |
help: remove these parentheses
    |
106 -                             let mut rr: i64 = (r + dr);
106 +                             let mut rr: i64 = r + dr;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:107:47
    |
107 | ...                   let mut cc: i64 = (c + dc);
    |                                         ^      ^
    |
help: remove these parentheses
    |
107 -                             let mut cc: i64 = (c + dc);
107 +                             let mut cc: i64 = c + dc;
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:108:32
    |
108 | ...                   if ((((rr >= 0) && (rr < g_rows)) && (cc >= 0)) && (cc < g_cols)) {
    |                          ^                                                            ^
    |
help: remove these parentheses
    |
108 -                             if ((((rr >= 0) && (rr < g_rows)) && (cc >= 0)) && (cc < g_cols)) {
108 +                             if (((rr >= 0) && (rr < g_rows)) && (cc >= 0)) && (cc < g_cols) {
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:109:36
    |
109 | ...                   if (src[rr as usize].clone()[cc as usize].clone().as_str() == "#") {
    |                          ^                                                             ^
    |
help: remove these parentheses
    |
109 -                                 if (src[rr as usize].clone()[cc as usize].clone().as_str() == "#") {
109 +                                 if src[rr as usize].clone()[cc as usize].clone().as_str() == "#" {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:114:30
    |
114 |                         dc = (dc + 1);
    |                              ^      ^
    |
help: remove these parentheses
    |
114 -                         dc = (dc + 1);
114 +                         dc = dc + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:116:26
    |
116 |                     dr = (dr + 1);
    |                          ^      ^
    |
help: remove these parentheses
    |
116 -                     dr = (dr + 1);
116 +                     dr = dr + 1;
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:118:20
    |
118 |                 if (burning || chance(g_f)) {
    |                    ^                      ^
    |
help: remove these parentheses
    |
118 -                 if (burning || chance(g_f)) {
118 +                 if burning || chance(g_f) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:127:17
    |
127 |             c = (c + 1);
    |                 ^     ^
    |
help: remove these parentheses
    |
127 -             c = (c + 1);
127 +             c = c + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:130:13
    |
130 |         r = (r + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
130 -         r = (r + 1);
130 +         r = r + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:137:11
    |
137 |     while (r < g_rows) {
    |           ^          ^
    |
help: remove these parentheses
    |
137 -     while (r < g_rows) {
137 +     while r < g_rows {
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:140:15
    |
140 |         while (c < g_cols) {
    |               ^          ^
    |
help: remove these parentheses
    |
140 -         while (c < g_cols) {
140 +         while c < g_cols {
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:142:16
    |
142 |             if (cell.as_str() == " ") {
    |                ^                    ^
    |
help: remove these parentheses
    |
142 -             if (cell.as_str() == " ") {
142 +             if cell.as_str() == " " {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:147:17
    |
147 |             c = (c + 1);
    |                 ^     ^
    |
help: remove these parentheses
    |
147 -             c = (c + 1);
147 +             c = c + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:150:13
    |
150 |         r = (r + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
150 -         r = (r + 1);
150 +         r = r + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:159:32
    |
159 |         let duration_us: i64 = ((_end - _start) / 1000);
    |                                ^                      ^
    |
help: remove these parentheses
    |
159 -         let duration_us: i64 = ((_end - _start) / 1000);
159 +         let duration_us: i64 = (_end - _start) / 1000;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:160:33
    |
160 |         let memory_bytes: i64 = (_end_mem - _start_mem);
    |                                 ^                     ^
    |
help: remove these parentheses
    |
160 -         let memory_bytes: i64 = (_end_mem - _start_mem);
160 +         let memory_bytes: i64 = _end_mem - _start_mem;
    |

error[E0308]: mismatched types
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:66:34
   |
66 |     let mut threshold: i64 = int((prob * 1000.0));
   |                              --- ^^^^^^^^^^^^^^^ expected `i64`, found `f64`
   |                              |
   |                              arguments to this function are incorrect
   |
note: function defined here
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:37:4
   |
37 | fn int(x: i64) -> i64 { x }
   |    ^^^ ------

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:56:36
   |
56 |         unsafe fn repeat(ch: &str, mut n: i64) -> String {
   |                                    ----^
   |                                    |
   |                                    help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:88:24
   |
88 |         unsafe fn step(mut src: Vec<Vec<String>>) -> Vec<Vec<String>> {
   |                        ----^^^
   |                        |
   |                        help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:95:17
   |
95 |             let mut cell: String = src[r as usize].clone()[c as usize].clone().clone();
   |                 ----^^^^
   |                 |
   |                 help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:106:33
    |
106 | ...                   let mut rr: i64 = (r + dr);
    |                           ----^^
    |                           |
    |                           help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:107:33
    |
107 | ...                   let mut cc: i64 = (c + dc);
    |                           ----^^
    |                           |
    |                           help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:134:30
    |
134 |         unsafe fn printBoard(mut b: Vec<Vec<String>>) {
    |                              ----^
    |                              |
    |                              help: remove this `mut`

warning: variable does not need to be mutable
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/forest-fire.rs:141:17
    |
141 |             let mut cell: String = b[r as usize].clone()[c as usize].clone().clone();
    |                 ----^^^^
    |                 |
    |                 help: remove this `mut`

error: aborting due to 1 previous error; 49 warnings emitted

For more information about this error, try `rustc --explain E0308`.
