// Generated by Mochi transpiler v0.10.57 on 2025-08-04 21:43 +0700
fn r#mod(mut n: i64, mut m: i64) -> i64 {
    return (((n % m) + m) % m)
}

fn isPrime(mut n: i64) -> bool {
    if (n < 2) {
        return false
    }
    if ((n % 2) == 0) {
        return (n == 2)
    }
    if ((n % 3) == 0) {
        return (n == 3)
    }
    let mut d: i64 = 5;
    while ((d * d) <= n) {
        if ((n % d) == 0) {
            return false
        }
        d = (d + 2);
        if ((n % d) == 0) {
            return false
        }
        d = (d + 4);
    }
    return true
}

fn pad(mut n: i64, mut width: i64) -> String {
    let mut s = n.to_string();
    while ((s.len() as i64) < width) {
        s = format!("{}{}", " ", s);
    }
    return s.clone()
}

fn carmichael(mut p1: i64) {
    for h3 in 2..p1 {
        for d in 1..(h3 + p1) {
            if (((((h3 + p1) * (p1 - 1)) % d) == 0) && (r#mod((-p1 * p1), h3) == (d % h3))) {
                let mut p2: i64 = (1 + (((p1 - 1) * (h3 + p1)) / d));
                if !isPrime(p2) {
                    continue
                }
                let mut p3: i64 = (1 + ((p1 * p2) / h3));
                if !isPrime(p3) {
                    continue
                }
                if (((p2 * p3) % (p1 - 1)) != 1) {
                    continue
                }
                let mut c: i64 = ((p1 * p2) * p3);
                println!("{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", pad(p1, 2), "   "), pad(p2, 4)), "   "), pad(p3, 5)), "     "), c.to_string()));
            }
        }
    }
}

fn main() {
    println!("{}", "The following are Carmichael munbers for p1 <= 61:\n");
    println!("{}", "p1     p2      p3     product");
    println!("{}", "==     ==      ==     =======");
    for p1 in 2..62 {
        if isPrime(p1) {
            carmichael(p1);
        }
    }
}
