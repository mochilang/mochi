warning: unnecessary trailing semicolon
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:49:2
   |
49 | };
   |  ^ help: remove this semicolon
   |
   = note: `#[warn(redundant_semicolons)]` on by default

warning: unnecessary trailing semicolon
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:62:2
   |
62 | };
   |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:80:2
   |
80 | };
   |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:95:2
   |
95 | };
   |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:108:2
    |
108 | };
    |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:146:2
    |
146 | };
    |  ^ help: remove this semicolon

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:42:11
   |
42 |     while (i < (xs.len() as i64)) {
   |           ^                     ^
   |
   = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
   |
42 -     while (i < (xs.len() as i64)) {
42 +     while i < (xs.len() as i64) {
   |

warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:43:12
   |
43 |         if (xs[i as usize] == n) {
   |            ^                   ^
   |
help: remove these parentheses
   |
43 -         if (xs[i as usize] == n) {
43 +         if xs[i as usize] == n {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:46:13
   |
46 |         i = (i + 1);
   |             ^     ^
   |
help: remove these parentheses
   |
46 -         i = (i + 1);
46 +         i = i + 1;
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:53:11
   |
53 |     while (y != 0) {
   |           ^      ^
   |
help: remove these parentheses
   |
53 -     while (y != 0) {
53 +     while y != 0 {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:54:26
   |
54 |         let mut t: i64 = (x % y);
   |                          ^     ^
   |
help: remove these parentheses
   |
54 -         let mut t: i64 = (x % y);
54 +         let mut t: i64 = x % y;
   |

warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:58:8
   |
58 |     if (x < 0) {
   |        ^     ^
   |
help: remove these parentheses
   |
58 -     if (x < 0) {
58 +     if x < 0 {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:65:17
   |
65 |     let mut n = (arr.len() as i64);
   |                 ^                ^
   |
help: remove these parentheses
   |
65 -     let mut n = (arr.len() as i64);
65 +     let mut n = arr.len() as i64;
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:67:11
   |
67 |     while (i < n) {
   |           ^     ^
   |
help: remove these parentheses
   |
67 -     while (i < n) {
67 +     while i < n {
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:69:15
   |
69 |         while (j < (n - 1)) {
   |               ^           ^
   |
help: remove these parentheses
   |
69 -         while (j < (n - 1)) {
69 +         while j < (n - 1) {
   |

warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:70:16
   |
70 |             if (arr[j as usize] > arr[(j + 1) as usize]) {
   |                ^                                       ^
   |
help: remove these parentheses
   |
70 -             if (arr[j as usize] > arr[(j + 1) as usize]) {
70 +             if arr[j as usize] > arr[(j + 1) as usize] {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:75:17
   |
75 |             j = (j + 1);
   |                 ^     ^
   |
help: remove these parentheses
   |
75 -             j = (j + 1);
75 +             j = j + 1;
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:77:13
   |
77 |         i = (i + 1);
   |             ^     ^
   |
help: remove these parentheses
   |
77 -         i = (i + 1);
77 +         i = i + 1;
   |

warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:82:8
   |
82 |     if ((s.len() as i64) != (t.len() as i64)) {
   |        ^                                    ^
   |
help: remove these parentheses
   |
82 -     if ((s.len() as i64) != (t.len() as i64)) {
82 +     if (s.len() as i64) != (t.len() as i64) {
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:88:11
   |
88 |     while (i < (a.len() as i64)) {
   |           ^                    ^
   |
help: remove these parentheses
   |
88 -     while (i < (a.len() as i64)) {
88 +     while i < (a.len() as i64) {
   |

warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:89:12
   |
89 |         if (a[i as usize] != b[i as usize]) {
   |            ^                              ^
   |
help: remove these parentheses
   |
89 -         if (a[i as usize] != b[i as usize]) {
89 +         if a[i as usize] != b[i as usize] {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:92:13
   |
92 |         i = (i + 1);
   |             ^     ^
   |
help: remove these parentheses
   |
92 -         i = (i + 1);
92 +         i = i + 1;
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:99:11
   |
99 |     while (i < 30) {
   |           ^      ^
   |
help: remove these parentheses
   |
99 -     while (i < 30) {
99 +     while i < 30 {
   |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:101:13
    |
101 |         i = (i + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
101 -         i = (i + 1);
101 +         i = i + 1;
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:104:8
    |
104 |     if (start < 10) {
    |        ^          ^
    |
help: remove these parentheses
    |
104 -     if (start < 10) {
104 +     if start < 10 {
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:114:11
    |
114 |     while (s < (starts.len() as i64)) {
    |           ^                         ^
    |
help: remove these parentheses
    |
114 -     while (s < (starts.len() as i64)) {
114 +     while s < (starts.len() as i64) {
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:117:15
    |
117 |         while (n < limit) {
    |               ^         ^
    |
help: remove these parentheses
    |
117 -         while (n < limit) {
117 +         while n < limit {
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:121:20
    |
121 |                 if (!seq.contains(i) && (gcd(seq[(n - 1) as usize], i) > 1)) {
    |                    ^                                                       ^
    |
help: remove these parentheses
    |
121 -                 if (!seq.contains(i) && (gcd(seq[(n - 1) as usize], i) > 1)) {
121 +                 if !seq.contains(i) && (gcd(seq[(n - 1) as usize], i) > 1) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:125:21
    |
125 |                 i = (i + 1);
    |                     ^     ^
    |
help: remove these parentheses
    |
125 -                 i = (i + 1);
125 +                 i = i + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:127:17
    |
127 |             n = (n + 1);
    |                 ^     ^
    |
help: remove these parentheses
    |
127 -             n = (n + 1);
127 +             n = n + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:131:13
    |
131 |         s = (s + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
131 -         s = (s + 1);
131 +         s = s + 1;
    |

warning: unnecessary parentheses around `while` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:135:11
    |
135 |     while (i < limit) {
    |           ^         ^
    |
help: remove these parentheses
    |
135 -     while (i < limit) {
135 +     while i < limit {
    |

warning: unnecessary parentheses around `if` condition
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:136:12
    |
136 | ...if ((ekg[1 as usize].clone()[i as usize] == ekg[2 as usize].clone()[i as usize]) && areSame(ekg[1 as usize].clone()[0..i as usize].to_vec(), ekg[2 as usize].clone()[0..i as usize].to_vec())) {
    |       ^                                                                                                                                                                                         ^
    |
help: remove these parentheses
    |
136 -         if ((ekg[1 as usize].clone()[i as usize] == ekg[2 as usize].clone()[i as usize]) && areSame(ekg[1 as usize].clone()[0..i as usize].to_vec(), ekg[2 as usize].clone()[0..i as usize].to_vec())) {
136 +         if (ekg[1 as usize].clone()[i as usize] == ekg[2 as usize].clone()[i as usize]) && areSame(ekg[1 as usize].clone()[0..i as usize].to_vec(), ekg[2 as usize].clone()[0..i as usize].to_vec()) {
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:141:13
    |
141 |         i = (i + 1);
    |             ^     ^
    |
help: remove these parentheses
    |
141 -         i = (i + 1);
141 +         i = i + 1;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:150:28
    |
150 |     let duration_us: i64 = ((_end - _start) / 1000);
    |                            ^                      ^
    |
help: remove these parentheses
    |
150 -     let duration_us: i64 = ((_end - _start) / 1000);
150 +     let duration_us: i64 = (_end - _start) / 1000;
    |

warning: unnecessary parentheses around assigned value
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:151:29
    |
151 |     let memory_bytes: i64 = (_end_mem - _start_mem);
    |                             ^                     ^
    |
help: remove these parentheses
    |
151 -     let memory_bytes: i64 = (_end_mem - _start_mem);
151 +     let memory_bytes: i64 = _end_mem - _start_mem;
    |

error[E0308]: mismatched types
   --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:121:35
    |
121 |                 if (!seq.contains(i) && (gcd(seq[(n - 1) as usize], i) > 1)) {
    |                          -------- ^ expected `&i64`, found `i64`
    |                          |
    |                          arguments to this method are incorrect
    |
note: method defined here
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/slice/mod.rs:2549:12
help: consider borrowing here
    |
121 |                 if (!seq.contains(&i) && (gcd(seq[(n - 1) as usize], i) > 1)) {
    |                                   +

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:40:17
   |
40 |     fn contains(mut xs: Vec<i64>, mut n: i64) -> bool {
   |                 ----^^
   |                 |
   |                 help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:40:35
   |
40 |     fn contains(mut xs: Vec<i64>, mut n: i64) -> bool {
   |                                   ----^
   |                                   |
   |                                   help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:50:12
   |
50 |     fn gcd(mut a: i64, mut b: i64) -> i64 {
   |            ----^
   |            |
   |            help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:50:24
   |
50 |     fn gcd(mut a: i64, mut b: i64) -> i64 {
   |                        ----^
   |                        |
   |                        help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:54:13
   |
54 |         let mut t: i64 = (x % y);
   |             ----^
   |             |
   |             help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:63:17
   |
63 |     fn sortInts(mut xs: Vec<i64>) -> Vec<i64> {
   |                 ----^^
   |                 |
   |                 help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:65:9
   |
65 |     let mut n = (arr.len() as i64);
   |         ----^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:71:21
   |
71 |                 let mut tmp: i64 = arr[j as usize];
   |                     ----^^^
   |                     |
   |                     help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:81:16
   |
81 |     fn areSame(mut s: Vec<i64>, mut t: Vec<i64>) -> bool {
   |                ----^
   |                |
   |                help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:81:33
   |
81 |     fn areSame(mut s: Vec<i64>, mut t: Vec<i64>) -> bool {
   |                                 ----^
   |                                 |
   |                                 help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:85:9
   |
85 |     let mut a: Vec<i64> = sortInts(s.clone());
   |         ----^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:86:9
   |
86 |     let mut b: Vec<i64> = sortInts(t.clone());
   |         ----^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:96:19
   |
96 |     fn printSlice(mut start: i64, mut seq: Vec<i64>) {
   |                   ----^^^^^
   |                   |
   |                   help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/ekg-sequence-convergence.rs:96:35
   |
96 |     fn printSlice(mut start: i64, mut seq: Vec<i64>) {
   |                                   ----^^^
   |                                   |
   |                                   help: remove this `mut`

error: aborting due to 1 previous error; 50 warnings emitted

For more information about this error, try `rustc --explain E0308`.
