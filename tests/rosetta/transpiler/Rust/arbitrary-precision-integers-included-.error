warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/arbitrary-precision-integers-included-.rs:11:11
   |
11 |     while (e > 0) {
   |           ^     ^
   |
   = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
   |
11 -     while (e > 0) {
11 +     while e > 0 {
   |

warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/arbitrary-precision-integers-included-.rs:12:12
   |
12 |         if ((e % 2) == 1) {
   |            ^            ^
   |
help: remove these parentheses
   |
12 -         if ((e % 2) == 1) {
12 +         if (e % 2) == 1 {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/arbitrary-precision-integers-included-.rs:13:22
   |
13 |             result = (result * b);
   |                      ^          ^
   |
help: remove these parentheses
   |
13 -             result = (result * b);
13 +             result = result * b;
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/arbitrary-precision-integers-included-.rs:15:13
   |
15 |         b = (b * b);
   |             ^     ^
   |
help: remove these parentheses
   |
15 -         b = (b * b);
15 +         b = b * b;
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/arbitrary-precision-integers-included-.rs:16:13
   |
16 |         e = (e / 2);
   |             ^     ^
   |
help: remove these parentheses
   |
16 -         e = (e / 2);
16 +         e = e / 2;
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/arbitrary-precision-integers-included-.rs:25:11
   |
25 |     while (e > 0) {
   |           ^     ^
   |
help: remove these parentheses
   |
25 -     while (e > 0) {
25 +     while e > 0 {
   |

warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/arbitrary-precision-integers-included-.rs:26:12
   |
26 |         if ((e % 2) == 1) {
   |            ^            ^
   |
help: remove these parentheses
   |
26 -         if ((e % 2) == 1) {
26 +         if (e % 2) == 1 {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/arbitrary-precision-integers-included-.rs:27:22
   |
27 |             result = (result * b);
   |                      ^          ^
   |
help: remove these parentheses
   |
27 -             result = (result * b);
27 +             result = result * b;
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/arbitrary-precision-integers-included-.rs:29:13
   |
29 |         b = (b * b);
   |             ^     ^
   |
help: remove these parentheses
   |
29 -         b = (b * b);
29 +         b = b * b;
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/arbitrary-precision-integers-included-.rs:30:13
   |
30 |         e = (e / 2);
   |             ^     ^
   |
help: remove these parentheses
   |
30 -         e = (e / 2);
30 +         e = e / 2;
   |

error[E0308]: mismatched types
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/arbitrary-precision-integers-included-.rs:41:15
   |
6  | static mut g_s: i64 = 0;
   |                 --- expected due to this type
...
41 |         g_s = g_x.to_string();
   |               ^^^^^^^^^^^^^^^ expected `i64`, found `String`
   |
help: try removing the method call
   |
41 -         g_s = g_x.to_string();
41 +         g_s = g_x;
   |

error[E0599]: no method named `len` found for type `i64` in the current scope
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/arbitrary-precision-integers-included-.rs:42:77
   |
42 | ...   println!("{}", format!("{} {} {} {} {} {}", "5^(4^(3^2)) has", (g_s.len() as i64), "digits:", { let tmp = &g_s; tmp.chars().skip(0 ...
   |                                                                           ^^^
   |
help: there is a method `le` with a similar name, but with different arguments
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/cmp.rs:1400:5

error[E0599]: no method named `chars` found for reference `&i64` in the current scope
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/arbitrary-precision-integers-included-.rs:42:125
   |
42 | ..._s.len() as i64), "digits:", { let tmp = &g_s; tmp.chars().skip(0 as usize).take((20 - 0) as usize).collect::<String>() }, "...", { le...
   |                                                       ^^^^^ method not found in `&i64`

error[E0599]: no method named `chars` found for reference `&i64` in the current scope
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/arbitrary-precision-integers-included-.rs:42:226
   |
42 | ...ollect::<String>() }, "...", { let tmp = &g_s; tmp.chars().skip(((g_s.len() as i64) - 20) as usize).take(((g_s.len() as i64) - ((g_s.l...
   |                                                       ^^^^^ method not found in `&i64`

error[E0599]: no method named `len` found for type `i64` in the current scope
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/arbitrary-precision-integers-included-.rs:42:245
   |
42 | ...t::<String>() }, "...", { let tmp = &g_s; tmp.chars().skip(((g_s.len() as i64) - 20) as usize).take(((g_s.len() as i64) - ((g_s.len() ...
   |                                                                     ^^^
   |
help: there is a method `le` with a similar name, but with different arguments
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/cmp.rs:1400:5

error[E0599]: no method named `len` found for type `i64` in the current scope
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/arbitrary-precision-integers-included-.rs:42:286
   |
42 | ... tmp.chars().skip(((g_s.len() as i64) - 20) as usize).take(((g_s.len() as i64) - ((g_s.len() as i64) - 20)) as usize).collect::<String...
   |                                                                     ^^^
   |
help: there is a method `le` with a similar name, but with different arguments
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/cmp.rs:1400:5

error[E0599]: no method named `len` found for type `i64` in the current scope
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/arbitrary-precision-integers-included-.rs:42:308
   |
42 | ...s.len() as i64) - 20) as usize).take(((g_s.len() as i64) - ((g_s.len() as i64) - 20)) as usize).collect::<String>() }).trim_end());
   |                                                                     ^^^
   |
help: there is a method `le` with a similar name, but with different arguments
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/cmp.rs:1400:5

warning: variable does not need to be mutable
 --> /workspace/mochi/tests/rosetta/transpiler/Rust/arbitrary-precision-integers-included-.rs:7:19
  |
7 | unsafe fn pow_int(mut base: i64, mut exp: i64) -> i64 {
  |                   ----^^^^
  |                   |
  |                   help: remove this `mut`
  |
  = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
 --> /workspace/mochi/tests/rosetta/transpiler/Rust/arbitrary-precision-integers-included-.rs:7:34
  |
7 | unsafe fn pow_int(mut base: i64, mut exp: i64) -> i64 {
  |                                  ----^^^
  |                                  |
  |                                  help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/arbitrary-precision-integers-included-.rs:21:19
   |
21 | unsafe fn pow_big(mut base: i64, mut exp: i64) -> i64 {
   |                   ----^^^^
   |                   |
   |                   help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/arbitrary-precision-integers-included-.rs:21:34
   |
21 | unsafe fn pow_big(mut base: i64, mut exp: i64) -> i64 {
   |                                  ----^^^
   |                                  |
   |                                  help: remove this `mut`

error: aborting due to 7 previous errors; 14 warnings emitted

Some errors have detailed explanations: E0308, E0599.
For more information about an error, try `rustc --explain E0308`.
