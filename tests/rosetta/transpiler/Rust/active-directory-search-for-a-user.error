warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/active-directory-search-for-a-user.rs:47:8
   |
47 |     if ((groups.len() as i64) > 0) {
   |        ^                         ^
   |
   = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
   |
47 -     if ((groups.len() as i64) > 0) {
47 +     if (groups.len() as i64) > 0 {
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/active-directory-search-for-a-user.rs:50:15
   |
50 |         while (i < (groups.len() as i64)) {
   |               ^                         ^
   |
help: remove these parentheses
   |
50 -         while (i < (groups.len() as i64)) {
50 +         while i < (groups.len() as i64) {
   |

warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/active-directory-search-for-a-user.rs:52:16
   |
52 |             if (i < ((groups.len() as i64) - 1)) {
   |                ^                               ^
   |
help: remove these parentheses
   |
52 -             if (i < ((groups.len() as i64) - 1)) {
52 +             if i < ((groups.len() as i64) - 1) {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/active-directory-search-for-a-user.rs:55:17
   |
55 |             i = (i + 1);
   |                 ^     ^
   |
help: remove these parentheses
   |
55 -             i = (i + 1);
55 +             i = i + 1;
   |

error[E0308]: mismatched types
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/active-directory-search-for-a-user.rs:46:47
   |
46 |     let mut groups: Vec<String> = search_user(&directory, String::from("username"));
   |                                   ----------- ^^^^^^^^^^ expected `&HashMap<String, Vec<String>>`, found `&Map1`
   |                                   |
   |                                   arguments to this function are incorrect
   |
   = note: expected reference `&HashMap<String, Vec<String>>`
              found reference `&Map1`
note: function defined here
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/active-directory-search-for-a-user.rs:39:4
   |
39 | fn search_user(directory: &HashMap<String, Vec<String>>, mut username: String) -> Vec<String> {
   |    ^^^^^^^^^^^ ----------------------------------------

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/active-directory-search-for-a-user.rs:39:58
   |
39 | fn search_user(directory: &HashMap<String, Vec<String>>, mut username: String) -> Vec<String> {
   |                                                          ----^^^^^^^^
   |                                                          |
   |                                                          help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

error[E0507]: cannot move out of index of `HashMap<String, Vec<String>>`
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/active-directory-search-for-a-user.rs:40:12
   |
40 |     return directory[username.as_str()]
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ move occurs because value has type `Vec<String>`, which does not implement the `Copy` trait
   |
help: consider cloning the value if the performance cost is acceptable
   |
40 |     return directory[username.as_str()].clone()
   |                                        ++++++++

error: aborting due to 2 previous errors; 5 warnings emitted

Some errors have detailed explanations: E0308, E0507.
For more information about an error, try `rustc --explain E0308`.
