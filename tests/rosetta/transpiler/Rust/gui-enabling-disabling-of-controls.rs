// Generated by Mochi transpiler v0.10.54 on 2025-08-02 11:55 +0700
#[derive(Debug, Clone, Default)]
struct State {
    entry: bool,
    inc: bool,
    dec: bool,
}
impl std::fmt::Display for State {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        write!(f, "{{")?;
        write!(f, "\"entry\": {}", self.entry)?;
        write!(f, ", ")?;
        write!(f, "\"inc\": {}", self.inc)?;
        write!(f, ", ")?;
        write!(f, "\"dec\": {}", self.dec)?;
        write!(f, "}}")
    }
}

fn state(mut v: i64) -> State {
    return State {entry: (v == 0), inc: (v < 10), dec: (v > 0)}
}

fn printState(mut v: i64) {
    let mut s: State = state(v);
    println!("{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", "value=", v.to_string()), " entry="), s.entry.to_string()), " inc="), s.inc.to_string()), " dec="), s.dec.to_string()));
}

fn mochi_main() {
    let mut v: i64 = 0;
    printState(v);
    loop {
        let mut s: State = state(v);
        if !s.inc {
            break
        }
        v = (v + 1);
        printState(v);
    }
    loop {
        let mut s: State = state(v);
        if !s.dec {
            break
        }
        v = (v - 1);
        printState(v);
    }
}

fn main() {
    mochi_main();
}
