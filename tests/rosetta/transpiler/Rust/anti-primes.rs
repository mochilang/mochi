// Generated by Mochi transpiler v0.10.41 on 2025-07-27 01:00 +0700
fn countDivisors(mut n: i64) -> i64 {
    if (n < 2) {
        return 1
    }
    let mut count: i64 = 2;
    let mut i: i64 = 2;
    while (i <= (n / 2)) {
        if ((n % i) == 0) {
            count = (count + 1);
        }
        i = (i + 1);
    }
    return count
}

fn mochi_main() {
    println!("{}", "The first 20 anti-primes are:");
    let mut maxDiv: i64 = 0;
    let mut count: i64 = 0;
    let mut n: i64 = 1;
    let mut line = String::from("");
    while (count < 20) {
        let d: i64 = countDivisors(n);
        if (d > maxDiv) {
            line = format!("{}{}", format!("{}{}", line, n.to_string()), " ");
            maxDiv = d;
            count = (count + 1);
        }
        n = (n + 1);
    }
    line = { let tmp = &line; tmp.chars().skip(0 as usize).take((((line.len() as i64) - 1) - 0) as usize).collect::<String>() };
    println!("{}", line);
}

fn main() {
    mochi_main();
}
