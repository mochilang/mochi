// Generated by Mochi transpiler v0.10.55 on 2025-08-02 23:08 +0700
fn isPrime(mut n: i64) -> bool {
    if (n < 2) {
        return false
    }
    if ((n % 2) == 0) {
        return (n == 2)
    }
    if ((n % 3) == 0) {
        return (n == 3)
    }
    let mut d: i64 = 5;
    while ((d * d) <= n) {
        if ((n % d) == 0) {
            return false
        }
        d = (d + 2);
        if ((n % d) == 0) {
            return false
        }
        d = (d + 4);
    }
    return true
}

fn countPrimeFactors(mut n: i64) -> i64 {
    if (n == 1) {
        return 0
    }
    if isPrime(n) {
        return 1
    }
    let mut count: i64 = 0;
    let mut f: i64 = 2;
    loop {
        if ((n % f) == 0) {
            count = (count + 1);
            n = (n / f);
            if (n == 1) {
                return count
            }
            if isPrime(n) {
                f = n;
            }
        } else if (f >= 3) {
            f = (f + 2);
        } else {
            f = 3;
        }
    }
    return count
}

fn pad4(mut n: i64) -> String {
    let mut s = n.to_string();
    while ((s.len() as i64) < 4) {
        s = format!("{}{}", " ", s);
    }
    return s.clone()
}

fn mochi_main() {
    let mut max: i64 = 120;
    println!("{}", format!("{}{}", format!("{}{}", "The attractive numbers up to and including ", max.to_string()), " are:"));
    let mut count: i64 = 0;
    let mut line: String = String::from("").clone();
    let mut lineCount: i64 = 0;
    let mut i: i64 = 1;
    while (i <= max) {
        let mut c: i64 = countPrimeFactors(i);
        if isPrime(c) {
            line = format!("{}{}", line, pad4(i));
            count = (count + 1);
            lineCount = (lineCount + 1);
            if (lineCount == 20) {
                println!("{}", line);
                line = String::from("");
                lineCount = 0;
            }
        }
        i = (i + 1);
    }
    if (lineCount > 0) {
        println!("{}", line);
    }
}

fn main() {
    mochi_main();
}
