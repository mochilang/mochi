warning: unnecessary trailing semicolon
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:46:2
   |
46 | };
   |  ^ help: remove this semicolon
   |
   = note: `#[warn(redundant_semicolons)]` on by default

warning: unnecessary trailing semicolon
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:47:75
   |
47 |         static mut g_testCases: Vec<Vec<HashMap<&str, i64>>> = Vec::new();;
   |                                                                           ^ help: remove this semicolon

warning: unnecessary trailing semicolon
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:60:2
   |
60 | };
   |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:73:2
   |
73 | };
   |  ^ help: remove this semicolon

warning: unnecessary trailing semicolon
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:83:2
   |
83 | };
   |  ^ help: remove this semicolon

warning: unnecessary parentheses around `return` value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:45:12
   |
45 |     return (n / d)
   |            ^     ^
   |
   = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
   |
45 -     return (n / d)
45 +     return n / d
   |

warning: unnecessary parentheses around `while` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:51:11
   |
51 |     while (i < (ts.len() as i64)) {
   |           ^                     ^
   |
help: remove these parentheses
   |
51 -     while (i < (ts.len() as i64)) {
51 +     while i < (ts.len() as i64) {
   |

warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:54:12
   |
54 |         if (i < ((ts.len() as i64) - 1)) {
   |            ^                           ^
   |
help: remove these parentheses
   |
54 -         if (i < ((ts.len() as i64) - 1)) {
54 +         if i < ((ts.len() as i64) - 1) {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:57:13
   |
57 |         i = (i + 1);
   |             ^     ^
   |
help: remove these parentheses
   |
57 -         i = (i + 1);
57 +         i = i + 1;
   |

warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:62:8
   |
62 |     if (coef == 1) {
   |        ^         ^
   |
help: remove these parentheses
   |
62 -     if (coef == 1) {
62 +     if coef == 1 {
   |

warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:65:8
   |
65 |     if (coef < 0) {
   |        ^        ^
   |
help: remove these parentheses
   |
65 -     if (coef < 0) {
65 +     if coef < 0 {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:68:23
   |
68 |     let mut ca: i64 = (coef / 2);
   |                       ^        ^
   |
help: remove these parentheses
   |
68 -     let mut ca: i64 = (coef / 2);
68 +     let mut ca: i64 = coef / 2;
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:69:23
   |
69 |     let mut cb: i64 = (coef - ca);
   |                       ^         ^
   |
help: remove these parentheses
   |
69 -     let mut cb: i64 = (coef - ca);
69 +     let mut cb: i64 = coef - ca;
   |

warning: unnecessary parentheses around `return` value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:72:12
   |
72 |     return ((a + b) / (1 - (a * b)))
   |            ^                       ^
   |
help: remove these parentheses
   |
72 -     return ((a + b) / (1 - (a * b)))
72 +     return (a + b) / (1 - (a * b))
   |

warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:75:8
   |
75 |     if ((m.len() as i64) == 1) {
   |        ^                     ^
   |
help: remove these parentheses
   |
75 -     if ((m.len() as i64) == 1) {
75 +     if (m.len() as i64) == 1 {
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:79:20
   |
79 |     let mut half = ((m.len() as i64) / 2);
   |                    ^                    ^
   |
help: remove these parentheses
   |
79 -     let mut half = ((m.len() as i64) / 2);
79 +     let mut half = (m.len() as i64) / 2;
   |

warning: unnecessary parentheses around `return` value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:82:12
   |
82 |     return ((a + b) / (1 - (a * b)))
   |            ^                       ^
   |
help: remove these parentheses
   |
82 -     return ((a + b) / (1 - (a * b)))
82 +     return (a + b) / (1 - (a * b))
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:89:32
   |
89 |         let duration_us: i64 = ((_end - _start) / 1000);
   |                                ^                      ^
   |
help: remove these parentheses
   |
89 -         let duration_us: i64 = ((_end - _start) / 1000);
89 +         let duration_us: i64 = (_end - _start) / 1000;
   |

warning: unnecessary parentheses around assigned value
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:90:33
   |
90 |         let memory_bytes: i64 = (_end_mem - _start_mem);
   |                                 ^                     ^
   |
help: remove these parentheses
   |
90 -         let memory_bytes: i64 = (_end_mem - _start_mem);
90 +         let memory_bytes: i64 = _end_mem - _start_mem;
   |

error[E0308]: mismatched types
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:41:33
   |
41 | ...tCases = vec![vec![HashMap::from([(String::from("a"), 1), (String::from("n"), 1), (String::from("d"), 2)]), HashMap::from([(String::fr...
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `HashMap<&str, i64>`, found `HashMap<String, {integer}>`
   |
   = note: expected struct `HashMap<&str, i64>`
              found struct `HashMap<String, {integer}>`

error[E0308]: mismatched types
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:41:217
   |
41 | ...("d"), 3)])], vec![HashMap::from([(String::from("a"), 2), (String::from("n"), 1), (String::from("d"), 3)]), HashMap::from([(String::fr...
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `HashMap<&str, i64>`, found `HashMap<String, {integer}>`
   |
   = note: expected struct `HashMap<&str, i64>`
              found struct `HashMap<String, {integer}>`

error[E0308]: mismatched types
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:41:401
   |
41 | ...("d"), 7)])], vec![HashMap::from([(String::from("a"), 4), (String::from("n"), 1), (String::from("d"), 5)]), HashMap::from([(String::fr...
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `HashMap<&str, i64>`, found `HashMap<String, {integer}>`
   |
   = note: expected struct `HashMap<&str, i64>`
              found struct `HashMap<String, {integer}>`

error[E0308]: mismatched types
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:41:588
   |
41 | ...d"), 239)])], vec![HashMap::from([(String::from("a"), 5), (String::from("n"), 1), (String::from("d"), 7)]), HashMap::from([(String::fr...
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `HashMap<&str, i64>`, found `HashMap<String, {integer}>`
   |
   = note: expected struct `HashMap<&str, i64>`
              found struct `HashMap<String, {integer}>`

error[E0308]: mismatched types
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:41:773
   |
41 | ..."d"), 79)])], vec![HashMap::from([(String::from("a"), 1), (String::from("n"), 1), (String::from("d"), 2)]), HashMap::from([(String::fr...
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `HashMap<&str, i64>`, found `HashMap<String, {integer}>`
   |
   = note: expected struct `HashMap<&str, i64>`
              found struct `HashMap<String, {integer}>`

error[E0308]: mismatched types
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:41:1046
   |
41 | ...("d"), 8)])], vec![HashMap::from([(String::from("a"), 4), (String::from("n"), 1), (String::from("d"), 5)]), HashMap::from([(String::fr...
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `HashMap<&str, i64>`, found `HashMap<String, {integer}>`
   |
   = note: expected struct `HashMap<&str, i64>`
              found struct `HashMap<String, {integer}>`

error[E0308]: mismatched types
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:41:1322
   |
41 | ..."d"), 99)])], vec![HashMap::from([(String::from("a"), 5), (String::from("n"), 1), (String::from("d"), 7)]), HashMap::from([(String::fr...
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `HashMap<&str, i64>`, found `HashMap<String, {integer}>`
   |
   = note: expected struct `HashMap<&str, i64>`
              found struct `HashMap<String, {integer}>`

error[E0308]: mismatched types
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:41:1599
   |
41 | ..."), 4443)])], vec![HashMap::from([(String::from("a"), 6), (String::from("n"), 1), (String::from("d"), 8)]), HashMap::from([(String::fr...
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `HashMap<&str, i64>`, found `HashMap<String, {integer}>`
   |
   = note: expected struct `HashMap<&str, i64>`
              found struct `HashMap<String, {integer}>`

error[E0308]: mismatched types
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:41:1875
   |
41 | ...d"), 239)])], vec![HashMap::from([(String::from("a"), 8), (String::from("n"), 1), (String::from("d"), 10)]), HashMap::from([(String::f...
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `HashMap<&str, i64>`, found `HashMap<String, {integer}>`
   |
   = note: expected struct `HashMap<&str, i64>`
              found struct `HashMap<String, {integer}>`

error[E0308]: mismatched types
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:41:2155
   |
41 | ...), 515)])], vec![HashMap::from([(String::from("a"), 12), (String::from("n"), 1), (String::from("d"), 18)]), HashMap::from([(String::fr...
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `HashMap<&str, i64>`, found `HashMap<String, {integer}>`
   |
   = note: expected struct `HashMap<&str, i64>`
              found struct `HashMap<String, {integer}>`

error[E0308]: mismatched types
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:41:2434
   |
41 | ...), 239)])], vec![HashMap::from([(String::from("a"), 16), (String::from("n"), 1), (String::from("d"), 21)]), HashMap::from([(String::fr...
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `HashMap<&str, i64>`, found `HashMap<String, {integer}>`
   |
   = note: expected struct `HashMap<&str, i64>`
              found struct `HashMap<String, {integer}>`

error[E0308]: mismatched types
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:41:2714
   |
41 | ..., 1042)])], vec![HashMap::from([(String::from("a"), 22), (String::from("n"), 1), (String::from("d"), 28)]), HashMap::from([(String::fr...
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `HashMap<&str, i64>`, found `HashMap<String, {integer}>`
   |
   = note: expected struct `HashMap<&str, i64>`
              found struct `HashMap<String, {integer}>`

error[E0308]: mismatched types
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:41:3090
   |
41 | ... 11018)])], vec![HashMap::from([(String::from("a"), 22), (String::from("n"), 1), (String::from("d"), 38)]), HashMap::from([(String::fr...
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `HashMap<&str, i64>`, found `HashMap<String, {integer}>`
   |
   = note: expected struct `HashMap<&str, i64>`
              found struct `HashMap<String, {integer}>`

error[E0308]: mismatched types
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:41:3372
   |
41 | ..., 8149)])], vec![HashMap::from([(String::from("a"), 44), (String::from("n"), 1), (String::from("d"), 57)]), HashMap::from([(String::fr...
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `HashMap<&str, i64>`, found `HashMap<String, {integer}>`
   |
   = note: expected struct `HashMap<&str, i64>`
              found struct `HashMap<String, {integer}>`

error[E0308]: mismatched types
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:41:3747
   |
41 | ... 12943)])], vec![HashMap::from([(String::from("a"), 88), (String::from("n"), 1), (String::from("d"), 172)]), HashMap::from([(String::f...
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `HashMap<&str, i64>`, found `HashMap<String, {integer}>`
   |
   = note: expected struct `HashMap<&str, i64>`
              found struct `HashMap<String, {integer}>`

error[E0308]: mismatched types
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:41:4216
   |
41 | ... 12943)])], vec![HashMap::from([(String::from("a"), 88), (String::from("n"), 1), (String::from("d"), 172)]), HashMap::from([(String::f...
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `HashMap<&str, i64>`, found `HashMap<String, {integer}>`
   |
   = note: expected struct `HashMap<&str, i64>`
              found struct `HashMap<String, {integer}>`

error[E0308]: mismatched types
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:85:91
   |
85 | ...ormat!("{}{}", "tan ", format(ts.clone())), " = "), tans(ts.clone()).to_string()));
   |                           ------ ^^^^^^^^^^ expected `Vec<HashMap<String, i64>>`, found `Vec<HashMap<&str, i64>>`
   |                           |
   |                           arguments to this function are incorrect
   |
   = note: expected struct `Vec<HashMap<String, _>>`
              found struct `Vec<HashMap<&str, _>>`
note: function defined here
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:48:19
   |
48 |         unsafe fn format(mut ts: Vec<HashMap<String, i64>>) -> String {
   |                   ^^^^^^ ---------------------------------

error[E0308]: mismatched types
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:85:118
   |
85 | ...t(ts.clone())), " = "), tans(ts.clone()).to_string()));
   |                            ---- ^^^^^^^^^^ expected `Vec<HashMap<String, i64>>`, found `Vec<HashMap<&str, i64>>`
   |                            |
   |                            arguments to this function are incorrect
   |
   = note: expected struct `Vec<HashMap<String, _>>`
              found struct `Vec<HashMap<&str, _>>`
note: function defined here
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:74:19
   |
74 |         unsafe fn tans(mut m: Vec<HashMap<String, i64>>) -> i64 {
   |                   ^^^^ --------------------------------

error[E0658]: use of unstable library feature `str_as_str`
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:53:140
   |
53 | ... format!("{}{}", format!("{}{}", format!("{}{}", s, "{"), t["a".as_str()].to_string()), " "), t["n".as_str()].to_string()), " "), t["d...
   |                                                                    ^^^^^^
   |
   = note: see issue #130366 <https://github.com/rust-lang/rust/issues/130366> for more information

error[E0658]: use of unstable library feature `str_as_str`
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:53:176
   |
53 | ...mat!("{}{}", s, "{"), t["a".as_str()].to_string()), " "), t["n".as_str()].to_string()), " "), t["d".as_str()].to_string()), "}");
   |                                                                    ^^^^^^
   |
   = note: see issue #130366 <https://github.com/rust-lang/rust/issues/130366> for more information

error[E0658]: use of unstable library feature `str_as_str`
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:53:212
   |
53 | ...].to_string()), " "), t["n".as_str()].to_string()), " "), t["d".as_str()].to_string()), "}");
   |                                                                    ^^^^^^
   |
   = note: see issue #130366 <https://github.com/rust-lang/rust/issues/130366> for more information

error[E0658]: use of unstable library feature `str_as_str`
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:77:30
   |
77 |         return tanEval(t["a".as_str()], br(t["n".as_str()], t["d".as_str()]))
   |                              ^^^^^^
   |
   = note: see issue #130366 <https://github.com/rust-lang/rust/issues/130366> for more information

error[E0658]: use of unstable library feature `str_as_str`
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:77:50
   |
77 |         return tanEval(t["a".as_str()], br(t["n".as_str()], t["d".as_str()]))
   |                                                  ^^^^^^
   |
   = note: see issue #130366 <https://github.com/rust-lang/rust/issues/130366> for more information

error[E0658]: use of unstable library feature `str_as_str`
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:77:67
   |
77 |         return tanEval(t["a".as_str()], br(t["n".as_str()], t["d".as_str()]))
   |                                                                   ^^^^^^
   |
   = note: see issue #130366 <https://github.com/rust-lang/rust/issues/130366> for more information

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:44:22
   |
44 |         unsafe fn br(mut n: i64, mut d: i64) -> i64 {
   |                      ----^
   |                      |
   |                      help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:44:34
   |
44 |         unsafe fn br(mut n: i64, mut d: i64) -> i64 {
   |                                  ----^
   |                                  |
   |                                  help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:48:26
   |
48 |         unsafe fn format(mut ts: Vec<HashMap<String, i64>>) -> String {
   |                          ----^^
   |                          |
   |                          help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:52:13
   |
52 |         let mut t: HashMap<String, i64> = ts[i as usize].clone();
   |             ----^
   |             |
   |             help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:61:27
   |
61 |         unsafe fn tanEval(mut coef: i64, mut f: i64) -> i64 {
   |                           ----^^^^
   |                           |
   |                           help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:61:42
   |
61 |         unsafe fn tanEval(mut coef: i64, mut f: i64) -> i64 {
   |                                          ----^
   |                                          |
   |                                          help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:68:9
   |
68 |     let mut ca: i64 = (coef / 2);
   |         ----^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:69:9
   |
69 |     let mut cb: i64 = (coef - ca);
   |         ----^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:70:9
   |
70 |     let mut a: i64 = tanEval(ca, f);
   |         ----^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:71:9
   |
71 |     let mut b: i64 = tanEval(cb, f);
   |         ----^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:74:24
   |
74 |         unsafe fn tans(mut m: Vec<HashMap<String, i64>>) -> i64 {
   |                        ----^
   |                        |
   |                        help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:76:13
   |
76 |         let mut t: HashMap<String, i64> = m[0 as usize].clone();
   |             ----^
   |             |
   |             help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:79:9
   |
79 |     let mut half = ((m.len() as i64) / 2);
   |         ----^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:80:9
   |
80 |     let mut a: i64 = tans(m[0 as usize..half as usize].to_vec());
   |         ----^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> /workspace/mochi/tests/rosetta/transpiler/Rust/check-machin-like-formulas.rs:81:9
   |
81 |     let mut b: i64 = tans(m[half as usize..].to_vec());
   |         ----^
   |         |
   |         help: remove this `mut`

error: aborting due to 24 previous errors; 34 warnings emitted

Some errors have detailed explanations: E0308, E0658.
For more information about an error, try `rustc --explain E0308`.
