(* Generated by Mochi transpiler v0.10.37 on 2025-07-22 20:39 +0700 *)

exception Break
exception Continue

let () =
  let doors = ref [] in
  (try for i = 0 to (100 - 1) do
    try
  doors := List.append !doors [false];
    with Continue -> ()
  done with Break -> ());
  (try for pass = 1 to (101 - 1) do
    try
  let idx = ref (pass - 1) in
  (try while (!idx < 100) do
    try
  doors := (List.mapi (fun i x -> if i = !idx then not (List.nth (!doors) !idx) else x) (!doors));
  idx := (!idx + pass);
    with Continue -> ()
  done with Break -> ());
    with Continue -> ()
  done with Break -> ());
  (try for row = 0 to (10 - 1) do
    try
  let line = ref "" in
  (try for col = 0 to (10 - 1) do
    try
  let idx = ((row * 10) + col) in
  if List.nth (!doors) idx then (
  line := (!line ^ "1");
  ) else (
  line := (!line ^ "0");
  );
  if (col < 9) then (
  line := (!line ^ " ");
  );
    with Continue -> ()
  done with Break -> ());
  print_endline !line;
    with Continue -> ()
  done with Break -> ());
