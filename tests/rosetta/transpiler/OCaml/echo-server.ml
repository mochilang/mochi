(* Generated by Mochi transpiler v0.10.56 on 2025-08-03 15:40 +0700 *)


let rec __show v =
  let open Obj in
  let rec list_aux o =
    if is_int o && (magic (obj o) : int) = 0 then "" else
      let hd = field o 0 in
      let tl = field o 1 in
      let rest = list_aux tl in
      if rest = "" then __show (obj hd) else __show (obj hd) ^ "; " ^ rest
  in
  let r = repr v in
  if is_int r then
    let i = (magic v : int) in
    if i = 0 || i = 1 then string_of_bool (i <> 0)
    else string_of_int i
  else
  match tag r with
  | 0 -> if size r = 0 then "[]" else "[" ^ list_aux r ^ "]"
  | 252 -> (magic v : string)
  | 253 -> string_of_float (magic v)
  | _ -> "<value>"


let nil = Obj.repr 0

exception Break
exception Continue

exception Return

let rec echo idx msgs =
  let __ret = ref (Obj.magic 0) in
  (try
  let idx = (Obj.magic idx : int) in
  print_endline (((string_of_int (idx)) ^ ": 127.0.0.1:12321 <-> 127.0.0.1"));
  (try List.iter (fun msg ->
    try
  print_endline (__show msg);
    with Continue -> ()) (msgs) with Break -> ());
  print_endline (((string_of_int (idx)) ^ ": closed"));
    !__ret
  with Return -> !__ret)

and main () =
  let __ret = ref (Obj.magic 0) in
  (try
  ignore (echo (Obj.repr (0)) (["hello"]));
    !__ret
  with Return -> !__ret)


let () =
  ignore (main ());
  ()
