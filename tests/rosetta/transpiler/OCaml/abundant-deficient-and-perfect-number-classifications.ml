(* Generated by Mochi transpiler v0.10.39 on 2025-07-24 14:08 UTC *)


let rec __show v =
  let open Obj in
  let rec list_aux o =
    if is_int o && (magic (obj o) : int) = 0 then "" else
      let hd = field o 0 in
      let tl = field o 1 in
      let rest = list_aux tl in
      if rest = "" then __show (obj hd) else __show (obj hd) ^ "; " ^ rest
  in
  let r = repr v in
  if is_int r then string_of_int (magic v) else
  match tag r with
  | 0 -> if size r = 0 then "[]" else "[" ^ list_aux r ^ "]"
  | 252 -> (magic v : string)
  | 253 -> string_of_float (magic v)
  | _ -> "<value>"

exception Break
exception Continue

exception Return

let rec pfacSum i =
  let __ret = ref 0 in
  (try
  let sum = ref (0) in
  let p = ref (1) in
  (try while (!p <= (i / 2)) do
    try
  if ((i mod !p) = 0) then (
  sum := (!sum + !p);
  );
  p := (!p + 1);
    with Continue -> ()
  done with Break -> ());
  __ret := !sum; raise Return
  with Return -> !__ret)

let rec main () =
  let __ret = ref (Obj.magic 0) in
  (try
  let d = ref (0) in
  let a = ref (0) in
  let pnum = ref (0) in
  let i = ref (1) in
  (try while (!i <= 20000) do
    try
  let j = pfacSum (!i) in
  if (j < !i) then (
  d := (!d + 1);
  );
  if (j = !i) then (
  pnum := (!pnum + 1);
  );
  if (j > !i) then (
  a := (!a + 1);
  );
  i := (!i + 1);
    with Continue -> ()
  done with Break -> ());
  print_endline ((("There are " ^ (string_of_int (!d))) ^ " deficient numbers between 1 and 20000"));
  print_endline ((("There are " ^ (string_of_int (!a))) ^ " abundant numbers  between 1 and 20000"));
  print_endline ((("There are " ^ (string_of_int (!pnum))) ^ " perfect numbers between 1 and 20000"));
    !__ret
  with Return -> !__ret)

let () =
  ignore (main ());
