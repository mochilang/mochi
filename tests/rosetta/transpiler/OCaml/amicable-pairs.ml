(* Generated by Mochi transpiler v0.10.39 on 2025-07-25 08:23 +0700 *)


let rec __show v =
  let open Obj in
  let rec list_aux o =
    if is_int o && (magic (obj o) : int) = 0 then "" else
      let hd = field o 0 in
      let tl = field o 1 in
      let rest = list_aux tl in
      if rest = "" then __show (obj hd) else __show (obj hd) ^ "; " ^ rest
  in
  let r = repr v in
  if is_int r then string_of_int (magic v) else
  match tag r with
  | 0 -> if size r = 0 then "[]" else "[" ^ list_aux r ^ "]"
  | 252 -> (magic v : string)
  | 253 -> string_of_float (magic v)
  | _ -> "<value>"

exception Break
exception Continue

exception Return

let rec pfacSum i =
  let __ret = ref 0 in
  (try
  let sum = ref (0) in
  let p = ref (1) in
  (try while (!p <= (i / 2)) do
    try
  if ((i mod !p) = 0) then (
  sum := (!sum + !p);
  );
  p := (!p + 1);
    with Continue -> ()
  done with Break -> ());
  __ret := !sum; raise Return
  with Return -> !__ret)

let rec pad n width =
  let __ret = ref "" in
  (try
  let s = ref ((string_of_int (n))) in
  (try while (String.length (!s) < width) do
    try
  s := (" " ^ !s);
    with Continue -> ()
  done with Break -> ());
  __ret := !s; raise Return
  with Return -> !__ret)

let rec main () =
  let __ret = ref (Obj.magic 0) in
  (try
  let sums = ref ([]) in
  let i = ref (0) in
  (try while (!i < 20000) do
    try
  sums := List.append !sums [0];
  i := (!i + 1);
    with Continue -> ()
  done with Break -> ());
  i := 1;
  (try while (!i < 20000) do
    try
  sums := (List.mapi (fun __i __x -> if __i = !i then pfacSum (!i) else __x) (!sums));
  i := (!i + 1);
    with Continue -> ()
  done with Break -> ());
  print_endline ("The amicable pairs below 20,000 are:");
  let n = ref (2) in
  (try while (!n < 19999) do
    try
  let m = List.nth (!sums) (!n) in
  if (((m > !n) && (m < 20000)) && (!n = List.nth (!sums) (m))) then (
  print_endline (((("  " ^ pad (!n) (5)) ^ " and ") ^ pad (m) (5)));
  );
  n := (!n + 1);
    with Continue -> ()
  done with Break -> ());
    !__ret
  with Return -> !__ret)

let () =
  ignore (main ());
