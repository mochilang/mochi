(* Generated by Mochi transpiler v0.10.52 on 2025-08-01 18:59 UTC *)


let rec __show v =
  let open Obj in
  let rec list_aux o =
    if is_int o && (magic (obj o) : int) = 0 then "" else
      let hd = field o 0 in
      let tl = field o 1 in
      let rest = list_aux tl in
      if rest = "" then __show (obj hd) else __show (obj hd) ^ "; " ^ rest
  in
  let r = repr v in
  if is_int r then
    let i = (magic v : int) in
    if i = 0 || i = 1 then string_of_bool (i <> 0)
    else string_of_int i
  else
  match tag r with
  | 0 -> if size r = 0 then "[]" else "[" ^ list_aux r ^ "]"
  | 252 -> (magic v : string)
  | 253 -> string_of_float (magic v)
  | _ -> "<value>"


let nil = Obj.repr 0


let _now_seed = ref 0
let _now_seeded = ref false

let _now () =
  if not !_now_seeded then (
    match Sys.getenv_opt "MOCHI_NOW_SEED" with
    | Some s -> (try _now_seed := int_of_string s; _now_seeded := true with _ -> ())
    | None -> ()
  );
  if !_now_seeded then (
    _now_seed := (!(_now_seed) * 1664525 + 1013904223) mod 2147483647;
    !_now_seed
  ) else int_of_float (Sys.time () *. 1000000000.)


let _mem () =
  int_of_float (Gc.allocated_bytes ())

exception Break
exception Continue

exception Return

let rec collapse s =
  let __ret = ref [] in
  (try
  let i = ref (0) in
  let prev = ref ("") in
  let res = ref ("") in
  let orig = ref (String.length (s)) in
  (try while (!i < String.length (s)) do
    try
  let ch = String.sub (s) !i ((!i + 1) - !i) in
  if (ch <> !prev) then (
  res := (!res ^ ch);
  prev := ch;
  );
  i := (!i + 1);
    with Continue -> ()
  done with Break -> ());
  __ret := (Obj.magic ([Obj.repr (!res); Obj.repr (!orig); Obj.repr (String.length (!res))]) : Obj.t list); raise Return
  with Return -> !__ret)

and main () =
  let __ret = ref (Obj.magic 0) in
  (try
  let strings = ref ([""; "\"If I were two-faced, would I be wearing this one?\" --- Abraham Lincoln "; "..111111111111111111111111111111111111111111111111111111111111111777888"; "I never give 'em hell, I just tell the truth, and they think it's hell. "; "                                                   ---  Harry S Truman "; "The better the 4-wheel drive, the further you'll be from help when ya get stuck!"; "headmistressship"; "aardvark"; "😍😀🙌💃😍😍😍🙌"]) in
  let idx = ref (0) in
  (try while (!idx < List.length (!strings)) do
    try
  let s = List.nth (!strings) (!idx) in
  let r = ref (collapse (s)) in
  let cs = List.nth (!r) (0) in
  let olen = List.nth (!r) (1) in
  let clen = List.nth (!r) (2) in
  print_endline ((((("original : length = " ^ __show (olen)) ^ ", string = «««") ^ s) ^ "»»»"));
  print_endline ((((("collapsed: length = " ^ __show (clen)) ^ ", string = «««") ^ __show (cs)) ^ "»»»\n"));
  idx := (!idx + 1);
    with Continue -> ()
  done with Break -> ());
    !__ret
  with Return -> !__ret)


let () =
  let mem_start = _mem () in
  let start = _now () in
  ignore (main ());
  let finish = _now () in
  let mem_end = _mem () in
  let dur = (finish - start) / 1000 in
  let mem_bytes = max 0 (mem_end - mem_start) in
  Printf.printf "{\n  \"duration_us\": %d,\n  \"memory_bytes\": %d,\n  \"name\": \"%s\"\n}\n" dur mem_bytes "main";
  ()