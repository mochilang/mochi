(* Generated by Mochi transpiler v0.10.39 on 2025-07-24 17:44 UTC *)


let rec __show v =
  let open Obj in
  let rec list_aux o =
    if is_int o && (magic (obj o) : int) = 0 then "" else
      let hd = field o 0 in
      let tl = field o 1 in
      let rest = list_aux tl in
      if rest = "" then __show (obj hd) else __show (obj hd) ^ "; " ^ rest
  in
  let r = repr v in
  if is_int r then string_of_int (magic v) else
  match tag r with
  | 0 -> if size r = 0 then "[]" else "[" ^ list_aux r ^ "]"
  | 252 -> (magic v : string)
  | 253 -> string_of_float (magic v)
  | _ -> "<value>"

exception Break
exception Continue

exception Return

let rec search_user directory username =
  let __ret = ref [] in
  (try
  __ret := (List.assoc (username) directory); raise Return
  with Return -> !__ret)

let rec main () =
  let __ret = ref (Obj.magic 0) in
  (try
  let client = ref ([("Base", Obj.repr "dc=example,dc=com"); ("Host", Obj.repr "ldap.example.com"); ("Port", Obj.repr 389); ("GroupFilter", Obj.repr "(memberUid=%s)")]) in
  let directory = ref ([("username", ["admins"; "users"]); ("john", ["users"])]) in
  let groups = ref (search_user (!directory) ("username")) in
  if (List.length (!groups) > 0) then (
  let out = ref ("Groups: [") in
  let i = ref (0) in
  (try while (!i < List.length (!groups)) do
    try
  out := (((!out ^ "\"") ^ List.nth (!groups) (!i)) ^ "\"");
  if (!i < (List.length (!groups) - 1)) then (
  out := (!out ^ ", ");
  );
  i := (!i + 1);
    with Continue -> ()
  done with Break -> ());
  out := (!out ^ "]");
  print_endline (__show !out);
  ) else (
  print_endline ("User not found");
  );
    !__ret
  with Return -> !__ret)

let () =
  ignore (main ());
