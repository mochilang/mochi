(* Generated by Mochi transpiler v0.10.56 on 2025-08-04 07:36 +0700 *)


let rec __show v =
  let open Obj in
  let rec list_aux o =
    if is_int o && (magic (obj o) : int) = 0 then "" else
      let hd = field o 0 in
      let tl = field o 1 in
      let rest = list_aux tl in
      if rest = "" then __show (obj hd) else __show (obj hd) ^ "; " ^ rest
  in
  let r = repr v in
  if is_int r then
    let i = (magic v : int) in
    if i = 0 || i = 1 then string_of_bool (i <> 0)
    else string_of_int i
  else
  match tag r with
  | 0 -> if size r = 0 then "[]" else "[" ^ list_aux r ^ "]"
  | 252 -> (magic v : string)
  | 253 -> string_of_float (magic v)
  | _ -> "<value>"


let nil = Obj.repr 0

exception Return

let rec foo () =
  let __ret = ref "" in
  (try
  print_endline ("let's foo...");
  let a = ref (([] : int list)) in
  if (12 >= List.length (!a)) then (
  __ret := (Obj.magic (("runtime error: index out of range [12] with length " ^ (string_of_int (List.length (!a))))) : string); raise Return
  );
  a := (List.mapi (fun __i __x -> if __i = 12 then 0 else __x) (!a));
  __ret := (Obj.magic ("") : string); raise Return
  with Return -> !__ret)

and main () =
  let __ret = ref (Obj.magic 0) in
  (try
  let err = foo () in
  if (String.length (err) > 0) then (
  print_endline (("Recovered from " ^ err));
  );
  print_endline ("glad that's over.");
    !__ret
  with Return -> !__ret)


let () =
  ignore (main ());
  ()