(* Generated by Mochi transpiler v0.10.39 on 2025-07-25 08:23 +0700 *)


let rec __show v =
  let open Obj in
  let rec list_aux o =
    if is_int o && (magic (obj o) : int) = 0 then "" else
      let hd = field o 0 in
      let tl = field o 1 in
      let rest = list_aux tl in
      if rest = "" then __show (obj hd) else __show (obj hd) ^ "; " ^ rest
  in
  let r = repr v in
  if is_int r then string_of_int (magic v) else
  match tag r with
  | 0 -> if size r = 0 then "[]" else "[" ^ list_aux r ^ "]"
  | 252 -> (magic v : string)
  | 253 -> string_of_float (magic v)
  | _ -> "<value>"

exception Break
exception Continue

exception Return

let rec angleDiff b1 b2 =
  let __ret = ref 0.0 in
  (try
  let diff = (b2 -. b1) in
  __ret := (((((diff mod 360.0) +. 360.0) +. 180.0) mod 360.0) -. 180.0); raise Return
  with Return -> !__ret)

let testCases = ref ([[20.0; 45.0]; [(float_of_int (0) -. 45.0); 45.0]; [(float_of_int (0) -. 85.0); 90.0]; [(float_of_int (0) -. 95.0); 90.0]; [(float_of_int (0) -. 45.0); 125.0]; [(float_of_int (0) -. 45.0); 145.0]; [29.4803; (float_of_int (0) -. 88.6381)]; [(float_of_int (0) -. 78.3251); (float_of_int (0) -. 159.036)]; [(float_of_int (0) -. 70099.74233810938); 29840.67437876723]; [(float_of_int (0) -. 165313.6666297357); 33693.9894517456]; [1174.8380510598456; (float_of_int (0) -. 154146.66490124757)]; [60175.77306795546; 42213.07192354373]])
let () =
  (try List.iter (fun tc ->
    try
  print_endline (string_of_float (angleDiff (List.nth (tc) (0)) (List.nth (tc) (1))));
    with Continue -> ()) !testCases with Break -> ());
