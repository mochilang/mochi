(* Generated by Mochi transpiler v0.10.56 on 2025-08-04 07:36 +0700 *)


let rec __show v =
  let open Obj in
  let rec list_aux o =
    if is_int o && (magic (obj o) : int) = 0 then "" else
      let hd = field o 0 in
      let tl = field o 1 in
      let rest = list_aux tl in
      if rest = "" then __show (obj hd) else __show (obj hd) ^ "; " ^ rest
  in
  let r = repr v in
  if is_int r then
    let i = (magic v : int) in
    if i = 0 || i = 1 then string_of_bool (i <> 0)
    else string_of_int i
  else
  match tag r with
  | 0 -> if size r = 0 then "[]" else "[" ^ list_aux r ^ "]"
  | 252 -> (magic v : string)
  | 253 -> string_of_float (magic v)
  | _ -> "<value>"


let nil = Obj.repr 0

exception Break
exception Continue

exception Return

let rec bottles n =
  let __ret = ref "" in
  (try
  let n = (Obj.magic n : int) in
  if (n = 0) then (
  __ret := (Obj.magic ("No more bottles") : string); raise Return
  );
  if (n = 1) then (
  __ret := (Obj.magic ("1 bottle") : string); raise Return
  );
  __ret := (Obj.magic (((string_of_int (n)) ^ " bottles")) : string); raise Return
  with Return -> !__ret)

and sing99 () =
  let __ret = ref (Obj.magic 0) in
  (try
  let i = ref (99) in
  (try while (!i > 0) do
    try
  print_endline ((bottles (Obj.repr (!i)) ^ " of beer on the wall"));
  print_endline ((bottles (Obj.repr (!i)) ^ " of beer"));
  print_endline ("Take one down, pass it around");
  print_endline ((bottles (Obj.repr ((!i - 1))) ^ " of beer on the wall"));
  i := (!i - 1);
    with Continue -> ()
  done with Break -> ());
    !__ret
  with Return -> !__ret)

and run code =
  let __ret = ref (Obj.magic 0) in
  (try
  let acc = ref (0) in
  let i = ref (0) in
  (try while (!i < String.length (code)) do
    try
  let ch = String.sub code (!i) ((!i + 1) - !i) in
  if (ch = "H") then (
  print_endline ("Hello, World!");
  ) else (
  if (ch = "Q") then (
  print_endline (__show code);
  ) else (
  if (ch = "9") then (
  ignore (sing99 ());
  ) else (
  if (ch = "+") then (
  acc := (!acc + 1);
  );
  );
  );
  );
  i := (!i + 1);
    with Continue -> ()
  done with Break -> ());
    !__ret
  with Return -> !__ret)

and main () =
  let __ret = ref (Obj.magic 0) in
  (try
  let code = (try read_line () with End_of_file -> "") in
  ignore (run (code));
    !__ret
  with Return -> !__ret)


let () =
  ignore (main ());
  ()