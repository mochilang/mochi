(* Generated by Mochi transpiler v0.10.39 on 2025-07-25 08:23 +0700 *)


let rec __show v =
  let open Obj in
  let rec list_aux o =
    if is_int o && (magic (obj o) : int) = 0 then "" else
      let hd = field o 0 in
      let tl = field o 1 in
      let rest = list_aux tl in
      if rest = "" then __show (obj hd) else __show (obj hd) ^ "; " ^ rest
  in
  let r = repr v in
  if is_int r then string_of_int (magic v) else
  match tag r with
  | 0 -> if size r = 0 then "[]" else "[" ^ list_aux r ^ "]"
  | 252 -> (magic v : string)
  | 253 -> string_of_float (magic v)
  | _ -> "<value>"

exception Break
exception Continue

exception Return

let pi = 3.141592653589793
let rec sinApprox x =
  let __ret = ref 0.0 in
  (try
  let term = ref (x) in
  let sum = ref (x) in
  let n = ref (1) in
  (try while (!n <= 12) do
    try
  let denom = float_of_int ((2 * !n) * ((2 * !n) + 1)) in
  term := ((((-.(!term)) *. x) *. x) /. denom);
  sum := (!sum +. !term);
  n := (!n + 1);
    with Continue -> ()
  done with Break -> ());
  __ret := !sum; raise Return
  with Return -> !__ret)

let dt = 0.01
let s = ref (0.0)
let t1 = ref (0.0)
let k1 = ref (sinApprox (0.0))
let i = ref (1)
let i2 = ref (1)
let () =
  (try while (!i <= 200) do
    try
  let t2 = (float_of_int !i *. dt) in
  let k2 = sinApprox ((t2 *. pi)) in
  s := (!s +. (((!k1 +. k2) *. 0.5) *. (t2 -. !t1)));
  t1 := t2;
  k1 := k2;
  i := (!i + 1);
    with Continue -> ()
  done with Break -> ());
  (try while (!i2 <= 50) do
    try
  let t2 = (2.0 +. (float_of_int !i2 *. dt)) in
  let k2 = 0.0 in
  s := (!s +. (((!k1 +. k2) *. 0.5) *. (t2 -. !t1)));
  t1 := t2;
  k1 := k2;
  i2 := (!i2 + 1);
    with Continue -> ()
  done with Break -> ());
  print_endline (Printf.sprintf "%.15f" (!s));
