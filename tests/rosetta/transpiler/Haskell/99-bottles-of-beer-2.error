run: exit status 1

/workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:91:30: error:
    • Couldn't match expected type: IO [String]
                  with actual type: [[Char]]
    • In the second argument of ‘($!)’, namely
        ‘(take 0 (deref w)
            ++ [((deref w) !! 0) ++ "s"] ++ drop (0 + 1) (deref w))’
      In a stmt of a 'do' block:
        writeIORef w
          $!
            (take 0 (deref w)
               ++ [((deref w) !! 0) ++ "s"] ++ drop (0 + 1) (deref w))
      In the expression:
        do writeIORef w
             $!
               (take 0 (deref w)
                  ++ [((deref w) !! 0) ++ "s"] ++ drop (0 + 1) (deref w))
   |
91 |             writeIORef w $! (take 0 (deref w) ++ [((deref w) !! 0) ++ "s"] ++ drop (0 + 1) (deref w))
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:91:44: error:
    • Couldn't match type: IO [String]
                     with: [[Char]]
      Expected: IORef [[Char]]
        Actual: IORef (IO [String])
    • In the first argument of ‘deref’, namely ‘w’
      In the second argument of ‘take’, namely ‘(deref w)’
      In the first argument of ‘(++)’, namely ‘take 0 (deref w)’
   |
91 |             writeIORef w $! (take 0 (deref w) ++ [((deref w) !! 0) ++ "s"] ++ drop (0 + 1) (deref w))
   |                                            ^

/workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:91:59: error:
    • Couldn't match type: IO [String]
                     with: [[Char]]
      Expected: IORef [[Char]]
        Actual: IORef (IO [String])
    • In the first argument of ‘deref’, namely ‘w’
      In the first argument of ‘(!!)’, namely ‘(deref w)’
      In the first argument of ‘(++)’, namely ‘((deref w) !! 0)’
   |
91 |             writeIORef w $! (take 0 (deref w) ++ [((deref w) !! 0) ++ "s"] ++ drop (0 + 1) (deref w))
   |                                                           ^

/workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:91:99: error:
    • Couldn't match type: IO [String]
                     with: [[Char]]
      Expected: IORef [[Char]]
        Actual: IORef (IO [String])
    • In the first argument of ‘deref’, namely ‘w’
      In the second argument of ‘drop’, namely ‘(deref w)’
      In the second argument of ‘(++)’, namely ‘drop (0 + 1) (deref w)’
   |
91 |             writeIORef w $! (take 0 (deref w) ++ [((deref w) !! 0) ++ "s"] ++ drop (0 + 1) (deref w))
   |                                                                                                   ^

/workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:94:17: error:
    • Couldn't match expected type: IORef [Char]
                  with actual type: IO String
    • In the first argument of ‘return’, namely ‘(join (deref w) " ")’
      In a stmt of a 'do' block: return (join (deref w) " ")
      In the expression:
        do w <- newIORef (fields (deref s))
           if length (deref w) > 0 then
               do writeIORef w
                    $! (take 0 (deref w) ++ ... ++ drop (0 + 1) (deref w))
           else
               return ()
           return (join (deref w) " ")
   |
94 |         return (join (deref w) " ")
   |                 ^^^^^^^^^^^^^^^^^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:94:29: error:
    • Couldn't match type: IO [String]
                     with: [[Char]]
      Expected: IORef [[Char]]
        Actual: IORef (IO [String])
    • In the first argument of ‘deref’, namely ‘w’
      In the first argument of ‘join’, namely ‘(deref w)’
      In the first argument of ‘return’, namely ‘(join (deref w) " ")’
   |
94 |         return (join (deref w) " ")
   |                             ^

/workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:145:38: error:
    • Couldn't match type: [a]
                     with: IORef [Char]
      Expected: IORef (IORef [Char])
        Actual: IORef [a]
    • In the first argument of ‘deref’, namely ‘s’
      In the first argument of ‘fields’, namely ‘(deref s)’
      In the first argument of ‘newIORef’, namely ‘(fields (deref s))’
    • Relevant bindings include
        s :: IORef [a]
          (bound at /workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:134:9)
        a :: IORef [[a]]
          (bound at /workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:107:9)
        p :: [a]
          (bound at /workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:103:6)
        slur :: [a] -> Int -> IO [a]
          (bound at /workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:103:1)
    |
145 |         w <- newIORef (fields (deref s))
    |                                      ^

/workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:146:17: error:
    • Couldn't match expected type: [a]
                  with actual type: IO String
    • In the first argument of ‘return’, namely ‘(join (deref w) " ")’
      In a stmt of a 'do' block: return (join (deref w) " ")
      In the expression:
        do a <- newIORef ([])
           i <- newIORef (1)
           let loop = ...
           loop
           ....
    • Relevant bindings include
        s :: IORef [a]
          (bound at /workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:134:9)
        a :: IORef [[a]]
          (bound at /workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:107:9)
        p :: [a]
          (bound at /workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:103:6)
        slur :: [a] -> Int -> IO [a]
          (bound at /workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:103:1)
    |
146 |         return (join (deref w) " ")
    |                 ^^^^^^^^^^^^^^^^^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:146:29: error:
    • Couldn't match type: IO [String]
                     with: [[Char]]
      Expected: IORef [[Char]]
        Actual: IORef (IO [String])
    • In the first argument of ‘deref’, namely ‘w’
      In the first argument of ‘join’, namely ‘(deref w)’
      In the first argument of ‘return’, namely ‘(join (deref w) " ")’
    |
146 |         return (join (deref w) " ")
    |                             ^

/workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:155:27: error:
    • Couldn't match expected type: [Char]
                  with actual type: IO [a1]
    • In the first argument of ‘(++)’, namely
        ‘slur (numberName (deref i)) (deref i)’
      In the first argument of ‘putStrLn’, namely
        ‘(slur (numberName (deref i)) (deref i)
            ++
              " "
                ++
                  pluralizeFirst (slur "bottle of" (deref i)) (deref i)
                    ++ " " ++ slur "beer on the wall" (deref i))’
      In a stmt of a 'do' block:
        putStrLn
          (slur (numberName (deref i)) (deref i)
             ++
               " "
                 ++
                   pluralizeFirst (slur "bottle of" (deref i)) (deref i)
                     ++ " " ++ slur "beer on the wall" (deref i))
    |
155 |                 putStrLn (slur (numberName (deref i)) (deref i) ++ " " ++ pluralizeFirst (slur "bottle of" (deref i)) (deref i) ++ " " ++ slur "beer on the wall" (deref i))
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:155:33: error:
    • Couldn't match expected type: [a1]
                  with actual type: IO String
    • In the first argument of ‘slur’, namely ‘(numberName (deref i))’
      In the first argument of ‘(++)’, namely
        ‘slur (numberName (deref i)) (deref i)’
      In the first argument of ‘putStrLn’, namely
        ‘(slur (numberName (deref i)) (deref i)
            ++
              " "
                ++
                  pluralizeFirst (slur "bottle of" (deref i)) (deref i)
                    ++ " " ++ slur "beer on the wall" (deref i))’
    |
155 |                 putStrLn (slur (numberName (deref i)) (deref i) ++ " " ++ pluralizeFirst (slur "bottle of" (deref i)) (deref i) ++ " " ++ slur "beer on the wall" (deref i))
    |                                 ^^^^^^^^^^^^^^^^^^^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:155:75: error:
    • Couldn't match expected type: [Char]
                  with actual type: IO (IORef [Char])
    • In the first argument of ‘(++)’, namely
        ‘pluralizeFirst (slur "bottle of" (deref i)) (deref i)’
      In the second argument of ‘(++)’, namely
        ‘pluralizeFirst (slur "bottle of" (deref i)) (deref i)
           ++ " " ++ slur "beer on the wall" (deref i)’
      In the second argument of ‘(++)’, namely
        ‘" "
           ++
             pluralizeFirst (slur "bottle of" (deref i)) (deref i)
               ++ " " ++ slur "beer on the wall" (deref i)’
    |
155 |                 putStrLn (slur (numberName (deref i)) (deref i) ++ " " ++ pluralizeFirst (slur "bottle of" (deref i)) (deref i) ++ " " ++ slur "beer on the wall" (deref i))
    |                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:155:91: error:
    • Couldn't match expected type: IORef (IORef [Char])
                  with actual type: IO [Char]
    • In the first argument of ‘pluralizeFirst’, namely
        ‘(slur "bottle of" (deref i))’
      In the first argument of ‘(++)’, namely
        ‘pluralizeFirst (slur "bottle of" (deref i)) (deref i)’
      In the second argument of ‘(++)’, namely
        ‘pluralizeFirst (slur "bottle of" (deref i)) (deref i)
           ++ " " ++ slur "beer on the wall" (deref i)’
    |
155 |                 putStrLn (slur (numberName (deref i)) (deref i) ++ " " ++ pluralizeFirst (slur "bottle of" (deref i)) (deref i) ++ " " ++ slur "beer on the wall" (deref i))
    |                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:155:139: error:
    • Couldn't match expected type: [Char]
                  with actual type: IO [Char]
    • In the second argument of ‘(++)’, namely
        ‘slur "beer on the wall" (deref i)’
      In the second argument of ‘(++)’, namely
        ‘" " ++ slur "beer on the wall" (deref i)’
      In the second argument of ‘(++)’, namely
        ‘pluralizeFirst (slur "bottle of" (deref i)) (deref i)
           ++ " " ++ slur "beer on the wall" (deref i)’
    |
155 |                 putStrLn (slur (numberName (deref i)) (deref i) ++ " " ++ pluralizeFirst (slur "bottle of" (deref i)) (deref i) ++ " " ++ slur "beer on the wall" (deref i))
    |                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:156:27: error:
    • Couldn't match expected type: [Char]
                  with actual type: IO [a2]
    • In the first argument of ‘(++)’, namely
        ‘slur (numberName (deref i)) (deref i)’
      In the first argument of ‘putStrLn’, namely
        ‘(slur (numberName (deref i)) (deref i)
            ++
              " "
                ++
                  pluralizeFirst (slur "bottle of" (deref i)) (deref i)
                    ++ " " ++ slur "beer" (deref i))’
      In a stmt of a 'do' block:
        putStrLn
          (slur (numberName (deref i)) (deref i)
             ++
               " "
                 ++
                   pluralizeFirst (slur "bottle of" (deref i)) (deref i)
                     ++ " " ++ slur "beer" (deref i))
    |
156 |                 putStrLn (slur (numberName (deref i)) (deref i) ++ " " ++ pluralizeFirst (slur "bottle of" (deref i)) (deref i) ++ " " ++ slur "beer" (deref i))
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:156:33: error:
    • Couldn't match expected type: [a2]
                  with actual type: IO String
    • In the first argument of ‘slur’, namely ‘(numberName (deref i))’
      In the first argument of ‘(++)’, namely
        ‘slur (numberName (deref i)) (deref i)’
      In the first argument of ‘putStrLn’, namely
        ‘(slur (numberName (deref i)) (deref i)
            ++
              " "
                ++
                  pluralizeFirst (slur "bottle of" (deref i)) (deref i)
                    ++ " " ++ slur "beer" (deref i))’
    |
156 |                 putStrLn (slur (numberName (deref i)) (deref i) ++ " " ++ pluralizeFirst (slur "bottle of" (deref i)) (deref i) ++ " " ++ slur "beer" (deref i))
    |                                 ^^^^^^^^^^^^^^^^^^^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:156:75: error:
    • Couldn't match expected type: [Char]
                  with actual type: IO (IORef [Char])
    • In the first argument of ‘(++)’, namely
        ‘pluralizeFirst (slur "bottle of" (deref i)) (deref i)’
      In the second argument of ‘(++)’, namely
        ‘pluralizeFirst (slur "bottle of" (deref i)) (deref i)
           ++ " " ++ slur "beer" (deref i)’
      In the second argument of ‘(++)’, namely
        ‘" "
           ++
             pluralizeFirst (slur "bottle of" (deref i)) (deref i)
               ++ " " ++ slur "beer" (deref i)’
    |
156 |                 putStrLn (slur (numberName (deref i)) (deref i) ++ " " ++ pluralizeFirst (slur "bottle of" (deref i)) (deref i) ++ " " ++ slur "beer" (deref i))
    |                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:156:91: error:
    • Couldn't match expected type: IORef (IORef [Char])
                  with actual type: IO [Char]
    • In the first argument of ‘pluralizeFirst’, namely
        ‘(slur "bottle of" (deref i))’
      In the first argument of ‘(++)’, namely
        ‘pluralizeFirst (slur "bottle of" (deref i)) (deref i)’
      In the second argument of ‘(++)’, namely
        ‘pluralizeFirst (slur "bottle of" (deref i)) (deref i)
           ++ " " ++ slur "beer" (deref i)’
    |
156 |                 putStrLn (slur (numberName (deref i)) (deref i) ++ " " ++ pluralizeFirst (slur "bottle of" (deref i)) (deref i) ++ " " ++ slur "beer" (deref i))
    |                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:156:139: error:
    • Couldn't match expected type: [Char]
                  with actual type: IO [Char]
    • In the second argument of ‘(++)’, namely ‘slur "beer" (deref i)’
      In the second argument of ‘(++)’, namely
        ‘" " ++ slur "beer" (deref i)’
      In the second argument of ‘(++)’, namely
        ‘pluralizeFirst (slur "bottle of" (deref i)) (deref i)
           ++ " " ++ slur "beer" (deref i)’
    |
156 |                 putStrLn (slur (numberName (deref i)) (deref i) ++ " " ++ pluralizeFirst (slur "bottle of" (deref i)) (deref i) ++ " " ++ slur "beer" (deref i))
    |                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:157:27: error:
    • Couldn't match expected type: [Char]
                  with actual type: IO [Char]
    • In the first argument of ‘(++)’, namely
        ‘slur "take one" (deref i)’
      In the first argument of ‘putStrLn’, namely
        ‘(slur "take one" (deref i)
            ++
              " "
                ++
                  slur "down" (deref i) ++ " " ++ slur "pass it around" (deref i))’
      In a stmt of a 'do' block:
        putStrLn
          (slur "take one" (deref i)
             ++
               " "
                 ++ slur "down" (deref i) ++ " " ++ slur "pass it around" (deref i))
    |
157 |                 putStrLn (slur "take one" (deref i) ++ " " ++ slur "down" (deref i) ++ " " ++ slur "pass it around" (deref i))
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:157:63: error:
    • Couldn't match expected type: [Char]
                  with actual type: IO [Char]
    • In the first argument of ‘(++)’, namely ‘slur "down" (deref i)’
      In the second argument of ‘(++)’, namely
        ‘slur "down" (deref i) ++ " " ++ slur "pass it around" (deref i)’
      In the second argument of ‘(++)’, namely
        ‘" "
           ++ slur "down" (deref i) ++ " " ++ slur "pass it around" (deref i)’
    |
157 |                 putStrLn (slur "take one" (deref i) ++ " " ++ slur "down" (deref i) ++ " " ++ slur "pass it around" (deref i))
    |                                                               ^^^^^^^^^^^^^^^^^^^^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:157:95: error:
    • Couldn't match expected type: [Char]
                  with actual type: IO [Char]
    • In the second argument of ‘(++)’, namely
        ‘slur "pass it around" (deref i)’
      In the second argument of ‘(++)’, namely
        ‘" " ++ slur "pass it around" (deref i)’
      In the second argument of ‘(++)’, namely
        ‘slur "down" (deref i) ++ " " ++ slur "pass it around" (deref i)’
    |
157 |                 putStrLn (slur "take one" (deref i) ++ " " ++ slur "down" (deref i) ++ " " ++ slur "pass it around" (deref i))
    |                                                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:158:27: error:
    • Couldn't match expected type: [Char]
                  with actual type: IO [a3]
    • In the first argument of ‘(++)’, namely
        ‘slur (numberName ((deref i) - 1)) (deref i)’
      In the first argument of ‘putStrLn’, namely
        ‘(slur (numberName ((deref i) - 1)) (deref i)
            ++
              " "
                ++
                  pluralizeFirst (slur "bottle of" (deref i)) ((deref i) - 1)
                    ++ " " ++ slur "beer on the wall" (deref i))’
      In a stmt of a 'do' block:
        putStrLn
          (slur (numberName ((deref i) - 1)) (deref i)
             ++
               " "
                 ++
                   pluralizeFirst (slur "bottle of" (deref i)) ((deref i) - 1)
                     ++ " " ++ slur "beer on the wall" (deref i))
    |
158 |                 putStrLn (slur (numberName ((deref i) - 1)) (deref i) ++ " " ++ pluralizeFirst (slur "bottle of" (deref i)) ((deref i) - 1) ++ " " ++ slur "beer on the wall" (deref i))
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:158:33: error:
    • Couldn't match expected type: [a3]
                  with actual type: IO String
    • In the first argument of ‘slur’, namely
        ‘(numberName ((deref i) - 1))’
      In the first argument of ‘(++)’, namely
        ‘slur (numberName ((deref i) - 1)) (deref i)’
      In the first argument of ‘putStrLn’, namely
        ‘(slur (numberName ((deref i) - 1)) (deref i)
            ++
              " "
                ++
                  pluralizeFirst (slur "bottle of" (deref i)) ((deref i) - 1)
                    ++ " " ++ slur "beer on the wall" (deref i))’
    |
158 |                 putStrLn (slur (numberName ((deref i) - 1)) (deref i) ++ " " ++ pluralizeFirst (slur "bottle of" (deref i)) ((deref i) - 1) ++ " " ++ slur "beer on the wall" (deref i))
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:158:81: error:
    • Couldn't match expected type: [Char]
                  with actual type: IO (IORef [Char])
    • In the first argument of ‘(++)’, namely
        ‘pluralizeFirst (slur "bottle of" (deref i)) ((deref i) - 1)’
      In the second argument of ‘(++)’, namely
        ‘pluralizeFirst (slur "bottle of" (deref i)) ((deref i) - 1)
           ++ " " ++ slur "beer on the wall" (deref i)’
      In the second argument of ‘(++)’, namely
        ‘" "
           ++
             pluralizeFirst (slur "bottle of" (deref i)) ((deref i) - 1)
               ++ " " ++ slur "beer on the wall" (deref i)’
    |
158 |                 putStrLn (slur (numberName ((deref i) - 1)) (deref i) ++ " " ++ pluralizeFirst (slur "bottle of" (deref i)) ((deref i) - 1) ++ " " ++ slur "beer on the wall" (deref i))
    |                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:158:97: error:
    • Couldn't match expected type: IORef (IORef [Char])
                  with actual type: IO [Char]
    • In the first argument of ‘pluralizeFirst’, namely
        ‘(slur "bottle of" (deref i))’
      In the first argument of ‘(++)’, namely
        ‘pluralizeFirst (slur "bottle of" (deref i)) ((deref i) - 1)’
      In the second argument of ‘(++)’, namely
        ‘pluralizeFirst (slur "bottle of" (deref i)) ((deref i) - 1)
           ++ " " ++ slur "beer on the wall" (deref i)’
    |
158 |                 putStrLn (slur (numberName ((deref i) - 1)) (deref i) ++ " " ++ pluralizeFirst (slur "bottle of" (deref i)) ((deref i) - 1) ++ " " ++ slur "beer on the wall" (deref i))
    |                                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/99-bottles-of-beer-2.hs:158:151: error:
    • Couldn't match expected type: [Char]
                  with actual type: IO [Char]
    • In the second argument of ‘(++)’, namely
        ‘slur "beer on the wall" (deref i)’
      In the second argument of ‘(++)’, namely
        ‘" " ++ slur "beer on the wall" (deref i)’
      In the second argument of ‘(++)’, namely
        ‘pluralizeFirst (slur "bottle of" (deref i)) ((deref i) - 1)
           ++ " " ++ slur "beer on the wall" (deref i)’
    |
158 |                 putStrLn (slur (numberName ((deref i) - 1)) (deref i) ++ " " ++ pluralizeFirst (slur "bottle of" (deref i)) ((deref i) - 1) ++ " " ++ slur "beer on the wall" (deref i))
    |                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
