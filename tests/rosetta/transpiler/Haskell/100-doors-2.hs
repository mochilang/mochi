{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE OverloadedRecordDot #-}
{-# LANGUAGE NoFieldSelectors #-}
-- Generated by Mochi transpiler v0.10.39 on 2025-07-25 08:50 GMT+7
import Data.IORef
import System.IO.Unsafe (unsafePerformIO)
import System.IO (isEOF)
input :: IO String
input = do
    eof <- isEOF
    if eof then return "" else getLine
int :: String -> Int
int = read
float :: Int -> Double
float n = fromIntegral n
deref :: IORef a -> a
{-# NOINLINE deref #-}
deref r = unsafePerformIO (atomicModifyIORef' r (\x -> (x, x)))
main :: IO ()
main = do
    door <- newIORef (1)
    incrementer <- newIORef (0)
    mapM_ (\current -> do
        line <- newIORef ("Door " ++ show current ++ " ")
        if current == (deref door) then do
            writeIORef line $! ((deref line) ++ "Open")
            writeIORef incrementer $! ((deref incrementer) + 1)
            writeIORef door $! ((deref door) + 2 * (deref incrementer) + 1)
        else do
            writeIORef line $! ((deref line) ++ "Closed")

        putStrLn ((deref line))
        ) [1 .. (101 - 1)]
