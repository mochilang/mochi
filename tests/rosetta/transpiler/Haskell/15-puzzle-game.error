run: exit status 1

/workspace/mochi/tests/rosetta/transpiler/Haskell/15-puzzle-game.hs:80:29: error:
    • Couldn't match expected type ‘Bool’ with actual type ‘()’
    • In the first argument of ‘return’, namely ‘()’
      In the expression: return ()
      In a stmt of a 'do' block:
        if ((deref board) !! (deref i)) /= (solved !! (deref i)) then
            do return (False)
        else
            return ()
   |
80 |                 else return ()
   |                             ^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/15-puzzle-game.hs:92:17: error:
    • Couldn't match expected type ‘GenType1’ with actual type ‘()’
    • In the first argument of ‘return’, namely ‘()’
      In the expression: return ()
      In a stmt of a 'do' block:
        if (deref m) == 0 then
            do return
                 (GenType1
                    {idx = (deref empty) - 4,
                     ok = fromIntegral (deref empty) / fromIntegral 4 > 0})
        else
            return ()
   |
92 |     else return ()
   |                 ^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/15-puzzle-game.hs:96:17: error:
    • Couldn't match expected type ‘GenType2’ with actual type ‘()’
    • In the first argument of ‘return’, namely ‘()’
      In the expression: return ()
      In a stmt of a 'do' block:
        if (deref m) == 1 then
            do return
                 (GenType2
                    {idx = (deref empty) + 4,
                     ok = fromIntegral (deref empty) / fromIntegral 4 < 3})
        else
            return ()
   |
96 |     else return ()
   |                 ^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/15-puzzle-game.hs:100:17: error:
    • Couldn't match expected type ‘GenType3’ with actual type ‘()’
    • In the first argument of ‘return’, namely ‘()’
      In the expression: return ()
      In a stmt of a 'do' block:
        if (deref m) == 2 then
            do return
                 (GenType3
                    {idx = (deref empty) + 1, ok = (deref empty) `mod` 4 < 3})
        else
            return ()
    |
100 |     else return ()
    |                 ^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/15-puzzle-game.hs:104:17: error:
    • Couldn't match expected type ‘GenType4’ with actual type ‘()’
    • In the first argument of ‘return’, namely ‘()’
      In the expression: return ()
      In a stmt of a 'do' block:
        if (deref m) == 3 then
            do return
                 (GenType4
                    {idx = (deref empty) - 1, ok = (deref empty) `mod` 4 > 0})
        else
            return ()
    |
104 |     else return ()
    |                 ^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/15-puzzle-game.hs:111:14: error:
    • Couldn't match type ‘GenType5’ with ‘Bool’
      Expected: [Bool]
        Actual: [GenType5]
    • In the first argument of ‘(!!)’, namely ‘r’
      In the first argument of ‘not’, namely ‘((r !! "ok"))’
      In the expression: not ((r !! "ok"))
    |
111 |     if not ((r !! "ok")) then do
    |              ^

/workspace/mochi/tests/rosetta/transpiler/Haskell/15-puzzle-game.hs:111:19: error:
    • Couldn't match type ‘[Char]’ with ‘Int’
      Expected: Int
        Actual: String
    • In the second argument of ‘(!!)’, namely ‘"ok"’
      In the first argument of ‘not’, namely ‘((r !! "ok"))’
      In the expression: not ((r !! "ok"))
    |
111 |     if not ((r !! "ok")) then do
    |                   ^^^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/15-puzzle-game.hs:113:17: error:
    • Couldn't match expected type ‘Bool’ with actual type ‘()’
    • In the first argument of ‘return’, namely ‘()’
      In the expression: return ()
      In a stmt of a 'do' block:
        if not ((r !! "ok")) then do return (False) else return ()
    |
113 |     else return ()
    |                 ^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/15-puzzle-game.hs:116:13: error:
    Variable not in scope: int :: GenType5 -> t
    Suggested fix: Perhaps use ‘init’ (imported from Prelude)
    |
116 |     let j = int ((r !! "idx"))
    |             ^^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/15-puzzle-game.hs:129:33: error:
    • Couldn't match expected type ‘Bool’ with actual type ‘IO Bool’
    • In the second argument of ‘(||)’, namely ‘isSolved’
      In the expression: (deref i) < n || isSolved
      In a stmt of a 'do' block:
        if (deref i) < n || isSolved then
            do if doMove (randMove) then do ... else return ()
               loop
        else
            return ()
    |
129 |             if (deref i) < n || isSolved then do
    |                                 ^^^^^^^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/15-puzzle-game.hs:130:20: error:
    • Couldn't match expected type ‘Bool’ with actual type ‘IO Bool’
    • In the expression: doMove (randMove)
      In a stmt of a 'do' block:
        if doMove (randMove) then
            do writeIORef i $! ((deref i) + 1)
        else
            return ()
      In the expression:
        do if doMove (randMove) then
               do writeIORef i $! ((deref i) + 1)
           else
               return ()
           loop
    |
130 |                 if doMove (randMove) then do
    |                    ^^^^^^^^^^^^^^^^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/15-puzzle-game.hs:130:28: error:
    • Couldn't match expected type: IORef (IORef a4)
                  with actual type: IO Int
    • In the first argument of ‘doMove’, namely ‘(randMove)’
      In the expression: doMove (randMove)
      In a stmt of a 'do' block:
        if doMove (randMove) then
            do writeIORef i $! ((deref i) + 1)
        else
            return ()
    |
130 |                 if doMove (randMove) then do
    |                            ^^^^^^^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/15-puzzle-game.hs:174:22: error:
    Variable not in scope: xs :: IO ()
    Suggested fix: Perhaps use ‘s’ (line 172)
    |
174 |                      xs
    |                      ^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/15-puzzle-game.hs:177:46: error:
    • Couldn't match expected type: [a]
                  with actual type: IO String
    • In the second argument of ‘drop’, namely ‘s’
      In the second argument of ‘take’, namely ‘(drop 0 s)’
      In the expression: take (1 - 0) (drop 0 s)
    • Relevant bindings include
        c :: [a]
          (bound at /workspace/mochi/tests/rosetta/transpiler/Haskell/15-puzzle-game.hs:177:21)
    |
177 |                 let c = take (1 - 0) (drop 0 s)
    |                                              ^

/workspace/mochi/tests/rosetta/transpiler/Haskell/15-puzzle-game.hs:197:38: error:
    Variable not in scope: xs
    Suggested fix: Perhaps use ‘s’ (line 172)
    |
197 |                                      xs
    |                                      ^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/15-puzzle-game.hs:205:22: error:
    Variable not in scope: xs
    Suggested fix: Perhaps use ‘s’ (line 172)
    |
205 |                      xs
    |                      ^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/15-puzzle-game.hs:218:48: error:
    • Couldn't match expected type ‘IO Bool’ with actual type ‘Bool’
    • In the second argument of ‘(==)’, namely ‘False’
      In the second argument of ‘(&&)’, namely ‘isSolved == False’
      In the expression: not (deref quit) && isSolved == False
    |
218 |             if not (deref quit) && isSolved == False then do
    |                                                ^^^^^

/workspace/mochi/tests/rosetta/transpiler/Haskell/15-puzzle-game.hs:225:8: error:
    • Couldn't match expected type ‘Bool’ with actual type ‘IO Bool’
    • In the expression: isSolved
      In a stmt of a 'do' block:
        if isSolved then
            do putStrLn
                 ("You solved the puzzle in " ++ show (deref moves) ++ " moves.")
        else
            return ()
      In the expression:
        do putStrLn ("Starting board:")
           let loop = ...
           loop
           if isSolved then
               do putStrLn
                    ("You solved the puzzle in " ++ show (deref moves) ++ " moves.")
           else
               return ()
    |
225 |     if isSolved then do
    |        ^^^^^^^^
