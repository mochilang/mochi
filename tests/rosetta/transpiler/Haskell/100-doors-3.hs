{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE OverloadedRecordDot #-}
{-# LANGUAGE NoFieldSelectors #-}
-- Generated by Mochi transpiler v0.10.39 on 2025-07-25 09:11 GMT+7
import Data.IORef
import System.IO.Unsafe (unsafePerformIO)
import System.IO (isEOF)
input :: IO String
input = do
    eof <- isEOF
    if eof then return "" else getLine
int :: String -> Int
int = read
float :: Int -> Double
float n = fromIntegral n
deref :: IORef a -> a
{-# NOINLINE deref #-}
deref r = unsafePerformIO (atomicModifyIORef' r (\x -> (x, x)))
main :: IO ()
main = do
    result <- newIORef ("")
    mapM_ (\i -> do
        j <- newIORef (1)
        let
            loop = do
                if (deref j) * (deref j) < i then do
                    writeIORef j $! ((deref j) + 1)
                    loop
                else return ()
        loop
        if (deref j) * (deref j) == i then do
            writeIORef result $! ((deref result) ++ "O")
        else do
            writeIORef result $! ((deref result) ++ "-")

        ) [1 .. (101 - 1)]
    putStrLn ((deref result))
