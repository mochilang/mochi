;; Generated by Mochi 0.10.37 on 2025-07-23 11:36 +0700
#lang racket/base
(require racket/list racket/string racket/math json)
(define nowSeed (let ([s (getenv "MOCHI_NOW_SEED")]) (and s (string->number s))))
(define (now)
  (if nowSeed
      (begin (set! nowSeed (modulo (+ (* nowSeed 1664525) 1013904223) 2147483647)) nowSeed)
      (inexact->exact (floor (current-inexact-milliseconds)))))
(define (int x)
  (cond
    [(integer? x) x]
    [(number? x) (inexact->exact (truncate x))]
    [(string? x) (let ([n (string->number x)]) (if n (inexact->exact (truncate n)) 0))]
    [else 0]))
(define (float x)
  (cond
    [(number? x) (exact->inexact x)]
    [(string? x) (let ([n (string->number x)]) (if n (exact->inexact n) 0.0))]
    [else 0.0]))
(define (input) (read-line))
(define (sublist lst start end)
  (if (string? lst)
      (substring lst start end)
      (take (drop lst start) (- end start))))


(define (bottles n)
  (let/ec _return (begin
(if (equal? n 0) (let ()
(_return "No more bottles")
) (void))
(if (equal? n 1) (let ()
(_return "1 bottle")
) (void))
(_return (string-append (format "~a" n) " bottles"))
))
)
(define (main)
  (let/ec _return (begin
(define i 99)
(let/ec _break (let loop ()
  (if (> i 0) (let ()
    (displayln (string-append (bottles i) " of beer on the wall"))
    (displayln (string-append (bottles i) " of beer"))
    (displayln "Take one down, pass it around")
    (displayln (string-append (bottles (- i 1)) " of beer on the wall"))
    (set! i (- i 1))
    (loop)) (void))))
))
)
(main)
