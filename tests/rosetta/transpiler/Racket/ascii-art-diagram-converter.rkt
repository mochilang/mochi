;; Generated by Mochi 0.10.41 on 2025-07-26 17:02 +0700
#lang racket/base
(require racket/list racket/string racket/math racket/match json)
(define nowSeed (let ([s (getenv "MOCHI_NOW_SEED")]) (and s (string->number s))))
(define (now)
  (if nowSeed
      (begin (set! nowSeed (modulo (+ (* nowSeed 1664525) 1013904223) 2147483647)) nowSeed)
      (inexact->exact (floor (* (current-inexact-milliseconds) 1000)))))
(define (int x)
  (cond
    [(integer? x) x]
    [(number? x) (inexact->exact (truncate x))]
    [(string? x) (let ([n (string->number x)]) (if n (inexact->exact (truncate n)) 0))]
    [else 0]))
(define (float x)
  (cond
    [(number? x) (exact->inexact x)]
    [(string? x) (let ([n (string->number x)]) (if n (exact->inexact n) 0.0))]
    [else 0.0]))
(define (input) (read-line))
(define (upper s) (string-upcase s))
(define (lower s) (string-downcase s))
(define (sublist lst start end)
  (if (string? lst)
      (substring lst start end)
      (take (drop lst start) (- end start))))

(define (pad-start s width ch)
  (if (< (string-length s) width)
      (string-append (make-string (- width (string-length s)) (string-ref ch 0)) s)
      s))

(let* ([_start_mem (current-memory-use)] [_start (now)])
(define (main)
  (let/ec _return (begin
(displayln "Diagram after trimming whitespace and removal of blank lines:\n")
(displayln "+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+")
(displayln "|                      ID                       |")
(displayln "+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+")
(displayln "|QR|   Opcode  |AA|TC|RD|RA|   Z    |   RCODE   |")
(displayln "+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+")
(displayln "|                    QDCOUNT                    |")
(displayln "+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+")
(displayln "|                    ANCOUNT                    |")
(displayln "+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+")
(displayln "|                    NSCOUNT                    |")
(displayln "+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+")
(displayln "|                    ARCOUNT                    |")
(displayln "+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+")
(displayln "\nDecoded:\n")
(displayln "Name     Bits  Start  End")
(displayln "=======  ====  =====  ===")
(displayln "ID        16      0    15")
(displayln "QR         1     16    16")
(displayln "Opcode     4     17    20")
(displayln "AA         1     21    21")
(displayln "TC         1     22    22")
(displayln "RD         1     23    23")
(displayln "RA         1     24    24")
(displayln "Z          3     25    27")
(displayln "RCODE      4     28    31")
(displayln "QDCOUNT   16     32    47")
(displayln "ANCOUNT   16     48    63")
(displayln "NSCOUNT   16     64    79")
(displayln "ARCOUNT   16     80    95")
(displayln "\nTest string in hex:")
(displayln "78477bbf5496e12e1bf169a4")
(displayln "\nTest string in binary:")
(displayln "011110000100011101111011101111110101010010010110111000010010111000011011111100010110100110100100")
(displayln "\nUnpacked:\n")
(displayln "Name     Size  Bit pattern")
(displayln "=======  ====  ================")
(displayln "ID        16   0111100001000111")
(displayln "QR         1   0")
(displayln "Opcode     4   1111")
(displayln "AA         1   0")
(displayln "TC         1   1")
(displayln "RD         1   1")
(displayln "RA         1   1")
(displayln "Z          3   011")
(displayln "RCODE      4   1111")
(displayln "QDCOUNT   16   0101010010010110")
(displayln "ANCOUNT   16   1110000100101110")
(displayln "NSCOUNT   16   0001101111110001")
(displayln "ARCOUNT   16   0110100110100100")
))
)
(main)
  (let* ([_end (now)] [_end_mem (current-memory-use)]
         [_dur (- _end _start)]
         [_dur_us _dur]
         [_mem (max 0 (- _end_mem _start_mem))])
    (displayln "{")
    (displayln (format "  \"duration_us\": ~a," _dur_us))
    (displayln (format "  \"memory_bytes\": ~a," _mem))
    (displayln "  \"name\": \"main\"")
    (displayln "}")
  )
)
