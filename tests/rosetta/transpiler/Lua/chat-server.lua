-- Generated by Mochi v0.10.40 on 2025-07-25 20:06 GMT+7
function input()
  return io.read('*l')
end
local _nil = {}

local _now_seed = 0
local _now_seeded = false
do
  local s = os.getenv("MOCHI_NOW_SEED")
  if s and s ~= "" then
    local v = tonumber(s)
    if v then
      _now_seed = v
      _now_seeded = true
    end
  end
end
local function _now()
if _now_seeded then
  -- keep the seed within safe integer range for Lua (53 bits)
  _now_seed = (_now_seed * 1664525 + 1013904223) % 9007199254740991
  return _now_seed % 1000000000
end
return os.time() * 1000000000 + math.floor(os.clock() * 1000000000)
end
do
  collectgarbage()
  local _bench_start_mem = collectgarbage('count') * 1024
  local _bench_start = _now()
  function removeName(names, name)
    local out = {}
    for _, n in ipairs(names) do
      if (n ~= name) then
        out = (function(lst, item)
        local res = {table.unpack(lst)}
        table.insert(res, item)
        return res
      end)(out, n)
    end
  end
  return out
end
function main()
  local clients = {}
  function broadcast(msg)
    print(msg)
  end
  function add(name)
    clients = (function(lst, item)
    local res = {table.unpack(lst)}
    table.insert(res, item)
    return res
  end)(clients, name)
  broadcast((("+++ \"" .. name) .. "\" connected +++\n"))
end
function send(name, msg)
  broadcast((((name .. "> ") .. msg) .. "\n"))
end
function remove(name)
  clients = removeName(clients, name)
  broadcast((("--- \"" .. name) .. "\" disconnected ---\n"))
end
add("Alice")
add("Bob")
send("Alice", "Hello Bob!")
send("Bob", "Hi Alice!")
remove("Bob")
remove("Alice")
broadcast("Server stopping!\n")
end
main()
local _bench_end = _now()
collectgarbage()
local _bench_end_mem = collectgarbage('count') * 1024
local _bench_duration_us = math.floor((_bench_end - _bench_start) / 1000)
local _bench_mem = math.floor(math.max(0, _bench_end_mem - _bench_start_mem))
print('{\n  "duration_us": ' .. _bench_duration_us .. ',\n  "memory_bytes": ' .. _bench_mem .. ',\n  "name": "main"\n}')
end;
