-- Generated by Mochi v0.10.42 on 2025-07-28 08:11 GMT+7
function input()
  return io.read('*l')
end
local _nil = {}

local _now_seed = 0
local _now_seeded = false
do
  local s = os.getenv("MOCHI_NOW_SEED")
  if s and s ~= "" then
    local v = tonumber(s)
    if v then
      _now_seed = v
      _now_seeded = true
    end
  end
end
local function _now()
if _now_seeded then
  -- keep the seed within safe integer range for Lua (53 bits)
  _now_seed = (_now_seed * 1664525 + 1013904223) % 9007199254740991
  return _now_seed % 1000000000
end
return os.time() * 1000000000 + math.floor(os.clock() * 1000000000)
end

local function _parseIntStr(str)
if type(str) == 'table' then
  str = table.concat(str)
end
local n = tonumber(str, 10)
if n == nil then return 0 end
return math.floor(n)
end

local function _split(s, sep)
local t = {}
local pattern = string.format("([^%s]+)", sep)
string.gsub(s, pattern, function(c) t[#t+1] = c end)
return t
end

local function _substring(s, i, j)
i = i + 1
if j == nil then j = #s end
local si = utf8.offset(s, i)
if not si then return '' end
local sj = utf8.offset(s, j+1)
if not sj then sj = -1 end
return string.sub(s, si, sj-1)
end

local function slice(lst, s, e)
if s < 0 then s = #lst + s end
if e == nil then e = #lst end
local r = {}
for i = s + 1, e do
  r[#r+1] = lst[i]
end
return r
end
do
  collectgarbage()
  local _bench_start_mem = collectgarbage('count') * 1024
  local _bench_start = _now()
  function parseIntStr(str)
    local i = 0
    local neg = false
    if (((function(v)
    if type(v) == 'table' and v.items ~= nil then
      return #v.items
    elseif type(v) == 'table' and (v[1] == nil) then
        local c = 0
        for _ in pairs(v) do c = c + 1 end
        return c
      elseif type(v) == 'string' then
          local l = utf8.len(v)
          if l then return l end
          return #v
        elseif type(v) == 'table' then
            return #v
          else
            return 0
          end
        end)(str) > 0) and (string.sub(str, (0 + 1), 1) == "-")) then
          neg = true
          i = 1
        end
        local n = 0
        local digits = {__name = "GenType1", __order = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9"}, ["0"] = 0, ["1"] = 1, ["2"] = 2, ["3"] = 3, ["4"] = 4, ["5"] = 5, ["6"] = 6, ["7"] = 7, ["8"] = 8, ["9"] = 9}
        while (i < (function(v)
        if type(v) == 'table' and v.items ~= nil then
          return #v.items
        elseif type(v) == 'table' and (v[1] == nil) then
            local c = 0
            for _ in pairs(v) do c = c + 1 end
            return c
          elseif type(v) == 'string' then
              local l = utf8.len(v)
              if l then return l end
              return #v
            elseif type(v) == 'table' then
                return #v
              else
                return 0
              end
            end)(str)) do
              n = ((n * 10) + digits[string.sub(str, (i + 1), (i + 1))])
              i = (i + 1)
            end
            if neg then
              n = (-n)
            end
            return n
          end
          function fields(s)
            local words = {}
            local cur = ""
            local i = 0
            while (i < (function(v)
            if type(v) == 'table' and v.items ~= nil then
              return #v.items
            elseif type(v) == 'table' and (v[1] == nil) then
                local c = 0
                for _ in pairs(v) do c = c + 1 end
                return c
              elseif type(v) == 'string' then
                  local l = utf8.len(v)
                  if l then return l end
                  return #v
                elseif type(v) == 'table' then
                    return #v
                  else
                    return 0
                  end
                end)(s)) do
                  local ch = _substring(s, i, (i + 1))
                  if (((ch == " ") or (ch == "\t")) or (ch == "\n")) then
                    if ((function(v)
                    if type(v) == 'table' and v.items ~= nil then
                      return #v.items
                    elseif type(v) == 'table' and (v[1] == nil) then
                        local c = 0
                        for _ in pairs(v) do c = c + 1 end
                        return c
                      elseif type(v) == 'string' then
                          local l = utf8.len(v)
                          if l then return l end
                          return #v
                        elseif type(v) == 'table' then
                            return #v
                          else
                            return 0
                          end
                        end)(cur) > 0) then
                          words = (function(lst, item)
                          local res = {table.unpack(lst)}
                          table.insert(res, item)
                          return res
                        end)(words, cur)
                        cur = ""
                      end
                    else
                      cur = (cur .. ch)
                    end
                    i = (i + 1)
                  end
                  if ((function(v)
                  if type(v) == 'table' and v.items ~= nil then
                    return #v.items
                  elseif type(v) == 'table' and (v[1] == nil) then
                      local c = 0
                      for _ in pairs(v) do c = c + 1 end
                      return c
                    elseif type(v) == 'string' then
                        local l = utf8.len(v)
                        if l then return l end
                        return #v
                      elseif type(v) == 'table' then
                          return #v
                        else
                          return 0
                        end
                      end)(cur) > 0) then
                        words = (function(lst, item)
                        local res = {table.unpack(lst)}
                        table.insert(res, item)
                        return res
                      end)(words, cur)
                    end
                    return words
                  end
                  function unescape(s)
                    local out = ""
                    local i = 0
                    while (i < (function(v)
                    if type(v) == 'table' and v.items ~= nil then
                      return #v.items
                    elseif type(v) == 'table' and (v[1] == nil) then
                        local c = 0
                        for _ in pairs(v) do c = c + 1 end
                        return c
                      elseif type(v) == 'string' then
                          local l = utf8.len(v)
                          if l then return l end
                          return #v
                        elseif type(v) == 'table' then
                            return #v
                          else
                            return 0
                          end
                        end)(s)) do
                          if ((string.sub(s, (i + 1), (i + 1)) == "\\") and ((i + 1) < (function(v)
                          if type(v) == 'table' and v.items ~= nil then
                            return #v.items
                          elseif type(v) == 'table' and (v[1] == nil) then
                              local c = 0
                              for _ in pairs(v) do c = c + 1 end
                              return c
                            elseif type(v) == 'string' then
                                local l = utf8.len(v)
                                if l then return l end
                                return #v
                              elseif type(v) == 'table' then
                                  return #v
                                else
                                  return 0
                                end
                              end)(s))) then
                                local c = string.sub(s, ((i + 1) + 1), (i + 2))
                                if (c == "n") then
                                  out = (out .. "\n")
                                  i = (i + 2)
                                  goto __cont_1
                                else
                                  if (c == "\\") then
                                    out = (out .. "\\")
                                    i = (i + 2)
                                    goto __cont_1
                                  end
                                end
                              end
                              out = (out .. string.sub(s, (i + 1), (i + 1)))
                              i = (i + 1)
                              ::__cont_1::
                            end
                            return out
                          end
                          function parseProgram(src)
                            local lines = _split(src, "\n")
                            local header = fields(lines[0 + 1])
                            local dataSize = _parseIntStr(header[1 + 1])
                            local nStrings = _parseIntStr(header[3 + 1])
                            local stringPool = {}
                            local i = 1
                            while (i <= nStrings) do
                              local s = lines[i + 1]
                              if ((function(v)
                              if type(v) == 'table' and v.items ~= nil then
                                return #v.items
                              elseif type(v) == 'table' and (v[1] == nil) then
                                  local c = 0
                                  for _ in pairs(v) do c = c + 1 end
                                  return c
                                elseif type(v) == 'string' then
                                    local l = utf8.len(v)
                                    if l then return l end
                                    return #v
                                  elseif type(v) == 'table' then
                                      return #v
                                    else
                                      return 0
                                    end
                                  end)(s) > 0) then
                                    stringPool = (function(lst, item)
                                    local res = {table.unpack(lst)}
                                    table.insert(res, item)
                                    return res
                                  end)(stringPool, unescape(string.sub(s, (1 + 1), ((function(v)
                                  if type(v) == 'table' and v.items ~= nil then
                                    return #v.items
                                  elseif type(v) == 'table' and (v[1] == nil) then
                                      local c = 0
                                      for _ in pairs(v) do c = c + 1 end
                                      return c
                                    elseif type(v) == 'string' then
                                        local l = utf8.len(v)
                                        if l then return l end
                                        return #v
                                      elseif type(v) == 'table' then
                                          return #v
                                        else
                                          return 0
                                        end
                                      end)(s) - 1))))
                                    end
                                    i = (i + 1)
                                  end
                                  local code = {}
                                  local addrMap = {}
                                  while (i < (function(v)
                                  if type(v) == 'table' and v.items ~= nil then
                                    return #v.items
                                  elseif type(v) == 'table' and (v[1] == nil) then
                                      local c = 0
                                      for _ in pairs(v) do c = c + 1 end
                                      return c
                                    elseif type(v) == 'string' then
                                        local l = utf8.len(v)
                                        if l then return l end
                                        return #v
                                      elseif type(v) == 'table' then
                                          return #v
                                        else
                                          return 0
                                        end
                                      end)(lines)) do
                                        local line = trim(lines[i + 1])
                                        if ((function(v)
                                        if type(v) == 'table' and v.items ~= nil then
                                          return #v.items
                                        elseif type(v) == 'table' and (v[1] == nil) then
                                            local c = 0
                                            for _ in pairs(v) do c = c + 1 end
                                            return c
                                          elseif type(v) == 'string' then
                                              local l = utf8.len(v)
                                              if l then return l end
                                              return #v
                                            elseif type(v) == 'table' then
                                                return #v
                                              else
                                                return 0
                                              end
                                            end)(line) == 0) then
                                              break
                                            end
                                            local parts = fields(line)
                                            local addr = _parseIntStr(parts[0 + 1])
                                            local op = parts[1 + 1]
                                            local arg = 0
                                            if (op == "push") then
                                              arg = _parseIntStr(parts[2 + 1])
                                            else
                                              if ((op == "fetch") or (op == "store")) then
                                                arg = _parseIntStr(string.sub(parts[2 + 1], (1 + 1), ((function(v)
                                                if type(v) == 'table' and v.items ~= nil then
                                                  return #v.items
                                                elseif type(v) == 'table' and (v[1] == nil) then
                                                    local c = 0
                                                    for _ in pairs(v) do c = c + 1 end
                                                    return c
                                                  elseif type(v) == 'string' then
                                                      local l = utf8.len(v)
                                                      if l then return l end
                                                      return #v
                                                    elseif type(v) == 'table' then
                                                        return #v
                                                      else
                                                        return 0
                                                      end
                                                    end)(parts[2 + 1]) - 1)))
                                                  else
                                                    if ((op == "jmp") or (op == "jz")) then
                                                      arg = _parseIntStr(parts[3 + 1])
                                                    end
                                                  end
                                                end
                                                code = (function(lst, item)
                                                local res = {table.unpack(lst)}
                                                table.insert(res, item)
                                                return res
                                              end)(code, {__name = "GenType2", __order = {"addr", "op", "arg"}, addr = addr, op = op, arg = arg})
                                              addrMap[addr] = ((function(v)
                                              if type(v) == 'table' and v.items ~= nil then
                                                return #v.items
                                              elseif type(v) == 'table' and (v[1] == nil) then
                                                  local c = 0
                                                  for _ in pairs(v) do c = c + 1 end
                                                  return c
                                                elseif type(v) == 'string' then
                                                    local l = utf8.len(v)
                                                    if l then return l end
                                                    return #v
                                                  elseif type(v) == 'table' then
                                                      return #v
                                                    else
                                                      return 0
                                                    end
                                                  end)(code) - 1)
                                                  i = (i + 1)
                                                end
                                                return {__name = "GenType3", __order = {"dataSize", "strings", "code", "addrMap"}, dataSize = dataSize, strings = stringPool, code = code, addrMap = addrMap}
                                              end
                                              function runVM(prog)
                                                local data = {}
                                                local i = 0
                                                while (i < prog.dataSize) do
                                                  data = (function(lst, item)
                                                  local res = {table.unpack(lst)}
                                                  table.insert(res, item)
                                                  return res
                                                end)(data, 0)
                                                i = (i + 1)
                                              end
                                              local stack = {}
                                              local pc = 0
                                              local code = prog.code
                                              local addrMap = prog.addrMap
                                              local pool = prog.strings
                                              local line = ""
                                              while (pc < (function(v)
                                              if type(v) == 'table' and v.items ~= nil then
                                                return #v.items
                                              elseif type(v) == 'table' and (v[1] == nil) then
                                                  local c = 0
                                                  for _ in pairs(v) do c = c + 1 end
                                                  return c
                                                elseif type(v) == 'string' then
                                                    local l = utf8.len(v)
                                                    if l then return l end
                                                    return #v
                                                  elseif type(v) == 'table' then
                                                      return #v
                                                    else
                                                      return 0
                                                    end
                                                  end)(code)) do
                                                    local inst = code[pc + 1]
                                                    local op = inst.op
                                                    local arg = inst.arg
                                                    if (op == "push") then
                                                      stack = (function(lst, item)
                                                      local res = {table.unpack(lst)}
                                                      table.insert(res, item)
                                                      return res
                                                    end)(stack, arg)
                                                    pc = (pc + 1)
                                                    goto __cont_2
                                                  end
                                                  if (op == "store") then
                                                    data[arg + 1] = stack[((function(v)
                                                    if type(v) == 'table' and v.items ~= nil then
                                                      return #v.items
                                                    elseif type(v) == 'table' and (v[1] == nil) then
                                                        local c = 0
                                                        for _ in pairs(v) do c = c + 1 end
                                                        return c
                                                      elseif type(v) == 'string' then
                                                          local l = utf8.len(v)
                                                          if l then return l end
                                                          return #v
                                                        elseif type(v) == 'table' then
                                                            return #v
                                                          else
                                                            return 0
                                                          end
                                                        end)(stack) - 1) + 1]
                                                        stack = slice(stack, 0, ((function(v)
                                                        if type(v) == 'table' and v.items ~= nil then
                                                          return #v.items
                                                        elseif type(v) == 'table' and (v[1] == nil) then
                                                            local c = 0
                                                            for _ in pairs(v) do c = c + 1 end
                                                            return c
                                                          elseif type(v) == 'string' then
                                                              local l = utf8.len(v)
                                                              if l then return l end
                                                              return #v
                                                            elseif type(v) == 'table' then
                                                                return #v
                                                              else
                                                                return 0
                                                              end
                                                            end)(stack) - 1))
                                                            pc = (pc + 1)
                                                            goto __cont_2
                                                          end
                                                          if (op == "fetch") then
                                                            stack = (function(lst, item)
                                                            local res = {table.unpack(lst)}
                                                            table.insert(res, item)
                                                            return res
                                                          end)(stack, data[arg + 1])
                                                          pc = (pc + 1)
                                                          goto __cont_2
                                                        end
                                                        if (op == "add") then
                                                          stack[((function(v)
                                                          if type(v) == 'table' and v.items ~= nil then
                                                            return #v.items
                                                          elseif type(v) == 'table' and (v[1] == nil) then
                                                              local c = 0
                                                              for _ in pairs(v) do c = c + 1 end
                                                              return c
                                                            elseif type(v) == 'string' then
                                                                local l = utf8.len(v)
                                                                if l then return l end
                                                                return #v
                                                              elseif type(v) == 'table' then
                                                                  return #v
                                                                else
                                                                  return 0
                                                                end
                                                              end)(stack) - 2) + 1] = (stack[((function(v)
                                                              if type(v) == 'table' and v.items ~= nil then
                                                                return #v.items
                                                              elseif type(v) == 'table' and (v[1] == nil) then
                                                                  local c = 0
                                                                  for _ in pairs(v) do c = c + 1 end
                                                                  return c
                                                                elseif type(v) == 'string' then
                                                                    local l = utf8.len(v)
                                                                    if l then return l end
                                                                    return #v
                                                                  elseif type(v) == 'table' then
                                                                      return #v
                                                                    else
                                                                      return 0
                                                                    end
                                                                  end)(stack) - 2) + 1] + stack[((function(v)
                                                                  if type(v) == 'table' and v.items ~= nil then
                                                                    return #v.items
                                                                  elseif type(v) == 'table' and (v[1] == nil) then
                                                                      local c = 0
                                                                      for _ in pairs(v) do c = c + 1 end
                                                                      return c
                                                                    elseif type(v) == 'string' then
                                                                        local l = utf8.len(v)
                                                                        if l then return l end
                                                                        return #v
                                                                      elseif type(v) == 'table' then
                                                                          return #v
                                                                        else
                                                                          return 0
                                                                        end
                                                                      end)(stack) - 1) + 1])
                                                                      stack = slice(stack, 0, ((function(v)
                                                                      if type(v) == 'table' and v.items ~= nil then
                                                                        return #v.items
                                                                      elseif type(v) == 'table' and (v[1] == nil) then
                                                                          local c = 0
                                                                          for _ in pairs(v) do c = c + 1 end
                                                                          return c
                                                                        elseif type(v) == 'string' then
                                                                            local l = utf8.len(v)
                                                                            if l then return l end
                                                                            return #v
                                                                          elseif type(v) == 'table' then
                                                                              return #v
                                                                            else
                                                                              return 0
                                                                            end
                                                                          end)(stack) - 1))
                                                                          pc = (pc + 1)
                                                                          goto __cont_2
                                                                        end
                                                                        if (op == "lt") then
                                                                          local v = 0
                                                                          if (stack[((function(v)
                                                                          if type(v) == 'table' and v.items ~= nil then
                                                                            return #v.items
                                                                          elseif type(v) == 'table' and (v[1] == nil) then
                                                                              local c = 0
                                                                              for _ in pairs(v) do c = c + 1 end
                                                                              return c
                                                                            elseif type(v) == 'string' then
                                                                                local l = utf8.len(v)
                                                                                if l then return l end
                                                                                return #v
                                                                              elseif type(v) == 'table' then
                                                                                  return #v
                                                                                else
                                                                                  return 0
                                                                                end
                                                                              end)(stack) - 2) + 1] < stack[((function(v)
                                                                              if type(v) == 'table' and v.items ~= nil then
                                                                                return #v.items
                                                                              elseif type(v) == 'table' and (v[1] == nil) then
                                                                                  local c = 0
                                                                                  for _ in pairs(v) do c = c + 1 end
                                                                                  return c
                                                                                elseif type(v) == 'string' then
                                                                                    local l = utf8.len(v)
                                                                                    if l then return l end
                                                                                    return #v
                                                                                  elseif type(v) == 'table' then
                                                                                      return #v
                                                                                    else
                                                                                      return 0
                                                                                    end
                                                                                  end)(stack) - 1) + 1]) then
                                                                                    v = 1
                                                                                  end
                                                                                  stack[((function(v)
                                                                                  if type(v) == 'table' and v.items ~= nil then
                                                                                    return #v.items
                                                                                  elseif type(v) == 'table' and (v[1] == nil) then
                                                                                      local c = 0
                                                                                      for _ in pairs(v) do c = c + 1 end
                                                                                      return c
                                                                                    elseif type(v) == 'string' then
                                                                                        local l = utf8.len(v)
                                                                                        if l then return l end
                                                                                        return #v
                                                                                      elseif type(v) == 'table' then
                                                                                          return #v
                                                                                        else
                                                                                          return 0
                                                                                        end
                                                                                      end)(stack) - 2) + 1] = v
                                                                                      stack = slice(stack, 0, ((function(v)
                                                                                      if type(v) == 'table' and v.items ~= nil then
                                                                                        return #v.items
                                                                                      elseif type(v) == 'table' and (v[1] == nil) then
                                                                                          local c = 0
                                                                                          for _ in pairs(v) do c = c + 1 end
                                                                                          return c
                                                                                        elseif type(v) == 'string' then
                                                                                            local l = utf8.len(v)
                                                                                            if l then return l end
                                                                                            return #v
                                                                                          elseif type(v) == 'table' then
                                                                                              return #v
                                                                                            else
                                                                                              return 0
                                                                                            end
                                                                                          end)(stack) - 1))
                                                                                          pc = (pc + 1)
                                                                                          goto __cont_2
                                                                                        end
                                                                                        if (op == "jz") then
                                                                                          local v = stack[((function(v)
                                                                                          if type(v) == 'table' and v.items ~= nil then
                                                                                            return #v.items
                                                                                          elseif type(v) == 'table' and (v[1] == nil) then
                                                                                              local c = 0
                                                                                              for _ in pairs(v) do c = c + 1 end
                                                                                              return c
                                                                                            elseif type(v) == 'string' then
                                                                                                local l = utf8.len(v)
                                                                                                if l then return l end
                                                                                                return #v
                                                                                              elseif type(v) == 'table' then
                                                                                                  return #v
                                                                                                else
                                                                                                  return 0
                                                                                                end
                                                                                              end)(stack) - 1) + 1]
                                                                                              stack = slice(stack, 0, ((function(v)
                                                                                              if type(v) == 'table' and v.items ~= nil then
                                                                                                return #v.items
                                                                                              elseif type(v) == 'table' and (v[1] == nil) then
                                                                                                  local c = 0
                                                                                                  for _ in pairs(v) do c = c + 1 end
                                                                                                  return c
                                                                                                elseif type(v) == 'string' then
                                                                                                    local l = utf8.len(v)
                                                                                                    if l then return l end
                                                                                                    return #v
                                                                                                  elseif type(v) == 'table' then
                                                                                                      return #v
                                                                                                    else
                                                                                                      return 0
                                                                                                    end
                                                                                                  end)(stack) - 1))
                                                                                                  if (v == 0) then
                                                                                                    pc = addrMap[arg]
                                                                                                  else
                                                                                                    pc = (pc + 1)
                                                                                                  end
                                                                                                  goto __cont_2
                                                                                                end
                                                                                                if (op == "jmp") then
                                                                                                  pc = addrMap[arg]
                                                                                                  goto __cont_2
                                                                                                end
                                                                                                if (op == "prts") then
                                                                                                  local s = pool[stack[((function(v)
                                                                                                  if type(v) == 'table' and v.items ~= nil then
                                                                                                    return #v.items
                                                                                                  elseif type(v) == 'table' and (v[1] == nil) then
                                                                                                      local c = 0
                                                                                                      for _ in pairs(v) do c = c + 1 end
                                                                                                      return c
                                                                                                    elseif type(v) == 'string' then
                                                                                                        local l = utf8.len(v)
                                                                                                        if l then return l end
                                                                                                        return #v
                                                                                                      elseif type(v) == 'table' then
                                                                                                          return #v
                                                                                                        else
                                                                                                          return 0
                                                                                                        end
                                                                                                      end)(stack) - 1) + 1] + 1]
                                                                                                      stack = slice(stack, 0, ((function(v)
                                                                                                      if type(v) == 'table' and v.items ~= nil then
                                                                                                        return #v.items
                                                                                                      elseif type(v) == 'table' and (v[1] == nil) then
                                                                                                          local c = 0
                                                                                                          for _ in pairs(v) do c = c + 1 end
                                                                                                          return c
                                                                                                        elseif type(v) == 'string' then
                                                                                                            local l = utf8.len(v)
                                                                                                            if l then return l end
                                                                                                            return #v
                                                                                                          elseif type(v) == 'table' then
                                                                                                              return #v
                                                                                                            else
                                                                                                              return 0
                                                                                                            end
                                                                                                          end)(stack) - 1))
                                                                                                          if (s ~= "\n") then
                                                                                                            line = (line .. tostring(s))
                                                                                                          end
                                                                                                          pc = (pc + 1)
                                                                                                          goto __cont_2
                                                                                                        end
                                                                                                        if (op == "prti") then
                                                                                                          line = (line .. tostring(stack[((function(v)
                                                                                                          if type(v) == 'table' and v.items ~= nil then
                                                                                                            return #v.items
                                                                                                          elseif type(v) == 'table' and (v[1] == nil) then
                                                                                                              local c = 0
                                                                                                              for _ in pairs(v) do c = c + 1 end
                                                                                                              return c
                                                                                                            elseif type(v) == 'string' then
                                                                                                                local l = utf8.len(v)
                                                                                                                if l then return l end
                                                                                                                return #v
                                                                                                              elseif type(v) == 'table' then
                                                                                                                  return #v
                                                                                                                else
                                                                                                                  return 0
                                                                                                                end
                                                                                                              end)(stack) - 1) + 1]))
                                                                                                              print(line)
                                                                                                              line = ""
                                                                                                              stack = slice(stack, 0, ((function(v)
                                                                                                              if type(v) == 'table' and v.items ~= nil then
                                                                                                                return #v.items
                                                                                                              elseif type(v) == 'table' and (v[1] == nil) then
                                                                                                                  local c = 0
                                                                                                                  for _ in pairs(v) do c = c + 1 end
                                                                                                                  return c
                                                                                                                elseif type(v) == 'string' then
                                                                                                                    local l = utf8.len(v)
                                                                                                                    if l then return l end
                                                                                                                    return #v
                                                                                                                  elseif type(v) == 'table' then
                                                                                                                      return #v
                                                                                                                    else
                                                                                                                      return 0
                                                                                                                    end
                                                                                                                  end)(stack) - 1))
                                                                                                                  pc = (pc + 1)
                                                                                                                  goto __cont_2
                                                                                                                end
                                                                                                                if (op == "halt") then
                                                                                                                  break
                                                                                                                end
                                                                                                                pc = (pc + 1)
                                                                                                                ::__cont_2::
                                                                                                              end
                                                                                                            end
                                                                                                            function trim(s)
                                                                                                              local start = 0
                                                                                                              while ((start < (function(v)
                                                                                                              if type(v) == 'table' and v.items ~= nil then
                                                                                                                return #v.items
                                                                                                              elseif type(v) == 'table' and (v[1] == nil) then
                                                                                                                  local c = 0
                                                                                                                  for _ in pairs(v) do c = c + 1 end
                                                                                                                  return c
                                                                                                                elseif type(v) == 'string' then
                                                                                                                    local l = utf8.len(v)
                                                                                                                    if l then return l end
                                                                                                                    return #v
                                                                                                                  elseif type(v) == 'table' then
                                                                                                                      return #v
                                                                                                                    else
                                                                                                                      return 0
                                                                                                                    end
                                                                                                                  end)(s)) and ((string.sub(s, (start + 1), (start + 1)) == " ") or (string.sub(s, (start + 1), (start + 1)) == "\t"))) do
                                                                                                                    start = (start + 1)
                                                                                                                  end
                                                                                                                  local _end = (function(v)
                                                                                                                  if type(v) == 'table' and v.items ~= nil then
                                                                                                                    return #v.items
                                                                                                                  elseif type(v) == 'table' and (v[1] == nil) then
                                                                                                                      local c = 0
                                                                                                                      for _ in pairs(v) do c = c + 1 end
                                                                                                                      return c
                                                                                                                    elseif type(v) == 'string' then
                                                                                                                        local l = utf8.len(v)
                                                                                                                        if l then return l end
                                                                                                                        return #v
                                                                                                                      elseif type(v) == 'table' then
                                                                                                                          return #v
                                                                                                                        else
                                                                                                                          return 0
                                                                                                                        end
                                                                                                                      end)(s)
                                                                                                                      while ((_end > start) and ((string.sub(s, ((_end - 1) + 1), _end) == " ") or (string.sub(s, ((_end - 1) + 1), _end) == "\t"))) do
                                                                                                                        _end = (_end - 1)
                                                                                                                      end
                                                                                                                      return _substring(s, start, _end)
                                                                                                                    end
                                                                                                                    function split(s, sep)
                                                                                                                      local parts = {}
                                                                                                                      local cur = ""
                                                                                                                      local i = 0
                                                                                                                      while (i < (function(v)
                                                                                                                      if type(v) == 'table' and v.items ~= nil then
                                                                                                                        return #v.items
                                                                                                                      elseif type(v) == 'table' and (v[1] == nil) then
                                                                                                                          local c = 0
                                                                                                                          for _ in pairs(v) do c = c + 1 end
                                                                                                                          return c
                                                                                                                        elseif type(v) == 'string' then
                                                                                                                            local l = utf8.len(v)
                                                                                                                            if l then return l end
                                                                                                                            return #v
                                                                                                                          elseif type(v) == 'table' then
                                                                                                                              return #v
                                                                                                                            else
                                                                                                                              return 0
                                                                                                                            end
                                                                                                                          end)(s)) do
                                                                                                                            if ((((function(v)
                                                                                                                            if type(v) == 'table' and v.items ~= nil then
                                                                                                                              return #v.items
                                                                                                                            elseif type(v) == 'table' and (v[1] == nil) then
                                                                                                                                local c = 0
                                                                                                                                for _ in pairs(v) do c = c + 1 end
                                                                                                                                return c
                                                                                                                              elseif type(v) == 'string' then
                                                                                                                                  local l = utf8.len(v)
                                                                                                                                  if l then return l end
                                                                                                                                  return #v
                                                                                                                                elseif type(v) == 'table' then
                                                                                                                                    return #v
                                                                                                                                  else
                                                                                                                                    return 0
                                                                                                                                  end
                                                                                                                                end)(sep) > 0) and ((i + (function(v)
                                                                                                                                if type(v) == 'table' and v.items ~= nil then
                                                                                                                                  return #v.items
                                                                                                                                elseif type(v) == 'table' and (v[1] == nil) then
                                                                                                                                    local c = 0
                                                                                                                                    for _ in pairs(v) do c = c + 1 end
                                                                                                                                    return c
                                                                                                                                  elseif type(v) == 'string' then
                                                                                                                                      local l = utf8.len(v)
                                                                                                                                      if l then return l end
                                                                                                                                      return #v
                                                                                                                                    elseif type(v) == 'table' then
                                                                                                                                        return #v
                                                                                                                                      else
                                                                                                                                        return 0
                                                                                                                                      end
                                                                                                                                    end)(sep)) <= (function(v)
                                                                                                                                    if type(v) == 'table' and v.items ~= nil then
                                                                                                                                      return #v.items
                                                                                                                                    elseif type(v) == 'table' and (v[1] == nil) then
                                                                                                                                        local c = 0
                                                                                                                                        for _ in pairs(v) do c = c + 1 end
                                                                                                                                        return c
                                                                                                                                      elseif type(v) == 'string' then
                                                                                                                                          local l = utf8.len(v)
                                                                                                                                          if l then return l end
                                                                                                                                          return #v
                                                                                                                                        elseif type(v) == 'table' then
                                                                                                                                            return #v
                                                                                                                                          else
                                                                                                                                            return 0
                                                                                                                                          end
                                                                                                                                        end)(s))) and (_substring(s, i, (i + (function(v)
                                                                                                                                        if type(v) == 'table' and v.items ~= nil then
                                                                                                                                          return #v.items
                                                                                                                                        elseif type(v) == 'table' and (v[1] == nil) then
                                                                                                                                            local c = 0
                                                                                                                                            for _ in pairs(v) do c = c + 1 end
                                                                                                                                            return c
                                                                                                                                          elseif type(v) == 'string' then
                                                                                                                                              local l = utf8.len(v)
                                                                                                                                              if l then return l end
                                                                                                                                              return #v
                                                                                                                                            elseif type(v) == 'table' then
                                                                                                                                                return #v
                                                                                                                                              else
                                                                                                                                                return 0
                                                                                                                                              end
                                                                                                                                            end)(sep))) == sep)) then
                                                                                                                                              parts = (function(lst, item)
                                                                                                                                              local res = {table.unpack(lst)}
                                                                                                                                              table.insert(res, item)
                                                                                                                                              return res
                                                                                                                                            end)(parts, cur)
                                                                                                                                            cur = ""
                                                                                                                                            i = (i + (function(v)
                                                                                                                                            if type(v) == 'table' and v.items ~= nil then
                                                                                                                                              return #v.items
                                                                                                                                            elseif type(v) == 'table' and (v[1] == nil) then
                                                                                                                                                local c = 0
                                                                                                                                                for _ in pairs(v) do c = c + 1 end
                                                                                                                                                return c
                                                                                                                                              elseif type(v) == 'string' then
                                                                                                                                                  local l = utf8.len(v)
                                                                                                                                                  if l then return l end
                                                                                                                                                  return #v
                                                                                                                                                elseif type(v) == 'table' then
                                                                                                                                                    return #v
                                                                                                                                                  else
                                                                                                                                                    return 0
                                                                                                                                                  end
                                                                                                                                                end)(sep))
                                                                                                                                              else
                                                                                                                                                cur = (cur .. _substring(s, i, (i + 1)))
                                                                                                                                                i = (i + 1)
                                                                                                                                              end
                                                                                                                                            end
                                                                                                                                            parts = (function(lst, item)
                                                                                                                                            local res = {table.unpack(lst)}
                                                                                                                                            table.insert(res, item)
                                                                                                                                            return res
                                                                                                                                          end)(parts, cur)
                                                                                                                                          return parts
                                                                                                                                        end
                                                                                                                                        function main()
                                                                                                                                          local programText = (((((((((((((((((((("Datasize: 1 Strings: 2\n" .. "\"count is: \"\n") .. "\"\\n\"\n") .. "    0 push  1\n") .. "    5 store [0]\n") .. "   10 fetch [0]\n") .. "   15 push  10\n") .. "   20 lt\n") .. "   21 jz     (43) 65\n") .. "   26 push  0\n") .. "   31 prts\n") .. "   32 fetch [0]\n") .. "   37 prti\n") .. "   38 push  1\n") .. "   43 prts\n") .. "   44 fetch [0]\n") .. "   49 push  1\n") .. "   54 add\n") .. "   55 store [0]\n") .. "   60 jmp    (-51) 10\n") .. "   65 halt\n")
                                                                                                                                          local prog = parseProgram(programText)
                                                                                                                                          runVM(prog)
                                                                                                                                        end
                                                                                                                                        main()
                                                                                                                                        local _bench_end = _now()
                                                                                                                                        collectgarbage()
                                                                                                                                        local _bench_end_mem = collectgarbage('count') * 1024
                                                                                                                                        local _bench_duration_us = math.floor((_bench_end - _bench_start) / 1000)
                                                                                                                                        local _bench_mem = math.floor(math.max(0, _bench_end_mem - _bench_start_mem))
                                                                                                                                        print('{\n  "duration_us": ' .. _bench_duration_us .. ',\n  "memory_bytes": ' .. _bench_mem .. ',\n  "name": "main"\n}')
                                                                                                                                      end;
