-- Generated by Mochi v0.10.40 on 2025-07-25 21:10 GMT+7
function input()
  return io.read('*l')
end
local _nil = {}
function listStr(xs)
  local s = "["
  local i = 0
  while (i < (function(v)
  if type(v) == 'table' and v.items ~= nil then
    return #v.items
  elseif type(v) == 'table' and (v[1] == nil) then
      local c = 0
      for _ in pairs(v) do c = c + 1 end
      return c
    elseif type(v) == 'string' or type(v) == 'table' then
        return #v
      else
        return 0
      end
    end)(xs)) do
      s = (s .. tostring(xs[i + 1]))
      if (i < ((function(v)
      if type(v) == 'table' and v.items ~= nil then
        return #v.items
      elseif type(v) == 'table' and (v[1] == nil) then
          local c = 0
          for _ in pairs(v) do c = c + 1 end
          return c
        elseif type(v) == 'string' or type(v) == 'table' then
            return #v
          else
            return 0
          end
        end)(xs) - 1)) then
          s = (s .. " ")
        end
        i = (i + 1)
      end
      s = (s .. "]")
      return s
    end;
    
    function pointerDemo()
      print("Pointer:")
      local i = 0
      print("Before:")
      print(((("\t<address>: " .. tostring(i)) .. ", ") .. tostring(i)))
      i = 3
      print("After:")
      print(((("\t<address>: " .. tostring(i)) .. ", ") .. tostring(i)))
    end;
    
    function sliceDemo()
      print("Slice:")
      local a = {}
      for _ = 0, 10 - 1 do
        a = (function(lst, item)
        local res = {table.unpack(lst)}
        table.insert(res, item)
        return res
      end)(a, 0)
    end
    local s = a
    print("Before:")
    print(("\ts: " .. listStr(s)))
    print(("\ta: " .. listStr(a)))
    local data = {65, 32, 115, 116, 114, 105, 110, 103, 46}
    local idx = 0
    while (idx < (function(v)
    if type(v) == 'table' and v.items ~= nil then
      return #v.items
    elseif type(v) == 'table' and (v[1] == nil) then
        local c = 0
        for _ in pairs(v) do c = c + 1 end
        return c
      elseif type(v) == 'string' or type(v) == 'table' then
          return #v
        else
          return 0
        end
      end)(data)) do
        s[idx + 1] = data[idx + 1]
        idx = (idx + 1)
      end
      print("After:")
      print(("\ts: " .. listStr(s)))
      print(("\ta: " .. listStr(a)))
    end;
    
    pointerDemo();
    
    print("");
    
    sliceDemo();
