-- Generated by Mochi v0.10.37 on 2025-07-23 13:07 GMT+7
function input()
  return io.read('*l')
end

local _now_seed = 0
local _now_seeded = false
do
  local s = os.getenv("MOCHI_NOW_SEED")
  if s and s ~= "" then
    local v = tonumber(s)
    if v then
      _now_seed = v
      _now_seeded = true
    end
  end
end
local function _now()
if _now_seeded then
  _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
  return _now_seed
end
return os.time() * 1000000000 + math.floor(os.clock() * 1000000000)
end
function pow_big(base, exp)
  local result = 1
  local b = base
  local e = exp
  while (e > 0) do
    if ((e % 2) == 1) then
      result = (result * b)
    end
    b = (b * b)
    e = (e // 2)
  end
  return result
end;

function bit_len(x)
  local n = x
  local c = 0
  while (n > 0) do
    n = (n // 2)
    c = (c + 1)
  end
  return c
end;

err = "";

function ackermann2(m, n)
  if (err ~= "") then
    return 0
  end
  if (m <= 3) then
    local mi = math.floor(m)
    if (mi == 0) then
      return (n + 1)
    end
    if (mi == 1) then
      return (n + 2)
    end
    if (mi == 2) then
      return ((2 * n) + 3)
    end
    if (mi == 3) then
      local nb = bit_len(n)
      if (nb > 64) then
        err = (("A(m,n) had n of " .. tostring(nb)) .. " bits; too large")
        return 0
      end
      local r = pow_big(2, math.floor(n))
      return ((8 * r) - 3)
    end
  end
  if (bit_len(n) == 0) then
    return ackermann2((m - 1), 1)
  end
  return ackermann2((m - 1), ackermann2(m, (n - 1)))
end;

function show(m, n)
  err = ""
  local res = ackermann2(m, n)
  if (err ~= "") then
    print(((((("A(" .. tostring(m)) .. ", ") .. tostring(n)) .. ") = Error: ") .. err))
    return
  end
  if (bit_len(res) <= 256) then
    print(((((("A(" .. tostring(m)) .. ", ") .. tostring(n)) .. ") = ") .. tostring(res)))
  else
    local s = tostring(res)
    local pre = string.sub(s, 0 + 1, 20)
    local suf = string.sub(s, ((function(v)
    if type(v) == 'table' and v.items ~= nil then
      return #v.items
    elseif type(v) == 'table' and (v[1] == nil) then
        local c = 0
        for _ in pairs(v) do c = c + 1 end
        return c
      else
        return #v
      end
    end)(s) - 20) + 1, (function(v)
    if type(v) == 'table' and v.items ~= nil then
      return #v.items
    elseif type(v) == 'table' and (v[1] == nil) then
        local c = 0
        for _ in pairs(v) do c = c + 1 end
        return c
      else
        return #v
      end
    end)(s))
    print(((((((((("A(" .. tostring(m)) .. ", ") .. tostring(n)) .. ") = ") .. tostring((function(v)
    if type(v) == 'table' and v.items ~= nil then
      return #v.items
    elseif type(v) == 'table' and (v[1] == nil) then
        local c = 0
        for _ in pairs(v) do c = c + 1 end
        return c
      else
        return #v
      end
    end)(s))) .. " digits starting/ending with: ") .. pre) .. "...") .. suf))
  end
end;

function main()
  show(0, 0)
  show(1, 2)
  show(2, 4)
  show(3, 100)
  show(3, 1000000)
  show(4, 1)
  show(4, 2)
  show(4, 3)
end;

main();
