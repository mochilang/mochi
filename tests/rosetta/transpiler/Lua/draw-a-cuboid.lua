-- Generated by Mochi v0.10.41 on 2025-07-26 20:04 GMT+7
function input()
  return io.read('*l')
end
local _nil = {}

local _now_seed = 0
local _now_seeded = false
do
  local s = os.getenv("MOCHI_NOW_SEED")
  if s and s ~= "" then
    local v = tonumber(s)
    if v then
      _now_seed = v
      _now_seeded = true
    end
  end
end
local function _now()
if _now_seeded then
  -- keep the seed within safe integer range for Lua (53 bits)
  _now_seed = (_now_seed * 1664525 + 1013904223) % 9007199254740991
  return _now_seed % 1000000000
end
return os.time() * 1000000000 + math.floor(os.clock() * 1000000000)
end

local function slice(lst, s, e)
if s < 0 then s = #lst + s end
if e == nil then e = #lst end
local r = {}
for i = s + 1, e do
  r[#r+1] = lst[i]
end
return r
end
do
  collectgarbage()
  local _bench_start_mem = collectgarbage('count') * 1024
  local _bench_start = _now()
  function _repeat(ch, n)
    local s = ""
    local i = 0
    while (i < n) do
      s = (s .. ch)
      i = (i + 1)
    end
    return s
  end
  function cubLine(n, dx, dy, cde)
    local line = (string.rep(" ", (n + 1)) .. string.sub(cde, (0 + 1), 1))
    local d = ((9 * dx) - 1)
    while (d > 0) do
      line = (line .. string.sub(cde, (1 + 1), 2))
      d = (d - 1)
    end
    line = (line .. string.sub(cde, (0 + 1), 1))
    line = ((line .. string.rep(" ", dy)) .. string.sub(cde, (2 + 1), #cde))
    print(line)
  end
  function cuboid(dx, dy, dz)
    print((((((("cuboid " .. tostring(dx)) .. " ") .. tostring(dy)) .. " ") .. tostring(dz)) .. ":"))
    cubLine((dy + 1), dx, 0, "+-")
    local i = 1
    while (i <= dy) do
      cubLine(((dy - i) + 1), dx, (i - 1), "/ |")
      i = (i + 1)
    end
    cubLine(0, dx, dy, "+-|")
    local j = (((4 * dz) - dy) - 2)
    while (j > 0) do
      cubLine(0, dx, dy, "| |")
      j = (j - 1)
    end
    cubLine(0, dx, dy, "| +")
    i = 1
    while (i <= dy) do
      cubLine(0, dx, (dy - i), "| /")
      i = (i + 1)
    end
    cubLine(0, dx, 0, "+-\n")
  end
  cuboid(2, 3, 4)
  print("")
  cuboid(1, 1, 1)
  print("")
  cuboid(6, 2, 1)
  local _bench_end = _now()
  collectgarbage()
  local _bench_end_mem = collectgarbage('count') * 1024
  local _bench_duration_us = math.floor((_bench_end - _bench_start) / 1000)
  local _bench_mem = math.floor(math.max(0, _bench_end_mem - _bench_start_mem))
  print('{\n  "duration_us": ' .. _bench_duration_us .. ',\n  "memory_bytes": ' .. _bench_mem .. ',\n  "name": "main"\n}')
end;
