-- Generated by Mochi v0.10.37 on 2025-07-23 12:27 GMT+7
function input()
  return io.read('*l')
end

local _now_seed = 0
local _now_seeded = false
do
  local s = os.getenv("MOCHI_NOW_SEED")
  if s and s ~= "" then
    local v = tonumber(s)
    if v then
      _now_seed = v
      _now_seeded = true
    end
  end
end
local function _now()
if _now_seeded then
  _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
  return _now_seed
end
return os.time() * 1000000000 + math.floor(os.clock() * 1000000000)
end
function fields(s)
  local res = {}
  local cur = ""
  local i = 0
  while (i < (function(v)
  if type(v) == 'table' and v.items ~= nil then
    return #v.items
  elseif type(v) == 'table' and (v[1] == nil) then
      local c = 0
      for _ in pairs(v) do c = c + 1 end
      return c
    else
      return #v
    end
  end)(s)) do
    local c = string.sub(s, (i + 1), (i + 1))
    if (c == " ") then
      if ((function(v)
      if type(v) == 'table' and v.items ~= nil then
        return #v.items
      elseif type(v) == 'table' and (v[1] == nil) then
          local c = 0
          for _ in pairs(v) do c = c + 1 end
          return c
        else
          return #v
        end
      end)(cur) > 0) then
        res = (function(lst, item)
        local res = {table.unpack(lst)}
        table.insert(res, item)
        return res
      end)(res, cur)
      cur = ""
    end
  else
    cur = (cur .. c)
  end
  i = (i + 1)
end
if ((function(v)
if type(v) == 'table' and v.items ~= nil then
  return #v.items
elseif type(v) == 'table' and (v[1] == nil) then
    local c = 0
    for _ in pairs(v) do c = c + 1 end
    return c
  else
    return #v
  end
end)(cur) > 0) then
  res = (function(lst, item)
  local res = {table.unpack(lst)}
  table.insert(res, item)
  return res
end)(res, cur)
end
return res
end;

function canSpell(word, blks)
  if ((function(v)
  if type(v) == 'table' and v.items ~= nil then
    return #v.items
  elseif type(v) == 'table' and (v[1] == nil) then
      local c = 0
      for _ in pairs(v) do c = c + 1 end
      return c
    else
      return #v
    end
  end)(word) == 0) then
    return true
  end
  local c = string.lower(string.sub(word, (0 + 1), 1))
  local i = 0
  while (i < (function(v)
  if type(v) == 'table' and v.items ~= nil then
    return #v.items
  elseif type(v) == 'table' and (v[1] == nil) then
      local c = 0
      for _ in pairs(v) do c = c + 1 end
      return c
    else
      return #v
    end
  end)(blks)) do
    local b = blks[i + 1]
    if ((c == string.lower(string.sub(b, (0 + 1), 1))) or (c == string.lower(string.sub(b, (1 + 1), 2)))) then
      local rest = {}
      local j = 0
      while (j < (function(v)
      if type(v) == 'table' and v.items ~= nil then
        return #v.items
      elseif type(v) == 'table' and (v[1] == nil) then
          local c = 0
          for _ in pairs(v) do c = c + 1 end
          return c
        else
          return #v
        end
      end)(blks)) do
        if (j ~= i) then
          rest = (function(lst, item)
          local res = {table.unpack(lst)}
          table.insert(res, item)
          return res
        end)(rest, blks[j + 1])
      end
      j = (j + 1)
    end
    if canSpell(string.sub(word, (1 + 1), #word), rest) then
      return true
    end
  end
  i = (i + 1)
end
return false
end;

function newSpeller(blocks)
  local bl = fields(blocks)
  return function(w)
  return canSpell(w, bl)
end
end;

function main()
  local sp = newSpeller("BO XK DQ CP NA GT RE TG QD FS JW HU VI AN OB ER FS LY PC ZM")
  for _, word in ipairs({"A", "BARK", "BOOK", "TREAT", "COMMON", "SQUAD", "CONFUSE"}) do
    print(((word .. " ") .. tostring(sp(word))))
  end
end;

main();
