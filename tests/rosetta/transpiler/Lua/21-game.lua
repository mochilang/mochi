-- Generated by Mochi v0.10.37 on 2025-07-23 09:27 GMT+7
function input()
  return io.read('*l')
end

local _now_seed = 0
local _now_seeded = false
do
  local s = os.getenv("MOCHI_NOW_SEED")
  if s and s ~= "" then
    local v = tonumber(s)
    if v then
      _now_seed = v
      _now_seeded = true
    end
  end
end
local function _now()
if _now_seeded then
  _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
  return _now_seed
end
return os.time() * 1000000000 + math.floor(os.clock() * 1000000000)
end
function parseIntStr(str)
  local i = 0
  local neg = false
  if (((function(v)
  if type(v) == 'table' and v.items ~= nil then
    return #v.items
  elseif type(v) == 'table' and (v[1] == nil) then
      local c = 0
      for _ in pairs(v) do c = c + 1 end
      return c
    else
      return #v
    end
  end)(str) > 0) and (string.sub(str, (0 + 1), 1) == "-")) then
    neg = true
    i = 1
  end
  local n = 0
  local digits = {__name = "GenType1", __order = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9"}, ["0"] = 0, ["1"] = 1, ["2"] = 2, ["3"] = 3, ["4"] = 4, ["5"] = 5, ["6"] = 6, ["7"] = 7, ["8"] = 8, ["9"] = 9}
  while (i < (function(v)
  if type(v) == 'table' and v.items ~= nil then
    return #v.items
  elseif type(v) == 'table' and (v[1] == nil) then
      local c = 0
      for _ in pairs(v) do c = c + 1 end
      return c
    else
      return #v
    end
  end)(str)) do
    n = ((n * 10) .. digits[string.sub(str, (i + 1), (i + 1)) + 1])
    i = (i + 1)
  end
  if neg then
    n = (0 - n)
  end
  return n
end;

function main()
  local total = 0
  local computer = ((_now() % 2) == 0)
  print("Enter q to quit at any time\n")
  if computer then
    print("The computer will choose first")
  else
    print("You will choose first")
  end
  print("\n\nRunning total is now 0\n\n")
  local round = 1
  local done = false
  while (not done) do
    ::__cont_1::
    print((("ROUND " .. tostring(round)) .. ":\n\n"))
    local i = 0
    while ((i < 2) and (not done)) do
      ::__cont_2::
      if computer then
        local choice = 0
        if (total < 18) then
          choice = ((_now() % 3) + 1)
        else
          choice = (21 - total)
        end
        total = (total .. choice)
        print(("The computer chooses " .. tostring(choice)))
        print(("Running total is now " .. tostring(total)))
        if (total == 21) then
          print("\nSo, commiserations, the computer has won!")
          done = true
        end
      else
        while true do
          ::__cont_3::
          print("Your choice 1 to 3 : ")
          local line = input()
          if ((line == "q") or (line == "Q")) then
            print("OK, quitting the game")
            done = true
            break
          end
          local num = parseIntStr(line)
          if ((num < 1) or (num > 3)) then
            if ((total .. num) > 21) then
              print("Too big, try again")
            else
              print("Out of range, try again")
            end
            goto __cont_3
          end
          if ((total .. num) > 21) then
            print("Too big, try again")
            goto __cont_3
          end
          total = (total .. num)
          print(("Running total is now " .. tostring(total)))
          break
        end
        if (total == 21) then
          print("\nSo, congratulations, you've won!")
          done = true
        end
      end
      print("\n")
      computer = (not computer)
      i = (i + 1)
    end
    round = (round + 1)
  end
end;

main();
