-- Generated by Mochi v0.10.42 on 2025-07-27 16:50 GMT+7
function input()
  return io.read('*l')
end
local _nil = {}
function eulerSum()
  local pow5 = {}
  local i = 0
  while (i < 250) do
    pow5 = (function(lst, item)
    local res = {table.unpack(lst)}
    table.insert(res, item)
    return res
  end)(pow5, ((((i * i) * i) * i) * i))
  i = (i + 1)
end
local sums = {}
local x2 = 2
while (x2 < 250) do
  local x3 = 1
  while (x3 < x2) do
    local s = (pow5[x2 + 1] + pow5[x3 + 1])
    if (not (sums[s] ~= nil)) then
      sums[s] = {x2, x3}
    end
    x3 = (x3 + 1)
  end
  x2 = (x2 + 1)
end
local x0 = 4
while (x0 < 250) do
  local x1 = 3
  while (x1 < x0) do
    local y = (x0 + 1)
    while (y < 250) do
      local rem = ((pow5[y + 1] - pow5[x0 + 1]) - pow5[x1 + 1])
      if (sums[rem] ~= nil) then
        local pair = sums[rem]
        local a = pair[0 + 1]
        local b = pair[1 + 1]
        if ((x1 > a) and (a > b)) then
          return {x0, x1, a, b, y}
        end
      end
      y = (y + 1)
    end
    x1 = (x1 + 1)
  end
  x0 = (x0 + 1)
end
return {0, 0, 0, 0, 0}
end;

function main()
  local r = eulerSum()
  print(((((((((tostring(r[0 + 1]) .. " ") .. tostring(r[1 + 1])) .. " ") .. tostring(r[2 + 1])) .. " ") .. tostring(r[3 + 1])) .. " ") .. tostring(r[4 + 1])))
end;

main();
