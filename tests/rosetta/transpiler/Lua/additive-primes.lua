-- Generated by Mochi v0.10.37 on 2025-07-23 13:07 GMT+7
function input()
  return io.read('*l')
end

local _now_seed = 0
local _now_seeded = false
do
  local s = os.getenv("MOCHI_NOW_SEED")
  if s and s ~= "" then
    local v = tonumber(s)
    if v then
      _now_seed = v
      _now_seeded = true
    end
  end
end
local function _now()
if _now_seeded then
  _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
  return _now_seed
end
return os.time() * 1000000000 + math.floor(os.clock() * 1000000000)
end
function isPrime(n)
  if (n < 2) then
    return false
  end
  if ((n % 2) == 0) then
    return (n == 2)
  end
  if ((n % 3) == 0) then
    return (n == 3)
  end
  local d = 5
  while ((d * d) <= n) do
    if ((n % d) == 0) then
      return false
    end
    d = (d + 2)
    if ((n % d) == 0) then
      return false
    end
    d = (d + 4)
  end
  return true
end;

function sumDigits(n)
  local s = 0
  local x = n
  while (x > 0) do
    s = (s + (x % 10))
    x = (x // 10)
  end
  return s
end;

function pad(n)
  if (n < 10) then
    return ("  " .. tostring(n))
  end
  if (n < 100) then
    return (" " .. tostring(n))
  end
  return tostring(n)
end;

function main()
  print("Additive primes less than 500:")
  local count = 0
  local line = ""
  local lineCount = 0
  local i = 2
  while (i < 500) do
    if (isPrime(i) and isPrime(sumDigits(i))) then
      count = (count + 1)
      line = ((line .. pad(i)) .. "  ")
      lineCount = (lineCount + 1)
      if (lineCount == 10) then
        print(string.sub(line, 0 + 1, ((function(v)
        if type(v) == 'table' and v.items ~= nil then
          return #v.items
        elseif type(v) == 'table' and (v[1] == nil) then
            local c = 0
            for _ in pairs(v) do c = c + 1 end
            return c
          else
            return #v
          end
        end)(line) - 2)))
        line = ""
        lineCount = 0
      end
    end
    if (i > 2) then
      i = (i + 2)
    else
      i = (i + 1)
    end
  end
  if (lineCount > 0) then
    print(string.sub(line, 0 + 1, ((function(v)
    if type(v) == 'table' and v.items ~= nil then
      return #v.items
    elseif type(v) == 'table' and (v[1] == nil) then
        local c = 0
        for _ in pairs(v) do c = c + 1 end
        return c
      else
        return #v
      end
    end)(line) - 2)))
  end
  print((tostring(count) .. " additive primes found."))
end;

main();
