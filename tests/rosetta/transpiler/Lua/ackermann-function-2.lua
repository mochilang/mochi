-- Generated by Mochi v0.10.38 on 2025-07-24 08:13 GMT+7
function input()
  return io.read('*l')
end
local _nil = {}

local _now_seed = 0
local _now_seeded = false
do
  local s = os.getenv("MOCHI_NOW_SEED")
  if s and s ~= "" then
    local v = tonumber(s)
    if v then
      _now_seed = v
      _now_seeded = true
    end
  end
end
local function _now()
if _now_seeded then
  _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
  return _now_seed
end
return os.time() * 1000000000 + math.floor(os.clock() * 1000000000)
end

local function _padStart(s, len, ch)
if ch == nil or ch == '' then ch = ' ' end
if #s >= len then return s end
local fill = string.sub(ch, 1, 1)
return string.rep(fill, len - #s) .. s
end
function pow(base, exp)
  local result = 1
  local i = 0
  while (i < exp) do
    result = (result * base)
    i = (i + 1)
  end
  return result
end;

function ackermann2(m, n)
  if (m == 0) then
    return (n + 1)
  end
  if (m == 1) then
    return (n + 2)
  end
  if (m == 2) then
    return ((2 * n) + 3)
  end
  if (m == 3) then
    return ((8 * pow(2, n)) - 3)
  end
  if (n == 0) then
    return ackermann2((m - 1), 1)
  end
  return ackermann2((m - 1), ackermann2(m, (n - 1)))
end;

function main()
  print(("A(0, 0) = " .. tostring(ackermann2(0, 0))))
  print(("A(1, 2) = " .. tostring(ackermann2(1, 2))))
  print(("A(2, 4) = " .. tostring(ackermann2(2, 4))))
  print(("A(3, 4) = " .. tostring(ackermann2(3, 4))))
end;

main();
