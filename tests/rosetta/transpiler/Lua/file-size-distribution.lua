-- Generated by Mochi v0.10.42 on 2025-07-27 17:23 GMT+7
function input()
  return io.read('*l')
end
local _nil = {}
function log10floor(n)
  local p = 0
  local v = n
  while (v >= 10) do
    v = math.floor((v // 10))
    p = (p + 1)
  end
  return p
end;

function commatize(n)
  local s = tostring(n)
  local res = ""
  local i = 0
  while (i < (function(v)
  if type(v) == 'table' and v.items ~= nil then
    return #v.items
  elseif type(v) == 'table' and (v[1] == nil) then
      local c = 0
      for _ in pairs(v) do c = c + 1 end
      return c
    elseif type(v) == 'string' or type(v) == 'table' then
        return #v
      else
        return 0
      end
    end)(s)) do
      if ((i > 0) and ((((function(v)
      if type(v) == 'table' and v.items ~= nil then
        return #v.items
      elseif type(v) == 'table' and (v[1] == nil) then
          local c = 0
          for _ in pairs(v) do c = c + 1 end
          return c
        elseif type(v) == 'string' or type(v) == 'table' then
            return #v
          else
            return 0
          end
        end)(s) - i) % 3) == 0)) then
          res = (res .. ",")
        end
        res = (res .. string.sub(s, i + 1, (i + 1)))
        i = (i + 1)
      end
      return res
    end;
    
    function showDistribution(sizes)
      local bins = {}
      local i = 0
      while (i < 12) do
        bins = (function(lst, item)
        local res = {table.unpack(lst)}
        table.insert(res, item)
        return res
      end)(bins, 0)
      i = (i + 1)
    end
    local total = 0
    for _, sz in ipairs(sizes) do
      total = (total + sz)
      local idx = 0
      if (sz > 0) then
        idx = (log10floor(sz) + 1)
      end
      bins[idx + 1] = (bins[idx + 1] + 1)
    end
    print("File size distribution:\n")
    i = 0
    while (i < (function(v)
    if type(v) == 'table' and v.items ~= nil then
      return #v.items
    elseif type(v) == 'table' and (v[1] == nil) then
        local c = 0
        for _ in pairs(v) do c = c + 1 end
        return c
      elseif type(v) == 'string' or type(v) == 'table' then
          return #v
        else
          return 0
        end
      end)(bins)) do
        local prefix = "  "
        if (i > 0) then
          prefix = "+ "
        end
        print(((((prefix .. "Files less than 10 ^ ") .. tostring(i)) .. " bytes : ") .. tostring(bins[i + 1])))
        i = (i + 1)
      end
      print("                                  -----")
      print(("= Total number of files         : " .. tostring((function(v)
      if type(v) == 'table' and v.items ~= nil then
        return #v.items
      elseif type(v) == 'table' and (v[1] == nil) then
          local c = 0
          for _ in pairs(v) do c = c + 1 end
          return c
        elseif type(v) == 'string' or type(v) == 'table' then
            return #v
          else
            return 0
          end
        end)(sizes))))
        print((("  Total size of files           : " .. commatize(total)) .. " bytes"))
      end;
      
      function main()
        local sizes = {0, 1, 9, 10, 99, 100, 1234, 50000, 730000, 8200000}
        showDistribution(sizes)
      end;
      
      main();
