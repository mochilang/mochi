-- Generated by Mochi v0.10.37 on 2025-07-22 19:34 GMT+7

local _now_seed = 0
local _now_seeded = false
do
  local s = os.getenv("MOCHI_NOW_SEED")
  if s and s ~= "" then
    local v = tonumber(s)
    if v then
      _now_seed = v
      _now_seeded = true
    end
  end
end
local function _now()
if _now_seeded then
  _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
  return _now_seed
end
return os.time() * 1000000000 + math.floor(os.clock() * 1000000000)
end
function shuffle(xs)
  arr = xs
  i = 99
  while (i > 0) do
    j = (_now() % (i + 1))
    tmp = arr[i + 1]
    arr[i + 1] = arr[j + 1]
    arr[j + 1] = tmp
    i = (i - 1)
  end
  return arr
end;

function doTrials(trials, np, strategy)
  pardoned = 0
  t = 0
  while (t < trials) do
    drawers = {}
    i = 0
    while (i < 100) do
      drawers = (function(lst, item)
      local res = {table.unpack(lst)}
      table.insert(res, item)
      return res
    end)(drawers, i)
    i = (i + 1)
  end
  drawers = shuffle(drawers)
  p = 0
  success = true
  while (p < np) do
    found = false
    if (strategy == "optimal") then
      prev = p
      d = 0
      while (d < 50) do
        this = drawers[prev + 1]
        if (this == p) then
          found = true
          break
        end
        prev = this
        d = (d + 1)
      end
    else
      opened = {}
      k = 0
      while (k < 100) do
        opened = (function(lst, item)
        local res = {table.unpack(lst)}
        table.insert(res, item)
        return res
      end)(opened, false)
      k = (k + 1)
    end
    d = 0
    while (d < 50) do
      n = (_now() % 100)
      while opened[n + 1] do
        n = (_now() % 100)
      end
      opened[n + 1] = true
      if (drawers[n + 1] == p) then
        found = true
        break
      end
      d = (d + 1)
    end
  end
  if ((found) and (0) or (1)) then
    success = false
    break
  end
  p = (p + 1)
end
if success then
  pardoned = (pardoned + 1)
end
t = (t + 1)
end
rf = ((pardoned // trials) * 100)
print((((((("  strategy = " .. strategy) .. "  pardoned = ") .. tostring(pardoned)) .. " relative frequency = ") .. tostring(rf)) .. "%"))
end;

function main()
  trials = 1000
  for _, np in ipairs({10, 100}) do
    print((((("Results from " .. tostring(trials)) .. " trials with ") .. tostring(np)) .. " prisoners:\n"))
    for _, strat in ipairs({"random", "optimal"}) do
      doTrials(trials, np, strat)
    end
  end
end;

main();
