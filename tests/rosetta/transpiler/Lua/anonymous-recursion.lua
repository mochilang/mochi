-- Generated by Mochi v0.10.55 on 2025-08-02 17:26 GMT+7
function input()
  return io.read('*l')
end
local _nil = {}

local _now_seed = 0
local _now_seeded = false
do
  local s = os.getenv("MOCHI_NOW_SEED")
  if s and s ~= "" then
    local v = tonumber(s)
    if v then
      _now_seed = v
      _now_seeded = true
    end
  end
end
local function _now()
if _now_seeded then
  -- keep the seed within safe integer range for Lua (53 bits)
  _now_seed = (_now_seed * 1664525 + 1013904223) % 9007199254740991
  return _now_seed % 1000000000
end
return os.time() * 1000000000 + math.floor(os.clock() * 1000000000)
end
do
  collectgarbage()
  local _bench_start_mem = collectgarbage('count') * 1024
  local _bench_start = os.clock()
  function fib(n)
    if (n < 2) then
      return n
    end
    return ((tonumber(fib((n - 1))) or 0) + (tonumber(fib((n - 2))) or 0))
  end
  function main()
    local i = (-1)
    while (i <= 10) do
      if (i < 0) then
        print((("fib(" .. tostring(i)) .. ") returned error: negative n is forbidden"))
      else
        print(((("fib(" .. tostring(i)) .. ") = ") .. tostring(fib(i))))
      end
      i = (i + 1)
    end
  end
  main()
  local _bench_end = os.clock()
  collectgarbage()
  local _bench_end_mem = collectgarbage('count') * 1024
  local _bench_duration_us = math.floor((_bench_end - _bench_start) * 1000000)
  local _bench_mem = math.floor(math.max(0, _bench_end_mem - _bench_start_mem))
  print('{\n  "duration_us": ' .. _bench_duration_us .. ',\n  "memory_bytes": ' .. _bench_mem .. ',\n  "name": "main"\n}')
end;
