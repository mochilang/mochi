-- Generated by Mochi v0.10.38 on 2025-07-24 08:13 GMT+7
function input()
  return io.read('*l')
end
local _nil = {}

local _now_seed = 0
local _now_seeded = false
do
  local s = os.getenv("MOCHI_NOW_SEED")
  if s and s ~= "" then
    local v = tonumber(s)
    if v then
      _now_seed = v
      _now_seeded = true
    end
  end
end
local function _now()
if _now_seeded then
  _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
  return _now_seed
end
return os.time() * 1000000000 + math.floor(os.clock() * 1000000000)
end

local function _padStart(s, len, ch)
if ch == nil or ch == '' then ch = ' ' end
if #s >= len then return s end
local fill = string.sub(ch, 1, 1)
return string.rep(fill, len - #s) .. s
end
dim = 16;

function newPile(d)
  local b = {}
  local y = 0
  while (y < d) do
    local row = {}
    local x = 0
    while (x < d) do
      row = (function(lst, item)
      local res = {table.unpack(lst)}
      table.insert(res, item)
      return res
    end)(row, 0)
    x = (x + 1)
  end
  b = (function(lst, item)
  local res = {table.unpack(lst)}
  table.insert(res, item)
  return res
end)(b, row)
y = (y + 1)
end
return b
end;

function handlePile(pile, x, y)
  if (pile[y + 1][x + 1] >= 4) then
    pile[y + 1][x + 1] = (pile[y + 1][x + 1] - 4)
    if (y > 0) then
      pile[(y - 1) + 1][x + 1] = (pile[(y - 1) + 1][x + 1] + 1)
      if (pile[(y - 1) + 1][x + 1] >= 4) then
        pile = handlePile(pile, x, (y - 1))
      end
    end
    if (x > 0) then
      pile[y + 1][(x - 1) + 1] = (pile[y + 1][(x - 1) + 1] + 1)
      if (pile[y + 1][(x - 1) + 1] >= 4) then
        pile = handlePile(pile, (x - 1), y)
      end
    end
    if (y < (dim - 1)) then
      pile[(y + 1) + 1][x + 1] = (pile[(y + 1) + 1][x + 1] + 1)
      if (pile[(y + 1) + 1][x + 1] >= 4) then
        pile = handlePile(pile, x, (y + 1))
      end
    end
    if (x < (dim - 1)) then
      pile[y + 1][(x + 1) + 1] = (pile[y + 1][(x + 1) + 1] + 1)
      if (pile[y + 1][(x + 1) + 1] >= 4) then
        pile = handlePile(pile, (x + 1), y)
      end
    end
    pile = handlePile(pile, x, y)
  end
  return pile
end;

function drawPile(pile, d)
  local chars = {" ", "░", "▓", "█"}
  local row = 0
  while (row < d) do
    local line = ""
    local col = 0
    while (col < d) do
      local v = pile[row + 1][col + 1]
      if (v > 3) then
        v = 3
      end
      line = (line .. chars[v + 1])
      col = (col + 1)
    end
    print(line)
    row = (row + 1)
  end
end;

function main()
  local pile = newPile(16)
  local hdim = 7
  pile[hdim + 1][hdim + 1] = 16
  pile = handlePile(pile, hdim, hdim)
  drawPile(pile, 16)
end;

main();
