-- Generated by Mochi v0.10.37 on 2025-07-23 14:12 GMT+7
function input()
  return io.read('*l')
end

local _now_seed = 0
local _now_seeded = false
do
  local s = os.getenv("MOCHI_NOW_SEED")
  if s and s ~= "" then
    local v = tonumber(s)
    if v then
      _now_seed = v
      _now_seeded = true
    end
  end
end
local function _now()
if _now_seeded then
  _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
  return _now_seed
end
return os.time() * 1000000000 + math.floor(os.clock() * 1000000000)
end
function sortFloat(xs)
  local arr = xs
  local n = (function(v)
  if type(v) == 'table' and v.items ~= nil then
    return #v.items
  elseif type(v) == 'table' and (v[1] == nil) then
      local c = 0
      for _ in pairs(v) do c = c + 1 end
      return c
    elseif type(v) == 'string' or type(v) == 'table' then
        return #v
      else
        return 0
      end
    end)(arr)
    local i = 0
    while (i < n) do
      local j = 0
      while (j < (n - 1)) do
        if (arr[j + 1] > arr[(j + 1) + 1]) then
          local tmp = arr[j + 1]
          arr[j + 1] = arr[(j + 1) + 1]
          arr[(j + 1) + 1] = tmp
        end
        j = (j + 1)
      end
      i = (i + 1)
    end
    return arr
  end;
  
  function median(a)
    local arr = sortFloat(a)
    local half = ((function(v)
    if type(v) == 'table' and v.items ~= nil then
      return #v.items
    elseif type(v) == 'table' and (v[1] == nil) then
        local c = 0
        for _ in pairs(v) do c = c + 1 end
        return c
      elseif type(v) == 'string' or type(v) == 'table' then
          return #v
        else
          return 0
        end
      end)(arr) // 2)
      local m = arr[half + 1]
      if (((function(v)
      if type(v) == 'table' and v.items ~= nil then
        return #v.items
      elseif type(v) == 'table' and (v[1] == nil) then
          local c = 0
          for _ in pairs(v) do c = c + 1 end
          return c
        elseif type(v) == 'string' or type(v) == 'table' then
            return #v
          else
            return 0
          end
        end)(arr) % 2) == 0) then
          m = ((m + arr[(half - 1) + 1]) / 2)
        end
        return m
      end;
      
      print(tostring(median({3, 1, 4, 1})));
      
      print(tostring(median({3, 1, 4, 1, 5})));
