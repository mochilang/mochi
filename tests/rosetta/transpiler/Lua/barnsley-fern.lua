-- Generated by Mochi v0.10.37 on 2025-07-23 14:12 GMT+7
function input()
  return io.read('*l')
end
local _nil = {}

local _now_seed = 0
local _now_seeded = false
do
  local s = os.getenv("MOCHI_NOW_SEED")
  if s and s ~= "" then
    local v = tonumber(s)
    if v then
      _now_seed = v
      _now_seeded = true
    end
  end
end
local function _now()
if _now_seeded then
  _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
  return _now_seed
end
return os.time() * 1000000000 + math.floor(os.clock() * 1000000000)
end
xMin = (0 - 2.182);

xMax = 2.6558;

yMin = 0;

yMax = 9.9983;

width = 60;

nIter = 10000;

dx = (xMax - xMin);

dy = (yMax - yMin);

height = math.floor(((width * dy) / dx));

grid = {};

row = 0;

while (row < height) do
  line = {}
  col = 0
  while (col < width) do
    line = (function(lst, item)
    local res = {table.unpack(lst)}
    table.insert(res, item)
    return res
  end)(line, " ")
  col = (col + 1)
end
grid = (function(lst, item)
local res = {table.unpack(lst)}
table.insert(res, item)
return res
end)(grid, line)
row = (row + 1)
end;

seed = 1;

function randInt(s, n)
  local next = (((s * 1664525) + 1013904223) % 2147483647)
  return {next, (next % n)}
end;

x = 0;

y = 0;

ix = math.floor(((width * (x - xMin)) / dx));

iy = math.floor(((height * (yMax - y)) / dy));

if ((((ix >= 0) and (ix < width)) and (iy >= 0)) and (iy < height)) then
  grid[iy + 1][ix + 1] = "*"
end;

i = 0;

while (i < nIter) do
  res = randInt(seed, 100)
  seed = res[0 + 1]
  r = res[1 + 1]
  if (r < 85) then
    nx = ((0.85 * x) + (0.04 * y))
    ny = ((((0 - 0.04) * x) + (0.85 * y)) + 1.6)
    x = nx
    y = ny
  else
    if (r < 92) then
      nx = ((0.2 * x) - (0.26 * y))
      ny = (((0.23 * x) + (0.22 * y)) + 1.6)
      x = nx
      y = ny
    else
      if (r < 99) then
        nx = (((0 - 0.15) * x) + (0.28 * y))
        ny = (((0.26 * x) + (0.24 * y)) + 0.44)
        x = nx
        y = ny
      else
        x = 0
        y = (0.16 * y)
      end
    end
  end
  ix = math.floor(((width * (x - xMin)) / dx))
  iy = math.floor(((height * (yMax - y)) / dy))
  if ((((ix >= 0) and (ix < width)) and (iy >= 0)) and (iy < height)) then
    grid[iy + 1][ix + 1] = "*"
  end
  i = (i + 1)
end;

row = 0;

while (row < height) do
  line = ""
  col = 0
  while (col < width) do
    line = (line .. grid[row + 1][col + 1])
    col = (col + 1)
  end
  print(line)
  row = (row + 1)
end;
