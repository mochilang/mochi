-- Generated by Mochi v0.10.37 on 2025-07-23 14:12 GMT+7
function input()
  return io.read('*l')
end

local _now_seed = 0
local _now_seeded = false
do
  local s = os.getenv("MOCHI_NOW_SEED")
  if s and s ~= "" then
    local v = tonumber(s)
    if v then
      _now_seed = v
      _now_seeded = true
    end
  end
end
local function _now()
if _now_seeded then
  _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
  return _now_seed
end
return os.time() * 1000000000 + math.floor(os.clock() * 1000000000)
end
function indexOf(s, ch)
  local i = 0
  while (i < (function(v)
  if type(v) == 'table' and v.items ~= nil then
    return #v.items
  elseif type(v) == 'table' and (v[1] == nil) then
      local c = 0
      for _ in pairs(v) do c = c + 1 end
      return c
    elseif type(v) == 'string' or type(v) == 'table' then
        return #v
      else
        return 0
      end
    end)(s)) do
      if (string.sub(s, i + 1, (i + 1)) == ch) then
        return i
      end
      i = (i + 1)
    end
    return (0 - 1)
  end;
  
  function fmt3(x)
    local y = (((x * 1000) + 0.5) / 1000)
    local s = tostring(y)
    local dot = indexOf(s, ".")
    if (dot == (0 - 1)) then
      s = (s .. ".000")
    else
      local decs = (((function(v)
      if type(v) == 'table' and v.items ~= nil then
        return #v.items
      elseif type(v) == 'table' and (v[1] == nil) then
          local c = 0
          for _ in pairs(v) do c = c + 1 end
          return c
        elseif type(v) == 'string' or type(v) == 'table' then
            return #v
          else
            return 0
          end
        end)(s) - dot) - 1)
        if (decs > 3) then
          s = string.sub(s, 0 + 1, (dot + 4))
        else
          while (decs < 3) do
            s = (s .. "0")
            decs = (decs + 1)
          end
        end
      end
      return s
    end;
    
    function pad(s, width)
      local out = s
      while ((function(v)
      if type(v) == 'table' and v.items ~= nil then
        return #v.items
      elseif type(v) == 'table' and (v[1] == nil) then
          local c = 0
          for _ in pairs(v) do c = c + 1 end
          return c
        elseif type(v) == 'string' or type(v) == 'table' then
            return #v
          else
            return 0
          end
        end)(out) < width) do
          out = (" " .. out)
        end
        return out
      end;
      
      function smaSeries(xs, period)
        local res = {}
        local sum = 0
        local i = 0
        while (i < (function(v)
        if type(v) == 'table' and v.items ~= nil then
          return #v.items
        elseif type(v) == 'table' and (v[1] == nil) then
            local c = 0
            for _ in pairs(v) do c = c + 1 end
            return c
          elseif type(v) == 'string' or type(v) == 'table' then
              return #v
            else
              return 0
            end
          end)(xs)) do
            sum = (sum + xs[i + 1])
            if (i >= period) then
              sum = (sum - xs[(i - period) + 1])
            end
            local denom = (i + 1)
            if (denom > period) then
              denom = period
            end
            res = (function(lst, item)
            local res = {table.unpack(lst)}
            table.insert(res, item)
            return res
          end)(res, (sum / denom))
          i = (i + 1)
        end
        return res
      end;
      
      function main()
        local xs = {1, 2, 3, 4, 5, 5, 4, 3, 2, 1}
        local sma3 = smaSeries(xs, 3)
        local sma5 = smaSeries(xs, 5)
        print("x       sma3   sma5")
        local i = 0
        while (i < (function(v)
        if type(v) == 'table' and v.items ~= nil then
          return #v.items
        elseif type(v) == 'table' and (v[1] == nil) then
            local c = 0
            for _ in pairs(v) do c = c + 1 end
            return c
          elseif type(v) == 'string' or type(v) == 'table' then
              return #v
            else
              return 0
            end
          end)(xs)) do
            local line = ((((pad(fmt3(xs[i + 1]), 5) .. "  ") .. pad(fmt3(sma3[i + 1]), 5)) .. "  ") .. pad(fmt3(sma5[i + 1]), 5))
            print(line)
            i = (i + 1)
          end
        end;
        
        main();
