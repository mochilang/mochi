-- Generated by Mochi v0.10.42 on 2025-07-27 22:50 GMT+7
function input()
  return io.read('*l')
end
local _nil = {}

local _now_seed = 0
local _now_seeded = false
do
  local s = os.getenv("MOCHI_NOW_SEED")
  if s and s ~= "" then
    local v = tonumber(s)
    if v then
      _now_seed = v
      _now_seeded = true
    end
  end
end
local function _now()
if _now_seeded then
  -- keep the seed within safe integer range for Lua (53 bits)
  _now_seed = (_now_seed * 1664525 + 1013904223) % 9007199254740991
  return _now_seed % 1000000000
end
return os.time() * 1000000000 + math.floor(os.clock() * 1000000000)
end
do
  collectgarbage()
  local _bench_start_mem = collectgarbage('count') * 1024
  local _bench_start = _now()
  function angleDiff(b1, b2)
    local d = (b2 - b1)
    if (d < (0 - 180)) then
      return (d + 360)
    end
    if (d > 180) then
      return (d - 360)
    end
    return d
  end
  testCases = {{20, 45}, {(0 - 45), 45}, {(0 - 85), 90}, {(0 - 95), 90}, {(0 - 45), 125}, {(0 - 45), 145}, {29.4803, (0 - 88.6381)}, {(0 - 78.3251), (0 - 159.036)}}
  for _, tc in ipairs(testCases) do
    print(angleDiff(tc[0 + 1], tc[1 + 1]))
  end
  local _bench_end = _now()
  collectgarbage()
  local _bench_end_mem = collectgarbage('count') * 1024
  local _bench_duration_us = math.floor((_bench_end - _bench_start) / 1000)
  local _bench_mem = math.floor(math.max(0, _bench_end_mem - _bench_start_mem))
  print('{\n  "duration_us": ' .. _bench_duration_us .. ',\n  "memory_bytes": ' .. _bench_mem .. ',\n  "name": "main"\n}')
end;
