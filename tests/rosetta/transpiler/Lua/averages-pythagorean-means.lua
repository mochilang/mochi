-- Generated by Mochi v0.10.42 on 2025-07-27 23:29 GMT+7
function input()
  return io.read('*l')
end
local _nil = {}

local _now_seed = 0
local _now_seeded = false
do
  local s = os.getenv("MOCHI_NOW_SEED")
  if s and s ~= "" then
    local v = tonumber(s)
    if v then
      _now_seed = v
      _now_seeded = true
    end
  end
end
local function _now()
if _now_seeded then
  -- keep the seed within safe integer range for Lua (53 bits)
  _now_seed = (_now_seed * 1664525 + 1013904223) % 9007199254740991
  return _now_seed % 1000000000
end
return os.time() * 1000000000 + math.floor(os.clock() * 1000000000)
end
do
  collectgarbage()
  local _bench_start_mem = collectgarbage('count') * 1024
  local _bench_start = _now()
  function powf(base, exp)
    local result = 1
    local i = 0
    while (i < exp) do
      result = (result * base)
      i = (i + 1)
    end
    return result
  end
  function nthRoot(x, n)
    local low = 0
    local high = x
    local i = 0
    while (i < 60) do
      local mid = ((low + high) / 2)
      if (powf(mid, n) > x) then
        high = mid
      else
        low = mid
      end
      i = (i + 1)
    end
    return low
  end
  function main()
    local sum = 0
    local sumRecip = 0
    local prod = 1
    local n = 1
    while (n <= 10) do
      local f = n
      sum = (sum + f)
      sumRecip = (sumRecip + (1 / f))
      prod = (prod * f)
      n = (n + 1)
    end
    local count = 10
    local a = (sum / count)
    local g = nthRoot(prod, 10)
    local h = (count / sumRecip)
    print(((((("A: " .. tostring(a)) .. " G: ") .. tostring(g)) .. " H: ") .. tostring(h)))
    print(("A >= G >= H: " .. tostring(((a >= g) and (g >= h)))))
  end
  main()
  local _bench_end = _now()
  collectgarbage()
  local _bench_end_mem = collectgarbage('count') * 1024
  local _bench_duration_us = math.floor((_bench_end - _bench_start) / 1000)
  local _bench_mem = math.floor(math.max(0, _bench_end_mem - _bench_start_mem))
  print('{\n  "duration_us": ' .. _bench_duration_us .. ',\n  "memory_bytes": ' .. _bench_mem .. ',\n  "name": "main"\n}')
end;
