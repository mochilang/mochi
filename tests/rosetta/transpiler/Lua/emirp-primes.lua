-- Generated by Mochi v0.10.42 on 2025-07-28 10:03 GMT+7
function input()
  return io.read('*l')
end
local _nil = {}

local _now_seed = 0
local _now_seeded = false
do
  local s = os.getenv("MOCHI_NOW_SEED")
  if s and s ~= "" then
    local v = tonumber(s)
    if v then
      _now_seed = v
      _now_seeded = true
    end
  end
end
local function _now()
if _now_seeded then
  -- keep the seed within safe integer range for Lua (53 bits)
  _now_seed = (_now_seed * 1664525 + 1013904223) % 9007199254740991
  return _now_seed % 1000000000
end
return os.time() * 1000000000 + math.floor(os.clock() * 1000000000)
end
do
  collectgarbage()
  local _bench_start_mem = collectgarbage('count') * 1024
  local _bench_start = _now()
  function isPrime(n)
    if (n < 2) then
      return false
    end
    if ((n % 2) == 0) then
      return (n == 2)
    end
    local d = 3
    while ((d * d) <= n) do
      if ((n % d) == 0) then
        return false
      end
      d = (d + 2)
    end
    return true
  end
  function revInt(n)
    local r = 0
    local t = n
    while (t > 0) do
      r = ((r * 10) + (t % 10))
      t = math.floor((t // 10))
    end
    return r
  end
  function main()
    local emirps = {}
    local n = 2
    while ((function(v)
    if type(v) == 'table' and v.items ~= nil then
      return #v.items
    elseif type(v) == 'table' and (v[1] == nil) then
        local c = 0
        for _ in pairs(v) do c = c + 1 end
        return c
      elseif type(v) == 'string' then
          local l = utf8.len(v)
          if l then return l end
          return #v
        elseif type(v) == 'table' then
            return #v
          else
            return 0
          end
        end)(emirps) < 10000) do
          if isPrime(n) then
            local r = revInt(n)
            if ((r ~= n) and isPrime(r)) then
              emirps = (function(lst, item)
              local res = {table.unpack(lst)}
              table.insert(res, item)
              return res
            end)(emirps, n)
          end
        end
        n = (n + 1)
      end
      local line = "   ["
      local i = 0
      while (i < 20) do
        line = (line .. tostring(emirps[i + 1]))
        if (i < 19) then
          line = (line .. ", ")
        end
        i = (i + 1)
      end
      line = (line .. "]")
      print("First 20:")
      print(line)
      line = "  ["
      for _, e in ipairs(emirps) do
        if (e >= 8000) then
          break
        end
        if (e >= 7700) then
          line = ((line .. tostring(e)) .. ", ")
        end
      end
      line = (line .. "]")
      print("Between 7700 and 8000:")
      print(line)
      print("10000th:")
      print((("   [" .. tostring(emirps[9999 + 1])) .. "]"))
    end
    main()
    local _bench_end = _now()
    collectgarbage()
    local _bench_end_mem = collectgarbage('count') * 1024
    local _bench_duration_us = math.floor((_bench_end - _bench_start) / 1000)
    local _bench_mem = math.floor(math.max(0, _bench_end_mem - _bench_start_mem))
    print('{\n  "duration_us": ' .. _bench_duration_us .. ',\n  "memory_bytes": ' .. _bench_mem .. ',\n  "name": "main"\n}')
  end;
