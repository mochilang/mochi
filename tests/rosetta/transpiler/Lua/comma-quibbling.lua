-- Generated by Mochi v0.10.52 on 2025-08-02 01:52 GMT+7
function input()
  return io.read('*l')
end
local _nil = {}
function quibble(items)
  local n = (function(v)
  if type(v) == 'table' and v.items ~= nil then
    return #v.items
  elseif type(v) == 'table' and (v[1] == nil) then
      local c = 0
      for _ in pairs(v) do c = c + 1 end
      return c
    elseif type(v) == 'string' then
        local l = utf8.len(v)
        if l then return l end
        return #v
      elseif type(v) == 'table' then
          return #v
        else
          return 0
        end
      end)(items)
      if (n == 0) then
        return "{}"
      else
        if (n == 1) then
          return (("{" .. items[0 + 1]) .. "}")
        else
          if (n == 2) then
            return (((("{" .. items[0 + 1]) .. " and ") .. items[1 + 1]) .. "}")
          else
            local prefix = ""
            for i = 0, (n - 1) - 1 do
              if (i == (n - 1)) then
                break
              end
              if (i > 0) then
                prefix = (prefix .. ", ")
              end
              prefix = (prefix .. items[i + 1])
            end
            return (((("{" .. prefix) .. " and ") .. items[(n - 1) + 1]) .. "}")
          end
        end
      end
    end;
    
    function main()
      print(quibble({}))
      print(quibble({"ABC"}))
      print(quibble({"ABC", "DEF"}))
      print(quibble({"ABC", "DEF", "G", "H"}))
    end;
    
    main();
