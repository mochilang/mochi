-- Generated by Mochi v0.10.40 on 2025-07-25 18:07 GMT+7
function input()
  return io.read('*l')
end
local _nil = {}

local _now_seed = 0
local _now_seeded = false
do
  local s = os.getenv("MOCHI_NOW_SEED")
  if s and s ~= "" then
    local v = tonumber(s)
    if v then
      _now_seed = v
      _now_seeded = true
    end
  end
end
local function _now()
if _now_seeded then
  -- keep the seed within safe integer range for Lua (53 bits)
  _now_seed = (_now_seed * 1664525 + 1013904223) % 9007199254740991
  return _now_seed % 1000000000
end
return os.time() * 1000000000 + math.floor(os.clock() * 1000000000)
end
do
  collectgarbage()
  local _bench_start_mem = collectgarbage('count') * 1024
  local _bench_start = _now()
  function sameDigits(n, b)
    local f = (n % b)
    n = math.floor((n // b))
    while (n > 0) do
      if ((n % b) ~= f) then
        return false
      end
      n = math.floor((n // b))
    end
    return true
  end
  function isBrazilian(n)
    if (n < 7) then
      return false
    end
    if (((n % 2) == 0) and (n >= 8)) then
      return true
    end
    local b = 2
    while (b < (n - 1)) do
      if sameDigits(n, b) then
        return true
      end
      b = (b + 1)
    end
    return false
  end
  function isPrime(n)
    if (n < 2) then
      return false
    end
    if ((n % 2) == 0) then
      return (n == 2)
    end
    if ((n % 3) == 0) then
      return (n == 3)
    end
    local d = 5
    while ((d * d) <= n) do
      if ((n % d) == 0) then
        return false
      end
      d = (d + 2)
      if ((n % d) == 0) then
        return false
      end
      d = (d + 4)
    end
    return true
  end
  function main()
    local kinds = {" ", " odd ", " prime "}
    for _, kind in ipairs(kinds) do
      print((("First 20" .. tostring(kind)) .. "Brazilian numbers:"))
      local c = 0
      local n = 7
      while true do
        if isBrazilian(n) then
          print((tostring(n) .. " "))
          c = (c + 1)
          if (c == 20) then
            print("\n")
            break
          end
        end
        if (kind == " ") then
          n = (n + 1)
        else
          if (kind == " odd ") then
            n = (n + 2)
          else
            while true do
              n = (n + 2)
              if isPrime(n) then
                break
              end
            end
          end
        end
      end
    end
    local n = 7
    local c = 0
    while (c < 100000) do
      if isBrazilian(n) then
        c = (c + 1)
      end
      n = (n + 1)
    end
    print(("The 100,000th Brazilian number: " .. tostring((n - 1))))
  end
  main()
  local _bench_end = _now()
  collectgarbage()
  local _bench_end_mem = collectgarbage('count') * 1024
  local _bench_duration_us = math.floor((_bench_end - _bench_start) / 1000)
  local _bench_mem = math.floor(math.max(0, _bench_end_mem - _bench_start_mem))
  print('{\n  "duration_us": ' .. _bench_duration_us .. ',\n  "memory_bytes": ' .. _bench_mem .. ',\n  "name": "main"\n}')
end;
