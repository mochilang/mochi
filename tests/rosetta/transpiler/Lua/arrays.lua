-- Generated by Mochi v0.10.37 on 2025-07-23 14:12 GMT+7
function input()
  return io.read('*l')
end

local _now_seed = 0
local _now_seeded = false
do
  local s = os.getenv("MOCHI_NOW_SEED")
  if s and s ~= "" then
    local v = tonumber(s)
    if v then
      _now_seed = v
      _now_seeded = true
    end
  end
end
local function _now()
if _now_seeded then
  _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
  return _now_seed
end
return os.time() * 1000000000 + math.floor(os.clock() * 1000000000)
end
function listStr(xs)
  local s = "["
  local i = 0
  while (i < (function(v)
  if type(v) == 'table' and v.items ~= nil then
    return #v.items
  elseif type(v) == 'table' and (v[1] == nil) then
      local c = 0
      for _ in pairs(v) do c = c + 1 end
      return c
    elseif type(v) == 'string' or type(v) == 'table' then
        return #v
      else
        return 0
      end
    end)(xs)) do
      s = (s .. tostring(xs[i + 1]))
      if ((i + 1) < (function(v)
      if type(v) == 'table' and v.items ~= nil then
        return #v.items
      elseif type(v) == 'table' and (v[1] == nil) then
          local c = 0
          for _ in pairs(v) do c = c + 1 end
          return c
        elseif type(v) == 'string' or type(v) == 'table' then
            return #v
          else
            return 0
          end
        end)(xs)) then
          s = (s .. " ")
        end
        i = (i + 1)
      end
      s = (s .. "]")
      return s
    end;
    
    a = {0, 0, 0, 0, 0};
    
    print(("len(a) = " .. tostring((function(v)
    if type(v) == 'table' and v.items ~= nil then
      return #v.items
    elseif type(v) == 'table' and (v[1] == nil) then
        local c = 0
        for _ in pairs(v) do c = c + 1 end
        return c
      elseif type(v) == 'string' or type(v) == 'table' then
          return #v
        else
          return 0
        end
      end)(a))));
      
      print(("a = " .. listStr(a)));
      
      a[0 + 1] = 3;
      
      print(("a = " .. listStr(a)));
      
      print(("a[0] = " .. tostring(a[0 + 1])));
      
      s = (function(lst,s,e)
      local r={}
      for i=s+1,e do
        r[#r+1]=lst[i]
      end
      return r
    end)(a, 0, 4);
    
    cap_s = 5;
    
    print(("s = " .. listStr(s)));
    
    print(((("len(s) = " .. tostring((function(v)
    if type(v) == 'table' and v.items ~= nil then
      return #v.items
    elseif type(v) == 'table' and (v[1] == nil) then
        local c = 0
        for _ in pairs(v) do c = c + 1 end
        return c
      elseif type(v) == 'string' or type(v) == 'table' then
          return #v
        else
          return 0
        end
      end)(s))) .. "  cap(s) = ") .. tostring(cap_s)));
      
      s = (function(lst,s,e)
      local r={}
      for i=s+1,e do
        r[#r+1]=lst[i]
      end
      return r
    end)(a, 0, 5);
    
    print(("s = " .. listStr(s)));
    
    a[0 + 1] = 22;
    
    s[0 + 1] = 22;
    
    print(("a = " .. listStr(a)));
    
    print(("s = " .. listStr(s)));
    
    s = (function(lst, item)
    local res = {table.unpack(lst)}
    table.insert(res, item)
    return res
  end)(s, 4);
  
  s = (function(lst, item)
  local res = {table.unpack(lst)}
  table.insert(res, item)
  return res
end)(s, 5);

s = (function(lst, item)
local res = {table.unpack(lst)}
table.insert(res, item)
return res
end)(s, 6);

cap_s = 10;

print(("s = " .. listStr(s)));

print(((("len(s) = " .. tostring((function(v)
if type(v) == 'table' and v.items ~= nil then
  return #v.items
elseif type(v) == 'table' and (v[1] == nil) then
    local c = 0
    for _ in pairs(v) do c = c + 1 end
    return c
  elseif type(v) == 'string' or type(v) == 'table' then
      return #v
    else
      return 0
    end
  end)(s))) .. "  cap(s) = ") .. tostring(cap_s)));
  
  a[4 + 1] = (0 - 1);
  
  print(("a = " .. listStr(a)));
  
  print(("s = " .. listStr(s)));
  
  s = {};
  
  for i = 0, 8 - 1 do
    s = (function(lst, item)
    local res = {table.unpack(lst)}
    table.insert(res, item)
    return res
  end)(s, 0)
end;

cap_s = 8;

print(("s = " .. listStr(s)));

print(((("len(s) = " .. tostring((function(v)
if type(v) == 'table' and v.items ~= nil then
  return #v.items
elseif type(v) == 'table' and (v[1] == nil) then
    local c = 0
    for _ in pairs(v) do c = c + 1 end
    return c
  elseif type(v) == 'string' or type(v) == 'table' then
      return #v
    else
      return 0
    end
  end)(s))) .. "  cap(s) = ") .. tostring(cap_s)));
