-- Generated by Mochi v0.10.42 on 2025-07-27 16:50 GMT+7
function input()
  return io.read('*l')
end
local _nil = {}
bazCall = 0;

function baz()
  bazCall = (bazCall + 1)
  print("baz: start")
  if (bazCall == 1) then
    print("baz: raising U0")
    return "U0"
  end
  if (bazCall == 2) then
    print("baz: raising U1")
    return "U1"
  end
  print("baz: end")
  return ""
end;

function bar()
  print("bar: start")
  local err = baz()
  if ((function(v)
  if type(v) == 'table' and v.items ~= nil then
    return #v.items
  elseif type(v) == 'table' and (v[1] == nil) then
      local c = 0
      for _ in pairs(v) do c = c + 1 end
      return c
    elseif type(v) == 'string' or type(v) == 'table' then
        return #v
      else
        return 0
      end
    end)(err) > 0) then
      return err
    end
    print("bar: end")
    return ""
  end;
  
  function foo()
    print("foo: start")
    local err = bar()
    if (err == "U0") then
      print("foo: caught U0")
    else
      if ((function(v)
      if type(v) == 'table' and v.items ~= nil then
        return #v.items
      elseif type(v) == 'table' and (v[1] == nil) then
          local c = 0
          for _ in pairs(v) do c = c + 1 end
          return c
        elseif type(v) == 'string' or type(v) == 'table' then
            return #v
          else
            return 0
          end
        end)(err) > 0) then
          return err
        end
      end
      err = bar()
      if (err == "U0") then
        print("foo: caught U0")
      else
        if ((function(v)
        if type(v) == 'table' and v.items ~= nil then
          return #v.items
        elseif type(v) == 'table' and (v[1] == nil) then
            local c = 0
            for _ in pairs(v) do c = c + 1 end
            return c
          elseif type(v) == 'string' or type(v) == 'table' then
              return #v
            else
              return 0
            end
          end)(err) > 0) then
            return err
          end
        end
        print("foo: end")
        return ""
      end;
      
      function main()
        print("main: start")
        local err = foo()
        if ((function(v)
        if type(v) == 'table' and v.items ~= nil then
          return #v.items
        elseif type(v) == 'table' and (v[1] == nil) then
            local c = 0
            for _ in pairs(v) do c = c + 1 end
            return c
          elseif type(v) == 'string' or type(v) == 'table' then
              return #v
            else
              return 0
            end
          end)(err) > 0) then
            print(("main: unhandled " .. err))
          else
            print("main: success")
          end
        end;
        
        main();
