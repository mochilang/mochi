-- Generated by Mochi v0.10.42 on 2025-07-28 10:03 GMT+7
function input()
  return io.read('*l')
end
local _nil = {}

local _now_seed = 0
local _now_seeded = false
do
  local s = os.getenv("MOCHI_NOW_SEED")
  if s and s ~= "" then
    local v = tonumber(s)
    if v then
      _now_seed = v
      _now_seeded = true
    end
  end
end
local function _now()
if _now_seeded then
  -- keep the seed within safe integer range for Lua (53 bits)
  _now_seed = (_now_seed * 1664525 + 1013904223) % 9007199254740991
  return _now_seed % 1000000000
end
return os.time() * 1000000000 + math.floor(os.clock() * 1000000000)
end
do
  collectgarbage()
  local _bench_start_mem = collectgarbage('count') * 1024
  local _bench_start = _now()
  function listString()
    if (head == (0 - 1)) then
      return "<nil>"
    end
    local r = ("[" .. tostring(nodes[head].value))
    local id = math.floor(nodes[head].next)
    while (id ~= (0 - 1)) do
      r = ((tostring(r) .. " ") .. tostring(nodes[id].value))
      id = math.floor(nodes[id].next)
    end
    r = (tostring(r) .. "]")
    return r
  end
  nodes = {}
  head = (0 - 1)
  tail = (0 - 1)
  print(listString())
  nodes[0] = {__name = "GenType1", __order = {"value", "next", "prev"}, value = "A", next = (0 - 1), prev = (0 - 1)}
  head = 0
  tail = 0
  nodes[1] = {__name = "GenType2", __order = {"value", "next", "prev"}, value = "B", next = (0 - 1), prev = 0}
  nodes[0].next = 1
  tail = 1
  print(listString())
  nodes[2] = {__name = "GenType3", __order = {"value", "next", "prev"}, value = "C", next = 1, prev = 0}
  nodes[1].prev = 2
  nodes[0].next = 2
  print(listString())
  out = "From tail:"
  id = tail
  while (id ~= (0 - 1)) do
    out = ((out .. " ") .. tostring(nodes[id].value))
    id = math.floor(nodes[id].prev)
  end
  print(out)
  local _bench_end = _now()
  collectgarbage()
  local _bench_end_mem = collectgarbage('count') * 1024
  local _bench_duration_us = math.floor((_bench_end - _bench_start) / 1000)
  local _bench_mem = math.floor(math.max(0, _bench_end_mem - _bench_start_mem))
  print('{\n  "duration_us": ' .. _bench_duration_us .. ',\n  "memory_bytes": ' .. _bench_mem .. ',\n  "name": "main"\n}')
end;
