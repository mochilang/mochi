-- Generated by Mochi v0.10.50 on 2025-07-30 21:05 GMT+7
function input()
  return io.read('*l')
end
local _nil = {}

local _now_seed = 0
local _now_seeded = false
do
  local s = os.getenv("MOCHI_NOW_SEED")
  if s and s ~= "" then
    local v = tonumber(s)
    if v then
      _now_seed = v
      _now_seeded = true
    end
  end
end
local function _now()
if _now_seeded then
  -- keep the seed within safe integer range for Lua (53 bits)
  _now_seed = (_now_seed * 1664525 + 1013904223) % 9007199254740991
  return _now_seed % 1000000000
end
return os.time() * 1000000000 + math.floor(os.clock() * 1000000000)
end
do
  collectgarbage()
  local _bench_start_mem = collectgarbage('count') * 1024
  local _bench_start = _now()
  function add(a, b)
    return {x = ((tonumber(a.x) or 0) + (tonumber(b.x) or 0)), y = ((tonumber(a.y) or 0) + (tonumber(b.y) or 0)), z = ((tonumber(a.z) or 0) + (tonumber(b.z) or 0))}
  end
  function sub(a, b)
    return {x = (a.x - b.x), y = (a.y - b.y), z = (a.z - b.z)}
  end
  function mul(v, s)
    return {x = (v.x * s), y = (v.y * s), z = (v.z * s)}
  end
  function dot(a, b)
    return ((tonumber(((tonumber((a.x * b.x)) or 0) + (tonumber((a.y * b.y)) or 0))) or 0) + (tonumber((a.z * b.z)) or 0))
  end
  function intersectPoint(rv, rp, pn, pp)
    local diff = sub((function(_t) local _c={} for k,v in pairs(_t) do _c[k]=v end return _c end)(rp), (function(_t) local _c={} for k,v in pairs(_t) do _c[k]=v end return _c end)(pp))
    local prod1 = dot(diff, pn)
    local prod2 = dot(rv, pn)
    local prod3 = (prod1 / prod2)
    return sub((function(_t) local _c={} for k,v in pairs(_t) do _c[k]=v end return _c end)(rp), (function(_t) local _c={} for k,v in pairs(_t) do _c[k]=v end return _c end)(mul((function(_t) local _c={} for k,v in pairs(_t) do _c[k]=v end return _c end)(rv), prod3)))
  end
  function main()
    local rv = {x = 0, y = (-1), z = (-1)}
    local rp = {x = 0, y = 0, z = 10}
    local pn = {x = 0, y = 0, z = 1}
    local pp = {x = 0, y = 0, z = 5}
    local ip = intersectPoint((function(_t) local _c={} for k,v in pairs(_t) do _c[k]=v end return _c end)(rv), (function(_t) local _c={} for k,v in pairs(_t) do _c[k]=v end return _c end)(rp), (function(_t) local _c={} for k,v in pairs(_t) do _c[k]=v end return _c end)(pn), (function(_t) local _c={} for k,v in pairs(_t) do _c[k]=v end return _c end)(pp))
    print((((((("The ray intersects the plane at (" .. tostring(ip.x)) .. ", ") .. tostring(ip.y)) .. ", ") .. tostring(ip.z)) .. ")"))
  end
  main()
  local _bench_end = _now()
  collectgarbage()
  local _bench_end_mem = collectgarbage('count') * 1024
  local _bench_duration_us = math.floor((_bench_end - _bench_start) / 1000)
  local _bench_mem = math.floor(math.max(0, _bench_end_mem - _bench_start_mem))
  print('{\n  "duration_us": ' .. _bench_duration_us .. ',\n  "memory_bytes": ' .. _bench_mem .. ',\n  "name": "main"\n}')
end;
