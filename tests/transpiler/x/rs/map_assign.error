rustc: exit status 1
warning: variable does not need to be mutable
 --> /workspace/mochi/tests/transpiler/x/rs/map_assign.rs:4:9
  |
4 |     let mut scores: HashMap<&str, i64> = HashMap::from([("alice", 1)]);
  |         ----^^^^^^
  |         |
  |         help: remove this `mut`
  |
  = note: `#[warn(unused_mut)]` on by default

error[E0594]: cannot assign to data in an index of `HashMap<&str, i64>`
 --> /workspace/mochi/tests/transpiler/x/rs/map_assign.rs:5:5
  |
5 |     scores[&"bob"] = 2;
  |     ^^^^^^^^^^^^^^^^^^ cannot assign
  |
  = help: trait `IndexMut` is required to modify indexed content, but it is not implemented for `HashMap<&str, i64>`
help: use `.insert()` to insert a value into a `HashMap<&str, i64>`, `.get_mut()` to modify it, or the entry API for more flexibility
  |
5 -     scores[&"bob"] = 2;
5 +     scores.insert(&"bob", 2);
  |
5 -     scores[&"bob"] = 2;
5 +     if let Some(val) = scores.get_mut(&"bob") { *val = 2; };
  |
5 -     scores[&"bob"] = 2;
5 +     let val = scores.entry(&"bob").or_insert(2);
  |

error: aborting due to 1 previous error; 1 warning emitted

For more information about this error, try `rustc --explain E0594`.
