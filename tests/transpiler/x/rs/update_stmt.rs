// Generated by Mochi transpiler v0.10.34 on 2025-07-22 05:36 +0700
#[derive(Debug, Clone)]
struct Person {
    name: String,
    age: i64,
    status: String,
}
impl std::fmt::Display for Person {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        write!(f, "{{")?;
        write!(f, "\"name\": \"{}\"", self.name)?;
        write!(f, ", ")?;
        write!(f, "\"age\": {}", self.age)?;
        write!(f, ", ")?;
        write!(f, "\"status\": \"{}\"", self.status)?;
        write!(f, "}}")
    }
}

fn main() {
    let people: Vec<Person> = vec![Person {name: String::from("Alice"), age: 17, status: String::from("minor")}, Person {name: String::from("Bob"), age: 25, status: String::from("unknown")}, Person {name: String::from("Charlie"), age: 18, status: String::from("unknown")}, Person {name: String::from("Diana"), age: 16, status: String::from("minor")}];
        let mut people = people;
    for _i in 0..people.len() {
        let name: String = people[_i].name.clone();
        let age: i64 = people[_i].age;
        let status: String = people[_i].status.clone();
        if (age >= 18) {
            people[_i].status = String::from("adult");
            people[_i].age = (age + 1);
        }
    }

    println!("{}", "ok");
}
