// Generated by Mochi transpiler v0.10.32 on 2025-07-21 07:08 +0700
#[derive(Debug, Clone)]
struct CustomersItem {
    id: i64,
    name: String,
}

#[derive(Debug, Clone)]
struct OrdersItem {
    id: i64,
    customerId: i64,
    total: i64,
}

#[derive(Debug, Clone)]
struct QueryItem {
    orderId: i64,
    customerName: String,
    total: i64,
}

fn main() {
    let customers: Vec<CustomersItem> = vec![CustomersItem {id: 1, name: String::from("Alice")}, CustomersItem {id: 2, name: String::from("Bob")}, CustomersItem {id: 3, name: String::from("Charlie")}];
    let orders: Vec<OrdersItem> = vec![OrdersItem {id: 100, customerId: 1, total: 250}, OrdersItem {id: 101, customerId: 2, total: 125}, OrdersItem {id: 102, customerId: 1, total: 300}, OrdersItem {id: 103, customerId: 4, total: 80}];
    let result: Vec<QueryItem> = { let mut _q: Vec<QueryItem> = Vec::new(); for o in &orders { for c in &customers { if (o.customerId == c.id) { _q.push(QueryItem {orderId: o.id, customerName: c.name.clone(), total: o.total}); } } } _q };
    println!("{}", "--- Orders with customer info ---");
    for entry in &result {
        println!("{} {} {} {} {} {}", "Order", entry.orderId, "by", entry.customerName, "- $", entry.total);
    }
}
