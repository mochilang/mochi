rustc: exit status 1
warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/transpiler/x/rs/group_by_left_join.rs:53:243
   |
53 | ...Vec::new(); for c in &customers { for o in &orders { if (o.customerId == c.id) { let key = c.name.clone(); let ks = format!("{:?}", &k...
   |                                                            ^                    ^
   |
   = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
   |
53 -     let stats: Vec<QueryItem> = { let mut _q: Vec<QueryItem> = Vec::new(); let mut _groups: HashMap<String, Group<String, CustomersItem>> = HashMap::new(); let mut _order: Vec<String> = Vec::new(); for c in &customers { for o in &orders { if (o.customerId == c.id) { let key = c.name.clone(); let ks = format!("{:?}", &key); let e = _groups.entry(ks.clone()).or_insert_with(|| { _order.push(ks.clone()); Group::<String, CustomersItem> { key: key.clone(), items: Vec::new() } }); e.items.push(c.clone()); } } } for ks in _order { let g = &_groups[&ks]; _q.push(QueryItem {name: String::from(g.key.clone()), count: { let mut _q: Vec<i64> = Vec::new(); for r in g.items.clone() { if r.o { _q.push(r); } } _q }.len()}); } _q };
53 +     let stats: Vec<QueryItem> = { let mut _q: Vec<QueryItem> = Vec::new(); let mut _groups: HashMap<String, Group<String, CustomersItem>> = HashMap::new(); let mut _order: Vec<String> = Vec::new(); for c in &customers { for o in &orders { if o.customerId == c.id { let key = c.name.clone(); let ks = format!("{:?}", &key); let e = _groups.entry(ks.clone()).or_insert_with(|| { _order.push(ks.clone()); Group::<String, CustomersItem> { key: key.clone(), items: Vec::new() } }); e.items.push(c.clone()); } } } for ks in _order { let g = &_groups[&ks]; _q.push(QueryItem {name: String::from(g.key.clone()), count: { let mut _q: Vec<i64> = Vec::new(); for r in g.items.clone() { if r.o { _q.push(r); } } _q }.len()}); } _q };
   |

error[E0609]: no field `o` on type `CustomersItem`
  --> /workspace/mochi/tests/transpiler/x/rs/group_by_left_join.rs:53:683
   |
53 | ..._q: Vec<i64> = Vec::new(); for r in g.items.clone() { if r.o { _q.push(r); } } _q }.len()}); } _q };
   |                                                               ^ unknown field
   |
   = note: available fields are: `id`, `name`

error[E0308]: mismatched types
  --> /workspace/mochi/tests/transpiler/x/rs/group_by_left_join.rs:53:695
   |
53 | ...ew(); for r in g.items.clone() { if r.o { _q.push(r); } } _q }.len()}); } _q };
   |                                                 ---- ^ expected `i64`, found `CustomersItem`
   |                                                 |
   |                                                 arguments to this method are incorrect
   |
note: method defined here
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/alloc/src/vec/mod.rs:2442:12

error[E0308]: mismatched types
  --> /workspace/mochi/tests/transpiler/x/rs/group_by_left_join.rs:53:614
   |
53 | ...e()), count: { let mut _q: Vec<i64> = Vec::new(); for r in g.items.clone() { if r.o { _q.push(r); } } _q }.len()}); } _q };
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `i64`, found `usize`

error: aborting due to 3 previous errors; 1 warning emitted

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
