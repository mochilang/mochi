rustc: exit status 1
warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/transpiler/x/rs/group_by_multi_join.rs:90:126
   |
90 | ...::new(); for ps in &partsupp { for s in &suppliers { if (s.id == ps.supplier) { for n in &nations { if (n.id == s.nation) { if (n.name...
   |                                                            ^                   ^
   |
   = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
   |
90 -     let filtered: Vec<QueryItem> = { let mut _q: Vec<QueryItem> = Vec::new(); for ps in &partsupp { for s in &suppliers { if (s.id == ps.supplier) { for n in &nations { if (n.id == s.nation) { if (n.name == "A") { _q.push(QueryItem {part: ps.clone().part, value: (ps.clone().cost * ps.clone().qty as f64)}); } } } } } } _q };
90 +     let filtered: Vec<QueryItem> = { let mut _q: Vec<QueryItem> = Vec::new(); for ps in &partsupp { for s in &suppliers { if s.id == ps.supplier { for n in &nations { if (n.id == s.nation) { if (n.name == "A") { _q.push(QueryItem {part: ps.clone().part, value: (ps.clone().cost * ps.clone().qty as f64)}); } } } } } } _q };
   |

warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/transpiler/x/rs/group_by_multi_join.rs:90:173
   |
90 | ...liers { if (s.id == ps.supplier) { for n in &nations { if (n.id == s.nation) { if (n.name == "A") { _q.push(QueryItem {part: ps.clone(...
   |                                                              ^                ^
   |
help: remove these parentheses
   |
90 -     let filtered: Vec<QueryItem> = { let mut _q: Vec<QueryItem> = Vec::new(); for ps in &partsupp { for s in &suppliers { if (s.id == ps.supplier) { for n in &nations { if (n.id == s.nation) { if (n.name == "A") { _q.push(QueryItem {part: ps.clone().part, value: (ps.clone().cost * ps.clone().qty as f64)}); } } } } } } _q };
90 +     let filtered: Vec<QueryItem> = { let mut _q: Vec<QueryItem> = Vec::new(); for ps in &partsupp { for s in &suppliers { if (s.id == ps.supplier) { for n in &nations { if n.id == s.nation { if (n.name == "A") { _q.push(QueryItem {part: ps.clone().part, value: (ps.clone().cost * ps.clone().qty as f64)}); } } } } } } _q };
   |

warning: unnecessary parentheses around `if` condition
  --> /workspace/mochi/tests/transpiler/x/rs/group_by_multi_join.rs:90:197
   |
90 | ...supplier) { for n in &nations { if (n.id == s.nation) { if (n.name == "A") { _q.push(QueryItem {part: ps.clone().part, value: (ps.clon...
   |                                                               ^             ^
   |
help: remove these parentheses
   |
90 -     let filtered: Vec<QueryItem> = { let mut _q: Vec<QueryItem> = Vec::new(); for ps in &partsupp { for s in &suppliers { if (s.id == ps.supplier) { for n in &nations { if (n.id == s.nation) { if (n.name == "A") { _q.push(QueryItem {part: ps.clone().part, value: (ps.clone().cost * ps.clone().qty as f64)}); } } } } } } _q };
90 +     let filtered: Vec<QueryItem> = { let mut _q: Vec<QueryItem> = Vec::new(); for ps in &partsupp { for s in &suppliers { if (s.id == ps.supplier) { for n in &nations { if (n.id == s.nation) { if n.name == "A" { _q.push(QueryItem {part: ps.clone().part, value: (ps.clone().cost * ps.clone().qty as f64)}); } } } } } } _q };
   |

error[E0308]: mismatched types
  --> /workspace/mochi/tests/transpiler/x/rs/group_by_multi_join.rs:91:611
   |
91 | ... = Vec::new(); for r in g.items.clone() { _q.push(r.value); } _q }.iter().map(|x| *x as f64).sum::<f64>()}); } _q };
   |                                                 ---- ^^^^^^^ expected `i64`, found `f64`
   |                                                 |
   |                                                 arguments to this method are incorrect
   |
note: method defined here
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/alloc/src/vec/mod.rs:2442:12

error: aborting due to 1 previous error; 3 warnings emitted

For more information about this error, try `rustc --explain E0308`.
