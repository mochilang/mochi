# Generated by Mochi transpiler v0.10.34 on 2025-07-22 10:07 +0700
ItemsItem = Struct.new(:a, :b, :val, keyword_init: true)
items = [ItemsItem.new(a: "x", b: 1, val: 2), ItemsItem.new(a: "x", b: 2, val: 3), ItemsItem.new(a: "y", b: 1, val: 4), ItemsItem.new(a: "y", b: 2, val: 1)]
Grouped = Struct.new(:a, :b, :total, keyword_init: true)
grouped = (begin
  groups = {}
  items.each do |i|
    k = {"a" => i["a"], "b" => i["b"]}
    groups[k] ||= []
    groups[k] << i
  end
  pairs = groups.to_a
  pairs = pairs.each_with_index.sort_by do |(k, items), __i|
    g = { "key" => k, "items" => items }
    [-(begin
      _res = []
      g["items"].each do |x|
        _res << x["val"]
      end
    _res
  end).sum, __i]
end.map{ |x, _| x }
result = []
pairs.each do |k, items|
  g = { "key" => k, "items" => items }
  result << Grouped.new(a: g["key"]["a"], b: g["key"]["b"], total: (begin
    _res = []
    g["items"].each do |x|
      _res << x["val"]
    end
  _res
end).sum)
end
result
end)
puts(("[" + (grouped).map{ |x| if x.is_a?(String) then '\'' + x + '\'' elsif x.respond_to?(:to_h) then '{' + x.to_h.map{ |k,v| "'#{k}': #{v.is_a?(String) ? '\'' + v + '\'' : v.to_s}" }.join(', ') + '}' else x.to_s end }.join(', ') + "]"))
