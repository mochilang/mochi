{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE OverloadedRecordDot #-}
{-# LANGUAGE NoFieldSelectors #-}
import Prelude hiding (customerId, id, item, name, orderId, sku)
-- Generated by Mochi transpiler v0.10.33 on 2025-07-21 16:07 GMT+7
data GenType1 = GenType1
  { id :: Int,
    name :: String
  } deriving (Show)


data GenType2 = GenType2
  { id :: Int,
    customerId :: Int
  } deriving (Show)


data GenType3 = GenType3
  { orderId :: Int,
    sku :: String
  } deriving (Show)


data GenType4 = GenType4
  { orderId :: String,
    name :: String,
    item :: String
  } deriving (Show)


customers = [GenType1 {id = 1, name = "Alice"}, GenType1 {id = 2, name = "Bob"}]

items = [GenType3 {orderId = 100, sku = "a"}]

orders = [GenType2 {id = 100, customerId = 1}, GenType2 {id = 101, customerId = 2}]

result = [GenType4 {orderId = o.id, name = c.name, item = i} | o <- orders, c <- customers, i <- items, o.customerId == c.id && o.id == i.orderId]

main :: IO ()
main = do
    putStrLn ("--- Left Join Multi ---")
    mapM_ (\r -> do
        putStrLn (show r.orderId + show r.name + show r.item)
        ) result
