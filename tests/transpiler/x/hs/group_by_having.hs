{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE OverloadedRecordDot #-}
{-# LANGUAGE NoFieldSelectors #-}
import Prelude hiding (city, name, num)
-- Generated by Mochi transpiler v0.10.34 on 2025-07-21 23:34 GMT+7
import Data.List (intercalate, isInfixOf, union, intersect, nub, sortOn, (\\))
import qualified Data.Aeson as Aeson
import qualified Data.ByteString.Lazy.Char8 as BSL
data MGroup k a = MGroup {key :: k, items :: [a]} deriving (Show)
data GenType1 = GenType1
  { name :: String,
    city :: String
  } deriving (Show)


data GenType2 = GenType2
  { city :: String,
    num :: Int
  } deriving (Show)


big = [GenType2 {city = g.key, num = length g.items} | g <- [MGroup {key = k, items = [p | p <- people, p.city == k]} | k <- nub ([p.city | p <- people])], length g.items >= 4]

people = [GenType1 {name = "Alice", city = "Paris"}, GenType1 {name = "Bob", city = "Hanoi"}, GenType1 {name = "Charlie", city = "Paris"}, GenType1 {name = "Diana", city = "Hanoi"}, GenType1 {name = "Eve", city = "Paris"}, GenType1 {name = "Frank", city = "Hanoi"}, GenType1 {name = "George", city = "Paris"}]

main :: IO ()
main = do
    BSL.putStrLn (Aeson.encode big)
