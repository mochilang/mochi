{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE OverloadedRecordDot #-}
{-# LANGUAGE NoFieldSelectors #-}
import Prelude hiding (customer, customerId, id, name, orderId, total)
-- Generated by Mochi transpiler v0.10.33 on 2025-07-21 16:07 GMT+7
data GenType1 = GenType1
  { id :: Int,
    name :: String
  } deriving (Show)


data GenType2 = GenType2
  { id :: Int,
    customerId :: Int,
    total :: Int
  } deriving (Show)


data GenType3 = GenType3
  { orderId :: String,
    customer :: String,
    total :: String
  } deriving (Show)


customers = [GenType1 {id = 1, name = "Alice"}, GenType1 {id = 2, name = "Bob"}]

orders = [GenType2 {id = 100, customerId = 1, total = 250}, GenType2 {id = 101, customerId = 3, total = 80}]

result = [GenType3 {orderId = o.id, customer = c, total = o.total} | o <- orders, c <- customers, o.customerId == c.id]

main :: IO ()
main = do
    putStrLn ("--- Left Join ---")
    mapM_ (\entry -> do
        putStrLn ("Order" ++ show entry.orderId ++ "customer" ++ show entry.customer ++ "total" ++ show entry.total)
        ) result
