{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE OverloadedRecordDot #-}
{-# LANGUAGE NoFieldSelectors #-}
import Prelude hiding (cat, flag, val)
-- Generated by Mochi transpiler v0.10.33 on 2025-07-21 16:07 GMT+7
import Data.List (intercalate, isInfixOf, union, intersect, nub, sortOn, (\\))
import qualified Data.Map as Map
data MGroup k a = MGroup {key :: k, items :: [a]} deriving (Show)
data GenType1 = GenType1
  { cat :: String,
    val :: Int,
    flag :: Bool
  } deriving (Show)


items = [GenType1 {cat = "a", val = 10, flag = True}, GenType1 {cat = "a", val = 5, flag = False}, GenType1 {cat = "b", val = 20, flag = True}]

result = sortOn (\g -> g.key) [Map.fromList [(cat, g.key), (share, sum [if x.flag then x.val else 0 | x <- g.items] `div` sum [x.val | x <- g.items])] | g <- [MGroup {key = k, items = [i | i <- items, i.cat == k]} | k <- nub (map (\i -> i.cat) [i | i <- items])]]

main :: IO ()
main = do
    print (result)
