{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE OverloadedRecordDot #-}
{-# LANGUAGE NoFieldSelectors #-}
import Prelude hiding (cat, val)
-- Generated by Mochi transpiler v0.10.33 on 2025-07-21 18:46 GMT+7
import Data.List (intercalate, isInfixOf, union, intersect, nub, sortOn, (\\))
import qualified Data.Map as Map
data MGroup k a = MGroup {key :: k, items :: [a]} deriving (Show)
data GenType1 = GenType1
  { cat :: String,
    val :: Int
  } deriving (Show)


grouped = sortOn (\g -> -sum [x.val | x <- g.items]) [Map.fromList [(cat, g.key), (total, sum [x.val | x <- g.items])] | g <- [MGroup {key = k, items = [i | i <- items, i.cat == k]} | k <- nub (map (\i -> i.cat) [i | i <- items])]]

items = [GenType1 {cat = "a", val = 3}, GenType1 {cat = "a", val = 1}, GenType1 {cat = "b", val = 5}, GenType1 {cat = "b", val = 2}]

main :: IO ()
main = do
    print (grouped)
