run: exit status 1

/workspace/mochi/tests/transpiler/x/hs/group_by_left_join.hs:25:25: error:
    Variable not in scope: name
    Suggested fix:
      Notice that ‘name’ is a field selector belonging to the type ‘GenType1’
      that has been suppressed by NoFieldSelectors.
   |
25 | stats = [Map.fromList [(name, g.key), (count, length [r | r <- g.items, r.o])] | g <- [MGroup {key = k, items = [[c, o] | c <- customers, o <- orders, o.customerId == c.id && c.name == k]} | k <- nub (map (\c o -> c.name) [[c, o] | c <- customers, o <- orders, o.customerId == c.id])]]
   |                         ^^^^

/workspace/mochi/tests/transpiler/x/hs/group_by_left_join.hs:25:40: error:
    Variable not in scope: count
   |
25 | stats = [Map.fromList [(name, g.key), (count, length [r | r <- g.items, r.o])] | g <- [MGroup {key = k, items = [[c, o] | c <- customers, o <- orders, o.customerId == c.id && c.name == k]} | k <- nub (map (\c o -> c.name) [[c, o] | c <- customers, o <- orders, o.customerId == c.id])]]
   |                                        ^^^^^

/workspace/mochi/tests/transpiler/x/hs/group_by_left_join.hs:31:9: error:
    • Couldn't match type ‘[]’ with ‘IO’
      Expected: IO Char
        Actual: [Char]
    • In a stmt of a 'do' block:
        putStrLn show s.name ++ " " ++ "orders:" ++ " " ++ show s.count
      In the expression:
        do putStrLn show s.name ++ " " ++ "orders:" ++ " " ++ show s.count
      In the first argument of ‘mapM_’, namely
        ‘(\ s
            -> do putStrLn show s.name
                    ++ " " ++ "orders:" ++ " " ++ show s.count)’
   |
31 |         putStrLn show s.name ++ " " ++ "orders:" ++ " " ++ show s.count
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/workspace/mochi/tests/transpiler/x/hs/group_by_left_join.hs:31:18: error:
    • Couldn't match type: a0 -> String
                     with: [Char]
      Expected: String
        Actual: a0 -> String
    • Probable cause: ‘show’ is applied to too few arguments
      In the first argument of ‘putStrLn’, namely ‘show’
      In the first argument of ‘(++)’, namely ‘putStrLn show s.name’
      In a stmt of a 'do' block:
        putStrLn show s.name ++ " " ++ "orders:" ++ " " ++ show s.count
   |
31 |         putStrLn show s.name ++ " " ++ "orders:" ++ " " ++ show s.count
   |                  ^^^^
