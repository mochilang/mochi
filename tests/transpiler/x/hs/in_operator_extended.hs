{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE OverloadedRecordDot #-}
{-# LANGUAGE NoFieldSelectors #-}
-- Generated by Mochi transpiler v0.10.33 on 2025-07-21 16:07 GMT+7
import Data.List (intercalate, isInfixOf, union, intersect, nub, sortOn, (\\))
import qualified Data.Map as Map
m = Map.fromList [(a, 1)]

s = "hello"

xs = [1, 2, 3]

ys = [x | x <- xs, x `mod` 2 == 1]

main :: IO ()
main = do
    putStrLn (if 1 `elem` ys then "1" else "0")
    putStrLn (if 2 `elem` ys then "1" else "0")
    putStrLn (if "a" `isInfixOf` m then "1" else "0")
    putStrLn (if "b" `isInfixOf` m then "1" else "0")
    putStrLn (if "ell" `isInfixOf` s then "1" else "0")
    putStrLn (if "foo" `isInfixOf` s then "1" else "0")
