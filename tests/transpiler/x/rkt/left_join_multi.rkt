;; Generated by Mochi 0.10.32 on 2025-07-21 13:50 +0700
#lang racket
(require racket/list racket/string)

(define customers (list (hash "id" 1 "name" "Alice") (hash "id" 2 "name" "Bob")))
(define orders (list (hash "id" 100 "customerId" 1) (hash "id" 101 "customerId" 2)))
(define items (list (hash "orderId" 100 "sku" "a")))
(define result (let ([_res '()])
  (for ([o orders])
    (for ([c customers])
      (when (= (hash-ref o "customerId") (hash-ref c "id"))
        (let ([matched #f])
          (for ([i items])
            (when (= (hash-ref o "id") (hash-ref i "orderId"))
              (set! matched #t)
              (set! _res (append _res (list (hash "orderId" (hash-ref o "id") "name" (hash-ref c "name") "item" i))))
          )
          (when (not matched)
            (let ([i #f])
              (set! _res (append _res (list (hash "orderId" (hash-ref o "id") "name" (hash-ref c "name") "item" i))))
            )
          )
        )
      )
    )
  )
  _res))
(displayln "--- Left Join Multi ---")
(for ([r result])
(displayln (string-join (filter (lambda (s) (not (string=? s ""))) (list (format "~a" (hash-ref r "orderId")) (format "~a" (hash-ref r "name")) (format "~a" (hash-ref r "item")))) " "))
)
