;; Generated by Mochi 0.10.32 on 2025-07-20 17:38 +0700
#lang typed/racket/no-check
(require racket/list racket/string)

(: customers (Listof (HashTable String Any)))
(define customers (list (hash "id" 1 "name" "Alice") (hash "id" 2 "name" "Bob") (hash "id" 3 "name" "Charlie")))
(: orders (Listof (HashTable String Integer)))
(define orders (list (hash "id" 100 "customerId" 1 "total" 250) (hash "id" 101 "customerId" 2 "total" 125) (hash "id" 102 "customerId" 1 "total" 300)))
(: result (Listof (HashTable String Integer)))
(define result (let ([_res '()])
  (for ([o orders])
    (for ([c customers])
      (set! _res (append _res (list (hash "orderId" (hash-ref o "id") "orderCustomerId" (hash-ref o "customerId") "pairedCustomerName" (hash-ref c "name") "orderTotal" (hash-ref o "total")))))
    )
  )
  _res))
(displayln "--- Cross Join: All order-customer pairs ---")
(for ([entry result])
(displayln (format "~a ~a ~a ~a ~a ~a ~a ~a" "Order" (hash-ref entry "orderId") "(customerId:" (hash-ref entry "orderCustomerId") ", total: $" (hash-ref entry "orderTotal") ") paired with" (hash-ref entry "pairedCustomerName")))
)
