;; Generated by Mochi 0.10.34 on 2025-07-21 20:06 +0700
#lang racket
(require racket/list racket/string)

(define products (list (hash "name" "Laptop" "price" 1500) (hash "name" "Smartphone" "price" 900) (hash "name" "Tablet" "price" 600) (hash "name" "Monitor" "price" 300) (hash "name" "Keyboard" "price" 100) (hash "name" "Mouse" "price" 50) (hash "name" "Headphones" "price" 200)))
(define expensive (let ([_res '()])
  (for ([p products])
    (set! _res (append _res (list (cons (hash-ref p "price") p))))
  )
  (set! _res (sort _res > #:key car))
  (set! _res (map cdr _res))
  (set! _res (drop _res 1))
  (set! _res (take _res 3))
  _res))
(displayln "--- Top products (excluding most expensive) ---")
(for ([item expensive])
(displayln (string-join (filter (lambda (s) (not (string=? s ""))) (list (format "~a" (hash-ref item "name")) (format "~a" "costs $") (format "~a" (hash-ref item "price")))) " "))
)
