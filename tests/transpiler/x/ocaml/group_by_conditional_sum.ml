(* Generated by Mochi transpiler v0.10.32 on 2025-07-21 15:41 +0700 *)

exception Break
exception Continue

let () =
  let items = [[("cat", Obj.repr ("a")); ("val", Obj.repr (10)); ("flag", Obj.repr (true))]; [("cat", Obj.repr ("a")); ("val", Obj.repr (5)); ("flag", Obj.repr (false))]; [("cat", Obj.repr ("b")); ("val", Obj.repr (20)); ("flag", Obj.repr (true))]] in
  let result = (let __groups0 = ref [] in
  List.iter (fun i ->
    let key = (Obj.magic (List.assoc "cat" i)) in
    let cur = try List.assoc key !__groups0 with Not_found -> [] in
    __groups0 := (key, i :: cur) :: List.remove_assoc key !__groups0;
  ) items;
  let __res0 = ref [] in
  List.iter (fun (g_key, g_items) ->
    let g = List.rev g_items in
    __res0 := [("cat", Obj.repr (g_key)); ("share", Obj.repr (((List.fold_left (fun acc x -> acc + x) 0 (List.map (fun x -> if (Obj.magic (List.assoc "flag" x)) then (Obj.magic (List.assoc "val" x)) else 0) g)) / (List.fold_left (fun acc x -> acc + x) 0 (List.map (fun x -> (Obj.magic (List.assoc "val" x))) g)))))] :: !__res0
  ) !__groups0;
  List.rev !__res0) in
  print_endline (String.concat " " [result]);
