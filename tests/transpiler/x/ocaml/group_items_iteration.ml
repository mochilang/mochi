(* Generated by Mochi transpiler v0.10.32 on 2025-07-21 15:41 +0700 *)

exception Break
exception Continue

let () =
  let data = [[("tag", Obj.repr ("a")); ("val", Obj.repr (1))]; [("tag", Obj.repr ("a")); ("val", Obj.repr (2))]; [("tag", Obj.repr ("b")); ("val", Obj.repr (3))]] in
  let groups = (let __groups0 = ref [] in
  List.iter (fun d ->
    let key = (Obj.magic (List.assoc "tag" d)) in
    let cur = try List.assoc key !__groups0 with Not_found -> [] in
    __groups0 := (key, d :: cur) :: List.remove_assoc key !__groups0;
  ) data;
  let __res0 = ref [] in
  List.iter (fun (g_key, g_items) ->
    let g = List.rev g_items in
    __res0 := g :: !__res0
  ) !__groups0;
  List.rev !__res0) in
  let tmp = ref [] in
  (try List.iter (fun g ->
    try
  let total = ref 0 in
  (try List.iter (fun x ->
    try
  total := (!total + (Obj.magic (List.assoc "val" x)));
    with Continue -> ()) (Obj.magic (List.assoc "items" g)) with Break -> ())
  tmp := List.append !tmp [[("tag", Obj.repr ((Obj.magic (List.assoc "key" g)))); ("total", Obj.repr (!total))]];
    with Continue -> ()) groups with Break -> ())
  let result = (let __tmp0 = (List.map (fun r -> r) !tmp) in
  let __tmp0 = List.sort (fun a b -> compare (Obj.magic (List.assoc "tag" a)) (Obj.magic (List.assoc "tag" b))) __tmp0 in
  __tmp0) in
  print_endline (String.concat " " [result]);
