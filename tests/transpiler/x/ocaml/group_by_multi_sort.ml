(* Generated by Mochi transpiler v0.10.35 on 2025-07-22 13:35 +0700 *)

let () =
  let items = [[("a", Obj.repr "x"); ("b", Obj.repr 1); ("val", Obj.repr 2)]; [("a", Obj.repr "x"); ("b", Obj.repr 2); ("val", Obj.repr 3)]; [("a", Obj.repr "y"); ("b", Obj.repr 1); ("val", Obj.repr 4)]; [("a", Obj.repr "y"); ("b", Obj.repr 2); ("val", Obj.repr 1)]] in
  let grouped = (let __groups0 = ref [] in
  List.iter (fun i ->
    let key = [("a", Obj.repr (Obj.obj (List.assoc "a" i) : string)); ("b", Obj.repr (Obj.obj (List.assoc "b" i) : int))] in
    let cur = try List.assoc key !__groups0 with Not_found -> [] in
    __groups0 := (key, i :: cur) :: List.remove_assoc key !__groups0;
  ) items;
  let __res0 = ref [] in
  List.iter (fun (g_key, g_items) ->
    let g = List.rev g_items in
    __res0 := ((List.fold_left (fun acc x -> acc + x) 0 (List.map (fun x -> (Obj.obj (List.assoc "val" x) : int)) g)), [("a", Obj.repr (Obj.obj (List.assoc "a" g_key) : string)); ("b", Obj.repr (Obj.obj (List.assoc "b" g_key) : int)); ("total", Obj.repr (List.fold_left (fun acc x -> acc + x) 0 (List.map (fun x -> (Obj.obj (List.assoc "val" x) : int)) g)))]) :: !__res0
  ) !__groups0;
  let __sorted = List.sort (fun a b -> compare (fst b) (fst a)) !__res0 in
  List.rev (List.map snd __sorted)) in
  print_endline (String.concat " " [grouped]);
