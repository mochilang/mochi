// Generated by Mochi Zig transpiler on 2025-07-21 10:57 +0000
const std = @import("std");

pub fn main() void {
    const xs = [_]i64{1, 2, 3};
    const ys: []i64 = blk: {
    var arr = std.ArrayList(i64).init(std.heap.page_allocator);
    for (xs) |x| {
        if (x % 2 == 1) {
            arr.append(x) catch unreachable;
        }
    }
    var tmp = arr.toOwnedSlice() catch unreachable;
    break :blk tmp;
};
    try std.io.getStdOut().writer().print("{any}\n", .{std.mem.indexOfScalar(i64, ys, 1) != null});
    try std.io.getStdOut().writer().print("{any}\n", .{std.mem.indexOfScalar(i64, ys, 2) != null});
    const m = blk: { var m = std.StringHashMap(i64).init(std.heap.page_allocator); m.put("a", 1) catch unreachable; break :blk m; };
    try std.io.getStdOut().writer().print("{any}\n", .{std.mem.indexOf(u8, m, "a") != null});
    try std.io.getStdOut().writer().print("{any}\n", .{std.mem.indexOf(u8, m, "b") != null});
    const s = "hello";
    try std.io.getStdOut().writer().print("{any}\n", .{std.mem.indexOf(u8, s, "ell") != null});
    try std.io.getStdOut().writer().print("{any}\n", .{std.mem.indexOf(u8, s, "foo") != null});
}
