// Generated by Mochi Zig transpiler on 2025-07-21 10:57 +0000
const std = @import("std");

const Entry = struct {
    name: []const u8,
    age: i64,
    is_senior: bool,
};

const People = struct {
    name: []const u8,
    age: i64,
};

pub fn main() void {
    const people: [_]People = [_]People{.{ .name = "Alice", .age = 30 }, .{ .name = "Bob", .age = 15 }, .{ .name = "Charlie", .age = 65 }, .{ .name = "Diana", .age = 45 }};
    const adults: []Entry = blk: {
    var arr = std.ArrayList(Entry).init(std.heap.page_allocator);
    for (people) |person| {
        if (person.age >= 18) {
            arr.append(.{ .name = person.name, .age = person.age, .is_senior = person.age >= 60 }) catch unreachable;
        }
    }
    var tmp = arr.toOwnedSlice() catch unreachable;
    break :blk tmp;
};
    try std.io.getStdOut().writer().print("{s}\n", .{"--- Adults ---"});
    for (adults) |person| {
        try std.io.getStdOut().writer().print("{any} {s} {any} {any}\n", .{person.name, "is", person.age, if (person.is_senior) " (senior)" else ""});
    }
}
