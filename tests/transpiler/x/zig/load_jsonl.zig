// Generated by Mochi Zig transpiler on 2025-07-22 11:32 +0700
const std = @import("std");

const People = struct {
    name: []const u8,
    age: i64,
    email: []const u8,
};

const Entry2 = struct {
    name: []const u8,
    email: []const u8,
};

const Person = struct {
    name: []const u8,
    age: i64,
    email: []const u8,
};

pub fn main() void {
    const people: [3]People = [3]People{.{ .name = "Alice", .age = 30, .email = "alice@example.com" }, .{ .name = "Bob", .age = 15, .email = "bob@example.com" }, .{ .name = "Charlie", .age = 20, .email = "charlie@example.com" }};
    const adults: []Entry2 = blk: {
    var arr = std.ArrayList(Entry2).init(std.heap.page_allocator);
    for (people) |p| {
        if (p.age >= 18) {
            arr.append(.{ .name = p.name, .email = p.email }) catch unreachable;
        }
    }
    var tmp = arr.toOwnedSlice() catch unreachable;
    break :blk tmp;
};
    for (adults) |a| {
        std.io.getStdOut().writer().print("{any} {any}\n", .{a.name, a.email}) catch unreachable;
    }
}
