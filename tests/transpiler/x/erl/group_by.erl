#!/usr/bin/env escript
-module(main).
-export([main/1]).

% Generated by Mochi transpiler v0.10.33 (9f2177b9e) on 2025-07-21 18:06 +0700

main(_) ->
    People = [#{"name" => "Alice", "age" => 30, "city" => "Paris"}, #{"name" => "Bob", "age" => 15, "city" => "Hanoi"}, #{"name" => "Charlie", "age" => 65, "city" => "Paris"}, #{"name" => "Diana", "age" => 45, "city" => "Hanoi"}, #{"name" => "Eve", "age" => 70, "city" => "Paris"}, #{"name" => "Frank", "age" => 22, "city" => "Hanoi"}],
    Stats = lists:map(fun(P) ->
        Key = element(1, P),
        Items = element(2, P),
        #{"city" => Key, "count" => length(Items), "avg_age" => (lists:sum([maps:get("age", P) || P <- Items]) / length([maps:get("age", P) || P <- Items]))} end, maps:to_list(lists:foldl(fun(P, Acc) ->
        K = element(1, P),
        V = element(2, P),
        maps:put(K, (maps:get(K, Acc, []) ++ [V]), Acc) end, #{}, [{maps:get("city", Person), Person} || Person <- People]))),
    io:format("~s~n", ["--- People grouped by city ---"]),
    lists:foreach(fun(S) ->
    io:format("~p ~s ~p ~s ~p~n", [maps:get("city", S), ": count =", maps:get("count", S), ", avg_age =", maps:get("avg_age", S)])
end, Stats).
