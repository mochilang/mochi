#!/usr/bin/env escript
-module(main).
-export([main/1]).

% Generated by Mochi transpiler v0.10.32 (17974ba34) on 2025-07-21 07:29 +0700

main(_) ->
    Customers = [#{id => 1, name => "Alice"}, #{id => 2, name => "Bob"}, #{id => 3, name => "Charlie"}, #{id => 4, name => "Diana"}],
    Orders = [#{id => 100, customerId => 1, total => 250}, #{id => 101, customerId => 2, total => 125}, #{id => 102, customerId => 1, total => 300}],
    Result = [#{customerName => maps:get(name, C), order => O} || O <- Orders, C <- Customers, (maps:get(customerId, O) == maps:get(id, C)), (maps:get(customerId, O) == maps:get(id, C))],
    io:format("~s~n", ["--- Right Join using syntax ---"]),
    lists:foreach(fun(Entry) ->
    case (maps:get(order, Entry) /= nil) of
        true -> io:format("~s ~p ~s ~p ~s ~p~n", ["Customer", maps:get(customerName, Entry), "has order", maps:get(id, maps:get(order, Entry)), "- $", maps:get(total, maps:get(order, Entry))]);
        _ -> io:format("~s ~p ~s~n", ["Customer", maps:get(customerName, Entry), "has no orders"])
    end
end, Result).
