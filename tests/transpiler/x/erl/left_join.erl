#!/usr/bin/env escript
-module(main).
-export([main/1]).

% Generated by Mochi transpiler v0.10.33 (9f2177b9e) on 2025-07-21 18:06 +0700

main(_) ->
    Customers = [#{"id" => 1, "name" => "Alice"}, #{"id" => 2, "name" => "Bob"}],
    Orders = [#{"id" => 100, "customerId" => 1, "total" => 250}, #{"id" => 101, "customerId" => 3, "total" => 80}],
    Result = lists:reverse(lists:foldl(fun(O, Acc0) ->
    {Matched,Acc} = lists:foldl(fun(C, {M,A}) ->
        case (maps:get("customerId", O) == maps:get("id", C)) of
            true -> {true, [#{"orderId" => maps:get("id", O), "customer" => C, "total" => maps:get("total", O)}|A]};
            _ -> {M,A}
        end
    end, {false, Acc0}, Customers),
    case Matched of
        true -> Acc;
        false -> [(fun() -> C = nil, #{"orderId" => maps:get("id", O), "customer" => C, "total" => maps:get("total", O)} end())|Acc]
    end
end, [], Orders)),
    io:format("~s~n", ["--- Left Join ---"]),
    lists:foreach(fun(Entry) ->
    io:format("~s ~p ~s ~p ~s ~p~n", ["Order", maps:get("orderId", Entry), "customer", maps:get("customer", Entry), "total", maps:get("total", Entry)])
end, Result).
