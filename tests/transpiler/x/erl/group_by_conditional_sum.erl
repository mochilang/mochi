#!/usr/bin/env escript
-module(main).
-export([main/1]).

% Generated by Mochi transpiler v0.10.32 (ff163ce10) on 2025-07-21 06:23 UTC

main(_) ->
    Items = [#{"cat" => "a", "val" => 10, "flag" => true}, #{"cat" => "a", "val" => 5, "flag" => false}, #{"cat" => "b", "val" => 20, "flag" => true}],
    Result = lists:map(fun(P) ->
    try
        Key = element(1, P),
        Items2 = element(2, P),
        #{"cat" => Key, "share" => (lists:sum([(case (maps:get("flag", X) /= nil) of
    true -> maps:get("val", X);
    _ -> 0
end) || X <- Items2]) div lists:sum([maps:get("val", X) || X <- Items2]))}
    catch
        {return, V} -> V
    end end, lists:keysort(1, maps:to_list(lists:foldl(fun(X, Acc) ->
    try
        maps:put(maps:get("cat", X), (maps:get(maps:get("cat", X), Acc, []) ++ [X]), Acc)
    catch
        {return, V} -> V
    end end, #{}, Items)))),
    io:format("~p~n", [Result]).
