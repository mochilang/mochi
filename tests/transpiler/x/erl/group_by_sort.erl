#!/usr/bin/env escript
-module(main).
-export([main/1]).

% Generated by Mochi transpiler v0.10.33 (7cdccba00) on 2025-07-21 17:26 +0700

main(_) ->
    Items = [#{"cat" => "a", "val" => 3}, #{"cat" => "a", "val" => 1}, #{"cat" => "b", "val" => 5}, #{"cat" => "b", "val" => 2}],
    Grouped = lists:map(fun(T) ->
    try
        element(2, T)
    catch
        {return, _V} -> _V
    end end, lists:sort(fun(A, B) ->
    try
        (element(1, A) =< element(1, B))
    catch
        {return, _V} -> _V
    end end, lists:map(fun(P) ->
    try
        Key = element(1, P),
        Items2 = element(2, P),
        {-lists:sum([maps:get("val", X) || X <- Items2]), #{"cat" => Key, "total" => lists:sum([maps:get("val", X) || X <- Items2])}}
    catch
        {return, _V} -> _V
    end end, maps:to_list(lists:foldl(fun(P, Acc) ->
    try
        K = element(1, P),
        V = element(2, P),
        maps:put(K, (maps:get(K, Acc, []) ++ [V]), Acc)
    catch
        {return, _V} -> _V
    end end, #{}, [{maps:get("cat", I), I} || I <- Items]))))),
    io:format("~p~n", [Grouped]).
