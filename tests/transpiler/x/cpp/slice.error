compile: exit status 1
/workspace/mochi/tests/transpiler/x/cpp/slice.cpp: In lambda function:
/workspace/mochi/tests/transpiler/x/cpp/slice.cpp:8:397: error: aggregate ‘std::ostringstream ss’ has incomplete type and cannot be defined
    8 |     std::cout << std::boolalpha << ([&]{ auto tmp = ([&](const auto& c){ if constexpr(std::is_same_v<std::decay_t<decltype(c)>, std::string>) return c.substr(1, 3 - 1); else return std::vector<typename std::decay_t<decltype(c)>::value_type>(c.begin()+1, c.begin()+3); })(std::vector{1, 2, 3}); if constexpr(std::is_same_v<std::decay_t<decltype(tmp)>, std::string>) return tmp; std::ostringstream ss; for(size_t i=0;i<tmp.size();++i){ if(i>0) ss<<" "; ss<<tmp[i]; } return ss.str(); }()) << std::endl;
      |                                                                                                                                                                                                                                                                                                                                                                                                             ^~
/workspace/mochi/tests/transpiler/x/cpp/slice.cpp: In lambda function:
/workspace/mochi/tests/transpiler/x/cpp/slice.cpp:9:397: error: aggregate ‘std::ostringstream ss’ has incomplete type and cannot be defined
    9 |     std::cout << std::boolalpha << ([&]{ auto tmp = ([&](const auto& c){ if constexpr(std::is_same_v<std::decay_t<decltype(c)>, std::string>) return c.substr(0, 2 - 0); else return std::vector<typename std::decay_t<decltype(c)>::value_type>(c.begin()+0, c.begin()+2); })(std::vector{1, 2, 3}); if constexpr(std::is_same_v<std::decay_t<decltype(tmp)>, std::string>) return tmp; std::ostringstream ss; for(size_t i=0;i<tmp.size();++i){ if(i>0) ss<<" "; ss<<tmp[i]; } return ss.str(); }()) << std::endl;
      |                                                                                                                                                                                                                                                                                                                                                                                                             ^~
/workspace/mochi/tests/transpiler/x/cpp/slice.cpp: In lambda function:
/workspace/mochi/tests/transpiler/x/cpp/slice.cpp:10:397: error: aggregate ‘std::ostringstream ss’ has incomplete type and cannot be defined
   10 |     std::cout << std::boolalpha << ([&]{ auto tmp = ([&](const auto& c){ if constexpr(std::is_same_v<std::decay_t<decltype(c)>, std::string>) return c.substr(1, 4 - 1); else return std::vector<typename std::decay_t<decltype(c)>::value_type>(c.begin()+1, c.begin()+4); })(std::string("hello")); if constexpr(std::is_same_v<std::decay_t<decltype(tmp)>, std::string>) return tmp; std::ostringstream ss; for(size_t i=0;i<tmp.size();++i){ if(i>0) ss<<" "; ss<<tmp[i]; } return ss.str(); }()) << std::endl;
      |                                                                                                                                                                                                                                                                                                                                                                                                             ^~
