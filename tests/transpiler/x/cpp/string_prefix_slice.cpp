// Generated by Mochi transpiler v0.10.32 on 2025-07-21 11:05:03 GMT+7
#include <iostream>
#include <string>
#include <sstream>
#include <vector>
#include <type_traits>

auto prefix = std::string("fore");
auto s1 = std::string("forest");
auto s2 = std::string("desert");

int main() {
    { std::ostringstream __ss; __ss << std::boolalpha; if(false) __ss << " "; __ss << static_cast<int>((([&](const auto& c){ if constexpr(std::is_same_v<std::decay_t<decltype(c)>, std::string>) return c.substr(0, prefix.size() - 0); else return std::vector<typename std::decay_t<decltype(c)>::value_type>(c.begin()+0, c.begin()+prefix.size()); })(s1) == prefix)); auto __line = __ss.str(); if(!__line.empty() && __line.back() == ' ') __line.pop_back(); std::cout << __line << std::endl; }
    { std::ostringstream __ss; __ss << std::boolalpha; if(false) __ss << " "; __ss << static_cast<int>((([&](const auto& c){ if constexpr(std::is_same_v<std::decay_t<decltype(c)>, std::string>) return c.substr(0, prefix.size() - 0); else return std::vector<typename std::decay_t<decltype(c)>::value_type>(c.begin()+0, c.begin()+prefix.size()); })(s2) == prefix)); auto __line = __ss.str(); if(!__line.empty() && __line.back() == ' ') __line.pop_back(); std::cout << __line << std::endl; }
    return 0;
}
