// Generated by Mochi transpiler v0.10.32 on 2025-07-20 23:05:36 GMT+7
#include <iostream>
#include <string>
#include <vector>
#include <map>

struct CustomersItem {
    int id;
    std::string name;
};

struct OrdersItem {
    int id;
    int customerId;
    int total;
};

struct ResultItem {
    int orderId;
    std::string customerName;
    int total;
};

std::vector<CustomersItem> customers = std::vector{CustomersItem{.id = 1, .name = std::string("Alice")}, CustomersItem{.id = 2, .name = std::string("Bob")}, CustomersItem{.id = 3, .name = std::string("Charlie")}};
std::vector<OrdersItem> orders = std::vector{OrdersItem{.id = 100, .customerId = 1, .total = 250}, OrdersItem{.id = 101, .customerId = 2, .total = 125}, OrdersItem{.id = 102, .customerId = 1, .total = 300}, OrdersItem{.id = 103, .customerId = 4, .total = 80}};
std::vector<ResultItem> result = ([]{ std::vector<ResultItem> __items;
for (auto o : orders) {
for (auto c : customers) {
    if((o.customerId == c.id)) {
        __items.push_back(ResultItem{.orderId = o.id, .customerName = c.name, .total = o.total});
    }
}
}
return __items; }());

int main() {
    std::cout << std::boolalpha << std::string("--- Orders with customer info ---") << std::endl;
    for (auto entry : result) {
        std::cout << std::boolalpha << std::string("Order") <<  " " << entry.orderId <<  " " << std::string("by") <<  " " << entry.customerName <<  " " << std::string("- $") <<  " " << entry.total << std::endl;
    }
    return 0;
}
