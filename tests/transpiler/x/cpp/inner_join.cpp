// Generated by Mochi transpiler v0.10.32 on 2025-07-21 11:04:44 GMT+7
#include <iostream>
#include <string>
#include <vector>
#include <map>
#include <sstream>

struct CustomersItem {
    int id;
    std::string name;
};

struct OrdersItem {
    int id;
    int customerId;
    int total;
};

struct ResultItem {
    int orderId;
    std::string customerName;
    int total;
};

std::vector<CustomersItem> customers = std::vector{CustomersItem{.id = 1, .name = std::string("Alice")}, CustomersItem{.id = 2, .name = std::string("Bob")}, CustomersItem{.id = 3, .name = std::string("Charlie")}};
std::vector<OrdersItem> orders = std::vector{OrdersItem{.id = 100, .customerId = 1, .total = 250}, OrdersItem{.id = 101, .customerId = 2, .total = 125}, OrdersItem{.id = 102, .customerId = 1, .total = 300}, OrdersItem{.id = 103, .customerId = 4, .total = 80}};
std::vector<ResultItem> result = ([]{ std::vector<ResultItem> __items;
for (auto o : orders) {
for (auto c : customers) {
    if((o.customerId == c.id)) {
        __items.push_back(ResultItem{.orderId = o.id, .customerName = c.name, .total = o.total});
    }
}
}
return __items; }());

int main() {
    { std::ostringstream __ss; __ss << std::boolalpha; if(false) __ss << " "; __ss << std::string("--- Orders with customer info ---"); auto __line = __ss.str(); if(!__line.empty() && __line.back() == ' ') __line.pop_back(); std::cout << __line << std::endl; }
    for (auto entry : result) {
        { std::ostringstream __ss; __ss << std::boolalpha; if(false) __ss << " "; __ss << std::string("Order"); if(true) __ss << " "; __ss << entry.orderId; if(true) __ss << " "; __ss << std::string("by"); if(true) __ss << " "; __ss << entry.customerName; if(true) __ss << " "; __ss << std::string("- $"); if(true) __ss << " "; __ss << entry.total; auto __line = __ss.str(); if(!__line.empty() && __line.back() == ' ') __line.pop_back(); std::cout << __line << std::endl; }
    }
    return 0;
}
