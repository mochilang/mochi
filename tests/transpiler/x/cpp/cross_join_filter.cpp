// Generated by Mochi transpiler v0.10.33 on 2025-07-21 16:39:13 GMT+7
#include <iostream>
#include <string>
#include <vector>
#include <map>
#include <sstream>
#include <iomanip>

static std::string format_double(double v) {
    std::ostringstream ss;
    ss << std::fixed << std::setprecision(15) << v;
    auto s = ss.str();
    if(s.find('.') != std::string::npos) {
        while(!s.empty() && s.back()=='0') s.pop_back();
        if(!s.empty() && s.back()=='.') s.push_back('0');
    }
    return s;
}

struct PairsItem {
    int n;
    std::string l;
};

auto nums = std::vector{1, 2, 3};
auto letters = std::vector{std::string("A"), std::string("B")};
std::vector<PairsItem> pairs = ([]{ std::vector<PairsItem> __items;
for (auto n : nums) {
for (auto l : letters) {
    if(((n % 2) == 0)) {
        __items.push_back(PairsItem{.n = n, .l = l});
    }
}
}
return __items; }());

int main() {
    std::cout << std::boolalpha << std::showpoint << std::setprecision(15) << std::string("--- Even pairs ---") << std::endl;
    for (auto p : pairs) {
        std::cout << std::boolalpha << std::showpoint << std::setprecision(15) << p.n << " " << p.l << std::endl;
    }
    return 0;
}
