// Generated by Mochi transpiler v0.10.32 on 2025-07-21 11:04:33 GMT+7
#include <iostream>
#include <string>
#include <vector>
#include <map>
#include <sstream>

struct PairsItem {
    int n;
    std::string l;
};

auto nums = std::vector{1, 2, 3};
auto letters = std::vector{std::string("A"), std::string("B")};
std::vector<PairsItem> pairs = ([]{ std::vector<PairsItem> __items;
for (auto n : nums) {
for (auto l : letters) {
    if(((n % 2) == 0)) {
        __items.push_back(PairsItem{.n = n, .l = l});
    }
}
}
return __items; }());

int main() {
    { std::ostringstream __ss; __ss << std::boolalpha; if(false) __ss << " "; __ss << std::string("--- Even pairs ---"); auto __line = __ss.str(); if(!__line.empty() && __line.back() == ' ') __line.pop_back(); std::cout << __line << std::endl; }
    for (auto p : pairs) {
        { std::ostringstream __ss; __ss << std::boolalpha; if(false) __ss << " "; __ss << p.n; if(true) __ss << " "; __ss << p.l; auto __line = __ss.str(); if(!__line.empty() && __line.back() == ' ') __line.pop_back(); std::cout << __line << std::endl; }
    }
    return 0;
}
