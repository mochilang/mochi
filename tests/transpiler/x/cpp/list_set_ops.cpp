// Generated by Mochi transpiler v0.10.32 on 2025-07-21 11:04:49 GMT+7
#include <iostream>
#include <string>
#include <sstream>
#include <vector>

int main() {
    { std::ostringstream __ss; __ss << std::boolalpha; if(false) __ss << " "; __ss << (std::vector{1, 2} union std::vector{2, 3}); auto __line = __ss.str(); if(!__line.empty() && __line.back() == ' ') __line.pop_back(); std::cout << __line << std::endl; }
    { std::ostringstream __ss; __ss << std::boolalpha; if(false) __ss << " "; __ss << (std::vector{1, 2, 3} except std::vector{2}); auto __line = __ss.str(); if(!__line.empty() && __line.back() == ' ') __line.pop_back(); std::cout << __line << std::endl; }
    { std::ostringstream __ss; __ss << std::boolalpha; if(false) __ss << " "; __ss << (std::vector{1, 2, 3} intersect std::vector{2, 4}); auto __line = __ss.str(); if(!__line.empty() && __line.back() == ' ') __line.pop_back(); std::cout << __line << std::endl; }
    { std::ostringstream __ss; __ss << std::boolalpha; if(false) __ss << " "; __ss << (std::vector{1, 2} union std::vector{2, 3}).size(); auto __line = __ss.str(); if(!__line.empty() && __line.back() == ' ') __line.pop_back(); std::cout << __line << std::endl; }
    return 0;
}
