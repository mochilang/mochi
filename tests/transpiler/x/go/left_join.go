//go:build ignore

// Generated by Mochi v0.10.32 on 2025-07-21 11:02:15 GMT+7
package main

import (
	"fmt"
)

var customers []Customer = []Customer{Customer{
	ID:   1,
	Name: "Alice",
}, Customer{
	ID:   2,
	Name: "Bob",
}}

type Customer struct {
	ID   int    `json:"id"`
	Name string `json:"name"`
}

var orders []Order = []Order{Order{
	ID:         100,
	CustomerID: 1,
	Total:      250,
}, Order{
	ID:         101,
	CustomerID: 3,
	Total:      80,
}}

type Order struct {
	ID         int `json:"id"`
	CustomerID int `json:"customerId"`
	Total      int `json:"total"`
}

var result []Result = func() []Result {
	res := []Result{}
	for _, o := range orders {
		for _, c := range customers {
			if o.CustomerID == c.ID {
				res = append(res, Result{
					OrderID:  o.ID,
					Customer: c,
					Total:    o.Total,
				})
			}
		}
	}
	return res
}()

type Result struct {
	OrderID  int      `json:"orderId"`
	Customer Customer `json:"customer"`
	Total    int      `json:"total"`
}

func main() {
	fmt.Println("--- Left Join ---")
	for _, entry := range result {
		fmt.Println("Order", entry.OrderID, "customer", entry.Customer, "total", entry.Total)
	}
}
