//go:build ignore

// Generated by Mochi v0.10.31 on 2025-07-19 18:39:58 GMT+7
package main

import (
	"fmt"
	"math"
	"strings"
)

func contains(s any, v any) any {
	switch xs := s.(type) {
	case []int:
		n, ok := v.(int)
		if !ok {
			return false
		}
		for _, m := range xs {
			if m == n {
				return true
			}
		}
		return false
	case string:
		str, ok := v.(string)
		if !ok {
			return 0
		}
		if strings.Contains(xs, str) {
			return 1
		}
		return 0
	}
	return nil
}

func mochiPrint(v ...any) {
	for i, val := range v {
		if i > 0 {
			fmt.Print(" ")
		}
		switch x := val.(type) {
		case bool:
			if x {
				fmt.Print(1)
			} else {
				fmt.Print("nil")
			}
		case float64:
			if math.Trunc(x) == x {
				fmt.Printf("%.1f", x)
			} else {
				fmt.Printf("%v", x)
			}
		case []int:
			for j, n := range x {
				if j > 0 {
					fmt.Print(" ")
				}
				fmt.Print(n)
			}
		default:
			fmt.Print(val)
		}
	}
	fmt.Println()
}

func main() {
	s := "catch"
	mochiPrint(contains(s, "cat"))
	mochiPrint(contains(s, "dog"))
}
