//go:build ignore

// Generated by Mochi v0.10.31 on 2025-07-19 14:54:51 GMT+7
package main

import (
	"fmt"
	"math"
)

func slice(v any, i, j int) any {
	switch x := v.(type) {
	case []int:
		return x[i:j]
	case string:
		r := []rune(x)
		return string(r[i:j])
	}
	return nil
}

func mochiPrint(v any) {
	switch x := v.(type) {
	case bool:
		if x {
			fmt.Println(1)
		} else {
			fmt.Println("nil")
		}
	case float64:
		if math.Trunc(x) == x {
			fmt.Printf("%.1f\n", x)
		} else {
			fmt.Printf("%v\n", x)
		}
	case []int:
		for i, n := range x {
			if i > 0 {
				fmt.Print(" ")
			}
			fmt.Print(n)
		}
		fmt.Println()
	default:
		fmt.Println(v)
	}
}

func main() {
	mochiPrint(slice([]int{1, 2, 3}, 1, 3))
	mochiPrint(slice([]int{1, 2, 3}, 0, 2))
	mochiPrint(slice("hello", 1, 4))
}
