//go:build ignore

// Generated by Mochi v0.10.32 on 2025-07-21 11:02:14 GMT+7
package main

import (
	"fmt"
)

var customers []Customer = []Customer{Customer{
	ID:   1,
	Name: "Alice",
}, Customer{
	ID:   2,
	Name: "Bob",
}}

type Customer struct {
	ID   int    `json:"id"`
	Name string `json:"name"`
}

var orders []Order = []Order{Order{
	ID:         100,
	CustomerID: 1,
}, Order{
	ID:         101,
	CustomerID: 2,
}}

type Order struct {
	ID         int `json:"id"`
	CustomerID int `json:"customerId"`
}

var items []Item = []Item{Item{
	OrderID: 100,
	Sku:     "a",
}, Item{
	OrderID: 101,
	Sku:     "b",
}}

type Item struct {
	OrderID int    `json:"orderId"`
	Sku     string `json:"sku"`
}

var result []Result = func() []Result {
	res := []Result{}
	for _, o := range orders {
		for _, c := range customers {
			if o.CustomerID == c.ID {
				for _, i := range items {
					if o.ID == i.OrderID {
						res = append(res, Result{
							Name: c.Name,
							Sku:  i.Sku,
						})
					}
				}
			}
		}
	}
	return res
}()

type Result struct {
	Name string `json:"name"`
	Sku  string `json:"sku"`
}

func main() {
	fmt.Println("--- Multi Join ---")
	for _, r := range result {
		fmt.Println(r.Name, "bought item", r.Sku)
	}
}
