//go:build ignore

// Generated by Mochi v0.10.33 on 2025-07-21 16:16:02 GMT+7
package main

import (
	"fmt"
	"sort"
	"strings"
)

var items []Item = []Item{Item{
	N: 1,
	V: "a",
}, Item{
	N: 1,
	V: "b",
}, Item{
	N: 2,
	V: "c",
}}

type Item struct {
	N int    `json:"n"`
	V string `json:"v"`
}

var result []string = func() []string {
	type pair struct {
		Key int
		Val string
	}
	tmp := []pair{}
	for _, i := range items {
		tmp = append(tmp, pair{i.N, i.V})
	}
	sort.Slice(tmp, func(i, j int) bool { return tmp[i].Key < tmp[j].Key })
	res := make([]string, len(tmp))
	for i, p := range tmp {
		res[i] = p.Val
	}
	return res
}()

func main() {
	fmt.Println(func() string {
		var sb strings.Builder
		sb.WriteByte('[')
		for i, v := range result {
			if i > 0 {
				sb.WriteString(", ")
			}
			sb.WriteString(fmt.Sprint(v))
		}
		sb.WriteByte(']')
		return sb.String()
	}())
}
