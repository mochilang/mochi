//go:build ignore

// Generated by Mochi v0.10.36 on 2025-07-22 18:26:41 GMT+7
package main

import (
	"encoding/json"
	"fmt"
	"sort"
	"strings"
)

var items []Item = []Item{Item{
	N: 1,
	V: "a",
}, Item{
	N: 1,
	V: "b",
}, Item{
	N: 2,
	V: "c",
}}

type Item struct {
	N int    `json:"n"`
	V string `json:"v"`
}

func main() {
	var result []string = func() []string {
		type pair struct {
			Key int
			Val string
		}
		pairs := []pair{}
		for _, i := range items {
			pairs = append(pairs, pair{i.N, i.V})
		}
		sort.Slice(pairs, func(i, j int) bool { return pairs[i].Key < pairs[j].Key })
		res := make([]string, len(pairs))
		for i, p := range pairs {
			res[i] = p.Val
		}
		return res
	}()
	fmt.Println(func() string {
		b, _ := json.Marshal(result)
		s := string(b)
		s = strings.ReplaceAll(s, ":", ": ")
		s = strings.ReplaceAll(s, ",", ", ")
		s = strings.ReplaceAll(s, "}, {", "},{")
		s = strings.ReplaceAll(s, "\"", "'")
		return s
	}())
}
