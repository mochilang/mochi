//go:build ignore

// Generated by Mochi v0.10.31 on 2025-07-19 21:30:06 GMT+7
package main

import (
	"fmt"
	"strings"
)

func union(a, b []int) []int {
	m := map[int]bool{}
	res := []int{}
	for _, n := range a {
		if !m[n] {
			m[n] = true
			res = append(res, n)
		}
	}
	for _, n := range b {
		if !m[n] {
			m[n] = true
			res = append(res, n)
		}
	}
	return res
}

func unionAll(a, b []int) []int {
	res := make([]int, len(a))
	copy(res, a)
	res = append(res, b...)
	return res
}

func except(a, b []int) []int {
	m := map[int]bool{}
	for _, n := range b {
		m[n] = true
	}
	res := []int{}
	for _, n := range a {
		if !m[n] {
			res = append(res, n)
		}
	}
	return res
}

func intersect(a, b []int) []int {
	m := map[int]bool{}
	for _, n := range a {
		m[n] = true
	}
	res := []int{}
	for _, n := range b {
		if m[n] {
			res = append(res, n)
		}
	}
	return res
}

func joinInts(v any) string {
	if xs, ok := v.([]int); ok {
		return strings.Trim(fmt.Sprint(xs), "[]")
	}
	return fmt.Sprint(v)
}

func main() {
	fmt.Println(joinInts(union([]int{1, 2}, []int{2, 3})))
	fmt.Println(joinInts(except([]int{1, 2, 3}, []int{2})))
	fmt.Println(joinInts(intersect([]int{1, 2, 3}, []int{2, 4})))
	fmt.Println(len(unionAll([]int{1, 2}, []int{2, 3})))
}
