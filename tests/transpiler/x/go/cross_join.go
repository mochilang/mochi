//go:build ignore

// Generated by Mochi v0.10.32 on 2025-07-20 16:59:53 GMT+7
package main

import (
	"fmt"
)

var customers []Data1 = []Data1{Data1{id: 1, name: "Alice"}, Data1{id: 2, name: "Bob"}, Data1{id: 3, name: "Charlie"}}

type Data1 struct {
	id   int
	name string
}

var orders []Data2 = []Data2{Data2{id: 100, customerId: 1, total: 250}, Data2{id: 101, customerId: 2, total: 125}, Data2{id: 102, customerId: 1, total: 300}}

type Data2 struct {
	id         int
	customerId int
	total      int
}

var result []Result3 = func() []Result3 {
	_res := []Result3{}
	for _, o := range orders {
		for _, c := range customers {
			_res = append(_res, Result3{orderId: o.id, orderCustomerId: o.customerId, pairedCustomerName: c.name, orderTotal: o.total})
		}
	}
	return _res
}()

type Result3 struct {
	orderId            int
	orderCustomerId    int
	pairedCustomerName any
	orderTotal         int
}

func main() {
	fmt.Println("--- Cross Join: All order-customer pairs ---")
	for _, entry := range result {
		fmt.Println("Order", entry.orderId, "(customerId:", entry.orderCustomerId, ", total: $", entry.orderTotal, ") paired with", entry.pairedCustomerName)
	}
}
