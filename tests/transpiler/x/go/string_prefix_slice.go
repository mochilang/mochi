//go:build ignore

// Generated by Mochi v0.10.31 on 2025-07-19 18:39:59 GMT+7
package main

import (
	"fmt"
	"math"
)

func slice(v any, i, j int) any {
	switch x := v.(type) {
	case []int:
		return x[i:j]
	case string:
		r := []rune(x)
		return string(r[i:j])
	}
	return nil
}

func mochiPrint(v ...any) {
	for i, val := range v {
		if i > 0 {
			fmt.Print(" ")
		}
		switch x := val.(type) {
		case bool:
			if x {
				fmt.Print(1)
			} else {
				fmt.Print("nil")
			}
		case float64:
			if math.Trunc(x) == x {
				fmt.Printf("%.1f", x)
			} else {
				fmt.Printf("%v", x)
			}
		case []int:
			for j, n := range x {
				if j > 0 {
					fmt.Print(" ")
				}
				fmt.Print(n)
			}
		default:
			fmt.Print(val)
		}
	}
	fmt.Println()
}

func main() {
	prefix := "fore"
	s1 := "forest"
	mochiPrint((slice(s1, 0, len(prefix)) == prefix))
	s2 := "desert"
	mochiPrint((slice(s2, 0, len(prefix)) == prefix))
}
