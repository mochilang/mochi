//go:build ignore

// Generated by Mochi v0.10.31 on 2025-07-19 19:56:21 GMT+7
package main

import (
	"fmt"
	"math"
)

func main() {
	a := (10 - 3)
	b := (2 + 2)
	func() {
		v := any(a)
		if v == nil {
			fmt.Println("nil")
			return
		}
		switch x := v.(type) {
		case bool:
			if x {
				fmt.Println(1)
			} else {
				fmt.Println(0)
			}
		case float64:
			if math.Trunc(x) == x {
				fmt.Printf("%.1f\n", x)
			} else {
				fmt.Printf("%v\n", x)
			}
		case []int:
			for i, n := range x {
				if i > 0 {
					fmt.Print(" ")
				}
				fmt.Print(n)
			}
			fmt.Println()
		default:
			fmt.Println(v)
		}
	}()
	func() {
		v := any((a == 7))
		if v == nil {
			fmt.Println("nil")
			return
		}
		switch x := v.(type) {
		case bool:
			if x {
				fmt.Println(1)
			} else {
				fmt.Println(0)
			}
		case float64:
			if math.Trunc(x) == x {
				fmt.Printf("%.1f\n", x)
			} else {
				fmt.Printf("%v\n", x)
			}
		case []int:
			for i, n := range x {
				if i > 0 {
					fmt.Print(" ")
				}
				fmt.Print(n)
			}
			fmt.Println()
		default:
			fmt.Println(v)
		}
	}()
	func() {
		v := any((b < 5))
		if v == nil {
			fmt.Println("nil")
			return
		}
		switch x := v.(type) {
		case bool:
			if x {
				fmt.Println(1)
			} else {
				fmt.Println(0)
			}
		case float64:
			if math.Trunc(x) == x {
				fmt.Printf("%.1f\n", x)
			} else {
				fmt.Printf("%v\n", x)
			}
		case []int:
			for i, n := range x {
				if i > 0 {
					fmt.Print(" ")
				}
				fmt.Print(n)
			}
			fmt.Println()
		default:
			fmt.Println(v)
		}
	}()
}
