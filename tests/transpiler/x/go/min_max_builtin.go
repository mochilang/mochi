//go:build ignore

// Generated by Mochi v0.10.31 on 2025-07-19 16:59:28 GMT+7
package main

import (
	"fmt"
	"math"
)

func min(nums []int) int {
	if len(nums) == 0 {
		return 0
	}
	m := nums[0]
	for _, n := range nums[1:] {
		if n < m {
			m = n
		}
	}
	return m
}

func max(nums []int) int {
	if len(nums) == 0 {
		return 0
	}
	m := nums[0]
	for _, n := range nums[1:] {
		if n > m {
			m = n
		}
	}
	return m
}

func mochiPrint(v any) {
	switch x := v.(type) {
	case bool:
		if x {
			fmt.Println(1)
		} else {
			fmt.Println("nil")
		}
	case float64:
		if math.Trunc(x) == x {
			fmt.Printf("%.1f\n", x)
		} else {
			fmt.Printf("%v\n", x)
		}
	case []int:
		for i, n := range x {
			if i > 0 {
				fmt.Print(" ")
			}
			fmt.Print(n)
		}
		fmt.Println()
	default:
		fmt.Println(v)
	}
}

func main() {
	nums := []int{3, 1, 4}
	mochiPrint(min(nums))
	mochiPrint(max(nums))
}
