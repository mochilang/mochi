//go:build ignore

// Generated by Mochi v0.10.31 on 2025-07-19 17:42:42 GMT+7
package main

import (
	"fmt"
	"math"
	"strings"
)

func contains(s any, v any) any {
	switch xs := s.(type) {
	case []int:
		n, ok := v.(int)
		if !ok {
			return false
		}
		for _, m := range xs {
			if m == n {
				return true
			}
		}
		return false
	case string:
		str, ok := v.(string)
		if !ok {
			return 0
		}
		if strings.Contains(xs, str) {
			return 1
		}
		return 0
	}
	return nil
}

func mochiPrint(v any) {
	switch x := v.(type) {
	case bool:
		if x {
			fmt.Println(1)
		} else {
			fmt.Println("nil")
		}
	case float64:
		if math.Trunc(x) == x {
			fmt.Printf("%.1f\n", x)
		} else {
			fmt.Printf("%v\n", x)
		}
	case []int:
		for i, n := range x {
			if i > 0 {
				fmt.Print(" ")
			}
			fmt.Print(n)
		}
		fmt.Println()
	default:
		fmt.Println(v)
	}
}

func main() {
	nums := []int{1, 2, 3}
	mochiPrint(contains(nums, 2))
	mochiPrint(contains(nums, 4))
}
