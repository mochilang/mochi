# Generated by Mochi transpiler on 2025-07-21 12:27 +0700
people = [%{name: "Alice", age: 30, city: "Paris"}, %{name: "Bob", age: 15, city: "Hanoi"}, %{name: "Charlie", age: 65, city: "Paris"}, %{name: "Diana", age: 45, city: "Hanoi"}, %{name: "Eve", age: 70, city: "Paris"}, %{name: "Frank", age: 22, city: "Hanoi"}]
stats = Enum.map(Enum.uniq(Enum.map(people, fn person -> person.city end)), fn key ->
  g = %{key: key, items: Map.fetch!(Enum.group_by(people, fn person -> person.city end), key)}
  %{city: g.key, count: Enum.count(g.items), avg_age: (if rem(Enum.sum(for p <- g.items do
  p.age
end), Enum.count(for p <- g.items do
  p.age
end)) == 0, do: div(Enum.sum(for p <- g.items do
  p.age
end), Enum.count(for p <- g.items do
  p.age
end)), else: Enum.sum(for p <- g.items do
  p.age
end) / Enum.count(for p <- g.items do
  p.age
end))}
end)
IO.puts("--- People grouped by city ---")
Enum.each(stats, fn s ->
  IO.puts("#{s.city} : count = #{s.count} , avg_age = #{s.avg_age}")
end)
