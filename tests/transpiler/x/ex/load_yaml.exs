# Code generated by Mochi transpiler 2025-07-22 08:51 +0700
people = (fn ->
  lines = File.read!("/workspace/mochi/tests/interpreter/valid/people.yaml") |> String.split("\n", trim: true)
  {rows, curr} = Enum.reduce(lines, {[], %{}}, fn line, {rows, curr} ->
    line = String.trim(line)
    if String.starts_with?(line, "-") do
      rows = if map_size(curr) > 0, do: rows ++ [curr], else: rows
      curr = %{}
      line = line |> String.trim_leading("-") |> String.trim()
      if line != "" do
        [k, v] = line |> String.split(":", parts: 2) |> Enum.map(&String.trim/1)
        v = if Regex.match?(~r/^[-]?\d+$/, v), do: String.to_integer(v), else: v
        {rows, Map.put(curr, String.to_atom(k), v)}
      else
        {rows, curr}
      end
    else
      [k, v] = line |> String.split(":", parts: 2) |> Enum.map(&String.trim/1)
      v = if Regex.match?(~r/^[-]?\d+$/, v), do: String.to_integer(v), else: v
      {rows, Map.put(curr, String.to_atom(k), v)}
    end
  end)
  rows = if map_size(curr) > 0, do: rows ++ [curr], else: rows
  rows
end).()
adults = for p <- people, p.age >= 18 do
  %{
    name: p.name,
    email: p.email
  }
end
Enum.each(adults, fn a ->
  IO.puts("#{Kernel.to_string(a.name)} #{Kernel.to_string(a.email)}")
end)
