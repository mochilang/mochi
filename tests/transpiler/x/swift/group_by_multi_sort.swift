// Generated by Mochi transpiler v0.10.34 on 2025-07-22 10:28:19 GMT+7
import Foundation

let items = ([["a": "x", "b": 1, "val": 2], ["a": "x", "b": 2, "val": 3], ["a": "y", "b": 1, "val": 4], ["a": "y", "b": 2, "val": 1]] as! [Any])
let grouped = (({ var _groups: [String: [String: Any]] = [:]
var _res: [[String: Any]] = []
for i in (items as! [[String: Any]]) {
    let _key = ["a": i["a"]!, "b": i["b"]!]
    let _ks = String(describing: _key)
    var _g = _groups[_ks] ?? ["key": _key, "items": []]
    var _item: [String: Any] = ["__join__": true]
    _item["i"] = i
    _g["items"] = (_g["items"] as! [[String: Any]]) + [_item]
    _groups[_ks] = _g
}
var _list = Array(_groups.values)
_list.sort { left, right in
var g = left
let _ka = -((((({ var _res: [Any] = []
for x in (g["items"]! as! [[String: Any]]) {
    _res.append(x["val"]!)
}
return _res })() as! [Any])).reduce(0) { s, v in s + ((v as? Double) ?? Double(v as? Int ?? 0)) }) as! Double)
g = right
let _kb = -((((({ var _res: [Any] = []
for x in (g["items"]! as! [[String: Any]]) {
    _res.append(x["val"]!)
}
return _res })() as! [Any])).reduce(0) { s, v in s + ((v as? Double) ?? Double(v as? Int ?? 0)) }) as! Double)
return String(describing: _ka) < String(describing: _kb)
}
for g in _list {
    _res.append(["a": (g["key"]! as! [String: Any])["a"]!, "b": (g["key"]! as! [String: Any])["b"]!, "total": ((((({ var _res: [Any] = []
    for x in (g["items"]! as! [[String: Any]]) {
        _res.append(x["val"]!)
    }
    return _res })() as! [Any])).reduce(0) { s, v in s + ((v as? Double) ?? Double(v as? Int ?? 0)) }) as! Double)])
}
return _res })() as! [Any])
print("[" + (grouped as! [[String: Any]]).map{ String(describing: $0) }.joined(separator: ",") + "]")
