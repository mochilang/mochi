// Generated by Mochi v0.10.34 on 2025-07-22 06:54:38 GMT+7

export interface Result { id: number; name: string }
export interface Customer { id: number; name: string }
export interface Order { id: number; customerId: number; total: number }
const customers: Customer[] = [{"__name": "GenType1", id: 1, name: "Alice"}, {"__name": "GenType1", id: 2, name: "Bob"}, {"__name": "GenType1", id: 3, name: "Charlie"}];
const orders: Order[] = [{"__name": "GenType1", id: 100, customerId: 1, total: 250}, {"__name": "GenType1", id: 101, customerId: 2, total: 125}, {"__name": "GenType1", id: 102, customerId: 1, total: 300}, {"__name": "GenType1", id: 103, customerId: 4, total: 80}];
const result: Result[] = (() => {
  const result: Result[] = []
  for (const o of orders) {
  for (const c of customers) {
    if (!((o["customerId"] == c["id"]))) continue
    result.push({"__name": "GenType1", orderId: o["id"], customerName: c["name"], total: o["total"]})
  }
  }
  return result
})();
console.log((tmp => typeof tmp === 'number' && Number.isInteger(tmp) ? tmp.toFixed(1) : tmp)("--- Orders with customer info ---"));
for (const entry of result) {
  console.log((tmp => typeof tmp === 'number' && Number.isInteger(tmp) ? tmp.toFixed(1) : tmp)("Order"), (tmp => typeof tmp === 'number' && Number.isInteger(tmp) ? tmp.toFixed(1) : tmp)(entry["orderId"]), (tmp => typeof tmp === 'number' && Number.isInteger(tmp) ? tmp.toFixed(1) : tmp)("by"), (tmp => typeof tmp === 'number' && Number.isInteger(tmp) ? tmp.toFixed(1) : tmp)(entry["customerName"]), (tmp => typeof tmp === 'number' && Number.isInteger(tmp) ? tmp.toFixed(1) : tmp)("- $"), (tmp => typeof tmp === 'number' && Number.isInteger(tmp) ? tmp.toFixed(1) : tmp)(entry["total"]));
}
