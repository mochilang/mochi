// Generated by Mochi v0.10.32 on 2025-07-20 18:02:58 GMT+7

const customers: { id: number; name: string }[] = [{id: 1, name: "Alice"}, {id: 2, name: "Bob"}, {id: 3, name: "Charlie"}];
const orders: { id: number; customerId: number; total: number }[] = [{id: 100, customerId: 1, total: 250}, {id: 101, customerId: 2, total: 125}, {id: 102, customerId: 1, total: 300}, {id: 103, customerId: 4, total: 80}];
const result: Record<string, number>[] = (() => {
  const _join = (items, arr, on, left, right) => {
    const joined = [];
    if (right && left) {
      const matched = new Array(arr.length).fill(false);
      for (const leftIt of items) {
        let m = false;
        for (let ri=0; ri < arr.length; ri++) {
          const rightIt = arr[ri];
          let keep = true;
          if (on) keep = on(...leftIt, rightIt);
          if (!keep) continue;
          m = true; matched[ri] = true;
          joined.push([...leftIt, rightIt]);
        }
        if (!m) joined.push([...leftIt, null]);
      }
      for (let ri=0; ri < arr.length; ri++) {
        if (!matched[ri]) {
          const undef = Array(items[0]?.length || 0).fill(null);
          joined.push([...undef, arr[ri]]);
        }
      }
    } else if (right) {
      for (const rightIt of arr) {
        let m = false;
        for (const leftIt of items) {
          let keep = true;
          if (on) keep = on(...leftIt, rightIt);
          if (!keep) continue;
          m = true; joined.push([...leftIt, rightIt]);
        }
        if (!m) {
          const undef = Array(items[0]?.length || 0).fill(null);
          joined.push([...undef, rightIt]);
        }
      }
    } else {
      for (const leftIt of items) {
        let m = false;
        for (const rightIt of arr) {
          let keep = true;
          if (on) keep = on(...leftIt, rightIt);
          if (!keep) continue;
          m = true; joined.push([...leftIt, rightIt]);
        }
        if (left && !m) joined.push([...leftIt, null]);
      }
    }
    return joined;
  }
  let _items = orders.map(v => [v])
  _items = _join(_items, customers, (o, c) => ((o["customerId"] == c["id"])), false, false)
  let _rows = _items
  const result = []
  for (const r of _rows) { const [o, c] = r; result.push({orderId: o["id"], customerName: c["name"], total: o["total"]}) }
  return result
})();
console.log("--- Orders with customer info ---");
for (const entry of result) {
  console.log("Order", entry["orderId"], "by", entry["customerName"], "- $", entry["total"]);
}
