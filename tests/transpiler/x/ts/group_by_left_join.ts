// Generated by Mochi v0.10.34 on 2025-07-22 06:54:37 GMT+7

export interface Result { id: number; name: string }
export interface Customer { id: number; name: string }
export interface Order { id: number; customerId: number }
const customers: Customer[] = [{"__name": "GenType1", id: 1, name: "Alice"}, {"__name": "GenType1", id: 2, name: "Bob"}, {"__name": "GenType1", id: 3, name: "Charlie"}];
const orders: Order[] = [{"__name": "GenType1", id: 100, customerId: 1}, {"__name": "GenType1", id: 101, customerId: 1}, {"__name": "GenType1", id: 102, customerId: 2}];
const stats: Record<string, any>[] = (() => {
  const groups = new Map<string, {key: any; items: any[]}>()
  let rows = customers.map(v => [v])
  { const joined = []
    const arr = orders
    for (const left of rows) {
      const [c] = left;
      let m = false;
      for (let ri=0; ri < arr.length; ri++) {
        const o = arr[ri];
        if (!((o["customerId"] == c["id"]))) continue;
        m = true; joined.push([...left, o]) }
      if (!m) joined.push([...left, null])
    }
    rows = joined;
  }
  for (const it of rows) {
    const [c, o] = it;
    const k = c["name"]
    const ks = JSON.stringify(k)
    let g = groups.get(ks)
    if (!g) { g = {key: k, items: []}; groups.set(ks, g) }
    g.items.push({c, o})
  }
  let ordered = Array.from(groups.values())
  const result: Result[] = []
  for (const g of ordered) {
    result.push({"__name": "GenType1", name: g["key"], count: (Array.isArray((() => {
  const result = []
  for (const r of g["items"]) {
    if (r["o"]) {
      result.push(r)
    }
  }
  const out = result
  return out
})()) || typeof (() => {
  const result = []
  for (const r of g["items"]) {
    if (r["o"]) {
      result.push(r)
    }
  }
  const out = result
  return out
})() === 'string' ? (() => {
  const result = []
  for (const r of g["items"]) {
    if (r["o"]) {
      result.push(r)
    }
  }
  const out = result
  return out
})().length : Object.keys((() => {
  const result = []
  for (const r of g["items"]) {
    if (r["o"]) {
      result.push(r)
    }
  }
  const out = result
  return out
})() ?? {}).length)})
  }
  return result
})();
console.log((tmp => typeof tmp === 'number' && Number.isInteger(tmp) ? tmp.toFixed(1) : tmp)("--- Group Left Join ---"));
for (const s of stats) {
  console.log((tmp => typeof tmp === 'number' && Number.isInteger(tmp) ? tmp.toFixed(1) : tmp)(s["name"]), (tmp => typeof tmp === 'number' && Number.isInteger(tmp) ? tmp.toFixed(1) : tmp)("orders:"), (tmp => typeof tmp === 'number' && Number.isInteger(tmp) ? tmp.toFixed(1) : tmp)(s["count"]));
}
