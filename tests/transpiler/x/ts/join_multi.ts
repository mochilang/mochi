// Generated by Mochi v0.10.33 on 2025-07-21 16:20:45 GMT+7

export interface Customer { id: number; name: string }
export interface Order { id: number; customerId: number }
export interface Item { orderId: number; sku: string }
export interface Result { name: any; sku: any }
const customers: Customer[] = [{id: 1, name: "Alice"}, {id: 2, name: "Bob"}];
const orders: Order[] = [{id: 100, customerId: 1}, {id: 101, customerId: 2}];
const items: Item[] = [{orderId: 100, sku: "a"}, {orderId: 101, sku: "b"}];
const result: Result[] = (() => {
  let _items = orders.map(v => [v])
  { const _joined = []
    const _arr = customers
    for (const _left of _items) {
      const [o] = _left;
      let _m = false;
      for (let _ri=0; _ri < _arr.length; _ri++) {
        const c = _arr[_ri];
        if (!((o["customerId"] == c["id"]))) continue;
        _m = true; _joined.push([..._left, c]) }
    }
    _items = _joined;
  }
  { const _joined = []
    const _arr = items
    for (const _left of _items) {
      const [o, c] = _left;
      let _m = false;
      for (let _ri=0; _ri < _arr.length; _ri++) {
        const i = _arr[_ri];
        if (!((o["id"] == i["orderId"]))) continue;
        _m = true; _joined.push([..._left, i]) }
    }
    _items = _joined;
  }
  let _rows = _items
  const result: Result[] = []
  for (const r of _rows) { const [o, c, i] = r; result.push({name: c["name"], sku: i["sku"]}) }
  return result
})();
console.log(["--- Multi Join ---"].map(v=>v===null?'nil':typeof v==='object'?JSON.stringify(v).replace(/:/g, ': ').replace(/,/g, ', '):v).join(' ').trimEnd());
for (const r of result) {
  console.log([r["name"], "bought item", r["sku"]].map(v=>v===null?'nil':typeof v==='object'?JSON.stringify(v).replace(/:/g, ': ').replace(/,/g, ', '):v).join(' ').trimEnd());
}
