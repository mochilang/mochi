// Generated by Mochi v0.10.34 on 2025-07-22 06:54:38 GMT+7

export interface Result { id: number; name: string }
export interface Customer { id: number; name: string }
export interface Order { id: number; customerId: number }
export interface Item { orderId: number; sku: string }
const customers: Customer[] = [{"__name": "GenType1", id: 1, name: "Alice"}, {"__name": "GenType1", id: 2, name: "Bob"}];
const orders: Order[] = [{"__name": "GenType1", id: 100, customerId: 1}, {"__name": "GenType1", id: 101, customerId: 2}];
const items: Item[] = [{"__name": "GenType1", orderId: 100, sku: "a"}, {"__name": "GenType1", orderId: 101, sku: "b"}];
const result: Result[] = (() => {
  const result: Result[] = []
  for (const o of orders) {
  for (const c of customers) {
    if (!((o["customerId"] == c["id"]))) continue
    for (const i of items) {
      if (!((o["id"] == i["orderId"]))) continue
      result.push({"__name": "GenType1", name: c["name"], sku: i["sku"]})
    }
  }
  }
  return result
})();
console.log((tmp => typeof tmp === 'number' && Number.isInteger(tmp) ? tmp.toFixed(1) : tmp)("--- Multi Join ---"));
for (const r of result) {
  console.log((tmp => typeof tmp === 'number' && Number.isInteger(tmp) ? tmp.toFixed(1) : tmp)(r["name"]), (tmp => typeof tmp === 'number' && Number.isInteger(tmp) ? tmp.toFixed(1) : tmp)("bought item"), (tmp => typeof tmp === 'number' && Number.isInteger(tmp) ? tmp.toFixed(1) : tmp)(r["sku"]));
}
