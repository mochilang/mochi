// Generated by Mochi v0.10.34 on 2025-07-22 10:27:39 GMT+7

export interface Result { a: number }
export interface M { a: number }
const xs: number[] = [1, 2, 3];
const ys: number[] = (() => {
  const result = []
  for (const x of xs) {
    if (((x % 2) == 1)) {
      result.push(x)
    }
  }
  const out = result
  return out
})();
console.log(((v => typeof v === 'string' ? v : JSON.stringify(v))(ys.includes(1))));
console.log(((v => typeof v === 'string' ? v : JSON.stringify(v))(ys.includes(2))));
const m: M = {a: 1};
console.log(((v => typeof v === 'string' ? v : JSON.stringify(v))(("a" in m))));
console.log(((v => typeof v === 'string' ? v : JSON.stringify(v))(("b" in m))));
const s: string = "hello";
console.log(((v => typeof v === 'string' ? v : JSON.stringify(v))(s.includes("ell"))));
console.log(((v => typeof v === 'string' ? v : JSON.stringify(v))(s.includes("foo"))));
