// Generated by Mochi v0.10.34 on 2025-07-22 06:35:17 GMT+7

export interface Result { a: number; b: number }
export interface Data { a: number; b: number }
const data: Data[] = [{"__name": "GenType1", a: 1, b: 2}, {"__name": "GenType1", a: 1, b: 1}, {"__name": "GenType1", a: 0, b: 5}];
const sorted: Record<string, number>[] = (() => {
  const result = []
  for (const x of data) {
    result.push({k: {"__name": "GenType1", a: x["a"], b: x["b"]}, v: x})
  }
  result.sort((a, b) => {const ak = a.k; const bk = b.k; if (ak < bk) return -1; if (ak > bk) return 1; const sak = JSON.stringify(ak); const sbk = JSON.stringify(bk); return sak < sbk ? -1 : sak > sbk ? 1 : 0})
  const out = result.map(r => r.v)
  return out
})();
console.log("[" + sorted.map(v => { if (typeof v === 'string') return '\'' + v + '\''; if (typeof v === 'number') return Number.isInteger(v) ? String(v) : String(v); if (typeof v === 'boolean') return v ? 'True' : 'False'; if (typeof v === 'object') { if (v && v.__name) { const entries = Object.entries(v).filter(([k]) => k !== '__name'); return v.__name + ' {' + entries.map(([k,val]) => { if (typeof val === 'string') return k + ' = ' + '\'' + val + '\''; if (typeof val === 'number') return k + ' = ' + (Number.isInteger(val) ? String(val) : String(val)); if (typeof val === 'boolean') return k + ' = ' + (val ? 'True' : 'False'); return k + ' = ' + String(val); }).join(', ') + '}'; } let s = JSON.stringify(v).replace(/"/g, '\'' ).replace(/:/g, ': ').replace(/,/g, ', '); s = s.replace(/('[^']*(?:id|key)'\s*: )(-?[0-9]+)\.0([,}])/g, '$1$2$3'); return s } return String(v); }).join(', ') + "]");
