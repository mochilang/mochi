// Generated by Mochi v0.10.33 on 2025-07-21 18:23:25 GMT+7

export interface People { name: string; city: string }
export interface Result { city: any; num: number }
const people: People[] = [{name: "Alice", city: "Paris"}, {name: "Bob", city: "Hanoi"}, {name: "Charlie", city: "Paris"}, {name: "Diana", city: "Hanoi"}, {name: "Eve", city: "Paris"}, {name: "Frank", city: "Hanoi"}, {name: "George", city: "Paris"}];
const big: Record<string, any>[] = (() => {
  const _groups: Record<string, {key: any; items: any[]}> = {}
  const _order: string[] = []
  for (const p of people) {
    const _k = p["city"]
    const _ks = JSON.stringify(_k)
    let _g = _groups[_ks]
    if (!_g) { _g = {key: _k, items: []}; _groups[_ks] = _g; _order.push(_ks) }
    _g.items.push(p)
  }
  const result: Result[] = []
  for (const ks of _order) {
    const g = _groups[ks]
    if (((Array.isArray(g["items"]) || typeof g["items"] === 'string' ? g["items"].length : Object.keys(g["items"] ?? {}).length) >= 4)) {
      result.push({city: g["key"], num: (Array.isArray(g["items"]) || typeof g["items"] === 'string' ? g["items"].length : Object.keys(g["items"] ?? {}).length)})
    }
  }
  return result
})();
console.log(JSON.stringify(big, null, 2));
