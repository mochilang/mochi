// Generated by Mochi v0.10.34 on 2025-07-22 10:14:07 GMT+7

export interface Result { name: string; city: string }
export interface People { name: string; city: string }
const people: People[] = [{"__name": "GenType1", name: "Alice", city: "Paris"}, {"__name": "GenType1", name: "Bob", city: "Hanoi"}, {"__name": "GenType1", name: "Charlie", city: "Paris"}, {"__name": "GenType1", name: "Diana", city: "Hanoi"}, {"__name": "GenType1", name: "Eve", city: "Paris"}, {"__name": "GenType1", name: "Frank", city: "Hanoi"}, {"__name": "GenType1", name: "George", city: "Paris"}];
const big: Record<string, any>[] = (() => {
  const groups = new Map<string, {key: any; items: any[]}>()
  for (const p of people) {
    const k = p["city"]
    const ks = JSON.stringify(k)
    let g = groups.get(ks)
    if (!g) { g = {key: k, items: []}; groups.set(ks, g) }
    g.items.push(p)
  }
  let ordered = Array.from(groups.values())
  const result: Result[] = []
  for (const g of ordered) {
    if (((Array.isArray(g["items"]) || typeof g["items"] === 'string' ? g["items"].length : Object.keys(g["items"] ?? {}).length) >= 4)) {
      result.push({"__name": "GenType1", city: g["key"], num: (Array.isArray(g["items"]) || typeof g["items"] === 'string' ? g["items"].length : Object.keys(g["items"] ?? {}).length)})
    }
  }
  return result
})();
console.log(JSON.stringify(big, null, 2));
