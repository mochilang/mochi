// Generated by Mochi v0.10.34 on 2025-07-22 06:54:41 GMT+7

export interface Result { n: number; v: string }
export interface Item { n: number; v: string }
const items: Item[] = [{"__name": "GenType1", n: 1, v: "a"}, {"__name": "GenType1", n: 1, v: "b"}, {"__name": "GenType1", n: 2, v: "c"}];
const result: any[] = (() => {
  const result = []
  for (const i of items) {
    result.push({k: i["n"], v: i["v"]})
  }
  result.sort((a, b) => {const ak = a.k; const bk = b.k; if (ak < bk) return -1; if (ak > bk) return 1; const sak = JSON.stringify(ak); const sbk = JSON.stringify(bk); return sak < sbk ? -1 : sak > sbk ? 1 : 0})
  const out = result.map(r => r.v)
  return out
})();
console.log((tmp => typeof tmp === 'number' && Number.isInteger(tmp) ? tmp.toFixed(1) : tmp)("[" + result.map((x) => ((typeof x === "object") ? JSON.stringify(x).replace(RegExp(":", "g"), ": ").replace(RegExp(",", "g"), ", ").replace(RegExp(": ([0-9]+)([,}])", "g"), ": $1.0$2") : String(x))).map(v => typeof v === 'number' && Number.isInteger(v) ? v.toFixed(1) : String(v)).join(', ') + "]"));
