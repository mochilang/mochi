// Generated by Mochi v0.10.31 on 2025-07-20 14:02:35 GMT+7

const nation: Record<string, any>[] = [{n_nationkey: 1, n_name: "BRAZIL"}];
const customer: Record<string, any>[] = [{c_custkey: 1, c_name: "Alice", c_acctbal: 100, c_nationkey: 1, c_address: "123 St", c_phone: "123-456", c_comment: "Loyal"}];
const orders: Record<string, any>[] = [{o_orderkey: 1000, o_custkey: 1, o_orderdate: "1993-10-15"}, {o_orderkey: 2000, o_custkey: 1, o_orderdate: "1994-01-02"}];
const lineitem: Record<string, any>[] = [{l_orderkey: 1000, l_returnflag: "R", l_extendedprice: 1000, l_discount: 0.1}, {l_orderkey: 2000, l_returnflag: "N", l_extendedprice: 500, l_discount: 0}];
const start_date: string = "1993-10-01";
const end_date: string = "1994-01-01";
const result: Record<string, any>[] = (() => {
  const result = []
  for (const c of customer) {
    if ((((o["o_orderdate"] >= start_date) && (o["o_orderdate"] < end_date)) && (l["l_returnflag"] == "R"))) {
      result.push({k: -(() => {
  const result = []
  for (const x of g) {
    result.push((x["l"]["l_extendedprice"] * (1 - x["l"]["l_discount"])))
  }
  const out = result
  return out
})().reduce((a, b) => a + b, 0), v: {c_custkey: g["key"]["c_custkey"], c_name: g["key"]["c_name"], revenue: (() => {
  const result = []
  for (const x of g) {
    result.push((x["l"]["l_extendedprice"] * (1 - x["l"]["l_discount"])))
  }
  const out = result
  return out
})().reduce((a, b) => a + b, 0), c_acctbal: g["key"]["c_acctbal"], n_name: g["key"]["n_name"], c_address: g["key"]["c_address"], c_phone: g["key"]["c_phone"], c_comment: g["key"]["c_comment"]}})
    }
  }
  result.sort((a, b) => {const ak = JSON.stringify(a.k); const bk = JSON.stringify(b.k); return ak < bk ? -1 : ak > bk ? 1 : 0})
  const out = result.map(r => r.v)
  return out
})();
console.log([result.map((x) => JSON.stringify(x).replace(RegExp(":", "g"), ": ").replace(RegExp(",", "g"), ", ")).join(" ")].join(" ").trimEnd());
