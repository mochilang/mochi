// Generated by Mochi v0.10.33 on 2025-07-21 16:11:26 GMT+7

export interface Customer { id: number; name: string }
export interface Order { id: number; customerId: number; total: number }
export interface Result { customerName: any; order: any }
const customers: Customer[] = [{id: 1, name: "Alice"}, {id: 2, name: "Bob"}, {id: 3, name: "Charlie"}, {id: 4, name: "Diana"}];
const orders: Order[] = [{id: 100, customerId: 1, total: 250}, {id: 101, customerId: 2, total: 125}, {id: 102, customerId: 1, total: 300}];
const result: Result[] = (() => {
  let _items = customers.map(v => [v])
  { const _joined = []
    const _arr = orders
    for (let _ri=0; _ri < _arr.length; _ri++) {
      const o = _arr[_ri];
      let _m = false;
      for (const _left of _items) {
        const [c] = _left;
        if (!((o["customerId"] == c["id"]))) continue;
        _m = true; _joined.push([..._left, o]) }
      if (!_m) { const _undef = Array(_items[0]?.length || 0).fill(null); _joined.push([..._undef, o]) }
    }
    _items = _joined;
  }
  let _rows = _items
  const result: Result[] = []
  for (const r of _rows) { const [c, o] = r; result.push({customerName: c["name"], order: o}) }
  return result
})();
console.log(["--- Right Join using syntax ---"].join(' ').trimEnd());
for (const entry of result) {
  if (entry["order"]) {
    console.log(["Customer", entry["customerName"], "has order", entry["order"]["id"], "- $", entry["order"]["total"]].join(' ').trimEnd());
  } else {
    console.log(["Customer", entry["customerName"], "has no orders"].join(' ').trimEnd());
  }
}
