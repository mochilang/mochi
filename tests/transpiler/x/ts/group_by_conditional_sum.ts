// Generated by Mochi v0.10.32 on 2025-07-21 11:02:39 GMT+7

export interface Item { cat: string; val: number; flag: boolean }
export interface Result { cat: any; share: number }
const items: Item[] = [{cat: "a", val: 10, flag: true}, {cat: "a", val: 5, flag: false}, {cat: "b", val: 20, flag: true}];
const result: Result[] = (() => {
  const result: Result[] = []
  for (const i of items) {
    result.push({k: g["key"], v: {cat: g["key"], share: ((() => {
  const result = []
  for (const x of g) {
    result.push((x["flag"] ? x["val"] : 0))
  }
  const out = result
  return out
})().reduce((a, b) => a + b, 0) / (() => {
  const result = []
  for (const x of g) {
    result.push(x["val"])
  }
  const out = result
  return out
})().reduce((a, b) => a + b, 0))}})
  }
  result.sort((a, b) => {const ak = a.k; const bk = b.k; if (ak < bk) return -1; if (ak > bk) return 1; const sak = JSON.stringify(ak); const sbk = JSON.stringify(bk); return sak < sbk ? -1 : sak > sbk ? 1 : 0})
  const out = result.map(r => r.v)
  return out
})();
console.log([result.map((x) => JSON.stringify(x).replace(RegExp(":", "g"), ": ").replace(RegExp(",", "g"), ", ")).join(" ")].join(' ').trimEnd());
