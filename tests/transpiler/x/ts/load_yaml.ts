// Generated by Mochi v0.10.33 on 2025-07-21 18:23:29 GMT+7

export interface Result { name: any; email: any }
export interface Person { name: string; age: number; email: string }
const people: Person[] = (() => {const _t=Deno.readTextFileSync(new URL("../../../interpreter/valid/people.yaml", import.meta.url).pathname).trim().split(/\r?\n/);const _o:any[]=[];let c:any={};for(let line of _t){if(line.startsWith('- ')){if(Object.keys(c).length)_o.push(c);c={};line=line.slice(2);}else if(line.startsWith('  ')){line=line.slice(2);}if(!line)continue;const [k,v]=line.split(':');const val=v.trim();c[k.trim()]=/^\d+$/.test(val)?+val:val;}if(Object.keys(c).length)_o.push(c);return _o;})();
const adults: Result[] = (() => {
  const result: Result[] = []
  for (const p of people) {
    if ((p["age"] >= 18)) {
      result.push({name: p["name"], email: p["email"]})
    }
  }
  const out = result
  return out
})();
for (const a of adults) {
  console.log([a["name"], a["email"]].map(v => v === null ? 'nil' : typeof v === 'object' ? JSON.stringify(v).replace(/:/g, ': ').replace(/,/g, ', ') : v).join(' ').trimEnd());
}
