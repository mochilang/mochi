// Generated by Mochi transpiler
class Customer {
  final int id;
  final String name;
  const Customer({required this.id, required this.name});
}

class Order {
  final int id;
  final int customerId;
  const Order({required this.id, required this.customerId});
}

class Stat {
  final dynamic name;
  final int count;
  const Stat({required this.name, required this.count});
}

void main() {
  final List<Customer> customers = [Customer(id: 1, name: "Alice"), Customer(id: 2, name: "Bob")];
  final List<Order> orders = [Order(id: 100, customerId: 1), Order(id: 101, customerId: 1), Order(id: 102, customerId: 2)];
  final List<Stat> stats = (() {
  var groups = <String, Map<String, dynamic>>{};
  for (var o in orders) {
  for (var c in customers) {
      if (!((o.customerId == c.id))) continue;
      var key = c.name;
      var ks = key.toString();
      var g = groups[ks];
      if (g == null) {
        g = {'key': key, 'items': []};
        groups[ks] = g;
      }
      (g['items'] as List).add({"o": o, "c": c});
    }
  }
  var _list = groups.values.toList();
  var res = <dynamic>[];
  for (var g in _list) {
    res.add(Stat(name: g.key, count: g.items.length));
  }
  return res;
})();;
  print("--- Orders per customer ---");
  for (var s in stats) {
    print([s.name, "orders:", s.count].join(" "));
  }
}

