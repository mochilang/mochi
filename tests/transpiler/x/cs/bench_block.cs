// Generated by Mochi 0.10.39 on 2025-07-24 19:13 UTC
using System;
using System.Collections.Generic;
using System.Text.Json;

class Program {
    static bool seededNow = false;
    static long nowSeed = 0;
    static int _now() {
        if (!seededNow) {
            var s = Environment.GetEnvironmentVariable("MOCHI_NOW_SEED");
            if (long.TryParse(s, out var v)) {
                nowSeed = v;
                seededNow = true;
            }
        }
        if (seededNow) {
            nowSeed = (nowSeed*1664525 + 1013904223) % 2147483647;
            return (int)nowSeed;
        }
        return (int)(DateTimeOffset.UtcNow.ToUnixTimeMilliseconds() % int.MaxValue);
    }
    static long _mem() {
        return GC.GetTotalMemory(false);
    }
    static void Main() {
        {
            var __memStart = _mem();
            var __start = _now();
            long n = 1000;
            long s = 0;
            for (var i_0 = 1; i_0 < n; i_0++) {
                s = (s + i_0);
            }
            var __end = _now();
            var __memEnd = _mem();
            var __dur = (__end - __start) / 1000;
            var __memDiff = __memEnd - __memStart;
            Console.WriteLine(JsonSerializer.Serialize(new SortedDictionary<string, object>{{"name", "simple"}, {"duration_us", __dur}, {"memory_bytes", __memDiff}}, new JsonSerializerOptions{ WriteIndented = true }));
        }
    }
}
