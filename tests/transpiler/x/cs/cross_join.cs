// Generated by Mochi 0.10.32 on 2025-07-21 10:52 +0700
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;

struct Customer {
    public int id;
    public string name;
    public override string ToString() => JsonSerializer.Serialize(this);
}
struct Order {
    public int id;
    public int customerId;
    public int total;
    public override string ToString() => JsonSerializer.Serialize(this);
}
struct OResult {
    public int orderId;
    public int orderCustomerId;
    public string pairedCustomerName;
    public int orderTotal;
    public override string ToString() => JsonSerializer.Serialize(this);
}
class Program {
    static Customer[] customers = new Customer[]{new Customer{id = 1, name = "Alice"}, new Customer{id = 2, name = "Bob"}, new Customer{id = 3, name = "Charlie"}};
    static Order[] orders = new Order[]{new Order{id = 100, customerId = 1, total = 250}, new Order{id = 101, customerId = 2, total = 125}, new Order{id = 102, customerId = 1, total = 300}};
    static OResult[] result = (from o in orders from c in customers select new OResult{orderId = o.id, orderCustomerId = o.customerId, pairedCustomerName = c.name, orderTotal = o.total}).ToArray();
    static void Main() {
        Console.WriteLine("--- Cross Join: All order-customer pairs ---");
        foreach (var entry in result) {
    Console.WriteLine(string.Join(" ", new object[]{"Order", entry.orderId, "(customerId:", entry.orderCustomerId, ", total: $", entry.orderTotal, ") paired with", entry.pairedCustomerName}).TrimEnd());
}
    }
}
