// Generated by Mochi
using System;
using System.Collections.Generic;
using System.Linq;

class Program {
    static Dictionary<string, object>[] customers = new[]{new Dictionary<string, object>{{"id", 1}, {"name", "Alice"}}, new Dictionary<string, object>{{"id", 2}, {"name", "Bob"}}, new Dictionary<string, object>{{"id", 3}, {"name", "Charlie"}}};
    static Dictionary<string, int>[] orders = new[]{new Dictionary<string, int>{{"id", 100}, {"customerId", 1}, {"total", 250}}, new Dictionary<string, int>{{"id", 101}, {"customerId", 2}, {"total", 125}}, new Dictionary<string, int>{{"id", 102}, {"customerId", 1}, {"total", 300}}, new Dictionary<string, int>{{"id", 103}, {"customerId", 4}, {"total", 80}}};
    static Dictionary<string, object>[] result = (from o in orders join c in customers on ((dynamic)(o["customerId"])) equals c.id select new Dictionary<string, object>{{"orderId", ((dynamic)(o["id"]))}, {"customerName", ((dynamic)(c["name"]))}, {"total", ((dynamic)(o["total"]))}}).ToArray();
    static void Main() {
        Console.WriteLine("--- Orders with customer info ---");
        foreach (var entry in result) {
    Console.WriteLine(string.Join(" ", new[]{"Order", entry.orderId, "by", entry.customerName, "- $", entry.total}).TrimEnd());
}
    }
}
