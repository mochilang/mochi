// Generated by Mochi 0.10.33 on 2025-07-21 18:06 +0700
using System;
using System.Collections.Generic;
using System.Linq;

struct Customer {
    public int id;
    public string name;
    public override string ToString() => $"{{\"id\": {id}, \"name\": \"{name}\"}}";
}
struct Order {
    public int id;
    public int customerId;
    public int total;
    public override string ToString() => $"{{\"id\": {id}, \"customerId\": {customerId}, \"total\": {total}}}";
}
struct OResult {
    public int orderId;
    public string customerName;
    public int total;
    public override string ToString() => $"{{\"orderId\": {orderId}, \"customerName\": \"{customerName}\", \"total\": {total}}}";
}
class Program {
    static Customer[] customers = new Customer[]{new Customer{id = 1, name = "Alice"}, new Customer{id = 2, name = "Bob"}, new Customer{id = 3, name = "Charlie"}};
    static Order[] orders = new Order[]{new Order{id = 100, customerId = 1, total = 250}, new Order{id = 101, customerId = 2, total = 125}, new Order{id = 102, customerId = 1, total = 300}, new Order{id = 103, customerId = 4, total = 80}};
    static OResult[] result = (from o in orders join c in customers on o.customerId equals c.id select new OResult{orderId = o.id, customerName = c.name, total = o.total}).ToArray();
    static void Main() {
        Console.WriteLine("--- Orders with customer info ---");
        foreach (var entry in result) {
    Console.WriteLine(string.Join(" ", new object[]{"Order", entry.orderId, "by", entry.customerName, "- $", entry.total}).TrimEnd());
}
    }
}
