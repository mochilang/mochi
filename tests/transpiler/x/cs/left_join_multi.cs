// Generated by Mochi 0.10.33 on 2025-07-21 16:57 +0700
using System;
using System.Collections.Generic;
using System.Linq;

struct Customer {
    public int id;
    public string name;
    public override string ToString() => $"{{\"id\": {id}, \"name\": \"{name}\"}}";
}
struct Order {
    public int id;
    public int customerId;
    public override string ToString() => $"{{\"id\": {id}, \"customerId\": {customerId}}}";
}
struct Item {
    public int orderId;
    public string sku;
    public override string ToString() => $"{{\"orderId\": {orderId}, \"sku\": \"{sku}\"}}";
}
struct OResult {
    public int orderId;
    public string name;
    public Item item;
    public override string ToString() => $"{{\"orderId\": {orderId}, \"name\": \"{name}\", \"item\": {item}}}";
}
class Program {
    static Customer[] customers = new Customer[]{new Customer{id = 1, name = "Alice"}, new Customer{id = 2, name = "Bob"}};
    static Order[] orders = new Order[]{new Order{id = 100, customerId = 1}, new Order{id = 101, customerId = 2}};
    static Item[] items = new Item[]{new Item{orderId = 100, sku = "a"}};
    static OResult[] result = (from o in orders join c in customers on o.customerId equals c.id join i in items on o.id equals i.orderId into iTmp from i in iTmp.DefaultIfEmpty() select new OResult{orderId = o.id, name = c.name, item = i}).ToArray();
    static void Main() {
        Console.WriteLine("--- Left Join Multi ---");
        foreach (var r in result) {
    Console.WriteLine(string.Join(" ", new object[]{r.orderId, r.name, r.item}).TrimEnd());
}
    }
}
