// Generated by Mochi 0.10.32 on 2025-07-21 12:05 +0700
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;

struct People {
    public string name;
    public int age;
    public string city;
    public override string ToString() => JsonSerializer.Serialize(this);
}
struct GGroup {
    public string key;
    public People[] items;
    public override string ToString() => JsonSerializer.Serialize(this);
}
struct GResult {
    public string city;
    public int count;
    public double avg_age;
    public override string ToString() => JsonSerializer.Serialize(this);
}
class Program {
    static People[] people = new People[]{new People{name = "Alice", age = 30, city = "Paris"}, new People{name = "Bob", age = 15, city = "Hanoi"}, new People{name = "Charlie", age = 65, city = "Paris"}, new People{name = "Diana", age = 45, city = "Hanoi"}, new People{name = "Eve", age = 70, city = "Paris"}, new People{name = "Frank", age = 22, city = "Hanoi"}};
    static GResult[] stats = (from person in people group person by person.city into gTmp let g = new GGroup{ key = gTmp.Key, items = gTmp.ToArray() } select new GResult{city = g.key, count = g.Length, avg_age = ((from p in g select p.age).ToArray().Average()).ToString("0.0")}).ToArray();
    static void Main() {
        Console.WriteLine("--- People grouped by city ---");
        foreach (var s in stats) {
    Console.WriteLine(string.Join(" ", new object[]{s.city, ": count =", s.count, ", avg_age =", s.avg_age}).TrimEnd());
}
    }
}
