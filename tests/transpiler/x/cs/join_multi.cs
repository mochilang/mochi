// Generated by Mochi
using System;
using System.Collections.Generic;
using System.Linq;

class Program {
    static Dictionary<string, object>[] customers = new[]{new Dictionary<string, object>{{"id", 1}, {"name", "Alice"}}, new Dictionary<string, object>{{"id", 2}, {"name", "Bob"}}};
    static Dictionary<string, int>[] orders = new[]{new Dictionary<string, int>{{"id", 100}, {"customerId", 1}}, new Dictionary<string, int>{{"id", 101}, {"customerId", 2}}};
    static Dictionary<string, object>[] items = new[]{new Dictionary<string, object>{{"orderId", 100}, {"sku", "a"}}, new Dictionary<string, object>{{"orderId", 101}, {"sku", "b"}}};
    static Dictionary<string, object>[] result = (from o in orders join c in customers on ((dynamic)(o["customerId"])) equals c.id join i in items on ((dynamic)(o["id"])) equals i.orderId select new Dictionary<string, object>{{"name", ((dynamic)(c["name"]))}, {"sku", ((dynamic)(i["sku"]))}}).ToArray();
    static void Main() {
        Console.WriteLine("--- Multi Join ---");
        foreach (var r in result) {
    Console.WriteLine(string.Join(" ", new[]{r.name, "bought item", r.sku}).TrimEnd());
}
    }
}
