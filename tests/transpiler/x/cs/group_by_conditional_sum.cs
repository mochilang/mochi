// Generated by Mochi 0.10.32 on 2025-07-21 13:21 +0700
using System;
using System.Collections.Generic;
using System.Linq;

struct Item {
    public string cat;
    public int val;
    public bool flag;
    public override string ToString() => $"{{\"cat\": \"{cat}\", \"val\": {val}, \"flag\": {flag}}}";
}
struct GGroup {
    public string key;
    public Item[] items;
    public override string ToString() => $"{{\"key\": \"{key}\", \"items\": {items}}}";
}
struct GResult {
    public string cat;
    public int share;
    public override string ToString() => $"{{\"cat\": \"{cat}\", \"share\": {share}}}";
}
class Program {
    static Item[] items = new Item[]{new Item{cat = "a", val = 10, flag = true}, new Item{cat = "a", val = 5, flag = false}, new Item{cat = "b", val = 20, flag = true}};
    static GResult[] result = (from i in items group i by i.cat into gTmp let g = new GGroup{ key = gTmp.Key, items = gTmp.ToArray() } orderby g.key select new GResult{cat = g.key, share = (((from x in g.items select (x.flag ? x.val : 0)).ToArray().Sum()) / ((from x in g.items select x.val).ToArray().Sum()))}).ToArray();
    static void Main() {
        Console.WriteLine(string.Join(" ", result).TrimEnd());
    }
}
