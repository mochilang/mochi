// Generated by Mochi v0.10.34 on 2025-07-22 06:35:55 GMT+7
import scala.collection.mutable.{ArrayBuffer, Map}
object Main {
  sealed trait Tree
  case object Leaf extends Tree
  case class Node(left: Any, value: Int, right: Any) extends Tree
  
  
  def sum_tree(t: Any): Int = {
    return t match { case Leaf => 0 case Node(left, value, right) => sum_tree(left) + value + sum_tree(right) }
  }
  
  def main(args: Array[String]): Unit = {
    val t: Node = Node(Leaf, 1, Node(Leaf, 2, Leaf))
    println(sum_tree(t))
  }
}
