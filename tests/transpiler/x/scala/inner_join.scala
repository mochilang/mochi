// Generated by Mochi v0.10.33 on 2025-07-21 16:41:35 GMT+7
import scala.collection.mutable.{ArrayBuffer, Map}
object Main {
  def main(args: Array[String]): Unit = {
    case class Item(id: Int, name: String)
    case class Item1(id: Int, customerId: Int, total: Int)
    case class QueryItem(orderId: Any, customerName: Any, total: Any)
    val customers: ArrayBuffer[Item] = ArrayBuffer(Item(1, "Alice"), Item(2, "Bob"), Item(3, "Charlie"))
    val orders: ArrayBuffer[Item1] = ArrayBuffer(Item1(100, 1, 250), Item1(101, 2, 125), Item1(102, 1, 300), Item1(103, 4, 80))
    val result: ArrayBuffer[QueryItem] = ({ var _res = ArrayBuffer[QueryItem]() ; for (o <- orders) { for (c <- customers) { if (o.customerId == c.id) { _res.append(QueryItem(o.id, c.name, o.total)) } } }; _res })
    println("--- Orders with customer info ---")
    for (entry <- result) {
    println(List("Order", entry.orderId, "by", entry.customerName, "- $", entry.total).mkString(" "))
  }
  }
}
