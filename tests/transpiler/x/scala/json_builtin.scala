// Generated by Mochi v0.10.35 on 2025-07-22 11:35:47 GMT+7
import scala.collection.mutable.{ArrayBuffer, Map}
import scala.collection.immutable.ListMap
object Main {
  def toJson(value: Any, indent: Int = 0): String = value match {
    case m: scala.collection.Map[_, _] =>
    val items = ListMap(m.toSeq.sortBy(_._1.toString): _*).toSeq.map{ case (k,v) => "  "*(indent+1)+"\""+k.toString+"\": "+toJson(v, indent+1) }
    "{\n"+items.mkString(",\n")+"\n"+"  "*indent+"}"
    case s: Seq[_] =>
    val items = s.map(x => "  "*(indent+1)+toJson(x, indent+1))
    "[\n"+items.mkString(",\n")+"\n"+"  "*indent+"]"
    case s: String => "\""+s+"\""
    case other => other.toString
  }
  
  def main(args: Array[String]): Unit = {
    val m: Map[String,Int] = Map("a" -> 1, "b" -> 2)
    println(toJson(m))
  }
}
