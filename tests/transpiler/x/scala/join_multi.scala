// Generated by Mochi v0.10.33 on 2025-07-21 17:23:10 GMT+7
import scala.collection.mutable.{ArrayBuffer, Map}
object Main {
  def main(args: Array[String]): Unit = {
    case class Item(id: Int, name: String)
    case class Item1(id: Int, customerId: Int)
    case class Item2(orderId: Int, sku: String)
    case class QueryItem(name: Any, sku: Any)
    val customers: ArrayBuffer[Item] = ArrayBuffer(Item(1, "Alice"), Item(2, "Bob"))
    val orders: ArrayBuffer[Item1] = ArrayBuffer(Item1(100, 1), Item1(101, 2))
    val items: ArrayBuffer[Item2] = ArrayBuffer(Item2(100, "a"), Item2(101, "b"))
    val result: ArrayBuffer[QueryItem] = ({ var _res = ArrayBuffer[QueryItem]() ; for (o <- orders) { for (c <- customers) { for (i <- items) { if (o.customerId == c.id && o.id == i.orderId) { _res.append(QueryItem(c.name, i.sku)) } } } }; _res })
    println("--- Multi Join ---")
    for (r <- result) {
    println(List(r.name, "bought item", r.sku).mkString(" "))
  }
  }
}
