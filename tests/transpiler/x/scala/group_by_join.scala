// Generated by Mochi v0.10.34 on 2025-07-21 23:09:36 GMT+7
import scala.collection.mutable.{ArrayBuffer, Map}
object Main {
  def main(args: Array[String]): Unit = {
    case class Item(id: Int, name: String)
    case class Item1(id: Int, customerId: Int)
    val customers: ArrayBuffer[Item] = ArrayBuffer(Item(1, "Alice"), Item(2, "Bob"))
    val orders: ArrayBuffer[Item1] = ArrayBuffer(Item1(100, 1), Item1(101, 1), Item1(102, 2))
    val stats: ArrayBuffer[Any] = ({ var _tmp = ArrayBuffer[(Any, Map[String,Any])]() ; for (o <- orders) { for (c <- customers) { if (o.customerId == c.id) { _tmp.append((c.name, Map("o" -> o, "c" -> c))) }} }; ArrayBuffer(_tmp.groupBy(_._1).map{ case (k, arr) => Map("key" -> k, "items" -> ArrayBuffer(arr.map(_._2).toSeq: _*)) }.toSeq: _*).map(g => Map("name" -> g("key"), "count" -> g("items").size)) })
    println("--- Orders per customer ---")
    for (s <- stats) {
      println(List(s.name, "orders:", s.count).mkString(" "))
    }
  }
}
