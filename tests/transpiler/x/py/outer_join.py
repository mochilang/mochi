# Code generated by Mochi transpiler.
# Version 0.10.36, generated on 2025-07-22 17:22 +0700
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict

@dataclass
class Customer:
    id: int
    name: str

customers = [Customer(1, "Alice"), Customer(2, "Bob"), Customer(3, "Charlie"), Customer(4, "Diana")]
@dataclass
class Order:
    id: int
    customerId: int
    total: int

orders = [Order(100, 1, 250), Order(101, 2, 125), Order(102, 1, 300), Order(103, 5, 80)]
@dataclass
class Result:
    order: any
    customer: any

result = [Result(o, c) for o in orders for c in customers if o.customerId == c.id] + [(lambda c: Result(o, None))(None) for o in orders if not any([o.customerId == c.id for c in customers])] + [(lambda o: Result(None, c))(None) for c in customers if not any([o.customerId == c.id for o in orders])]
print("--- Outer Join using syntax ---")
for row in result:
    if row.order:
        if row.customer:
            print("Order", row.order.id, "by", row.customer.name, "- $", row.order.total)
        else:
            print("Order", row.order.id, "by", "Unknown", "- $", row.order.total)
    else:
        print("Customer", row.customer.name, "has no orders")
