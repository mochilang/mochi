# Code generated by Mochi v0.10.34 - DO NOT EDIT
from dataclasses import dataclass
from typing import List, Dict

@dataclass
class People:
    name: str
    age: int
    city: str

    def __getitem__(self, k):
        return getattr(self, k)

people = [People("Alice", 30, "Paris"), People("Bob", 15, "Hanoi"), People("Charlie", 65, "Paris"), People("Diana", 45, "Hanoi"), People("Eve", 70, "Paris"), People("Frank", 22, "Hanoi")]
@dataclass
class StatsGroup:
    key: any
    items: any

    def __getitem__(self, k):
        return getattr(self, k)

_stats_groups = {}
for person in people:
    _stats_g = _stats_groups.setdefault(person["city"], StatsGroup(person["city"], []))
    _stats_g.items.append(person)
@dataclass
class Stat:
    city: any
    count: any
    avg_age: any

    def __getitem__(self, k):
        return getattr(self, k)

stats = [Stat(g.key, len(g.items), (sum([p["age"] for p in g.items]) / len([p["age"] for p in g.items]) if [p["age"] for p in g.items] else 0.0)) for g in _stats_groups.values()]
print("--- People grouped by city ---")
for s in stats:
    print(" ".join(str(x) for x in [s["city"], ": count =", s["count"], ", avg_age =", s["avg_age"]]).rstrip())
