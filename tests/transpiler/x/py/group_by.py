# Code generated by Mochi transpiler.
# Version 0.10.36, generated on 2025-07-22 17:46 +0700
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict

@dataclass
class People:
    name: str
    age: int
    city: str

people = [People("Alice", 30, "Paris"), People("Bob", 15, "Hanoi"), People("Charlie", 65, "Paris"), People("Diana", 45, "Hanoi"), People("Eve", 70, "Paris"), People("Frank", 22, "Hanoi")]
@dataclass
class StatsGroup:
    key: str
    items: list

_stats_groups = {}
for person in people:
    _g = _stats_groups.setdefault(person.city, StatsGroup(person.city, []))
    _g.items.append(person)
@dataclass
class Stat:
    city: str
    count: int
    avg_age: float

stats = [Stat(g.key, len(g.items), (sum([p.age for p in g.items]) / len([p.age for p in g.items]) if [p.age for p in g.items] else 0.0)) for g in _stats_groups.values()]
print("--- People grouped by city ---")
for s in stats:
    print(s.city, ": count =", s.count, ", avg_age =", s.avg_age)
