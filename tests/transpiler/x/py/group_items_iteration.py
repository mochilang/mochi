# Code generated by Mochi transpiler.
# Version 0.10.36, generated on 2025-07-22 17:46 +0700
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict

@dataclass
class Data:
    tag: str
    val: int

data = [Data("a", 1), Data("a", 2), Data("b", 3)]
@dataclass
class GroupsGroup:
    key: str
    items: list

_groups_groups = {}
for d in data:
    _g = _groups_groups.setdefault(d.tag, GroupsGroup(d.tag, []))
    _g.items.append(d)
groups = [g for g in _groups_groups.values()]
tmp = []
for g in groups:
    total = 0
    for x in g.items:
        total = total + x.val
    tmp = tmp + [{"tag": g.key, "total": total}]
result = [r for r in sorted([r for r in tmp], key=lambda r: r["tag"])]
print(result)
