# Code generated by Mochi transpiler.
# Version 0.10.34, generated on 2025-07-22 10:17 +0700
from __future__ import annotations
from dataclasses import dataclass
from typing import List, Dict
import dataclasses
import json

@dataclass
class GenType1:
    cat: str
    val: int

items = [GenType1("a", 3), GenType1("a", 1), GenType1("b", 5), GenType1("b", 2)]
@dataclass
class GroupedGroup:
    key: str
    items: list

_grouped_groups = {}
for i in items:
    _g = _grouped_groups.setdefault(i.cat, GroupedGroup(i.cat, []))
    _g.items.append(i)
@dataclass
class GenType3:
    cat: str
    total: any

grouped = [GenType3(g.key, sum([x.val for x in g.items])) for g in sorted(_grouped_groups.values(), key=lambda g: sum([x.val for x in g.items]), reverse=True)]
print(json.dumps([dataclasses.asdict(_x) for _x in grouped]))
