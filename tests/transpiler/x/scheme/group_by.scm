;; Generated on 2025-07-21 17:26 +0700
(import (srfi 1) (srfi 69) (chibi string))
(define people (list (alist->hash-table (list (cons "name" "Alice")
         (cons "age" 30)
         (cons "city" "Paris")
        )
      )
     (alist->hash-table (list (cons "name" "Bob")
         (cons "age" 15)
         (cons "city" "Hanoi")
        )
      )
     (alist->hash-table (list (cons "name" "Charlie")
         (cons "age" 65)
         (cons "city" "Paris")
        )
      )
     (alist->hash-table (list (cons "name" "Diana")
         (cons "age" 45)
         (cons "city" "Hanoi")
        )
      )
     (alist->hash-table (list (cons "name" "Eve")
         (cons "age" 70)
         (cons "city" "Paris")
        )
      )
     (alist->hash-table (list (cons "name" "Frank")
         (cons "age" 22)
         (cons "city" "Hanoi")
        )
      )
    )
  )
(define stats (let ((groups8 (make-hash-table)
        )
       (res11 (list)
        )
      )
     (begin (for-each (lambda (person)
           (let* ((k10 (hash-table-ref person "city")
                )
               (g9 (hash-table-ref/default groups8 k10 #f)
                )
              )
             (begin (if (not g9)
                 (begin (set! g9 (alist->hash-table (list (cons "key" k10)
                         (cons "items" (list)
                          )
                        )
                      )
                    )
                   (hash-table-set! groups8 k10 g9)
                  )
                 (quote nil)
                )
               (hash-table-set! g9 "items" (append (hash-table-ref g9 "items")
                   (list (alist->hash-table (list (cons "person" person)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
         people)
       (for-each (lambda (g)
           (set! res11 (append res11 (list (alist->hash-table (list (cons "city" (hash-table-ref g "key")
                      )
                     (cons "count" (length (hash-table-ref g "items")
                        )
                      )
                     (cons "avg_age" (let ((xs (let ((res7 (list)
                                  )
                                )
                               (begin (for-each (lambda (p)
                                     (set! res7 (append res7 (list (hash-table-ref p "age")
                                          )
                                        )
                                      )
                                    )
                                   (hash-table-ref g "items")
                                  )
                                 res7)
                              )
                            )
                          )
                         (exact->inexact (/ (apply + xs)
                             (length xs)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
         (hash-table-values groups8)
        )
       res11)
    )
  )
(display "--- People grouped by city ---")
(newline)
(for-each (lambda (s)
     (begin (display (hash-table-ref s "city")
        )
       (display " ")
       (display ": count =")
       (display " ")
       (display (hash-table-ref s "count")
        )
       (display " ")
       (display ", avg_age =")
       (display " ")
       (display (hash-table-ref s "avg_age")
        )
       (newline)
      )
    )
   stats)
