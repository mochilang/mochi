;; Generated by Mochi v0.10.33 on 2025-07-21 16:23:10 GMT+7
(ns main)

(require 'clojure.set)

(defrecord Anon2 [id customerId total])

(defrecord Anon1 [id name])

(def customers [{:id 1 :name "Alice"} {:id 2 :name "Bob"}])

(def orders [{:id 100 :customerId 1 :total 250} {:id 101 :customerId 3 :total 80}])

(def result (for [o orders c (let [c_tmp (filter (fn [c] (= (:customerId o) (:id c))) customers)] (if (seq c_tmp) c_tmp [nil]))] {:orderId (:id o) :customer c :total (:total o)}))

(defn -main []
  (println "--- Left Join ---")
  (doseq [entry result] (println "Order" (:orderId entry) "customer" (:customer entry) "total" (:total entry))))

(-main)
