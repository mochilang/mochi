function __print(...)
	local args = {...}
	for i, a in ipairs(args) do
		if i > 1 then io.write(' ') end
		io.write(tostring(a))
	end
	io.write('\n')
end

function __add(a, b)
	if type(a) == 'table' and type(b) == 'table' then
		local out = {}
		for i = 1, #a do out[#out+1] = a[i] end
		for i = 1, #b do out[#out+1] = b[i] end
		return out
	elseif type(a) == 'string' or type(b) == 'string' then
		return tostring(a) .. tostring(b)
	else
		return a + b
	end
end

function inorder(t)
	return (function()
	local _t0 = t
	if _t0.__name == "Leaf" then return {} end
	if _t0.__name == "Node" then return (function(l, v, r) return __add(__add(inorder(l), {v}), inorder(r)) end)(_t0.left, _t0.value, _t0.right) end
	return nil
end)()
end

__print(inorder({__name="Node", left={__name="Leaf"}, value=1, right={__name="Node", left={__name="Leaf"}, value=2, right={__name="Leaf"}}}))
