function __div(a, b)
	if math.type and math.type(a) == 'integer' and math.type(b) == 'integer' then
		return a // b
	end
	return a / b
end

function fromList(nums)
	local function helper(lo, hi)
		if (lo >= hi) then
			return {__name="Leaf"}
		end
		local mid = __div(((lo + hi)), 2)
		return {__name="Node", left=helper(lo, mid), value=nums[(mid)+1], right=helper((mid + 1), hi)}
	end
	return helper(0, #nums)
end

function inorder(t)
	return (function()
	local _t0 = t
	if _t0.__name == "Leaf" then return {} end
	if _t0.__name == "Node" then return (function(l, v, r) return ((inorder(l) + {v}) + inorder(r)) end)(_t0.left, _t0.value, _t0.right) end
	return nil
end)()
end

print(inorder(fromList({-10, -3, 0, 5, 9})))
