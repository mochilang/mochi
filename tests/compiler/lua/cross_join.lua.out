function __iter(obj)
	if type(obj) == 'table' then
		if obj[1] ~= nil or #obj > 0 then
			local i = 0
			local n = #obj
			return function()
				i = i + 1
				if i <= n then return i, obj[i] end
			end
		else
			return pairs(obj)
		end
	elseif type(obj) == 'string' then
		local i = 0
		local n = #obj
		return function()
			i = i + 1
			if i <= n then return i, string.sub(obj, i, i) end
		end
	else
		return function() return nil end
	end
end

local customers = {{id=1, name="Alice"}, {id=2, name="Bob"}, {id=3, name="Charlie"}}
local orders = {{id=100, customerId=1, total=250}, {id=101, customerId=2, total=125}, {id=102, customerId=1, total=300}}
local result = (function()
	local _res = {}
	for _, o in ipairs(orders) do
		for _, c in ipairs(customers) do
			table.insert(_res, {orderId=o.id, orderCustomerId=o.customerId, pairedCustomerName=c.name, orderTotal=o.total})
		end
	end
	return _res
end)()
print("--- Cross Join: All order-customer pairs ---")
for _, entry in __iter(result) do
	print("Order", entry.orderId, "(customerId:", entry.orderCustomerId, ", total: $", entry.orderTotal, ") paired with", entry.pairedCustomerName)
	::__continue0::
end
