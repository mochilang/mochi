function __add(a, b)
    if type(a) == "table" and type(b) == "table" then
        local out = {}
        for i = 1, #a do
            out[#out + 1] = a[i]
        end
        for i = 1, #b do
            out[#out + 1] = b[i]
        end
        return out
    elseif type(a) == "string" or type(b) == "string" then
        return tostring(a) .. tostring(b)
    else
        return a + b
    end
end
function __print(...)
    local args = {...}
    for i, a in ipairs(args) do
        if i > 1 then
            io.write(" ")
        end
        io.write(tostring(a))
    end
    io.write("\n")
end
c = 0
for _ = 0, (2) - 1 do
    c = __add(c, 1)
    ::__continue0::
end
for _ in ipairs({1, 2}) do
    c = __add(c, 1)
    ::__continue1::
end
local _s0 = "ab"
for _i0 = 1, #_s0 do
    c = __add(c, 1)
    ::__continue2::
end
m = {["x"] = 1, ["y"] = 2}
for _ in pairs(m) do
    c = __add(c, 1)
    ::__continue3::
end
__print(c)
