function __iter(obj)
	if type(obj) == 'table' then
		if obj[1] ~= nil or #obj > 0 then
			local i = 0
			local n = #obj
			return function()
				i = i + 1
				if i <= n then return i, obj[i] end
			end
		else
			return pairs(obj)
		end
	elseif type(obj) == 'string' then
		local i = 0
		local n = #obj
		return function()
			i = i + 1
			if i <= n then return i, string.sub(obj, i, i) end
		end
	else
		return function() return nil end
	end
end

local c = 0
for _ = 0, (2)-1 do
	c = (c + 1)
	::__continue0::
end
for _, _ in __iter({1, 2}) do
	c = (c + 1)
	::__continue1::
end
for _, _ in __iter("ab") do
	c = (c + 1)
	::__continue2::
end
local m = {["x"]=1, ["y"]=2}
for _, _ in __iter(m) do
	c = (c + 1)
	::__continue3::
end
print(c)
