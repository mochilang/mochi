#!/usr/bin/env escript
-module(main).
-export([main/1]).

-record(circle, {radius}).
circle_area(Self) ->
	try
		A = ((3.14 * Self#circle.radius) * Self#circle.radius),
		mochi_print(["Calculating area:", A]),
		throw({return, A})
	catch
		throw:{return, V} -> V
	end.

circle_describe(Self) ->
	try
		mochi_print(["Circle with radius", Self#circle.radius])
	catch
		throw:{return, V} -> V
	end.


main(_) ->
	C = #circle{radius=5},
	circle_describe(C),
	mochi_print(["Area is", circle_area(C)]).

mochi_print(Args) ->
	Strs = [ mochi_format(A) || A <- Args ],
	io:format("~s~n", [lists:flatten(Strs)]).

mochi_format(X) when is_integer(X) -> integer_to_list(X);
mochi_format(X) when is_float(X) -> float_to_list(X);
mochi_format(X) when is_list(X) -> X;
mochi_format(X) -> lists:flatten(io_lib:format("~p", [X])).
