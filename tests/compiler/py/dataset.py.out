# Generated by Mochi Python compiler
from __future__ import annotations

import dataclasses
import typing


def _get(obj, name):
    if obj is None:
        return None
    if isinstance(obj, dict):
        if name in obj:
            return obj[name]
    if hasattr(obj, name):
        return getattr(obj, name)
    if isinstance(obj, (list, tuple)):
        for it in obj:
            try:
                return _get(it, name)
            except Exception:
                pass
    raise Exception("field not found: " + name)


@dataclasses.dataclass
class Person:
    name: str
    age: int


people = [
    Person(name="Alice", age=30),
    Person(name="Bob", age=15),
    Person(name="Charlie", age=65),
]
names = None


def main():
    global people
    people = [
        Person(name="Alice", age=30),
        Person(name="Bob", age=15),
        Person(name="Charlie", age=65),
    ]
    global names
    names = [_get(p, "name") for p in people if (_get(p, "age") >= 18)]
    for n in names:
        print(n)


if __name__ == "__main__":
    main()
