# Generated by Mochi Python compiler
from __future__ import annotations

import dataclasses
import typing

from typing import Any, TypeVar

T = TypeVar("T")


def _sort_key(k):
    if isinstance(k, (list, tuple, dict)):
        return str(k)
    return k


@dataclasses.dataclass
class Product:
    name: str
    price: int


products = [
    Product(name="Laptop", price=1500),
    Product(name="Smartphone", price=900),
    Product(name="Tablet", price=600),
    Product(name="Monitor", price=300),
    Product(name="Keyboard", price=100),
    Product(name="Mouse", price=50),
    Product(name="Headphones", price=200),
]
expensive = None


def main():
    global products
    products = [
        Product(name="Laptop", price=1500),
        Product(name="Smartphone", price=900),
        Product(name="Tablet", price=600),
        Product(name="Monitor", price=300),
        Product(name="Keyboard", price=100),
        Product(name="Mouse", price=50),
        Product(name="Headphones", price=200),
    ]
    global expensive
    expensive = [
        p
        for p in (
            (sorted([p for p in products], key=lambda p: _sort_key((-p.price))))[
                max(1, 0) :
            ]
        )[: max(3, 0)]
    ]
    print("--- Top products (excluding most expensive) ---")
    for item in expensive:
        print(item.name, "costs $", item.price)


if __name__ == "__main__":
    main()
