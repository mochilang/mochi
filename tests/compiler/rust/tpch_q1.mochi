type LineItem {
  l_quantity: int
  l_extendedprice: float
  l_discount: float
  l_tax: float
  l_returnflag: string
  l_linestatus: string
  l_shipdate: string
}

let lineitem = [
  LineItem {
    l_quantity: 17,
    l_extendedprice: 1000.0,
    l_discount: 0.05,
    l_tax: 0.07,
    l_returnflag: "N",
    l_linestatus: "O",
    l_shipdate: "1998-08-01"
  },
  LineItem {
    l_quantity: 36,
    l_extendedprice: 2000.0,
    l_discount: 0.10,
    l_tax: 0.05,
    l_returnflag: "N",
    l_linestatus: "O",
    l_shipdate: "1998-09-01"
  },
  LineItem {
    l_quantity: 25,
    l_extendedprice: 1500.0,
    l_discount: 0.00,
    l_tax: 0.08,
    l_returnflag: "R",
    l_linestatus: "F",
    l_shipdate: "1998-09-03"  // excluded
  }
]

let result =
  from row in lineitem
  where row.l_shipdate <= "1998-09-02"
  group by {
    returnflag: row.l_returnflag,
    linestatus: row.l_linestatus
  } into g
  select {
    returnflag: g.key.returnflag,
    linestatus: g.key.linestatus,
    sum_qty: sum(from x in g select x.l_quantity),
    sum_base_price: sum(from x in g select x.l_extendedprice),
    sum_disc_price: sum(from x in g select x.l_extendedprice * (1 - x.l_discount)),
    sum_charge: sum(from x in g select x.l_extendedprice * (1 - x.l_discount) * (1 + x.l_tax)),
    avg_qty: avg(from x in g select x.l_quantity),
    avg_price: avg(from x in g select x.l_extendedprice),
    avg_disc: avg(from x in g select x.l_discount),
    count_order: count(g)
  }

json(result)

