#[derive(Clone, Debug, Default)]
struct Msg {
    message: String,
}

fn main() {
    let mut data: Msg = _fetch::<Msg>("file://tests/compiler/rust/fetch_builtin.json", std::collections::HashMap::new());
    println!("{}", data.message);
}

fn _fetch<T: serde::de::DeserializeOwned>(_url: &str, _opts: std::collections::HashMap<String, String>) -> T {
    use std::process::Command;
    let mut data = String::new();
    if _url.starts_with("file://") {
        if let Ok(text) = std::fs::read_to_string(&_url[7..]) {
            data = text;
        }
    } else {
        let out = Command::new("curl").arg("-s").arg(_url).output().unwrap();
        data = String::from_utf8_lossy(&out.stdout).to_string();
    }
    serde_json::from_str::<T>(&data).unwrap()
}
