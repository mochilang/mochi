fn searchMatrix(matrix: Vec<Vec<i64>>, target: i64) -> bool {
    let mut m = matrix.len() as i64;
    if m == 0 {
        return false;
    }
    let mut n = matrix[(0) as usize].len() as i64;
    let mut left = 0;
    let mut right = m * n - 1;
    while left <= right {
        let mut mid = left + (right - left) / 2;
        let mut row = mid / n;
        let mut col = mid % n;
        let mut value = matrix[row as usize][col as usize];
        if value == target {
            return true;
        } else 
        if value < target {
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }
    return false;
}

fn main() {
    println!("{}", searchMatrix(vec![vec![1, 3, 5, 7], vec![10, 11, 16, 20], vec![23, 30, 34, 60]], 3));
    println!("{}", searchMatrix(vec![vec![1, 3, 5, 7], vec![10, 11, 16, 20], vec![23, 30, 34, 60]], 13));
}
