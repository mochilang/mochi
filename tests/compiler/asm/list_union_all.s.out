	.file	"prog.c"
	.text
	.type	list_int_create, @function
list_int_create:
.LFB6:
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%rbx
	subq	$40, %rsp
	.cfi_offset 3, -24
	movl	%edi, -36(%rbp)
	movl	-36(%rbp), %eax
	movl	%eax, -32(%rbp)
	movl	-36(%rbp), %eax
	cltq
	salq	$2, %rax
	movq	%rax, %rdi
	call	malloc@PLT
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rax
	movq	-24(%rbp), %rdx
	movq	%rax, %rsi
	movq	%rdx, %rdi
	movq	%rax, %rcx
	movq	%rdx, %rbx
	movl	%esi, %eax
	movq	%rbx, %rdx
	movq	-8(%rbp), %rbx
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE6:
	.size	list_int_create, .-list_int_create
	.type	list_list_int_create, @function
list_list_int_create:
.LFB7:
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%rbx
	subq	$40, %rsp
	.cfi_offset 3, -24
	movl	%edi, -36(%rbp)
	movl	-36(%rbp), %eax
	movl	%eax, -32(%rbp)
	movl	-36(%rbp), %eax
	cltq
	salq	$4, %rax
	movq	%rax, %rdi
	call	malloc@PLT
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rax
	movq	-24(%rbp), %rdx
	movq	%rax, %rsi
	movq	%rdx, %rdi
	movq	%rax, %rcx
	movq	%rdx, %rbx
	movl	%esi, %eax
	movq	%rbx, %rdx
	movq	-8(%rbp), %rbx
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE7:
	.size	list_list_int_create, .-list_list_int_create
	.type	union_list_int, @function
union_list_int:
.LFB8:
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%rbx
	subq	$88, %rsp
	.cfi_offset 3, -24
	movl	%edi, %eax
	movq	%rsi, %r8
	movq	%rax, %rsi
	movq	%rdx, %rdi
	movq	%r8, %rdi
	movq	%rsi, -80(%rbp)
	movq	%rdi, -72(%rbp)
	movl	%edx, %eax
	movq	%rcx, %rdx
	movq	%rax, -96(%rbp)
	movq	%rdx, -88(%rbp)
	movl	-80(%rbp), %edx
	movl	-96(%rbp), %eax
	addl	%edx, %eax
	movl	%eax, %edi
	call	list_int_create
	movl	%eax, %ecx
	movq	%rdx, %rax
	movl	%ecx, -32(%rbp)
	movq	%rax, -24(%rbp)
	movl	$0, -60(%rbp)
	movl	$0, -56(%rbp)
	jmp	.L6
.L12:
	movl	$0, -52(%rbp)
	movl	$0, -48(%rbp)
	jmp	.L7
.L10:
	movq	-24(%rbp), %rax
	movl	-48(%rbp), %edx
	movslq	%edx, %rdx
	salq	$2, %rdx
	addq	%rdx, %rax
	movl	(%rax), %edx
	movq	-72(%rbp), %rax
	movl	-56(%rbp), %ecx
	movslq	%ecx, %rcx
	salq	$2, %rcx
	addq	%rcx, %rax
	movl	(%rax), %eax
	cmpl	%eax, %edx
	jne	.L8
	movl	$1, -52(%rbp)
	jmp	.L9
.L8:
	addl	$1, -48(%rbp)
.L7:
	movl	-48(%rbp), %eax
	cmpl	-60(%rbp), %eax
	jl	.L10
.L9:
	cmpl	$0, -52(%rbp)
	jne	.L11
	movq	-72(%rbp), %rax
	movl	-56(%rbp), %edx
	movslq	%edx, %rdx
	salq	$2, %rdx
	leaq	(%rax,%rdx), %rcx
	movq	-24(%rbp), %rsi
	movl	-60(%rbp), %eax
	leal	1(%rax), %edx
	movl	%edx, -60(%rbp)
	cltq
	salq	$2, %rax
	leaq	(%rsi,%rax), %rdx
	movl	(%rcx), %eax
	movl	%eax, (%rdx)
.L11:
	addl	$1, -56(%rbp)
.L6:
	movl	-80(%rbp), %eax
	cmpl	%eax, -56(%rbp)
	jl	.L12
	movl	$0, -44(%rbp)
	jmp	.L13
.L19:
	movl	$0, -40(%rbp)
	movl	$0, -36(%rbp)
	jmp	.L14
.L17:
	movq	-24(%rbp), %rax
	movl	-36(%rbp), %edx
	movslq	%edx, %rdx
	salq	$2, %rdx
	addq	%rdx, %rax
	movl	(%rax), %edx
	movq	-88(%rbp), %rax
	movl	-44(%rbp), %ecx
	movslq	%ecx, %rcx
	salq	$2, %rcx
	addq	%rcx, %rax
	movl	(%rax), %eax
	cmpl	%eax, %edx
	jne	.L15
	movl	$1, -40(%rbp)
	jmp	.L16
.L15:
	addl	$1, -36(%rbp)
.L14:
	movl	-36(%rbp), %eax
	cmpl	-60(%rbp), %eax
	jl	.L17
.L16:
	cmpl	$0, -40(%rbp)
	jne	.L18
	movq	-88(%rbp), %rax
	movl	-44(%rbp), %edx
	movslq	%edx, %rdx
	salq	$2, %rdx
	leaq	(%rax,%rdx), %rcx
	movq	-24(%rbp), %rsi
	movl	-60(%rbp), %eax
	leal	1(%rax), %edx
	movl	%edx, -60(%rbp)
	cltq
	salq	$2, %rax
	leaq	(%rsi,%rax), %rdx
	movl	(%rcx), %eax
	movl	%eax, (%rdx)
.L18:
	addl	$1, -44(%rbp)
.L13:
	movl	-96(%rbp), %eax
	cmpl	%eax, -44(%rbp)
	jl	.L19
	movl	-60(%rbp), %eax
	movl	%eax, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	-24(%rbp), %rdx
	movq	%rax, %rsi
	movq	%rdx, %rdi
	movq	%rax, %rcx
	movq	%rdx, %rbx
	movl	%esi, %eax
	movq	%rbx, %rdx
	movq	-8(%rbp), %rbx
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE8:
	.size	union_list_int, .-union_list_int
	.section	.rodata
.LC0:
	.string	"%d"
	.text
	.type	_print_list_int, @function
_print_list_int:
.LFB9:
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movl	%edi, %eax
	movq	%rsi, %rcx
	movq	%rcx, %rdx
	movq	%rax, -32(%rbp)
	movq	%rdx, -24(%rbp)
	movl	$91, %edi
	call	putchar@PLT
	movl	$0, -4(%rbp)
	jmp	.L22
.L24:
	cmpl	$0, -4(%rbp)
	jle	.L23
	movl	$32, %edi
	call	putchar@PLT
.L23:
	movq	-24(%rbp), %rax
	movl	-4(%rbp), %edx
	movslq	%edx, %rdx
	salq	$2, %rdx
	addq	%rdx, %rax
	movl	(%rax), %eax
	movl	%eax, %esi
	leaq	.LC0(%rip), %rax
	movq	%rax, %rdi
	movl	$0, %eax
	call	printf@PLT
	addl	$1, -4(%rbp)
.L22:
	movl	-32(%rbp), %eax
	cmpl	%eax, -4(%rbp)
	jl	.L24
	movl	$93, %edi
	call	putchar@PLT
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE9:
	.size	_print_list_int, .-_print_list_int
	.type	_print_list_list_int, @function
_print_list_list_int:
.LFB10:
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movl	%edi, %eax
	movq	%rsi, %rcx
	movq	%rcx, %rdx
	movq	%rax, -32(%rbp)
	movq	%rdx, -24(%rbp)
	movl	$91, %edi
	call	putchar@PLT
	movl	$0, -4(%rbp)
	jmp	.L26
.L28:
	cmpl	$0, -4(%rbp)
	jle	.L27
	movl	$32, %edi
	call	putchar@PLT
.L27:
	movq	-24(%rbp), %rax
	movl	-4(%rbp), %edx
	movslq	%edx, %rdx
	salq	$4, %rdx
	addq	%rdx, %rax
	movl	(%rax), %edx
	movq	8(%rax), %rax
	movl	%edx, %edi
	movq	%rax, %rsi
	call	_print_list_int
	addl	$1, -4(%rbp)
.L26:
	movl	-32(%rbp), %eax
	cmpl	%eax, -4(%rbp)
	jl	.L28
	movl	$93, %edi
	call	putchar@PLT
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE10:
	.size	_print_list_list_int, .-_print_list_list_int
	.globl	main
	.type	main, @function
main:
.LFB11:
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movl	$2, %edi
	call	list_int_create
	movl	%eax, %ecx
	movq	%rdx, %rax
	movl	%ecx, -48(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	movl	$1, (%rax)
	movq	-40(%rbp), %rax
	addq	$4, %rax
	movl	$2, (%rax)
	movl	$2, %edi
	call	list_int_create
	movl	%eax, %ecx
	movq	%rdx, %rax
	movl	%ecx, -32(%rbp)
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rax
	movl	$2, (%rax)
	movq	-24(%rbp), %rax
	addq	$4, %rax
	movl	$3, (%rax)
	movl	-32(%rbp), %edx
	movq	-24(%rbp), %rcx
	movl	-48(%rbp), %esi
	movq	-40(%rbp), %rax
	movl	%esi, %edi
	movq	%rax, %rsi
	call	union_list_int
	movl	%eax, %ecx
	movq	%rdx, %rax
	movl	%ecx, -16(%rbp)
	movq	%rax, -8(%rbp)
	movl	-16(%rbp), %edx
	movq	-8(%rbp), %rax
	movl	%edx, %edi
	movq	%rax, %rsi
	call	_print_list_int
	movl	$10, %edi
	call	putchar@PLT
	movl	$0, %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE11:
	.size	main, .-main
	.ident	"GCC: (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
