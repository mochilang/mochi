require 'ostruct'

class MGroup
  attr_accessor :key, :Items
  def initialize(k)
    @key = k
    @Items = []
  end
  def length
    @Items.length
  end
end
def _group_by(src, keyfn)
grouped = src.group_by { |it| keyfn.call(it) }
grouped.map do |k, items|
g = MGroup.new(k)
g.Items.concat(items)
g
end
end

xs = [1, 1, 2]
groups = _group_by(xs, ->(x){ x }).map { |g| OpenStruct.new(k: g.key, c: (g).length) }
for g in groups
	puts([g.k, g.c].join(" "))
end
