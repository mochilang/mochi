# Generated by Mochi Elixir compiler
defmodule Main do
  def main do
    customers = [%{id: 1, name: "Alice"}, %{id: 2, name: "Bob"}, %{id: 3, name: "Charlie"}]

    orders = [
      %{id: 100, customerId: 1, total: 250},
      %{id: 101, customerId: 2, total: 125},
      %{id: 102, customerId: 1, total: 300}
    ]

    result =
      for o <- orders,
          c <- customers,
          do: %{
            orderId: o.id,
            orderCustomerId: o.customerId,
            pairedCustomerName: c.name,
            orderTotal: o.total
          }

    IO.puts("--- Cross Join: All order-customer pairs ---")

    for entry <- result do
      IO.puts(
        Enum.join(
          Enum.map(
            [
              "Order",
              entry.orderId,
              "(customerId:",
              entry.orderCustomerId,
              ", total: $",
              entry.orderTotal,
              ") paired with",
              entry.pairedCustomerName
            ],
            &to_string(&1)
          ),
          " "
        )
      )
    end
  end
end

Main.main()
