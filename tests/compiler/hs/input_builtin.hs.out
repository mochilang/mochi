module Main where

import Data.Maybe (fromMaybe)
import Data.List (unwords)


forLoop :: Int -> Int -> (Int -> Maybe a) -> Maybe a
forLoop start end f = go start
  where
    go i | i < end =
            case f i of
              Just v -> Just v
              Nothing -> go (i + 1)
         | otherwise = Nothing

input :: IO String
input = getLine

showArg :: Show a => a -> String
showArg x =
  let s = show x
  in if length s >= 2 && head s == '"' && last s == '"'
        then init (tail s)
        else s


main :: IO ()
main = do
    putStrLn "Enter first input:"
    input1 <- input
    putStrLn "Enter second input:"
    input2 <- input
    putStrLn (unwords [showArg ("You entered:"), showArg (input1), showArg (","), showArg (input2)])
