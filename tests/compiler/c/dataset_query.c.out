#include <stdio.h>
#include <stdlib.h>

typedef struct { int len; int *data; } list_int;
static list_int list_int_create(int len) {
	list_int l;
	l.len = len;
	l.data = (int*)malloc(sizeof(int)*len);
	return l;
}
typedef struct { int len; list_int *data; } list_list_int;
static list_list_int list_list_int_create(int len) {
	list_list_int l;
	l.len = len;
	l.data = (list_int*)malloc(sizeof(list_int)*len);
	return l;
}static void _print_list_int(list_int v) {
	printf("[");
	for (int i = 0; i < v.len; i++) {
	    if (i > 0) printf(" ");
	    printf("%d", v.data[i]);
	}
	printf("]");
}
int main() {
	list_int _t1 = list_int_create(5);
	_t1.data[0] = 1;
	_t1.data[1] = 2;
	_t1.data[2] = 3;
	_t1.data[3] = 4;
	_t1.data[4] = 5;
	list_int nums = _t1;
	list_int _t2 = list_int_create(nums.len);
	int _t3 = 0;
	for (int _t4 = 0; _t4 < nums.len; _t4++) {
		int n = nums.data[_t4];
		if (!(((n % 2) == 1))) continue;
		_t2.data[_t3++] = (n * 2);
	}
	_t2.len = _t3;
	list_int out = _t2;
	_print_list_int(out);
	printf("\n");
	return 0;
}
