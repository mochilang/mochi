#include <stdio.h>
#include <stdlib.h>

typedef struct { int len; int *data; } list_int;
typedef struct { int len; list_int *data; } list_list_int;

static list_int list_int_create(int len) {
	list_int l;
	l.len = len;
	l.data = (int*)malloc(sizeof(int)*len);
	return l;
}

static list_list_int list_list_int_create(int len) {
	list_list_int l;
	l.len = len;
	l.data = (list_int*)malloc(sizeof(list_int)*len);
	return l;
}

static int _count(list_int v) {
	return v.len;
}

static int _avg(list_int v) {
	if (v.len == 0) return 0;
	int sum = 0;
	for (int i = 0; i < v.len; i++) {
		sum += v.data[i];
	}
	return sum / v.len;
}

int searchMatrix(list_list_int matrix, int target){
	int m = matrix.len;
	if ((m == 0)) {
		return 0;
	}
	int n = matrix.data[0].len;
	int left = 0;
	int right = ((m * n) - 1);
	while ((left <= right)) {
		int mid = ((left + ((right - left))) / 2);
		int row = (mid / n);
		int col = (mid % n);
		int value = matrix.data[row].data[col];
		if ((value == target)) {
			return 1;
		} else 		if ((value < target)) {
			left = (mid + 1);
		} else {
			right = (mid - 1);
		}
	}
	return 0;
}

int main() {
	list_list_int _t1 = list_list_int_create(3);
	list_int _t2 = list_int_create(4);
	_t2.data[0] = 1;
	_t2.data[1] = 3;
	_t2.data[2] = 5;
	_t2.data[3] = 7;
	_t1.data[0] = _t2;
	list_int _t3 = list_int_create(4);
	_t3.data[0] = 10;
	_t3.data[1] = 11;
	_t3.data[2] = 16;
	_t3.data[3] = 20;
	_t1.data[1] = _t3;
	list_int _t4 = list_int_create(4);
	_t4.data[0] = 23;
	_t4.data[1] = 30;
	_t4.data[2] = 34;
	_t4.data[3] = 60;
	_t1.data[2] = _t4;
	printf("%d\n", searchMatrix(_t1, 3));
	list_list_int _t5 = list_list_int_create(3);
	list_int _t6 = list_int_create(4);
	_t6.data[0] = 1;
	_t6.data[1] = 3;
	_t6.data[2] = 5;
	_t6.data[3] = 7;
	_t5.data[0] = _t6;
	list_int _t7 = list_int_create(4);
	_t7.data[0] = 10;
	_t7.data[1] = 11;
	_t7.data[2] = 16;
	_t7.data[3] = 20;
	_t5.data[1] = _t7;
	list_int _t8 = list_int_create(4);
	_t8.data[0] = 23;
	_t8.data[1] = 30;
	_t8.data[2] = 34;
	_t8.data[3] = 60;
	_t5.data[2] = _t8;
	printf("%d\n", searchMatrix(_t5, 13));
	return 0;
}
