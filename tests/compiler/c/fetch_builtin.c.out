#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct {
  int len;
  int *data;
} list_int;
static list_int list_int_create(int len) {
  list_int l;
  l.len = len;
  l.data = (int *)malloc(sizeof(int) * len);
  return l;
}
static map_string _fetch(const char *url, void *opts) {
  (void)opts;
  char *data = NULL;
  if (strncmp(url, "file://", 7) == 0) {
    data = _read_all(url + 7);
  } else if (strncmp(url, "file:", 5) == 0) {
    data = _read_all(url + 5);
  } else {
    char cmd[512];
    snprintf(cmd, sizeof(cmd), "curl -s %s", url);
    FILE *p = popen(cmd, "r");
    if (!p) {
      fprintf(stderr, "fetch failed\n");
      exit(1);
    }
    size_t cap = 0, len = 0;
    while (!feof(p)) {
      if (len + 4096 + 1 > cap) {
        cap = cap ? cap * 2 : 4096;
        data = (char *)realloc(data, cap);
      }
      size_t n = fread(data + len, 1, 4096, p);
      len += n;
    }
    if (pclose(p) < 0) {
    }
    if (data)
      data[len] = '\0';
  }
  if (!data)
    data = strdup("");
  list_map_string rows = _parse_json(data);
  free(data);
  if (rows.len > 0)
    return rows.data[0];
  return map_string_create(0);
}
int main() {
  int data = (_fetch("file:../../tests/compiler/c/fetch_builtin.json", NULL));
  printf("%s\n", data.data["message"]);
  return 0;
}
