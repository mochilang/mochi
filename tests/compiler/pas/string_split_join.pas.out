program main;
{$mode objfpc}
uses SysUtils, fgl, fphttpclient, Classes, Variants, fpjson, jsonparser;

type
  generic TArray<T> = array of T;

var
  parts: specialize TArray<string>;
  sep: string;

function _joinStrings(parts: specialize TArray<string>; sep: string): string;
var i: Integer;
begin
  Result := '';
  for i := 0 to High(parts) do
  begin
    if i > 0 then Result := Result + sep;
    Result := Result + parts[i];
  end;
end;

function _sliceString(s: string; i, j: integer): string;
var start_, end_, n: integer;
begin
  start_ := i;
  end_ := j;
  n := Length(s);
  if start_ < 0 then start_ := n + start_;
  if end_ < 0 then end_ := n + end_;
  if start_ < 0 then start_ := 0;
  if end_ > n then end_ := n;
  if end_ < start_ then end_ := start_;
  Result := Copy(s, start_ + 1, end_ - start_);
end;

function _splitString(s, sep: string): specialize TArray<string>;
var sl: TStringList; i: Integer;
begin
  sl := TStringList.Create;
  try
    sl.Delimiter := sep[1];
    sl.StrictDelimiter := True;
    sl.DelimitedText := s;
    SetLength(Result, sl.Count);
    for i := 0 to sl.Count - 1 do
      Result[i] := sl[i];
  finally
    sl.Free;
  end;
end;

begin
  parts := _splitString('a,b,c', ',');
  sep := _sliceString('--', 0, 1);
  writeln(_joinStrings(parts, sep));
end.
