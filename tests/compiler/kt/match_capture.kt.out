sealed interface Tree
data class Leaf() : Tree
data class Node(val left: Tree, val value: Int, val right: Tree) : Tree

fun depth(t: Tree) : Int {
        return run {
                val _t = t
                when {
                        _t is Leaf -> 0
                        _t is Node -> {
                                val l = _t.left
                                val r = _t.right
                                ((depth(l) + depth(r)) + 1)
                        }
                }
        }
}

fun main() {
        println(depth(Node(left = Leaf(), value = 0, right = Leaf())))
}
