fun main() {
        val xs = listOf(1, 1, 2)
        val groups = _group_by(xs) { x -> x }.map { g -> mutableMapOf("k" to g.key, "c" to g.size) }
        for (g in groups) {
                println(g["k"], g["c"])
        }
}

class _Group(var key: Any?) {
    val Items = mutableListOf<Any?>()
    val size: Int
        get() = Items.size
}

fun _group_by(src: List<Any?>, keyfn: (Any?) -> Any?): List<_Group> {
    val groups = mutableMapOf<String, _Group>()
    val order = mutableListOf<String>()
    for (it in src) {
        val key = keyfn(it)
        val ks = key.toString()
        var g = groups[ks]
        if (g == null) {
            g = _Group(key)
            groups[ks] = g
            order.add(ks)
        }
        g.Items.add(it)
    }
    return order.map { groups[it]!! }
}
