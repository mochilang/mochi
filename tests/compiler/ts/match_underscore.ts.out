// Generated by Mochi TypeScript compiler

// > type Tree =
type Leaf = {
	__name: "Leaf";
}

type _Node = {
	__name: "Node";
	left: Tree;
	value: number;
	right: Tree;
}

type Tree = Leaf | _Node

// > fun value_of_root(t: Tree): int {
function value_of_root(t: Tree) : number {
	// > return match t {
	return (() => {
	const _t = t;
	if (_t.__name === "Node") { return ((v) => v)(_t.value) }
	return 0
})()
}

function main(): void {
	// > print(value_of_root(Node { left: Leaf {}, value: 5, right: Leaf {} }))
	console.log(value_of_root({__name: "Node", left: {__name: "Leaf"}, value: 5, right: {__name: "Leaf"}}))
}
main()
