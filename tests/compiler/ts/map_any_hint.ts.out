// Generated by Mochi TypeScript compiler

// > fun Leaf(): map<string, any> {
function Leaf() : Record<string, any> {
	// > return {"__name": "Leaf"}
	return {"__name": "Leaf"}
}

// > fun Node(left: map<string, any>, value: int, right: map<string, any>): map<string, any> {
function _Node(left: Record<string, any>, value: number, right: Record<string, any>) : Record<string, any> {
	// > return {"__name": "Node", "left": left, "value": value, "right": right}
	return {
		"__name": "Node",
		"left": left,
		"value": value,
		"right": right
	}
}

function main(): void {
	// > var tree = Node(Leaf(), 1, Leaf())
	let tree: Record<string, any> = _Node(Leaf(), 1, Leaf())
	;(globalThis as any).tree = tree
	// > print((tree["left"] as map<string, any>)["__name"])
	console.log((tree["left"])["__name"])
}
main()
