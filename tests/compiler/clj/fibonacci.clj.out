;; Original Source
; fun fib(n: int): int {
;   if n <= 1 {
;     return n
;   }
;   return fib(n - 1) + fib(n - 2)
; }
;
; print(fib(0))
; print(fib(1))
; print(fib(6))

(ns main)

(defn fib [n]
  (try
    (when (<= n 1)
      (throw (ex-info "return" {:value n}))
    )
  (throw (ex-info "return" {:value (+ (fib (- n 1)) (fib (- n 2)))}))
  (catch clojure.lang.ExceptionInfo e
    (if (= (.getMessage e) "return")
      (:value (ex-data e))
      (throw e)))
)
)

(defn -main []
  (println (fib 0))
  (println (fib 1))
  (println (fib 6))
)

(-main)
