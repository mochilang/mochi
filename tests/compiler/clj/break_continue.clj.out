(ns main)

(defn -main []
  (def numbers [1 2 3 4 5 6 7 8 9])
  (loop [_tmp0 (seq numbers)]
    (when _tmp0
      (let [n (clojure.core/first _tmp0)]
        (let [r (try
                  (when (= (mod n 2) 0)
                    (throw (ex-info "continue" {})))
                  (when (> n 7)
                    (throw (ex-info "break" {})))
                  (println "odd number:" n)
                  :next
                  (catch clojure.lang.ExceptionInfo e
                    (cond
                      (= (.getMessage e) "continue") :next
                      (= (.getMessage e) "break") :break
                      :else (throw e))))]

          (cond
            (= r :break) nil
            :else (recur (next _tmp0))))))))

(-main)
