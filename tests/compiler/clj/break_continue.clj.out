(def numbers [1 2 3 4 5 6 7 8 9])
(loop [_tmp0 (seq numbers)]
  (when _tmp0
    (let [n (first _tmp0)]
      (try
        (when (= (mod n 2) 0)
          (throw (ex-info "continue" {}))
        )
        (when (> n 7)
          (throw (ex-info "break" {}))
        )
        (println "odd number:" n)
        (recur (next _tmp0))
      (catch clojure.lang.ExceptionInfo e
        (cond
          (= (.getMessage e) "continue") (recur (next _tmp0))
          (= (.getMessage e) "break") nil
          :else (throw e))
        )
      )
    )
  )
