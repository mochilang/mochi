(ns main)

(defn makeAdder [n]
  (try
    (throw (ex-info "return" {:value (fn [x]
  (try
    (throw (ex-info "return" {:value (+ x n)}))
  (catch clojure.lang.ExceptionInfo e
    (if (= (.getMessage e) "return")
      (:value (ex-data e))
    (throw e)))
  )
)}))
  (catch clojure.lang.ExceptionInfo e
    (if (= (.getMessage e) "return")
      (:value (ex-data e))
    (throw e)))
  )
)

(defn -main []
  (def add10 (makeAdder 10))
  (println (add10 7))
)

(-main)
