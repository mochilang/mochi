<?php
$xs = [1, 1, 2];
$groups = (function() use ($xs) {
	$_src = (is_string($xs) ? str_split($xs) : $xs);
	$_groups = _group_by($_src, function($x) use ($xs) { return $x; });
	$res = [];
	foreach ($_groups as $g) {
		$res[] = ["k" => $g->key, "c" => (is_array($g->Items) ? count($g->Items) : strlen($g->Items))];
	}
	return $res;
})();
foreach ((is_string($groups) ? str_split($groups) : $groups) as $g) {
	_print($g['k'], $g['c']);
}

class _Group {
    public $key;
    public $Items;
    function __construct($key) { $this->key = $key; $this->Items = []; }
}
function _group_by($src, $keyfn) {
    $groups = [];
    $order = [];
    foreach ($src as $it) {
        $key = $keyfn($it);
        if (is_array($key)) { $key = (object)$key; }
        $ks = is_object($key) ? json_encode($key) : strval($key);
        if (!isset($groups[$ks])) {
            $groups[$ks] = new _Group($key);
            $order[] = $ks;
        }
        $groups[$ks]->Items[] = $it;
    }
    $res = [];
    foreach ($order as $ks) { $res[] = $groups[$ks]; }
    return $res;
}
function _print(...$args) {
    $parts = [];
    foreach ($args as $a) {
        if (is_array($a) || is_object($a)) { $parts[] = json_encode($a); } else { $parts[] = strval($a); }
    }
    echo implode(' ', $parts), PHP_EOL;
}
