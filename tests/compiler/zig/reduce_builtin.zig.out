const std = @import("std");

fn _reduce(comptime T: type, v: []const T, init: T, f: fn (T, T) T) T {
    var acc: T = init;
    for (v) |it| {
        acc = f(acc, it);
    }
    return acc;
}

fn add(a: i32, b: i32) i32 {
    return (a + b);
}

pub fn main() void {
    std.debug.print("{any}\n", .{_reduce(i32, &[_]i32{ @as(i32, @intCast(1)), @as(i32, @intCast(2)), @as(i32, @intCast(3)) }, @as(i32, @intCast(0)), add)});
}
