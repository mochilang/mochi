# Generated by Mochi Python compiler
from __future__ import annotations

import typing

def searchMatrix(matrix: list[list[int]], target: int) -> bool:
	m = len(matrix)
	if (m == 0):
		return False
	n = len(matrix[0])
	left = 0
	right = ((m * n) - 1)
	while (left <= right):
		mid = (left + int(((right - left)) / 2))
		row = int(mid / n)
		col = (mid % n)
		value = matrix[row][col]
		if (value == target):
			return True
		elif (value < target):
			left = (mid + 1)
		else:
			right = (mid - 1)
	return False

def main():
	print(searchMatrix([[1, 3, 5, 7], [10, 11, 16, 20], [23, 30, 34, 60]], 3))
	print(searchMatrix([[1, 3, 5, 7], [10, 11, 16, 20], [23, 30, 34, 60]], 13))

if __name__ == "__main__":
	main()
