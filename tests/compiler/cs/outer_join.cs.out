// Generated by Mochi C# compiler
using System;
using System.Collections.Generic;
using System.IO;
using System.Net.Http;
using System.Text;
using System.Web;
using System.Linq;

public class Program {
	public static void Main() {
		var customers = new Dictionary<string, dynamic>[] { new Dictionary<string, dynamic> { { id, 1L }, { name, "Alice" } }, new Dictionary<string, dynamic> { { id, 2L }, { name, "Bob" } } };
		Dictionary<string, long>[] orders = new Dictionary<string, long>[] { new Dictionary<string, long> { { id, 100L }, { customerId, 1L }, { total, 250L } }, new Dictionary<string, long> { { id, 101L }, { customerId, 3L }, { total, 80L } } };
		var result = new Func<List<Dictionary<string, dynamic>>>(() => {
	var _res = new List<Dictionary<string, dynamic>>();
	foreach (var o in orders) {
		var __right = new List<dynamic>(customers);
		var __matched = new bool[__right.Count];
		foreach (var o in orders) {
			bool _m = false;
			for (int __i = 0; __i < __right.Count; __i++) {
				var c = __right[__i];
				if (!((o.customerId == c.id))) continue;
				_m = true;
				__matched[__i] = true;
				_res.Add(new Dictionary<string, dynamic> { { order, o }, { customer, c } });
			}
			if (!_m) {
				dynamic c = null;
				_res.Add(new Dictionary<string, dynamic> { { order, o }, { customer, c } });
			}
		}
		for (int __i = 0; __i < __right.Count; __i++) {
			if (!__matched[__i]) {
				var c = __right[__i];
				dynamic o = null;
				_res.Add(new Dictionary<string, dynamic> { { order, o }, { customer, c } });
			}
		}
	}
	return _res;
})();
		Console.WriteLine("--- Outer Join ---");
		foreach (var entry in result) {
			Console.WriteLine(string.Join(" ", new [] { Convert.ToString("order"), Convert.ToString(entry.order), Convert.ToString("customer"), Convert.ToString(entry.customer) }));
		}
	}
}
