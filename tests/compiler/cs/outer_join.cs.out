// Generated by Mochi C# compiler
using System;
using System.Collections.Generic;
using System.IO;
using System.Net.Http;
using System.Text;
using System.Web;
using System.Linq;

public class Program {
	public static void Main() {
		var customers = new Dictionary<string, dynamic>[] { new Dictionary<string, dynamic> { { id, 1L }, { name, "Alice" } }, new Dictionary<string, dynamic> { { id, 2L }, { name, "Bob" } }, new Dictionary<string, dynamic> { { id, 3L }, { name, "Charlie" } }, new Dictionary<string, dynamic> { { id, 4L }, { name, "Diana" } } };
		Dictionary<string, long>[] orders = new Dictionary<string, long>[] { new Dictionary<string, long> { { id, 100L }, { customerId, 1L }, { total, 250L } }, new Dictionary<string, long> { { id, 101L }, { customerId, 2L }, { total, 125L } }, new Dictionary<string, long> { { id, 102L }, { customerId, 1L }, { total, 300L } }, new Dictionary<string, long> { { id, 103L }, { customerId, 5L }, { total, 80L } } };
		Dictionary<string, Dictionary<string, long>>[] result = new Func<List<Dictionary<string, dynamic>>>(() => {
	var _res = new List<Dictionary<string, dynamic>>();
	foreach (var o in orders) {
		var _joinItems = new List<dynamic>(customers);
		var _matched = new bool[_joinItems.Count];
		foreach (var o in orders) {
			bool _m = false;
			for (int i = 0; i < _joinItems.Count; i++) {
				var c = _joinItems[i];
				if (!((o.customerId == c.id))) continue;
				_m = true;
				_matched[i] = true;
				_res.Add(new Dictionary<string, dynamic> { { order, o }, { customer, c } });
			}
			if (!_m) {
				dynamic c = null;
				_res.Add(new Dictionary<string, dynamic> { { order, o }, { customer, c } });
			}
		}
		for (int i = 0; i < _joinItems.Count; i++) {
			if (!_matched[i]) {
				dynamic o = null;
				var c = _joinItems[i];
				_res.Add(new Dictionary<string, dynamic> { { order, o }, { customer, c } });
			}
		}
	}
	return _res;
})();
		Console.WriteLine("--- Outer Join ---");
		foreach (var row in result) {
			if (row.order) {
				if (row.customer) {
					Console.WriteLine(string.Join(" ", new [] { Convert.ToString("Order"), Convert.ToString(row.order.id), Convert.ToString("by"), Convert.ToString(row.customer.name), Convert.ToString("- $"), Convert.ToString(row.order.total) }));
				} else {
					Console.WriteLine(string.Join(" ", new [] { Convert.ToString("Order"), Convert.ToString(row.order.id), Convert.ToString("by"), Convert.ToString("Unknown"), Convert.ToString("- $"), Convert.ToString(row.order.total) }));
				}
			} else {
				Console.WriteLine(string.Join(" ", new [] { Convert.ToString("Customer"), Convert.ToString(row.customer.name), Convert.ToString("has no orders") }));
			}
		}
	}
}
