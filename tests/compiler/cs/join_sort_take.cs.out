// Generated by Mochi C# compiler
using System;
using System.Collections.Generic;
using System.IO;
using System.Net.Http;
using System.Text;
using System.Web;
using System.Linq;

public class Program {
	public static void Main() {
		var customers = new Dictionary<string, dynamic>[] { new Dictionary<string, dynamic> { { id, 1L }, { name, "Alice" } }, new Dictionary<string, dynamic> { { id, 2L }, { name, "Bob" } } };
		Dictionary<string, long>[] orders = new Dictionary<string, long>[] { new Dictionary<string, long> { { id, 100L }, { customerId, 1L }, { total, 250L } }, new Dictionary<string, long> { { id, 101L }, { customerId, 1L }, { total, 300L } }, new Dictionary<string, long> { { id, 102L }, { customerId, 2L }, { total, 125L } } };
		var result = new Func<List<Dictionary<string, dynamic>>>(() => {
	var _res = new List<Dictionary<string, dynamic>>();
	foreach (var o in orders) {
		foreach (var c in customers) {
			if (!((o.customerId == c.id))) continue;
			_res.Add(new Dictionary<string, dynamic> { { id, o.id }, { customer, c.name }, { total, o.total } });
		}
	}
	_res = _res.OrderBy(o => (-o.total)).ToList();
	_res = _res.Skip(1L).ToList();
	_res = _res.Take(2L).ToList();
	return _res;
})();
		foreach (var r in result) {
			Console.WriteLine(string.Join(" ", new [] { Convert.ToString(r.id), Convert.ToString(r.customer), Convert.ToString(r.total) }));
		}
	}
}
