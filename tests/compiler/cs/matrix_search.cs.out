// Generated by Mochi C# compiler
using System;
using System.Collections.Generic;

public class Program {
	static bool searchMatrix(long[][] matrix, long target) {
		var m = matrix.Length;
		if ((m == 0L)) {
			return false;
		}
		var n = matrix[0L].Length;
		var left = 0L;
		var right = ((m * n) - 1L);
		while ((left <= right)) {
			var mid = (left + (((right - left)) / 2L));
			var row = (mid / n);
			var col = (mid % n);
			var value = matrix[row][col];
			if ((value == target)) {
				return true;
			} else if ((value < target)) {
				left = (mid + 1L);
			} else {
				right = (mid - 1L);
			}
		}
		return false;
	}
	
	public static void Main() {
		Console.WriteLine(searchMatrix(new [] { new [] { 1L, 3L, 5L, 7L }, new [] { 10L, 11L, 16L, 20L }, new [] { 23L, 30L, 34L, 60L } }, 3L));
		Console.WriteLine(searchMatrix(new [] { new [] { 1L, 3L, 5L, 7L }, new [] { 10L, 11L, 16L, 20L }, new [] { 23L, 30L, 34L, 60L } }, 13L));
	}
}
