#!/usr/bin/env escript
-module(main).
-export([main/1]).

main(_) ->
	Numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9],
	mochi_foreach(fun(N) ->
				case ((N % 2) == 0) of
			true ->
				throw(mochi_continue);
						_ -> ok
		end,
				case (N > 7) of
			true ->
				throw(mochi_break);
						_ -> ok
		end,
		mochi_print(["odd number:", N])
	end, Numbers).

mochi_print(Args) ->
	Strs = [ mochi_format(A) || A <- Args ],
	io:format("~s~n", [lists:flatten(Strs)]).

mochi_format(X) when is_integer(X) -> integer_to_list(X);
mochi_format(X) when is_float(X) -> float_to_list(X);
mochi_format(X) when is_list(X) -> X;
mochi_format(X) -> lists:flatten(io_lib:format("~p", [X])).

mochi_foreach(F, L) ->
	try mochi_foreach_loop(F, L) catch throw:mochi_break -> ok end.

mochi_foreach_loop(_, []) -> ok;
mochi_foreach_loop(F, [H|T]) ->
	try F(H) catch
		throw:mochi_continue -> ok;
		throw:mochi_break -> throw(mochi_break)
	end,
	mochi_foreach_loop(F, T).
