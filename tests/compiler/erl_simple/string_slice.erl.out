#!/usr/bin/env escript
-module(main).
-export([main/1]).

main(_) ->
    mochi_print([mochi_slice("hello", 1, 4)]).

mochi_print(Args) ->
    Strs = [ mochi_format(A) || A <- Args ],
    io:format("~s~n", [lists:flatten(Strs)]).

mochi_format(X) when is_integer(X) -> integer_to_list(X);
mochi_format(X) when is_float(X) -> float_to_list(X);
mochi_format(X) when is_list(X) -> X;
mochi_format(X) -> lists:flatten(io_lib:format("~p", [X])).


mochi_slice(L, I, J) ->
    N = length(L),
    Start0 = case I < 0 of true -> I + N; false -> I end,
    End0 = case J < 0 of true -> J + N; false -> J end,
    Start1 = case Start0 < 0 of true -> 0; false -> case Start0 > N of true -> N; false -> Start0 end end,
    End1 = case End0 > N of true -> N; false -> case End0 < Start1 of true -> Start1; false -> End0 end end,
    Len = End1 - Start1,
    lists:sublist(lists:nthtail(Start1, L), Len).
