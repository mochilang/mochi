#!/usr/bin/env escript
-module(main).
-export([main/1]).

-record(person, {name, age}).

main(_) ->
	People = [#person{name="Alice", age=30}, #person{name="Bob", age=15}, #person{name="Charlie", age=65}],
	Names = [P#person.name || P <- [P || P <- People, (P#person.age >= 18)]],
	mochi_foreach(fun(N) ->
		mochi_print([N])
	end, Names).

mochi_print(Args) ->
	Strs = [ mochi_format(A) || A <- Args ],
	io:format("~s~n", [lists:flatten(Strs)]).

mochi_format(X) when is_integer(X) -> integer_to_list(X);
mochi_format(X) when is_float(X) -> float_to_list(X);
mochi_format(X) when is_list(X) -> X;
mochi_format(X) -> lists:flatten(io_lib:format("~p", [X])).

mochi_foreach(F, L) ->
	try mochi_foreach_loop(F, L) catch throw:mochi_break -> ok end.

mochi_foreach_loop(_, []) -> ok;
mochi_foreach_loop(F, [H|T]) ->
	try F(H) catch
		throw:mochi_continue -> ok;
		throw:mochi_break -> throw(mochi_break)
	end,
	mochi_foreach_loop(F, T).
