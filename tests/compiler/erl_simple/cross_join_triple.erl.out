#!/usr/bin/env escript
-module(main).
-export([main/1]).

main(_) ->
    Nums = [1, 2],
    Letters = ["A", "B"],
    Bools = [true, false],
    Combos = [#{n => N, l => L, b => B} || N <- Nums, L <- Letters, B <- Bools],
    mochi_print(["--- Cross Join of three lists ---"]),
    mochi_foreach(fun(C) ->
        mochi_print([maps:get(n, C), maps:get(l, C), maps:get(b, C)])
    end, Combos).

mochi_print(Args) ->
    Strs = [ mochi_format(A) || A <- Args ],
    io:format("~s~n", [lists:flatten(Strs)]).

mochi_format(X) when is_integer(X) -> integer_to_list(X);
mochi_format(X) when is_float(X) -> float_to_list(X);
mochi_format(X) when is_list(X) -> X;
mochi_format(X) -> lists:flatten(io_lib:format("~p", [X])).

mochi_foreach(F, L) ->
    try mochi_foreach_loop(F, L) catch throw:mochi_break -> ok end.

mochi_foreach_loop(_, []) -> ok;
mochi_foreach_loop(F, [H|T]) ->
    try F(H) catch
        throw:mochi_continue -> ok;
        throw:mochi_break -> throw(mochi_break)
    end,
    mochi_foreach_loop(F, T).
