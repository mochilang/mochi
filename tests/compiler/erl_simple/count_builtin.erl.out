#!/usr/bin/env escript
-module(main).
-export([main/1]).

main(_) ->
    mochi_print([mochi_count([1, 2, 3])]).

mochi_print(Args) ->
    Strs = [ mochi_format(A) || A <- Args ],
    io:format("~s~n", [lists:flatten(Strs)]).

mochi_format(X) when is_integer(X) -> integer_to_list(X);
mochi_format(X) when is_float(X) -> float_to_list(X);
mochi_format(X) when is_list(X) -> X;
mochi_format(X) -> lists:flatten(io_lib:format("~p", [X])).

mochi_count(X) when is_list(X) -> length(X);
mochi_count(X) when is_map(X), maps:is_key('Items', X) -> length(maps:get('Items', X));
mochi_count(X) when is_map(X) -> maps:size(X);
mochi_count(X) when is_binary(X) -> byte_size(X);
mochi_count(_) -> erlang:error(badarg).
