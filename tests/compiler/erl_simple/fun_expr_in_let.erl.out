#!/usr/bin/env escript
-module(main).
-export([main/1]).

main(_) ->
	Square = fun(X) ->
		try
			throw({return, (X * X)})
		catch
			throw:{return, V} -> V
		end
end,
	mochi_print([Square(6)]).

mochi_print(Args) ->
	Strs = [ mochi_format(A) || A <- Args ],
	io:format("~s~n", [lists:flatten(Strs)]).

mochi_format(X) when is_integer(X) -> integer_to_list(X);
mochi_format(X) when is_float(X) -> float_to_list(X);
mochi_format(X) when is_list(X) -> X;
mochi_format(X) -> lists:flatten(io_lib:format("~p", [X])).
