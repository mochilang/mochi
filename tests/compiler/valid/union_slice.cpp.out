// Original Mochi source:
// type Foo =
//   Empty
//   | Node(child: Foo)
// 
// fun listit(): list<Foo> {
//   return [Empty {}]
// }
// 
// print(len(listit()))
// 

#include <bits/stdc++.h>
using namespace std;

// type Foo =
struct Empty {
};
struct Node {
    Foo child;
};
using Foo = std::variant<Empty, Node>;

// fun listit(): list<Foo> {
vector<Foo> listit(){
    //   return [Empty {}]
    return vector<Empty>{Empty{}};
}

int main() {
    // type Foo =
    // print(len(listit()))
    std::cout << (listit().size()) << std::endl;
    return 0;
}
