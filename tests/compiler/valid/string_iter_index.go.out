package main

import (
	"fmt"
)

func main() {
	var text string = "hello"
	fmt.Println(string([]rune(text)[1]))
	for _, ch := range _iter(text) {
		fmt.Println(ch)
	}
}

func _iter(v any) []any {
    switch s := v.(type) {
    case []any:
        return s
    case []int:
        out := make([]any, len(s))
        for i, v := range s {
            out[i] = v
        }
        return out
    case []float64:
        out := make([]any, len(s))
        for i, v := range s {
            out[i] = v
        }
        return out
    case []string:
        out := make([]any, len(s))
        for i, v := range s {
            out[i] = v
        }
        return out
    case []bool:
        out := make([]any, len(s))
        for i, v := range s {
            out[i] = v
        }
        return out
    case map[string]any:
        out := make([]any, 0, len(s))
        for k := range s {
            out = append(out, k)
        }
        return out
    case string:
        runes := []rune(s)
        out := make([]any, len(runes))
        for i, r := range runes {
            out[i] = string(r)
        }
        return out
    default:
        return nil
    }
}

