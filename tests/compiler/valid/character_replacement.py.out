# Generated by Mochi Python compiler

def characterReplacement(s, k):
	letters = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"]
	n = len(s)
	best = 0
	for i in range(0, n):
		for j in range((i + 1), (n + 1)):
			length = (j - i)
			if (length <= best):
				continue
			sub = _slice(s, i, j)
			for ch in letters:
				diff = 0
				for idx in range(0, len(sub)):
					c = _index(sub, idx)
					if (c != ch):
						diff = (diff + 1)
						if (diff > k):
							break
				if (diff <= k):
					best = length
					break
	return best

async def main():
	print(characterReplacement("ABAB", 2))
	print(characterReplacement("AABABBA", 1))

def _index(v, k):
    if isinstance(v, (list, str)):
        l = len(v)
        if isinstance(k, int) and k < 0:
            k += l
    return v[k]
def _slice(v, start, end):
    if isinstance(v, (list, str)):
        return v[start:end]
    raise Exception("invalid slice target")
import asyncio
_pending = []
async def _wait_all():
    await asyncio.gather(*_pending)
async def _run():
	await main()
	await _wait_all()

if __name__ == "__main__":
	import asyncio
	asyncio.run(_run())
