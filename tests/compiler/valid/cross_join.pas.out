program main;
{$mode objfpc}

uses SysUtils, fgl, fphttpclient, Classes, Variants, fpjson, jsonparser;

type
  generic TArray<T> = array of T;

type Customer = record
  id: integer;
  name: string;
end;

type Order = record
  id: integer;
  customerId: integer;
  total: integer;
end;

type PairInfo = record
  orderId: integer;
  orderCustomerId: integer;
  pairedCustomerName: string;
  orderTotal: integer;
end;

var
  _tmp0: Customer;
  _tmp1: Customer;
  _tmp2: Customer;
  _tmp3: Order;
  _tmp4: Order;
  _tmp5: Order;
  _tmp6: PairInfo;
  _tmp7: specialize TArray<PairInfo>;
  c: Customer;
  customers: specialize TArray<Customer>;
  entry: PairInfo;
  o: Order;
  orders: specialize TArray<Order>;
  _result: specialize TArray<PairInfo>;

begin
  _tmp0.id := 1;
  _tmp0.name := 'Alice';
  _tmp1.id := 2;
  _tmp1.name := 'Bob';
  _tmp2.id := 3;
  _tmp2.name := 'Charlie';
  customers := specialize TArray<Customer>([_tmp0, _tmp1, _tmp2]);
  _tmp3.id := 100;
  _tmp3.customerId := 1;
  _tmp3.total := 250;
  _tmp4.id := 101;
  _tmp4.customerId := 2;
  _tmp4.total := 125;
  _tmp5.id := 102;
  _tmp5.customerId := 1;
  _tmp5.total := 300;
  orders := specialize TArray<Order>([_tmp3, _tmp4, _tmp5]);
  _tmp6.orderId := o.id;
  _tmp6.orderCustomerId := o.customerId;
  _tmp6.pairedCustomerName := c.name;
  _tmp6.orderTotal := o.total;
  SetLength(_tmp7, 0);
  for o in orders do
    begin
      for c in customers do
        begin
          _tmp7 := Concat(_tmp7, [_tmp6]);
        end;
    end;
  _result := _tmp7;
  writeln('--- Cross Join: All order-customer pairs ---');
  for entry in _result do
    begin
      writeln('Order', entry.orderId, '(customerId:', entry.orderCustomerId, ', total: $', entry.
              orderTotal, ') paired with', entry.pairedCustomerName);
    end;
end.
