// Generated by Mochi TypeScript compiler

function main(): void {
	let xs = [1, 2, 3, 4]
	console.log(_len(_slice(xs, 1, 3)))
	let text = "hello"
	console.log(_sliceString(text, 1, 4))
}
main()

function _len(v: any): number {
  if (Array.isArray(v) || typeof v === "string") return (v as any).length;
  if (v && typeof v === "object") return Object.keys(v).length;
  return 0;
}

function _slice(v: any, start: number, end: number): any {
  if (typeof v === "string" || Array.isArray(v)) {
    const l = (v as any).length;
    if (start < 0) start = l + start;
    if (end < 0) end = l + end;
    return (v as any).slice(start, end);
  }
  throw new Error("invalid slice target");
}

function _sliceString(s: string, start: number, end: number): string {
  const chars = Array.from(s);
  const l = chars.length;
  if (start < 0) start = l + start;
  if (end < 0) end = l + end;
  if (start < 0 || end > l || start > end) throw new Error('slice out of range');
  return chars.slice(start, end).join('');
}

