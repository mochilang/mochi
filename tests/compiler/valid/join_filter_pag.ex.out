# Generated by Mochi Elixir compiler
defmodule Main do
  def main do
    people = [%{id: 1, name: "Alice"}, %{id: 2, name: "Bob"}, %{id: 3, name: "Charlie"}]

    purchases = [
      %{id: 1, personId: 1, total: 200},
      %{id: 2, personId: 1, total: 50},
      %{id: 3, personId: 2, total: 150},
      %{id: 4, personId: 3, total: 100},
      %{id: 5, personId: 2, total: 250}
    ]

    result =
      Enum.map(
        Enum.take(
          Enum.drop(
            Enum.sort_by(
              for(
                p <- people,
                o <- purchases,
                p.id == o.personId && o.total > 100,
                do: {%{person: p.name, spent: o.total}, -o.total}
              ),
              fn {_, k} -> k end
            ),
            1
          ),
          2
        ),
        fn {v, _} -> v end
      )

    for r <- result do
      IO.puts(Enum.join(Enum.map([r.person, r.spent], &to_string(&1)), " "))
    end
  end
end

Main.main()
