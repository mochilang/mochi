// Generated by Mochi Swift compiler

func twoSum(nums: [Int], target: Int) -> [Int] {
        let n = _len(nums)
        for i in 0..<n {
                for j in (i + 1)..<n {
                        if ((_index(nums, i) + _index(nums, j)) == target) {
                                return [i, j]
                        }
                }
        }
        return [(-1), (-1)]
}

func main() {
        let result = twoSum([2, 7, 11, 15], 9)
        print(_index(result, 0))
        print(_index(result, 1))
}
func _len(_ v: Any) -> Int {
    if let arr = v as? [Any] { return arr.count }
    if let s = v as? String { return s.count }
    if let m = v as? [String: Any] { return m.count }
    return 0
}
func _index(_ v: Any, _ k: Any) -> Any {
    if let arr = v as? [Any] {
        guard let i = k as? Int else { fatalError("invalid list index") }
        var idx = i
        if idx < 0 { idx += arr.count }
        return arr[idx]
    }
    if let s = v as? String {
        guard let i = k as? Int else { fatalError("invalid string index") }
        var idx = i
        let chars = Array(s)
        if idx < 0 { idx += chars.count }
        return String(chars[idx])
    }
    if let m = v as? [String: Any] {
        return m[String(describing: k)]!
    }
    return 0
}
main()
