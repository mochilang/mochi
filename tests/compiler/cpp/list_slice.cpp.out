// Generated by Mochi C++ compiler
#include <bits/stdc++.h>
using namespace std;

template <typename T> vector<T> _slice(const vector<T> &v, int start, int end) {
  int n = v.size();
  if (start < 0)
    start += n;
  if (end < 0)
    end += n;
  if (start < 0)
    start = 0;
  if (end > n)
    end = n;
  if (end < start)
    end = start;
  return vector<T>(v.begin() + start, v.begin() + end);
}

int main() {
  auto xs = _slice(vector<int>{1, 2, 3, 4}, 1, 3);
  std::cout << (xs[0]) << std::endl;
  std::cout << (xs[1]) << std::endl;
  return 0;
}
