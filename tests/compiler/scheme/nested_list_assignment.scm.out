(define (list-set lst idx val)
    (let loop ((i idx) (l lst))
        (if (null? l)
            '()
            (if (= i 0)
                (cons val (cdr l))
                (cons (car l) (loop (- i 1) (cdr l))))))
)

(define xs (list (list 1 2) (list 3 4)))
(set! xs (list-set xs 1 (list-set (list-ref xs 1) 0 9)))
(begin (display (list-ref (list-ref xs 1) 0)) (newline))
