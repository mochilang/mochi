(define (map-get m k)
    (let ((p (assoc k m)))
        (if p (cdr p) '())))
)
(define (map-set m k v)
    (let ((p (assoc k m)))
        (if p
            (begin (set-cdr! p v) m)
            (cons (cons k v) m))))
)

(define (new-Person name)
	(list (cons 'name name))
)
(define (Person_greet Self)
	(call/cc (lambda (return)
		(define name (map-get Self 'name))
		(return (string-append "hi " name))
	))
)


(define p (list (cons 'name "Ada")))
(begin (display (Person_greet p)) (newline))
