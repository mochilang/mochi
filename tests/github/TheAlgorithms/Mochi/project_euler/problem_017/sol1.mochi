/*
Project Euler Problem 17: Number Letter Counts
------------------------------------------------
Given a positive integer n (1 <= n <= 1000), compute the total number of
letters required to write out all numbers from 1 to n in English words. Spaces
and hyphens are not counted, and the word "and" is used according to British
usage (e.g., "one hundred and one").

Algorithm:
1. Precompute arrays with letter counts for numbers zero through nineteen
   and for the tens multiples twenty through ninety.
2. Iterate from 1 to n and accumulate the number of letters needed for each
   number. For numbers with hundreds, add counts for "hundred" and the
   appropriate "and" when the remainder is nonzero. For numbers in the
   thousands, handle "thousand" similarly.
3. Return the accumulated total.

This approach runs in O(n) time with O(1) additional space.
*/

fun solution(n: int): int {
  let ones_counts: list<int> = [0, 3, 3, 5, 4, 4, 3, 5, 5, 4, 3, 6, 6, 8, 8, 7, 7, 9, 8, 8]
  let tens_counts: list<int> = [0, 0, 6, 6, 5, 5, 5, 7, 6, 6]
  var count = 0
  var i = 1
  while i <= n {
    if i < 1000 {
      if i >= 100 {
        count = count + ones_counts[i / 100] + 7
        if i % 100 != 0 {
          count = count + 3
        }
      }
      let remainder = i % 100
      if remainder > 0 && remainder < 20 {
        count = count + ones_counts[remainder]
      } else {
        count = count + ones_counts[i % 10]
        count = count + tens_counts[(remainder - i % 10) / 10]
      }
    } else {
      count = count + ones_counts[i / 1000] + 8
    }
    i = i + 1
  }
  return count
}

print(str(solution(1000)))
print(str(solution(5)))
