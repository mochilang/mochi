/*
Vegetation Index Calculation
----------------------------
This module implements several vegetation indices used in remote sensing to
highlight vegetation characteristics from spectral band values. Each index is a
combination of the red, green, blue, red-edge, and near infrared (NIR) bands.
The implemented subset includes:
  - NDVI  : (nir - red) / (nir + red)
  - BNDVI : (nir - blue) / (nir + blue)
  - GNDVI : (nir - green) / (nir + green)
  - NDRE  : (nir - redEdge) / (nir + redEdge)
  - CCCI  : NDRE / NDVI
  - CVI   : (nir * red) / (green * green)
  - GLI   : (2*green - red - blue) / (2*green + red + blue)
  - DVI   : nir / red

This is a simplified, pure Mochi translation of the algorithm found in
TheAlgorithms/Python repository. It operates on scalar floating point values
and avoids foreign function interfaces and the "any" type.
*/

fun ndvi(red: float, nir: float): float {
  return (nir - red) / (nir + red)
}

fun bndvi(blue: float, nir: float): float {
  return (nir - blue) / (nir + blue)
}

fun gndvi(green: float, nir: float): float {
  return (nir - green) / (nir + green)
}

fun ndre(redEdge: float, nir: float): float {
  return (nir - redEdge) / (nir + redEdge)
}

fun ccci(red: float, redEdge: float, nir: float): float {
  return ndre(redEdge, nir) / ndvi(red, nir)
}

fun cvi(red: float, green: float, nir: float): float {
  return (nir * red) / (green * green)
}

fun gli(red: float, green: float, blue: float): float {
  return (2.0 * green - red - blue) / (2.0 * green + red + blue)
}

fun dvi(red: float, nir: float): float {
  return nir / red
}

fun calc(index: string, red: float, green: float, blue: float, redEdge: float, nir: float): float {
  if index == "NDVI" { return ndvi(red, nir) }
  if index == "BNDVI" { return bndvi(blue, nir) }
  if index == "GNDVI" { return gndvi(green, nir) }
  if index == "NDRE" { return ndre(redEdge, nir) }
  if index == "CCCI" { return ccci(red, redEdge, nir) }
  if index == "CVI" { return cvi(red, green, nir) }
  if index == "GLI" { return gli(red, green, blue) }
  if index == "DVI" { return dvi(red, nir) }
  return 0.0
}

fun main() {
  let red = 50.0
  let green = 30.0
  let blue = 10.0
  let redEdge = 40.0
  let nir = 100.0

  print("NDVI=" + str(ndvi(red, nir)))
  print("CCCI=" + str(ccci(red, redEdge, nir)))
  print("CVI=" + str(cvi(red, green, nir)))
}

main()
