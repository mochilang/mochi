/*
Astable 555 Timer Frequency and Duty Cycle
------------------------------------------
The 555 timer in astable mode produces a continuous square wave by repeatedly
charging and discharging a capacitor through two resistors R1 and R2. The
oscillation frequency is given by:

    F = 1.44 / ((R1 + 2 * R2) * C)

where R1 and R2 are in ohms, C is capacitance in microfarads and F is in hertz.
The duty cycle, representing the percentage of time the output stays high, is
computed as:

    D = (R1 + R2) / (R1 + 2 * R2) * 100

Both functions below enforce positive inputs and implement these formulas.

Time Complexity: O(1)
Space Complexity: O(1)
*/

fun astable_frequency(resistance_1: float, resistance_2: float, capacitance: float): float {
  if resistance_1 <= 0.0 || resistance_2 <= 0.0 || capacitance <= 0.0 {
    panic("All values must be positive")
  }
  return (1.44 / ((resistance_1 + 2.0 * resistance_2) * capacitance)) * 1000000.0
}

fun astable_duty_cycle(resistance_1: float, resistance_2: float): float {
  if resistance_1 <= 0.0 || resistance_2 <= 0.0 {
    panic("All values must be positive")
  }
  return (resistance_1 + resistance_2) / (resistance_1 + 2.0 * resistance_2) * 100.0
}

print(astable_frequency(45.0, 45.0, 7.0))
print(astable_duty_cycle(45.0, 45.0))
