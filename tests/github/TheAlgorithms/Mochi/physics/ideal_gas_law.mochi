/*
Problem: Compute missing variable in ideal gas law PV = nRT.
Given any three of pressure (P), volume (V), moles (n), and temperature (T),
rearrange the equation to solve for the fourth quantity.
Algorithm: Use algebraic manipulation of PV = nRT. For each function,
validate that inputs are non-negative. If validation fails, throw an error.
Otherwise compute:
  P = n * R * T / V
  V = n * R * T / P
  T = P * V / (n * R)
  n = P * V / (R * T)
*/

let UNIVERSAL_GAS_CONSTANT: float = 8.314462

fun pressure_of_gas_system(moles: float, kelvin: float, volume: float): float {
    if moles < 0 || kelvin < 0 || volume < 0 {
        throw "Invalid inputs. Enter positive value."
    }
    return moles * kelvin * UNIVERSAL_GAS_CONSTANT / volume
}

fun volume_of_gas_system(moles: float, kelvin: float, pressure: float): float {
    if moles < 0 || kelvin < 0 || pressure < 0 {
        throw "Invalid inputs. Enter positive value."
    }
    return moles * kelvin * UNIVERSAL_GAS_CONSTANT / pressure
}

fun temperature_of_gas_system(moles: float, volume: float, pressure: float): float {
    if moles < 0 || volume < 0 || pressure < 0 {
        throw "Invalid inputs. Enter positive value."
    }
    return pressure * volume / (moles * UNIVERSAL_GAS_CONSTANT)
}

fun moles_of_gas_system(kelvin: float, volume: float, pressure: float): float {
    if kelvin < 0 || volume < 0 || pressure < 0 {
        throw "Invalid inputs. Enter positive value."
    }
    return pressure * volume / (kelvin * UNIVERSAL_GAS_CONSTANT)
}

print(pressure_of_gas_system(2.0, 100.0, 5.0))
print(volume_of_gas_system(0.5, 273.0, 0.004))
print(temperature_of_gas_system(2.0, 100.0, 5.0))
print(moles_of_gas_system(100.0, 5.0, 10.0))
