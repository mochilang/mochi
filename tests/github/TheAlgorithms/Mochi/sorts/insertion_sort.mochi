/*
Sort a list of integers in ascending order using the insertion sort algorithm.

Insertion sort builds a sorted prefix of the list one element at a time.  For
each index from 1 to n - 1, the value at that position is removed and moved
leftward until it is greater than the element before it.  Larger elements in
the prefix are shifted to the right to make room.  The algorithm runs in
O(n^2) time in the worst case and performs the sort in place with O(1) extra
space.
*/

fun insertion_sort(xs: list<int>): list<int> {
  var i = 1
  while i < len(xs) {
    let value = xs[i]
    var j = i - 1
    while j >= 0 && xs[j] > value {
      xs[j + 1] = xs[j]
      j = j - 1
    }
    xs[j + 1] = value
    i = i + 1
  }
  return xs
}

print(str(insertion_sort([0, 5, 3, 2, 2])))
print(str(insertion_sort([])))
print(str(insertion_sort([-2, -5, -45])))
print(str(insertion_sort([3])))
