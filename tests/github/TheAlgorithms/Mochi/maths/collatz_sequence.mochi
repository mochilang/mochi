/*
Generate the Collatz sequence for a given positive integer.

The Collatz conjecture defines a sequence where each term is obtained
from the previous term using simple arithmetic:
- If the current number n is even, the next term is n / 2.
- If n is odd, the next term is 3 * n + 1.
The conjecture states that this process always reaches 1 regardless of
the starting n. This implementation collects all intermediate values
in a list and returns it. Nonâ€‘positive inputs are rejected.
*/

fun collatz_sequence(n: int): list<int> {
  if n < 1 {
    panic("Sequence only defined for positive integers")
  }
  var seq: list<int> = [n]
  var current = n
  while current != 1 {
    if current % 2 == 0 {
      current = current / 2
    } else {
      current = 3 * current + 1
    }
    seq = append(seq, current)
  }
  return seq
}

fun main() {
  let n = 11
  let seq = collatz_sequence(n)
  print(str(seq))
  print("Collatz sequence from " + str(n) + " took " + str(len(seq)) + " steps.")
}

main()
