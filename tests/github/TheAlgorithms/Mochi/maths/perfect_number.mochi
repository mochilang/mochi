/*
Check whether a positive integer is a perfect number.

A perfect number equals the sum of its proper divisors (all positive
integers less than the number that divide it evenly).  For example,
6 has divisors 1, 2, 3, and 6.  Excluding the number itself, the sum is
1 + 2 + 3 = 6 so 6 is perfect.

This naive algorithm tests every integer from 1 up to n/2 and accumulates
those that divide n.  If the sum equals the original number, it is
perfect.  Complexity is O(n) time and O(1) extra space.
*/

fun perfect(n: int): bool {
  if n <= 0 { return false }
  var total = 0
  var divisor = 1
  while divisor <= n / 2 {
    if n % divisor == 0 {
      total = total + divisor
    }
    divisor = divisor + 1
  }
  return total == n
}

print(str(perfect(27)))
print(str(perfect(28)))
print(str(perfect(29)))
print(str(perfect(6)))
print(str(perfect(12)))
print(str(perfect(496)))
print(str(perfect(8128)))
print(str(perfect(0)))
print(str(perfect(-1)))
print(str(perfect(33550336)))
print(str(perfect(33550337)))
print(str(perfect(1)))
