/*
Compute the average absolute deviation of a list of numbers.

Given a list of integers, the average absolute deviation measures
how far each value is from the mean on average:

  AAD = (1 / n) * Î£ |x_i - mean|

The algorithm proceeds in two passes:
1. Compute the arithmetic mean of all values.
2. Sum the absolute differences between each value and the mean
   and divide by the number of elements.

This implementation runs in O(n) time and O(1) auxiliary space,
where n is the number of input elements.
*/

fun abs_float(x: float): float {
  if x < 0.0 { return -x }
  return x
}

fun average_absolute_deviation(nums: list<int>): float {
  if len(nums) == 0 { panic("List is empty") }
  var sum: int = 0
  for x in nums {
    sum = sum + x
  }
  let n = len(nums) as float
  let mean = (sum as float) / n
  var dev_sum: float = 0.0
  for x in nums {
    dev_sum = dev_sum + abs_float((x as float) - mean)
  }
  return dev_sum / n
}

print(str(average_absolute_deviation([0])))
print(str(average_absolute_deviation([4, 1, 3, 2])))
print(str(average_absolute_deviation([2, 70, 6, 50, 20, 8, 4, 0])))
print(str(average_absolute_deviation([-20, 0, 30, 15])))
