fun fields(s: string): list<string> {
  var res: list<string>
  var cur: string = ""
  var i: int = 0
  while (i < len(s)) {
    let c: any = s[i:(i + 1)]
    if (c == " ") {
      if (len(cur) > 0) {
        res = append(res, cur)
        cur = ""
      }
    } else {
      cur = (cur + c)
    }
    i = (i + 1)
  }
  if (len(cur) > 0) {
    res = append(res, cur)
  }
  return res
}
fun canSpell(word: string, blks: list<string>): bool {
  if (len(word) == 0) {
    return true
  }
  let c: any = lower(word[0:1])
  var i: int = 0
  while (i < len(blks)) {
    let b: string = blks[i]
    if ((c == lower(b[0:1])) || (c == lower(b[1:2]))) {
      var rest: list<string>
      var j: int = 0
      while (j < len(blks)) {
        if (j != i) {
          rest = append(rest, blks[j])
        }
        j = (j + 1)
      }
      if canSpell(word[start], rest) {
        return true
      }
    }
    i = (i + 1)
  }
  return false
}
fun newSpeller(blocks: string): any {
  typefun
  let bl: list<string> = fields(blocks)
  return fun(w: string): bool => canSpell(w, bl)
}
fun main(): any {
  let sp: any = newSpeller("BO XK DQ CP NA GT RE TG QD FS JW HU VI AN OB ER FS LY PC ZM")
  for word in ["A", "BARK", "BOOK", "TREAT", "COMMON", "SQUAD", "CONFUSE"] {
    print(((word + " ") + str(sp(word))))
  }
}
main()
