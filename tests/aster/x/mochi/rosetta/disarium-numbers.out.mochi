fun pow(base: int, exp: int): int {
  var result: int = 1
  var i: int = 0
  while (i < exp) {
    result = (result * base)
    i = (i + 1)
  }
  return result
}
fun isDisarium(n: int): bool {
  var digits: list<int>
  var x: int = n
  if (x == 0) {
    digits = append(digits, 0)
  }
  while (x > 0) {
    digits = append(digits, (x % 10))
    x = ((x / 10)) as int
  }
  var sum: int = 0
  var pos: int = 1
  var i: int = (len(digits) - 1)
  while (i >= 0) {
    sum = (sum + pow(digits[i], pos))
    pos = (pos + 1)
    i = (i - 1)
  }
  return (sum == n)
}
fun main(): void {
  var count: int = 0
  var n: int = 0
  while ((count < 19) && (n < 3000000)) {
    if isDisarium(n) {
      print(str(n))
      count = (count + 1)
    }
    n = (n + 1)
  }
  print((("\nFound the first " + str(count)) + " Disarium numbers."))
}
main()
