fun bsearch(arr: list<int>, x: int): int {
  var low: int = 0
  var high: int = (len(arr) - 1)
  while (low <= high) {
    let mid: int = (((low + high)) / 2)
    if (arr[mid] > x) {
      high = (mid - 1)
    } else     if (arr[mid] < x) {
      low = (mid + 1)
    } else {
      return mid
    }
  }
  return -1
}
fun bsearchRec(arr: list<int>, x: int, low: int, high: int): int {
  if (high < low) {
    return -1
  }
  let mid: int = (((low + high)) / 2)
  if (arr[mid] > x) {
    return bsearchRec(arr, x, low, (mid - 1))
  } else   if (arr[mid] < x) {
    return bsearchRec(arr, x, (mid + 1), high)
  }
  return mid
}
fun main() {
  let nums: list<int> = [-31, 0, 1, 2, 2, 4, 65, 83, 99, 782]
  var x: int = 2
  var idx: int = bsearch(nums, x)
  if (idx >= 0) {
    print((((str(x) + " is at index ") + str(idx)) + "."))
  } else {
    print((str(x) + " is not found."))
  }
  x = 5
  idx = bsearchRec(nums, x, 0, (len(nums) - 1))
  if (idx >= 0) {
    print((((str(x) + " is at index ") + str(idx)) + "."))
  } else {
    print((str(x) + " is not found."))
  }
}
main()
