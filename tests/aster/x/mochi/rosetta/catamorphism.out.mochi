fun add(a: int, b: int): int {
  return (a + b)
}
fun sub(a: int, b: int): int {
  return (a - b)
}
fun mul(a: int, b: int): int {
  return (a * b)
}
fun fold(f: fun(int, int):int, xs: list<int>): int {
  var r: int = xs[0]
  var i: int = 1
  while (i < len(xs)) {
    r = f(r, xs[i])
    i = (i + 1)
  }
  return r
}
let n: list<int> = [1, 2, 3, 4, 5]
print(fold(fun(a: int, b: int): int => add(a, b), n))
print(fold(fun(a: int, b: int): int => sub(a, b), n))
print(fold(fun(a: int, b: int): int => mul(a, b), n))
