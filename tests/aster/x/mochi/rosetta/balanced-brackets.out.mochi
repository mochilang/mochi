var seed: int = 1
fun prng(max: int): int {
  seed = ((((seed * 1103515245) + 12345)) % 2147483648)
  return (seed % max)
}
fun gen(n: int): string {
  var arr: list<string>
  var i: int = 0
  while (i < n) {
    arr = append(arr, "[")
    arr = append(arr, "]")
    i = (i + 1)
  }
  var j: int = (len(arr) - 1)
  while (j > 0) {
    let k: int = prng((j + 1))
    let tmp: string = arr[j]
    arr[j] = arr[k]
    arr[k] = tmp
    j = (j - 1)
  }
  var out: string = ""
  for ch in arr {
    out = (out + ch)
  }
  return out
}
fun testBalanced(s: string) {
  var open: int = 0
  var i: int = 0
  while (i < len(s)) {
    let c: any = s[i:(i + 1)]
    if (c == "[") {
      open = (open + 1)
    } else     if (c == "]") {
      if (open == 0) {
        print((s + ": not ok"))
      }
      open = (open - 1)
    } else {
      print((s + ": not ok"))
    }
    i = (i + 1)
  }
  if (open == 0) {
    print((s + ": ok"))
  } else {
    print((s + ": not ok"))
  }
}
fun main() {
  var i: int = 0
  while (i < 10) {
    testBalanced(gen(i))
    i = (i + 1)
  }
  testBalanced("()")
}
main()
