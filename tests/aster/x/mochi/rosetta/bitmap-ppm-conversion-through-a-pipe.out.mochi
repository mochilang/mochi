type Pixel {
  R: int
  G: int
  B: int
}
fun pixelFromRgb(c: int): Pixel {
  let r: int = ((((c / 65536)) as int) % 256)
  let g: int = ((((c / 256)) as int) % 256)
  let b: int = (c % 256)
  return Pixel {R: r, G: g, B: b}
}
fun rgbFromPixel(p: Pixel): int {
  return (((p.R * 65536) + (p.G * 256)) + p.B)
}
type Bitmap {
  cols: int
  rows: int
  px: list<list<Pixel>>
}
fun NewBitmap(x: int, y: int): Bitmap {
  var data: list<list<Pixel>>
  var row: int = 0
  while (row < y) {
    var r: list<Pixel>
    var col: int = 0
    while (col < x) {
      r = append(r, Pixel {R: 0, G: 0, B: 0})
      col = (col + 1)
    }
    data = append(data, r)
    row = (row + 1)
  }
  return Bitmap {cols: x, rows: y, px: data}
}
fun FillRgb(b: Bitmap, c: int) {
  var y: int = 0
  let p: Pixel = pixelFromRgb(c)
  while (y < b.rows) {
    var x: int = 0
    while (x < b.cols) {
      var px: list<list<Pixel>> = b.px
      var row: list<Pixel> = px[y]
      row[x] = p
      px[y] = row
      b.px = px
      x = (x + 1)
    }
    y = (y + 1)
  }
}
fun SetPxRgb(b: Bitmap, x: int, y: int, c: int): bool {
  if ((((x < 0) || (x >= b.cols)) || (y < 0)) || (y >= b.rows)) {
    return false
  }
  var px: list<list<Pixel>> = b.px
  var row: list<Pixel> = px[y]
  row[x] = pixelFromRgb(c)
  px[y] = row
  b.px = px
  return true
}
fun nextRand(seed: int): int {
  return ((((seed * 1664525) + 1013904223)) % 2147483648)
}
fun main() {
  var bm: Bitmap = NewBitmap(400, 300)
  FillRgb(bm, 12615744)
  var seed: int = now()
  var i: int = 0
  while (i < 2000) {
    seed = nextRand(seed)
    let x: int = (seed % 400)
    seed = nextRand(seed)
    let y: int = (seed % 300)
    SetPxRgb(bm, x, y, 8405024)
    i = (i + 1)
  }
  var x: int = 0
  while (x < 400) {
    var y: int = 240
    while (y < 245) {
      SetPxRgb(bm, x, y, 8405024)
      y = (y + 1)
    }
    y = 260
    while (y < 265) {
      SetPxRgb(bm, x, y, 8405024)
      y = (y + 1)
    }
    x = (x + 1)
  }
  var y: int = 0
  while (y < 300) {
    var x: int = 80
    while (x < 85) {
      SetPxRgb(bm, x, y, 8405024)
      x = (x + 1)
    }
    x = 95
    while (x < 100) {
      SetPxRgb(bm, x, y, 8405024)
      x = (x + 1)
    }
    y = (y + 1)
  }
}
main()
