fun kPrime(n: int, k: int): bool {
  var nf: int = 0
  var i: int = 2
  while (i <= n) {
    while ((n % i) == 0) {
      if (nf == k) {
        return false
      }
      nf = (nf + 1)
      n = (n / i)
    }
    i = (i + 1)
  }
  return (nf == k)
}
fun gen(k: int, count: int): list<int> {
  var r: list<int>
  var n: int = 2
  while (len(r) < count) {
    if kPrime(n, k) {
      r = append(r, n)
    }
    n = (n + 1)
  }
  return r
}
fun main() {
  var k: int = 1
  while (k <= 5) {
    print(((str(k) + " ") + str(gen(k, 10))))
    k = (k + 1)
  }
}
main()
