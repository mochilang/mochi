fun sqrtApprox(x: float): float {
  if (x <= 0) {
    return 0
  }
  var g: float = x
  var i: int = 0
  while (i < 20) {
    g = (((g + (x / g))) / 2)
    i = (i + 1)
  }
  return g
}
type Rsdv {
  n: float
  a: float
  q: float
}
fun newRsdv(): Rsdv {
  return Rsdv {n: 0, a: 0, q: 0}
}
fun add(r: Rsdv, x: float): Rsdv {
  let n1: float = (r.n + 1)
  let a1: float = (r.a + (((x - r.a)) / n1))
  let q1: float = (r.q + (((x - r.a)) * ((x - a1))))
  return Rsdv {n: n1, a: a1, q: q1}
}
fun sd(r: Rsdv): float {
  return sqrtApprox((r.q / r.n))
}
fun main(): void {
  var r: Rsdv = newRsdv()
  for x in [2, 4, 4, 4, 5, 5, 7, 9] {
    r = add(r, x)
    print(str(sd(r)))
  }
}
main()
