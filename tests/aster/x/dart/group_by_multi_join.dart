// Generated by Mochi transpiler
class S1 {
  final dynamic part;
  final num total;
  const S1({required this.part, required this.total});
}
class Nation {
  final int id;
  final String name;
  const Nation({required this.id, required this.name});
}
class Supplier {
  final int id;
  final int nation;
  const Supplier({required this.id, required this.nation});
}
class Partsupp {
  final int part;
  final int supplier;
  final num cost;
  final int qty;
  const Partsupp({required this.part, required this.supplier, required this.cost, required this.qty});
}
class Filtered {
  final int part;
  final num value;
  const Filtered({required this.part, required this.value});
}
void main() {
  final List<Nation> nations = [Nation(id: 1, name: "A"), Nation(id: 2, name: "B")];
  final List<Supplier> suppliers = [Supplier(id: 1, nation: 1), Supplier(id: 2, nation: 2)];
  final List<Partsupp> partsupp = [Partsupp(part: 100, supplier: 1, , qty: 2), Partsupp(part: 100, supplier: 2, , qty: 1), Partsupp(part: 200, supplier: 1, , qty: 3)];
  final List<Filtered> filtered = [for (var ps in partsupp) for (var s in suppliers) for (var n in nations) if (s.idequality_operator && n.idequality_operator && n.nameequality_operator) Filtered(part: ps.part, value: ps.costmultiplicative_operatorps.qty)];
  final List<S1> grouped = ();
  print("[" + grouped.join(', ') + "]");
}
