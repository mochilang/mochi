// Generated by Mochi transpiler v0.10.33 on 2025-07-21 18:06 +0700
#[derive(Debug, Clone)]
struct ItemsItem {
    n: i64,
    v: String,
}
impl std::fmt::Display for ItemsItem {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        write!(f, "{{")?;
        write!(f, "\"n\": {}", self.n)?;
        write!(f, ", ")?;
        write!(f, "\"v\": \"{}\"", self.v)?;
        write!(f, "}}")
    }
}
fn main() {
    let items: Vec<ItemsItem> = vec![ItemsItem {n: 1, v: String::from("a")}, ItemsItem {n: 1, v: String::from("b")}, ItemsItem {n: 2, v: String::from("c")}];
    let result: Vec<String> = {
        let mut _q: Vec<String> = Vec::new();
        let mut _tmp: Vec<(i64, String)> = Vec::new();
        for i in &items {
            _tmp.push((i.n, i.clone().v));
        }
        _tmp.sort_by(|a, b| a.0.partial_cmp(&b.0).unwrap());
        for (_, v) in _tmp {
            _q.push(v);
        }
        _q
    };
    println!("{:?}", result);
}
