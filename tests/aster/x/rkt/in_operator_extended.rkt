;; Generated by Mochi 0.10.33 on 2025-07-21 18:06 +0700


#lang racket


(require racket/list racket/string)


(struct group
  (key items))


(define xs
  (list 1 2 3))


(define ys
  (let
    ((_res '()))
    (for
      ((x xs))
      (when
        (=
          (modulo x 2) 1)
        (set! _res
          (append _res
            (list x)))))
    _res))


(displayln
  (not
    (not
      (member 1 ys))))


(displayln
  (not
    (not
      (member 2 ys))))


(define m
  (hash "a" 1))


(displayln
  (hash-has-key? m "a"))


(displayln
  (hash-has-key? m "b"))


(define s "hello")


(displayln
  (string-contains? s "ell"))


(displayln
  (string-contains? s "foo"))
