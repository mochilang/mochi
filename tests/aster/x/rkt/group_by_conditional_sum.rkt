;; Generated by Mochi 0.10.34 on 2025-07-21 22:29 +0700


#lang racket


(require racket/list racket/string json)


(define items
  (list
    (hash "cat" "a" "val" 10 "flag" #t)
    (hash "cat" "a" "val" 5 "flag" #f)
    (hash "cat" "b" "val" 20 "flag" #t)))


(define result
  (let
    ((_groups
        (make-hash))
      (_res '()))
    (for
      ((i items))
      (let*
        ((_key
            (hash-ref i "cat"))
          (_g
            (hash-ref _groups _key
              (lambda
                ()
                (let
                  ((h
                      (make-hash)))
                  (hash-set! h "key" _key)
                  (hash-set! h "items" '())
                  (hash-set! _groups _key h) h)))))
        (hash-set! _g "items"
          (append
            (hash-ref _g "items")
            (list i)))))
    (for
      ((g
          (hash-values _groups)))
      (let
        ((val
            (hash "cat"
              (hash-ref g "key") "share"
              (/
                (apply +
                  (let
                    ((_res '()))
                    (for
                      ((x
                          (hash-ref g "items")))
                      (set! _res
                        (append _res
                          (list
                            (if
                              (hash-ref x "flag")
                              (hash-ref x "val") 0)))))
                    _res))
                (apply +
                  (let
                    ((_res '()))
                    (for
                      ((x
                          (hash-ref g "items")))
                      (set! _res
                        (append _res
                          (list
                            (hash-ref x "val")))))
                    _res)))))
          (key
            (hash-ref g "key")))
        (set! _res
          (append _res
            (list
              (cons key val))))))
    (set! _res
      (sort _res < #:key car))
    (set! _res
      (map cdr _res))
    _res))


(displayln result)
