;; Generated by Mochi 0.10.34 on 2025-07-21 22:29 +0700
#lang racket
(require racket/list racket/string json)

(define people (list (hash "name" "Alice" "city" "Paris") (hash "name" "Bob" "city" "Hanoi") (hash "name" "Charlie" "city" "Paris") (hash "name" "Diana" "city" "Hanoi") (hash "name" "Eve" "city" "Paris") (hash "name" "Frank" "city" "Hanoi") (hash "name" "George" "city" "Paris")))
(define big (let ([_groups (make-hash)] [_res '()])
  (for ([p people])
    (let* ([_key (hash-ref p "city")][_g (hash-ref _groups _key (lambda () (let ([h (make-hash)]) (hash-set! h "key" _key) (hash-set! h "items" '()) (hash-set! _groups _key h) h)))])
      (hash-set! _g "items" (append (hash-ref _g "items") (list p))))
  )
  (for ([g (hash-values _groups)])
    (when (>= (cond [(string? (hash-ref g "items")) (string-length (hash-ref g "items"))] [(hash? (hash-ref g "items")) (hash-count (hash-ref g "items"))] [else (length (hash-ref g "items"))]) 4)
      (let ([val (hash "city" (hash-ref g "key") "num" (cond [(string? (hash-ref g "items")) (string-length (hash-ref g "items"))] [(hash? (hash-ref g "items")) (hash-count (hash-ref g "items"))] [else (length (hash-ref g "items"))]))]))
        (set! _res (append _res (list val))))
    )
  )
  _res))
(displayln (jsexpr->string big))
