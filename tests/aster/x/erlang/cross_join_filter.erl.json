{
  "root": {
    "kind": "source_file",
    "text": "#!/usr/bin/env escript\n-module(main).\n-export([main/1]).\n\n% Generated by Mochi transpiler v0.10.33 (9f2177b9e) on 2025-07-21 18:06 +0700\n\nmain(_) -\u003e\n    Nums = [1, 2, 3],\n    Letters = [\"A\", \"B\"],\n    Pairs = [#{\"n\" =\u003e N, \"l\" =\u003e L} || N \u003c- Nums, L \u003c- Letters, ((N rem 2) == 0)],\n    io:format(\"~s~n\", [\"--- Even pairs ---\"]),\n    lists:foreach(fun(P) -\u003e\n    io:format(\"~p ~p~n\", [maps:get(\"n\", P), maps:get(\"l\", P)])\nend, Pairs).\n",
    "start": 1,
    "end": 15,
    "children": [
      {
        "kind": "shebang",
        "text": "#!/usr/bin/env escript",
        "start": 1,
        "end": 1,
        "endCol": 22
      },
      {
        "kind": "module_attribute",
        "text": "-module(main).",
        "start": 2,
        "end": 2,
        "endCol": 14,
        "children": [
          {
            "kind": "atom",
            "text": "main",
            "start": 2,
            "startCol": 8,
            "end": 2,
            "endCol": 12
          }
        ]
      },
      {
        "kind": "export_attribute",
        "text": "-export([main/1]).",
        "start": 3,
        "end": 3,
        "endCol": 18,
        "children": [
          {
            "kind": "fa",
            "text": "main/1",
            "start": 3,
            "startCol": 9,
            "end": 3,
            "endCol": 15,
            "children": [
              {
                "kind": "atom",
                "text": "main",
                "start": 3,
                "startCol": 9,
                "end": 3,
                "endCol": 13
              },
              {
                "kind": "arity",
                "text": "/1",
                "start": 3,
                "startCol": 13,
                "end": 3,
                "endCol": 15,
                "children": [
                  {
                    "kind": "integer",
                    "text": "1",
                    "start": 3,
                    "startCol": 14,
                    "end": 3,
                    "endCol": 15
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "kind": "comment",
        "text": "% Generated by Mochi transpiler v0.10.33 (9f2177b9e) on 2025-07-21 18:06 +0700",
        "start": 5,
        "end": 5,
        "endCol": 78
      },
      {
        "kind": "fun_decl",
        "text": "main(_) -\u003e\n    Nums = [1, 2, 3],\n    Letters = [\"A\", \"B\"],\n    Pairs = [#{\"n\" =\u003e N, \"l\" =\u003e L} || N \u003c- Nums, L \u003c- Letters, ((N rem 2) == 0)],\n    io:format(\"~s~n\", [\"--- Even pairs ---\"]),\n    lists:foreach(fun(P) -\u003e\n    io:format(\"~p ~p~n\", [maps:get(\"n\", P), maps:get(\"l\", P)])\nend, Pairs).",
        "start": 7,
        "end": 14,
        "endCol": 12,
        "children": [
          {
            "kind": "function_clause",
            "text": "main(_) -\u003e\n    Nums = [1, 2, 3],\n    Letters = [\"A\", \"B\"],\n    Pairs = [#{\"n\" =\u003e N, \"l\" =\u003e L} || N \u003c- Nums, L \u003c- Letters, ((N rem 2) == 0)],\n    io:format(\"~s~n\", [\"--- Even pairs ---\"]),\n    lists:foreach(fun(P) -\u003e\n    io:format(\"~p ~p~n\", [maps:get(\"n\", P), maps:get(\"l\", P)])\nend, Pairs)",
            "start": 7,
            "end": 14,
            "endCol": 11,
            "children": [
              {
                "kind": "atom",
                "text": "main",
                "start": 7,
                "end": 7,
                "endCol": 4
              },
              {
                "kind": "expr_args",
                "text": "(_)",
                "start": 7,
                "startCol": 4,
                "end": 7,
                "endCol": 7,
                "children": [
                  {
                    "kind": "var",
                    "text": "_",
                    "start": 7,
                    "startCol": 5,
                    "end": 7,
                    "endCol": 6
                  }
                ]
              },
              {
                "kind": "clause_body",
                "text": "-\u003e\n    Nums = [1, 2, 3],\n    Letters = [\"A\", \"B\"],\n    Pairs = [#{\"n\" =\u003e N, \"l\" =\u003e L} || N \u003c- Nums, L \u003c- Letters, ((N rem 2) == 0)],\n    io:format(\"~s~n\", [\"--- Even pairs ---\"]),\n    lists:foreach(fun(P) -\u003e\n    io:format(\"~p ~p~n\", [maps:get(\"n\", P), maps:get(\"l\", P)])\nend, Pairs)",
                "start": 7,
                "startCol": 8,
                "end": 14,
                "endCol": 11,
                "children": [
                  {
                    "kind": "match_expr",
                    "text": "Nums = [1, 2, 3]",
                    "start": 8,
                    "startCol": 4,
                    "end": 8,
                    "endCol": 20,
                    "children": [
                      {
                        "kind": "var",
                        "text": "Nums",
                        "start": 8,
                        "startCol": 4,
                        "end": 8,
                        "endCol": 8
                      },
                      {
                        "kind": "list",
                        "text": "[1, 2, 3]",
                        "start": 8,
                        "startCol": 11,
                        "end": 8,
                        "endCol": 20,
                        "children": [
                          {
                            "kind": "integer",
                            "text": "1",
                            "start": 8,
                            "startCol": 12,
                            "end": 8,
                            "endCol": 13
                          },
                          {
                            "kind": "integer",
                            "text": "2",
                            "start": 8,
                            "startCol": 15,
                            "end": 8,
                            "endCol": 16
                          },
                          {
                            "kind": "integer",
                            "text": "3",
                            "start": 8,
                            "startCol": 18,
                            "end": 8,
                            "endCol": 19
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "match_expr",
                    "text": "Letters = [\"A\", \"B\"]",
                    "start": 9,
                    "startCol": 4,
                    "end": 9,
                    "endCol": 24,
                    "children": [
                      {
                        "kind": "var",
                        "text": "Letters",
                        "start": 9,
                        "startCol": 4,
                        "end": 9,
                        "endCol": 11
                      },
                      {
                        "kind": "list",
                        "text": "[\"A\", \"B\"]",
                        "start": 9,
                        "startCol": 14,
                        "end": 9,
                        "endCol": 24,
                        "children": [
                          {
                            "kind": "string",
                            "text": "\"A\"",
                            "start": 9,
                            "startCol": 15,
                            "end": 9,
                            "endCol": 18
                          },
                          {
                            "kind": "string",
                            "text": "\"B\"",
                            "start": 9,
                            "startCol": 20,
                            "end": 9,
                            "endCol": 23
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "match_expr",
                    "text": "Pairs = [#{\"n\" =\u003e N, \"l\" =\u003e L} || N \u003c- Nums, L \u003c- Letters, ((N rem 2) == 0)]",
                    "start": 10,
                    "startCol": 4,
                    "end": 10,
                    "endCol": 80,
                    "children": [
                      {
                        "kind": "var",
                        "text": "Pairs",
                        "start": 10,
                        "startCol": 4,
                        "end": 10,
                        "endCol": 9
                      },
                      {
                        "kind": "list_comprehension",
                        "text": "[#{\"n\" =\u003e N, \"l\" =\u003e L} || N \u003c- Nums, L \u003c- Letters, ((N rem 2) == 0)]",
                        "start": 10,
                        "startCol": 12,
                        "end": 10,
                        "endCol": 80,
                        "children": [
                          {
                            "kind": "map_expr",
                            "text": "#{\"n\" =\u003e N, \"l\" =\u003e L}",
                            "start": 10,
                            "startCol": 13,
                            "end": 10,
                            "endCol": 34,
                            "children": [
                              {
                                "kind": "map_field",
                                "text": "\"n\" =\u003e N",
                                "start": 10,
                                "startCol": 15,
                                "end": 10,
                                "endCol": 23,
                                "children": [
                                  {
                                    "kind": "string",
                                    "text": "\"n\"",
                                    "start": 10,
                                    "startCol": 15,
                                    "end": 10,
                                    "endCol": 18
                                  },
                                  {
                                    "kind": "var",
                                    "text": "N",
                                    "start": 10,
                                    "startCol": 22,
                                    "end": 10,
                                    "endCol": 23
                                  }
                                ]
                              },
                              {
                                "kind": "map_field",
                                "text": "\"l\" =\u003e L",
                                "start": 10,
                                "startCol": 25,
                                "end": 10,
                                "endCol": 33,
                                "children": [
                                  {
                                    "kind": "string",
                                    "text": "\"l\"",
                                    "start": 10,
                                    "startCol": 25,
                                    "end": 10,
                                    "endCol": 28
                                  },
                                  {
                                    "kind": "var",
                                    "text": "L",
                                    "start": 10,
                                    "startCol": 32,
                                    "end": 10,
                                    "endCol": 33
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "lc_exprs",
                            "text": "|| N \u003c- Nums, L \u003c- Letters, ((N rem 2) == 0)",
                            "start": 10,
                            "startCol": 35,
                            "end": 10,
                            "endCol": 79,
                            "children": [
                              {
                                "kind": "lc_or_zc_expr",
                                "text": "N \u003c- Nums",
                                "start": 10,
                                "startCol": 38,
                                "end": 10,
                                "endCol": 47,
                                "children": [
                                  {
                                    "kind": "generator",
                                    "text": "N \u003c- Nums",
                                    "start": 10,
                                    "startCol": 38,
                                    "end": 10,
                                    "endCol": 47,
                                    "children": [
                                      {
                                        "kind": "var",
                                        "text": "N",
                                        "start": 10,
                                        "startCol": 38,
                                        "end": 10,
                                        "endCol": 39
                                      },
                                      {
                                        "kind": "var",
                                        "text": "Nums",
                                        "start": 10,
                                        "startCol": 43,
                                        "end": 10,
                                        "endCol": 47
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "lc_or_zc_expr",
                                "text": "L \u003c- Letters",
                                "start": 10,
                                "startCol": 49,
                                "end": 10,
                                "endCol": 61,
                                "children": [
                                  {
                                    "kind": "generator",
                                    "text": "L \u003c- Letters",
                                    "start": 10,
                                    "startCol": 49,
                                    "end": 10,
                                    "endCol": 61,
                                    "children": [
                                      {
                                        "kind": "var",
                                        "text": "L",
                                        "start": 10,
                                        "startCol": 49,
                                        "end": 10,
                                        "endCol": 50
                                      },
                                      {
                                        "kind": "var",
                                        "text": "Letters",
                                        "start": 10,
                                        "startCol": 54,
                                        "end": 10,
                                        "endCol": 61
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "lc_or_zc_expr",
                                "text": "((N rem 2) == 0)",
                                "start": 10,
                                "startCol": 63,
                                "end": 10,
                                "endCol": 79,
                                "children": [
                                  {
                                    "kind": "paren_expr",
                                    "text": "((N rem 2) == 0)",
                                    "start": 10,
                                    "startCol": 63,
                                    "end": 10,
                                    "endCol": 79,
                                    "children": [
                                      {
                                        "kind": "binary_op_expr",
                                        "text": "(N rem 2) == 0",
                                        "start": 10,
                                        "startCol": 64,
                                        "end": 10,
                                        "endCol": 78,
                                        "children": [
                                          {
                                            "kind": "paren_expr",
                                            "text": "(N rem 2)",
                                            "start": 10,
                                            "startCol": 64,
                                            "end": 10,
                                            "endCol": 73,
                                            "children": [
                                              {
                                                "kind": "binary_op_expr",
                                                "text": "N rem 2",
                                                "start": 10,
                                                "startCol": 65,
                                                "end": 10,
                                                "endCol": 72,
                                                "children": [
                                                  {
                                                    "kind": "var",
                                                    "text": "N",
                                                    "start": 10,
                                                    "startCol": 65,
                                                    "end": 10,
                                                    "endCol": 66
                                                  },
                                                  {
                                                    "kind": "integer",
                                                    "text": "2",
                                                    "start": 10,
                                                    "startCol": 71,
                                                    "end": 10,
                                                    "endCol": 72
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "kind": "integer",
                                            "text": "0",
                                            "start": 10,
                                            "startCol": 77,
                                            "end": 10,
                                            "endCol": 78
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "call",
                    "text": "io:format(\"~s~n\", [\"--- Even pairs ---\"])",
                    "start": 11,
                    "startCol": 4,
                    "end": 11,
                    "endCol": 45,
                    "children": [
                      {
                        "kind": "remote",
                        "text": "io:format",
                        "start": 11,
                        "startCol": 4,
                        "end": 11,
                        "endCol": 13,
                        "children": [
                          {
                            "kind": "remote_module",
                            "text": "io:",
                            "start": 11,
                            "startCol": 4,
                            "end": 11,
                            "endCol": 7,
                            "children": [
                              {
                                "kind": "atom",
                                "text": "io",
                                "start": 11,
                                "startCol": 4,
                                "end": 11,
                                "endCol": 6
                              }
                            ]
                          },
                          {
                            "kind": "atom",
                            "text": "format",
                            "start": 11,
                            "startCol": 7,
                            "end": 11,
                            "endCol": 13
                          }
                        ]
                      },
                      {
                        "kind": "expr_args",
                        "text": "(\"~s~n\", [\"--- Even pairs ---\"])",
                        "start": 11,
                        "startCol": 13,
                        "end": 11,
                        "endCol": 45,
                        "children": [
                          {
                            "kind": "string",
                            "text": "\"~s~n\"",
                            "start": 11,
                            "startCol": 14,
                            "end": 11,
                            "endCol": 20
                          },
                          {
                            "kind": "list",
                            "text": "[\"--- Even pairs ---\"]",
                            "start": 11,
                            "startCol": 22,
                            "end": 11,
                            "endCol": 44,
                            "children": [
                              {
                                "kind": "string",
                                "text": "\"--- Even pairs ---\"",
                                "start": 11,
                                "startCol": 23,
                                "end": 11,
                                "endCol": 43
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "call",
                    "text": "lists:foreach(fun(P) -\u003e\n    io:format(\"~p ~p~n\", [maps:get(\"n\", P), maps:get(\"l\", P)])\nend, Pairs)",
                    "start": 12,
                    "startCol": 4,
                    "end": 14,
                    "endCol": 11,
                    "children": [
                      {
                        "kind": "remote",
                        "text": "lists:foreach",
                        "start": 12,
                        "startCol": 4,
                        "end": 12,
                        "endCol": 17,
                        "children": [
                          {
                            "kind": "remote_module",
                            "text": "lists:",
                            "start": 12,
                            "startCol": 4,
                            "end": 12,
                            "endCol": 10,
                            "children": [
                              {
                                "kind": "atom",
                                "text": "lists",
                                "start": 12,
                                "startCol": 4,
                                "end": 12,
                                "endCol": 9
                              }
                            ]
                          },
                          {
                            "kind": "atom",
                            "text": "foreach",
                            "start": 12,
                            "startCol": 10,
                            "end": 12,
                            "endCol": 17
                          }
                        ]
                      },
                      {
                        "kind": "expr_args",
                        "text": "(fun(P) -\u003e\n    io:format(\"~p ~p~n\", [maps:get(\"n\", P), maps:get(\"l\", P)])\nend, Pairs)",
                        "start": 12,
                        "startCol": 17,
                        "end": 14,
                        "endCol": 11,
                        "children": [
                          {
                            "kind": "anonymous_fun",
                            "text": "fun(P) -\u003e\n    io:format(\"~p ~p~n\", [maps:get(\"n\", P), maps:get(\"l\", P)])\nend",
                            "start": 12,
                            "startCol": 18,
                            "end": 14,
                            "endCol": 3,
                            "children": [
                              {
                                "kind": "fun_clause",
                                "text": "(P) -\u003e\n    io:format(\"~p ~p~n\", [maps:get(\"n\", P), maps:get(\"l\", P)])",
                                "start": 12,
                                "startCol": 21,
                                "end": 13,
                                "endCol": 62,
                                "children": [
                                  {
                                    "kind": "expr_args",
                                    "text": "(P)",
                                    "start": 12,
                                    "startCol": 21,
                                    "end": 12,
                                    "endCol": 24,
                                    "children": [
                                      {
                                        "kind": "var",
                                        "text": "P",
                                        "start": 12,
                                        "startCol": 22,
                                        "end": 12,
                                        "endCol": 23
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "clause_body",
                                    "text": "-\u003e\n    io:format(\"~p ~p~n\", [maps:get(\"n\", P), maps:get(\"l\", P)])",
                                    "start": 12,
                                    "startCol": 25,
                                    "end": 13,
                                    "endCol": 62,
                                    "children": [
                                      {
                                        "kind": "call",
                                        "text": "io:format(\"~p ~p~n\", [maps:get(\"n\", P), maps:get(\"l\", P)])",
                                        "start": 13,
                                        "startCol": 4,
                                        "end": 13,
                                        "endCol": 62,
                                        "children": [
                                          {
                                            "kind": "remote",
                                            "text": "io:format",
                                            "start": 13,
                                            "startCol": 4,
                                            "end": 13,
                                            "endCol": 13,
                                            "children": [
                                              {
                                                "kind": "remote_module",
                                                "text": "io:",
                                                "start": 13,
                                                "startCol": 4,
                                                "end": 13,
                                                "endCol": 7,
                                                "children": [
                                                  {
                                                    "kind": "atom",
                                                    "text": "io",
                                                    "start": 13,
                                                    "startCol": 4,
                                                    "end": 13,
                                                    "endCol": 6
                                                  }
                                                ]
                                              },
                                              {
                                                "kind": "atom",
                                                "text": "format",
                                                "start": 13,
                                                "startCol": 7,
                                                "end": 13,
                                                "endCol": 13
                                              }
                                            ]
                                          },
                                          {
                                            "kind": "expr_args",
                                            "text": "(\"~p ~p~n\", [maps:get(\"n\", P), maps:get(\"l\", P)])",
                                            "start": 13,
                                            "startCol": 13,
                                            "end": 13,
                                            "endCol": 62,
                                            "children": [
                                              {
                                                "kind": "string",
                                                "text": "\"~p ~p~n\"",
                                                "start": 13,
                                                "startCol": 14,
                                                "end": 13,
                                                "endCol": 23
                                              },
                                              {
                                                "kind": "list",
                                                "text": "[maps:get(\"n\", P), maps:get(\"l\", P)]",
                                                "start": 13,
                                                "startCol": 25,
                                                "end": 13,
                                                "endCol": 61,
                                                "children": [
                                                  {
                                                    "kind": "call",
                                                    "text": "maps:get(\"n\", P)",
                                                    "start": 13,
                                                    "startCol": 26,
                                                    "end": 13,
                                                    "endCol": 42,
                                                    "children": [
                                                      {
                                                        "kind": "remote",
                                                        "text": "maps:get",
                                                        "start": 13,
                                                        "startCol": 26,
                                                        "end": 13,
                                                        "endCol": 34,
                                                        "children": [
                                                          {
                                                            "kind": "remote_module",
                                                            "text": "maps:",
                                                            "start": 13,
                                                            "startCol": 26,
                                                            "end": 13,
                                                            "endCol": 31,
                                                            "children": [
                                                              {
                                                                "kind": "atom",
                                                                "text": "maps",
                                                                "start": 13,
                                                                "startCol": 26,
                                                                "end": 13,
                                                                "endCol": 30
                                                              }
                                                            ]
                                                          },
                                                          {
                                                            "kind": "atom",
                                                            "text": "get",
                                                            "start": 13,
                                                            "startCol": 31,
                                                            "end": 13,
                                                            "endCol": 34
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "kind": "expr_args",
                                                        "text": "(\"n\", P)",
                                                        "start": 13,
                                                        "startCol": 34,
                                                        "end": 13,
                                                        "endCol": 42,
                                                        "children": [
                                                          {
                                                            "kind": "string",
                                                            "text": "\"n\"",
                                                            "start": 13,
                                                            "startCol": 35,
                                                            "end": 13,
                                                            "endCol": 38
                                                          },
                                                          {
                                                            "kind": "var",
                                                            "text": "P",
                                                            "start": 13,
                                                            "startCol": 40,
                                                            "end": 13,
                                                            "endCol": 41
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "kind": "call",
                                                    "text": "maps:get(\"l\", P)",
                                                    "start": 13,
                                                    "startCol": 44,
                                                    "end": 13,
                                                    "endCol": 60,
                                                    "children": [
                                                      {
                                                        "kind": "remote",
                                                        "text": "maps:get",
                                                        "start": 13,
                                                        "startCol": 44,
                                                        "end": 13,
                                                        "endCol": 52,
                                                        "children": [
                                                          {
                                                            "kind": "remote_module",
                                                            "text": "maps:",
                                                            "start": 13,
                                                            "startCol": 44,
                                                            "end": 13,
                                                            "endCol": 49,
                                                            "children": [
                                                              {
                                                                "kind": "atom",
                                                                "text": "maps",
                                                                "start": 13,
                                                                "startCol": 44,
                                                                "end": 13,
                                                                "endCol": 48
                                                              }
                                                            ]
                                                          },
                                                          {
                                                            "kind": "atom",
                                                            "text": "get",
                                                            "start": 13,
                                                            "startCol": 49,
                                                            "end": 13,
                                                            "endCol": 52
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "kind": "expr_args",
                                                        "text": "(\"l\", P)",
                                                        "start": 13,
                                                        "startCol": 52,
                                                        "end": 13,
                                                        "endCol": 60,
                                                        "children": [
                                                          {
                                                            "kind": "string",
                                                            "text": "\"l\"",
                                                            "start": 13,
                                                            "startCol": 53,
                                                            "end": 13,
                                                            "endCol": 56
                                                          },
                                                          {
                                                            "kind": "var",
                                                            "text": "P",
                                                            "start": 13,
                                                            "startCol": 58,
                                                            "end": 13,
                                                            "endCol": 59
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "var",
                            "text": "Pairs",
                            "start": 14,
                            "startCol": 5,
                            "end": 14,
                            "endCol": 10
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}
