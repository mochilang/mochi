{
  "root": {
    "kind": "source_file",
    "text": "#!/usr/bin/env escript\n-module(main).\n-export([main/1, twoSum/2]).\n\n% Generated by Mochi transpiler v0.10.35 (d37eb1c7e) on 2025-07-22 12:33 +0700\n\ntwoSum(Nums, Target) -\u003e\n    try\n        N = length(Nums),\n        lists:foreach(fun(I) -\u003e\n    lists:foreach(fun(J) -\u003e\n    case ((lists:nth(I + 1, Nums) + lists:nth(J + 1, Nums)) == Target) of\n        true -\u003e throw({return, [I, J]});\n        _ -\u003e ok\n    end\nend, lists:seq((I + 1), (N) - 1))\nend, lists:seq(0, (N) - 1)),\n        [-1, -1]\n    catch {return, V} -\u003e V end.\n\nmain(_) -\u003e\n    Result = twoSum([2, 7, 11, 15], 9),\n    io:format(\"~p~n\", [lists:nth(0 + 1, Result)]),\n    io:format(\"~p~n\", [lists:nth(1 + 1, Result)]).\n",
    "start": 1,
    "end": 25,
    "children": [
      {
        "kind": "shebang",
        "text": "#!/usr/bin/env escript",
        "start": 1,
        "end": 1,
        "endCol": 22
      },
      {
        "kind": "module_attribute",
        "text": "-module(main).",
        "start": 2,
        "end": 2,
        "endCol": 14,
        "children": [
          {
            "kind": "atom",
            "text": "main",
            "start": 2,
            "startCol": 8,
            "end": 2,
            "endCol": 12
          }
        ]
      },
      {
        "kind": "export_attribute",
        "text": "-export([main/1, twoSum/2]).",
        "start": 3,
        "end": 3,
        "endCol": 28,
        "children": [
          {
            "kind": "fa",
            "text": "main/1",
            "start": 3,
            "startCol": 9,
            "end": 3,
            "endCol": 15,
            "children": [
              {
                "kind": "atom",
                "text": "main",
                "start": 3,
                "startCol": 9,
                "end": 3,
                "endCol": 13
              },
              {
                "kind": "arity",
                "text": "/1",
                "start": 3,
                "startCol": 13,
                "end": 3,
                "endCol": 15,
                "children": [
                  {
                    "kind": "integer",
                    "text": "1",
                    "start": 3,
                    "startCol": 14,
                    "end": 3,
                    "endCol": 15
                  }
                ]
              }
            ]
          },
          {
            "kind": "fa",
            "text": "twoSum/2",
            "start": 3,
            "startCol": 17,
            "end": 3,
            "endCol": 25,
            "children": [
              {
                "kind": "atom",
                "text": "twoSum",
                "start": 3,
                "startCol": 17,
                "end": 3,
                "endCol": 23
              },
              {
                "kind": "arity",
                "text": "/2",
                "start": 3,
                "startCol": 23,
                "end": 3,
                "endCol": 25,
                "children": [
                  {
                    "kind": "integer",
                    "text": "2",
                    "start": 3,
                    "startCol": 24,
                    "end": 3,
                    "endCol": 25
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "kind": "comment",
        "text": "% Generated by Mochi transpiler v0.10.35 (d37eb1c7e) on 2025-07-22 12:33 +0700",
        "start": 5,
        "end": 5,
        "endCol": 78
      },
      {
        "kind": "fun_decl",
        "text": "twoSum(Nums, Target) -\u003e\n    try\n        N = length(Nums),\n        lists:foreach(fun(I) -\u003e\n    lists:foreach(fun(J) -\u003e\n    case ((lists:nth(I + 1, Nums) + lists:nth(J + 1, Nums)) == Target) of\n        true -\u003e throw({return, [I, J]});\n        _ -\u003e ok\n    end\nend, lists:seq((I + 1), (N) - 1))\nend, lists:seq(0, (N) - 1)),\n        [-1, -1]\n    catch {return, V} -\u003e V end.",
        "start": 7,
        "end": 19,
        "endCol": 31,
        "children": [
          {
            "kind": "function_clause",
            "text": "twoSum(Nums, Target) -\u003e\n    try\n        N = length(Nums),\n        lists:foreach(fun(I) -\u003e\n    lists:foreach(fun(J) -\u003e\n    case ((lists:nth(I + 1, Nums) + lists:nth(J + 1, Nums)) == Target) of\n        true -\u003e throw({return, [I, J]});\n        _ -\u003e ok\n    end\nend, lists:seq((I + 1), (N) - 1))\nend, lists:seq(0, (N) - 1)),\n        [-1, -1]\n    catch {return, V} -\u003e V end",
            "start": 7,
            "end": 19,
            "endCol": 30,
            "children": [
              {
                "kind": "atom",
                "text": "twoSum",
                "start": 7,
                "end": 7,
                "endCol": 6
              },
              {
                "kind": "expr_args",
                "text": "(Nums, Target)",
                "start": 7,
                "startCol": 6,
                "end": 7,
                "endCol": 20,
                "children": [
                  {
                    "kind": "var",
                    "text": "Nums",
                    "start": 7,
                    "startCol": 7,
                    "end": 7,
                    "endCol": 11
                  },
                  {
                    "kind": "var",
                    "text": "Target",
                    "start": 7,
                    "startCol": 13,
                    "end": 7,
                    "endCol": 19
                  }
                ]
              },
              {
                "kind": "clause_body",
                "text": "-\u003e\n    try\n        N = length(Nums),\n        lists:foreach(fun(I) -\u003e\n    lists:foreach(fun(J) -\u003e\n    case ((lists:nth(I + 1, Nums) + lists:nth(J + 1, Nums)) == Target) of\n        true -\u003e throw({return, [I, J]});\n        _ -\u003e ok\n    end\nend, lists:seq((I + 1), (N) - 1))\nend, lists:seq(0, (N) - 1)),\n        [-1, -1]\n    catch {return, V} -\u003e V end",
                "start": 7,
                "startCol": 21,
                "end": 19,
                "endCol": 30,
                "children": [
                  {
                    "kind": "try_expr",
                    "text": "try\n        N = length(Nums),\n        lists:foreach(fun(I) -\u003e\n    lists:foreach(fun(J) -\u003e\n    case ((lists:nth(I + 1, Nums) + lists:nth(J + 1, Nums)) == Target) of\n        true -\u003e throw({return, [I, J]});\n        _ -\u003e ok\n    end\nend, lists:seq((I + 1), (N) - 1))\nend, lists:seq(0, (N) - 1)),\n        [-1, -1]\n    catch {return, V} -\u003e V end",
                    "start": 8,
                    "startCol": 4,
                    "end": 19,
                    "endCol": 30,
                    "children": [
                      {
                        "kind": "match_expr",
                        "text": "N = length(Nums)",
                        "start": 9,
                        "startCol": 8,
                        "end": 9,
                        "endCol": 24,
                        "children": [
                          {
                            "kind": "var",
                            "text": "N",
                            "start": 9,
                            "startCol": 8,
                            "end": 9,
                            "endCol": 9
                          },
                          {
                            "kind": "call",
                            "text": "length(Nums)",
                            "start": 9,
                            "startCol": 12,
                            "end": 9,
                            "endCol": 24,
                            "children": [
                              {
                                "kind": "atom",
                                "text": "length",
                                "start": 9,
                                "startCol": 12,
                                "end": 9,
                                "endCol": 18
                              },
                              {
                                "kind": "expr_args",
                                "text": "(Nums)",
                                "start": 9,
                                "startCol": 18,
                                "end": 9,
                                "endCol": 24,
                                "children": [
                                  {
                                    "kind": "var",
                                    "text": "Nums",
                                    "start": 9,
                                    "startCol": 19,
                                    "end": 9,
                                    "endCol": 23
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "call",
                        "text": "lists:foreach(fun(I) -\u003e\n    lists:foreach(fun(J) -\u003e\n    case ((lists:nth(I + 1, Nums) + lists:nth(J + 1, Nums)) == Target) of\n        true -\u003e throw({return, [I, J]});\n        _ -\u003e ok\n    end\nend, lists:seq((I + 1), (N) - 1))\nend, lists:seq(0, (N) - 1))",
                        "start": 10,
                        "startCol": 8,
                        "end": 17,
                        "endCol": 27,
                        "children": [
                          {
                            "kind": "remote",
                            "text": "lists:foreach",
                            "start": 10,
                            "startCol": 8,
                            "end": 10,
                            "endCol": 21,
                            "children": [
                              {
                                "kind": "remote_module",
                                "text": "lists:",
                                "start": 10,
                                "startCol": 8,
                                "end": 10,
                                "endCol": 14,
                                "children": [
                                  {
                                    "kind": "atom",
                                    "text": "lists",
                                    "start": 10,
                                    "startCol": 8,
                                    "end": 10,
                                    "endCol": 13
                                  }
                                ]
                              },
                              {
                                "kind": "atom",
                                "text": "foreach",
                                "start": 10,
                                "startCol": 14,
                                "end": 10,
                                "endCol": 21
                              }
                            ]
                          },
                          {
                            "kind": "expr_args",
                            "text": "(fun(I) -\u003e\n    lists:foreach(fun(J) -\u003e\n    case ((lists:nth(I + 1, Nums) + lists:nth(J + 1, Nums)) == Target) of\n        true -\u003e throw({return, [I, J]});\n        _ -\u003e ok\n    end\nend, lists:seq((I + 1), (N) - 1))\nend, lists:seq(0, (N) - 1))",
                            "start": 10,
                            "startCol": 21,
                            "end": 17,
                            "endCol": 27,
                            "children": [
                              {
                                "kind": "anonymous_fun",
                                "text": "fun(I) -\u003e\n    lists:foreach(fun(J) -\u003e\n    case ((lists:nth(I + 1, Nums) + lists:nth(J + 1, Nums)) == Target) of\n        true -\u003e throw({return, [I, J]});\n        _ -\u003e ok\n    end\nend, lists:seq((I + 1), (N) - 1))\nend",
                                "start": 10,
                                "startCol": 22,
                                "end": 17,
                                "endCol": 3,
                                "children": [
                                  {
                                    "kind": "fun_clause",
                                    "text": "(I) -\u003e\n    lists:foreach(fun(J) -\u003e\n    case ((lists:nth(I + 1, Nums) + lists:nth(J + 1, Nums)) == Target) of\n        true -\u003e throw({return, [I, J]});\n        _ -\u003e ok\n    end\nend, lists:seq((I + 1), (N) - 1))",
                                    "start": 10,
                                    "startCol": 25,
                                    "end": 16,
                                    "endCol": 33,
                                    "children": [
                                      {
                                        "kind": "expr_args",
                                        "text": "(I)",
                                        "start": 10,
                                        "startCol": 25,
                                        "end": 10,
                                        "endCol": 28,
                                        "children": [
                                          {
                                            "kind": "var",
                                            "text": "I",
                                            "start": 10,
                                            "startCol": 26,
                                            "end": 10,
                                            "endCol": 27
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "clause_body",
                                        "text": "-\u003e\n    lists:foreach(fun(J) -\u003e\n    case ((lists:nth(I + 1, Nums) + lists:nth(J + 1, Nums)) == Target) of\n        true -\u003e throw({return, [I, J]});\n        _ -\u003e ok\n    end\nend, lists:seq((I + 1), (N) - 1))",
                                        "start": 10,
                                        "startCol": 29,
                                        "end": 16,
                                        "endCol": 33,
                                        "children": [
                                          {
                                            "kind": "call",
                                            "text": "lists:foreach(fun(J) -\u003e\n    case ((lists:nth(I + 1, Nums) + lists:nth(J + 1, Nums)) == Target) of\n        true -\u003e throw({return, [I, J]});\n        _ -\u003e ok\n    end\nend, lists:seq((I + 1), (N) - 1))",
                                            "start": 11,
                                            "startCol": 4,
                                            "end": 16,
                                            "endCol": 33,
                                            "children": [
                                              {
                                                "kind": "remote",
                                                "text": "lists:foreach",
                                                "start": 11,
                                                "startCol": 4,
                                                "end": 11,
                                                "endCol": 17,
                                                "children": [
                                                  {
                                                    "kind": "remote_module",
                                                    "text": "lists:",
                                                    "start": 11,
                                                    "startCol": 4,
                                                    "end": 11,
                                                    "endCol": 10,
                                                    "children": [
                                                      {
                                                        "kind": "atom",
                                                        "text": "lists",
                                                        "start": 11,
                                                        "startCol": 4,
                                                        "end": 11,
                                                        "endCol": 9
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "kind": "atom",
                                                    "text": "foreach",
                                                    "start": 11,
                                                    "startCol": 10,
                                                    "end": 11,
                                                    "endCol": 17
                                                  }
                                                ]
                                              },
                                              {
                                                "kind": "expr_args",
                                                "text": "(fun(J) -\u003e\n    case ((lists:nth(I + 1, Nums) + lists:nth(J + 1, Nums)) == Target) of\n        true -\u003e throw({return, [I, J]});\n        _ -\u003e ok\n    end\nend, lists:seq((I + 1), (N) - 1))",
                                                "start": 11,
                                                "startCol": 17,
                                                "end": 16,
                                                "endCol": 33,
                                                "children": [
                                                  {
                                                    "kind": "anonymous_fun",
                                                    "text": "fun(J) -\u003e\n    case ((lists:nth(I + 1, Nums) + lists:nth(J + 1, Nums)) == Target) of\n        true -\u003e throw({return, [I, J]});\n        _ -\u003e ok\n    end\nend",
                                                    "start": 11,
                                                    "startCol": 18,
                                                    "end": 16,
                                                    "endCol": 3,
                                                    "children": [
                                                      {
                                                        "kind": "fun_clause",
                                                        "text": "(J) -\u003e\n    case ((lists:nth(I + 1, Nums) + lists:nth(J + 1, Nums)) == Target) of\n        true -\u003e throw({return, [I, J]});\n        _ -\u003e ok\n    end",
                                                        "start": 11,
                                                        "startCol": 21,
                                                        "end": 15,
                                                        "endCol": 7,
                                                        "children": [
                                                          {
                                                            "kind": "expr_args",
                                                            "text": "(J)",
                                                            "start": 11,
                                                            "startCol": 21,
                                                            "end": 11,
                                                            "endCol": 24,
                                                            "children": [
                                                              {
                                                                "kind": "var",
                                                                "text": "J",
                                                                "start": 11,
                                                                "startCol": 22,
                                                                "end": 11,
                                                                "endCol": 23
                                                              }
                                                            ]
                                                          },
                                                          {
                                                            "kind": "clause_body",
                                                            "text": "-\u003e\n    case ((lists:nth(I + 1, Nums) + lists:nth(J + 1, Nums)) == Target) of\n        true -\u003e throw({return, [I, J]});\n        _ -\u003e ok\n    end",
                                                            "start": 11,
                                                            "startCol": 25,
                                                            "end": 15,
                                                            "endCol": 7,
                                                            "children": [
                                                              {
                                                                "kind": "case_expr",
                                                                "text": "case ((lists:nth(I + 1, Nums) + lists:nth(J + 1, Nums)) == Target) of\n        true -\u003e throw({return, [I, J]});\n        _ -\u003e ok\n    end",
                                                                "start": 12,
                                                                "startCol": 4,
                                                                "end": 15,
                                                                "endCol": 7,
                                                                "children": [
                                                                  {
                                                                    "kind": "paren_expr",
                                                                    "text": "((lists:nth(I + 1, Nums) + lists:nth(J + 1, Nums)) == Target)",
                                                                    "start": 12,
                                                                    "startCol": 9,
                                                                    "end": 12,
                                                                    "endCol": 70,
                                                                    "children": [
                                                                      {
                                                                        "kind": "binary_op_expr",
                                                                        "text": "(lists:nth(I + 1, Nums) + lists:nth(J + 1, Nums)) == Target",
                                                                        "start": 12,
                                                                        "startCol": 10,
                                                                        "end": 12,
                                                                        "endCol": 69,
                                                                        "children": [
                                                                          {
                                                                            "kind": "paren_expr",
                                                                            "text": "(lists:nth(I + 1, Nums) + lists:nth(J + 1, Nums))",
                                                                            "start": 12,
                                                                            "startCol": 10,
                                                                            "end": 12,
                                                                            "endCol": 59,
                                                                            "children": [
                                                                              {
                                                                                "kind": "binary_op_expr",
                                                                                "text": "lists:nth(I + 1, Nums) + lists:nth(J + 1, Nums)",
                                                                                "start": 12,
                                                                                "startCol": 11,
                                                                                "end": 12,
                                                                                "endCol": 58,
                                                                                "children": [
                                                                                  {
                                                                                    "kind": "call",
                                                                                    "text": "lists:nth(I + 1, Nums)",
                                                                                    "start": 12,
                                                                                    "startCol": 11,
                                                                                    "end": 12,
                                                                                    "endCol": 33,
                                                                                    "children": [
                                                                                      {
                                                                                        "kind": "remote",
                                                                                        "text": "lists:nth",
                                                                                        "start": 12,
                                                                                        "startCol": 11,
                                                                                        "end": 12,
                                                                                        "endCol": 20,
                                                                                        "children": [
                                                                                          {
                                                                                            "kind": "remote_module",
                                                                                            "text": "lists:",
                                                                                            "start": 12,
                                                                                            "startCol": 11,
                                                                                            "end": 12,
                                                                                            "endCol": 17,
                                                                                            "children": [
                                                                                              {
                                                                                                "kind": "atom",
                                                                                                "text": "lists",
                                                                                                "start": 12,
                                                                                                "startCol": 11,
                                                                                                "end": 12,
                                                                                                "endCol": 16
                                                                                              }
                                                                                            ]
                                                                                          },
                                                                                          {
                                                                                            "kind": "atom",
                                                                                            "text": "nth",
                                                                                            "start": 12,
                                                                                            "startCol": 17,
                                                                                            "end": 12,
                                                                                            "endCol": 20
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      {
                                                                                        "kind": "expr_args",
                                                                                        "text": "(I + 1, Nums)",
                                                                                        "start": 12,
                                                                                        "startCol": 20,
                                                                                        "end": 12,
                                                                                        "endCol": 33,
                                                                                        "children": [
                                                                                          {
                                                                                            "kind": "binary_op_expr",
                                                                                            "text": "I + 1",
                                                                                            "start": 12,
                                                                                            "startCol": 21,
                                                                                            "end": 12,
                                                                                            "endCol": 26,
                                                                                            "children": [
                                                                                              {
                                                                                                "kind": "var",
                                                                                                "text": "I",
                                                                                                "start": 12,
                                                                                                "startCol": 21,
                                                                                                "end": 12,
                                                                                                "endCol": 22
                                                                                              },
                                                                                              {
                                                                                                "kind": "integer",
                                                                                                "text": "1",
                                                                                                "start": 12,
                                                                                                "startCol": 25,
                                                                                                "end": 12,
                                                                                                "endCol": 26
                                                                                              }
                                                                                            ]
                                                                                          },
                                                                                          {
                                                                                            "kind": "var",
                                                                                            "text": "Nums",
                                                                                            "start": 12,
                                                                                            "startCol": 28,
                                                                                            "end": 12,
                                                                                            "endCol": 32
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    ]
                                                                                  },
                                                                                  {
                                                                                    "kind": "call",
                                                                                    "text": "lists:nth(J + 1, Nums)",
                                                                                    "start": 12,
                                                                                    "startCol": 36,
                                                                                    "end": 12,
                                                                                    "endCol": 58,
                                                                                    "children": [
                                                                                      {
                                                                                        "kind": "remote",
                                                                                        "text": "lists:nth",
                                                                                        "start": 12,
                                                                                        "startCol": 36,
                                                                                        "end": 12,
                                                                                        "endCol": 45,
                                                                                        "children": [
                                                                                          {
                                                                                            "kind": "remote_module",
                                                                                            "text": "lists:",
                                                                                            "start": 12,
                                                                                            "startCol": 36,
                                                                                            "end": 12,
                                                                                            "endCol": 42,
                                                                                            "children": [
                                                                                              {
                                                                                                "kind": "atom",
                                                                                                "text": "lists",
                                                                                                "start": 12,
                                                                                                "startCol": 36,
                                                                                                "end": 12,
                                                                                                "endCol": 41
                                                                                              }
                                                                                            ]
                                                                                          },
                                                                                          {
                                                                                            "kind": "atom",
                                                                                            "text": "nth",
                                                                                            "start": 12,
                                                                                            "startCol": 42,
                                                                                            "end": 12,
                                                                                            "endCol": 45
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      {
                                                                                        "kind": "expr_args",
                                                                                        "text": "(J + 1, Nums)",
                                                                                        "start": 12,
                                                                                        "startCol": 45,
                                                                                        "end": 12,
                                                                                        "endCol": 58,
                                                                                        "children": [
                                                                                          {
                                                                                            "kind": "binary_op_expr",
                                                                                            "text": "J + 1",
                                                                                            "start": 12,
                                                                                            "startCol": 46,
                                                                                            "end": 12,
                                                                                            "endCol": 51,
                                                                                            "children": [
                                                                                              {
                                                                                                "kind": "var",
                                                                                                "text": "J",
                                                                                                "start": 12,
                                                                                                "startCol": 46,
                                                                                                "end": 12,
                                                                                                "endCol": 47
                                                                                              },
                                                                                              {
                                                                                                "kind": "integer",
                                                                                                "text": "1",
                                                                                                "start": 12,
                                                                                                "startCol": 50,
                                                                                                "end": 12,
                                                                                                "endCol": 51
                                                                                              }
                                                                                            ]
                                                                                          },
                                                                                          {
                                                                                            "kind": "var",
                                                                                            "text": "Nums",
                                                                                            "start": 12,
                                                                                            "startCol": 53,
                                                                                            "end": 12,
                                                                                            "endCol": 57
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                ]
                                                                              }
                                                                            ]
                                                                          },
                                                                          {
                                                                            "kind": "var",
                                                                            "text": "Target",
                                                                            "start": 12,
                                                                            "startCol": 63,
                                                                            "end": 12,
                                                                            "endCol": 69
                                                                          }
                                                                        ]
                                                                      }
                                                                    ]
                                                                  },
                                                                  {
                                                                    "kind": "cr_clause",
                                                                    "text": "true -\u003e throw({return, [I, J]})",
                                                                    "start": 13,
                                                                    "startCol": 8,
                                                                    "end": 13,
                                                                    "endCol": 39,
                                                                    "children": [
                                                                      {
                                                                        "kind": "atom",
                                                                        "text": "true",
                                                                        "start": 13,
                                                                        "startCol": 8,
                                                                        "end": 13,
                                                                        "endCol": 12
                                                                      },
                                                                      {
                                                                        "kind": "clause_body",
                                                                        "text": "-\u003e throw({return, [I, J]})",
                                                                        "start": 13,
                                                                        "startCol": 13,
                                                                        "end": 13,
                                                                        "endCol": 39,
                                                                        "children": [
                                                                          {
                                                                            "kind": "call",
                                                                            "text": "throw({return, [I, J]})",
                                                                            "start": 13,
                                                                            "startCol": 16,
                                                                            "end": 13,
                                                                            "endCol": 39,
                                                                            "children": [
                                                                              {
                                                                                "kind": "atom",
                                                                                "text": "throw",
                                                                                "start": 13,
                                                                                "startCol": 16,
                                                                                "end": 13,
                                                                                "endCol": 21
                                                                              },
                                                                              {
                                                                                "kind": "expr_args",
                                                                                "text": "({return, [I, J]})",
                                                                                "start": 13,
                                                                                "startCol": 21,
                                                                                "end": 13,
                                                                                "endCol": 39,
                                                                                "children": [
                                                                                  {
                                                                                    "kind": "tuple",
                                                                                    "text": "{return, [I, J]}",
                                                                                    "start": 13,
                                                                                    "startCol": 22,
                                                                                    "end": 13,
                                                                                    "endCol": 38,
                                                                                    "children": [
                                                                                      {
                                                                                        "kind": "atom",
                                                                                        "text": "return",
                                                                                        "start": 13,
                                                                                        "startCol": 23,
                                                                                        "end": 13,
                                                                                        "endCol": 29
                                                                                      },
                                                                                      {
                                                                                        "kind": "list",
                                                                                        "text": "[I, J]",
                                                                                        "start": 13,
                                                                                        "startCol": 31,
                                                                                        "end": 13,
                                                                                        "endCol": 37,
                                                                                        "children": [
                                                                                          {
                                                                                            "kind": "var",
                                                                                            "text": "I",
                                                                                            "start": 13,
                                                                                            "startCol": 32,
                                                                                            "end": 13,
                                                                                            "endCol": 33
                                                                                          },
                                                                                          {
                                                                                            "kind": "var",
                                                                                            "text": "J",
                                                                                            "start": 13,
                                                                                            "startCol": 35,
                                                                                            "end": 13,
                                                                                            "endCol": 36
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                ]
                                                                              }
                                                                            ]
                                                                          }
                                                                        ]
                                                                      }
                                                                    ]
                                                                  },
                                                                  {
                                                                    "kind": "cr_clause",
                                                                    "text": "_ -\u003e ok",
                                                                    "start": 14,
                                                                    "startCol": 8,
                                                                    "end": 14,
                                                                    "endCol": 15,
                                                                    "children": [
                                                                      {
                                                                        "kind": "var",
                                                                        "text": "_",
                                                                        "start": 14,
                                                                        "startCol": 8,
                                                                        "end": 14,
                                                                        "endCol": 9
                                                                      },
                                                                      {
                                                                        "kind": "clause_body",
                                                                        "text": "-\u003e ok",
                                                                        "start": 14,
                                                                        "startCol": 10,
                                                                        "end": 14,
                                                                        "endCol": 15,
                                                                        "children": [
                                                                          {
                                                                            "kind": "atom",
                                                                            "text": "ok",
                                                                            "start": 14,
                                                                            "startCol": 13,
                                                                            "end": 14,
                                                                            "endCol": 15
                                                                          }
                                                                        ]
                                                                      }
                                                                    ]
                                                                  }
                                                                ]
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "kind": "call",
                                                    "text": "lists:seq((I + 1), (N) - 1)",
                                                    "start": 16,
                                                    "startCol": 5,
                                                    "end": 16,
                                                    "endCol": 32,
                                                    "children": [
                                                      {
                                                        "kind": "remote",
                                                        "text": "lists:seq",
                                                        "start": 16,
                                                        "startCol": 5,
                                                        "end": 16,
                                                        "endCol": 14,
                                                        "children": [
                                                          {
                                                            "kind": "remote_module",
                                                            "text": "lists:",
                                                            "start": 16,
                                                            "startCol": 5,
                                                            "end": 16,
                                                            "endCol": 11,
                                                            "children": [
                                                              {
                                                                "kind": "atom",
                                                                "text": "lists",
                                                                "start": 16,
                                                                "startCol": 5,
                                                                "end": 16,
                                                                "endCol": 10
                                                              }
                                                            ]
                                                          },
                                                          {
                                                            "kind": "atom",
                                                            "text": "seq",
                                                            "start": 16,
                                                            "startCol": 11,
                                                            "end": 16,
                                                            "endCol": 14
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "kind": "expr_args",
                                                        "text": "((I + 1), (N) - 1)",
                                                        "start": 16,
                                                        "startCol": 14,
                                                        "end": 16,
                                                        "endCol": 32,
                                                        "children": [
                                                          {
                                                            "kind": "paren_expr",
                                                            "text": "(I + 1)",
                                                            "start": 16,
                                                            "startCol": 15,
                                                            "end": 16,
                                                            "endCol": 22,
                                                            "children": [
                                                              {
                                                                "kind": "binary_op_expr",
                                                                "text": "I + 1",
                                                                "start": 16,
                                                                "startCol": 16,
                                                                "end": 16,
                                                                "endCol": 21,
                                                                "children": [
                                                                  {
                                                                    "kind": "var",
                                                                    "text": "I",
                                                                    "start": 16,
                                                                    "startCol": 16,
                                                                    "end": 16,
                                                                    "endCol": 17
                                                                  },
                                                                  {
                                                                    "kind": "integer",
                                                                    "text": "1",
                                                                    "start": 16,
                                                                    "startCol": 20,
                                                                    "end": 16,
                                                                    "endCol": 21
                                                                  }
                                                                ]
                                                              }
                                                            ]
                                                          },
                                                          {
                                                            "kind": "binary_op_expr",
                                                            "text": "(N) - 1",
                                                            "start": 16,
                                                            "startCol": 24,
                                                            "end": 16,
                                                            "endCol": 31,
                                                            "children": [
                                                              {
                                                                "kind": "paren_expr",
                                                                "text": "(N)",
                                                                "start": 16,
                                                                "startCol": 24,
                                                                "end": 16,
                                                                "endCol": 27,
                                                                "children": [
                                                                  {
                                                                    "kind": "var",
                                                                    "text": "N",
                                                                    "start": 16,
                                                                    "startCol": 25,
                                                                    "end": 16,
                                                                    "endCol": 26
                                                                  }
                                                                ]
                                                              },
                                                              {
                                                                "kind": "integer",
                                                                "text": "1",
                                                                "start": 16,
                                                                "startCol": 30,
                                                                "end": 16,
                                                                "endCol": 31
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "call",
                                "text": "lists:seq(0, (N) - 1)",
                                "start": 17,
                                "startCol": 5,
                                "end": 17,
                                "endCol": 26,
                                "children": [
                                  {
                                    "kind": "remote",
                                    "text": "lists:seq",
                                    "start": 17,
                                    "startCol": 5,
                                    "end": 17,
                                    "endCol": 14,
                                    "children": [
                                      {
                                        "kind": "remote_module",
                                        "text": "lists:",
                                        "start": 17,
                                        "startCol": 5,
                                        "end": 17,
                                        "endCol": 11,
                                        "children": [
                                          {
                                            "kind": "atom",
                                            "text": "lists",
                                            "start": 17,
                                            "startCol": 5,
                                            "end": 17,
                                            "endCol": 10
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "atom",
                                        "text": "seq",
                                        "start": 17,
                                        "startCol": 11,
                                        "end": 17,
                                        "endCol": 14
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "expr_args",
                                    "text": "(0, (N) - 1)",
                                    "start": 17,
                                    "startCol": 14,
                                    "end": 17,
                                    "endCol": 26,
                                    "children": [
                                      {
                                        "kind": "integer",
                                        "text": "0",
                                        "start": 17,
                                        "startCol": 15,
                                        "end": 17,
                                        "endCol": 16
                                      },
                                      {
                                        "kind": "binary_op_expr",
                                        "text": "(N) - 1",
                                        "start": 17,
                                        "startCol": 18,
                                        "end": 17,
                                        "endCol": 25,
                                        "children": [
                                          {
                                            "kind": "paren_expr",
                                            "text": "(N)",
                                            "start": 17,
                                            "startCol": 18,
                                            "end": 17,
                                            "endCol": 21,
                                            "children": [
                                              {
                                                "kind": "var",
                                                "text": "N",
                                                "start": 17,
                                                "startCol": 19,
                                                "end": 17,
                                                "endCol": 20
                                              }
                                            ]
                                          },
                                          {
                                            "kind": "integer",
                                            "text": "1",
                                            "start": 17,
                                            "startCol": 24,
                                            "end": 17,
                                            "endCol": 25
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "list",
                        "text": "[-1, -1]",
                        "start": 18,
                        "startCol": 8,
                        "end": 18,
                        "endCol": 16,
                        "children": [
                          {
                            "kind": "unary_op_expr",
                            "text": "-1",
                            "start": 18,
                            "startCol": 9,
                            "end": 18,
                            "endCol": 11,
                            "children": [
                              {
                                "kind": "integer",
                                "text": "1",
                                "start": 18,
                                "startCol": 10,
                                "end": 18,
                                "endCol": 11
                              }
                            ]
                          },
                          {
                            "kind": "unary_op_expr",
                            "text": "-1",
                            "start": 18,
                            "startCol": 13,
                            "end": 18,
                            "endCol": 15,
                            "children": [
                              {
                                "kind": "integer",
                                "text": "1",
                                "start": 18,
                                "startCol": 14,
                                "end": 18,
                                "endCol": 15
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "catch_clause",
                        "text": "{return, V} -\u003e V",
                        "start": 19,
                        "startCol": 10,
                        "end": 19,
                        "endCol": 26,
                        "children": [
                          {
                            "kind": "tuple",
                            "text": "{return, V}",
                            "start": 19,
                            "startCol": 10,
                            "end": 19,
                            "endCol": 21,
                            "children": [
                              {
                                "kind": "atom",
                                "text": "return",
                                "start": 19,
                                "startCol": 11,
                                "end": 19,
                                "endCol": 17
                              },
                              {
                                "kind": "var",
                                "text": "V",
                                "start": 19,
                                "startCol": 19,
                                "end": 19,
                                "endCol": 20
                              }
                            ]
                          },
                          {
                            "kind": "clause_body",
                            "text": "-\u003e V",
                            "start": 19,
                            "startCol": 22,
                            "end": 19,
                            "endCol": 26,
                            "children": [
                              {
                                "kind": "var",
                                "text": "V",
                                "start": 19,
                                "startCol": 25,
                                "end": 19,
                                "endCol": 26
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "kind": "fun_decl",
        "text": "main(_) -\u003e\n    Result = twoSum([2, 7, 11, 15], 9),\n    io:format(\"~p~n\", [lists:nth(0 + 1, Result)]),\n    io:format(\"~p~n\", [lists:nth(1 + 1, Result)]).",
        "start": 21,
        "end": 24,
        "endCol": 50,
        "children": [
          {
            "kind": "function_clause",
            "text": "main(_) -\u003e\n    Result = twoSum([2, 7, 11, 15], 9),\n    io:format(\"~p~n\", [lists:nth(0 + 1, Result)]),\n    io:format(\"~p~n\", [lists:nth(1 + 1, Result)])",
            "start": 21,
            "end": 24,
            "endCol": 49,
            "children": [
              {
                "kind": "atom",
                "text": "main",
                "start": 21,
                "end": 21,
                "endCol": 4
              },
              {
                "kind": "expr_args",
                "text": "(_)",
                "start": 21,
                "startCol": 4,
                "end": 21,
                "endCol": 7,
                "children": [
                  {
                    "kind": "var",
                    "text": "_",
                    "start": 21,
                    "startCol": 5,
                    "end": 21,
                    "endCol": 6
                  }
                ]
              },
              {
                "kind": "clause_body",
                "text": "-\u003e\n    Result = twoSum([2, 7, 11, 15], 9),\n    io:format(\"~p~n\", [lists:nth(0 + 1, Result)]),\n    io:format(\"~p~n\", [lists:nth(1 + 1, Result)])",
                "start": 21,
                "startCol": 8,
                "end": 24,
                "endCol": 49,
                "children": [
                  {
                    "kind": "match_expr",
                    "text": "Result = twoSum([2, 7, 11, 15], 9)",
                    "start": 22,
                    "startCol": 4,
                    "end": 22,
                    "endCol": 38,
                    "children": [
                      {
                        "kind": "var",
                        "text": "Result",
                        "start": 22,
                        "startCol": 4,
                        "end": 22,
                        "endCol": 10
                      },
                      {
                        "kind": "call",
                        "text": "twoSum([2, 7, 11, 15], 9)",
                        "start": 22,
                        "startCol": 13,
                        "end": 22,
                        "endCol": 38,
                        "children": [
                          {
                            "kind": "atom",
                            "text": "twoSum",
                            "start": 22,
                            "startCol": 13,
                            "end": 22,
                            "endCol": 19
                          },
                          {
                            "kind": "expr_args",
                            "text": "([2, 7, 11, 15], 9)",
                            "start": 22,
                            "startCol": 19,
                            "end": 22,
                            "endCol": 38,
                            "children": [
                              {
                                "kind": "list",
                                "text": "[2, 7, 11, 15]",
                                "start": 22,
                                "startCol": 20,
                                "end": 22,
                                "endCol": 34,
                                "children": [
                                  {
                                    "kind": "integer",
                                    "text": "2",
                                    "start": 22,
                                    "startCol": 21,
                                    "end": 22,
                                    "endCol": 22
                                  },
                                  {
                                    "kind": "integer",
                                    "text": "7",
                                    "start": 22,
                                    "startCol": 24,
                                    "end": 22,
                                    "endCol": 25
                                  },
                                  {
                                    "kind": "integer",
                                    "text": "11",
                                    "start": 22,
                                    "startCol": 27,
                                    "end": 22,
                                    "endCol": 29
                                  },
                                  {
                                    "kind": "integer",
                                    "text": "15",
                                    "start": 22,
                                    "startCol": 31,
                                    "end": 22,
                                    "endCol": 33
                                  }
                                ]
                              },
                              {
                                "kind": "integer",
                                "text": "9",
                                "start": 22,
                                "startCol": 36,
                                "end": 22,
                                "endCol": 37
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "call",
                    "text": "io:format(\"~p~n\", [lists:nth(0 + 1, Result)])",
                    "start": 23,
                    "startCol": 4,
                    "end": 23,
                    "endCol": 49,
                    "children": [
                      {
                        "kind": "remote",
                        "text": "io:format",
                        "start": 23,
                        "startCol": 4,
                        "end": 23,
                        "endCol": 13,
                        "children": [
                          {
                            "kind": "remote_module",
                            "text": "io:",
                            "start": 23,
                            "startCol": 4,
                            "end": 23,
                            "endCol": 7,
                            "children": [
                              {
                                "kind": "atom",
                                "text": "io",
                                "start": 23,
                                "startCol": 4,
                                "end": 23,
                                "endCol": 6
                              }
                            ]
                          },
                          {
                            "kind": "atom",
                            "text": "format",
                            "start": 23,
                            "startCol": 7,
                            "end": 23,
                            "endCol": 13
                          }
                        ]
                      },
                      {
                        "kind": "expr_args",
                        "text": "(\"~p~n\", [lists:nth(0 + 1, Result)])",
                        "start": 23,
                        "startCol": 13,
                        "end": 23,
                        "endCol": 49,
                        "children": [
                          {
                            "kind": "string",
                            "text": "\"~p~n\"",
                            "start": 23,
                            "startCol": 14,
                            "end": 23,
                            "endCol": 20
                          },
                          {
                            "kind": "list",
                            "text": "[lists:nth(0 + 1, Result)]",
                            "start": 23,
                            "startCol": 22,
                            "end": 23,
                            "endCol": 48,
                            "children": [
                              {
                                "kind": "call",
                                "text": "lists:nth(0 + 1, Result)",
                                "start": 23,
                                "startCol": 23,
                                "end": 23,
                                "endCol": 47,
                                "children": [
                                  {
                                    "kind": "remote",
                                    "text": "lists:nth",
                                    "start": 23,
                                    "startCol": 23,
                                    "end": 23,
                                    "endCol": 32,
                                    "children": [
                                      {
                                        "kind": "remote_module",
                                        "text": "lists:",
                                        "start": 23,
                                        "startCol": 23,
                                        "end": 23,
                                        "endCol": 29,
                                        "children": [
                                          {
                                            "kind": "atom",
                                            "text": "lists",
                                            "start": 23,
                                            "startCol": 23,
                                            "end": 23,
                                            "endCol": 28
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "atom",
                                        "text": "nth",
                                        "start": 23,
                                        "startCol": 29,
                                        "end": 23,
                                        "endCol": 32
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "expr_args",
                                    "text": "(0 + 1, Result)",
                                    "start": 23,
                                    "startCol": 32,
                                    "end": 23,
                                    "endCol": 47,
                                    "children": [
                                      {
                                        "kind": "binary_op_expr",
                                        "text": "0 + 1",
                                        "start": 23,
                                        "startCol": 33,
                                        "end": 23,
                                        "endCol": 38,
                                        "children": [
                                          {
                                            "kind": "integer",
                                            "text": "0",
                                            "start": 23,
                                            "startCol": 33,
                                            "end": 23,
                                            "endCol": 34
                                          },
                                          {
                                            "kind": "integer",
                                            "text": "1",
                                            "start": 23,
                                            "startCol": 37,
                                            "end": 23,
                                            "endCol": 38
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "var",
                                        "text": "Result",
                                        "start": 23,
                                        "startCol": 40,
                                        "end": 23,
                                        "endCol": 46
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "call",
                    "text": "io:format(\"~p~n\", [lists:nth(1 + 1, Result)])",
                    "start": 24,
                    "startCol": 4,
                    "end": 24,
                    "endCol": 49,
                    "children": [
                      {
                        "kind": "remote",
                        "text": "io:format",
                        "start": 24,
                        "startCol": 4,
                        "end": 24,
                        "endCol": 13,
                        "children": [
                          {
                            "kind": "remote_module",
                            "text": "io:",
                            "start": 24,
                            "startCol": 4,
                            "end": 24,
                            "endCol": 7,
                            "children": [
                              {
                                "kind": "atom",
                                "text": "io",
                                "start": 24,
                                "startCol": 4,
                                "end": 24,
                                "endCol": 6
                              }
                            ]
                          },
                          {
                            "kind": "atom",
                            "text": "format",
                            "start": 24,
                            "startCol": 7,
                            "end": 24,
                            "endCol": 13
                          }
                        ]
                      },
                      {
                        "kind": "expr_args",
                        "text": "(\"~p~n\", [lists:nth(1 + 1, Result)])",
                        "start": 24,
                        "startCol": 13,
                        "end": 24,
                        "endCol": 49,
                        "children": [
                          {
                            "kind": "string",
                            "text": "\"~p~n\"",
                            "start": 24,
                            "startCol": 14,
                            "end": 24,
                            "endCol": 20
                          },
                          {
                            "kind": "list",
                            "text": "[lists:nth(1 + 1, Result)]",
                            "start": 24,
                            "startCol": 22,
                            "end": 24,
                            "endCol": 48,
                            "children": [
                              {
                                "kind": "call",
                                "text": "lists:nth(1 + 1, Result)",
                                "start": 24,
                                "startCol": 23,
                                "end": 24,
                                "endCol": 47,
                                "children": [
                                  {
                                    "kind": "remote",
                                    "text": "lists:nth",
                                    "start": 24,
                                    "startCol": 23,
                                    "end": 24,
                                    "endCol": 32,
                                    "children": [
                                      {
                                        "kind": "remote_module",
                                        "text": "lists:",
                                        "start": 24,
                                        "startCol": 23,
                                        "end": 24,
                                        "endCol": 29,
                                        "children": [
                                          {
                                            "kind": "atom",
                                            "text": "lists",
                                            "start": 24,
                                            "startCol": 23,
                                            "end": 24,
                                            "endCol": 28
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "atom",
                                        "text": "nth",
                                        "start": 24,
                                        "startCol": 29,
                                        "end": 24,
                                        "endCol": 32
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "expr_args",
                                    "text": "(1 + 1, Result)",
                                    "start": 24,
                                    "startCol": 32,
                                    "end": 24,
                                    "endCol": 47,
                                    "children": [
                                      {
                                        "kind": "binary_op_expr",
                                        "text": "1 + 1",
                                        "start": 24,
                                        "startCol": 33,
                                        "end": 24,
                                        "endCol": 38,
                                        "children": [
                                          {
                                            "kind": "integer",
                                            "text": "1",
                                            "start": 24,
                                            "startCol": 33,
                                            "end": 24,
                                            "endCol": 34
                                          },
                                          {
                                            "kind": "integer",
                                            "text": "1",
                                            "start": 24,
                                            "startCol": 37,
                                            "end": 24,
                                            "endCol": 38
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "var",
                                        "text": "Result",
                                        "start": 24,
                                        "startCol": 40,
                                        "end": 24,
                                        "endCol": 46
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}
