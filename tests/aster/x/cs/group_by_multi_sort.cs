// Generated by Mochi 0.10.34 on 2025-07-22 10:24 +0700
using System;
using System.Collections.Generic;
using System.Linq;
struct Item {
    public string a;
    public int b;
    public int val;
    public override string ToString() => $"Item {{a = {a}, b = {b}, val = {val}}}";
}
struct GKey {
    public string a;
    public int b;
    public override string ToString() => $"GKey {{a = {a}, b = {b}}}";
}
struct GGroup {
    public GKey key;
    public Item[] items;
    public override string ToString() => $"GGroup {{key = {key}, items = {items}}}";
}
struct GResult {
    public string a;
    public int b;
    public int total;
    public override string ToString() => $"GResult {{a = {a}, b = {b}, total = {total}}}";
}
class Program {
    static Item[] items = new Item[]{new Item{a = "x", b = 1, val = 2}, new Item{a = "x", b = 2, val = 3}, new Item{a = "y", b = 1, val = 4}, new Item{a = "y", b = 2, val = 1}};
    static GResult[] grouped = (from i in items group i by new GKey{a = i.a, b = i.b} into gTmp let g = new GGroup{key = gTmp.Key, items = gTmp.ToArray()} ((from x in g.items select x.val).ToArray().Sum()) select new GResult{a = g.key.a, b = g.key.b, total = ((from x in g.items select x.val).ToArray().Sum())}).ToArray();
    static void Main() {
        Console.WriteLine(("[" + (string.Join(", ", grouped) + "]")));
    }
}
