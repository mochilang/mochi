(* Generated by Mochi transpiler v0.10.33 on 2025-07-21 18:38 +0700 *)

let () =
  let customers = [[("id", 1); ("name", "Alice")]; [("id", 2); ("name", "Bob")]] in
  let orders = [[("id", 100); ("customerId", 1)]; [("id", 101); ("customerId", 1)]; [("id", 102); ("customerId", 2)]] in
  let stats = (let __groups0 = ref [] in
  List.iter (fun o ->
  List.iter (fun c ->
    if ((List.assoc "customerId" o) == (List.assoc "id" c)) then (
    let key = (List.assoc "name" c) in
    let cur = try List.assoc key !__groups0 with Not_found -> [] in
    __groups0 := (key, o :: cur) :: List.remove_assoc key !__groups0;
    )
  ) customers;
  ) orders;
  let __res0 = ref [] in
  List.iter (fun (g_key, g_items) ->
    let g = List.rev g_items in
    __res0 := [("name", g_key); ("count", List.length g)] :: !__res0
  ) !__groups0;
  List.rev !__res0) in
  print_endline (String.concat " " (List.filter (fun s -> s <> "") ["--- Orders per customer ---"]));
  (try List.iter (fun s ->
    try
  print_endline (String.concat " " (List.filter (fun s -> s <> "") [(List.assoc "name" s); "orders:"; string_of_int (List.assoc "count" s))]));
    with Continue -> ()) stats with Break -> ())
