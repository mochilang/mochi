(* Generated by Mochi transpiler v0.10.33 on 2025-07-21 18:38 +0700 *)

let () =
  let customers = [[("id", 1); ("name", "Alice")]; [("id", 2); ("name", "Bob")]] in
  let orders = [[("id", 100); ("customerId", 1); ("total", 250)]; [("id", 101); ("customerId", 3); ("total", 80)]] in
  let result = (List.concat (List.map (fun o -> (List.filter_map (fun c -> if ((List.assoc "customerId" o) == (List.assoc "id" c)) then Some ([("orderId", (List.assoc "id" o)); ("customer", c); ("total", (List.assoc "total" o))]) else None) customers)) orders)) in
  print_endline (String.concat " " (List.filter (fun s -> s <> "") ["--- Left Join ---"]));
  (try List.iter (fun entry ->
    try
  print_endline (String.concat " " (List.filter (fun s -> s <> "") ["Order"; string_of_int (List.assoc "orderId" entry)); "customer"; (List.assoc "customer" entry); "total"; string_of_int (List.assoc "total" entry))]));
    with Continue -> ()) result with Break -> ())
