(* Generated by Mochi transpiler v0.10.33 on 2025-07-21 18:38 +0700 *)

let () =
  let customers = [[("id", 1); ("name", "Alice")]; [("id", 2); ("name", "Bob")]; [("id", 3); ("name", "Charlie")]; [("id", 4); ("name", "Diana")]] in
  let orders = [[("id", 100); ("customerId", 1); ("total", 250)]; [("id", 101); ("customerId", 2); ("total", 125)]; [("id", 102); ("customerId", 1); ("total", 300)]] in
  let result = (List.concat (List.map (fun c -> (List.filter_map (fun o -> if ((List.assoc "customerId" o) == (List.assoc "id" c)) then Some ([("customerName", (List.assoc "name" c)); ("order", o)]) else None) orders)) customers)) in
  print_endline (String.concat " " (List.filter (fun s -> s <> "") ["--- Right Join using syntax ---"]));
  (try List.iter (fun entry ->
    try
  if (List.assoc "order" entry) then (
  print_endline (String.concat " " (List.filter (fun s -> s <> "") ["Customer"; (List.assoc "customerName" entry); "has order"; string_of_int (List.assoc "id" (List.assoc "order" entry))); "- $"; string_of_int (List.assoc "total" (List.assoc "order" entry)))]));
  ) else (
  print_endline (String.concat " " (List.filter (fun s -> s <> "") ["Customer"; (List.assoc "customerName" entry); "has no orders"]));
  );
    with Continue -> ()) result with Break -> ())
