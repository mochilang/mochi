// Generated by Mochi Zig transpiler on 2025-07-21 10:58 +0000
const std = @import("std");
const Item = struct {
    n: i64,
    v: []u8,
};
pub fn main() void {
    const items: [_]Item = [_]Item{.{.n = 1, .v = "a"}, .{.n = 1, .v = "b"}, .{.n = 2, .v = "c"}};
    const result: [][]u8 = blk: {
        const arr = std.ArrayList(struct {
            key: i64,
            val: []u8,
        }).init(std.heap.page_allocator);
        for (items) |i| {
            arr.append(.{.key = i.n, .val = i.v});
        }
        const tmp = arr.toOwnedSlice();
        std.sort.sort(struct {
            key: i64,
            val: []u8,
        }, tmp, struct {
        }.lt);
        const result = std.ArrayList([]u8).init(std.heap.page_allocator);
        for (tmp) |it| {
            result.append(it.val);
        }
        const tmp = result.toOwnedSlice();
        break :blk tmp;
    };
    try std.io.getStdOut().writer().print("{any}\n", .{result});
}
