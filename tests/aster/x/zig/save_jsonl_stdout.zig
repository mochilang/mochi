// Generated by Mochi Zig transpiler on 2025-07-22 16:36 +0700
const std = @import("std");

const People = struct {
    name: []const u8,
    age: i64,
};

pub fn main() void {
    const people: [2]People = [2]People{.{ .name = "Alice", .age = 30 }, .{ .name = "Bob", .age = 25 }};
    for (people) |row| {
        const __j = std.json.stringifyAlloc(std.heap.page_allocator, row, .{}) catch unreachable;
        const _tmp = std.mem.replaceOwned(u8, std.heap.page_allocator, __j, ":", ": ") catch unreachable;
        defer std.heap.page_allocator.free(_tmp);
        const _line = std.mem.replaceOwned(u8, std.heap.page_allocator, _tmp, ",", ", ") catch unreachable;
        defer std.heap.page_allocator.free(_line);
        std.heap.page_allocator.free(__j);
        std.io.getStdOut().writer().print("{s}\n", .{_line}) catch unreachable;
    }
}
