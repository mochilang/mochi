// Generated by Mochi v0.10.35 on 2025-07-22 14:07:01 GMT+7
export interface Result { id: number; name: string }
export interface Customer { id: number; name: string }
export interface Order { id: number; customerId: number; total: number }
const customers: Customer[] = [{id: 1, name: "Alice"}, {id: 2, name: "Bob"}, {id: 3, name: "Charlie"}];
const orders: Order[] = [{id: 100, customerId: 1, total: 250}, {id: 101, customerId: 2, total: 125}, {id: 102, customerId: 1, total: 300}];
const result: Result[] = (() => {
    let _items = orders.map(v => [v]);
    {
        const _next = [];
        for (const it of _items) {
            for (const c of customers) {
                _next.push([...it, c]);
            }
        }
        _items = _next;
    }
    let _rows = _items;
    const result: Result[] = [];
    for (const r of _rows) {
        const [o, c] = r;
        result.push({orderId: o["id"], orderCustomerId: o["customerId"], pairedCustomerName: c["name"], orderTotal: o["total"]});
    }
    return result;
})();
console.log(String("--- Cross Join: All order-customer pairs ---"));
for (const entry of result) {
    console.log((String("Order") + " " + String(entry["orderId"]) + " " + String("(customerId:") + " " + String(entry["orderCustomerId"]) + " " + String(", total: $") + " " + String(entry["orderTotal"]) + " " + String(") paired with") + " " + String(entry["pairedCustomerName"])).trim());
}
