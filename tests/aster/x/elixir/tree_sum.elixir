# Code generated by Mochi transpiler 2025-07-22 06:37 +0700
defmodule Main do
  def sum_tree(t) do
    try do
      throw({:return, case t do
        (:Leaf) -> 0
        (%{left: left, value: value, right: right}) -> sum_tree(left) + value + sum_tree(right)
      end})
    catch ({:return, val}) -> val
    end
  end
  def main() do
    t = %{left: :Leaf, value: 1, right: %{left: :Leaf, value: 2, right: :Leaf}}
    IO.inspect(sum_tree(t))
  end
end
Main.main
