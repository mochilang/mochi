// Generated by Mochi transpiler v0.10.35 on 2025-07-22 16:28:11 GMT+7
#include <iostream>
#include <string>
#include <map>
#include <vector>
#include <sstream>
#include <iomanip>
#include <optional>
struct Person {
    std::string name;
    int age;
    std::string email;
    auto operator<=>(const Person) const;
};
struct AdultsItem {
    std::string name;
    std::string email;
    auto operator<=>(const AdultsItem) const;
};
std::ostream &operator<<(std::ostream &os, const Person &v) {
    os << '{' << "'name': " << "'" << v.name << "'" << ", " << "'age': " << v.age << ", " << "'email': " << "'" << v.email << "'" + '}';
    return os;
}
std::ostream &operator<<(std::ostream &os, const AdultsItem &v) {
    os << '{' << "'name': " << "'" << v.name << "'" << ", " << "'email': " << "'" << v.email << "'" + '}';
    return os;
}
auto people = std::vector{Person{.name = std::string("Alice"), .age = 30, .email = std::string("alice@example.com")}, Person{.name = std::string("Bob"), .age = 15, .email = std::string("bob@example.com")}, Person{.name = std::string("Charlie"), .age = 20, .email = std::string("charlie@example.com")}};
std::vector<AdultsItem> adults = ([] {
    std::vector<AdultsItem> __items;
    for (auto p : people) {
        if ((p.age >= 18)) {
            __items.push_back(AdultsItem{.name = p.name, .email = p.email});
        }
    }
    return __items;
}());
int main() {
    for (AdultsItem a : adults) {
        std::cout << a.name;
        std::cout << " ";
        std::cout << a.email;
        std::cout << std::endl;
    }
    return 0;
}
