{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE OverloadedRecordDot #-}
{-# LANGUAGE NoFieldSelectors #-}
import Prelude hiding  (cat, total, val)
-- Generated by Mochi transpiler v0.10.34 on 2025-07-22 05:31 GMT+7
import Data.List (intercalate, isInfixOf, union, intersect, nub, sortOn, (\\))
data MGroup = k a MGroup {key :: k, items :: [a]}
data GenType1 = GenType1 {cat :: String, val :: Int} deriving Show Eq
data GenType2 = GenType2 {cat :: String, total :: Int} deriving Show Eq
grouped = [GenType2 {cat = g.key, total = sum [x.val | x <- g.items]} | g <- sortOn (\g -> -sum [x.val | x <- g.items]) [MGroup {key = k, items = [i | i <- items, i.cat == k]} | k <- nub ([i.cat | i <- items])]]
items = [GenType1 {cat = "a", val = 3}, GenType1 {cat = "a", val = 1}, GenType1 {cat = "b", val = 5}, GenType1 {cat = "b", val = 2}]
main :: IO ()
main = do
    print (grouped)
