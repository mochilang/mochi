{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE OverloadedRecordDot #-}
{-# LANGUAGE NoFieldSelectors #-}
import Prelude hiding  (cat, flag, share, val)
-- Generated by Mochi transpiler v0.10.34 on 2025-07-21 23:34 GMT+7
import Data.List (intercalate, isInfixOf, union, intersect, nub, sortOn, (\\))
data MGroup = k a MGroup {key :: k, items :: [a]}
data GenType1 = GenType1 {cat :: String, val :: Int, flag :: Bool} deriving (Show)
data GenType2 = GenType2 {cat :: String, share :: Double} deriving (Show)
items = [GenType1 {cat = "a", val = 10, flag = True}, GenType1 {cat = "a", val = 5, flag = False}, GenType1 {cat = "b", val = 20, flag = True}]
result = sortOn (\g -> g.key) [GenType2 {cat = g.key, share = sum [x.flag x.val 0 | x <- g.items] div sum [x.val | x <- g.items]} | g <- [MGroup {key = k, items = [i | i <- items, i.cat == k]} | k <- nub ([i.cat | i <- items])]]
main :: IO ()
main = do
    print (result)
