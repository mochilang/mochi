{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE OverloadedRecordDot #-}
{-# LANGUAGE NoFieldSelectors #-}
import Prelude hiding  (c, count, customerId, id, name, o)
-- Generated by Mochi transpiler v0.10.34 on 2025-07-21 21:52 GMT+7
import Data.List (intercalate, isInfixOf, union, intersect, nub, sortOn, (\\))
data MGroup = k a MGroup {key :: k, items :: [a]}
data GenType1 = GenType1 {id :: Int, name :: String} deriving (Show)
data GenType2 = GenType2 {id :: Int, customerId :: Int} deriving (Show)
data GenType3 = GenType3 {name :: String, count :: Int} deriving (Show)
data GenType4 = GenType4 {o :: GenType2, c :: GenType1} deriving (Show)
customers = [GenType1 {id = 1, name = "Alice"}, GenType1 {id = 2, name = "Bob"}]
orders = [GenType2 {id = 100, customerId = 1}, GenType2 {id = 101, customerId = 1}, GenType2 {id = 102, customerId = 2}]
stats = [GenType3 {name = g.key, count = length g.items} | g <- [MGroup {key = k, items = [GenType4 {o = o, c = c} | o <- orders, c <- customers, o.customerId == c.id && c.name == k]} | k <- nub ([c.name | o <- orders, c <- customers, o.customerId == c.id])]]
main :: IO ()
main = do
    putStrLn "--- Orders per customer ---"
    mapM_ (\s -> do
        putStrLn (s.name ++ " " ++ "orders:" ++ " " ++ show s.count)) stats
