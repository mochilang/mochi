# Generated by Mochi transpiler v0.10.34 on 2025-07-21 19:40 +0700
NationsItem = Struct.new(:id, :name, keyword_init: true)
nations = [NationsItem.new(id: 1, name: "A"), NationsItem.new(id: 2, name: "B")]
SuppliersItem = Struct.new(:id, :nation, keyword_init: true)
suppliers = [SuppliersItem.new(id: 1, nation: 1), SuppliersItem.new(id: 2, nation: 2)]
Partsupp = Struct.new(:part, :supplier, :cost, :qty, keyword_init: true)
partsupp = [Partsupp.new(part: 100, supplier: 1, cost: 10, qty: 2), Partsupp.new(part: 100, supplier: 2, cost: 20, qty: 1), Partsupp.new(part: 200, supplier: 1, cost: 5, qty: 3)]
Filtered = Struct.new(:part, :value, keyword_init: true)
filtered = (begin
  _res = []
  partsupp.each do |ps|
    suppliers.each do |s|
      if s["id"] == ps["supplier"]
        nations.each do |n|
          if n["id"] == s["nation"]
            if n["name"] == "A"
              _res << Filtered.new(part: ps["part"], value: ps["cost"] * ps["qty"])
            end
          end
        end
      end
    end
  end
  _res
end)
Grouped = Struct.new(:part, :total, keyword_init: true)
grouped = (begin
  groups = {}
  filtered.each do |x|
    k = x["part"]
    groups[k] ||= []
    groups[k] << x
  end
  result = []
  groups.each do |k, items|
    g = {"key" => k, "items" => items}
    result << Grouped.new(part: g["key"], total: (begin
      _res = []
      g["items"].each do |r|
        _res << r["value"]
      end
      _res
    end).sum)
  end
  result
end)
puts("[" + (grouped).join(",") + "]")
