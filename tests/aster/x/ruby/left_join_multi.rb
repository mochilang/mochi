# Generated by Mochi transpiler v0.10.34 on 2025-07-22 00:02 +0700
CustomersItem = Struct.new(:id, :name, keyword_init: true)
customers = [CustomersItem.new(id: 1, name: "Alice"), CustomersItem.new(id: 2, name: "Bob")]
OrdersItem = Struct.new(:id, :customerId, keyword_init: true)
orders = [OrdersItem.new(id: 100, customerId: 1), OrdersItem.new(id: 101, customerId: 2)]
ItemsItem = Struct.new(:orderId, :sku, keyword_init: true)
items = [ItemsItem.new(orderId: 100, sku: "a")]
Result = Struct.new(:orderId, :name, :item, keyword_init: true)
result = (begin
  _res = []
  orders.each do |o|
    customers.each do |c|
      if o["customerId"] == c["id"]
        matched = false
        items.each do |i|
          if o["id"] == i["orderId"]
            matched = true
            _res << Result.new(orderId: o["id"], name: c["name"], item: i)
          end
        end
                unless matched
          i = nil
          _res << Result.new(orderId: o["id"], name: c["name"], item: i)
        end
      end
    end
  end
  _res
end)
puts("--- Left Join Multi ---")
result.each do |r|
  puts(([r.orderId, r.name, r.item]).map{ |x| if x.nil? then "None" elsif x == true then "True" elsif x == false then "False" elsif x.respond_to?(:to_h) then "{" + x.to_h.map{ |k, v| "'#{k}': #{v.is_a?(String) ? "\'" + v + "\'" : v.to_s}" }.join(", ") + "}" else x end }.join(" ").rstrip())
end
