# Generated by Mochi transpiler v0.10.36 on 2025-07-22 16:44 +0700
module PythonMath
  def self.pi()
    Math::PI
  end
  def self.e()
    Math::E
  end
  def self.sqrt(x)
    Math.sqrt(x)
  end
  def self.pow(x, y)
    x ** y
  end
  def self.sin(x)
    Math.sin(x)
  end
  def self.log(x)
    Math.log(x)
  end
end
math = PythonMath
r = 3.0
area = math.pi * math.pow(r, 2.0)
root = math.sqrt(49.0)
sin45 = math.sin(math.pi / 4.0)
log_e = math.log(math.e)
puts((["Circle area with r =", r, "=>", area]).map{ |x| if x.nil? then "None" elsif x == true then "True" elsif x == false then "False" elsif x.respond_to?(:to_h) then "{" + x.to_h.map{ |k, v| "'#{k}': #{v.is_a?(String) ? "\'" + v + "\'" : v.to_s}" }.join(", ") + "}" else x end }.join(" ").rstrip())
puts((["Square root of 49:", root]).map{ |x| if x.nil? then "None" elsif x == true then "True" elsif x == false then "False" elsif x.respond_to?(:to_h) then "{" + x.to_h.map{ |k, v| "'#{k}': #{v.is_a?(String) ? "\'" + v + "\'" : v.to_s}" }.join(", ") + "}" else x end }.join(" ").rstrip())
puts((["sin(Ï€/4):", sin45]).map{ |x| if x.nil? then "None" elsif x == true then "True" elsif x == false then "False" elsif x.respond_to?(:to_h) then "{" + x.to_h.map{ |k, v| "'#{k}': #{v.is_a?(String) ? "\'" + v + "\'" : v.to_s}" }.join(", ") + "}" else x end }.join(" ").rstrip())
puts((["log(e):", log_e]).map{ |x| if x.nil? then "None" elsif x == true then "True" elsif x == false then "False" elsif x.respond_to?(:to_h) then "{" + x.to_h.map{ |k, v| "'#{k}': #{v.is_a?(String) ? "\'" + v + "\'" : v.to_s}" }.join(", ") + "}" else x end }.join(" ").rstrip())
