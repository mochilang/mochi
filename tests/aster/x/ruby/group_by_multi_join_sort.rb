# Generated by Mochi transpiler v0.10.34 on 2025-07-21 21:13 +0700
Nation = Struct.new(:n_nationkey, :n_name, keyword_init: true)
nation = [Nation.new(n_nationkey: 1, n_name: "BRAZIL")]
Customer = Struct.new(:c_custkey, :c_name, :c_acctbal, :c_nationkey, :c_address, :c_phone, :c_comment, keyword_init: true)
customer = [Customer.new(c_custkey: 1, c_name: "Alice", c_acctbal: 100, c_nationkey: 1, c_address: "123 St", c_phone: "123-456", c_comment: "Loyal")]
OrdersItem = Struct.new(:o_orderkey, :o_custkey, :o_orderdate, keyword_init: true)
orders = [OrdersItem.new(o_orderkey: 1000, o_custkey: 1, o_orderdate: "1993-10-15"), OrdersItem.new(o_orderkey: 2000, o_custkey: 1, o_orderdate: "1994-01-02")]
Lineitem = Struct.new(:l_orderkey, :l_returnflag, :l_extendedprice, :l_discount, keyword_init: true)
lineitem = [Lineitem.new(l_orderkey: 1000, l_returnflag: "R", l_extendedprice: 1000, l_discount: 0.1), Lineitem.new(l_orderkey: 2000, l_returnflag: "N", l_extendedprice: 500, l_discount: 0)]
start_date = "1993-10-01"
end_date = "1994-01-01"
Result = Struct.new(:c_custkey, :c_name, :revenue, :c_acctbal, :n_name, :c_address, :c_phone, :c_comment, keyword_init: true)
result = (begin
  groups = {}
  customer.each do |c|
    orders.each do |o|
      if o["o_custkey"] == c["c_custkey"]
        lineitem.each do |l|
          if l["l_orderkey"] == o["o_orderkey"]
            nation.each do |n|
              if n["n_nationkey"] == c["c_nationkey"]
                if o["o_orderdate"] >= start_date && o["o_orderdate"] < end_date && l["l_returnflag"] == "R"
                  k = {"c_custkey" => c.c_custkey, "c_name" => c.c_name, "c_acctbal" => c.c_acctbal, "c_address" => c.c_address, "c_phone" => c.c_phone, "c_comment" => c.c_comment, "n_name" => n.n_name}
                  groups[k] ||= []
                  groups[k] << {"c" => c, "o" => o, "l" => l, "n" => n}
                end
              end
            end
          end
        end
      end
    end
  end
  pairs = groups.to_a
  pairs = pairs.each_with_index.sort_by do |(k, items), __i|
    g = {"key" => k, "items" => items}
    [-(begin
      _res = []
      g["items"].each do |x|
        _res << x["l"]["l_extendedprice"] * (1 - x["l"]["l_discount"])
      end
      _res
    end).sum, __i]
  end.map{ |x, _| x }
  result = []
  pairs.each do |k, items|
    g = {"key" => k, "items" => items}
    result << Result.new(c_custkey: g["key"]["c_custkey"], c_name: g["key"]["c_name"], revenue: (begin
      _res = []
      g["items"].each do |x|
        _res << x["l"]["l_extendedprice"] * (1 - x["l"]["l_discount"])
      end
      _res
    end).sum, c_acctbal: g["key"]["c_acctbal"], n_name: g["key"]["n_name"], c_address: g["key"]["c_address"], c_phone: g["key"]["c_phone"], c_comment: g["key"]["c_comment"])
  end
  result
end)
puts(("[" + (result).map{ |x| x.is_a?(String) ? "\'" + x + "\'" : x.to_s }.join(", ") + "]"))
