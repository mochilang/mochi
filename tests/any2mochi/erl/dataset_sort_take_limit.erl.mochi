// line 5
type Product {
  name: any
  price: any
}
// line 7
fun main(_) {
  Products =
  [#product{name = "Laptop", price = 1500},
  #product{name = "Smartphone", price = 900},
  #product{name = "Tablet", price = 600},
  #product{name = "Monitor", price = 300},
  #product{name = "Keyboard", price = 100},
  #product{name = "Mouse", price = 50},
  #product{name = "Headphones", price = 200}]
  Expensive =
  fun() ->
  Items =
  [
  {-P#product.price, P} ||
  P <- Products
  ],
  Sorted =
  begin
  SPairs =
  lists:sort(fun({A, _}, {B, _}) ->
  A =< B
  end,
  Items),
  [
  V ||
  {_, V} <- SPairs
  ]
  end,
  Skipped =
  case 1 of
  N when N > 0 ->
  lists:nthtail(N, Sorted);
  _ ->
  Sorted
  end,
  Taken = lists:sublist(Skipped, 3),
  Taken
  end()
  mochi_print(["--- Top products (excluding most expensive) ---"])
  mochi_foreach(fun(Item) ->
  mochi_print([Item#product.name,
  "costs $",
  Item#product.price])
  end,
  Expensive)
}
// line 27
fun mochi_print(Args) {
  Strs =
  [
  mochi_format(A) ||
  A <- Args
  ]
  print("~s~n", [lists:flatten(Strs)])
}
// line 31
fun mochi_format(X) {
  integer_to_list(X)
}
// line 36
fun mochi_foreach(F, L) {
  try
  mochi_foreach_loop(F, L)
  catch
  throw:mochi_break ->
  ok
  end
}
// line 39
fun mochi_foreach_loop(_, _) {
  ok
}
main()
