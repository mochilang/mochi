# Generated by Mochi C# compiler
type Program {
}
fun Program.twoSum(nums: list<int>, target: int): list<int> {
  var n = nums.Length
  for i in 0..n {
  for j in (i + 1)..n {
  if ((_indexList(nums, i) + _indexList(nums, j)) == target) {
  return new dynamic[] { i, j }
  }
  }
  }
  return new long[] { (-1), (-1) }
}
fun Program.Main() {
  var result = twoSum(new long[] { 2, 7, 11, 15 }, 9)
  print(_indexList(result, 0))
  print(_indexList(result, 1))
}
fun Program._indexList(l: any, i: int): any {
  var list = l as System.Collections.IList
  if list == null) throw new Exception("index() expects list") {
  if i < 0) i += list.Count {
  if i < 0 || i >= list.Count) throw new Exception("index out of range") {
  return list[(int)i]
}
