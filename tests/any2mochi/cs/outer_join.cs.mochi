# Generated by Mochi C# compiler
type Program {
}
fun Program.Main() {
  var customers = new Dictionary<string, dynamic>[] { new Dictionary<string, dynamic> { { "id", 1 }, { "name", "Alice" } }, new Dictionary<string, dynamic> { { "id", 2 }, { "name", "Bob" } }, new Dictionary<string, dynamic> { { "id", 3 }, { "name", "Charlie" } }, new Dictionary<string, dynamic> { { "id", 4 }, { "name", "Diana" } } }
  Dictionary<string, long>[] orders = new Dictionary<string, long>[] { new Dictionary<string, long> { { "id", 100 }, { "customerId", 1 }, { "total", 250 } }, new Dictionary<string, long> { { "id", 101 }, { "customerId", 2 }, { "total", 125 } }, new Dictionary<string, long> { { "id", 102 }, { "customerId", 1 }, { "total", 300 } }, new Dictionary<string, long> { { "id", 103 }, { "customerId", 5 }, { "total", 80 } } }
  Dictionary<string, Dictionary<string, long>>[] result = new Func<List<Dictionary<string, dynamic>>>(() => {
  var _res = new List<Dictionary<string, dynamic>>()
  for o in orders {
  var _joinItems = new List<dynamic>(customers)
  var _matched = new bool[_joinItems.Count]
  for o in orders {
  var _m = false
  for int i in 0.._joinItems.Count {
  var c = _joinItems[i]
  if !((o.customerId == c.id))) continue {
  _m = true
  _matched[i] = true
  _res.Add(new Dictionary<string, dynamic> { { "order", o }, { "customer", c } })
  }
  if !_m {
  var c = null
  _res.Add(new Dictionary<string, dynamic> { { "order", o }, { "customer", c } })
  }
  }
  for int i in 0.._joinItems.Count {
  if !_matched[i] {
  var o = null
  var c = _joinItems[i]
  _res.Add(new Dictionary<string, dynamic> { { "order", o }, { "customer", c } })
  }
  }
  }
  return _res
  })()
  print("--- Outer Join ---")
  for row in result {
  if row.order {
  if row.customer {
  print(string.Join(" ", new [] { Convert.ToString("Order"), Convert.ToString(row.order.id), Convert.ToString("by"), Convert.ToString(row.customer.name), Convert.ToString("- $"), Convert.ToString(row.order.total) }))
  } else {
  print(string.Join(" ", new [] { Convert.ToString("Order"), Convert.ToString(row.order.id), Convert.ToString("by"), Convert.ToString("Unknown"), Convert.ToString("- $"), Convert.ToString(row.order.total) }))
  }
  } else {
  print(string.Join(" ", new [] { Convert.ToString("Customer"), Convert.ToString(row.customer.name), Convert.ToString("has no orders") }))
  }
  }
}
