# Generated by Mochi C# compiler
type Leaf {
}
type Node {
  left
  value: int
  right
}
type Program {
}
fun Program.depth(t): int {
  return new Func<long>(() => {
  var _t = t
  if _t is Leaf) return 0 {
  if _t is Node _tmp0 {
  var l = _tmp0.left
  var r = _tmp0.right
  return ((depth(l) + depth(r)) + 1)
  }
  return default
  })()
}
fun Program.Main() {
  print(depth(new Node { left = new Leaf {  }, value = 0, right = new Leaf {  } }))
}
