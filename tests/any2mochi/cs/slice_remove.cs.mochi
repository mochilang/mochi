# Generated by Mochi C# compiler
type Program {
}
fun Program.remove(nums: list<int>, i: int): list<int> {
  return (_sliceList(nums, 0, i) + _sliceList(nums, (i + 1), nums.Length))
}
fun Program.Main() {
  print(remove(new long[] { 1, 2, 3, 4 }, 1))
}
fun Program._sliceList(l: any, i: int, j: int): list<any> {
  var list = l as System.Collections.IList
  if list == null) return new List<dynamic>() {
  var start = i
  var end = j
  var n = list.Count
  if start < 0) start += n {
  if end < 0) end += n {
  if start < 0) start = 0 {
  if end > n) end = n {
  if end < start) end = start {
  var res = new List<dynamic>()
  for int k in (int)start..(int)end {
  return res
}
