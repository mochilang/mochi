# Generated by Mochi C# compiler
type Customer {
  id: int
  name: string
}
type Order {
  id: int
  customerId: int
  total: int
}
type PairInfo {
  orderId: int
  orderCustomerId: int
  pairedCustomerName: string
  orderTotal: int
}
type Program {
}
fun Program.Main() {
  var customers = new Customer[] { new Customer { id = 1, name = "Alice" }, new Customer { id = 2, name = "Bob" }, new Customer { id = 3, name = "Charlie" } }
  var orders = new Order[] { new Order { id = 100, customerId = 1, total = 250 }, new Order { id = 101, customerId = 2, total = 125 }, new Order { id = 102, customerId = 1, total = 300 } }
  var result = new Func<List<PairInfo>>(() => {
  var _res = new List<PairInfo>()
  for o in orders {
  for c in customers {
  _res.Add(new PairInfo { orderId = o.id, orderCustomerId = o.customerId, pairedCustomerName = c.name, orderTotal = o.total })
  }
  }
  return _res
  })()
  print("--- Cross Join: All order-customer pairs ---")
  for entry in result {
  print(string.Join(" ", new [] { Convert.ToString("Order"), Convert.ToString(entry.orderId), Convert.ToString("(customerId:"), Convert.ToString(entry.orderCustomerId), Convert.ToString(", total: $"), Convert.ToString(entry.orderTotal), Convert.ToString(") paired with"), Convert.ToString(entry.pairedCustomerName) }))
  }
}
