fun searchMatrix(matrix, target) {
  let m = len(matrix)
  if (m == 0) {
    return false
  }
  let n = len(_indexList(matrix, 0))
  var left: = 0
  var right: = ((m * n) - 1)
  while (left <= right) {
    let mid = (left + (((right - left)) / 2))
    let row = (mid / n)
    let col = (mid % n)
    let value = matrix[row][col]
    if (value == target) {
      return true
    else if (value < target) {
      left = (mid + 1)
    else {
      right = (mid - 1)
    }
  }
  return false
}
print(searchMatrix(scala.collection.mutable.ArrayBuffer(scala.collection.mutable.ArrayBuffer(1, 3, 5, 7), scala.collection.mutable.ArrayBuffer(10, 11, 16, 20), scala.collection.mutable.ArrayBuffer(23, 30, 34, 60)), 3))
print(searchMatrix(scala.collection.mutable.ArrayBuffer(scala.collection.mutable.ArrayBuffer(1, 3, 5, 7), scala.collection.mutable.ArrayBuffer(10, 11, 16, 20), scala.collection.mutable.ArrayBuffer(23, 30, 34, 60)), 13))
