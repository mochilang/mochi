type list_int {
  len: int
  *data: int
}

type list_list_int {
  len: int
  *data: list<int>
}

fun slice_list_int(v: list<int>, start: int, end: int): list<int> {
  if (start < 0)
  start = start + v.len
  if (end < 0)
  end = end + v.len
  if (start < 0)
  start = 0
  if (end > v.len)
  end = v.len
  if (start > end)
  start = end
  list_int r = list_int_create(end - start)
  for (int i = 0; i < r.len; i++)
  r.data[i] = v.data[start + i]
  return r
}
fun _print_list_int(v: list<int>) {
  print("[")
  for (int i = 0; i < v.len; i++) {
    if (i > 0)
    print(" ")
    print(v.data[i])
  }
  print("]")
}
list_int _t1 = list_int_create(4)
_t1.data[0] = 1
_t1.data[1] = 2
_t1.data[2] = 3
_t1.data[3] = 4
list_int _t2 = slice_list_int(_t1, 1, 3)
_print_list_int(_t2)
print("\n")
