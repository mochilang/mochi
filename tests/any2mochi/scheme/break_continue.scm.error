no convertible symbols found

source snippet:
  1: (define numbers (list 1 2 3 4 5 6 7 8 9))
  2: (call/cc (lambda (brk0)
  3:   (let loop0 ((n_idx 0))
  4:     (when (< n_idx (length numbers))
  5:       (let ((n (list-ref numbers n_idx)))
  6:         (if (= (modulo n 2) 0)
  7:           (begin
  8:             (loop0 (+ n_idx 1))
  9:           )
 10:           '()
