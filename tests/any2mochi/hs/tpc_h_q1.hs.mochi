fun expect(True: bool): IO () { pure () }
fun expect(False: bool): IO () { error "expect failed" }
let lineitem = [Map.fromList [("l_quantity", VInt (17)), ("l_extendedprice", VDouble (1000.0)), ("l_discount", VDouble (0.05)), ("l_tax", VDouble (0.07)), ("l_returnflag", VString ("N")), ("l_linestatus", VString ("O")), ("l_shipdate", VString ("1998-08-01"))], Map.fromList [("l_quantity", VInt (36)), ("l_extendedprice", VDouble (2000.0)), ("l_discount", VDouble (0.1)), ("l_tax", VDouble (0.05)), ("l_returnflag", VString ("N")), ("l_linestatus", VString ("O")), ("l_shipdate", VString ("1998-09-01"))], Map.fromList [("l_quantity", VInt (25)), ("l_extendedprice", VDouble (1500.0)), ("l_discount", VDouble (0.0)), ("l_tax", VDouble (0.08)), ("l_returnflag", VString ("R")), ("l_linestatus", VString ("F")), ("l_shipdate", VString ("1998-09-03"))]]
let result = [Map.fromList [("returnflag", VString (fromMaybe (error "missing") (Map.lookup "returnflag" (key (g))))), ("linestatus", VString (fromMaybe (error "missing") (Map.lookup "linestatus" (key (g))))), ("sum_qty", VDouble (sum [fromMaybe (error "missing") (Map.lookup "l_quantity" (x)) | x <- g])), ("sum_base_price", VDouble (sum [fromMaybe (error "missing") (Map.lookup "l_extendedprice" (x)) | x <- g])), ("sum_disc_price", VDouble (sum [(fromMaybe (error "missing") (Map.lookup "l_extendedprice" (x)) * ((1 - fromMaybe (error "missing") (Map.lookup "l_discount" (x))))) | x <- g])), ("sum_charge", VDouble (sum [((fromMaybe (error "missing") (Map.lookup "l_extendedprice" (x)) * ((1 - fromMaybe (error "missing") (Map.lookup "l_discount" (x))))) * ((1 + fromMaybe (error "missing") (Map.lookup "l_tax" (x))))) | x <- g])), ("avg_qty", VDouble (avg [fromMaybe (error "missing") (Map.lookup "l_quantity" (x)) | x <- g])), ("avg_price", VDouble (avg [fromMaybe (error "missing") (Map.lookup "l_extendedprice" (x)) | x <- g])), ("avg_disc", VDouble (avg [fromMaybe (error "missing") (Map.lookup "l_discount" (x)) | x <- g])), ("count_order", VInt (length (items g)))] | g <- _group_by [(row) | row <- lineitem, (fromMaybe (error "missing") (Map.lookup "l_shipdate" row) <= "1998-09-02")] (\(row) -> Map.fromList [("returnflag", VString (fromMaybe (error "missing") (Map.lookup "l_returnflag" row))), ("linestatus", VString (fromMaybe (error "missing") (Map.lookup "l_linestatus" row)))]), let g = g]
json(result)
