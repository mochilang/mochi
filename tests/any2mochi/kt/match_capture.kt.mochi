type Leaf {}
type Node {
  left: Tree
  value: int
  right: Tree
}
fun depth(t) {
  return run {
  let _t = t
  when {
  _t is Leaf -> 0
  _t is Node -> {
  let l = _t.left
  let r = _t.right
  ((depth(l) + depth(r)) + 1)
}
}
}
}
fun main() {
  print(depth(Node(left = Leaf(), value = 0, right = Leaf())))
}
main()
