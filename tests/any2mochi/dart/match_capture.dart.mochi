fun depth(t: any): any {
  return (() {
  let _t = t
  if (_t is Leaf) { return 0; }
  if (_t is Node) { return ((l, r) { return ((depth(l) + depth(r)) + 1); })((_t as Node).left, (_t as Node).right); }
  return null
  })()
}
fun main() {
  print(depth(Node(left: Leaf(), value: 0, right: Leaf())))
}
