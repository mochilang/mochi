fun fromList(nums: any): any {
}
fun helper(lo: any, hi: any): any {
  if ((lo >= hi)) {
    return Leaf()
  }
  dynamic mid = (((lo + hi)) ~/ 2)
  return Node(left: helper(lo, mid), value: nums[mid], right: helper((mid + 1), hi))
}
fun inorder(t: any): any {
  return (() {
  let _t = t
  if (_t is Leaf) { return []; }
  if (_t is Node) { return ((l, v, r) { return ((inorder(l) + [v]) + inorder(r)); })((_t as Node).left, (_t as Node).value, (_t as Node).right); }
  return null
  })()
}
fun main() {
  print(inorder(fromList([-10, -3, 0, 5, 9])))
}
