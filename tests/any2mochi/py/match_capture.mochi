fun depth(t) {
  return (
  let lambda _t0 = t: ( 0 if isinstance(_t0, Leaf) else ( (lambda l, r: ((depth(l) + depth(r)) + 1))(_t0.left, _t0.right) if isinstance(_t0, Node) else None ) )
  )()
}
type Tree {}
type Leaf {}
type Node {
  left: Tree
  value: int
  right: Tree
}
fun main() {
  print(depth(Node(left=Leaf(), value=0, right=Leaf())))
}
