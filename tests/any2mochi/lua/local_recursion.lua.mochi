fun fromList(nums) {
  fun helper(lo, hi) {
    if lo >= hi {
      return { "__name": "Leaf" }
    }
    let mid = __div(__add(lo, hi), 2)
    return { "__name": "Node", "left": helper(lo, mid), "value": __index(nums, mid), "right": helper(__add(mid, 1), hi) }
  }
  return helper(0, len(nums))
}
fun inorder(t) {
  return fun() {
    let _t0 = t
    if _t0["__name"] == "Leaf" {
      return []
    }
    if _t0["__name"] == "Node" {
      return fun(l, v, r) {
    return __add(__add(inorder(l), [v]), inorder(r))
}(_t0["left"], _t0["value"], _t0["right"])
    }
    return null
}()
}
print(inorder(fromList([-10, -3, 0, 5, 9])))
