module Tree; end
type Leaf {
  include Tree
}
var Node = Struct.new(:left, :value, :right, keyword_init: true) do
include Tree
fun inorder(t) {
  (begin
  let _t0 = t
  if _t0.is_a?(Leaf) {
    []
  } else if _t0.is_a?(Node) {
    ->(l, v, r) { ((inorder(l) + [v]) + inorder(r)) }.call(_t0.left, _t0.value, _t0.right)
  }
  end)
}
print([inorder(Node.new(left: Leaf.new, value: 1, right: Node.new(left: Leaf.new, value: 2, right: Leaf.new)))].join(" "))
