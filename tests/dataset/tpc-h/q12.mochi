let orders = [
  { o_orderkey: 1, o_orderpriority: "1-URGENT" },
  { o_orderkey: 2, o_orderpriority: "3-MEDIUM" }
]

let lineitem = [
  {
    l_orderkey: 1,
    l_shipmode: "MAIL",
    l_commitdate: "1994-02-10",
    l_receiptdate: "1994-02-15",
    l_shipdate: "1994-02-05"
  },
  {
    l_orderkey: 2,
    l_shipmode: "SHIP",
    l_commitdate: "1994-03-01",
    l_receiptdate: "1994-02-28",
    l_shipdate: "1994-02-27"
  } // commitdate > receiptdate excluded
]

let result =
  from l in lineitem
  join o in orders on o.o_orderkey == l.l_orderkey
  where
    (l.l_shipmode in ["MAIL", "SHIP"]) &&
    (l.l_commitdate < l.l_receiptdate) &&
    (l.l_shipdate < l.l_commitdate) &&
    (l.l_receiptdate >= "1994-01-01") &&
    (l.l_receiptdate < "1995-01-01")
  group by l.l_shipmode into g
  sort by g.key
  select {
    l_shipmode: g.key,
    high_line_count: sum(from x in g select if x.o.o_orderpriority in ["1-URGENT", "2-HIGH"] { 1 } else { 0 }),
    low_line_count: sum(from x in g select if !(x.o.o_orderpriority in ["1-URGENT", "2-HIGH"]) { 1 } else { 0 })
  }

json(result)

test "Q12 counts lineitems by ship mode and priority" {
  expect result == [
    {
      l_shipmode: "MAIL",
      high_line_count: 1,
      low_line_count: 0
    }
  ]
}
