/tmp/q3.scala:22: error: q3.G does not take parameters
    val order_line_join = (((for { o: Order <- valid_orders; l: Lineitem <- valid_lineitems; if (l.l_orderkey).asInstanceOf[Int] == o.o_orderkey } yield (G(o_orderkey = o.o_orderkey, o_orderdate = o.o_orderdate, o_shippriority = o.o_shippriority), OrderLineJoin(o = o, l = l))).groupBy(_._1).map{ case(k,list) => _Group(k, list.map(_._2)) }.toList).sortBy(g => List(-(for { r: OrderLineJoin <- g } yield r.l.l_extendedprice * (1 - r.l.l_discount)).sum, g.key("o_orderdate")))).map{ g => Map("l_orderkey" -> g.key("o_orderkey"), "revenue" -> (for { r: OrderLineJoin <- g } yield r.l.l_extendedprice * (1 - r.l.l_discount)).sum, "o_orderdate" -> g.key("o_orderdate"), "o_shippriority" -> g.key("o_shippriority")) }.toList
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ^
one error found
