// Generated by Mochi compiler v0.10.25 on 2025-07-13T16:55:07Z
object q6 {
  case class Lineitem(l_extendedprice: Double, l_discount: Double, l_shipdate: String, l_quantity: Int)

  def main(args: Array[String]): Unit = {
    val lineitem = List(Lineitem(l_extendedprice = 1000, l_discount = 0.06, l_shipdate = "1994-02-15", l_quantity = 10), Lineitem(l_extendedprice = 500, l_discount = 0.07, l_shipdate = "1994-03-10", l_quantity = 23), Lineitem(l_extendedprice = 400, l_discount = 0.04, l_shipdate = "1994-04-10", l_quantity = 15), Lineitem(l_extendedprice = 200, l_discount = 0.06, l_shipdate = "1995-01-01", l_quantity = 5))
    val result = (for { l <- lineitem; if (l.l_shipdate >= "1994-01-01") && (l.l_shipdate < "1995-01-01") && (l.l_discount >= 0.05) && (l.l_discount <= 0.07) && (l.l_quantity < 24) } yield l.l_extendedprice * l.l_discount).sum
    println(scala.util.parsing.json.JSONArray(result.asInstanceOf[List[Any]]).toString())
    assert(result == ((1000 * 0.06) + (500 * 0.07)))
  }
}
