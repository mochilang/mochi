/tmp/TestCPPCompiler_TPCHQueriesq51207832868/001/prog.cpp:85:12: error: ‘n’ was not declared in this scope
   85 |   decltype(n.n_name) nation;
      |            ^
/tmp/TestCPPCompiler_TPCHQueriesq51207832868/001/prog.cpp:85:12: error: ‘n’ was not declared in this scope
/tmp/TestCPPCompiler_TPCHQueriesq51207832868/001/prog.cpp:86:13: error: ‘l’ was not declared in this scope
   86 |   decltype((l.l_extendedprice * ((1 - l.l_discount)))) revenue;
      |             ^
/tmp/TestCPPCompiler_TPCHQueriesq51207832868/001/prog.cpp:86:39: error: ‘l’ was not declared in this scope
   86 |   decltype((l.l_extendedprice * ((1 - l.l_discount)))) revenue;
      |                                       ^
/tmp/TestCPPCompiler_TPCHQueriesq51207832868/001/prog.cpp:86:13: error: ‘l’ was not declared in this scope
   86 |   decltype((l.l_extendedprice * ((1 - l.l_discount)))) revenue;
      |             ^
/tmp/TestCPPCompiler_TPCHQueriesq51207832868/001/prog.cpp:86:39: error: ‘l’ was not declared in this scope
   86 |   decltype((l.l_extendedprice * ((1 - l.l_discount)))) revenue;
      |                                       ^
/tmp/TestCPPCompiler_TPCHQueriesq51207832868/001/prog.cpp: In lambda function:
/tmp/TestCPPCompiler_TPCHQueriesq51207832868/001/prog.cpp:251:26: error: ‘n’ was not declared in this scope
  251 |     std::vector<decltype(n)> __items;
      |                          ^
/tmp/TestCPPCompiler_TPCHQueriesq51207832868/001/prog.cpp:251:28: error: template argument 1 is invalid
  251 |     std::vector<decltype(n)> __items;
      |                            ^
/tmp/TestCPPCompiler_TPCHQueriesq51207832868/001/prog.cpp:251:28: error: template argument 2 is invalid
/tmp/TestCPPCompiler_TPCHQueriesq51207832868/001/prog.cpp:258:17: error: request for member ‘push_back’ in ‘__items’, which is of non-class type ‘int’
  258 |         __items.push_back(n);
      |                 ^~~~~~~~~
/tmp/TestCPPCompiler_TPCHQueriesq51207832868/001/prog.cpp: In lambda function:
/tmp/TestCPPCompiler_TPCHQueriesq51207832868/001/prog.cpp:267:25: error: ‘begin’ was not declared in this scope; did you mean ‘std::begin’?
  267 |           for (auto n : asia_nations) {
      |                         ^~~~~~~~~~~~
      |                         std::begin
In file included from /usr/include/c++/13/string:53,
                 from /usr/include/c++/13/bits/locale_classes.h:40,
                 from /usr/include/c++/13/bits/ios_base.h:41,
                 from /usr/include/c++/13/ios:44,
                 from /usr/include/c++/13/ostream:40,
                 from /usr/include/c++/13/iostream:41,
                 from /tmp/TestCPPCompiler_TPCHQueriesq51207832868/001/prog.cpp:3:
/usr/include/c++/13/bits/range_access.h:114:37: note: ‘std::begin’ declared here
  114 |   template<typename _Tp> const _Tp* begin(const valarray<_Tp>&) noexcept;
      |                                     ^~~~~
/tmp/TestCPPCompiler_TPCHQueriesq51207832868/001/prog.cpp:267:25: error: ‘end’ was not declared in this scope; did you mean ‘std::end’?
  267 |           for (auto n : asia_nations) {
      |                         ^~~~~~~~~~~~
      |                         std::end
/usr/include/c++/13/bits/range_access.h:116:37: note: ‘std::end’ declared here
  116 |   template<typename _Tp> const _Tp* end(const valarray<_Tp>&) noexcept;
      |                                     ^~~
/tmp/TestCPPCompiler_TPCHQueriesq51207832868/001/prog.cpp: In function ‘int main()’:
/tmp/TestCPPCompiler_TPCHQueriesq51207832868/001/prog.cpp:343:5: error: conversion from ‘vector<Result>’ to non-scalar type ‘vector<LocalCustomerSupplierOrder>’ requested
  292 |   std::vector<LocalCustomerSupplierOrder> result = ([&]() {
      |                                                    ~~~~~~~~
  293 |     std::vector<__struct8> __groups;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  294 |     for (auto r : local_customer_supplier_orders) {
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  295 |       auto __key = r.nation;
      |       ~~~~~~~~~~~~~~~~~~~~~~
  296 |       bool __found = false;
      |       ~~~~~~~~~~~~~~~~~~~~~
  297 |       for (auto &__g : __groups) {
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  298 |         if (__g.key == __key) {
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  299 |           __g.items.push_back(LocalCustomerSupplierOrder{r});
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  300 |           __found = true;
      |           ~~~~~~~~~~~~~~~
  301 |           break;
      |           ~~~~~~
  302 |         }
      |         ~
  303 |       }
      |       ~
  304 |       if (!__found) {
      |       ~~~~~~~~~~~~~~~
  305 |         __groups.push_back(
      |         ~~~~~~~~~~~~~~~~~~~
  306 |             __struct8{__key, std::vector<LocalCustomerSupplierOrder>{
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  307 |                                  LocalCustomerSupplierOrder{r}}});
      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  308 |       }
      |       ~
  309 |     }
      |     ~
  310 |     std::vector<std::pair<double, Result>> __items;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  311 |     for (auto &g : __groups) {
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~
  312 |       __items.push_back(
      |       ~~~~~~~~~~~~~~~~~~
  313 |           {(-([&](auto v) {
      |           ~~~~~~~~~~~~~~~~~
  314 |              return std::accumulate(v.begin(), v.end(), 0.0);
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  315 |            })(([&]() {
      |            ~~~~~~~~~~~
  316 |              std::vector<
      |              ~~~~~~~~~~~~
  317 |                  decltype(std::declval<LocalCustomerSupplierOrder>().revenue)>
      |                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  318 |                  __items;
      |                  ~~~~~~~~
  319 |              for (auto x : g.items) {
      |              ~~~~~~~~~~~~~~~~~~~~~~~~
  320 |                __items.push_back(x.revenue);
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  321 |              }
      |              ~
  322 |              return __items;
      |              ~~~~~~~~~~~~~~~
  323 |            })())),
      |            ~~~~~~~
  324 |            Result{
      |            ~~~~~~~
  325 |                g.key, ([&](auto v) {
      |                ~~~~~~~~~~~~~~~~~~~~~
  326 |                  return std::accumulate(v.begin(), v.end(), 0.0);
      |                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  327 |                })(([&]() {
      |                ~~~~~~~~~~~
  328 |                  std::vector<decltype(std::declval<LocalCustomerSupplierOrder>()
      |                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  329 |                                           .revenue)>
      |                                           ~~~~~~~~~~
  330 |                      __items;
      |                      ~~~~~~~~
  331 |                  for (auto x : g.items) {
      |                  ~~~~~~~~~~~~~~~~~~~~~~~~
  332 |                    __items.push_back(x.revenue);
      |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  333 |                  }
      |                  ~
  334 |                  return __items;
      |                  ~~~~~~~~~~~~~~~
  335 |                })())}});
      |                ~~~~~~~~~
  336 |     }
      |     ~
  337 |     std::sort(__items.begin(), __items.end(),
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  338 |               [](auto &a, auto &b) { return a.first < b.first; });
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  339 |     std::vector<Result> __res;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~
  340 |     for (auto &p : __items)
      |     ~~~~~~~~~~~~~~~~~~~~~~~
  341 |       __res.push_back(p.second);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~
  342 |     return __res;
      |     ~~~~~~~~~~~~~
  343 |   })();
      |   ~~^~
