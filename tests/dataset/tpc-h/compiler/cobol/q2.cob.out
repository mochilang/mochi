>>SOURCE FORMAT FREE
IDENTIFICATION DIVISION.
PROGRAM-ID. MAIN.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 REGION OCCURS 2 TIMES PIC 9.
01 NATION OCCURS 2 TIMES PIC 9.
01 SUPPLIER OCCURS 2 TIMES PIC 9.
01 PART OCCURS 2 TIMES PIC 9.
01 PARTSUPP OCCURS 2 TIMES PIC 9.
01 R PIC 9.
01 N PIC 9.
01 EUROPE_NATIONS OCCURS 4 TIMES PIC 9.
01 TMP0 PIC 9.
01 TMP1 PIC 9.
01 IDX PIC 9.
01 IDX2 PIC 9.
01 S PIC 9.
01 EUROPE_SUPPLIERS OCCURS 2 TIMES PIC 9.
01 TMP2 PIC 9.
01 TMP3 PIC 9.
01 P PIC 9.
01 TARGET_PARTS OCCURS 2 TIMES PIC 9.
01 TMP4 PIC 9.
01 TMP5 PIC 9.
01 PS PIC 9.
01 TARGET_PARTSUPP OCCURS 2 TIMES PIC 9.
01 TMP6 PIC 9.
01 TMP7 PIC 9.
01 IDX3 PIC 9.
01 X PIC 9.
01 COSTS OCCURS 0 TIMES PIC 9.
01 TMP8 PIC 9.
01 TMP9 PIC 9.
01 MIN_COST PIC 9.
01 RESULT OCCURS 0 TIMES PIC 9.
01 TMP10 PIC 9.
01 TMP11 PIC 9.

PROCEDURE DIVISION.
    MOVE 0 TO REGION(1)
    MOVE 0 TO REGION(2)
    MOVE 0 TO NATION(1)
    MOVE 0 TO NATION(2)
    MOVE 0 TO SUPPLIER(1)
    MOVE 0 TO SUPPLIER(2)
    MOVE 0 TO PART(1)
    MOVE 0 TO PART(2)
    MOVE 0 TO PARTSUPP(1)
    MOVE 0 TO PARTSUPP(2)
    MOVE 0 TO TMP0
    MOVE 0 TO TMP1
    MOVE 0 TO IDX
    PERFORM VARYING IDX FROM 0 BY 1 UNTIL IDX >= 2
    MOVE REGION(IDX + 1) TO R
        MOVE 0 TO IDX2
        PERFORM VARYING IDX2 FROM 0 BY 1 UNTIL IDX2 >= 2
        MOVE NATION(IDX2 + 1) TO N
        IF R_R_NAME = "EUROPE" * N_N_REGIONKEY = R_R_REGIONKEY
            ADD 1 TO TMP1
            IF TMP1 > 0
                IF 0 = 0 OR TMP0 < 0
                    ADD 1 TO TMP0
                    COMPUTE EUROPE_NATIONS(TMP0) = N
                END-IF
            END-IF
        END-IF
        END-PERFORM
    END-PERFORM
    MOVE 0 TO TMP2
    MOVE 0 TO TMP3
    MOVE 0 TO IDX
    PERFORM VARYING IDX FROM 0 BY 1 UNTIL IDX >= 2
    MOVE SUPPLIER(IDX + 1) TO S
        MOVE 0 TO IDX2
        PERFORM VARYING IDX2 FROM 0 BY 1 UNTIL IDX2 >= 0
        MOVE EUROPE_NATIONS(IDX2 + 1) TO N
        IF S_S_NATIONKEY = N_N_NATIONKEY
            ADD 1 TO TMP3
            IF TMP3 > 0
                IF 0 = 0 OR TMP2 < 0
                    ADD 1 TO TMP2
                    COMPUTE EUROPE_SUPPLIERS(TMP2) = 0
                END-IF
            END-IF
        END-IF
        END-PERFORM
    END-PERFORM
    MOVE 0 TO TMP4
    MOVE 0 TO TMP5
    MOVE 0 TO IDX
    PERFORM VARYING IDX FROM 0 BY 1 UNTIL IDX >= 2
    MOVE PART(IDX + 1) TO P
    IF P_P_SIZE = 15 * P_P_TYPE = "LARGE BRASS"
        ADD 1 TO TMP5
        IF TMP5 > 0
            IF 0 = 0 OR TMP4 < 0
                ADD 1 TO TMP4
                COMPUTE TARGET_PARTS(TMP4) = P
            END-IF
        END-IF
    END-IF
    END-PERFORM
    MOVE 0 TO TMP6
    MOVE 0 TO TMP7
    MOVE 0 TO IDX
    PERFORM VARYING IDX FROM 0 BY 1 UNTIL IDX >= 2
    MOVE PARTSUPP(IDX + 1) TO PS
        MOVE 0 TO IDX2
        PERFORM VARYING IDX2 FROM 0 BY 1 UNTIL IDX2 >= 0
        MOVE TARGET_PARTS(IDX2 + 1) TO P
            MOVE 0 TO IDX3
            PERFORM VARYING IDX3 FROM 0 BY 1 UNTIL IDX3 >= 0
            MOVE EUROPE_SUPPLIERS(IDX3 + 1) TO S
            IF PS_PS_PARTKEY = P_P_PARTKEY * PS_PS_SUPPKEY = S_S_S_SUPPKEY
                ADD 1 TO TMP7
                IF TMP7 > 0
                    IF 0 = 0 OR TMP6 < 0
                        ADD 1 TO TMP6
                        COMPUTE TARGET_PARTSUPP(TMP6) = 0
                    END-IF
                END-IF
            END-IF
            END-PERFORM
        END-PERFORM
    END-PERFORM
    MOVE 0 TO TMP8
    MOVE 0 TO TMP9
    MOVE 0 TO IDX
    PERFORM VARYING IDX FROM 0 BY 1 UNTIL IDX >= 0
    MOVE TARGET_PARTSUPP(IDX + 1) TO X
    ADD 1 TO TMP9
    IF TMP9 > 0
        IF 0 = 0 OR TMP8 < 0
            ADD 1 TO TMP8
            COMPUTE COSTS(TMP8) = X_PS_SUPPLYCOST
        END-IF
    END-IF
    END-PERFORM
    COMPUTE MIN_COST = 0
    MOVE 0 TO TMP10
    MOVE 0 TO TMP11
    MOVE 0 TO IDX
    PERFORM VARYING IDX FROM 0 BY 1 UNTIL IDX >= 0
    MOVE TARGET_PARTSUPP(IDX + 1) TO X
    IF X_PS_SUPPLYCOST = MIN_COST
        ADD 1 TO TMP11
        IF TMP11 > 0
            IF 0 = 0 OR TMP10 < 0
                ADD 1 TO TMP10
                COMPUTE RESULT(TMP10) = X
            END-IF
        END-IF
    END-IF
    END-PERFORM
DISPLAY "-- TEST Q2 returns only supplier with min cost in Europe for brass part --"
IF NOT (RESULT = 0)
    DISPLAY "expect failed"
    STOP RUN
END-IF
DISPLAY "-- END Q2 returns only supplier with min cost in Europe for brass part --"
    STOP RUN.
