// Generated by Mochi compiler v0.10.25 on 2025-07-13T14:10:40Z
open System
open System.Text.Json

type Anon1 = {
    p_partkey: int
    p_type: string
}
type Anon2 = {
    l_partkey: int
    l_extendedprice: float
    l_discount: float
    l_shipdate: string
}
type Anon3 = {
    is_promo: bool
    revenue: float
}
let part: Anon1 list = [{ p_partkey = 1; p_type = "PROMO LUXURY" }; { p_partkey = 2; p_type = "STANDARD BRASS" }]
let lineitem: Anon2 list = [{ l_partkey = 1; l_extendedprice = 1000.0; l_discount = 0.1; l_shipdate = "1995-09-05" }; { l_partkey = 2; l_extendedprice = 800.0; l_discount = 0.0; l_shipdate = "1995-09-20" }; { l_partkey = 1; l_extendedprice = 500.0; l_discount = 0.2; l_shipdate = "1995-10-02" }]
let start_date: string = "1995-09-01"
let end_date: string = "1995-10-01"
let filtered: Anon3 list = [ for l in lineitem do 
  for p in part do if p.p_partkey = l.l_partkey && l.l_shipdate >= start_date && l.l_shipdate < end_date then yield { is_promo = List.contains "PROMO" p.p_type; revenue = l.l_extendedprice * (1 - l.l_discount) } ]
let promo_sum: obj = List.sum [ for x in filtered do if x.is_promo then yield x.revenue ]
let total_sum: obj = List.sum [ for x in filtered do yield x.revenue ]
let result: float = 100.0 * promo_sum / total_sum
printfn "%A" (JsonSerializer.Serialize(result))
let promo: float = 1000.0 * 0.9
let total: int = 900 + 800.0
let expected: float = 100.0 * promo / total
assert (result = expected)
