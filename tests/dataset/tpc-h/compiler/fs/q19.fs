// Generated by Mochi compiler v0.10.25 on 2025-07-13T14:10:40Z
open System
open System.Text.Json

type Anon1 = {
    p_partkey: int
    p_brand: string
    p_container: string
    p_size: int
}
type Anon2 = {
    l_partkey: int
    l_quantity: int
    l_extendedprice: float
    l_discount: float
    l_shipmode: string
    l_shipinstruct: string
}
let part: Anon1 list = [{ p_partkey = 1; p_brand = "Brand#12"; p_container = "SM BOX"; p_size = 3 }; { p_partkey = 2; p_brand = "Brand#23"; p_container = "MED BOX"; p_size = 5 }; { p_partkey = 3; p_brand = "Brand#34"; p_container = "LG BOX"; p_size = 15 }]
let lineitem: Anon2 list = [{ l_partkey = 1; l_quantity = 5; l_extendedprice = 1000.0; l_discount = 0.1; l_shipmode = "AIR"; l_shipinstruct = "DELIVER IN PERSON" }; { l_partkey = 2; l_quantity = 15; l_extendedprice = 2000.0; l_discount = 0.05; l_shipmode = "AIR REG"; l_shipinstruct = "DELIVER IN PERSON" }; { l_partkey = 3; l_quantity = 35; l_extendedprice = 1500.0; l_discount = 0.0; l_shipmode = "AIR"; l_shipinstruct = "DELIVER IN PERSON" }]
let revenues: float list = [ for l in lineitem do 
  for p in part do if p.p_partkey = l.l_partkey && List.contains (((p.p_brand = "Brand#12") && (List.contains p.p_container ["SM CASE"; "SM BOX"; "SM PACK"; "SM PKG"]) && (l.l_quantity >= 1 && l.l_quantity <= 11) && (p.p_size >= 1 && p.p_size <= 5)) || ((p.p_brand = "Brand#23") && (List.contains p.p_container ["MED BAG"; "MED BOX"; "MED PKG"; "MED PACK"]) && (l.l_quantity >= 10 && l.l_quantity <= 20) && (p.p_size >= 1 && p.p_size <= 10)) || ((p.p_brand = "Brand#34") && (List.contains p.p_container ["LG CASE"; "LG BOX"; "LG PACK"; "LG PKG"]) && (l.l_quantity >= 20 && l.l_quantity <= 30) && (p.p_size >= 1 && p.p_size <= 15))) && l.l_shipmode ["AIR"; "AIR REG"] && l.l_shipinstruct = "DELIVER IN PERSON" then yield l.l_extendedprice * (1 - l.l_discount) ]
let result: obj = List.sum revenues
printfn "%A" (JsonSerializer.Serialize(result))
assert (result = 2800.0)
