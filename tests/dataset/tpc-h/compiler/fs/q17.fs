// Generated by Mochi compiler v0.10.25 on 2025-07-13T09:26:21Z
open System
open System.Text.Json

type Anon1 = {
    p_partkey: int
    p_brand: string
    p_container: string
}
type Anon2 = {
    l_partkey: int
    l_quantity: int
    l_extendedprice: float
}
let part: obj list = [{ p_partkey = 1; p_brand = "Brand#23"; p_container = "MED BOX" }; { p_partkey = 2; p_brand = "Brand#77"; p_container = "LG JAR" }]
let lineitem: obj list = [{ l_partkey = 1; l_quantity = 1; l_extendedprice = 100 }; { l_partkey = 1; l_quantity = 10; l_extendedprice = 1000 }; { l_partkey = 1; l_quantity = 20; l_extendedprice = 2000 }; { l_partkey = 2; l_quantity = 5; l_extendedprice = 500 }]
let brand: string = "Brand#23"
let container: string = "MED BOX"
let filtered: obj list = [ for l in lineitem do 
  for p in part do if p.p_partkey = l.l_partkey && ((p.p_brand = brand) && (p.p_container = container) && (l.l_quantity < (0.2 * (List.sum [ for x in lineitem do if x.l_partkey = p.p_partkey then yield x.l_quantity ] / List.length [ for x in lineitem do if x.l_partkey = p.p_partkey then yield x.l_quantity ])))) then yield l.l_extendedprice ]
let result: obj = List.sum filtered / 7
printfn "%A" (JsonSerializer.Serialize(result))
let expected: float = 100 / 7
assert (result = expected)
