" Generated by Mochi compiler v0.10.25 on 2025-07-13T14:25:39Z
"
| customer end_date lineitem nation orders part region result start_date supplier target_nation target_type |
region := {Dictionary from: {'r_regionkey' -> 0. 'r_name' -> 'AMERICA'}}.
nation := {Dictionary from: {'n_nationkey' -> 10. 'n_regionkey' -> 0. 'n_name' -> 'BRAZIL'}. Dictionary from: {'n_nationkey' -> 20. 'n_regionkey' -> 0. 'n_name' -> 'CANADA'}}.
customer := {Dictionary from: {'c_custkey' -> 1. 'c_nationkey' -> 10}. Dictionary from: {'c_custkey' -> 2. 'c_nationkey' -> 20}}.
orders := {Dictionary from: {'o_orderkey' -> 100. 'o_custkey' -> 1. 'o_orderdate' -> '1995-04-10'}. Dictionary from: {'o_orderkey' -> 200. 'o_custkey' -> 2. 'o_orderdate' -> '1995-07-15'}}.
lineitem := {Dictionary from: {'l_orderkey' -> 100. 'l_suppkey' -> 1000. 'l_partkey' -> 5000. 'l_extendedprice' -> 1000. 'l_discount' -> 0.1}. Dictionary from: {'l_orderkey' -> 200. 'l_suppkey' -> 2000. 'l_partkey' -> 5000. 'l_extendedprice' -> 500. 'l_discount' -> 0.05}}.
supplier := {Dictionary from: {'s_suppkey' -> 1000}. Dictionary from: {'s_suppkey' -> 2000}}.
part := {Dictionary from: {'p_partkey' -> 5000. 'p_type' -> 'ECONOMY ANODIZED STEEL'}. Dictionary from: {'p_partkey' -> 6000. 'p_type' -> 'SMALL BRASS'}}.
start_date := '1995-01-01'.
end_date := '1996-12-31'.
target_type := 'ECONOMY ANODIZED STEEL'.
target_nation := 'BRAZIL'.
result := [ | groups res |
  groups := Dictionary new.
  lineitem do: [:l |
    part do: [:p |
      supplier do: [:s |
        orders do: [:o |
          customer do: [:c |
            nation do: [:n |
              region do: [:r |
                (((((((((((p.p_type = target_type) and: [(o.o_orderdate >= start_date)]) and: [(o.o_orderdate <= end_date)]) and: [(r.r_name = 'AMERICA')]) and: [(p.p_partkey = l.l_partkey)]) and: [(s.s_suppkey = l.l_suppkey)]) and: [(o.o_orderkey = l.l_orderkey)]) and: [(c.c_custkey = o.o_custkey)]) and: [(n.n_nationkey = c.c_nationkey)]) and: [(r.r_regionkey = n.n_regionkey)])) ifTrue: [
                  | g k |
                  k := (o.o_orderdate copyFrom: 0 to: 4).
                  g := groups at: k ifAbsentPut: [OrderedCollection new].
                  g add: l.
                ]
              ]
            ]
          ]
        ]
      ]
    ]
  ]
  res := OrderedCollection new.
  groups keysAndValuesDo: [:k :items |
    | year |
    year := Dictionary from: {#key->k. #items->items}.
    res add: Dictionary from: {'o_year' -> year.key. 'mkt_share' -> (([ | tmp |
  tmp := OrderedCollection new.
  year do: [:x |
    tmp add: ((x.n.n_name = target_nation) = true) ifTrue: [(x.l.l_extendedprice * (1 - x.l.l_discount))] ifFalse: [0].
  ].
  tmp
] value inject: 0 into: [:s :x | s + x]) / ([ | tmp |
  tmp := OrderedCollection new.
  year do: [:x |
    tmp add: (x.l.l_extendedprice * (1 - x.l.l_discount)).
  ].
  tmp
] value inject: 0 into: [:s :x | s + x]))}.
  ].
  res := res asSortedCollection: [:a :b | a.key < b.key].
  res
] value.
json value: result.
