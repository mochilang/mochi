" Generated by Mochi compiler v0.10.25 on 2025-07-13T14:25:39Z
"
| customer end_date lineitem nation nation1 nation2 orders result start_date supplier |
nation := {Dictionary from: {'n_nationkey' -> 1. 'n_name' -> 'FRANCE'}. Dictionary from: {'n_nationkey' -> 2. 'n_name' -> 'GERMANY'}}.
supplier := {Dictionary from: {'s_suppkey' -> 100. 's_nationkey' -> 1}}.
customer := {Dictionary from: {'c_custkey' -> 200. 'c_nationkey' -> 2}}.
orders := {Dictionary from: {'o_orderkey' -> 1000. 'o_custkey' -> 200}}.
lineitem := {Dictionary from: {'l_orderkey' -> 1000. 'l_suppkey' -> 100. 'l_extendedprice' -> 1000. 'l_discount' -> 0.1. 'l_shipdate' -> '1995-06-15'}. Dictionary from: {'l_orderkey' -> 1000. 'l_suppkey' -> 100. 'l_extendedprice' -> 800. 'l_discount' -> 0.05. 'l_shipdate' -> '1997-01-01'}}.
start_date := '1995-01-01'.
end_date := '1996-12-31'.
nation1 := 'FRANCE'.
nation2 := 'GERMANY'.
result := [ | groups res |
  groups := Dictionary new.
  lineitem do: [:l |
    orders do: [:o |
      customer do: [:c |
        supplier do: [:s |
          nation do: [:n1 |
            nation do: [:n2 |
              ((((((((((l.l_shipdate >= start_date) and: [(l.l_shipdate <= end_date)]) and: [((n1.n_name = nation1) and: [(n2.n_name = nation2)])]) or: [((n1.n_name = nation2) and: [(n2.n_name = nation1)])]) and: [(o.o_orderkey = l.l_orderkey)]) and: [(c.c_custkey = o.o_custkey)]) and: [(s.s_suppkey = l.l_suppkey)]) and: [(n1.n_nationkey = s.s_nationkey)]) and: [(n2.n_nationkey = c.c_nationkey)])) ifTrue: [
                | g k |
                k := Dictionary from: {'supp_nation' -> n1.n_name. 'cust_nation' -> n2.n_name. 'l_year' -> (l.l_shipdate copyFrom: 0 to: 4)}.
                g := groups at: k ifAbsentPut: [OrderedCollection new].
                g add: l.
              ]
            ]
          ]
        ]
      ]
    ]
  ]
  res := OrderedCollection new.
  groups keysAndValuesDo: [:k :items |
    | g |
    g := Dictionary from: {#key->k. #items->items}.
    res add: Dictionary from: {'supp_nation' -> g.key.supp_nation. 'cust_nation' -> g.key.cust_nation. 'l_year' -> g.key.l_year. 'revenue' -> ([ | tmp |
  tmp := OrderedCollection new.
  g do: [:x |
    tmp add: (x.l.l_extendedprice * (1 - x.l.l_discount)).
  ].
  tmp
] value inject: 0 into: [:s :x | s + x])}.
  ].
  res := res asSortedCollection: [:a :b | {supp_nation. cust_nation. l_year} < {supp_nation. cust_nation. l_year}].
  res
] value.
json value: result.
