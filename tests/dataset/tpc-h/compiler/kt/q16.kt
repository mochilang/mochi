// Generated by Mochi compiler v0.10.28 on 2025-07-18T07:06:42Z
data class Part(var p_partkey: Int, var p_brand: String, var p_type: String, var p_size: Int)

data class Partsupp(var ps_partkey: Int, var ps_suppkey: Int)

data class Row0(var s_name: String, var s_address: String)

data class Row1(var ps: Partsupp, var p: Part)

data class Supplier(var s_suppkey: Int, var s_name: String, var s_address: String, var s_comment: String)

fun json(v: Any?) {
    println(toJson(v))
}

fun toJson(v: Any?): String = when (v) {
    null -> "null"
    is String -> "\"" + v.replace("\"", "\\\"") + "\""
    is Boolean, is Number -> v.toString()
    is Map<*, *> -> v.entries.joinToString(prefix = "{", postfix = "}") { toJson(it.key.toString()) + ":" + toJson(it.value) }
    is Iterable<*> -> v.joinToString(prefix = "[", postfix = "]") { toJson(it) }
    else -> toJson(v.toString())
}
// Code generated from q16.mochi

val supplier = mutableListOf(Supplier(s_suppkey = 100, s_name = "AlphaSupply", s_address = "123 Hilltop", s_comment = "Reliable and efficient"), Supplier(s_suppkey = 200, s_name = "BetaSupply", s_address = "456 Riverside", s_comment = "Known for Customer Complaints"))

val part = mutableListOf(Part(p_partkey = 1, p_brand = "Brand#12", p_type = "SMALL ANODIZED", p_size = 5), Part(p_partkey = 2, p_brand = "Brand#23", p_type = "MEDIUM POLISHED", p_size = 10))

val partsupp = mutableListOf(Partsupp(ps_partkey = 1, ps_suppkey = 100), Partsupp(ps_partkey = 2, ps_suppkey = 200))

val excluded_suppliers = run {
    val __res = mutableListOf<Int>()
    for (ps in partsupp) {
        for (p in part) {
            if (p.p_partkey == ps.ps_partkey) {
                if (p.p_brand == "Brand#12" && p.p_type.contains("SMALL") && p.p_size == 5) {
                    __res.add(ps.ps_suppkey)
                }
            }
        }
    }
    __res
}

val result = run {
    val __sorted = supplier.sortedBy { it.s_name as String }
    val __res = mutableListOf<Row0>()
    for (s in __sorted) {
        if (!(s.s_suppkey in excluded_suppliers) && (!s.s_comment.contains("Customer")) && (!s.s_comment.contains("Complaints"))) {
            __res.add(Row0(s_name = s.s_name, s_address = s.s_address))
        }
    }
    __res
}

fun main() {
    json(result)
}
