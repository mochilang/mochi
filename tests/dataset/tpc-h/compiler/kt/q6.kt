// Generated by Mochi compiler v0.10.25 on 2025-07-13T14:00:26Z
fun sum(list: List<Any?>): Number {
    var s = 0.0
    var allInt = true
    for (n in list) {
        val d = toDouble(n)
        if (d % 1.0 != 0.0) allInt = false
        s += d
    }
    return if (allInt) s.toInt() else s
}

fun String.starts_with(prefix: String): Boolean = this.startsWith(prefix)

fun toInt(v: Any?): Int = when (v) {
    is Int -> v
    is Double -> v.toInt()
    is String -> v.toInt()
    is Boolean -> if (v) 1 else 0
    else -> 0
}

fun json(v: Any?) {
    println(toJson(v))
}

fun toJson(v: Any?): String = when (v) {
    null -> "null"
    is String -> "\"" + v.replace("\"", "\\\"") + "\""
    is Boolean, is Number -> v.toString()
    is Map<*, *> -> v.entries.joinToString(prefix = "{", postfix = "}") { toJson(it.key.toString()) + ":" + toJson(it.value) }
    is Iterable<*> -> v.joinToString(prefix = "[", postfix = "]") { toJson(it) }
    else -> toJson(v.toString())
}
// Code generated from q6.mochi

data class Lineitem(var l_extendedprice: Double, var l_discount: Double, var l_shipdate: String, var l_quantity: Int)

val lineitem = mutableListOf(Lineitem(l_extendedprice = 1000.0, l_discount = 0.06, l_shipdate = "1994-02-15", l_quantity = 10), Lineitem(l_extendedprice = 500.0, l_discount = 0.07, l_shipdate = "1994-03-10", l_quantity = 23), Lineitem(l_extendedprice = 400.0, l_discount = 0.04, l_shipdate = "1994-04-10", l_quantity = 15), Lineitem(l_extendedprice = 200.0, l_discount = 0.06, l_shipdate = "1995-01-01", l_quantity = 5))

val result = run {
    val __res = mutableListOf<Double>()
    for (l in lineitem) {
        if ((l.l_shipdate >= "1994-01-01") && (l.l_shipdate < "1995-01-01") && (l.l_discount >= 0.05) && (l.l_discount <= 0.07) && (l.l_quantity < 24)) {
            __res.add(sum(l.l_extendedprice * l.l_discount))
        }
    }
    __res
}

fun main() {
    json(result)
}
