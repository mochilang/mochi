; Generated by Mochi compiler v0.10.28 on 2025-07-18T07:01:18Z
(ns main)

(defn _escape_json [s]
  (-> s
      (clojure.string/replace "\\" "\\\\")
      (clojure.string/replace "\"" "\\\"")))

(defn _to_json [v]
  (cond
    (nil? v) "null"
    (string? v) (str "\"" (_escape_json v) "\"")
    (number? v) (str v)
    (boolean? v) (str v)
    (sequential? v) (str "[" (clojure.string/join "," (map _to_json v)) "]")
    (map? v) (str "{" (clojure.string/join "," (map (fn [[k val]]
                                        (str "\"" (_escape_json (name k)) "\":" (_to_json val))) v)) "}")
    :else (str "\"" (_escape_json (str v)) "\"")))

(defn _json [v]
  (println (_to_json v)))

(declare part lineitem brand container filtered result)

(defn test_Q17_returns_average_yearly_revenue_for_small_quantity_orders []
  (def expected (/ 100.0 7.0)) ;; float
  (assert (= result expected) "expect failed")
)

(defn -main []
  (def part [{:p_partkey 1 :p_brand "Brand#23" :p_container "MED BOX"} {:p_partkey 2 :p_brand "Brand#77" :p_container "LG JAR"}]) ;; list of
  (def lineitem [{:l_partkey 1 :l_quantity 1 :l_extendedprice 100.0} {:l_partkey 1 :l_quantity 10 :l_extendedprice 1000.0} {:l_partkey 1 :l_quantity 20 :l_extendedprice 2000.0} {:l_partkey 2 :l_quantity 5 :l_extendedprice 500.0}]) ;; list of
  (def brand "Brand#23") ;; string
  (def container "MED BOX") ;; string
  (def filtered (vec (->> (for [l lineitem p part :when (= (:p_partkey p) (:l_partkey l)) :when (and (and (= (:p_brand p) brand) (= (:p_container p) container)) (< (:l_quantity l) (* 0.2 (let [xs (vec (->> (for [x lineitem :when (= (:l_partkey x) (:p_partkey p))] (:l_quantity x))))] (if (empty? xs) 0 (/ (reduce + xs) (double (count xs))))))))] (:l_extendedprice l))))) ;; list of float
  (def result (/ (reduce + 0 filtered) 7.0)) ;; float
  (_json result)
  (test_Q17_returns_average_yearly_revenue_for_small_quantity_orders)
)

(-main)
