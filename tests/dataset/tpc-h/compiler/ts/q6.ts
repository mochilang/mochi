// Generated by Mochi compiler v0.10.25 on 2025-07-13T16:34:15Z
// Source: tests/dataset/tpc-h/q6.mochi

let lineitem: Record<string, any>[];
let result: number;

function test_Q6_calculates_revenue_from_qualified_lineitems(): void {
  if (!(result == ((1000 * 0.06) + (500 * 0.07)))) {
    throw new Error("expect failed");
  }
}

function main(): void {
  lineitem = [
    {
      "l_extendedprice": 1000,
      "l_discount": 0.06,
      "l_shipdate": "1994-02-15",
      "l_quantity": 10,
    },
    {
      "l_extendedprice": 500,
      "l_discount": 0.07,
      "l_shipdate": "1994-03-10",
      "l_quantity": 23,
    },
    {
      "l_extendedprice": 400,
      "l_discount": 0.04,
      "l_shipdate": "1994-04-10",
      "l_quantity": 15,
    },
    {
      "l_extendedprice": 200,
      "l_discount": 0.06,
      "l_shipdate": "1995-01-01",
      "l_quantity": 5,
    },
  ];
  result = (() => {
    const _items = lineitem.filter(
      (l) => (((((l.l_shipdate >= "1994-01-01") &&
        (l.l_shipdate < "1995-01-01")) && (l.l_discount >= 0.05)) &&
        (l.l_discount <= 0.07)) && (l.l_quantity < 24))
    ).map((l) => (l.l_extendedprice * l.l_discount));
    return _sum(_items);
  })();
  console.log(_json(result));
  test_Q6_calculates_revenue_from_qualified_lineitems();
}
function _json(v: any): string {
  function _sort(x: any): any {
    if (Array.isArray(x)) return x.map(_sort);
    if (x && typeof x === "object") {
      const keys = Object.keys(x).sort();
      const o: any = {};
      for (const k of keys) o[k] = _sort(x[k]);
      return o;
    }
    return x;
  }
  return JSON.stringify(_sort(v), null, 2);
}

function _sum(v: any): number {
  let list: any[] | null = null;
  if (Array.isArray(v)) list = v;
  else if (v && typeof v === "object") {
    if (Array.isArray((v as any).items)) list = (v as any).items;
    else if (Array.isArray((v as any).Items)) list = (v as any).Items;
  }
  if (!list || list.length === 0) return 0;
  let sum = 0;
  for (const n of list) sum += Number(n);
  return sum;
}

main();
