# Generated by Mochi compiler v0.10.25 on 2025-07-13T13:58:56Z
require 'ostruct'

def _avg(v)
  list = nil
  if defined?(MGroup) && v.is_a?(MGroup)
    list = v.Items
  elsif v.is_a?(Array)
    list = v
  elsif v.respond_to?(:to_a)
    list = v.to_a
  end
  return 0 if !list || list.empty?
  list.sum(0.0) / list.length
end
def _json(v)
  require 'json'
  obj = v
  if v.is_a?(Array)
    obj = v.map { |it| it.respond_to?(:to_h) ? it.to_h : it }
  elsif v.respond_to?(:to_h)
    obj = v.to_h
  end
  puts(JSON.generate(obj))
end
def _sum(v)
  list = nil
  if defined?(MGroup) && v.is_a?(MGroup)
    list = v.Items
  elsif v.is_a?(Array)
    list = v
  elsif v.respond_to?(:to_a)
    list = v.to_a
  end
  return 0 if !list || list.empty?
  s = 0.0
  list.each { |n| s += n.to_f }
  s
end

$part = [OpenStruct.new(p_partkey: 1, p_brand: "Brand#23", p_container: "MED BOX"), OpenStruct.new(p_partkey: 2, p_brand: "Brand#77", p_container: "LG JAR")]
$lineitem = [OpenStruct.new(l_partkey: 1, l_quantity: 1, l_extendedprice: 100.0), OpenStruct.new(l_partkey: 1, l_quantity: 10, l_extendedprice: 1000.0), OpenStruct.new(l_partkey: 1, l_quantity: 20, l_extendedprice: 2000.0), OpenStruct.new(l_partkey: 2, l_quantity: 5, l_extendedprice: 500.0)]
$brand = "Brand#23"
$container = "MED BOX"
$filtered = (begin
	_res = []
	for l in $lineitem
		for p in $part
			if (p.p_partkey == l.l_partkey)
				if (((((p.p_brand == $brand)) && ((p.p_container == $container))) && ((l.l_quantity < ((0.2 * _avg(((($lineitem)).select { |x| (x.l_partkey == p.p_partkey) }).map { |x| x.l_quantity })))))))
					_res << l.l_extendedprice
				end
			end
		end
	end
	_res
end)
$result = (_sum($filtered) / 7.0)
_json($result)
$expected = (100.0 / 7.0)
raise "expect failed" unless ($result == $expected)
