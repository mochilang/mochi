// Generated by Mochi compiler v0.10.25 on 2025-07-13T07:34:51Z
import 'dart:convert';

bool _in(dynamic item, dynamic col) {
  if (col is Map) return col.containsKey(item);
  if (col is Iterable || col is String) return col.contains(item);
  return false;
}

var customer = [{'c_custkey': 1, 'c_phone': '13-123-4567', 'c_acctbal': 600}, {'c_custkey': 2, 'c_phone': '31-456-7890', 'c_acctbal': 100}, {'c_custkey': 3, 'c_phone': '30-000-0000', 'c_acctbal': 700}];

var orders = [{'o_orderkey': 10, 'o_custkey': 2}];

var valid_codes = ['13', '31', '23', '29', '30', '18', '17'];

var avg_balance = (() { var _t1 = (() {
  var _q0 = <dynamic>[];
  for (var c in customer) {
    if (!(c['c_acctbal'].toString().compareTo(0.toString()) > 0 && _in(c['c_phone'].toString().substring(0, 2), valid_codes))) continue;
    _q0.add(c['c_acctbal']);
  }
  return _q0;
})(); return (_t1.isEmpty ? 0 : _t1.reduce((a, b) => a + b) / _t1.length); })();

var eligible_customers = (() {
  var _q2 = <dynamic>[];
  for (var c in customer) {
    if (!(_in(c['c_phone'].toString().substring(0, 2), valid_codes) && c['c_acctbal'].toString().compareTo(avg_balance.toString()) > 0 && (!(() {
  var _q3 = <dynamic>[];
  for (var o in orders) {
    if (!(o['o_custkey'] == c['c_custkey'])) continue;
    _q3.add(o);
  }
  return _q3;
})().isNotEmpty))) continue;
    _q2.add({'cntrycode': c['c_phone'].toString().substring(0, 2), 'c_acctbal': c['c_acctbal']});
  }
  return _q2;
})();

var groups = (() {
  var _q4 = <dynamic>[];
  var _g5 = <String, List<dynamic>>{};
  for (var c in eligible_customers) {
    var _k6 = c['cntrycode'];
    var _k6_s = jsonEncode(_k6);
    _g5.putIfAbsent(_k6_s, () => <dynamic>[]).add(c);
  }
  for (var entry in _g5.entries) {
    var g = entry.value;
    var _k6 = jsonDecode(entry.key);
    _q4.add({'key': _k6, 'items': g});
  }
  return _q4;
})();

var tmp = [];

var result = (() {
  var _q7 = <dynamic>[];
  for (var r in tmp) {
    _q7.add([r.cntrycode, r]);
  }
  _q7.sort((a,b) => (jsonEncode(a[0]) as Comparable).compareTo(jsonEncode(b[0])));
  _q7 = [for (var x in _q7) x[1]];
  return _q7;
})();

void main() {
  for (var g in groups) {
    var total = (() { var _t9 = (() {
  var _q8 = <dynamic>[];
  for (var x in g['items']) {
    _q8.add(x['c_acctbal']);
  }
  return _q8;
})(); return _t9.reduce((a, b) => a + b); })();
    var row = {'cntrycode': g['key'], 'numcust': g.length, 'totacctbal': total};
    tmp = List.from(tmp)..add(row);
  }
  print(jsonEncode(result));
}
