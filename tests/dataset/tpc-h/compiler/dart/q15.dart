// Generated by Mochi compiler v0.10.25 on 2025-07-13T07:12:09Z
import 'dart:convert';

var supplier = [
  {
    's_suppkey': 100,
    's_name': 'Best Supplier',
    's_address': '123 Market St',
    's_phone': '123-456',
  },
  {
    's_suppkey': 200,
    's_name': 'Second Supplier',
    's_address': '456 Elm St',
    's_phone': '987-654',
  },
];

var lineitem = [
  {
    'l_suppkey': 100,
    'l_extendedprice': 1000,
    'l_discount': 0.1,
    'l_shipdate': '1996-01-15',
  },
  {
    'l_suppkey': 100,
    'l_extendedprice': 500,
    'l_discount': 0,
    'l_shipdate': '1996-03-20',
  },
  {
    'l_suppkey': 200,
    'l_extendedprice': 800,
    'l_discount': 0.05,
    'l_shipdate': '1995-12-30',
  },
];

var start_date = '1996-01-01';

var end_date = '1996-04-01';

var revenue0 = (() {
  var _q0 = <dynamic>[];
  var _g1 = <String, List<dynamic>>{};
  for (var l in lineitem) {
    if (!(l['l_shipdate'].toString().compareTo(start_date) >= 0 &&
        l['l_shipdate'].toString().compareTo(end_date) < 0))
      continue;
    var _k4 = l['l_suppkey'];
    var _k4_s = jsonEncode(_k4);
    _g1.putIfAbsent(_k4_s, () => <dynamic>[]).add(l);
  }
  for (var entry in _g1.entries) {
    var g = entry.value;
    var _k4 = jsonDecode(entry.key);
    _q0.add({
      'supplier_no': _k4,
      'total_revenue': (() {
        var _t6 = (() {
          var _q5 = <dynamic>[];
          for (var x in g) {
            _q5.add(
              (x['l_extendedprice'] as num) *
                  ((1 - (x['l_discount'] as num)) as num),
            );
          }
          return _q5;
        })();
        return _t6.reduce((a, b) => a + b);
      })(),
    });
  }
  return _q0;
})();

var revenues = (() {
  var _q7 = <dynamic>[];
  for (var x in revenue0) {
    _q7.add(x['total_revenue']);
  }
  return _q7;
})();

var max_revenue = revenues.reduce((a, b) => a > b ? a : b);

var result = (() {
  var _q8 = <dynamic>[];
  for (var s in supplier) {
    for (var r in revenue0) {
      if (!(s['s_suppkey'] == r['supplier_no'])) continue;
      if (!(r['total_revenue'] == max_revenue)) continue;
      _q8.add([
        s['s_suppkey'],
        {
          's_suppkey': s['s_suppkey'],
          's_name': s['s_name'],
          's_address': s['s_address'],
          's_phone': s['s_phone'],
          'total_revenue': r['total_revenue'],
        },
      ]);
    }
  }
  _q8.sort(
    (a, b) => (jsonEncode(a[0]) as Comparable).compareTo(jsonEncode(b[0])),
  );
  _q8 = [for (var x in _q8) x[1]];
  return _q8;
})();

void main() {
  print(jsonEncode(result));
}
