// Generated by Mochi compiler v0.10.28 on 2025-07-18T03:32:16Z
import 'dart:io';
import 'dart:convert';

var region = [
  {'r_regionkey': 0, 'r_name': 'ASIA'},
  {'r_regionkey': 1, 'r_name': 'EUROPE'},
];

var nation = [
  {'n_nationkey': 10, 'n_regionkey': 0, 'n_name': 'JAPAN'},
  {'n_nationkey': 20, 'n_regionkey': 0, 'n_name': 'INDIA'},
  {'n_nationkey': 30, 'n_regionkey': 1, 'n_name': 'FRANCE'},
];

var customer = [
  {'c_custkey': 1, 'c_nationkey': 10},
  {'c_custkey': 2, 'c_nationkey': 20},
];

var supplier = [
  {'s_suppkey': 100, 's_nationkey': 10},
  {'s_suppkey': 200, 's_nationkey': 20},
];

var orders = [
  {
  'o_orderkey': 1000,
  'o_custkey': 1,
  'o_orderdate': '1994-03-15',
},
  {
  'o_orderkey': 2000,
  'o_custkey': 2,
  'o_orderdate': '1994-06-10',
},
  {
  'o_orderkey': 3000,
  'o_custkey': 2,
  'o_orderdate': '1995-01-01',
},
];

var lineitem = [
  {
  'l_orderkey': 1000,
  'l_suppkey': 100,
  'l_extendedprice': 1000,
  'l_discount': 0.05,
},
  {
  'l_orderkey': 2000,
  'l_suppkey': 200,
  'l_extendedprice': 800,
  'l_discount': 0.1,
},
  {
  'l_orderkey': 3000,
  'l_suppkey': 200,
  'l_extendedprice': 900,
  'l_discount': 0.05,
},
];

var asia_nations = (() {
  var _q0 = <dynamic>[];
  for (var r in region) {
    for (var n in nation) {
      if (!(n['n_regionkey'] == r['r_regionkey'])) continue;
      if (!(r['r_name'] == 'ASIA')) continue;
      _q0.add(n);
    }
  }
  return _q0;
})();

var local_customer_supplier_orders = (() {
  var _q1 = <dynamic>[];
  for (var c in customer) {
    for (var n in asia_nations) {
      if (!(c['c_nationkey'] == n['n_nationkey'])) continue;
      for (var o in orders) {
        if (!(o['o_custkey'] == c['c_custkey'])) continue;
        for (var l in lineitem) {
          if (!(l['l_orderkey'] == o['o_orderkey'])) continue;
          for (var s in supplier) {
            if (!(s['s_suppkey'] == l['l_suppkey'])) continue;
            if (!(o['o_orderdate'].toString().compareTo('1994-01-01'.toString()) >= 0 && o['o_orderdate'].toString().compareTo('1995-01-01'.toString()) < 0 && s['s_nationkey'] == c['c_nationkey'])) continue;
            _q1.add({
  'nation': n['n_name'],
  'revenue': (l['l_extendedprice'] as num) * ((1 - (l['l_discount'] as num)) as num),
});
          }
        }
      }
    }
  }
  return _q1;
})();

var result = (() {
  var _q2 = <dynamic>[];
  var _g3 = <String, List<dynamic>>{};
  for (var r in local_customer_supplier_orders) {
    var _k5 = r['nation'];
    var _k5_s = jsonEncode(_k5);
    _g3.putIfAbsent(_k5_s, () => <dynamic>[]).add(r);
  }
  for (var entry in _g3.entries) {
    var g = entry.value;
    var _k5 = jsonDecode(entry.key);
    _q2.add([-(_sum(g.map((x) => x['revenue'])) as num), {
  'n_name': _k5,
  'revenue': _sum(g.map((x) => x['revenue'])),
}]);
  }
  _q2.sort((a,b) => (a[0] as Comparable).compareTo(b[0]));
  _q2 = [for (var x in _q2) x[1]];
  return _q2;
})();

void main() {
  print(jsonEncode(result));
}

dynamic _min(dynamic v) {
    List<dynamic>? list;
    if (v is List) list = v;
    else if (v is Map && v['items'] is List) list = (v['items'] as List);
    else if (v is Map && v['Items'] is List) list = (v['Items'] as List);
    else { try { var it = (v as dynamic).items; if (it is List) list = it; } catch (_) {} }
    if (list == null || list.isEmpty) return 0;
    var m = list[0];
    for (var n in list) { if ((n as Comparable).compareTo(m) < 0) m = n; }
    return m;
}

num _sum(dynamic v) {
    Iterable<dynamic>? list;
    if (v is Iterable) list = v;
    else if (v is Map && v['items'] is Iterable) list = (v['items'] as Iterable);
    else if (v is Map && v['Items'] is Iterable) list = (v['Items'] as Iterable);
    else { try { var it = (v as dynamic).items; if (it is Iterable) list = it; } catch (_) {} }
    if (list == null) return 0;
    num s = 0;
    for (var n in list) s += (n as num);
    return s;
}
