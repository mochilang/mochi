// Generated by Mochi compiler v0.10.25 on 2025-07-13T07:12:07Z
import 'dart:convert';

bool _in(dynamic item, dynamic col) {
  if (col is Map) return col.containsKey(item);
  if (col is Iterable || col is String) return col.contains(item);
  return false;
}

var part = [
  {'p_partkey': 1, 'p_type': 'PROMO LUXURY'},
  {'p_partkey': 2, 'p_type': 'STANDARD BRASS'},
];

var lineitem = [
  {
    'l_partkey': 1,
    'l_extendedprice': 1000,
    'l_discount': 0.1,
    'l_shipdate': '1995-09-05',
  },
  {
    'l_partkey': 2,
    'l_extendedprice': 800,
    'l_discount': 0,
    'l_shipdate': '1995-09-20',
  },
  {
    'l_partkey': 1,
    'l_extendedprice': 500,
    'l_discount': 0.2,
    'l_shipdate': '1995-10-02',
  },
];

var start_date = '1995-09-01';

var end_date = '1995-10-01';

var filtered = (() {
  var _q0 = <dynamic>[];
  for (var l in lineitem) {
    for (var p in part) {
      if (!(p['p_partkey'] == l['l_partkey'])) continue;
      if (!(l['l_shipdate'].toString().compareTo(start_date) >= 0 &&
          l['l_shipdate'].toString().compareTo(end_date) < 0))
        continue;
      _q0.add({
        'is_promo': _in('PROMO', p['p_type']),
        'revenue':
            (l['l_extendedprice'] as num) *
            ((1 - (l['l_discount'] as num)) as num),
      });
    }
  }
  return _q0;
})();

var promo_sum = (() {
  var _t2 = (() {
    var _q1 = <dynamic>[];
    for (var x in filtered) {
      if (!((x['is_promo']) ?? false)) continue;
      _q1.add(x['revenue']);
    }
    return _q1;
  })();
  return _t2.reduce((a, b) => a + b);
})();

var total_sum = (() {
  var _t4 = (() {
    var _q3 = <dynamic>[];
    for (var x in filtered) {
      _q3.add(x['revenue']);
    }
    return _q3;
  })();
  return _t4.reduce((a, b) => a + b);
})();

var result = 100 * promo_sum / total_sum;

void main() {
  print(jsonEncode(result));
}
