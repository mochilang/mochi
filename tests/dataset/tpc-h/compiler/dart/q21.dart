// Generated by Mochi compiler v0.10.28 on 2025-07-18T03:32:21Z
import 'dart:io';
import 'dart:convert';

var nation = [
  {
  'n_nationkey': 1,
  'n_name': 'SAUDI ARABIA',
},
  {'n_nationkey': 2, 'n_name': 'FRANCE'},
];

var supplier = [
  {
  's_suppkey': 100,
  's_name': 'Desert Trade',
  's_nationkey': 1,
},
  {
  's_suppkey': 200,
  's_name': 'Euro Goods',
  's_nationkey': 2,
},
];

var orders = [
  {'o_orderkey': 500, 'o_orderstatus': 'F'},
  {'o_orderkey': 600, 'o_orderstatus': 'O'},
];

var lineitem = [
  {
  'l_orderkey': 500,
  'l_suppkey': 100,
  'l_receiptdate': '1995-04-15',
  'l_commitdate': '1995-04-10',
},
  {
  'l_orderkey': 500,
  'l_suppkey': 200,
  'l_receiptdate': '1995-04-12',
  'l_commitdate': '1995-04-12',
},
  {
  'l_orderkey': 600,
  'l_suppkey': 100,
  'l_receiptdate': '1995-05-01',
  'l_commitdate': '1995-04-25',
},
];

var result = (() {
  var _q0 = <dynamic>[];
  var _g1 = <String, List<dynamic>>{};
  for (var s in supplier) {
    for (var l1 in lineitem) {
      if (!(s['s_suppkey'] == l1['l_suppkey'])) continue;
      for (var o in orders) {
        if (!(o['o_orderkey'] == l1['l_orderkey'])) continue;
        for (var n in nation) {
          if (!(n['n_nationkey'] == s['s_nationkey'])) continue;
          if (!(o['o_orderstatus'] == 'F' && (l1['l_receiptdate'] as num) > (l1['l_commitdate'] as num) && n['n_name'] == 'SAUDI ARABIA' && (!(() {
  var _q2 = <dynamic>[];
  for (var x in lineitem) {
    if (!(x['l_orderkey'] == l1['l_orderkey'] && x['l_suppkey'] != l1['l_suppkey'] && (x['l_receiptdate'] as num) > (x['l_commitdate'] as num))) continue;
    _q2.add(x);
  }
  return _q2;
})().isNotEmpty))) continue;
          var _k3 = s['s_name'];
          var _k3_s = jsonEncode(_k3);
          _g1.putIfAbsent(_k3_s, () => <dynamic>[]).add({'s': s, 'l1': l1, 'o': o, 'n': n});
        }
      }
    }
  }
  for (var entry in _g1.entries) {
    var g = entry.value;
    var _k3 = jsonDecode(entry.key);
    _q0.add([[-(g.length as num), _k3], {'s_name': _k3, 'numwait': g.length}]);
  }
  _q0.sort((a,b) => (jsonEncode(a[0]) as Comparable).compareTo(jsonEncode(b[0])));
  _q0 = [for (var x in _q0) x[1]];
  return _q0;
})();

void main() {
  print(jsonEncode(result));
}
