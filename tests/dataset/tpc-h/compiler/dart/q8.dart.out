// Generated by Mochi compiler v0.10.24 on 2025-07-13T01:38:03Z
import 'dart:convert';

var region = [{'r_regionkey': 0, 'r_name': 'AMERICA'}];

var nation = [{'n_nationkey': 10, 'n_regionkey': 0, 'n_name': 'BRAZIL'}, {'n_nationkey': 20, 'n_regionkey': 0, 'n_name': 'CANADA'}];

var customer = [{'c_custkey': 1, 'c_nationkey': 10}, {'c_custkey': 2, 'c_nationkey': 20}];

var orders = [{'o_orderkey': 100, 'o_custkey': 1, 'o_orderdate': '1995-04-10'}, {'o_orderkey': 200, 'o_custkey': 2, 'o_orderdate': '1995-07-15'}];

var lineitem = [{'l_orderkey': 100, 'l_suppkey': 1000, 'l_partkey': 5000, 'l_extendedprice': 1000, 'l_discount': 0.1}, {'l_orderkey': 200, 'l_suppkey': 2000, 'l_partkey': 5000, 'l_extendedprice': 500, 'l_discount': 0.05}];

var supplier = [{'s_suppkey': 1000}, {'s_suppkey': 2000}];

var part = [{'p_partkey': 5000, 'p_type': 'ECONOMY ANODIZED STEEL'}, {'p_partkey': 6000, 'p_type': 'SMALL BRASS'}];

var start_date = '1995-01-01';

var end_date = '1996-12-31';

var target_type = 'ECONOMY ANODIZED STEEL';

var target_nation = 'BRAZIL';

var result = (() {
  var _q0 = <dynamic>[];
  var _g1 = <String, List<dynamic>>{};
  for (var l in lineitem) {
    for (var p in part) {
      if (!(p['p_partkey'] == l['l_partkey'])) continue;
      for (var s in supplier) {
        if (!(s['s_suppkey'] == l['l_suppkey'])) continue;
        for (var o in orders) {
          if (!(o['o_orderkey'] == l['l_orderkey'])) continue;
          for (var c in customer) {
            if (!(c['c_custkey'] == o['o_custkey'])) continue;
            for (var n in nation) {
              if (!(n['n_nationkey'] == c['c_nationkey'])) continue;
              for (var r in region) {
                if (!(r['r_regionkey'] == n['n_regionkey'])) continue;
                if (!((p['p_type'] == target_type && o['o_orderdate'].toString().compareTo(start_date) >= 0 && o['o_orderdate'].toString().compareTo(end_date) <= 0 && r['r_name'] == 'AMERICA'))) continue;
                var _k6 = o['o_orderdate'].substring(0, 4);
                var _k6_s = jsonEncode(_k6);
                _g1.putIfAbsent(_k6_s, () => <dynamic>[]).add({'l': l, 'p': p, 's': s, 'o': o, 'c': c, 'n': n, 'r': r});
              }
            }
          }
        }
      }
    }
  }
  for (var entry in _g1.entries) {
    var year = entry.value;
    var _k6 = jsonDecode(entry.key);
    _q0.add([_k6, {'o_year': _k6, 'mkt_share': (() { var _t8 = (() {
  var _q7 = <dynamic>[];
  for (var x in year) {
    _q7.add((() {
  var _t = x['n']['n_name'] == target_nation;
  if (_t == true) {
    return (x['l']['l_extendedprice'] as num) * ((1 - (x['l']['l_discount'] as num)) as num);
  }  else {
    return 0;
  }
  return null;
})());
  }
  return _q7;
})(); return _t8.reduce((a, b) => a + b); })() / (() { var _t10 = (() {
  var _q9 = <dynamic>[];
  for (var x in year) {
    _q9.add((x['l']['l_extendedprice'] as num) * ((1 - (x['l']['l_discount'] as num)) as num));
  }
  return _q9;
})(); return _t10.reduce((a, b) => a + b); })()}]);
  }
  _q0.sort((a,b) => (a[0] as Comparable).compareTo(b[0]));
  _q0 = [for (var x in _q0) x[1]];
  return _q0;
})();

void main() {
  print(jsonEncode(result));
}
