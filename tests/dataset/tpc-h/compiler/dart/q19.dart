// Generated by Mochi compiler v0.10.28 on 2025-07-18T03:32:20Z
import 'dart:io';
import 'dart:convert';

var _part = [
  {
  'p_partkey': 1,
  'p_brand': 'Brand#12',
  'p_container': 'SM BOX',
  'p_size': 3,
},
  {
  'p_partkey': 2,
  'p_brand': 'Brand#23',
  'p_container': 'MED BOX',
  'p_size': 5,
},
  {
  'p_partkey': 3,
  'p_brand': 'Brand#34',
  'p_container': 'LG BOX',
  'p_size': 15,
},
];

var lineitem = [
  {
  'l_partkey': 1,
  'l_quantity': 5,
  'l_extendedprice': 1000,
  'l_discount': 0.1,
  'l_shipmode': 'AIR',
  'l_shipinstruct': 'DELIVER IN PERSON',
},
  {
  'l_partkey': 2,
  'l_quantity': 15,
  'l_extendedprice': 2000,
  'l_discount': 0.05,
  'l_shipmode': 'AIR REG',
  'l_shipinstruct': 'DELIVER IN PERSON',
},
  {
  'l_partkey': 3,
  'l_quantity': 35,
  'l_extendedprice': 1500,
  'l_discount': 0,
  'l_shipmode': 'AIR',
  'l_shipinstruct': 'DELIVER IN PERSON',
},
];

var revenues = (() {
  var _q0 = <dynamic>[];
  for (var l in lineitem) {
    for (var p in _part) {
      if (!(p['p_partkey'] == l['l_partkey'])) continue;
      if (!((((p['p_brand'] == 'Brand#12') && ([
  'SM CASE',
  'SM BOX',
  'SM PACK',
  'SM PKG',
].contains(p['p_container'])) && ((l['l_quantity'] as num) >= 1 && (l['l_quantity'] as num) <= 11) && ((p['p_size'] as num) >= 1 && (p['p_size'] as num) <= 5)) || ((p['p_brand'] == 'Brand#23') && ([
  'MED BAG',
  'MED BOX',
  'MED PKG',
  'MED PACK',
].contains(p['p_container'])) && ((l['l_quantity'] as num) >= 10 && (l['l_quantity'] as num) <= 20) && ((p['p_size'] as num) >= 1 && (p['p_size'] as num) <= 10)) || ((p['p_brand'] == 'Brand#34') && ([
  'LG CASE',
  'LG BOX',
  'LG PACK',
  'LG PKG',
].contains(p['p_container'])) && ((l['l_quantity'] as num) >= 20 && (l['l_quantity'] as num) <= 30) && ((p['p_size'] as num) >= 1 && (p['p_size'] as num) <= 15))) && ['AIR', 'AIR REG'].contains(l['l_shipmode']) && l['l_shipinstruct'] == 'DELIVER IN PERSON')) continue;
      _q0.add((l['l_extendedprice'] as num) * ((1 - (l['l_discount'] as num)) as num));
    }
  }
  return _q0;
})();

var result = _sum(revenues);

void main() {
  print(jsonEncode(result));
}

dynamic _min(dynamic v) {
    List<dynamic>? list;
    if (v is List) list = v;
    else if (v is Map && v['items'] is List) list = (v['items'] as List);
    else if (v is Map && v['Items'] is List) list = (v['Items'] as List);
    else { try { var it = (v as dynamic).items; if (it is List) list = it; } catch (_) {} }
    if (list == null || list.isEmpty) return 0;
    var m = list[0];
    for (var n in list) { if ((n as Comparable).compareTo(m) < 0) m = n; }
    return m;
}

num _sum(dynamic v) {
    Iterable<dynamic>? list;
    if (v is Iterable) list = v;
    else if (v is Map && v['items'] is Iterable) list = (v['items'] as Iterable);
    else if (v is Map && v['Items'] is Iterable) list = (v['Items'] as Iterable);
    else { try { var it = (v as dynamic).items; if (it is Iterable) list = it; } catch (_) {} }
    if (list == null) return 0;
    num s = 0;
    for (var n in list) s += (n as num);
    return s;
}
