// Generated by Mochi compiler v0.10.25 on 2025-07-13T06:19:23Z
import 'dart:convert';

var nation = [
  {'n_nationkey': 1, 'n_name': 'BRAZIL'},
  {'n_nationkey': 2, 'n_name': 'CANADA'},
];

var supplier = [
  {'s_suppkey': 100, 's_nationkey': 1},
  {'s_suppkey': 200, 's_nationkey': 2},
];

var part = [
  {'p_partkey': 1000, 'p_name': 'green metal box'},
  {'p_partkey': 2000, 'p_name': 'red plastic crate'},
];

var partsupp = [
  {'ps_partkey': 1000, 'ps_suppkey': 100, 'ps_supplycost': 10},
  {'ps_partkey': 1000, 'ps_suppkey': 200, 'ps_supplycost': 8},
];

var orders = [
  {'o_orderkey': 1, 'o_orderdate': '1995-02-10'},
  {'o_orderkey': 2, 'o_orderdate': '1997-01-01'},
];

var lineitem = [
  {
    'l_orderkey': 1,
    'l_partkey': 1000,
    'l_suppkey': 100,
    'l_quantity': 5,
    'l_extendedprice': 1000,
    'l_discount': 0.1,
  },
  {
    'l_orderkey': 2,
    'l_partkey': 1000,
    'l_suppkey': 200,
    'l_quantity': 10,
    'l_extendedprice': 800,
    'l_discount': 0.05,
  },
];

var prefix = 'green';

var start_date = '1995-01-01';

var end_date = '1996-12-31';

var result = (() {
  var _q0 = <dynamic>[];
  var _g1 = <String, List<dynamic>>{};
  for (var l in lineitem) {
    for (var p in part) {
      if (!(p['p_partkey'] == l['l_partkey'])) continue;
      for (var s in supplier) {
        if (!(s['s_suppkey'] == l['l_suppkey'])) continue;
        for (var ps in partsupp) {
          if (!(ps['ps_partkey'] == l['l_partkey'] &&
              ps['ps_suppkey'] == l['l_suppkey']))
            continue;
          for (var o in orders) {
            if (!(o['o_orderkey'] == l['l_orderkey'])) continue;
            for (var n in nation) {
              if (!(n['n_nationkey'] == s['s_nationkey'])) continue;
              if (!(p['p_name'].toString().substring(0, prefix.length) ==
                      prefix &&
                  o['o_orderdate'].toString().compareTo(start_date) >= 0 &&
                  o['o_orderdate'].toString().compareTo(end_date) <= 0))
                continue;
              var _k4 = {
                'nation': n['n_name'],
                'o_year': int.parse(
                  o['o_orderdate'].toString().substring(0, 4),
                ),
              };
              var _k4_s = jsonEncode(_k4);
              _g1.putIfAbsent(_k4_s, () => <dynamic>[]).add({
                'l': l,
                'p': p,
                's': s,
                'ps': ps,
                'o': o,
                'n': n,
              });
            }
          }
        }
      }
    }
  }
  for (var entry in _g1.entries) {
    var g = entry.value;
    var _k4 = jsonDecode(entry.key);
    _q0.add([
      [_k4['nation'], -(_k4['o_year'] as num)],
      {
        'nation': _k4['nation'],
        'o_year': _k4['o_year'].toString(),
        'profit': (() {
          var _t6 = (() {
            var _q5 = <dynamic>[];
            for (var x in g) {
              _q5.add(
                (((x['l']['l_extendedprice'] as num) *
                            ((1 - (x['l']['l_discount'] as num)) as num))
                        as num) -
                    (((x['ps']['ps_supplycost'] as num) *
                            (x['l']['l_quantity'] as num))
                        as num),
              );
            }
            return _q5;
          })();
          return _t6.reduce((a, b) => a + b);
        })(),
      },
    ]);
  }
  _q0.sort(
    (a, b) => (jsonEncode(a[0]) as Comparable).compareTo(jsonEncode(b[0])),
  );
  _q0 = [for (var x in _q0) x[1]];
  return _q0;
})();

void main() {
  print(jsonEncode(result));
}
