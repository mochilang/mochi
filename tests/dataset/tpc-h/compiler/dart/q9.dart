// Generated by Mochi compiler v0.10.28 on 2025-07-18T03:32:18Z
import 'dart:io';
import 'dart:convert';

var nation = [
  {'n_nationkey': 1, 'n_name': 'BRAZIL'},
  {'n_nationkey': 2, 'n_name': 'CANADA'},
];

var supplier = [
  {'s_suppkey': 100, 's_nationkey': 1},
  {'s_suppkey': 200, 's_nationkey': 2},
];

var _part = [
  {
  'p_partkey': 1000,
  'p_name': 'green metal box',
},
  {
  'p_partkey': 2000,
  'p_name': 'red plastic crate',
},
];

var partsupp = [
  {'ps_partkey': 1000, 'ps_suppkey': 100, 'ps_supplycost': 10},
  {'ps_partkey': 1000, 'ps_suppkey': 200, 'ps_supplycost': 8},
];

var orders = [
  {
  'o_orderkey': 1,
  'o_orderdate': '1995-02-10',
},
  {
  'o_orderkey': 2,
  'o_orderdate': '1997-01-01',
},
];

var lineitem = [
  {
  'l_orderkey': 1,
  'l_partkey': 1000,
  'l_suppkey': 100,
  'l_quantity': 5,
  'l_extendedprice': 1000,
  'l_discount': 0.1,
},
  {
  'l_orderkey': 2,
  'l_partkey': 1000,
  'l_suppkey': 200,
  'l_quantity': 10,
  'l_extendedprice': 800,
  'l_discount': 0.05,
},
];

var prefix = 'green';

var start_date = '1995-01-01';

var end_date = '1996-12-31';

var result = (() {
  var _q0 = <dynamic>[];
  var _g1 = <String, List<dynamic>>{};
  for (var l in lineitem) {
    for (var p in _part) {
      if (!(p['p_partkey'] == l['l_partkey'])) continue;
      for (var s in supplier) {
        if (!(s['s_suppkey'] == l['l_suppkey'])) continue;
        for (var ps in partsupp) {
          if (!(ps['ps_partkey'] == l['l_partkey'] && ps['ps_suppkey'] == l['l_suppkey'])) continue;
          for (var o in orders) {
            if (!(o['o_orderkey'] == l['l_orderkey'])) continue;
            for (var n in nation) {
              if (!(n['n_nationkey'] == s['s_nationkey'])) continue;
              if (!(p['p_name'].toString().substring(0, prefix.length) == prefix && o['o_orderdate'].toString().compareTo(start_date.toString()) >= 0 && o['o_orderdate'].toString().compareTo(end_date.toString()) <= 0)) continue;
              var _k3 = {
  'nation': n['n_name'],
  'o_year': int.parse(o['o_orderdate'].toString().substring(0, 4)),
};
              var _k3_s = jsonEncode(_k3);
              _g1.putIfAbsent(_k3_s, () => <dynamic>[]).add({'l': l, 'p': p, 's': s, 'ps': ps, 'o': o, 'n': n});
            }
          }
        }
      }
    }
  }
  for (var entry in _g1.entries) {
    var g = entry.value;
    var _k3 = jsonDecode(entry.key);
    _q0.add([[
  _k3['nation'],
  -(_k3['o_year'] as num),
], {
  'nation': _k3['nation'],
  'o_year': _k3['o_year'].toString(),
  'profit': _sum(g.map((x) => (((x['l']['l_extendedprice'] as num) * ((1 - (x['l']['l_discount'] as num)) as num)) as num) - (((x['ps']['ps_supplycost'] as num) * (x['l']['l_quantity'] as num)) as num))),
}]);
  }
  _q0.sort((a,b) => (jsonEncode(a[0]) as Comparable).compareTo(jsonEncode(b[0])));
  _q0 = [for (var x in _q0) x[1]];
  return _q0;
})();

void main() {
  print(jsonEncode(result));
}

dynamic _min(dynamic v) {
    List<dynamic>? list;
    if (v is List) list = v;
    else if (v is Map && v['items'] is List) list = (v['items'] as List);
    else if (v is Map && v['Items'] is List) list = (v['Items'] as List);
    else { try { var it = (v as dynamic).items; if (it is List) list = it; } catch (_) {} }
    if (list == null || list.isEmpty) return 0;
    var m = list[0];
    for (var n in list) { if ((n as Comparable).compareTo(m) < 0) m = n; }
    return m;
}

num _sum(dynamic v) {
    Iterable<dynamic>? list;
    if (v is Iterable) list = v;
    else if (v is Map && v['items'] is Iterable) list = (v['items'] as Iterable);
    else if (v is Map && v['Items'] is Iterable) list = (v['Items'] as Iterable);
    else { try { var it = (v as dynamic).items; if (it is Iterable) list = it; } catch (_) {} }
    if (list == null) return 0;
    num s = 0;
    for (var n in list) s += (n as num);
    return s;
}
