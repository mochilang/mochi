func main (regs=92)
  // let supplier = [
  Const        r0, [{"s_address": "123 Hilltop", "s_comment": "Reliable and efficient", "s_name": "AlphaSupply", "s_suppkey": 100}, {"s_address": "456 Riverside", "s_comment": "Known for Customer Complaints", "s_name": "BetaSupply", "s_suppkey": 200}]
  // let part = [
  Const        r2, [{"p_brand": "Brand#12", "p_partkey": 1, "p_size": 5, "p_type": "SMALL ANODIZED"}, {"p_brand": "Brand#23", "p_partkey": 2, "p_size": 10, "p_type": "MEDIUM POLISHED"}]
  // let partsupp = [
  Const        r4, [{"ps_partkey": 1, "ps_suppkey": 100}, {"ps_partkey": 2, "ps_suppkey": 200}]
  // from ps in partsupp
  Const        r6, []
  IterPrep     r7, r4
  Len          r8, r7
  // join p in part on p.p_partkey == ps.ps_partkey
  IterPrep     r9, r2
  Len          r10, r9
  // from ps in partsupp
  Const        r11, 0
  Less         r12, r11, r8
  JumpIfFalse  r12, L0
L6:
  Index        r13, r7, r11
  // join p in part on p.p_partkey == ps.ps_partkey
  Const        r15, 0
  Less         r16, r15, r10
  JumpIfFalse  r16, L1
  Index        r17, r9, r15
L5:
  Move         r18, r17
  Const        r19, "p_partkey"
  Index        r20, r18, r19
  Const        r21, "ps_partkey"
  Index        r22, r13, r21
  Equal        r23, r20, r22
  JumpIfFalse  r23, L2
  // p.p_brand == "Brand#12" &&
  Const        r24, "p_brand"
  Index        r25, r18, r24
  Const        r26, "Brand#12"
  Equal        r27, r25, r26
  // p.p_size == 5
  Const        r28, "p_size"
  Index        r29, r18, r28
  Const        r30, 5
  Equal        r31, r29, r30
  // p.p_brand == "Brand#12" &&
  JumpIfFalse  r27, L3
  Const        r33, "p_type"
  Index        r34, r18, r33
  // p.p_type.contains("SMALL") &&
  Const        r35, "SMALL"
  In           r36, r35, r34
  JumpIfFalse  r36, L4
  // p.p_brand == "Brand#12" &&
  JumpIfFalse  r31, L2
  // select ps.ps_suppkey
  Const        r38, "ps_suppkey"
  Index        r39, r13, r38
  // from ps in partsupp
  Append       r40, r6, r39
L3:
  Move         r6, r40
  // join p in part on p.p_partkey == ps.ps_partkey
  Const        r41, 1
  Add          r42, r15, r41
L4:
  Move         r15, r42
  Jump         L5
  // from ps in partsupp
  Jump         L6
L2:
  // from s in supplier
  IterPrep     r47, r1
  Len          r48, r47
L1:
  Const        r49, 0
  Less         r50, r49, r48
  JumpIfFalse  r50, L7
  Index        r51, r47, r49
L0:
  // where !(s.s_suppkey in excluded_suppliers) && (!s.s_comment.contains("Customer")) && (!s.s_comment.contains("Complaints"))
  Const        r53, "s_suppkey"
  Index        r54, r51, r53
  In           r55, r54, r6
  Not          r56, r55
  JumpIfFalse  r56, L8
  Const        r58, "s_comment"
  Index        r59, r51, r58
  Const        r60, "Customer"
  In           r61, r60, r59
  Not          r62, r61
  JumpIfFalse  r62, L9
L11:
  Const        r64, "s_comment"
  Index        r65, r51, r64
  Const        r66, "Complaints"
  In           r67, r66, r65
  Not          r68, r67
  JumpIfFalse  r68, L10
L8:
  // from s in supplier
  Jump         L11
L9:
  // order by s.s_name
  Sort         r88, r85
  // print(result)
  Print        r88
  // expect result == []
  Const        r90, []
  Equal        r91, r88, r90
  Expect       r91
  Return       r0
