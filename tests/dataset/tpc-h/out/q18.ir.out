func main (regs=222)
  // let nation = [
  Const        r0, [{"n_name": "GERMANY", "n_nationkey": 1}]
  // let customer = [
  Const        r1, [{"c_acctbal": 1000.0, "c_address": "123 Market St", "c_comment": "Premium client", "c_custkey": 1, "c_name": "Alice", "c_nationkey": 1, "c_phone": "123-456"}, {"c_acctbal": 200.0, "c_address": "456 Side St", "c_comment": "Frequent returns", "c_custkey": 2, "c_name": "Bob", "c_nationkey": 1, "c_phone": "987-654"}]
  // let orders = [
  Const        r2, [{"o_custkey": 1, "o_orderkey": 100}, {"o_custkey": 1, "o_orderkey": 200}, {"o_custkey": 2, "o_orderkey": 300}]
  // let lineitem = [
  Const        r3, [{"l_discount": 0.1, "l_extendedprice": 1000.0, "l_orderkey": 100, "l_quantity": 150}, {"l_discount": 0.0, "l_extendedprice": 800.0, "l_orderkey": 200, "l_quantity": 100}, {"l_discount": 0.05, "l_extendedprice": 300.0, "l_orderkey": 300, "l_quantity": 30}]
  // let threshold = 200
  Const        r4, 200
  // from c in customer
  Const        r5, []
  // c_name: c.c_name,
  Const        r6, "c_name"
  // c_custkey: c.c_custkey,
  Const        r7, "c_custkey"
  // c_acctbal: c.c_acctbal,
  Const        r8, "c_acctbal"
  // c_address: c.c_address,
  Const        r9, "c_address"
  // c_phone: c.c_phone,
  Const        r10, "c_phone"
  // c_comment: c.c_comment,
  Const        r11, "c_comment"
  // n_name: n.n_name
  Const        r12, "n_name"
  // having sum(from x in g select x.l.l_quantity) > threshold
  Const        r13, "l"
  Const        r14, "l_quantity"
  // c_name: g.key.c_name,
  Const        r15, "key"
  // revenue: sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount)),
  Const        r16, "revenue"
  Const        r17, "l_extendedprice"
  Const        r18, "l_discount"
  // from c in customer
  MakeMap      r19, 0, r0
  Const        r21, []
  Move         r20, r21
  IterPrep     r22, r1
  Len          r23, r22
  Const        r24, 0
L9:
  LessInt      r25, r24, r23
  JumpIfFalse  r25, L0
  Index        r26, r22, r24
  Move         r27, r26
  // join o in orders on o.o_custkey == c.c_custkey
  IterPrep     r28, r2
  Len          r29, r28
  Const        r30, 0
L8:
  LessInt      r31, r30, r29
  JumpIfFalse  r31, L1
  Index        r32, r28, r30
  Move         r33, r32
  Const        r34, "o_custkey"
  Index        r35, r33, r34
  Index        r36, r27, r7
  Equal        r37, r35, r36
  JumpIfFalse  r37, L2
  // join l in lineitem on l.l_orderkey == o.o_orderkey
  IterPrep     r38, r3
  Len          r39, r38
  Const        r40, 0
L7:
  LessInt      r41, r40, r39
  JumpIfFalse  r41, L2
  Index        r42, r38, r40
  Move         r43, r42
  Const        r44, "l_orderkey"
  Index        r45, r43, r44
  Const        r46, "o_orderkey"
  Index        r47, r33, r46
  Equal        r48, r45, r47
  JumpIfFalse  r48, L3
  // join n in nation on n.n_nationkey == c.c_nationkey
  IterPrep     r49, r0
  Len          r50, r49
  Const        r51, 0
L6:
  LessInt      r52, r51, r50
  JumpIfFalse  r52, L3
  Index        r53, r49, r51
  Move         r54, r53
  Const        r55, "n_nationkey"
  Index        r56, r54, r55
  Const        r57, "c_nationkey"
  Index        r58, r27, r57
  Equal        r59, r56, r58
  JumpIfFalse  r59, L4
  // from c in customer
  Const        r60, "c"
  Move         r61, r27
  Const        r62, "o"
  Move         r63, r33
  Move         r64, r43
  Const        r65, "n"
  Move         r66, r54
  Move         r67, r60
  Move         r68, r61
  Move         r69, r62
  Move         r70, r63
  Move         r71, r13
  Move         r72, r64
  Move         r73, r65
  Move         r74, r66
  MakeMap      r75, 4, r67
  // c_name: c.c_name,
  Const        r76, "c_name"
  Index        r77, r27, r6
  // c_custkey: c.c_custkey,
  Const        r78, "c_custkey"
  Index        r79, r27, r7
  // c_acctbal: c.c_acctbal,
  Const        r80, "c_acctbal"
  Index        r81, r27, r8
  // c_address: c.c_address,
  Const        r82, "c_address"
  Index        r83, r27, r9
  // c_phone: c.c_phone,
  Const        r84, "c_phone"
  Index        r85, r27, r10
  // c_comment: c.c_comment,
  Const        r86, "c_comment"
  Index        r87, r27, r11
  // n_name: n.n_name
  Const        r88, "n_name"
  Index        r89, r54, r12
  // c_name: c.c_name,
  Move         r90, r76
  Move         r91, r77
  // c_custkey: c.c_custkey,
  Move         r92, r78
  Move         r93, r79
  // c_acctbal: c.c_acctbal,
  Move         r94, r80
  Move         r95, r81
  // c_address: c.c_address,
  Move         r96, r82
  Move         r97, r83
  // c_phone: c.c_phone,
  Move         r98, r84
  Move         r99, r85
  // c_comment: c.c_comment,
  Move         r100, r86
  Move         r101, r87
  // n_name: n.n_name
  Move         r102, r88
  Move         r103, r89
  // group by {
  MakeMap      r104, 7, r90
  Str          r105, r104
  In           r106, r105, r19
  JumpIfTrue   r106, L5
  // from c in customer
  Const        r107, "__group__"
  Const        r108, true
  // group by {
  Move         r109, r104
  // from c in customer
  Const        r110, "items"
  Move         r111, r21
  Const        r112, "count"
  Const        r113, 0
  Move         r114, r107
  Move         r115, r108
  Move         r116, r15
  Move         r117, r109
  Move         r118, r110
  Move         r119, r111
  Move         r120, r112
  Move         r121, r113
  MakeMap      r122, 4, r114
  SetIndex     r19, r105, r122
  Append       r123, r20, r122
  Move         r20, r123
L5:
  Index        r124, r19, r105
  Index        r125, r124, r110
  Append       r126, r125, r75
  SetIndex     r124, r110, r126
  Index        r127, r124, r112
  Const        r128, 1
  AddInt       r129, r127, r128
  SetIndex     r124, r112, r129
L4:
  // join n in nation on n.n_nationkey == c.c_nationkey
  AddInt       r51, r51, r128
  Jump         L6
L3:
  // join l in lineitem on l.l_orderkey == o.o_orderkey
  AddInt       r40, r40, r128
  Jump         L7
L2:
  // join o in orders on o.o_custkey == c.c_custkey
  AddInt       r30, r30, r128
  Jump         L8
L1:
  // from c in customer
  AddInt       r24, r24, r128
  Jump         L9
L0:
  Move         r130, r113
  Len          r131, r20
L17:
  LessInt      r132, r130, r131
  JumpIfFalse  r132, L10
  Index        r133, r20, r130
  Move         r134, r133
  // having sum(from x in g select x.l.l_quantity) > threshold
  Const        r135, []
  IterPrep     r136, r134
  Len          r137, r136
  Move         r138, r113
L12:
  LessInt      r139, r138, r137
  JumpIfFalse  r139, L11
  Index        r140, r136, r138
  Move         r141, r140
  Index        r142, r141, r13
  Index        r143, r142, r14
  Append       r144, r135, r143
  Move         r135, r144
  AddInt       r138, r138, r128
  Jump         L12
L11:
  Sum          r145, r135
  Less         r146, r4, r145
  JumpIfFalse  r146, L10
  // c_name: g.key.c_name,
  Const        r147, "c_name"
  Index        r148, r134, r15
  Index        r149, r148, r6
  // c_custkey: g.key.c_custkey,
  Const        r150, "c_custkey"
  Index        r151, r134, r15
  Index        r152, r151, r7
  // revenue: sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount)),
  Const        r153, "revenue"
  Const        r154, []
  IterPrep     r155, r134
  Len          r156, r155
  Move         r157, r113
L14:
  LessInt      r158, r157, r156
  JumpIfFalse  r158, L13
  Index        r159, r155, r157
  Move         r141, r159
  Index        r160, r141, r13
  Index        r161, r160, r17
  Index        r162, r141, r13
  Index        r163, r162, r18
  Sub          r164, r128, r163
  Mul          r165, r161, r164
  Append       r166, r154, r165
  Move         r154, r166
  AddInt       r157, r157, r128
  Jump         L14
L13:
  Sum          r167, r154
  // c_acctbal: g.key.c_acctbal,
  Const        r168, "c_acctbal"
  Index        r169, r134, r15
  Index        r170, r169, r8
  // n_name: g.key.n_name,
  Const        r171, "n_name"
  Index        r172, r134, r15
  Index        r173, r172, r12
  // c_address: g.key.c_address,
  Const        r174, "c_address"
  Index        r175, r134, r15
  Index        r176, r175, r9
  // c_phone: g.key.c_phone,
  Const        r177, "c_phone"
  Index        r178, r134, r15
  Index        r179, r178, r10
  // c_comment: g.key.c_comment
  Const        r180, "c_comment"
  Index        r181, r134, r15
  Index        r182, r181, r11
  // c_name: g.key.c_name,
  Move         r183, r147
  Move         r184, r149
  // c_custkey: g.key.c_custkey,
  Move         r185, r150
  Move         r186, r152
  // revenue: sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount)),
  Move         r187, r153
  Move         r188, r167
  // c_acctbal: g.key.c_acctbal,
  Move         r189, r168
  Move         r190, r170
  // n_name: g.key.n_name,
  Move         r191, r171
  Move         r192, r173
  // c_address: g.key.c_address,
  Move         r193, r174
  Move         r194, r176
  // c_phone: g.key.c_phone,
  Move         r195, r177
  Move         r196, r179
  // c_comment: g.key.c_comment
  Move         r197, r180
  Move         r198, r182
  // select {
  MakeMap      r199, 8, r183
  // order by -sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount))
  Const        r200, []
  IterPrep     r201, r134
  Len          r202, r201
  Move         r203, r113
L16:
  LessInt      r204, r203, r202
  JumpIfFalse  r204, L15
  Index        r205, r201, r203
  Move         r141, r205
  Index        r206, r141, r13
  Index        r207, r206, r17
  Index        r208, r141, r13
  Index        r209, r208, r18
  Sub          r210, r128, r209
  Mul          r211, r207, r210
  Append       r212, r200, r211
  Move         r200, r212
  AddInt       r203, r203, r128
  Jump         L16
L15:
  Sum          r213, r200
  Neg          r214, r213
  Move         r215, r214
  // from c in customer
  Move         r216, r199
  MakeList     r217, 2, r215
  Append       r218, r5, r217
  Move         r5, r218
  AddInt       r130, r130, r128
  Jump         L17
L10:
  // order by -sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount))
  Sort         r219, r5
  // from c in customer
  Move         r5, r219
  // json(result)
  JSON         r5
  // expect result == [
  Const        r220, [{"c_acctbal": 1000.0, "c_address": "123 Market St", "c_comment": "Premium client", "c_custkey": 1, "c_name": "Alice", "c_phone": "123-456", "n_name": "GERMANY", "revenue": 1700.0}]
  Equal        r221, r5, r220
  Expect       r221
  Return       r0
