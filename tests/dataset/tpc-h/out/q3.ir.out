func main (regs=211)
  // let customer = [
  Const        r0, [{"c_custkey": 1, "c_mktsegment": "BUILDING"}, {"c_custkey": 2, "c_mktsegment": "AUTOMOBILE"}]
  // let orders = [
  Const        r1, [{"o_custkey": 1, "o_orderdate": "1995-03-14", "o_orderkey": 100, "o_shippriority": 1}, {"o_custkey": 2, "o_orderdate": "1995-03-10", "o_orderkey": 200, "o_shippriority": 2}]
  // let lineitem = [
  Const        r2, [{"l_discount": 0.05, "l_extendedprice": 1000, "l_orderkey": 100, "l_shipdate": "1995-03-16"}, {"l_discount": 0, "l_extendedprice": 500, "l_orderkey": 100, "l_shipdate": "1995-03-20"}, {"l_discount": 0.1, "l_extendedprice": 1000, "l_orderkey": 200, "l_shipdate": "1995-03-14"}]
  // let cutoff = "1995-03-15"
  Const        r3, "1995-03-15"
  // let segment = "BUILDING"
  Const        r4, "BUILDING"
  // from c in customer
  Const        r5, []
  // where c.c_mktsegment == segment
  Const        r6, "c_mktsegment"
  // from c in customer
  IterPrep     r7, r0
  Len          r8, r7
  Const        r10, 0
  Move         r9, r10
L2:
  LessInt      r11, r9, r8
  JumpIfFalse  r11, L0
  Index        r13, r7, r9
  // where c.c_mktsegment == segment
  Index        r14, r13, r6
  Equal        r15, r14, r4
  JumpIfFalse  r15, L1
  // from c in customer
  Append       r5, r5, r13
L1:
  Const        r17, 1
  AddInt       r9, r9, r17
  Jump         L2
L0:
  // from o in orders
  Const        r18, []
  IterPrep     r19, r1
  Len          r20, r19
  // join c in building_customers on o.o_custkey == c.c_custkey
  IterPrep     r21, r5
  Len          r22, r21
  Const        r23, "o_custkey"
  Const        r24, "c_custkey"
  // where o.o_orderdate < cutoff
  Const        r25, "o_orderdate"
  // from o in orders
  Const        r26, 0
L7:
  LessInt      r27, r26, r20
  JumpIfFalse  r27, L3
  Index        r29, r19, r26
  // join c in building_customers on o.o_custkey == c.c_custkey
  Const        r30, 0
L6:
  LessInt      r31, r30, r22
  JumpIfFalse  r31, L4
  Index        r13, r21, r30
  Index        r33, r29, r23
  Index        r34, r13, r24
  Equal        r35, r33, r34
  JumpIfFalse  r35, L5
  // where o.o_orderdate < cutoff
  Index        r36, r29, r25
  Less         r37, r36, r3
  JumpIfFalse  r37, L5
  // from o in orders
  Append       r18, r18, r29
L5:
  // join c in building_customers on o.o_custkey == c.c_custkey
  AddInt       r30, r30, r17
  Jump         L6
L4:
  // from o in orders
  AddInt       r26, r26, r17
  Jump         L7
L3:
  // from l in lineitem
  Const        r39, []
  // where l.l_shipdate > cutoff
  Const        r40, "l_shipdate"
  // from l in lineitem
  IterPrep     r41, r2
  Len          r42, r41
  Move         r43, r10
L10:
  LessInt      r44, r43, r42
  JumpIfFalse  r44, L8
  Index        r46, r41, r43
  // where l.l_shipdate > cutoff
  Index        r47, r46, r40
  Less         r48, r3, r47
  JumpIfFalse  r48, L9
  // from l in lineitem
  Append       r39, r39, r46
L9:
  AddInt       r43, r43, r17
  Jump         L10
L8:
  // from o in valid_orders
  Const        r50, []
  // o_orderkey: o.o_orderkey,
  Const        r51, "o_orderkey"
  // o_shippriority: o.o_shippriority
  Const        r52, "o_shippriority"
  // l_orderkey: g.key.o_orderkey,
  Const        r53, "l_orderkey"
  Const        r54, "key"
  // revenue: sum(from r in g select r.l.l_extendedprice * (1 - r.l.l_discount)),
  Const        r55, "revenue"
  Const        r56, "l"
  Const        r57, "l_extendedprice"
  Const        r58, "l_discount"
  // from o in valid_orders
  MakeMap      r59, 0, r0
  Const        r60, []
  IterPrep     r62, r18
  Len          r63, r62
  Const        r64, 0
L16:
  LessInt      r65, r64, r63
  JumpIfFalse  r65, L11
  Index        r29, r62, r64
  // join l in valid_lineitems on l.l_orderkey == o.o_orderkey
  IterPrep     r67, r39
  Len          r68, r67
  Const        r69, 0
L15:
  LessInt      r70, r69, r68
  JumpIfFalse  r70, L12
  Index        r46, r67, r69
  Index        r72, r46, r53
  Index        r73, r29, r51
  Equal        r74, r72, r73
  JumpIfFalse  r74, L13
  // from o in valid_orders
  Const        r75, "o"
  Move         r76, r29
  Move         r77, r46
  Move         r78, r75
  Move         r79, r76
  Move         r80, r56
  Move         r81, r77
  MakeMap      r82, 2, r78
  // o_orderkey: o.o_orderkey,
  Const        r83, "o_orderkey"
  Index        r84, r29, r51
  // o_orderdate: o.o_orderdate,
  Const        r85, "o_orderdate"
  Index        r86, r29, r25
  // o_shippriority: o.o_shippriority
  Const        r87, "o_shippriority"
  Index        r88, r29, r52
  // o_orderkey: o.o_orderkey,
  Move         r89, r83
  Move         r90, r84
  // o_orderdate: o.o_orderdate,
  Move         r91, r85
  Move         r92, r86
  // o_shippriority: o.o_shippriority
  Move         r93, r87
  Move         r94, r88
  // group by {
  MakeMap      r95, 3, r89
  Str          r96, r95
  In           r97, r96, r59
  JumpIfTrue   r97, L14
  // from o in valid_orders
  Const        r98, []
  Const        r99, "__group__"
  Const        r100, true
  Const        r101, "key"
  // group by {
  Move         r102, r95
  // from o in valid_orders
  Const        r103, "items"
  Move         r104, r98
  Const        r105, "count"
  Const        r106, 0
  Move         r107, r99
  Move         r108, r100
  Move         r109, r101
  Move         r110, r102
  Move         r111, r103
  Move         r112, r104
  Move         r113, r105
  Move         r114, r106
  MakeMap      r115, 4, r107
  SetIndex     r59, r96, r115
  Append       r60, r60, r115
L14:
  Const        r117, "items"
  Index        r118, r59, r96
  Index        r119, r118, r117
  Append       r120, r119, r82
  SetIndex     r118, r117, r120
  Const        r121, "count"
  Index        r122, r118, r121
  AddInt       r123, r122, r17
  SetIndex     r118, r121, r123
L13:
  // join l in valid_lineitems on l.l_orderkey == o.o_orderkey
  AddInt       r69, r69, r17
  Jump         L15
L12:
  // from o in valid_orders
  AddInt       r64, r64, r17
  Jump         L16
L11:
  Move         r124, r10
  Len          r125, r60
L22:
  LessInt      r126, r124, r125
  JumpIfFalse  r126, L17
  Index        r128, r60, r124
  // l_orderkey: g.key.o_orderkey,
  Const        r129, "l_orderkey"
  Index        r130, r128, r54
  Index        r131, r130, r51
  // revenue: sum(from r in g select r.l.l_extendedprice * (1 - r.l.l_discount)),
  Const        r132, "revenue"
  Const        r133, []
  IterPrep     r134, r128
  Len          r135, r134
  Move         r136, r10
L19:
  LessInt      r137, r136, r135
  JumpIfFalse  r137, L18
  Index        r139, r134, r136
  Index        r140, r139, r56
  Index        r141, r140, r57
  Index        r142, r139, r56
  Index        r143, r142, r58
  Sub          r144, r17, r143
  Mul          r145, r141, r144
  Append       r133, r133, r145
  AddInt       r136, r136, r17
  Jump         L19
L18:
  Sum          r147, r133
  // o_orderdate: g.key.o_orderdate,
  Const        r148, "o_orderdate"
  Index        r149, r128, r54
  Index        r150, r149, r25
  // o_shippriority: g.key.o_shippriority
  Const        r151, "o_shippriority"
  Index        r152, r128, r54
  Index        r153, r152, r52
  // l_orderkey: g.key.o_orderkey,
  Move         r154, r129
  Move         r155, r131
  // revenue: sum(from r in g select r.l.l_extendedprice * (1 - r.l.l_discount)),
  Move         r156, r132
  Move         r157, r147
  // o_orderdate: g.key.o_orderdate,
  Move         r158, r148
  Move         r159, r150
  // o_shippriority: g.key.o_shippriority
  Move         r160, r151
  Move         r161, r153
  // select {
  MakeMap      r162, 4, r154
  // -sum(from r in g select r.l.l_extendedprice * (1 - r.l.l_discount)),
  Const        r163, []
  IterPrep     r164, r128
  Len          r165, r164
  Move         r166, r10
L21:
  LessInt      r167, r166, r165
  JumpIfFalse  r167, L20
  Index        r139, r164, r166
  Index        r169, r139, r56
  Index        r170, r169, r57
  Index        r171, r139, r56
  Index        r172, r171, r58
  Sub          r173, r17, r172
  Mul          r174, r170, r173
  Append       r163, r163, r174
  AddInt       r166, r166, r17
  Jump         L21
L20:
  Sum          r176, r163
  Neg          r178, r176
  // g.key.o_orderdate
  Index        r179, r128, r54
  Index        r181, r179, r25
  // sort by [
  MakeList     r183, 2, r178
  // from o in valid_orders
  Move         r184, r162
  MakeList     r185, 2, r183
  Append       r50, r50, r185
  AddInt       r124, r124, r17
  Jump         L22
L17:
  // sort by [
  Sort         r50, r50
  // json(order_line_join)
  JSON         r50
  // l_orderkey: 100,
  Const        r188, "l_orderkey"
  Const        r189, 100
  // revenue: 1000.0 * 0.95 + 500.0,
  Const        r190, "revenue"
  Const        r191, 1000
  Const        r192, 0.95
  Const        r193, 950
  Const        r194, 500
  Const        r195, 1450
  // o_orderdate: "1995-03-14",
  Const        r196, "o_orderdate"
  Const        r197, "1995-03-14"
  // o_shippriority: 1
  Const        r198, "o_shippriority"
  // l_orderkey: 100,
  Move         r199, r188
  Move         r200, r189
  // revenue: 1000.0 * 0.95 + 500.0,
  Move         r201, r190
  Move         r202, r195
  // o_orderdate: "1995-03-14",
  Move         r203, r196
  Move         r204, r197
  // o_shippriority: 1
  Move         r205, r198
  Move         r206, r17
  // {
  MakeMap      r208, 4, r199
  // expect order_line_join == [
  MakeList     r209, 1, r208
  Equal        r210, r50, r209
  Expect       r210
  Return       r0
