func main (regs=252)
  // let customer = [
  Const        r0, [{"c_custkey": 1, "c_mktsegment": "BUILDING"}, {"c_custkey": 2, "c_mktsegment": "AUTOMOBILE"}]
  Move         r1, r0
  // let orders = [
  Const        r2, [{"o_custkey": 1, "o_orderdate": "1995-03-14", "o_orderkey": 100, "o_shippriority": 1}, {"o_custkey": 2, "o_orderdate": "1995-03-10", "o_orderkey": 200, "o_shippriority": 2}]
  // let lineitem = [
  Const        r4, [{"l_discount": 0.05, "l_extendedprice": 1000, "l_orderkey": 100, "l_shipdate": "1995-03-16"}, {"l_discount": 0, "l_extendedprice": 500, "l_orderkey": 100, "l_shipdate": "1995-03-20"}, {"l_discount": 0.1, "l_extendedprice": 1000, "l_orderkey": 200, "l_shipdate": "1995-03-14"}]
  // let cutoff = "1995-03-15"
  Const        r6, "1995-03-15"
  // let segment = "BUILDING"
  Const        r8, "BUILDING"
  // from c in customer
  Const        r10, []
  IterPrep     r11, r1
  Len          r12, r11
  Const        r13, 0
  Less         r14, r13, r12
  JumpIfFalse  r14, L0
  Index        r15, r11, r13
  // where c.c_mktsegment == segment
  Const        r17, "c_mktsegment"
L2:
  Index        r18, r15, r17
  Equal        r19, r18, r8
  JumpIfFalse  r19, L1
  // from c in customer
  Append       r20, r10, r15
  Const        r21, 1
  Add          r22, r13, r21
  Jump         L2
  // from o in orders
  Const        r24, []
  IterPrep     r25, r2
  Len          r26, r25
L1:
  // join c in building_customers on o.o_custkey == c.c_custkey
  IterPrep     r27, r20
  Len          r28, r27
  // from o in orders
  Const        r29, 0
  Less         r30, r29, r26
L0:
  JumpIfFalse  r30, L3
  Index        r31, r25, r29
  // join c in building_customers on o.o_custkey == c.c_custkey
  Const        r33, 0
  Less         r34, r33, r28
  JumpIfFalse  r34, L4
  Index        r35, r27, r33
  Const        r36, "o_custkey"
L7:
  Index        r37, r31, r36
  Const        r38, "c_custkey"
  Index        r39, r35, r38
  Equal        r40, r37, r39
  JumpIfFalse  r40, L5
L6:
  // where o.o_orderdate < cutoff
  Const        r41, "o_orderdate"
  Index        r42, r31, r41
  Less         r43, r42, r6
  JumpIfFalse  r43, L5
  // from o in orders
  Append       r44, r24, r31
  // join c in building_customers on o.o_custkey == c.c_custkey
  Const        r45, 1
  Add          r46, r33, r45
  Jump         L6
  // from o in orders
  Const        r47, 1
  Add          r48, r29, r47
  Jump         L7
  // from l in lineitem
  Const        r50, []
  IterPrep     r51, r4
  Len          r52, r51
  Const        r53, 0
  Less         r54, r53, r52
L5:
  JumpIfFalse  r54, L8
  Index        r55, r51, r53
  // where l.l_shipdate > cutoff
  Const        r57, "l_shipdate"
  Index        r58, r55, r57
L4:
  Less         r59, r6, r58
  JumpIfFalse  r59, L9
  // from l in lineitem
  Append       r60, r50, r55
  Const        r61, 1
L3:
  Add          r62, r53, r61
  Jump         L10
  // from o in valid_orders
  Const        r64, []
  MakeMap      r65, 0, r0
  Const        r66, []
L10:
  IterPrep     r67, r44
  Len          r68, r67
  Const        r69, 0
  Less         r70, r69, r68
  JumpIfFalse  r70, L11
  Index        r71, r67, r69
  // join l in valid_lineitems on l.l_orderkey == o.o_orderkey
  IterPrep     r72, r60
  Len          r73, r72
  Const        r74, 0
  Less         r75, r74, r73
L9:
  JumpIfFalse  r75, L12
  Index        r76, r72, r74
  Const        r77, "l_orderkey"
  Index        r78, r76, r77
L8:
  Const        r79, "o_orderkey"
  Index        r80, r71, r79
  Equal        r81, r78, r80
  JumpIfFalse  r81, L13
  // from o in valid_orders
  Const        r82, "o"
  Move         r83, r71
  Const        r84, "l"
L16:
  Move         r85, r76
  MakeMap      r86, 2, r82
  // o_orderkey: o.o_orderkey,
  Const        r87, "o_orderkey"
  Const        r88, "o_orderkey"
  Index        r89, r71, r88
  // o_orderdate: o.o_orderdate,
  Const        r90, "o_orderdate"
  Const        r91, "o_orderdate"
L15:
  Index        r92, r71, r91
  // o_shippriority: o.o_shippriority
  Const        r93, "o_shippriority"
  Const        r94, "o_shippriority"
  Index        r95, r71, r94
  // o_orderkey: o.o_orderkey,
  Move         r96, r87
  Move         r97, r89
  // o_orderdate: o.o_orderdate,
  Move         r98, r90
  Move         r99, r92
  // o_shippriority: o.o_shippriority
  Move         r100, r93
  Move         r101, r95
  // group by {
  MakeMap      r102, 3, r96
  Str          r103, r102
  In           r104, r103, r65
  JumpIfTrue   r104, L14
  // from o in valid_orders
  Const        r105, []
  Const        r106, "__group__"
  Const        r107, true
  Const        r108, "key"
  // group by {
  Move         r109, r102
  // from o in valid_orders
  Const        r110, "items"
  Move         r111, r105
  MakeMap      r112, 3, r106
  SetIndex     r65, r103, r112
  Append       r113, r66, r112
  Const        r114, "items"
  Index        r115, r65, r103
  Index        r116, r115, r114
  Append       r117, r116, r86
  SetIndex     r115, r114, r117
  // join l in valid_lineitems on l.l_orderkey == o.o_orderkey
  Const        r118, 1
  Add          r119, r74, r118
  Jump         L15
  // from o in valid_orders
  Const        r120, 1
  Add          r121, r69, r120
  Jump         L16
  Const        r122, 0
  Len          r123, r113
  Less         r124, r122, r123
  JumpIfFalse  r124, L17
  Index        r125, r113, r122
  // l_orderkey: g.key.o_orderkey,
  Const        r127, "l_orderkey"
  Const        r128, "key"
  Index        r129, r125, r128
  Const        r130, "o_orderkey"
  Index        r131, r129, r130
L14:
  // revenue: sum(from r in g select r.l.l_extendedprice * (1 - r.l.l_discount)),
  Const        r132, "revenue"
  Const        r133, []
  IterPrep     r134, r125
  Len          r135, r134
  Const        r136, 0
L13:
  Less         r137, r136, r135
  JumpIfFalse  r137, L18
  Index        r138, r134, r136
  Const        r140, "l"
L12:
  Index        r141, r138, r140
  Const        r142, "l_extendedprice"
  Index        r143, r141, r142
  Const        r144, 1
L11:
  Const        r145, "l"
  Index        r146, r138, r145
L22:
  Const        r147, "l_discount"
  Index        r148, r146, r147
  Sub          r149, r144, r148
  Mul          r150, r143, r149
  Append       r151, r133, r150
  Const        r152, 1
  Add          r153, r136, r152
  Jump         L19
  Sum          r154, r151
  // o_orderdate: g.key.o_orderdate,
  Const        r155, "o_orderdate"
  Const        r156, "key"
  Index        r157, r125, r156
  Const        r158, "o_orderdate"
  Index        r159, r157, r158
L19:
  // o_shippriority: g.key.o_shippriority
  Const        r160, "o_shippriority"
  Const        r161, "key"
  Index        r162, r125, r161
  Const        r163, "o_shippriority"
  Index        r164, r162, r163
  // l_orderkey: g.key.o_orderkey,
  Move         r165, r127
  Move         r166, r131
  // revenue: sum(from r in g select r.l.l_extendedprice * (1 - r.l.l_discount)),
  Move         r167, r132
  Move         r168, r154
  // o_orderdate: g.key.o_orderdate,
  Move         r169, r155
  Move         r170, r159
  // o_shippriority: g.key.o_shippriority
  Move         r171, r160
  Move         r172, r164
  // select {
  MakeMap      r173, 4, r165
  // -sum(from r in g select r.l.l_extendedprice * (1 - r.l.l_discount)),
  Const        r174, []
  IterPrep     r175, r125
  Len          r176, r175
  Const        r177, 0
  Less         r178, r177, r176
  JumpIfFalse  r178, L20
  Index        r179, r175, r177
L18:
  Const        r180, "l"
  Index        r181, r179, r180
  Const        r182, "l_extendedprice"
  Index        r183, r181, r182
  Const        r184, 1
  Const        r185, "l"
  Index        r186, r179, r185
  Const        r187, "l_discount"
  Index        r188, r186, r187
  Sub          r189, r184, r188
  Mul          r190, r183, r189
  Append       r191, r174, r190
  Const        r192, 1
  Add          r193, r177, r192
  Jump         L21
  Sum          r194, r191
  Neg          r195, r194
  Move         r196, r195
  // g.key.o_orderdate
  Const        r197, "key"
  // sort by [
  MakeList     r202, 2, r196
  Move         r203, r202
  // from o in valid_orders
  Move         r204, r173
  MakeList     r205, 2, r203
  Append       r206, r64, r205
L21:
  Move         r64, r206
  Const        r207, 1
  Add          r208, r122, r207
  Jump         L22
  // sort by [
  Sort         r209, r64
  // json(order_line_join)
  JSON         r210
  // l_orderkey: 100,
  Const        r211, "l_orderkey"
  Const        r212, 100
  // revenue: 1000.0 * 0.95 + 500.0,
  Const        r213, "revenue"
  Const        r218, 1450
  // o_orderdate: "1995-03-14",
  Const        r219, "o_orderdate"
  Const        r220, "1995-03-14"
  // o_shippriority: 1
  Const        r221, "o_shippriority"
  Const        r222, 1
  // l_orderkey: 100,
  Move         r223, r211
  Move         r224, r212
  // revenue: 1000.0 * 0.95 + 500.0,
  Move         r225, r213
  Move         r226, r218
  // o_orderdate: "1995-03-14",
  Move         r227, r219
  Move         r228, r220
  // o_shippriority: 1
  Move         r229, r221
L20:
  Move         r230, r222
  // {
  MakeMap      r231, 4, r223
  Move         r232, r231
  // expect order_line_join == [
  MakeList     r233, 1, r232
  Equal        r234, r209, r233
  Expect       r234
  Return       r0
