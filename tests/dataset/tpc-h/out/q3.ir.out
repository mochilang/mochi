func main (regs=235)
  // let customer = [
  Const        r0, [{"c_custkey": 1, "c_mktsegment": "BUILDING"}, {"c_custkey": 2, "c_mktsegment": "AUTOMOBILE"}]
  Move         r1, r0
  // let cutoff = "1995-03-15"
  Const        r6, "1995-03-15"
  // let segment = "BUILDING"
  Const        r8, "BUILDING"
  // from c in customer
  IterPrep     r11, r1
  Len          r12, r11
  Const        r13, 0
  Less         r14, r13, r12
  JumpIfFalse  r14, L0
  Index        r15, r11, r13
  // where c.c_mktsegment == segment
  Const        r17, "c_mktsegment"
L2:
  Index        r18, r15, r17
  Equal        r19, r18, r8
  JumpIfFalse  r19, L1
  // from c in customer
  Jump         L2
  // from o in orders
  IterPrep     r25, r2
  Len          r26, r25
L1:
  // join c in building_customers on o.o_custkey == c.c_custkey
  IterPrep     r27, r20
  Len          r28, r27
  // from o in orders
  Const        r29, 0
  Less         r30, r29, r26
L0:
  JumpIfFalse  r30, L3
  Index        r31, r25, r29
  // join c in building_customers on o.o_custkey == c.c_custkey
  Const        r33, 0
  Less         r34, r33, r28
  JumpIfFalse  r34, L4
  Index        r35, r27, r33
  Const        r36, "o_custkey"
L7:
  Index        r37, r31, r36
  Const        r38, "c_custkey"
  Index        r39, r35, r38
  Equal        r40, r37, r39
  JumpIfFalse  r40, L5
L6:
  // where o.o_orderdate < cutoff
  Const        r41, "o_orderdate"
  Index        r42, r31, r41
  Less         r43, r42, r6
  JumpIfFalse  r43, L5
  // join c in building_customers on o.o_custkey == c.c_custkey
  Jump         L6
  // from o in orders
  Jump         L7
  // from l in lineitem
  Const        r50, []
  IterPrep     r51, r4
  Len          r52, r51
  Const        r53, 0
  Less         r54, r53, r52
  JumpIfFalse  r54, L8
L5:
  Index        r55, r51, r53
L4:
  // where l.l_shipdate > cutoff
  Const        r57, "l_shipdate"
  Index        r58, r55, r57
  Less         r59, r6, r58
  JumpIfFalse  r59, L9
L3:
  // from o in valid_orders
  MakeMap      r65, 0, r0
  IterPrep     r67, r49
  Len          r68, r67
  Const        r69, 0
  Less         r70, r69, r68
  JumpIfFalse  r70, L10
  Index        r71, r67, r69
L9:
  // join l in valid_lineitems on l.l_orderkey == o.o_orderkey
  IterPrep     r72, r50
  Len          r73, r72
  Const        r74, 0
  Less         r75, r74, r73
L8:
  JumpIfFalse  r75, L10
  Index        r76, r72, r74
  Const        r77, "l_orderkey"
  Index        r78, r76, r77
  Const        r79, "o_orderkey"
  Index        r80, r71, r79
  Equal        r81, r78, r80
L14:
  JumpIfFalse  r81, L11
  // from o in valid_orders
  Const        r82, "o"
  Move         r83, r71
  Const        r84, "l"
  Move         r85, r76
  MakeMap      r86, 2, r82
  // o_orderkey: o.o_orderkey,
  Const        r87, "o_orderkey"
L13:
  Const        r88, "o_orderkey"
  Index        r89, r71, r88
  // o_orderdate: o.o_orderdate,
  Const        r90, "o_orderdate"
  Const        r91, "o_orderdate"
  Index        r92, r71, r91
  // o_orderkey: o.o_orderkey,
  Move         r96, r87
  Move         r97, r89
  // o_orderdate: o.o_orderdate,
  Move         r98, r90
  Move         r99, r92
  // group by {
  MakeMap      r102, 2, r96
  Str          r103, r102
  In           r104, r103, r65
  JumpIfTrue   r104, L12
  // from o in valid_orders
  Const        r106, "__group__"
  Const        r107, true
  Const        r108, "key"
  // group by {
  Move         r109, r102
  // from o in valid_orders
  MakeMap      r112, 2, r106
  SetIndex     r65, r103, r112
  Const        r114, "items"
  Index        r115, r65, r103
  Index        r116, r115, r114
  Append       r117, r116, r86
  SetIndex     r115, r114, r117
  // join l in valid_lineitems on l.l_orderkey == o.o_orderkey
  Jump         L13
  // from o in valid_orders
  Jump         L14
  Const        r122, 0
  Len          r123, r113
  Less         r124, r122, r123
  JumpIfFalse  r124, L15
  Index        r125, r113, r122
  // revenue: sum(from r in g select r.l.l_extendedprice * (1 - r.l.l_discount)),
  IterPrep     r134, r125
  Len          r135, r134
L12:
  Const        r136, 0
  Less         r137, r136, r135
L11:
  JumpIfFalse  r137, L16
L10:
  // -sum(from r in g select r.l.l_extendedprice * (1 - r.l.l_discount)),
  IterPrep     r175, r125
  Len          r176, r175
  Const        r177, 0
  Less         r178, r177, r176
  JumpIfFalse  r178, L17
L16:
  // from o in valid_orders
  Jump         L10
  // sort by [
  Sort         r209, r64
  // json(order_line_join)
  JSON         r209
  // l_orderkey: 100,
  Const        r211, "l_orderkey"
  Const        r212, 100
  // revenue: 1000.0 * 0.95 + 500.0,
  Const        r213, "revenue"
  Const        r218, 1450
  // o_orderdate: "1995-03-14",
  Const        r219, "o_orderdate"
  Const        r220, "1995-03-14"
L17:
  // o_shippriority: 1
  Const        r221, "o_shippriority"
  Const        r222, 1
  // l_orderkey: 100,
  Move         r223, r211
  Move         r224, r212
  // revenue: 1000.0 * 0.95 + 500.0,
  Move         r225, r213
  Move         r226, r218
  // o_orderdate: "1995-03-14",
  Move         r227, r219
  Move         r228, r220
  // o_shippriority: 1
  Move         r229, r221
  Move         r230, r222
  // {
  MakeMap      r231, 4, r223
  Move         r232, r231
  // expect order_line_join == [
  MakeList     r233, 1, r232
L15:
  Equal        r234, r209, r233
  Expect       r234
  Return       r0
