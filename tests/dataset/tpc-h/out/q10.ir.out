func main (regs=256)
  // let nation = [
  Const        r0, [{"n_name": "BRAZIL", "n_nationkey": 1}]
  // let customer = [
  Const        r1, [{"c_acctbal": 100.0, "c_address": "123 St", "c_comment": "Loyal", "c_custkey": 1, "c_name": "Alice", "c_nationkey": 1, "c_phone": "123-456"}]
  // let orders = [
  Const        r2, [{"o_custkey": 1, "o_orderdate": "1993-10-15", "o_orderkey": 1000}, {"o_custkey": 1, "o_orderdate": "1994-01-02", "o_orderkey": 2000}]
  // let lineitem = [
  Const        r3, [{"l_discount": 0.1, "l_extendedprice": 1000.0, "l_orderkey": 1000, "l_returnflag": "R"}, {"l_discount": 0.0, "l_extendedprice": 500.0, "l_orderkey": 2000, "l_returnflag": "N"}]
  // let start_date = "1993-10-01"
  Const        r4, "1993-10-01"
  // let end_date = "1994-01-01"
  Const        r5, "1994-01-01"
  // from c in customer
  Const        r6, []
  // c_custkey: c.c_custkey,
  Const        r7, "c_custkey"
  // c_name: c.c_name,
  Const        r8, "c_name"
  // c_acctbal: c.c_acctbal,
  Const        r9, "c_acctbal"
  // c_address: c.c_address,
  Const        r10, "c_address"
  // c_phone: c.c_phone,
  Const        r11, "c_phone"
  // c_comment: c.c_comment,
  Const        r12, "c_comment"
  // n_name: n.n_name
  Const        r13, "n_name"
  // where o.o_orderdate >= start_date &&
  Const        r14, "o_orderdate"
  // l.l_returnflag == "R"
  Const        r15, "l_returnflag"
  // c_custkey: g.key.c_custkey,
  Const        r16, "key"
  // revenue: sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount)),
  Const        r17, "revenue"
  Const        r18, "l"
  Const        r19, "l_extendedprice"
  Const        r20, "l_discount"
  // from c in customer
  MakeMap      r21, 0, r0
  Const        r23, []
  Move         r22, r23
  IterPrep     r24, r1
  Len          r25, r24
  Const        r26, 0
L10:
  LessInt      r27, r26, r25
  JumpIfFalse  r27, L0
  Index        r28, r24, r26
  Move         r29, r28
  // join o in orders on o.o_custkey == c.c_custkey
  IterPrep     r30, r2
  Len          r31, r30
  Const        r32, 0
L9:
  LessInt      r33, r32, r31
  JumpIfFalse  r33, L1
  Index        r34, r30, r32
  Move         r35, r34
  Const        r36, "o_custkey"
  Index        r37, r35, r36
  Index        r38, r29, r7
  Equal        r39, r37, r38
  JumpIfFalse  r39, L2
  // join l in lineitem on l.l_orderkey == o.o_orderkey
  IterPrep     r40, r3
  Len          r41, r40
  Const        r42, 0
L8:
  LessInt      r43, r42, r41
  JumpIfFalse  r43, L2
  Index        r44, r40, r42
  Move         r45, r44
  Const        r46, "l_orderkey"
  Index        r47, r45, r46
  Const        r48, "o_orderkey"
  Index        r49, r35, r48
  Equal        r50, r47, r49
  JumpIfFalse  r50, L3
  // join n in nation on n.n_nationkey == c.c_nationkey
  IterPrep     r51, r0
  Len          r52, r51
  Const        r53, 0
L7:
  LessInt      r54, r53, r52
  JumpIfFalse  r54, L3
  Index        r55, r51, r53
  Move         r56, r55
  Const        r57, "n_nationkey"
  Index        r58, r56, r57
  Const        r59, "c_nationkey"
  Index        r60, r29, r59
  Equal        r61, r58, r60
  JumpIfFalse  r61, L4
  // where o.o_orderdate >= start_date &&
  Index        r62, r35, r14
  LessEq       r63, r4, r62
  // o.o_orderdate < end_date &&
  Index        r64, r35, r14
  Less         r65, r64, r5
  // l.l_returnflag == "R"
  Index        r66, r45, r15
  Const        r67, "R"
  Equal        r68, r66, r67
  // where o.o_orderdate >= start_date &&
  Move         r69, r63
  JumpIfFalse  r69, L5
  Move         r69, r65
  // o.o_orderdate < end_date &&
  JumpIfFalse  r69, L5
  Move         r69, r68
L5:
  // where o.o_orderdate >= start_date &&
  JumpIfFalse  r69, L4
  // from c in customer
  Const        r70, "c"
  Move         r71, r29
  Const        r72, "o"
  Move         r73, r35
  Move         r74, r45
  Const        r75, "n"
  Move         r76, r56
  Move         r77, r70
  Move         r78, r71
  Move         r79, r72
  Move         r80, r73
  Move         r81, r18
  Move         r82, r74
  Move         r83, r75
  Move         r84, r76
  MakeMap      r85, 4, r77
  // c_custkey: c.c_custkey,
  Const        r86, "c_custkey"
  Index        r87, r29, r7
  // c_name: c.c_name,
  Const        r88, "c_name"
  Index        r89, r29, r8
  // c_acctbal: c.c_acctbal,
  Const        r90, "c_acctbal"
  Index        r91, r29, r9
  // c_address: c.c_address,
  Const        r92, "c_address"
  Index        r93, r29, r10
  // c_phone: c.c_phone,
  Const        r94, "c_phone"
  Index        r95, r29, r11
  // c_comment: c.c_comment,
  Const        r96, "c_comment"
  Index        r97, r29, r12
  // n_name: n.n_name
  Const        r98, "n_name"
  Index        r99, r56, r13
  // c_custkey: c.c_custkey,
  Move         r100, r86
  Move         r101, r87
  // c_name: c.c_name,
  Move         r102, r88
  Move         r103, r89
  // c_acctbal: c.c_acctbal,
  Move         r104, r90
  Move         r105, r91
  // c_address: c.c_address,
  Move         r106, r92
  Move         r107, r93
  // c_phone: c.c_phone,
  Move         r108, r94
  Move         r109, r95
  // c_comment: c.c_comment,
  Move         r110, r96
  Move         r111, r97
  // n_name: n.n_name
  Move         r112, r98
  Move         r113, r99
  // group by {
  MakeMap      r114, 7, r100
  Str          r115, r114
  In           r116, r115, r21
  JumpIfTrue   r116, L6
  // from c in customer
  Const        r117, "__group__"
  Const        r118, true
  // group by {
  Move         r119, r114
  // from c in customer
  Const        r120, "items"
  Move         r121, r23
  Const        r122, "count"
  Const        r123, 0
  Move         r124, r117
  Move         r125, r118
  Move         r126, r16
  Move         r127, r119
  Move         r128, r120
  Move         r129, r121
  Move         r130, r122
  Move         r131, r123
  MakeMap      r132, 4, r124
  SetIndex     r21, r115, r132
  Append       r133, r22, r132
  Move         r22, r133
L6:
  Index        r134, r21, r115
  Index        r135, r134, r120
  Append       r136, r135, r85
  SetIndex     r134, r120, r136
  Index        r137, r134, r122
  Const        r138, 1
  AddInt       r139, r137, r138
  SetIndex     r134, r122, r139
L4:
  // join n in nation on n.n_nationkey == c.c_nationkey
  AddInt       r53, r53, r138
  Jump         L7
L3:
  // join l in lineitem on l.l_orderkey == o.o_orderkey
  AddInt       r42, r42, r138
  Jump         L8
L2:
  // join o in orders on o.o_custkey == c.c_custkey
  AddInt       r32, r32, r138
  Jump         L9
L1:
  // from c in customer
  AddInt       r26, r26, r138
  Jump         L10
L0:
  Move         r140, r123
  Len          r141, r22
L16:
  LessInt      r142, r140, r141
  JumpIfFalse  r142, L11
  Index        r143, r22, r140
  Move         r144, r143
  // c_custkey: g.key.c_custkey,
  Const        r145, "c_custkey"
  Index        r146, r144, r16
  Index        r147, r146, r7
  // c_name: g.key.c_name,
  Const        r148, "c_name"
  Index        r149, r144, r16
  Index        r150, r149, r8
  // revenue: sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount)),
  Const        r151, "revenue"
  Const        r152, []
  IterPrep     r153, r144
  Len          r154, r153
  Move         r155, r123
L13:
  LessInt      r156, r155, r154
  JumpIfFalse  r156, L12
  Index        r157, r153, r155
  Move         r158, r157
  Index        r159, r158, r18
  Index        r160, r159, r19
  Index        r161, r158, r18
  Index        r162, r161, r20
  Sub          r163, r138, r162
  Mul          r164, r160, r163
  Append       r165, r152, r164
  Move         r152, r165
  AddInt       r155, r155, r138
  Jump         L13
L12:
  Sum          r166, r152
  // c_acctbal: g.key.c_acctbal,
  Const        r167, "c_acctbal"
  Index        r168, r144, r16
  Index        r169, r168, r9
  // n_name: g.key.n_name,
  Const        r170, "n_name"
  Index        r171, r144, r16
  Index        r172, r171, r13
  // c_address: g.key.c_address,
  Const        r173, "c_address"
  Index        r174, r144, r16
  Index        r175, r174, r10
  // c_phone: g.key.c_phone,
  Const        r176, "c_phone"
  Index        r177, r144, r16
  Index        r178, r177, r11
  // c_comment: g.key.c_comment
  Const        r179, "c_comment"
  Index        r180, r144, r16
  Index        r181, r180, r12
  // c_custkey: g.key.c_custkey,
  Move         r182, r145
  Move         r183, r147
  // c_name: g.key.c_name,
  Move         r184, r148
  Move         r185, r150
  // revenue: sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount)),
  Move         r186, r151
  Move         r187, r166
  // c_acctbal: g.key.c_acctbal,
  Move         r188, r167
  Move         r189, r169
  // n_name: g.key.n_name,
  Move         r190, r170
  Move         r191, r172
  // c_address: g.key.c_address,
  Move         r192, r173
  Move         r193, r175
  // c_phone: g.key.c_phone,
  Move         r194, r176
  Move         r195, r178
  // c_comment: g.key.c_comment
  Move         r196, r179
  Move         r197, r181
  // select {
  MakeMap      r198, 8, r182
  // sort by -sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount))
  Const        r199, []
  IterPrep     r200, r144
  Len          r201, r200
  Move         r202, r123
L15:
  LessInt      r203, r202, r201
  JumpIfFalse  r203, L14
  Index        r204, r200, r202
  Move         r158, r204
  Index        r205, r158, r18
  Index        r206, r205, r19
  Index        r207, r158, r18
  Index        r208, r207, r20
  Sub          r209, r138, r208
  Mul          r210, r206, r209
  Append       r211, r199, r210
  Move         r199, r211
  AddInt       r202, r202, r138
  Jump         L15
L14:
  Sum          r212, r199
  Neg          r213, r212
  Move         r214, r213
  // from c in customer
  Move         r215, r198
  MakeList     r216, 2, r214
  Append       r217, r6, r216
  Move         r6, r217
  AddInt       r140, r140, r138
  Jump         L16
L11:
  // sort by -sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount))
  Sort         r218, r6
  // from c in customer
  Move         r6, r218
  // print(result)
  Print        r6
  // c_custkey: 1,
  Const        r219, "c_custkey"
  // c_name: "Alice",
  Const        r220, "c_name"
  Const        r221, "Alice"
  // revenue: 1000.0 * 0.9, // 900.0
  Const        r222, "revenue"
  Const        r223, 1000.0
  Const        r224, 0.9
  Const        r225, 900.0
  // c_acctbal: 100.0,
  Const        r226, "c_acctbal"
  Const        r227, 100.0
  // n_name: "BRAZIL",
  Const        r228, "n_name"
  Const        r229, "BRAZIL"
  // c_address: "123 St",
  Const        r230, "c_address"
  Const        r231, "123 St"
  // c_phone: "123-456",
  Const        r232, "c_phone"
  Const        r233, "123-456"
  // c_comment: "Loyal"
  Const        r234, "c_comment"
  Const        r235, "Loyal"
  // c_custkey: 1,
  Move         r236, r219
  Move         r237, r138
  // c_name: "Alice",
  Move         r238, r220
  Move         r239, r221
  // revenue: 1000.0 * 0.9, // 900.0
  Move         r240, r222
  Move         r241, r225
  // c_acctbal: 100.0,
  Move         r242, r226
  Move         r243, r227
  // n_name: "BRAZIL",
  Move         r244, r228
  Move         r245, r229
  // c_address: "123 St",
  Move         r246, r230
  Move         r247, r231
  // c_phone: "123-456",
  Move         r248, r232
  Move         r249, r233
  // c_comment: "Loyal"
  Move         r250, r234
  Move         r251, r235
  // {
  MakeMap      r252, 8, r236
  Move         r253, r252
  // expect result == [
  MakeList     r254, 1, r253
  Equal        r255, r6, r254
  Expect       r255
  Return       r0
