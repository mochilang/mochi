func main (regs=283)
  // let nation = [
  Const        r0, [{"n_name": "BRAZIL", "n_nationkey": 1}]
  Move         r1, r0
  // let customer = [
  Const        r2, [{"c_acctbal": 100, "c_address": "123 St", "c_comment": "Loyal", "c_custkey": 1, "c_name": "Alice", "c_nationkey": 1, "c_phone": "123-456"}]
  // let orders = [
  Const        r4, [{"o_custkey": 1, "o_orderdate": "1993-10-15", "o_orderkey": 1000}, {"o_custkey": 1, "o_orderdate": "1994-01-02", "o_orderkey": 2000}]
  // let lineitem = [
  Const        r6, [{"l_discount": 0.1, "l_extendedprice": 1000, "l_orderkey": 1000, "l_returnflag": "R"}, {"l_discount": 0, "l_extendedprice": 500, "l_orderkey": 2000, "l_returnflag": "N"}]
  // let start_date = "1993-10-01"
  Const        r8, "1993-10-01"
  // let end_date = "1994-01-01"
  Const        r10, "1994-01-01"
  // from c in customer
  Const        r12, []
  MakeMap      r13, 0, r0
  Const        r14, []
  IterPrep     r15, r2
  Len          r16, r15
  Const        r17, 0
  Less         r18, r17, r16
  JumpIfFalse  r18, L0
  Index        r19, r15, r17
  // join o in orders on o.o_custkey == c.c_custkey
  IterPrep     r21, r4
  Len          r22, r21
L11:
  Const        r23, 0
  Less         r24, r23, r22
  JumpIfFalse  r24, L1
  Index        r25, r21, r23
  Const        r27, "o_custkey"
  Index        r28, r25, r27
  Const        r29, "c_custkey"
L10:
  Index        r30, r19, r29
  Equal        r31, r28, r30
  JumpIfFalse  r31, L2
  // join l in lineitem on l.l_orderkey == o.o_orderkey
  IterPrep     r32, r6
  Len          r33, r32
  Const        r34, 0
  Less         r35, r34, r33
  JumpIfFalse  r35, L2
  Index        r36, r32, r34
  Const        r38, "l_orderkey"
  Index        r39, r36, r38
  Const        r40, "o_orderkey"
  Index        r41, r25, r40
L9:
  Equal        r42, r39, r41
  JumpIfFalse  r42, L3
  // join n in nation on n.n_nationkey == c.c_nationkey
  IterPrep     r43, r1
  Len          r44, r43
  Const        r45, 0
  Less         r46, r45, r44
  JumpIfFalse  r46, L3
  Index        r47, r43, r45
  Const        r49, "n_nationkey"
  Index        r50, r47, r49
  Const        r51, "c_nationkey"
  Index        r52, r19, r51
  Equal        r53, r50, r52
L8:
  JumpIfFalse  r53, L4
  // where o.o_orderdate >= start_date &&
  Const        r54, "o_orderdate"
  Index        r55, r25, r54
  LessEq       r56, r8, r55
  // o.o_orderdate < end_date &&
  Const        r57, "o_orderdate"
  Index        r58, r25, r57
  Less         r59, r58, r10
  // l.l_returnflag == "R"
  Const        r60, "l_returnflag"
  Index        r61, r36, r60
  Const        r62, "R"
  Equal        r63, r61, r62
  // where o.o_orderdate >= start_date &&
  JumpIfFalse  r56, L5
  // o.o_orderdate < end_date &&
  JumpIfFalse  r59, L6
  // where o.o_orderdate >= start_date &&
  JumpIfFalse  r63, L4
  // from c in customer
  Const        r66, "c"
  Move         r67, r19
  Const        r68, "o"
  Move         r69, r25
  Const        r70, "l"
  Move         r71, r36
  Const        r72, "n"
  Move         r73, r47
  MakeMap      r74, 4, r66
L5:
  // c_custkey: c.c_custkey,
  Const        r75, "c_custkey"
  Const        r76, "c_custkey"
  Index        r77, r19, r76
L6:
  // c_name: c.c_name,
  Const        r78, "c_name"
  Const        r79, "c_name"
  Index        r80, r19, r79
  // c_acctbal: c.c_acctbal,
  Const        r81, "c_acctbal"
  Const        r82, "c_acctbal"
  Index        r83, r19, r82
  // c_address: c.c_address,
  Const        r84, "c_address"
  Const        r85, "c_address"
  Index        r86, r19, r85
  // c_phone: c.c_phone,
  Const        r87, "c_phone"
  Const        r88, "c_phone"
  Index        r89, r19, r88
  // c_comment: c.c_comment,
  Const        r90, "c_comment"
  Const        r91, "c_comment"
  Index        r92, r19, r91
  // n_name: n.n_name
  Const        r93, "n_name"
  Const        r94, "n_name"
  Index        r95, r47, r94
  // c_custkey: c.c_custkey,
  Move         r96, r75
  Move         r97, r77
  // c_name: c.c_name,
  Move         r98, r78
  Move         r99, r80
  // c_acctbal: c.c_acctbal,
  Move         r100, r81
  Move         r101, r83
  // c_address: c.c_address,
  Move         r102, r84
  Move         r103, r86
  // c_phone: c.c_phone,
  Move         r104, r87
  Move         r105, r89
  // c_comment: c.c_comment,
  Move         r106, r90
  Move         r107, r92
  // n_name: n.n_name
  Move         r108, r93
  Move         r109, r95
  // group by {
  MakeMap      r110, 7, r96
  Str          r111, r110
  In           r112, r111, r13
  JumpIfTrue   r112, L7
  // from c in customer
  Const        r113, []
  Const        r114, "__group__"
  Const        r115, true
  Const        r116, "key"
  // group by {
  Move         r117, r110
  // from c in customer
  Const        r118, "items"
  Move         r119, r113
  MakeMap      r120, 3, r114
  SetIndex     r13, r111, r120
  Append       r121, r14, r120
  Const        r122, "items"
  Index        r123, r13, r111
  Index        r124, r123, r122
  Append       r125, r124, r74
  SetIndex     r123, r122, r125
  // join n in nation on n.n_nationkey == c.c_nationkey
  Const        r126, 1
  Add          r127, r45, r126
  Jump         L8
  // join l in lineitem on l.l_orderkey == o.o_orderkey
  Const        r128, 1
  Add          r129, r34, r128
  Jump         L9
  // join o in orders on o.o_custkey == c.c_custkey
  Const        r130, 1
  Add          r131, r23, r130
  Jump         L10
L7:
  // from c in customer
  Const        r132, 1
  Add          r133, r17, r132
  Jump         L11
  Const        r134, 0
  Len          r135, r121
L4:
  Less         r136, r134, r135
  JumpIfFalse  r136, L12
  Index        r137, r121, r134
  // c_custkey: g.key.c_custkey,
  Const        r139, "c_custkey"
L3:
  Const        r140, "key"
  Index        r141, r137, r140
  Const        r142, "c_custkey"
  Index        r143, r141, r142
L2:
  // c_name: g.key.c_name,
  Const        r144, "c_name"
  Const        r145, "key"
  Index        r146, r137, r145
  Const        r147, "c_name"
L1:
  Index        r148, r146, r147
  // revenue: sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount)),
  Const        r149, "revenue"
  Const        r150, []
  IterPrep     r151, r137
L0:
  Len          r152, r151
  Const        r153, 0
L17:
  Less         r154, r153, r152
  JumpIfFalse  r154, L13
  Index        r155, r151, r153
  Const        r157, "l"
  Index        r158, r155, r157
  Const        r159, "l_extendedprice"
  Index        r160, r158, r159
  Const        r161, 1
  Const        r162, "l"
  Index        r163, r155, r162
  Const        r164, "l_discount"
  Index        r165, r163, r164
  Sub          r166, r161, r165
  Mul          r167, r160, r166
  Append       r168, r150, r167
  Const        r169, 1
  Add          r170, r153, r169
  Jump         L14
  Sum          r171, r168
L14:
  // c_acctbal: g.key.c_acctbal,
  Const        r172, "c_acctbal"
  Const        r173, "key"
  Index        r174, r137, r173
  Const        r175, "c_acctbal"
  Index        r176, r174, r175
  // n_name: g.key.n_name,
  Const        r177, "n_name"
  Const        r178, "key"
  Index        r179, r137, r178
  Const        r180, "n_name"
  Index        r181, r179, r180
  // c_address: g.key.c_address,
  Const        r182, "c_address"
  Const        r183, "key"
  Index        r184, r137, r183
  Const        r185, "c_address"
  Index        r186, r184, r185
  // c_phone: g.key.c_phone,
  Const        r187, "c_phone"
  Const        r188, "key"
  Index        r189, r137, r188
  Const        r190, "c_phone"
  Index        r191, r189, r190
  // c_comment: g.key.c_comment
  Const        r192, "c_comment"
L13:
  Const        r193, "key"
  Index        r194, r137, r193
  Const        r195, "c_comment"
  Index        r196, r194, r195
  // c_custkey: g.key.c_custkey,
  Move         r197, r139
  Move         r198, r143
  // c_name: g.key.c_name,
  Move         r199, r144
  Move         r200, r148
  // revenue: sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount)),
  Move         r201, r149
  Move         r202, r171
  // c_acctbal: g.key.c_acctbal,
  Move         r203, r172
  Move         r204, r176
  // n_name: g.key.n_name,
  Move         r205, r177
  Move         r206, r181
  // c_address: g.key.c_address,
  Move         r207, r182
  Move         r208, r186
  // c_phone: g.key.c_phone,
  Move         r209, r187
  Move         r210, r191
  // c_comment: g.key.c_comment
  Move         r211, r192
  Move         r212, r196
  // select {
  MakeMap      r213, 8, r197
  // sort by -sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount))
  Const        r214, []
  IterPrep     r215, r137
  Len          r216, r215
  Const        r217, 0
  Less         r218, r217, r216
  JumpIfFalse  r218, L15
  Index        r219, r215, r217
  Const        r220, "l"
  Index        r221, r219, r220
  Const        r222, "l_extendedprice"
  Index        r223, r221, r222
  Const        r224, 1
  Const        r225, "l"
  Index        r226, r219, r225
  Const        r227, "l_discount"
  Index        r228, r226, r227
  Sub          r229, r224, r228
  Mul          r230, r223, r229
  Append       r231, r214, r230
  Const        r232, 1
  Add          r233, r217, r232
  Jump         L16
  Sum          r234, r231
  Neg          r235, r234
  Move         r236, r235
  // from c in customer
  Move         r237, r213
L16:
  MakeList     r238, 2, r236
  Append       r239, r12, r238
  Const        r240, 1
  Add          r241, r134, r240
  Jump         L17
  // sort by -sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount))
  Sort         r242, r239
  // c_custkey: 1,
  Const        r245, "c_custkey"
  Const        r246, 1
  // c_name: "Alice",
  Const        r247, "c_name"
  Const        r248, "Alice"
  // revenue: 1000.0 * 0.9, // 900.0
  Const        r249, "revenue"
  Const        r252, 900
  // c_acctbal: 100.0,
  Const        r253, "c_acctbal"
  Const        r254, 100
  // n_name: "BRAZIL",
  Const        r255, "n_name"
  Const        r256, "BRAZIL"
  // c_address: "123 St",
  Const        r257, "c_address"
  Const        r258, "123 St"
  // c_phone: "123-456",
  Const        r259, "c_phone"
  Const        r260, "123-456"
  // c_comment: "Loyal"
  Const        r261, "c_comment"
L15:
  Const        r262, "Loyal"
  // c_custkey: 1,
  Move         r263, r245
  Move         r264, r246
  // c_name: "Alice",
  Move         r265, r247
  Move         r266, r248
  // revenue: 1000.0 * 0.9, // 900.0
  Move         r267, r249
  Move         r268, r252
  // c_acctbal: 100.0,
  Move         r269, r253
  Move         r270, r254
  // n_name: "BRAZIL",
  Move         r271, r255
  Move         r272, r256
L12:
  // c_address: "123 St",
  Move         r273, r257
  Move         r274, r258
  // c_phone: "123-456",
  Move         r275, r259
  Move         r276, r260
  // c_comment: "Loyal"
  Move         r277, r261
  Move         r278, r262
  // {
  MakeMap      r279, 8, r263
  Move         r280, r279
  // expect result == [
  MakeList     r281, 1, r280
  Equal        r282, r242, r281
  Expect       r282
  Return       r0
