func main (regs=254)
  // let nation = [
  Const        r0, [{"n_name": "BRAZIL", "n_nationkey": 1}]
  // let customer = [
  Const        r1, [{"c_acctbal": 100, "c_address": "123 St", "c_comment": "Loyal", "c_custkey": 1, "c_name": "Alice", "c_nationkey": 1, "c_phone": "123-456"}]
  // let orders = [
  Const        r2, [{"o_custkey": 1, "o_orderdate": "1993-10-15", "o_orderkey": 1000}, {"o_custkey": 1, "o_orderdate": "1994-01-02", "o_orderkey": 2000}]
  // let lineitem = [
  Const        r3, [{"l_discount": 0.1, "l_extendedprice": 1000, "l_orderkey": 1000, "l_returnflag": "R"}, {"l_discount": 0, "l_extendedprice": 500, "l_orderkey": 2000, "l_returnflag": "N"}]
  // let start_date = "1993-10-01"
  Const        r4, "1993-10-01"
  // let end_date = "1994-01-01"
  Const        r5, "1994-01-01"
  // from c in customer
  Const        r6, []
  // c_custkey: c.c_custkey,
  Const        r7, "c_custkey"
  // c_name: c.c_name,
  Const        r8, "c_name"
  // c_acctbal: c.c_acctbal,
  Const        r9, "c_acctbal"
  // c_address: c.c_address,
  Const        r10, "c_address"
  // c_phone: c.c_phone,
  Const        r11, "c_phone"
  // c_comment: c.c_comment,
  Const        r12, "c_comment"
  // n_name: n.n_name
  Const        r13, "n_name"
  // where o.o_orderdate >= start_date &&
  Const        r14, "o_orderdate"
  // l.l_returnflag == "R"
  Const        r15, "l_returnflag"
  // c_custkey: g.key.c_custkey,
  Const        r16, "key"
  // revenue: sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount)),
  Const        r17, "revenue"
  Const        r18, "l"
  Const        r19, "l_extendedprice"
  Const        r20, "l_discount"
  // from c in customer
  MakeMap      r21, 0, r0
  IterPrep     r22, r1
  Len          r23, r22
  Const        r24, 0
L11:
  LessInt      r25, r24, r23
  JumpIfFalse  r25, L0
  Index        r27, r22, r24
  // join o in orders on o.o_custkey == c.c_custkey
  IterPrep     r28, r2
  Len          r29, r28
  Move         r30, r24
L10:
  LessInt      r31, r30, r29
  JumpIfFalse  r31, L1
  Index        r33, r28, r30
  Const        r34, "o_custkey"
  Index        r35, r33, r34
  Index        r36, r27, r7
  Equal        r37, r35, r36
  JumpIfFalse  r37, L2
  // join l in lineitem on l.l_orderkey == o.o_orderkey
  IterPrep     r38, r3
  Len          r39, r38
  Move         r40, r24
L9:
  LessInt      r41, r40, r39
  JumpIfFalse  r41, L2
  Index        r43, r38, r40
  Const        r44, "l_orderkey"
  Index        r45, r43, r44
  Const        r46, "o_orderkey"
  Index        r47, r33, r46
  Equal        r48, r45, r47
  JumpIfFalse  r48, L3
  // join n in nation on n.n_nationkey == c.c_nationkey
  IterPrep     r49, r0
  Len          r50, r49
  Move         r51, r40
L8:
  LessInt      r52, r51, r50
  JumpIfFalse  r52, L3
  Index        r54, r49, r51
  Const        r55, "n_nationkey"
  Index        r56, r54, r55
  Const        r57, "c_nationkey"
  Index        r58, r27, r57
  Equal        r59, r56, r58
  JumpIfFalse  r59, L4
  // where o.o_orderdate >= start_date &&
  Index        r60, r33, r14
  LessEq       r61, r4, r60
  // o.o_orderdate < end_date &&
  Index        r62, r33, r14
  Less         r63, r62, r5
  // l.l_returnflag == "R"
  Index        r64, r43, r15
  Const        r65, "R"
  Equal        r66, r64, r65
  // where o.o_orderdate >= start_date &&
  Move         r67, r61
  JumpIfFalse  r67, L5
L5:
  // o.o_orderdate < end_date &&
  Move         r68, r63
  JumpIfFalse  r68, L6
  Move         r68, r66
L6:
  // where o.o_orderdate >= start_date &&
  JumpIfFalse  r68, L4
  // from c in customer
  Const        r69, "c"
  Move         r70, r27
  Const        r71, "o"
  Move         r72, r33
  Move         r73, r18
  Move         r74, r43
  Const        r75, "n"
  Move         r76, r54
  MakeMap      r77, 4, r69
  // c_custkey: c.c_custkey,
  Move         r78, r7
  Index        r79, r27, r7
  // c_name: c.c_name,
  Move         r80, r8
  Index        r81, r27, r8
  // c_acctbal: c.c_acctbal,
  Move         r82, r9
  Index        r83, r27, r9
  // c_address: c.c_address,
  Move         r84, r10
  Index        r85, r27, r10
  // c_phone: c.c_phone,
  Move         r86, r11
  Index        r87, r27, r11
  // c_comment: c.c_comment,
  Move         r88, r12
  Index        r89, r27, r12
  // n_name: n.n_name
  Move         r90, r13
  Index        r91, r54, r13
  // c_custkey: c.c_custkey,
  Move         r92, r78
  Move         r93, r79
  // c_name: c.c_name,
  Move         r94, r80
  Move         r95, r81
  // c_acctbal: c.c_acctbal,
  Move         r96, r82
  Move         r97, r83
  // c_address: c.c_address,
  Move         r98, r84
  Move         r99, r85
  // c_phone: c.c_phone,
  Move         r100, r86
  Move         r101, r87
  // c_comment: c.c_comment,
  Move         r102, r88
  Move         r103, r89
  // n_name: n.n_name
  Move         r104, r90
  Move         r105, r91
  // group by {
  MakeMap      r106, 7, r92
  Str          r107, r106
  In           r108, r107, r21
  JumpIfTrue   r108, L7
  // from c in customer
  Move         r109, r6
  Const        r110, "__group__"
  Const        r111, true
  Move         r112, r16
  // group by {
  Move         r113, r106
  // from c in customer
  Const        r114, "items"
  Move         r115, r109
  Const        r116, "count"
  Move         r117, r24
  Move         r118, r110
  Move         r119, r111
  Move         r120, r112
  Move         r121, r113
  Move         r122, r114
  Move         r123, r115
  Move         r124, r116
  Move         r125, r117
  MakeMap      r126, 4, r118
  SetIndex     r21, r107, r126
L7:
  Move         r127, r114
  Index        r128, r21, r107
  Index        r129, r128, r127
  Append       r130, r129, r77
  SetIndex     r128, r127, r130
  Move         r131, r116
  Index        r132, r128, r131
  Const        r133, 1
  AddInt       r134, r132, r133
  SetIndex     r128, r131, r134
L4:
  // join n in nation on n.n_nationkey == c.c_nationkey
  AddInt       r51, r51, r133
  Jump         L8
L3:
  // join l in lineitem on l.l_orderkey == o.o_orderkey
  AddInt       r40, r40, r133
  Jump         L9
L2:
  // join o in orders on o.o_custkey == c.c_custkey
  AddInt       r30, r30, r133
  Jump         L10
L1:
  // from c in customer
  AddInt       r24, r24, r133
  Jump         L11
L0:
  Values       135,21,0,0
  Move         r137, r117
  Move         r136, r137
  Len          r138, r135
L17:
  LessInt      r139, r136, r138
  JumpIfFalse  r139, L12
  Index        r141, r135, r136
  // c_custkey: g.key.c_custkey,
  Move         r142, r7
  Index        r143, r141, r16
  Index        r144, r143, r7
  // c_name: g.key.c_name,
  Move         r145, r8
  Index        r146, r141, r16
  Index        r147, r146, r8
  // revenue: sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount)),
  Move         r148, r17
  Move         r149, r6
  IterPrep     r150, r141
  Len          r151, r150
  Move         r152, r137
L14:
  LessInt      r153, r152, r151
  JumpIfFalse  r153, L13
  Index        r155, r150, r152
  Index        r156, r155, r18
  Index        r157, r156, r19
  Index        r158, r155, r18
  Index        r159, r158, r20
  Sub          r160, r133, r159
  Mul          r161, r157, r160
  Append       r149, r149, r161
  AddInt       r152, r152, r133
  Jump         L14
L13:
  Sum          r163, r149
  // c_acctbal: g.key.c_acctbal,
  Move         r164, r9
  Index        r165, r141, r16
  Index        r166, r165, r9
  // n_name: g.key.n_name,
  Move         r167, r13
  Index        r168, r141, r16
  Index        r169, r168, r13
  // c_address: g.key.c_address,
  Move         r170, r10
  Index        r171, r141, r16
  Index        r172, r171, r10
  // c_phone: g.key.c_phone,
  Move         r173, r11
  Index        r174, r141, r16
  Index        r175, r174, r11
  // c_comment: g.key.c_comment
  Move         r176, r12
  Index        r177, r141, r16
  Index        r178, r177, r12
  // c_custkey: g.key.c_custkey,
  Move         r179, r142
  Move         r180, r144
  // c_name: g.key.c_name,
  Move         r181, r145
  Move         r182, r147
  // revenue: sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount)),
  Move         r183, r148
  Move         r184, r163
  // c_acctbal: g.key.c_acctbal,
  Move         r185, r164
  Move         r186, r166
  // n_name: g.key.n_name,
  Move         r187, r167
  Move         r188, r169
  // c_address: g.key.c_address,
  Move         r189, r170
  Move         r190, r172
  // c_phone: g.key.c_phone,
  Move         r191, r173
  Move         r192, r175
  // c_comment: g.key.c_comment
  Move         r193, r176
  Move         r194, r178
  // select {
  MakeMap      r195, 8, r179
  // sort by -sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount))
  Move         r196, r6
  IterPrep     r197, r141
  Len          r198, r197
  Move         r199, r137
L16:
  LessInt      r200, r199, r198
  JumpIfFalse  r200, L15
  Index        r155, r197, r199
  Index        r202, r155, r18
  Index        r203, r202, r19
  Index        r204, r155, r18
  Index        r205, r204, r20
  Sub          r206, r133, r205
  Mul          r207, r203, r206
  Append       r196, r196, r207
  AddInt       r199, r199, r133
  Jump         L16
L15:
  Sum          r209, r196
  Neg          r211, r209
  // from c in customer
  Move         r212, r195
  MakeList     r213, 2, r211
  Append       r6, r6, r213
  AddInt       r136, r136, r133
  Jump         L17
L12:
  // sort by -sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount))
  Sort         r6, r6
  // c_custkey: 1,
  Move         r217, r142
  // c_name: "Alice",
  Move         r218, r145
  Const        r219, "Alice"
  // revenue: 1000.0 * 0.9, // 900.0
  Move         r220, r17
  Const        r223, 900
  // c_acctbal: 100.0,
  Move         r224, r164
  Const        r225, 100
  // n_name: "BRAZIL",
  Move         r226, r167
  Const        r227, "BRAZIL"
  // c_address: "123 St",
  Move         r228, r170
  Const        r229, "123 St"
  // c_phone: "123-456",
  Move         r230, r173
  Const        r231, "123-456"
  // c_comment: "Loyal"
  Move         r232, r176
  Const        r233, "Loyal"
  // c_custkey: 1,
  Move         r234, r217
  Move         r235, r133
  // c_name: "Alice",
  Move         r236, r218
  Move         r237, r219
  // revenue: 1000.0 * 0.9, // 900.0
  Move         r238, r220
  Move         r239, r223
  // c_acctbal: 100.0,
  Move         r240, r224
  Move         r241, r225
  // n_name: "BRAZIL",
  Move         r242, r226
  Move         r243, r227
  // c_address: "123 St",
  Move         r244, r228
  Move         r245, r229
  // c_phone: "123-456",
  Move         r246, r230
  Move         r247, r231
  // c_comment: "Loyal"
  Move         r248, r232
  Move         r249, r233
  // {
  MakeMap      r251, 8, r234
  // expect result == [
  MakeList     r252, 1, r251
  Equal        r253, r6, r252
  Expect       r253
  Return       r0
