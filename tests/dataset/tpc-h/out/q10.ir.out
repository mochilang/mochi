func main (regs=255)
  // let nation = [
  Const        r0, [{"n_name": "BRAZIL", "n_nationkey": 1}]
  // let customer = [
  Const        r1, [{"c_acctbal": 100, "c_address": "123 St", "c_comment": "Loyal", "c_custkey": 1, "c_name": "Alice", "c_nationkey": 1, "c_phone": "123-456"}]
  // let orders = [
  Const        r2, [{"o_custkey": 1, "o_orderdate": "1993-10-15", "o_orderkey": 1000}, {"o_custkey": 1, "o_orderdate": "1994-01-02", "o_orderkey": 2000}]
  // let lineitem = [
  Const        r3, [{"l_discount": 0.1, "l_extendedprice": 1000, "l_orderkey": 1000, "l_returnflag": "R"}, {"l_discount": 0, "l_extendedprice": 500, "l_orderkey": 2000, "l_returnflag": "N"}]
  // let start_date = "1993-10-01"
  Const        r4, "1993-10-01"
  // let end_date = "1994-01-01"
  Const        r5, "1994-01-01"
  // from c in customer
  Const        r6, []
  // c_custkey: c.c_custkey,
  Const        r7, "c_custkey"
  // c_name: c.c_name,
  Const        r8, "c_name"
  // c_acctbal: c.c_acctbal,
  Const        r9, "c_acctbal"
  // c_address: c.c_address,
  Const        r10, "c_address"
  // c_phone: c.c_phone,
  Const        r11, "c_phone"
  // c_comment: c.c_comment,
  Const        r12, "c_comment"
  // n_name: n.n_name
  Const        r13, "n_name"
  // where o.o_orderdate >= start_date &&
  Const        r14, "o_orderdate"
  // l.l_returnflag == "R"
  Const        r15, "l_returnflag"
  // c_custkey: g.key.c_custkey,
  Const        r16, "key"
  // revenue: sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount)),
  Const        r17, "revenue"
  Const        r18, "l"
  Const        r19, "l_extendedprice"
  Const        r20, "l_discount"
  // from c in customer
  MakeMap      r21, 0, r0
  Const        r22, []
  IterPrep     r24, r1
  Len          r25, r24
  Const        r26, 0
L10:
  LessInt      r27, r26, r25
  JumpIfFalse  r27, L0
  Index        r29, r24, r26
  // join o in orders on o.o_custkey == c.c_custkey
  IterPrep     r30, r2
  Len          r31, r30
  Const        r32, 0
L9:
  LessInt      r33, r32, r31
  JumpIfFalse  r33, L1
  Index        r35, r30, r32
  Const        r36, "o_custkey"
  Index        r37, r35, r36
  Index        r38, r29, r7
  Equal        r39, r37, r38
  JumpIfFalse  r39, L2
  // join l in lineitem on l.l_orderkey == o.o_orderkey
  IterPrep     r40, r3
  Len          r41, r40
  Const        r42, 0
L8:
  LessInt      r43, r42, r41
  JumpIfFalse  r43, L2
  Index        r45, r40, r42
  Const        r46, "l_orderkey"
  Index        r47, r45, r46
  Const        r48, "o_orderkey"
  Index        r49, r35, r48
  Equal        r50, r47, r49
  JumpIfFalse  r50, L3
  // join n in nation on n.n_nationkey == c.c_nationkey
  IterPrep     r51, r0
  Len          r52, r51
  Const        r53, 0
L7:
  LessInt      r54, r53, r52
  JumpIfFalse  r54, L3
  Index        r56, r51, r53
  Const        r57, "n_nationkey"
  Index        r58, r56, r57
  Const        r59, "c_nationkey"
  Index        r60, r29, r59
  Equal        r61, r58, r60
  JumpIfFalse  r61, L4
  // where o.o_orderdate >= start_date &&
  Index        r62, r35, r14
  LessEq       r63, r4, r62
  // o.o_orderdate < end_date &&
  Index        r64, r35, r14
  Less         r65, r64, r5
  // l.l_returnflag == "R"
  Index        r66, r45, r15
  Const        r67, "R"
  Equal        r68, r66, r67
  // where o.o_orderdate >= start_date &&
  Move         r69, r63
  JumpIfFalse  r69, L5
  Move         r69, r65
  // o.o_orderdate < end_date &&
  JumpIfFalse  r69, L5
  Move         r69, r68
L5:
  // where o.o_orderdate >= start_date &&
  JumpIfFalse  r69, L4
  // from c in customer
  Const        r70, "c"
  Move         r71, r29
  Const        r72, "o"
  Move         r73, r35
  Const        r74, "l"
  Move         r75, r45
  Const        r76, "n"
  Move         r77, r56
  MakeMap      r78, 4, r70
  // c_custkey: c.c_custkey,
  Const        r79, "c_custkey"
  Index        r80, r29, r7
  // c_name: c.c_name,
  Const        r81, "c_name"
  Index        r82, r29, r8
  // c_acctbal: c.c_acctbal,
  Const        r83, "c_acctbal"
  Index        r84, r29, r9
  // c_address: c.c_address,
  Const        r85, "c_address"
  Index        r86, r29, r10
  // c_phone: c.c_phone,
  Const        r87, "c_phone"
  Index        r88, r29, r11
  // c_comment: c.c_comment,
  Const        r89, "c_comment"
  Index        r90, r29, r12
  // n_name: n.n_name
  Const        r91, "n_name"
  Index        r92, r56, r13
  // c_custkey: c.c_custkey,
  Move         r93, r79
  Move         r94, r80
  // c_name: c.c_name,
  Move         r95, r81
  Move         r96, r82
  // c_acctbal: c.c_acctbal,
  Move         r97, r83
  Move         r98, r84
  // c_address: c.c_address,
  Move         r99, r85
  Move         r100, r86
  // c_phone: c.c_phone,
  Move         r101, r87
  Move         r102, r88
  // c_comment: c.c_comment,
  Move         r103, r89
  Move         r104, r90
  // n_name: n.n_name
  Move         r105, r91
  Move         r106, r92
  // group by {
  MakeMap      r107, 7, r93
  Str          r108, r107
  In           r109, r108, r21
  JumpIfTrue   r109, L6
  // from c in customer
  Const        r110, []
  Const        r111, "__group__"
  Const        r112, true
  Const        r113, "key"
  // group by {
  Move         r114, r107
  // from c in customer
  Const        r115, "items"
  Move         r116, r110
  Const        r117, "count"
  Const        r118, 0
  Move         r119, r111
  Move         r120, r112
  Move         r121, r113
  Move         r122, r114
  Move         r123, r115
  Move         r124, r116
  Move         r125, r117
  Move         r126, r118
  MakeMap      r127, 4, r119
  SetIndex     r21, r108, r127
  Append       r22, r22, r127
L6:
  Const        r129, "items"
  Index        r130, r21, r108
  Index        r131, r130, r129
  Append       r132, r131, r78
  SetIndex     r130, r129, r132
  Const        r133, "count"
  Index        r134, r130, r133
  Const        r135, 1
  AddInt       r136, r134, r135
  SetIndex     r130, r133, r136
L4:
  // join n in nation on n.n_nationkey == c.c_nationkey
  AddInt       r53, r53, r135
  Jump         L7
L3:
  // join l in lineitem on l.l_orderkey == o.o_orderkey
  AddInt       r42, r42, r135
  Jump         L8
L2:
  // join o in orders on o.o_custkey == c.c_custkey
  AddInt       r32, r32, r135
  Jump         L9
L1:
  // from c in customer
  AddInt       r26, r26, r135
  Jump         L10
L0:
  Const        r138, 0
  Move         r137, r138
  Len          r139, r22
L16:
  LessInt      r140, r137, r139
  JumpIfFalse  r140, L11
  Index        r142, r22, r137
  // c_custkey: g.key.c_custkey,
  Const        r143, "c_custkey"
  Index        r144, r142, r16
  Index        r145, r144, r7
  // c_name: g.key.c_name,
  Const        r146, "c_name"
  Index        r147, r142, r16
  Index        r148, r147, r8
  // revenue: sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount)),
  Const        r149, "revenue"
  Const        r150, []
  IterPrep     r151, r142
  Len          r152, r151
  Move         r153, r138
L13:
  LessInt      r154, r153, r152
  JumpIfFalse  r154, L12
  Index        r156, r151, r153
  Index        r157, r156, r18
  Index        r158, r157, r19
  Index        r159, r156, r18
  Index        r160, r159, r20
  Sub          r161, r135, r160
  Mul          r162, r158, r161
  Append       r150, r150, r162
  AddInt       r153, r153, r135
  Jump         L13
L12:
  Sum          r164, r150
  // c_acctbal: g.key.c_acctbal,
  Const        r165, "c_acctbal"
  Index        r166, r142, r16
  Index        r167, r166, r9
  // n_name: g.key.n_name,
  Const        r168, "n_name"
  Index        r169, r142, r16
  Index        r170, r169, r13
  // c_address: g.key.c_address,
  Const        r171, "c_address"
  Index        r172, r142, r16
  Index        r173, r172, r10
  // c_phone: g.key.c_phone,
  Const        r174, "c_phone"
  Index        r175, r142, r16
  Index        r176, r175, r11
  // c_comment: g.key.c_comment
  Const        r177, "c_comment"
  Index        r178, r142, r16
  Index        r179, r178, r12
  // c_custkey: g.key.c_custkey,
  Move         r180, r143
  Move         r181, r145
  // c_name: g.key.c_name,
  Move         r182, r146
  Move         r183, r148
  // revenue: sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount)),
  Move         r184, r149
  Move         r185, r164
  // c_acctbal: g.key.c_acctbal,
  Move         r186, r165
  Move         r187, r167
  // n_name: g.key.n_name,
  Move         r188, r168
  Move         r189, r170
  // c_address: g.key.c_address,
  Move         r190, r171
  Move         r191, r173
  // c_phone: g.key.c_phone,
  Move         r192, r174
  Move         r193, r176
  // c_comment: g.key.c_comment
  Move         r194, r177
  Move         r195, r179
  // select {
  MakeMap      r196, 8, r180
  // sort by -sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount))
  Const        r197, []
  IterPrep     r198, r142
  Len          r199, r198
  Move         r200, r138
L15:
  LessInt      r201, r200, r199
  JumpIfFalse  r201, L14
  Index        r156, r198, r200
  Index        r203, r156, r18
  Index        r204, r203, r19
  Index        r205, r156, r18
  Index        r206, r205, r20
  Sub          r207, r135, r206
  Mul          r208, r204, r207
  Append       r197, r197, r208
  AddInt       r200, r200, r135
  Jump         L15
L14:
  Sum          r210, r197
  Neg          r212, r210
  // from c in customer
  Move         r213, r196
  MakeList     r214, 2, r212
  Append       r6, r6, r214
  AddInt       r137, r137, r135
  Jump         L16
L11:
  // sort by -sum(from x in g select x.l.l_extendedprice * (1 - x.l.l_discount))
  Sort         r6, r6
  // c_custkey: 1,
  Const        r218, "c_custkey"
  // c_name: "Alice",
  Const        r219, "c_name"
  Const        r220, "Alice"
  // revenue: 1000.0 * 0.9, // 900.0
  Const        r221, "revenue"
  Const        r222, 1000
  Const        r223, 0.9
  Const        r224, 900
  // c_acctbal: 100.0,
  Const        r225, "c_acctbal"
  Const        r226, 100
  // n_name: "BRAZIL",
  Const        r227, "n_name"
  Const        r228, "BRAZIL"
  // c_address: "123 St",
  Const        r229, "c_address"
  Const        r230, "123 St"
  // c_phone: "123-456",
  Const        r231, "c_phone"
  Const        r232, "123-456"
  // c_comment: "Loyal"
  Const        r233, "c_comment"
  Const        r234, "Loyal"
  // c_custkey: 1,
  Move         r235, r218
  Move         r236, r135
  // c_name: "Alice",
  Move         r237, r219
  Move         r238, r220
  // revenue: 1000.0 * 0.9, // 900.0
  Move         r239, r221
  Move         r240, r224
  // c_acctbal: 100.0,
  Move         r241, r225
  Move         r242, r226
  // n_name: "BRAZIL",
  Move         r243, r227
  Move         r244, r228
  // c_address: "123 St",
  Move         r245, r229
  Move         r246, r230
  // c_phone: "123-456",
  Move         r247, r231
  Move         r248, r232
  // c_comment: "Loyal"
  Move         r249, r233
  Move         r250, r234
  // {
  MakeMap      r252, 8, r235
  // expect result == [
  MakeList     r253, 1, r252
  Equal        r254, r6, r253
  Expect       r254
  Return       r0
