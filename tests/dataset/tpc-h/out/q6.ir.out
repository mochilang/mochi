func main (regs=37)
  // let lineitem = [
  Const        r0, [{"l_discount": 0.06, "l_extendedprice": 1000.0, "l_quantity": 10, "l_shipdate": "1994-02-15"}, {"l_discount": 0.07, "l_extendedprice": 500.0, "l_quantity": 23, "l_shipdate": "1994-03-10"}, {"l_discount": 0.04, "l_extendedprice": 400.0, "l_quantity": 15, "l_shipdate": "1994-04-10"}, {"l_discount": 0.06, "l_extendedprice": 200.0, "l_quantity": 5, "l_shipdate": "1995-01-01"}]
  // let result = from l in lineitem
  Const        r1, []
  // (l.l_shipdate >= "1994-01-01") &&
  Const        r2, "l_shipdate"
  // (l.l_shipdate < "1995-01-01") &&
  Const        r2, "l_shipdate"
  // (l.l_discount >= 0.05) &&
  Const        r3, "l_discount"
  // (l.l_discount <= 0.07) &&
  Const        r3, "l_discount"
  // (l.l_quantity < 24)
  Const        r4, "l_quantity"
  // select sum(l.l_extendedprice * l.l_discount)
  Const        r5, "l_extendedprice"
  Const        r3, "l_discount"
  // let result = from l in lineitem
  IterPrep     r6, r0
  Len          r7, r6
  Const        r9, 0
  Move         r8, r9
L3:
  LessInt      r10, r8, r7
  JumpIfFalse  r10, L0
  Index        r11, r6, r8
  Move         r12, r11
  // (l.l_shipdate >= "1994-01-01") &&
  Const        r2, "l_shipdate"
  Index        r13, r12, r2
  Const        r14, "1994-01-01"
  LessEq       r15, r14, r13
  Move         r16, r15
  JumpIfFalse  r16, L1
  // (l.l_shipdate < "1995-01-01") &&
  Const        r2, "l_shipdate"
  Index        r17, r12, r2
  Const        r18, "1995-01-01"
  Less         r19, r17, r18
  // (l.l_shipdate >= "1994-01-01") &&
  Move         r16, r19
  // (l.l_shipdate < "1995-01-01") &&
  JumpIfFalse  r16, L1
  // (l.l_discount >= 0.05) &&
  Const        r3, "l_discount"
  Index        r20, r12, r3
  Const        r21, 0.05
  LessEqFloat  r22, r21, r20
  // (l.l_shipdate < "1995-01-01") &&
  Move         r16, r22
  // (l.l_discount >= 0.05) &&
  JumpIfFalse  r16, L1
  // (l.l_discount <= 0.07) &&
  Const        r3, "l_discount"
  Index        r23, r12, r3
  Const        r24, 0.07
  LessEqFloat  r25, r23, r24
  // (l.l_discount >= 0.05) &&
  Move         r16, r25
  // (l.l_discount <= 0.07) &&
  JumpIfFalse  r16, L1
  // (l.l_quantity < 24)
  Const        r4, "l_quantity"
  Index        r26, r12, r4
  Const        r27, 24
  Less         r28, r26, r27
  // (l.l_discount <= 0.07) &&
  Move         r16, r28
L1:
  // (l.l_shipdate >= "1994-01-01") &&
  JumpIfFalse  r16, L2
  // select sum(l.l_extendedprice * l.l_discount)
  Const        r5, "l_extendedprice"
  Index        r29, r12, r5
  Const        r3, "l_discount"
  Index        r30, r12, r3
  Mul          r31, r29, r30
  // let result = from l in lineitem
  Append       r32, r1, r31
  Move         r1, r32
L2:
  Const        r33, 1
  AddInt       r8, r8, r33
  Jump         L3
L0:
  // select sum(l.l_extendedprice * l.l_discount)
  Sum          r34, r1
  // json(result)
  JSON         r34
  // expect result == ((1000.0 * 0.06) + (500.0 * 0.07)) // 60 + 35 = 95
  Const        r35, 95.0
  EqualFloat   r36, r34, r35
  Expect       r36
  Return       r0
