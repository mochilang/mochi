func main (regs=244)
  // let lineitem = [
  Const        r0, [{"l_discount": 0.05, "l_extendedprice": 1000, "l_linestatus": "O", "l_quantity": 17, "l_returnflag": "N", "l_shipdate": "1998-08-01", "l_tax": 0.07}, {"l_discount": 0.1, "l_extendedprice": 2000, "l_linestatus": "O", "l_quantity": 36, "l_returnflag": "N", "l_shipdate": "1998-09-01", "l_tax": 0.05}, {"l_discount": 0, "l_extendedprice": 1500, "l_linestatus": "F", "l_quantity": 25, "l_returnflag": "R", "l_shipdate": "1998-09-03", "l_tax": 0.08}]
  Move         r1, r0
  // from row in lineitem
  IterPrep     r3, r1
  Len          r4, r3
  Const        r5, 0
  MakeMap      r6, 0, r0
  Const        r7, []
L3:
  Less         r8, r5, r4
  JumpIfFalse  r8, L0
  Index        r9, r3, r5
  Move         r10, r9
  // where row.l_shipdate <= "1998-09-02"
  Const        r11, "l_shipdate"
  Index        r12, r10, r11
  Const        r13, "1998-09-02"
  LessEq       r14, r12, r13
  JumpIfFalse  r14, L1
  // returnflag: row.l_returnflag,
  Const        r15, "returnflag"
  Const        r16, "l_returnflag"
  Index        r17, r10, r16
  // linestatus: row.l_linestatus
  Const        r18, "linestatus"
  Const        r19, "l_linestatus"
  Index        r20, r10, r19
  // returnflag: row.l_returnflag,
  Move         r21, r15
  Move         r22, r17
  // linestatus: row.l_linestatus
  Move         r23, r18
  Move         r24, r20
  // group by {
  MakeMap      r25, 2, r21
  Str          r26, r25
  In           r27, r26, r6
  JumpIfTrue   r27, L2
  // from row in lineitem
  Const        r28, []
  Const        r29, "__group__"
  Const        r30, true
  Const        r31, "key"
  // group by {
  Move         r32, r25
  // from row in lineitem
  Const        r33, "items"
  Move         r34, r28
  MakeMap      r35, 3, r29
  SetIndex     r6, r26, r35
  Append       r36, r7, r35
  Const        r37, "items"
L2:
  Index        r38, r6, r26
  Index        r39, r38, r37
  Append       r40, r39, r9
  SetIndex     r38, r37, r40
L1:
  Jump         L3
  Const        r43, 0
  Len          r44, r36
L0:
  Less         r45, r43, r44
  JumpIfFalse  r45, L4
L14:
  Index        r46, r36, r43
  // sum_qty: sum(from x in g select x.l_quantity),
  IterPrep     r60, r46
  Len          r61, r60
  Const        r62, 0
  Less         r63, r62, r61
  JumpIfFalse  r63, L5
L6:
  Jump         L6
  // sum_base_price: sum(from x in g select x.l_extendedprice),
  IterPrep     r74, r46
  Len          r75, r74
L5:
  Const        r76, 0
  Less         r77, r76, r75
  JumpIfFalse  r77, L7
L8:
  Jump         L8
  // sum_disc_price: sum(from x in g select x.l_extendedprice * (1 - x.l_discount)),
  IterPrep     r87, r46
  Len          r88, r87
  Const        r89, 0
  Less         r90, r89, r88
L7:
  JumpIfFalse  r90, L9
L10:
  Jump         L10
  // sum_charge: sum(from x in g select x.l_extendedprice * (1 - x.l_discount) * (1 + x.l_tax)),
  IterPrep     r105, r46
  Len          r106, r105
  Const        r107, 0
  Less         r108, r107, r106
  JumpIfFalse  r108, L11
L9:
  Jump         L12
  // avg_qty: avg(from x in g select x.l_quantity),
  IterPrep     r128, r46
  Len          r129, r128
  Const        r130, 0
  Less         r131, r130, r129
  JumpIfFalse  r131, L11
L12:
  // avg_price: avg(from x in g select x.l_extendedprice),
  IterPrep     r141, r46
  Len          r142, r141
  Const        r143, 0
  Less         r144, r143, r142
  JumpIfFalse  r144, L11
  // avg_disc: avg(from x in g select x.l_discount),
  IterPrep     r154, r46
  Len          r155, r154
  Const        r156, 0
  Less         r157, r156, r155
  JumpIfFalse  r157, L13
L13:
  // from row in lineitem
  Jump         L14
  // json(result)
  JSON         r2
  // returnflag: "N",
  Const        r192, "returnflag"
  Const        r193, "N"
  // linestatus: "O",
  Const        r194, "linestatus"
  Const        r195, "O"
  // sum_qty: 53,
  Const        r196, "sum_qty"
  Const        r197, 53
  // sum_base_price: 3000,
  Const        r198, "sum_base_price"
  Const        r199, 3000
  // sum_disc_price: 950.0 + 1800.0,               // 2750.0
  Const        r200, "sum_disc_price"
  Const        r203, 2750
  // sum_charge: (950.0 * 1.07) + (1800.0 * 1.05), // 1016.5 + 1890 = 2906.5
  Const        r204, "sum_charge"
  Const        r211, 2906.5
L4:
  // avg_qty: 26.5,
  Const        r212, "avg_qty"
  Const        r213, 26.5
  // avg_price: 1500,
  Const        r214, "avg_price"
  Const        r215, 1500
  // avg_disc: 0.07500000000000001,
  Const        r216, "avg_disc"
  Const        r217, 0.07500000000000001
  // count_order: 2
  Const        r218, "count_order"
  Const        r219, 2
  // returnflag: "N",
  Move         r220, r192
  Move         r221, r193
  // linestatus: "O",
  Move         r222, r194
  Move         r223, r195
  // sum_qty: 53,
  Move         r224, r196
  Move         r225, r197
  // sum_base_price: 3000,
  Move         r226, r198
  Move         r227, r199
  // sum_disc_price: 950.0 + 1800.0,               // 2750.0
  Move         r228, r200
  Move         r229, r203
  // sum_charge: (950.0 * 1.07) + (1800.0 * 1.05), // 1016.5 + 1890 = 2906.5
  Move         r230, r204
  Move         r231, r211
  // avg_qty: 26.5,
  Move         r232, r212
  Move         r233, r213
  // avg_price: 1500,
  Move         r234, r214
  Move         r235, r215
  // avg_disc: 0.07500000000000001,
  Move         r236, r216
  Move         r237, r217
  // count_order: 2
  Move         r238, r218
  Move         r239, r219
  // {
  MakeMap      r240, 10, r220
  Move         r241, r240
  // expect result == [
  MakeList     r242, 1, r241
  Equal        r243, r2, r242
  Expect       r243
  Return       r0
