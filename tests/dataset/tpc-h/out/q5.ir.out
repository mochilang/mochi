func main (regs=216)
  // let region = [
  Const        r0, [{"r_name": "ASIA", "r_regionkey": 0}, {"r_name": "EUROPE", "r_regionkey": 1}]
  Move         r1, r0
  // let nation = [
  Const        r2, [{"n_name": "JAPAN", "n_nationkey": 10, "n_regionkey": 0}, {"n_name": "INDIA", "n_nationkey": 20, "n_regionkey": 0}, {"n_name": "FRANCE", "n_nationkey": 30, "n_regionkey": 1}]
  Move         r3, r2
  // let customer = [
  Const        r4, [{"c_custkey": 1, "c_nationkey": 10}, {"c_custkey": 2, "c_nationkey": 20}]
  Move         r5, r4
  // let supplier = [
  Const        r6, [{"s_nationkey": 10, "s_suppkey": 100}, {"s_nationkey": 20, "s_suppkey": 200}]
  Move         r7, r6
  // let orders = [
  Const        r8, [{"o_custkey": 1, "o_orderdate": "1994-03-15", "o_orderkey": 1000}, {"o_custkey": 2, "o_orderdate": "1994-06-10", "o_orderkey": 2000}, {"o_custkey": 2, "o_orderdate": "1995-01-01", "o_orderkey": 3000}]
  Move         r9, r8
  // let lineitem = [
  Const        r10, [{"l_discount": 0.05, "l_extendedprice": 1000, "l_orderkey": 1000, "l_suppkey": 100}, {"l_discount": 0.1, "l_extendedprice": 800, "l_orderkey": 2000, "l_suppkey": 200}, {"l_discount": 0.05, "l_extendedprice": 900, "l_orderkey": 3000, "l_suppkey": 200}]
  Move         r11, r10
  // from r in region
  Const        r12, []
  IterPrep     r13, r1
  Len          r14, r13
  // join n in nation on n.n_regionkey == r.r_regionkey
  IterPrep     r15, r3
  Len          r16, r15
  // from r in region
  Const        r17, 0
L4:
  Less         r18, r17, r14
  JumpIfFalse  r18, L0
  Index        r19, r13, r17
  Move         r20, r19
  // join n in nation on n.n_regionkey == r.r_regionkey
  Const        r21, 0
L3:
  Less         r22, r21, r16
  JumpIfFalse  r22, L1
  Index        r23, r15, r21
  Move         r24, r23
  Const        r25, "n_regionkey"
  Index        r26, r24, r25
  Const        r27, "r_regionkey"
  Index        r28, r20, r27
  Equal        r29, r26, r28
  JumpIfFalse  r29, L2
  // where r.r_name == "ASIA"
  Const        r30, "r_name"
  Index        r31, r20, r30
  Const        r32, "ASIA"
  Equal        r33, r31, r32
  JumpIfFalse  r33, L2
  // from r in region
  Append       r34, r12, r24
  Move         r12, r34
L2:
  // join n in nation on n.n_regionkey == r.r_regionkey
  Const        r35, 1
  Add          r36, r21, r35
  Move         r21, r36
  Jump         L3
L1:
  // from r in region
  Const        r37, 1
  Add          r38, r17, r37
  Move         r17, r38
  Jump         L4
L0:
  // let asia_nations =
  Move         r39, r12
  // from c in customer
  Const        r40, []
  IterPrep     r41, r5
  Len          r42, r41
  Const        r43, 0
L17:
  Less         r44, r43, r42
  JumpIfFalse  r44, L5
  Index        r45, r41, r43
  Move         r46, r45
  // join n in asia_nations on c.c_nationkey == n.n_nationkey
  IterPrep     r47, r39
  Len          r48, r47
  Const        r49, 0
L16:
  Less         r50, r49, r48
  JumpIfFalse  r50, L6
  Index        r51, r47, r49
  Move         r24, r51
  Const        r52, "c_nationkey"
  Index        r53, r46, r52
  Const        r54, "n_nationkey"
  Index        r55, r24, r54
  Equal        r56, r53, r55
  JumpIfFalse  r56, L7
  // join o in orders on o.o_custkey == c.c_custkey
  IterPrep     r57, r9
  Len          r58, r57
  Const        r59, 0
L15:
  Less         r60, r59, r58
  JumpIfFalse  r60, L7
  Index        r61, r57, r59
  Move         r62, r61
  Const        r63, "o_custkey"
  Index        r64, r62, r63
  Const        r65, "c_custkey"
  Index        r66, r46, r65
  Equal        r67, r64, r66
  JumpIfFalse  r67, L8
  // join l in lineitem on l.l_orderkey == o.o_orderkey
  IterPrep     r68, r11
  Len          r69, r68
  Const        r70, 0
L14:
  Less         r71, r70, r69
  JumpIfFalse  r71, L8
  Index        r72, r68, r70
  Move         r73, r72
  Const        r74, "l_orderkey"
  Index        r75, r73, r74
  Const        r76, "o_orderkey"
  Index        r77, r62, r76
  Equal        r78, r75, r77
  JumpIfFalse  r78, L9
  // join s in supplier on s.s_suppkey == l.l_suppkey
  IterPrep     r79, r7
  Len          r80, r79
  Const        r81, 0
L13:
  Less         r82, r81, r80
  JumpIfFalse  r82, L9
  Index        r83, r79, r81
  Move         r84, r83
  Const        r85, "s_suppkey"
  Index        r86, r84, r85
  Const        r87, "l_suppkey"
  Index        r88, r73, r87
  Equal        r89, r86, r88
  JumpIfFalse  r89, L10
  // where o.o_orderdate >= "1994-01-01" && o.o_orderdate < "1995-01-01" && s.s_nationkey == c.c_nationkey
  Const        r90, "o_orderdate"
  Index        r91, r62, r90
  Const        r92, "1994-01-01"
  LessEq       r93, r92, r91
  Move         r94, r93
  JumpIfFalse  r94, L11
  Const        r95, "o_orderdate"
  Index        r96, r62, r95
  Move         r94, r96
L11:
  Const        r97, "1995-01-01"
  Less         r98, r94, r97
  Move         r99, r98
  JumpIfFalse  r99, L12
  Const        r100, "s_nationkey"
  Index        r101, r84, r100
  Move         r99, r101
L12:
  Const        r102, "c_nationkey"
  Index        r103, r46, r102
  Equal        r104, r99, r103
  JumpIfFalse  r104, L10
  // nation: n.n_name,
  Const        r105, "nation"
  Const        r106, "n_name"
  Index        r107, r24, r106
  // revenue: l.l_extendedprice * (1 - l.l_discount)
  Const        r108, "revenue"
  Const        r109, "l_extendedprice"
  Index        r110, r73, r109
  Const        r111, 1
  Const        r112, "l_discount"
  Index        r113, r73, r112
  Sub          r114, r111, r113
  Mul          r115, r110, r114
  // nation: n.n_name,
  Move         r116, r105
  Move         r117, r107
  // revenue: l.l_extendedprice * (1 - l.l_discount)
  Move         r118, r108
  Move         r119, r115
  // select {
  MakeMap      r120, 2, r116
  // from c in customer
  Append       r121, r40, r120
  Move         r40, r121
L10:
  // join s in supplier on s.s_suppkey == l.l_suppkey
  Const        r122, 1
  Add          r123, r81, r122
  Move         r81, r123
  Jump         L13
L9:
  // join l in lineitem on l.l_orderkey == o.o_orderkey
  Const        r124, 1
  Add          r125, r70, r124
  Move         r70, r125
  Jump         L14
L8:
  // join o in orders on o.o_custkey == c.c_custkey
  Const        r126, 1
  Add          r127, r59, r126
  Move         r59, r127
  Jump         L15
L7:
  // join n in asia_nations on c.c_nationkey == n.n_nationkey
  Const        r128, 1
  Add          r129, r49, r128
  Move         r49, r129
  Jump         L16
L6:
  // from c in customer
  Const        r130, 1
  Add          r131, r43, r130
  Move         r43, r131
  Jump         L17
L5:
  // let local_customer_supplier_orders =
  Move         r132, r40
  // from r in local_customer_supplier_orders
  Const        r133, []
  IterPrep     r134, r132
  Len          r135, r134
  Const        r136, 0
  MakeMap      r137, 0, r0
  Const        r138, []
L20:
  Less         r139, r136, r135
  JumpIfFalse  r139, L18
  Index        r140, r134, r136
  Move         r20, r140
  // group by r.nation into g
  Const        r141, "nation"
  Index        r142, r20, r141
  Str          r143, r142
  In           r144, r143, r137
  JumpIfTrue   r144, L19
  // from r in local_customer_supplier_orders
  Const        r145, []
  Const        r146, "__group__"
  Const        r147, true
  Const        r148, "key"
  // group by r.nation into g
  Move         r149, r142
  // from r in local_customer_supplier_orders
  Const        r150, "items"
  Move         r151, r145
  // group by r.nation into g
  Const        r152, "nation"
  Move         r153, r142
  // from r in local_customer_supplier_orders
  MakeMap      r154, 4, r146
  SetIndex     r137, r143, r154
  Append       r155, r138, r154
  Move         r138, r155
L19:
  Const        r156, "items"
  Index        r157, r137, r143
  Index        r158, r157, r156
  Append       r159, r158, r140
  SetIndex     r157, r156, r159
  Const        r160, 1
  Add          r161, r136, r160
  Move         r136, r161
  Jump         L20
L18:
  Const        r162, 0
  Len          r163, r138
L26:
  Less         r164, r162, r163
  JumpIfFalse  r164, L21
  Index        r165, r138, r162
  Move         r166, r165
  Const        r167, "nation"
  Index        r168, r165, r167
  Const        r169, "nation"
  Index        r170, r165, r169
  // n_name: g.key,
  Const        r171, "n_name"
  Const        r172, "key"
  Index        r173, r166, r172
  // revenue: sum(from x in g select x.revenue)
  Const        r174, "revenue"
  Const        r175, []
  IterPrep     r176, r166
  Len          r177, r176
  Const        r178, 0
L23:
  Less         r179, r178, r177
  JumpIfFalse  r179, L22
  Index        r180, r176, r178
  Move         r181, r180
  Const        r182, "revenue"
  Index        r183, r181, r182
  Append       r184, r175, r183
  Move         r175, r184
  Const        r185, 1
  Add          r186, r178, r185
  Move         r178, r186
  Jump         L23
L22:
  Sum          187,175,0,0
  // n_name: g.key,
  Move         r188, r171
  Move         r189, r173
  // revenue: sum(from x in g select x.revenue)
  Move         r190, r174
  Move         r191, r187
  // select {
  MakeMap      r192, 2, r188
  // sort by -sum(from x in g select x.revenue)
  Const        r193, []
  IterPrep     r194, r166
  Len          r195, r194
  Const        r196, 0
L25:
  Less         r197, r196, r195
  JumpIfFalse  r197, L24
  Index        r198, r194, r196
  Move         r181, r198
  Const        r199, "revenue"
  Index        r200, r181, r199
  Append       r201, r193, r200
  Move         r193, r201
  Const        r202, 1
  Add          r203, r196, r202
  Move         r196, r203
  Jump         L25
L24:
  Sum          204,193,0,0
  Neg          r205, r204
  Move         r206, r205
  // from r in local_customer_supplier_orders
  Move         r207, r192
  MakeList     r208, 2, r206
  Append       r209, r133, r208
  Move         r133, r209
  Const        r210, 1
  Add          r211, r162, r210
  Move         r162, r211
  Jump         L26
L21:
  // sort by -sum(from x in g select x.revenue)
  Sort         212,133,0,0
  // from r in local_customer_supplier_orders
  Move         r133, r212
  // let result =
  Move         r213, r133
  // json(result)
  JSON         r213
  // expect result == [
  Const        r214, [{"n_name": "JAPAN", "revenue": 950}, {"n_name": "INDIA", "revenue": 720}]
  Equal        r215, r213, r214
  Expect       r215
  Return       r0

