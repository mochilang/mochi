func main (regs=195)
L0:
  // let part = [
  Const        r0, [{"p_brand": "Brand#12", "p_container": "SM BOX", "p_partkey": 1, "p_size": 3}, {"p_brand": "Brand#23", "p_container": "MED BOX", "p_partkey": 2, "p_size": 5}, {"p_brand": "Brand#34", "p_container": "LG BOX", "p_partkey": 3, "p_size": 15}]
  // let lineitem = [
  Const        r1, [{"l_discount": 0.1, "l_extendedprice": 1000, "l_partkey": 1, "l_quantity": 5, "l_shipinstruct": "DELIVER IN PERSON", "l_shipmode": "AIR"}, {"l_discount": 0.05, "l_extendedprice": 2000, "l_partkey": 2, "l_quantity": 15, "l_shipinstruct": "DELIVER IN PERSON", "l_shipmode": "AIR REG"}, {"l_discount": 0, "l_extendedprice": 1500, "l_partkey": 3, "l_quantity": 35, "l_shipinstruct": "DELIVER IN PERSON", "l_shipmode": "AIR"}]
  // from l in lineitem
  Const        r2, []
  IterPrep     r3, r1
  Len          r4, r3
  // join p in part on p.p_partkey == l.l_partkey
  IterPrep     r5, r0
  Len          r6, r5
  // from l in lineitem
  Const        r7, 0
  EqualInt     r8, r4, r7
  JumpIfTrue   r8, L0
  EqualInt     r9, r6, r7
  JumpIfTrue   r9, L0
  LessEq       r10, r6, r4
  JumpIfFalse  r10, L1
  // join p in part on p.p_partkey == l.l_partkey
  MakeMap      r11, 0, r0
  Const        r12, 0
L4:
  LessInt      r13, r12, r6
  JumpIfFalse  r13, L2
  Index        r14, r5, r12
  Move         r15, r14
  Const        r16, "p_partkey"
  Index        r17, r15, r16
  Index        r18, r11, r17
  Const        r19, nil
  NotEqual     r20, r18, r19
  JumpIfTrue   r20, L3
  MakeList     r21, 0, r0
  SetIndex     r11, r17, r21
L3:
  Index        r18, r11, r17
  Append       r22, r18, r14
  SetIndex     r11, r17, r22
  Const        r23, 1
  AddInt       r12, r12, r23
  Jump         L4
L2:
  // from l in lineitem
  Const        r24, 0
L16:
  LessInt      r25, r24, r4
  JumpIfFalse  r25, L0
  Index        r27, r3, r24
  // join p in part on p.p_partkey == l.l_partkey
  Const        r28, "l_partkey"
  Index        r29, r27, r28
  // from l in lineitem
  Index        r30, r11, r29
  NotEqual     r31, r30, r19
  JumpIfFalse  r31, L5
  Len          r32, r30
  Const        r33, 0
L15:
  LessInt      r34, r33, r32
  JumpIfFalse  r34, L5
  Index        r15, r30, r33
  // (p.p_brand == "Brand#12") &&
  Const        r36, "p_brand"
  Index        r37, r15, r36
  Const        r38, "Brand#12"
  Equal        r40, r37, r38
  JumpIfFalse  r40, L6
  // (p.p_container in ["SM CASE", "SM BOX", "SM PACK", "SM PKG"]) &&
  Const        r41, "p_container"
  Index        r42, r15, r41
  Const        r43, ["SM CASE", "SM BOX", "SM PACK", "SM PKG"]
  In           r40, r42, r43
  JumpIfFalse  r40, L6
  // (l.l_quantity >= 1 && l.l_quantity <= 11) &&
  Const        r45, "l_quantity"
  Index        r46, r27, r45
  LessEq       r47, r23, r46
  Index        r48, r27, r45
  Const        r49, 11
  LessEq       r50, r48, r49
  Move         r51, r47
  JumpIfFalse  r51, L7
L7:
  // (p.p_container in ["SM CASE", "SM BOX", "SM PACK", "SM PKG"]) &&
  Move         r40, r50
  // (l.l_quantity >= 1 && l.l_quantity <= 11) &&
  JumpIfFalse  r40, L6
  // (p.p_size >= 1 && p.p_size <= 5)
  Const        r52, "p_size"
  Index        r53, r15, r52
  LessEq       r54, r23, r53
  Index        r55, r15, r52
  Const        r56, 5
  LessEq       r57, r55, r56
  Move         r58, r54
  JumpIfFalse  r58, L6
L6:
  // ) || (
  Move         r59, r57
  JumpIfTrue   r59, L8
  // (p.p_brand == "Brand#23") &&
  Index        r60, r15, r36
  Const        r61, "Brand#23"
  Equal        r63, r60, r61
  JumpIfFalse  r63, L9
  // (p.p_container in ["MED BAG", "MED BOX", "MED PKG", "MED PACK"]) &&
  Index        r64, r15, r41
  Const        r65, ["MED BAG", "MED BOX", "MED PKG", "MED PACK"]
  In           r63, r64, r65
  JumpIfFalse  r63, L9
  // (l.l_quantity >= 10 && l.l_quantity <= 20) &&
  Index        r67, r27, r45
  Const        r68, 10
  LessEq       r69, r68, r67
  Index        r70, r27, r45
  Const        r71, 20
  LessEq       r72, r70, r71
  Move         r73, r69
  JumpIfFalse  r73, L10
L10:
  // (p.p_container in ["MED BAG", "MED BOX", "MED PKG", "MED PACK"]) &&
  Move         r63, r72
  // (l.l_quantity >= 10 && l.l_quantity <= 20) &&
  JumpIfFalse  r63, L9
  // (p.p_size >= 1 && p.p_size <= 10)
  Index        r74, r15, r52
  LessEq       r75, r23, r74
  Index        r76, r15, r52
  LessEq       r77, r76, r68
  Move         r78, r75
  JumpIfFalse  r78, L9
L9:
  // ) || (
  Move         r59, r77
  // ) || (
  JumpIfTrue   r59, L8
  // (p.p_brand == "Brand#34") &&
  Index        r79, r15, r36
  Const        r80, "Brand#34"
  Equal        r82, r79, r80
  JumpIfFalse  r82, L11
  // (p.p_container in ["LG CASE", "LG BOX", "LG PACK", "LG PKG"]) &&
  Index        r83, r15, r41
  Const        r84, ["LG CASE", "LG BOX", "LG PACK", "LG PKG"]
  In           r82, r83, r84
  JumpIfFalse  r82, L11
  // (l.l_quantity >= 20 && l.l_quantity <= 30) &&
  Index        r86, r27, r45
  LessEq       r87, r71, r86
  Index        r88, r27, r45
  Const        r89, 30
  LessEq       r90, r88, r89
  Move         r91, r87
  JumpIfFalse  r91, L12
L12:
  // (p.p_container in ["LG CASE", "LG BOX", "LG PACK", "LG PKG"]) &&
  Move         r82, r90
  // (l.l_quantity >= 20 && l.l_quantity <= 30) &&
  JumpIfFalse  r82, L11
  // (p.p_size >= 1 && p.p_size <= 15)
  Index        r92, r15, r52
  LessEq       r93, r23, r92
  Index        r94, r15, r52
  Const        r95, 15
  LessEq       r96, r94, r95
  Move         r97, r93
  JumpIfFalse  r97, L11
L11:
  // ) || (
  Move         r59, r96
L8:
  // ) && l.l_shipmode in ["AIR", "AIR REG"]
  Const        r98, "l_shipmode"
  Index        r99, r27, r98
  Const        r100, ["AIR", "AIR REG"]
  In           r101, r99, r100
  // && l.l_shipinstruct == "DELIVER IN PERSON"
  Const        r102, "l_shipinstruct"
  Index        r103, r27, r102
  Const        r104, "DELIVER IN PERSON"
  Equal        r105, r103, r104
  // ) && l.l_shipmode in ["AIR", "AIR REG"]
  Move         r106, r59
  JumpIfFalse  r106, L13
  Move         r106, r101
  // && l.l_shipinstruct == "DELIVER IN PERSON"
  JumpIfFalse  r106, L13
  Move         r106, r105
L13:
  // where (
  JumpIfFalse  r106, L14
  // select sum(l.l_extendedprice * (1 - l.l_discount))
  Const        r107, "l_extendedprice"
  Index        r108, r27, r107
  Const        r109, "l_discount"
  Index        r110, r27, r109
  Sub          r111, r23, r110
  Mul          r112, r108, r111
  // from l in lineitem
  Append       r2, r2, r112
L14:
  AddInt       r33, r33, r23
  Jump         L15
L5:
  AddInt       r24, r24, r23
  Jump         L16
L1:
  MakeMap      r114, 0, r0
  Const        r115, 0
L19:
  LessInt      r116, r115, r4
  JumpIfFalse  r116, L17
  Index        r117, r3, r115
  // join p in part on p.p_partkey == l.l_partkey
  Index        r118, r117, r28
  // from l in lineitem
  Index        r119, r114, r118
  NotEqual     r120, r119, r19
  JumpIfTrue   r120, L18
  MakeList     r121, 0, r0
  SetIndex     r114, r118, r121
L18:
  Index        r119, r114, r118
  Append       r122, r119, r117
  SetIndex     r114, r118, r122
  AddInt       r115, r115, r23
  Jump         L19
L17:
  // join p in part on p.p_partkey == l.l_partkey
  Const        r123, 0
L32:
  LessInt      r124, r123, r6
  JumpIfFalse  r124, L20
  Index        r15, r5, r123
  Index        r126, r15, r16
  Index        r127, r114, r126
  NotEqual     r128, r127, r19
  JumpIfFalse  r128, L21
  Len          r129, r127
  Const        r130, 0
L31:
  LessInt      r131, r130, r129
  JumpIfFalse  r131, L21
  Index        r27, r127, r130
  // (p.p_brand == "Brand#12") &&
  Index        r133, r15, r36
  Equal        r135, r133, r38
  JumpIfFalse  r135, L22
  // (p.p_container in ["SM CASE", "SM BOX", "SM PACK", "SM PKG"]) &&
  Index        r136, r15, r41
  Const        r137, ["SM CASE", "SM BOX", "SM PACK", "SM PKG"]
  In           r135, r136, r137
  JumpIfFalse  r135, L22
  // (l.l_quantity >= 1 && l.l_quantity <= 11) &&
  Index        r139, r27, r45
  LessEq       r140, r23, r139
  Index        r141, r27, r45
  LessEq       r142, r141, r49
  Move         r143, r140
  JumpIfFalse  r143, L23
L23:
  // (p.p_container in ["SM CASE", "SM BOX", "SM PACK", "SM PKG"]) &&
  Move         r135, r142
  // (l.l_quantity >= 1 && l.l_quantity <= 11) &&
  JumpIfFalse  r135, L22
  // (p.p_size >= 1 && p.p_size <= 5)
  Index        r144, r15, r52
  LessEq       r145, r23, r144
  Index        r146, r15, r52
  LessEq       r147, r146, r56
  Move         r148, r145
  JumpIfFalse  r148, L22
L22:
  // ) || (
  Move         r149, r147
  JumpIfTrue   r149, L24
  // (p.p_brand == "Brand#23") &&
  Index        r150, r15, r36
  Equal        r152, r150, r61
  JumpIfFalse  r152, L25
  // (p.p_container in ["MED BAG", "MED BOX", "MED PKG", "MED PACK"]) &&
  Index        r153, r15, r41
  Const        r154, ["MED BAG", "MED BOX", "MED PKG", "MED PACK"]
  In           r152, r153, r154
  JumpIfFalse  r152, L25
  // (l.l_quantity >= 10 && l.l_quantity <= 20) &&
  Index        r156, r27, r45
  LessEq       r157, r68, r156
  Index        r158, r27, r45
  LessEq       r159, r158, r71
  Move         r160, r157
  JumpIfFalse  r160, L26
L26:
  // (p.p_container in ["MED BAG", "MED BOX", "MED PKG", "MED PACK"]) &&
  Move         r152, r159
  // (l.l_quantity >= 10 && l.l_quantity <= 20) &&
  JumpIfFalse  r152, L25
  // (p.p_size >= 1 && p.p_size <= 10)
  Index        r161, r15, r52
  LessEq       r162, r23, r161
  Index        r163, r15, r52
  LessEq       r164, r163, r68
  Move         r165, r162
  JumpIfFalse  r165, L25
L25:
  // ) || (
  Move         r149, r164
  // ) || (
  JumpIfTrue   r149, L24
  // (p.p_brand == "Brand#34") &&
  Index        r166, r15, r36
  Equal        r168, r166, r80
  JumpIfFalse  r168, L27
  // (p.p_container in ["LG CASE", "LG BOX", "LG PACK", "LG PKG"]) &&
  Index        r169, r15, r41
  Const        r170, ["LG CASE", "LG BOX", "LG PACK", "LG PKG"]
  In           r168, r169, r170
  JumpIfFalse  r168, L27
  // (l.l_quantity >= 20 && l.l_quantity <= 30) &&
  Index        r172, r27, r45
  LessEq       r173, r71, r172
  Index        r174, r27, r45
  LessEq       r175, r174, r89
  Move         r176, r173
  JumpIfFalse  r176, L28
L28:
  // (p.p_container in ["LG CASE", "LG BOX", "LG PACK", "LG PKG"]) &&
  Move         r168, r175
  // (l.l_quantity >= 20 && l.l_quantity <= 30) &&
  JumpIfFalse  r168, L27
  // (p.p_size >= 1 && p.p_size <= 15)
  Index        r177, r15, r52
  LessEq       r178, r23, r177
  Index        r179, r15, r52
  LessEq       r180, r179, r95
  Move         r181, r178
  JumpIfFalse  r181, L27
L27:
  // ) || (
  Move         r149, r180
L24:
  // ) && l.l_shipmode in ["AIR", "AIR REG"]
  Index        r182, r27, r98
  Const        r183, ["AIR", "AIR REG"]
  In           r184, r182, r183
  // && l.l_shipinstruct == "DELIVER IN PERSON"
  Index        r185, r27, r102
  Equal        r186, r185, r104
  // ) && l.l_shipmode in ["AIR", "AIR REG"]
  Move         r187, r149
  JumpIfFalse  r187, L29
  Move         r187, r184
  // && l.l_shipinstruct == "DELIVER IN PERSON"
  JumpIfFalse  r187, L29
  Move         r187, r186
L29:
  // where (
  JumpIfFalse  r187, L30
  // select sum(l.l_extendedprice * (1 - l.l_discount))
  Index        r188, r27, r107
  Index        r189, r27, r109
  Sub          r190, r23, r189
  Mul          r191, r188, r190
  // from l in lineitem
  Append       r2, r2, r191
L30:
  // join p in part on p.p_partkey == l.l_partkey
  AddInt       r130, r130, r23
  Jump         L31
L21:
  AddInt       r123, r123, r23
  Jump         L32
L20:
  // select sum(l.l_extendedprice * (1 - l.l_discount))
  Sum          r193, r2
  // print(result)
  Print        r193
  // expect result == 2800.0
  Const        r194, 2800
  EqualFloat   r195, r193, r194
  Expect       r195
  Return       r0
