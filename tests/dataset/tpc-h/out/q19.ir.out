func main (regs=181)
  // let part = [
  Const        r0, [{"p_brand": "Brand#12", "p_container": "SM BOX", "p_partkey": 1, "p_size": 3}, {"p_brand": "Brand#23", "p_container": "MED BOX", "p_partkey": 2, "p_size": 5}, {"p_brand": "Brand#34", "p_container": "LG BOX", "p_partkey": 3, "p_size": 15}]
  Move         r1, r0
  // let lineitem = [
  Const        r2, [{"l_discount": 0.1, "l_extendedprice": 1000, "l_partkey": 1, "l_quantity": 5, "l_shipinstruct": "DELIVER IN PERSON", "l_shipmode": "AIR"}, {"l_discount": 0.05, "l_extendedprice": 2000, "l_partkey": 2, "l_quantity": 15, "l_shipinstruct": "DELIVER IN PERSON", "l_shipmode": "AIR REG"}, {"l_discount": 0, "l_extendedprice": 1500, "l_partkey": 3, "l_quantity": 35, "l_shipinstruct": "DELIVER IN PERSON", "l_shipmode": "AIR"}]
  // from l in lineitem
  Const        r4, []
  IterPrep     r5, r2
  Len          r6, r5
  // join p in part on p.p_partkey == l.l_partkey
  IterPrep     r7, r1
  Len          r8, r7
  // from l in lineitem
  Const        r9, 0
  Less         r10, r9, r6
L23:
  JumpIfFalse  r10, L0
  Index        r11, r5, r9
  // join p in part on p.p_partkey == l.l_partkey
  Const        r13, 0
  Less         r14, r13, r8
  JumpIfFalse  r14, L1
L22:
  Index        r15, r7, r13
  Const        r17, "p_partkey"
  Index        r18, r15, r17
  Const        r19, "l_partkey"
  Index        r20, r11, r19
  Equal        r21, r18, r20
  JumpIfFalse  r21, L2
  // (p.p_brand == "Brand#12") &&
  Const        r22, "p_brand"
  Index        r23, r15, r22
  Const        r24, "Brand#12"
  Equal        r25, r23, r24
  JumpIfFalse  r25, L3
  // (p.p_container in ["SM CASE", "SM BOX", "SM PACK", "SM PKG"]) &&
  Const        r27, "p_container"
  Index        r28, r15, r27
  Const        r29, ["SM CASE", "SM BOX", "SM PACK", "SM PKG"]
  In           r30, r28, r29
  JumpIfFalse  r30, L4
  // (l.l_quantity >= 1 && l.l_quantity <= 11) &&
  Const        r32, "l_quantity"
  Index        r33, r11, r32
  Const        r34, 1
  LessEq       r35, r34, r33
L3:
  Const        r36, "l_quantity"
  Index        r37, r11, r36
  Const        r38, 11
  LessEq       r39, r37, r38
  Move         r40, r35
  JumpIfFalse  r40, L5
  JumpIfFalse  r39, L6
  // (p.p_size >= 1 && p.p_size <= 5)
  Const        r42, "p_size"
  Index        r43, r15, r42
  Const        r44, 1
  LessEq       r45, r44, r43
  Const        r46, "p_size"
  Index        r47, r15, r46
L5:
  Const        r48, 5
L4:
  LessEq       r49, r47, r48
  Move         r50, r45
  JumpIfFalse  r50, L7
  // ) || (
  JumpIfTrue   r49, L8
  // (p.p_brand == "Brand#23") &&
  Const        r52, "p_brand"
  Index        r53, r15, r52
  Const        r54, "Brand#23"
  Equal        r55, r53, r54
  JumpIfFalse  r55, L9
  // (p.p_container in ["MED BAG", "MED BOX", "MED PKG", "MED PACK"]) &&
  Const        r57, "p_container"
  Index        r58, r15, r57
  Const        r59, ["MED BAG", "MED BOX", "MED PKG", "MED PACK"]
  In           r60, r58, r59
L7:
  // (p.p_brand == "Brand#23") &&
  Move         r56, r60
L6:
  // (p.p_container in ["MED BAG", "MED BOX", "MED PKG", "MED PACK"]) &&
  Move         r61, r56
  JumpIfFalse  r61, L10
  // (l.l_quantity >= 10 && l.l_quantity <= 20) &&
  Const        r62, "l_quantity"
  Index        r63, r11, r62
  Const        r64, 10
  LessEq       r65, r64, r63
  Const        r66, "l_quantity"
  Index        r67, r11, r66
  Const        r68, 20
  LessEq       r69, r67, r68
  JumpIfFalse  r65, L11
  JumpIfFalse  r69, L12
  // (p.p_size >= 1 && p.p_size <= 10)
  Const        r72, "p_size"
L9:
  Index        r73, r15, r72
  Const        r74, 1
  LessEq       r75, r74, r73
  Const        r76, "p_size"
  Index        r77, r15, r76
  Const        r78, 10
  LessEq       r79, r77, r78
  JumpIfFalse  r75, L13
  // ) || (
  JumpIfTrue   r79, L14
  // (p.p_brand == "Brand#34") &&
  Const        r82, "p_brand"
  Index        r83, r15, r82
  Const        r84, "Brand#34"
  Equal        r85, r83, r84
L11:
  Move         r86, r85
L10:
  JumpIfFalse  r86, L15
  // (p.p_container in ["LG CASE", "LG BOX", "LG PACK", "LG PKG"]) &&
  Const        r87, "p_container"
  Index        r88, r15, r87
  Const        r89, ["LG CASE", "LG BOX", "LG PACK", "LG PKG"]
  In           r90, r88, r89
  JumpIfFalse  r90, L16
  // (l.l_quantity >= 20 && l.l_quantity <= 30) &&
  Const        r92, "l_quantity"
  Index        r93, r11, r92
  Const        r94, 20
  LessEq       r95, r94, r93
  Const        r96, "l_quantity"
  Index        r97, r11, r96
  Const        r98, 30
L13:
  LessEq       r99, r97, r98
L12:
  Move         r100, r95
L8:
  JumpIfFalse  r100, L17
  Move         r100, r99
  // (p.p_container in ["LG CASE", "LG BOX", "LG PACK", "LG PKG"]) &&
  Move         r91, r100
  // (l.l_quantity >= 20 && l.l_quantity <= 30) &&
  JumpIfFalse  r91, L18
  // (p.p_size >= 1 && p.p_size <= 15)
  Const        r102, "p_size"
  Index        r103, r15, r102
  Const        r104, 1
  LessEq       r105, r104, r103
  Const        r106, "p_size"
  Index        r107, r15, r106
  Const        r108, 15
  LessEq       r109, r107, r108
  JumpIfFalse  r105, L19
L15:
  Move         r110, r109
  // ) && l.l_shipmode in ["AIR", "AIR REG"]
  Const        r111, "l_shipmode"
  Index        r112, r11, r111
  Const        r113, ["AIR", "AIR REG"]
  In           r114, r112, r113
  // && l.l_shipinstruct == "DELIVER IN PERSON"
  Const        r115, "l_shipinstruct"
  Index        r116, r11, r115
  Const        r117, "DELIVER IN PERSON"
  Equal        r118, r116, r117
  // ) && l.l_shipmode in ["AIR", "AIR REG"]
  JumpIfFalse  r110, L20
  // && l.l_shipinstruct == "DELIVER IN PERSON"
  JumpIfFalse  r114, L21
  // where (
  JumpIfFalse  r118, L2
  // select sum(l.l_extendedprice * (1 - l.l_discount))
  Const        r121, "l_extendedprice"
L17:
  Index        r122, r11, r121
L16:
  Const        r123, 1
  Const        r124, "l_discount"
  Index        r125, r11, r124
  Sub          r126, r123, r125
  Mul          r127, r122, r126
  // from l in lineitem
  Append       r128, r4, r127
  // join p in part on p.p_partkey == l.l_partkey
  Const        r129, 1
  Add          r130, r13, r129
  Jump         L22
  // from l in lineitem
  Const        r131, 1
  Add          r132, r9, r131
  Jump         L23
  // select sum(l.l_extendedprice * (1 - l.l_discount))
  Sum          r133, r128
L19:
  // print(result)
  Print        r133
L18:
  // expect result == 2800.0
  Const        r135, 2800
L14:
  EqualFloat   r136, r133, r135
  Expect       r136
  Return       r0
