func main (regs=137)
  // let part = [
  Const        r0, [{"p_brand": "Brand#12", "p_container": "SM BOX", "p_partkey": 1, "p_size": 3}, {"p_brand": "Brand#23", "p_container": "MED BOX", "p_partkey": 2, "p_size": 5}, {"p_brand": "Brand#34", "p_container": "LG BOX", "p_partkey": 3, "p_size": 15}]
  Move         r1, r0
  // let lineitem = [
  Const        r2, [{"l_discount": 0.1, "l_extendedprice": 1000, "l_partkey": 1, "l_quantity": 5, "l_shipinstruct": "DELIVER IN PERSON", "l_shipmode": "AIR"}, {"l_discount": 0.05, "l_extendedprice": 2000, "l_partkey": 2, "l_quantity": 15, "l_shipinstruct": "DELIVER IN PERSON", "l_shipmode": "AIR REG"}, {"l_discount": 0, "l_extendedprice": 1500, "l_partkey": 3, "l_quantity": 35, "l_shipinstruct": "DELIVER IN PERSON", "l_shipmode": "AIR"}]
  Move         r3, r2
  // from l in lineitem
  Const        r4, []
  IterPrep     r5, r3
  Len          r6, r5
  // join p in part on p.p_partkey == l.l_partkey
  IterPrep     r7, r1
  Len          r8, r7
  // from l in lineitem
  Const        r9, 0
L23:
  Less         r10, r9, r6
  JumpIfFalse  r10, L0
  Index        r11, r5, r9
  Move         r12, r11
  // join p in part on p.p_partkey == l.l_partkey
  Const        r13, 0
L22:
  Less         r14, r13, r8
  JumpIfFalse  r14, L1
  Index        r15, r7, r13
  Move         r16, r15
  Const        r17, "p_partkey"
  Index        r18, r16, r17
  Const        r19, "l_partkey"
  Index        r20, r12, r19
  Equal        r21, r18, r20
  JumpIfFalse  r21, L2
  // (p.p_brand == "Brand#12") &&
  Const        r22, "p_brand"
  Index        r23, r16, r22
  Const        r24, "Brand#12"
  Equal        r25, r23, r24
  Move         r26, r25
  JumpIfFalse  r26, L3
  // (p.p_container in ["SM CASE", "SM BOX", "SM PACK", "SM PKG"]) &&
  Const        r27, "p_container"
  Index        r28, r16, r27
  Const        r29, ["SM CASE", "SM BOX", "SM PACK", "SM PKG"]
  In           r30, r28, r29
  // (p.p_brand == "Brand#12") &&
  Move         r26, r30
L3:
  // (p.p_container in ["SM CASE", "SM BOX", "SM PACK", "SM PKG"]) &&
  Move         r31, r26
  JumpIfFalse  r31, L4
  // (l.l_quantity >= 1 && l.l_quantity <= 11) &&
  Const        r32, "l_quantity"
  Index        r33, r12, r32
  Const        r34, 1
  LessEq       r35, r34, r33
  Move         r36, r35
  JumpIfFalse  r36, L5
  Const        r37, "l_quantity"
  Index        r38, r12, r37
  Move         r36, r38
L5:
  Const        r39, 11
  LessEq       r40, r36, r39
  // (p.p_container in ["SM CASE", "SM BOX", "SM PACK", "SM PKG"]) &&
  Move         r31, r40
L4:
  // (l.l_quantity >= 1 && l.l_quantity <= 11) &&
  Move         r41, r31
  JumpIfFalse  r41, L6
  // (p.p_size >= 1 && p.p_size <= 5)
  Const        r42, "p_size"
  Index        r43, r16, r42
  Const        r44, 1
  LessEq       r45, r44, r43
  Move         r46, r45
  JumpIfFalse  r46, L7
  Const        r47, "p_size"
  Index        r48, r16, r47
  Move         r46, r48
L7:
  Const        r49, 5
  LessEq       r50, r46, r49
  // (l.l_quantity >= 1 && l.l_quantity <= 11) &&
  Move         r41, r50
L6:
  // ) || (
  Move         r51, r41
  JumpIfTrue   r51, L8
  // (p.p_brand == "Brand#23") &&
  Const        r52, "p_brand"
  Index        r53, r16, r52
  Const        r54, "Brand#23"
  Equal        r55, r53, r54
  Move         r56, r55
  JumpIfFalse  r56, L9
  // (p.p_container in ["MED BAG", "MED BOX", "MED PKG", "MED PACK"]) &&
  Const        r57, "p_container"
  Index        r58, r16, r57
  Const        r59, ["MED BAG", "MED BOX", "MED PKG", "MED PACK"]
  In           r60, r58, r59
  // (p.p_brand == "Brand#23") &&
  Move         r56, r60
L9:
  // (p.p_container in ["MED BAG", "MED BOX", "MED PKG", "MED PACK"]) &&
  Move         r61, r56
  JumpIfFalse  r61, L10
  // (l.l_quantity >= 10 && l.l_quantity <= 20) &&
  Const        r62, "l_quantity"
  Index        r63, r12, r62
  Const        r64, 10
  LessEq       r65, r64, r63
  Move         r66, r65
  JumpIfFalse  r66, L11
  Const        r67, "l_quantity"
  Index        r68, r12, r67
  Move         r66, r68
L11:
  Const        r69, 20
  LessEq       r70, r66, r69
  // (p.p_container in ["MED BAG", "MED BOX", "MED PKG", "MED PACK"]) &&
  Move         r61, r70
L10:
  // (l.l_quantity >= 10 && l.l_quantity <= 20) &&
  Move         r71, r61
  JumpIfFalse  r71, L12
  // (p.p_size >= 1 && p.p_size <= 10)
  Const        r72, "p_size"
  Index        r73, r16, r72
  Const        r74, 1
  LessEq       r75, r74, r73
  Move         r76, r75
  JumpIfFalse  r76, L13
  Const        r77, "p_size"
  Index        r78, r16, r77
  Move         r76, r78
L13:
  Const        r79, 10
  LessEq       r80, r76, r79
  // (l.l_quantity >= 10 && l.l_quantity <= 20) &&
  Move         r71, r80
L12:
  // ) || (
  Move         r51, r71
L8:
  // ) || (
  Move         r81, r51
  JumpIfTrue   r81, L14
  // (p.p_brand == "Brand#34") &&
  Const        r82, "p_brand"
  Index        r83, r16, r82
  Const        r84, "Brand#34"
  Equal        r85, r83, r84
  Move         r86, r85
  JumpIfFalse  r86, L15
  // (p.p_container in ["LG CASE", "LG BOX", "LG PACK", "LG PKG"]) &&
  Const        r87, "p_container"
  Index        r88, r16, r87
  Const        r89, ["LG CASE", "LG BOX", "LG PACK", "LG PKG"]
  In           r90, r88, r89
  // (p.p_brand == "Brand#34") &&
  Move         r86, r90
L15:
  // (p.p_container in ["LG CASE", "LG BOX", "LG PACK", "LG PKG"]) &&
  Move         r91, r86
  JumpIfFalse  r91, L16
  // (l.l_quantity >= 20 && l.l_quantity <= 30) &&
  Const        r92, "l_quantity"
  Index        r93, r12, r92
  Const        r94, 20
  LessEq       r95, r94, r93
  Move         r96, r95
  JumpIfFalse  r96, L17
  Const        r97, "l_quantity"
  Index        r98, r12, r97
  Move         r96, r98
L17:
  Const        r99, 30
  LessEq       r100, r96, r99
  // (p.p_container in ["LG CASE", "LG BOX", "LG PACK", "LG PKG"]) &&
  Move         r91, r100
L16:
  // (l.l_quantity >= 20 && l.l_quantity <= 30) &&
  Move         r101, r91
  JumpIfFalse  r101, L18
  // (p.p_size >= 1 && p.p_size <= 15)
  Const        r102, "p_size"
  Index        r103, r16, r102
  Const        r104, 1
  LessEq       r105, r104, r103
  Move         r106, r105
  JumpIfFalse  r106, L19
  Const        r107, "p_size"
  Index        r108, r16, r107
  Move         r106, r108
L19:
  Const        r109, 15
  LessEq       r110, r106, r109
  // (l.l_quantity >= 20 && l.l_quantity <= 30) &&
  Move         r101, r110
L18:
  // ) || (
  Move         r81, r101
L14:
  // ) && l.l_shipmode in ["AIR", "AIR REG"]
  Move         r111, r81
  JumpIfFalse  r111, L20
  Const        r112, "l_shipmode"
  Index        r113, r12, r112
  Move         r111, r113
L20:
  Const        r114, ["AIR", "AIR REG"]
  In           r115, r111, r114
  // && l.l_shipinstruct == "DELIVER IN PERSON"
  Move         r116, r115
  JumpIfFalse  r116, L21
  Const        r117, "l_shipinstruct"
  Index        r118, r12, r117
  Move         r116, r118
L21:
  Const        r119, "DELIVER IN PERSON"
  Equal        r120, r116, r119
  // where (
  JumpIfFalse  r120, L2
  // select sum(l.l_extendedprice * (1 - l.l_discount))
  Const        r121, "l_extendedprice"
  Index        r122, r12, r121
  Const        r123, 1
  Const        r124, "l_discount"
  Index        r125, r12, r124
  Sub          r126, r123, r125
  Mul          r127, r122, r126
  // from l in lineitem
  Append       r128, r4, r127
  Move         r4, r128
L2:
  // join p in part on p.p_partkey == l.l_partkey
  Const        r129, 1
  Add          r130, r13, r129
  Move         r13, r130
  Jump         L22
L1:
  // from l in lineitem
  Const        r131, 1
  Add          r132, r9, r131
  Move         r9, r132
  Jump         L23
L0:
  // select sum(l.l_extendedprice * (1 - l.l_discount))
  Sum          r133, r4
  // let result =
  Move         r134, r133
  // print(result)
  Print        r134
  // expect result == 2800.0
  Const        r135, 2800
  EqualFloat   r136, r134, r135
  Expect       r136
  Return       r0

