func main (regs=102)
  // let part = [
  Const        r0, [{"p_brand": "Brand#12", "p_container": "SM BOX", "p_partkey": 1, "p_size": 3}, {"p_brand": "Brand#23", "p_container": "MED BOX", "p_partkey": 2, "p_size": 5}, {"p_brand": "Brand#34", "p_container": "LG BOX", "p_partkey": 3, "p_size": 15}]
  // let lineitem = [
  Const        r1, [{"l_discount": 0.1, "l_extendedprice": 1000.0, "l_partkey": 1, "l_quantity": 5, "l_shipinstruct": "DELIVER IN PERSON", "l_shipmode": "AIR"}, {"l_discount": 0.05, "l_extendedprice": 2000.0, "l_partkey": 2, "l_quantity": 15, "l_shipinstruct": "DELIVER IN PERSON", "l_shipmode": "AIR REG"}, {"l_discount": 0.0, "l_extendedprice": 1500.0, "l_partkey": 3, "l_quantity": 35, "l_shipinstruct": "DELIVER IN PERSON", "l_shipmode": "AIR"}]
  // from l in lineitem
  Const        r2, []
  IterPrep     r3, r1
  Len          r4, r3
  // join p in part on p.p_partkey == l.l_partkey
  IterPrep     r5, r0
  Len          r6, r5
  Const        r7, "p_partkey"
  Const        r8, "l_partkey"
  // (p.p_brand == "Brand#12") &&
  Const        r9, "p_brand"
  // (p.p_container in ["SM CASE", "SM BOX", "SM PACK", "SM PKG"]) &&
  Const        r10, "p_container"
  // (l.l_quantity >= 1 && l.l_quantity <= 11) &&
  Const        r11, "l_quantity"
  Const        r11, "l_quantity"
  // (p.p_size >= 1 && p.p_size <= 5)
  Const        r12, "p_size"
  Const        r12, "p_size"
  // (p.p_brand == "Brand#23") &&
  Const        r9, "p_brand"
  // (p.p_container in ["MED BAG", "MED BOX", "MED PKG", "MED PACK"]) &&
  Const        r10, "p_container"
  // (l.l_quantity >= 10 && l.l_quantity <= 20) &&
  Const        r11, "l_quantity"
  Const        r11, "l_quantity"
  // (p.p_size >= 1 && p.p_size <= 10)
  Const        r12, "p_size"
  Const        r12, "p_size"
  // (p.p_brand == "Brand#34") &&
  Const        r9, "p_brand"
  // (p.p_container in ["LG CASE", "LG BOX", "LG PACK", "LG PKG"]) &&
  Const        r10, "p_container"
  // (l.l_quantity >= 20 && l.l_quantity <= 30) &&
  Const        r11, "l_quantity"
  Const        r11, "l_quantity"
  // (p.p_size >= 1 && p.p_size <= 15)
  Const        r12, "p_size"
  Const        r12, "p_size"
  // ) && l.l_shipmode in ["AIR", "AIR REG"]
  Const        r13, "l_shipmode"
  // && l.l_shipinstruct == "DELIVER IN PERSON"
  Const        r14, "l_shipinstruct"
  // select l.l_extendedprice * (1 - l.l_discount)
  Const        r15, "l_extendedprice"
  Const        r16, "l_discount"
  // from l in lineitem
  Const        r17, 0
L15:
  LessInt      r18, r17, r4
  JumpIfFalse  r18, L0
  Index        r19, r3, r17
  Move         r20, r19
  // join p in part on p.p_partkey == l.l_partkey
  Const        r21, 0
L14:
  LessInt      r22, r21, r6
  JumpIfFalse  r22, L1
  Index        r23, r5, r21
  Move         r24, r23
  Const        r7, "p_partkey"
  Index        r25, r24, r7
  Const        r8, "l_partkey"
  Index        r26, r20, r8
  Equal        r27, r25, r26
  JumpIfFalse  r27, L2
  // (p.p_brand == "Brand#12") &&
  Const        r9, "p_brand"
  Index        r28, r24, r9
  Const        r29, "Brand#12"
  Equal        r30, r28, r29
  Move         r31, r30
  JumpIfFalse  r31, L3
  // (p.p_container in ["SM CASE", "SM BOX", "SM PACK", "SM PKG"]) &&
  Const        r10, "p_container"
  Index        r32, r24, r10
  Const        r33, ["SM CASE", "SM BOX", "SM PACK", "SM PKG"]
  In           r34, r32, r33
  // (p.p_brand == "Brand#12") &&
  Move         r31, r34
  // (p.p_container in ["SM CASE", "SM BOX", "SM PACK", "SM PKG"]) &&
  JumpIfFalse  r31, L3
  // (l.l_quantity >= 1 && l.l_quantity <= 11) &&
  Const        r11, "l_quantity"
  Index        r35, r20, r11
  Const        r36, 1
  LessEq       r37, r36, r35
  Const        r11, "l_quantity"
  Index        r38, r20, r11
  Const        r39, 11
  LessEq       r40, r38, r39
  Move         r41, r37
  JumpIfFalse  r41, L4
  Move         r41, r40
L4:
  // (p.p_container in ["SM CASE", "SM BOX", "SM PACK", "SM PKG"]) &&
  Move         r31, r41
  // (l.l_quantity >= 1 && l.l_quantity <= 11) &&
  JumpIfFalse  r31, L3
  // (p.p_size >= 1 && p.p_size <= 5)
  Const        r12, "p_size"
  Index        r42, r24, r12
  Const        r36, 1
  LessEq       r43, r36, r42
  Const        r12, "p_size"
  Index        r44, r24, r12
  Const        r45, 5
  LessEq       r46, r44, r45
  Move         r47, r43
  JumpIfFalse  r47, L5
  Move         r47, r46
L5:
  // (l.l_quantity >= 1 && l.l_quantity <= 11) &&
  Move         r31, r47
L3:
  // ) || (
  Move         r48, r31
  JumpIfTrue   r48, L6
  // (p.p_brand == "Brand#23") &&
  Const        r9, "p_brand"
  Index        r49, r24, r9
  Const        r50, "Brand#23"
  Equal        r51, r49, r50
  Move         r52, r51
  JumpIfFalse  r52, L7
  // (p.p_container in ["MED BAG", "MED BOX", "MED PKG", "MED PACK"]) &&
  Const        r10, "p_container"
  Index        r53, r24, r10
  Const        r54, ["MED BAG", "MED BOX", "MED PKG", "MED PACK"]
  In           r55, r53, r54
  // (p.p_brand == "Brand#23") &&
  Move         r52, r55
  // (p.p_container in ["MED BAG", "MED BOX", "MED PKG", "MED PACK"]) &&
  JumpIfFalse  r52, L7
  // (l.l_quantity >= 10 && l.l_quantity <= 20) &&
  Const        r11, "l_quantity"
  Index        r56, r20, r11
  Const        r57, 10
  LessEq       r58, r57, r56
  Const        r11, "l_quantity"
  Index        r59, r20, r11
  Const        r60, 20
  LessEq       r61, r59, r60
  Move         r62, r58
  JumpIfFalse  r62, L8
  Move         r62, r61
L8:
  // (p.p_container in ["MED BAG", "MED BOX", "MED PKG", "MED PACK"]) &&
  Move         r52, r62
  // (l.l_quantity >= 10 && l.l_quantity <= 20) &&
  JumpIfFalse  r52, L7
  // (p.p_size >= 1 && p.p_size <= 10)
  Const        r12, "p_size"
  Index        r63, r24, r12
  Const        r36, 1
  LessEq       r64, r36, r63
  Const        r12, "p_size"
  Index        r65, r24, r12
  Const        r57, 10
  LessEq       r66, r65, r57
  Move         r67, r64
  JumpIfFalse  r67, L9
  Move         r67, r66
L9:
  // (l.l_quantity >= 10 && l.l_quantity <= 20) &&
  Move         r52, r67
L7:
  // ) || (
  Move         r48, r52
  // ) || (
  JumpIfTrue   r48, L6
  // (p.p_brand == "Brand#34") &&
  Const        r9, "p_brand"
  Index        r68, r24, r9
  Const        r69, "Brand#34"
  Equal        r70, r68, r69
  Move         r71, r70
  JumpIfFalse  r71, L10
  // (p.p_container in ["LG CASE", "LG BOX", "LG PACK", "LG PKG"]) &&
  Const        r10, "p_container"
  Index        r72, r24, r10
  Const        r73, ["LG CASE", "LG BOX", "LG PACK", "LG PKG"]
  In           r74, r72, r73
  // (p.p_brand == "Brand#34") &&
  Move         r71, r74
  // (p.p_container in ["LG CASE", "LG BOX", "LG PACK", "LG PKG"]) &&
  JumpIfFalse  r71, L10
  // (l.l_quantity >= 20 && l.l_quantity <= 30) &&
  Const        r11, "l_quantity"
  Index        r75, r20, r11
  Const        r60, 20
  LessEq       r76, r60, r75
  Const        r11, "l_quantity"
  Index        r77, r20, r11
  Const        r78, 30
  LessEq       r79, r77, r78
  Move         r80, r76
  JumpIfFalse  r80, L11
  Move         r80, r79
L11:
  // (p.p_container in ["LG CASE", "LG BOX", "LG PACK", "LG PKG"]) &&
  Move         r71, r80
  // (l.l_quantity >= 20 && l.l_quantity <= 30) &&
  JumpIfFalse  r71, L10
  // (p.p_size >= 1 && p.p_size <= 15)
  Const        r12, "p_size"
  Index        r81, r24, r12
  Const        r36, 1
  LessEq       r82, r36, r81
  Const        r12, "p_size"
  Index        r83, r24, r12
  Const        r84, 15
  LessEq       r85, r83, r84
  Move         r86, r82
  JumpIfFalse  r86, L12
  Move         r86, r85
L12:
  // (l.l_quantity >= 20 && l.l_quantity <= 30) &&
  Move         r71, r86
L10:
  // ) || (
  Move         r48, r71
L6:
  // ) && l.l_shipmode in ["AIR", "AIR REG"]
  Const        r13, "l_shipmode"
  Index        r87, r20, r13
  Const        r88, ["AIR", "AIR REG"]
  In           r89, r87, r88
  // && l.l_shipinstruct == "DELIVER IN PERSON"
  Const        r14, "l_shipinstruct"
  Index        r90, r20, r14
  Const        r91, "DELIVER IN PERSON"
  Equal        r92, r90, r91
  // ) && l.l_shipmode in ["AIR", "AIR REG"]
  Move         r93, r48
  JumpIfFalse  r93, L13
  Move         r93, r89
  // && l.l_shipinstruct == "DELIVER IN PERSON"
  JumpIfFalse  r93, L13
  Move         r93, r92
L13:
  // where (
  JumpIfFalse  r93, L2
  // select l.l_extendedprice * (1 - l.l_discount)
  Const        r15, "l_extendedprice"
  Index        r94, r20, r15
  Const        r36, 1
  Const        r16, "l_discount"
  Index        r95, r20, r16
  Sub          r96, r36, r95
  Mul          r97, r94, r96
  // from l in lineitem
  Append       r98, r2, r97
  Move         r2, r98
L2:
  // join p in part on p.p_partkey == l.l_partkey
  Const        r36, 1
  AddInt       r21, r21, r36
  Jump         L14
L1:
  // from l in lineitem
  Const        r36, 1
  AddInt       r17, r17, r36
  Jump         L15
L0:
  // let result = sum(revenues)
  Sum          r99, r2
  // json(result)
  JSON         r99
  // expect result == 2800.0
  Const        r100, 2800.0
  EqualFloat   r101, r99, r100
  Expect       r101
  Return       r0
