func main (regs=110)
  // let part = [
  Const        r0, [{"p_brand": "Brand#12", "p_container": "SM BOX", "p_partkey": 1, "p_size": 3}, {"p_brand": "Brand#23", "p_container": "MED BOX", "p_partkey": 2, "p_size": 5}, {"p_brand": "Brand#34", "p_container": "LG BOX", "p_partkey": 3, "p_size": 15}]
  // let lineitem = [
  Const        r1, [{"l_discount": 0.1, "l_extendedprice": 1000, "l_partkey": 1, "l_quantity": 5, "l_shipinstruct": "DELIVER IN PERSON", "l_shipmode": "AIR"}, {"l_discount": 0.05, "l_extendedprice": 2000, "l_partkey": 2, "l_quantity": 15, "l_shipinstruct": "DELIVER IN PERSON", "l_shipmode": "AIR REG"}, {"l_discount": 0, "l_extendedprice": 1500, "l_partkey": 3, "l_quantity": 35, "l_shipinstruct": "DELIVER IN PERSON", "l_shipmode": "AIR"}]
  // from l in lineitem
  Const        r2, []
  IterPrep     r3, r1
  Len          r4, r3
  // join p in part on p.p_partkey == l.l_partkey
  IterPrep     r5, r0
  Len          r6, r5
  Const        r7, "p_partkey"
  Const        r8, "l_partkey"
  // (p.p_brand == "Brand#12") &&
  Const        r9, "p_brand"
  // (p.p_container in ["SM CASE", "SM BOX", "SM PACK", "SM PKG"]) &&
  Const        r10, "p_container"
  // (l.l_quantity >= 1 && l.l_quantity <= 11) &&
  Const        r11, "l_quantity"
  // (p.p_size >= 1 && p.p_size <= 5)
  Const        r12, "p_size"
  // ) && l.l_shipmode in ["AIR", "AIR REG"]
  Const        r13, "l_shipmode"
  // && l.l_shipinstruct == "DELIVER IN PERSON"
  Const        r14, "l_shipinstruct"
  // select sum(l.l_extendedprice * (1 - l.l_discount))
  Const        r15, "l_extendedprice"
  Const        r16, "l_discount"
  // from l in lineitem
  Const        r17, 0
L4:
  LessInt      r18, r17, r4
  JumpIfFalse  r18, L0
  Index        r20, r3, r17
  // join p in part on p.p_partkey == l.l_partkey
  Const        r21, 0
L3:
  LessInt      r22, r21, r6
  JumpIfFalse  r22, L1
  Index        r24, r5, r21
  Index        r25, r24, r7
  Index        r26, r20, r8
  Equal        r27, r25, r26
  JumpIfFalse  r27, L2
  // (p.p_brand == "Brand#12") &&
  Index        r28, r24, r9
  Const        r29, "Brand#12"
  Equal        r30, r28, r29
  // (p.p_container in ["SM CASE", "SM BOX", "SM PACK", "SM PKG"]) &&
  Index        r31, r24, r10
  Const        r32, ["SM CASE", "SM BOX", "SM PACK", "SM PKG"]
  In           r33, r31, r32
  // (p.p_brand == "Brand#12") &&
  BoolAnd      34,30,33,0
  // (l.l_quantity >= 1 && l.l_quantity <= 11) &&
  Index        r35, r20, r11
  Const        r36, 1
  LessEq       r37, r36, r35
  Index        r38, r20, r11
  Const        r39, 11
  LessEq       r40, r38, r39
  BoolAnd      41,37,40,0
  // (p.p_container in ["SM CASE", "SM BOX", "SM PACK", "SM PKG"]) &&
  BoolAnd      42,34,41,0
  // (p.p_size >= 1 && p.p_size <= 5)
  Index        r43, r24, r12
  LessEq       r44, r36, r43
  Index        r45, r24, r12
  Const        r46, 5
  LessEq       r47, r45, r46
  BoolAnd      48,44,47,0
  // (l.l_quantity >= 1 && l.l_quantity <= 11) &&
  BoolAnd      49,42,48,0
  // (p.p_brand == "Brand#23") &&
  Index        r50, r24, r9
  Const        r51, "Brand#23"
  Equal        r52, r50, r51
  // (p.p_container in ["MED BAG", "MED BOX", "MED PKG", "MED PACK"]) &&
  Index        r53, r24, r10
  Const        r54, ["MED BAG", "MED BOX", "MED PKG", "MED PACK"]
  In           r55, r53, r54
  // (p.p_brand == "Brand#23") &&
  BoolAnd      56,52,55,0
  // (l.l_quantity >= 10 && l.l_quantity <= 20) &&
  Index        r57, r20, r11
  Const        r58, 10
  LessEq       r59, r58, r57
  Index        r60, r20, r11
  Const        r61, 20
  LessEq       r62, r60, r61
  BoolAnd      63,59,62,0
  // (p.p_container in ["MED BAG", "MED BOX", "MED PKG", "MED PACK"]) &&
  BoolAnd      64,56,63,0
  // (p.p_size >= 1 && p.p_size <= 10)
  Index        r65, r24, r12
  LessEq       r66, r36, r65
  Index        r67, r24, r12
  LessEq       r68, r67, r58
  BoolAnd      69,66,68,0
  // (l.l_quantity >= 10 && l.l_quantity <= 20) &&
  BoolAnd      70,64,69,0
  // ) || (
  BoolOr       71,49,70,0
  // (p.p_brand == "Brand#34") &&
  Index        r72, r24, r9
  Const        r73, "Brand#34"
  Equal        r74, r72, r73
  // (p.p_container in ["LG CASE", "LG BOX", "LG PACK", "LG PKG"]) &&
  Index        r75, r24, r10
  Const        r76, ["LG CASE", "LG BOX", "LG PACK", "LG PKG"]
  In           r77, r75, r76
  // (p.p_brand == "Brand#34") &&
  BoolAnd      78,74,77,0
  // (l.l_quantity >= 20 && l.l_quantity <= 30) &&
  Index        r79, r20, r11
  LessEq       r80, r61, r79
  Index        r81, r20, r11
  Const        r82, 30
  LessEq       r83, r81, r82
  BoolAnd      84,80,83,0
  // (p.p_container in ["LG CASE", "LG BOX", "LG PACK", "LG PKG"]) &&
  BoolAnd      85,78,84,0
  // (p.p_size >= 1 && p.p_size <= 15)
  Index        r86, r24, r12
  LessEq       r87, r36, r86
  Index        r88, r24, r12
  Const        r89, 15
  LessEq       r90, r88, r89
  BoolAnd      91,87,90,0
  // (l.l_quantity >= 20 && l.l_quantity <= 30) &&
  BoolAnd      92,85,91,0
  // ) || (
  BoolOr       93,71,92,0
  // ) && l.l_shipmode in ["AIR", "AIR REG"]
  Index        r94, r20, r13
  Const        r95, ["AIR", "AIR REG"]
  In           r96, r94, r95
  // && l.l_shipinstruct == "DELIVER IN PERSON"
  Index        r97, r20, r14
  Const        r98, "DELIVER IN PERSON"
  Equal        r99, r97, r98
  // ) && l.l_shipmode in ["AIR", "AIR REG"]
  BoolAnd      100,93,96,0
  // && l.l_shipinstruct == "DELIVER IN PERSON"
  BoolAnd      101,100,99,0
  // where (
  JumpIfFalse  r101, L2
  // select sum(l.l_extendedprice * (1 - l.l_discount))
  Index        r102, r20, r15
  Index        r103, r20, r16
  Sub          r104, r36, r103
  Mul          r105, r102, r104
  // from l in lineitem
  Append       r2, r2, r105
L2:
  // join p in part on p.p_partkey == l.l_partkey
  AddInt       r21, r21, r36
  Jump         L3
L1:
  // from l in lineitem
  AddInt       r17, r17, r36
  Jump         L4
L0:
  // select sum(l.l_extendedprice * (1 - l.l_discount))
  Sum          r107, r2
  // print(result)
  Print        r107
  // expect result == 2800.0
  Const        r108, 2800
  EqualFloat   r109, r107, r108
  Expect       r109
  Return       r0
