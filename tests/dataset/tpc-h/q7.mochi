let nation = [
  { n_nationkey: 1, n_name: "FRANCE" },
  { n_nationkey: 2, n_name: "GERMANY" }
]

let supplier = [
  { s_suppkey: 100, s_nationkey: 1 }
]

let customer = [
  { c_custkey: 200, c_nationkey: 2 }
]

let orders = [
  { o_orderkey: 1000, o_custkey: 200 }
]

let lineitem = [
  {
    l_orderkey: 1000,
    l_suppkey: 100,
    l_extendedprice: 1000.0,
    l_discount: 0.10,
    l_shipdate: "1995-06-15"
  },
  {
    l_orderkey: 1000,
    l_suppkey: 100,
    l_extendedprice: 800.0,
    l_discount: 0.05,
    l_shipdate: "1997-01-01" // out of range
  }
]

let start_date = "1995-01-01"
let end_date = "1996-12-31"

let nation1 = "FRANCE"
let nation2 = "GERMANY"

let result =
  from l in lineitem
  where l.l_shipdate >= start_date and l.l_shipdate <= end_date
  join o in orders on o.o_orderkey == l.l_orderkey
  join c in customer on c.c_custkey == o.o_custkey
  join s in supplier on s.s_suppkey == l.l_suppkey
  join n1 in nation on n1.n_nationkey == s.s_nationkey
  join n2 in nation on n2.n_nationkey == c.c_nationkey
  where
    (n1.n_name == nation1 and n2.n_name == nation2) or
    (n1.n_name == nation2 and n2.n_name == nation1)
  group by {
    supp_nation: n1.n_name,
    cust_nation: n2.n_name,
    l_year: substring(l.l_shipdate, 0, 4)
  }
  select {
    supp_nation,
    cust_nation,
    l_year,
    revenue: sum(l.l_extendedprice * (1 - l.l_discount))
  }
  order by { supp_nation, cust_nation, l_year }

print result

test "Q7 computes revenue between FRANCE and GERMANY by year" {
  expect result == [
    {
      supp_nation: "FRANCE",
      cust_nation: "GERMANY",
      l_year: "1995",
      revenue: 900.0
    }
  ]
}
