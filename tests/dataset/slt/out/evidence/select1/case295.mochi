/*
# line: 3751
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 104,
    b: 100,
    c: 102,
    d: 101,
    e: 103,
  },
  t1Row {
    a: 107,
    b: 105,
    c: 106,
    d: 108,
    e: 109,
  },
  t1Row {
    a: 111,
    b: 112,
    c: 113,
    d: 114,
    e: 110,
  },
  t1Row {
    a: 115,
    b: 118,
    c: 119,
    d: 116,
    e: 117,
  },
  t1Row {
    a: 121,
    b: 124,
    c: 123,
    d: 122,
    e: 120,
  },
  t1Row {
    a: 127,
    b: 129,
    c: 125,
    d: 128,
    e: 126,
  },
  t1Row {
    a: 131,
    b: 130,
    c: 134,
    d: 133,
    e: 132,
  },
  t1Row {
    a: 138,
    b: 139,
    c: 137,
    d: 136,
    e: 135,
  },
  t1Row {
    a: 142,
    b: 143,
    c: 141,
    d: 140,
    e: 144,
  },
  t1Row {
    a: 149,
    b: 145,
    c: 147,
    d: 148,
    e: 146,
  },
  t1Row {
    a: 153,
    b: 151,
    c: 150,
    d: 154,
    e: 152,
  },
  t1Row {
    a: 159,
    b: 158,
    c: 155,
    d: 156,
    e: 157,
  },
  t1Row {
    a: 163,
    b: 160,
    c: 161,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 168,
    b: 167,
    c: 166,
    d: 169,
    e: 165,
  },
  t1Row {
    a: 174,
    b: 170,
    c: 172,
    d: 171,
    e: 173,
  },
  t1Row {
    a: 179,
    b: 175,
    c: 176,
    d: 178,
    e: 177,
  },
  t1Row {
    a: 182,
    b: 181,
    c: 184,
    d: 183,
    e: 180,
  },
  t1Row {
    a: 188,
    b: 186,
    c: 187,
    d: 185,
    e: 189,
  },
  t1Row {
    a: 191,
    b: 194,
    c: 193,
    d: 190,
    e: 192,
  },
  t1Row {
    a: 199,
    b: 198,
    c: 195,
    d: 196,
    e: 197,
  },
  t1Row {
    a: 201,
    b: 200,
    c: 202,
    d: 203,
    e: 204,
  },
  t1Row {
    a: 205,
    b: 206,
    c: 208,
    d: 207,
    e: 209,
  },
  t1Row {
    a: 213,
    b: 211,
    c: 214,
    d: 212,
    e: 210,
  },
  t1Row {
    a: 216,
    b: 218,
    c: 215,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 220,
    b: 223,
    c: 224,
    d: 222,
    e: 221,
  },
  t1Row {
    a: 229,
    b: 228,
    c: 225,
    d: 226,
    e: 227,
  },
  t1Row {
    a: 234,
    b: 232,
    c: 231,
    d: 233,
    e: 230,
  },
  t1Row {
    a: 239,
    b: 236,
    c: 235,
    d: 238,
    e: 237,
  },
  t1Row {
    a: 243,
    b: 240,
    c: 244,
    d: 241,
    e: 242,
  },
  t1Row {
    a: 245,
    b: 249,
    c: 247,
    d: 248,
    e: 246,
  },
]

/* SELECT c-d, a-b, b, b-c, CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END, c, a+b*2 FROM t1 ORDER BY 1,5,4,3,2,6,7 */
let result = from row in t1
  order by [row.c - row.d, (if row.c > avg(from x in t1
  select x.c) { row.a * 2 } else { row.b * 10 }), row.b - row.c, row.b, row.a - row.b, row.c, row.a + row.b * 2]
  select [row.c - row.d, row.a - row.b, row.b, row.b - row.c, (if row.c > avg(from x in t1
  select x.c) { row.a * 2 } else { row.b * 10 }), row.c, row.a + row.b * 2]
test "case295" {
  var flatResult = []
  for row in result {
    for x in row {
      flatResult = append(flatResult, x)
    }
  }
  for x in flatResult {
    print(x)
  }
  expect flatResult == [-4, 2, 151, 1, 1510, 150, 455, -3, 3, 236, 1, 478, 235, 711, -3, -2, 129, 4, 1290, 125, 385, -3, 3, 160, -1, 1600, 161, 483, -3, 1, 167, 1, 1670, 166, 502, -2, 4, 175, -1, 358, 176, 529, -2, -2, 218, 3, 432, 215, 652, -2, 2, 232, 1, 468, 231, 698, -2, 2, 105, -1, 1050, 106, 317, -1, 1, 198, 3, 398, 195, 595, -1, 1, 200, -2, 402, 202, 601, -1, 1, 228, 3, 458, 225, 685, -1, -4, 249, 2, 490, 247, 743, -1, -1, 112, -1, 1120, 113, 335, -1, 4, 145, -2, 1450, 147, 439, -1, 1, 158, 3, 1580, 155, 475, 1, 1, 181, -3, 364, 184, 544, 1, -1, 206, -2, 410, 208, 617, 1, 4, 100, -2, 1000, 102, 304, 1, -3, 124, 1, 1240, 123, 369, 1, 1, 130, -4, 1300, 134, 391, 1, -1, 139, 2, 1390, 137, 416, 1, -1, 143, 2, 1430, 141, 428, 1, 4, 170, -2, 1700, 172, 514, 2, 2, 186, -1, 376, 187, 560, 2, 2, 211, -3, 426, 214, 635, 2, -3, 223, -1, 440, 224, 666, 3, -3, 194, 1, 382, 193, 579, 3, 3, 240, -4, 486, 244, 723, 3, -3, 118, -1, 1180, 119, 351]
}
