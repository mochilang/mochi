/*
# line: 8272
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 104,
    b: 100,
    c: 102,
    d: 101,
    e: 103,
  },
  t1Row {
    a: 107,
    b: 105,
    c: 106,
    d: 108,
    e: 109,
  },
  t1Row {
    a: 111,
    b: 112,
    c: 113,
    d: 114,
    e: 110,
  },
  t1Row {
    a: 115,
    b: 118,
    c: 119,
    d: 116,
    e: 117,
  },
  t1Row {
    a: 121,
    b: 124,
    c: 123,
    d: 122,
    e: 120,
  },
  t1Row {
    a: 127,
    b: 129,
    c: 125,
    d: 128,
    e: 126,
  },
  t1Row {
    a: 131,
    b: 130,
    c: 134,
    d: 133,
    e: 132,
  },
  t1Row {
    a: 138,
    b: 139,
    c: 137,
    d: 136,
    e: 135,
  },
  t1Row {
    a: 142,
    b: 143,
    c: 141,
    d: 140,
    e: 144,
  },
  t1Row {
    a: 149,
    b: 145,
    c: 147,
    d: 148,
    e: 146,
  },
  t1Row {
    a: 153,
    b: 151,
    c: 150,
    d: 154,
    e: 152,
  },
  t1Row {
    a: 159,
    b: 158,
    c: 155,
    d: 156,
    e: 157,
  },
  t1Row {
    a: 163,
    b: 160,
    c: 161,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 168,
    b: 167,
    c: 166,
    d: 169,
    e: 165,
  },
  t1Row {
    a: 174,
    b: 170,
    c: 172,
    d: 171,
    e: 173,
  },
  t1Row {
    a: 179,
    b: 175,
    c: 176,
    d: 178,
    e: 177,
  },
  t1Row {
    a: 182,
    b: 181,
    c: 184,
    d: 183,
    e: 180,
  },
  t1Row {
    a: 188,
    b: 186,
    c: 187,
    d: 185,
    e: 189,
  },
  t1Row {
    a: 191,
    b: 194,
    c: 193,
    d: 190,
    e: 192,
  },
  t1Row {
    a: 199,
    b: 198,
    c: 195,
    d: 196,
    e: 197,
  },
  t1Row {
    a: 201,
    b: 200,
    c: 202,
    d: 203,
    e: 204,
  },
  t1Row {
    a: 205,
    b: 206,
    c: 208,
    d: 207,
    e: 209,
  },
  t1Row {
    a: 213,
    b: 211,
    c: 214,
    d: 212,
    e: 210,
  },
  t1Row {
    a: 216,
    b: 218,
    c: 215,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 220,
    b: 223,
    c: 224,
    d: 222,
    e: 221,
  },
  t1Row {
    a: 229,
    b: 228,
    c: 225,
    d: 226,
    e: 227,
  },
  t1Row {
    a: 234,
    b: 232,
    c: 231,
    d: 233,
    e: 230,
  },
  t1Row {
    a: 239,
    b: 236,
    c: 235,
    d: 238,
    e: 237,
  },
  t1Row {
    a: 243,
    b: 240,
    c: 244,
    d: 241,
    e: 242,
  },
  t1Row {
    a: 245,
    b: 249,
    c: 247,
    d: 248,
    e: 246,
  },
]

/* SELECT a+b*2+c*3, a+b*2+c*3+d*4+e*5, d-e, (a+b+c+d+e)/5, CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END FROM t1 ORDER BY 2,5,4,3,1 */
let result = from row in t1
  order by [row.a + row.b * 2 + row.c * 3 + row.d * 4 + row.e * 5, (if row.c > avg(from x in t1
  select x.c) { row.a * 2 } else { row.b * 10 }), (row.a + row.b + row.c + row.d + row.e) / 5, row.d - row.e, row.a + row.b * 2 + row.c * 3]
  select [row.a + row.b * 2 + row.c * 3, row.a + row.b * 2 + row.c * 3 + row.d * 4 + row.e * 5, row.d - row.e, (row.a + row.b + row.c + row.d + row.e) / 5, (if row.c > avg(from x in t1
  select x.c) { row.a * 2 } else { row.b * 10 })]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}
test "case677" {
  expect flatResult == [610, 1529, -2, 102, 1000, 635, 1612, -1, 107, 1050, 674, 1680, 4, 112, 1120, 708, 1757, -1, 117, 1180, 738, 1826, 2, 122, 1240, 760, 1902, 2, 127, 1290, 793, 1985, 1, 132, 1300, 827, 2046, 1, 137, 1390, 851, 2131, -4, 142, 1430, 880, 2202, 2, 147, 1450, 905, 2281, 2, 152, 1510, 940, 2349, -1, 157, 1580, 966, 2432, 2, 162, 1600, 1000, 2501, 4, 167, 1670, 1030, 2579, -2, 172, 1700, 1057, 2654, 1, 177, 358, 1096, 2728, 3, 182, 364, 1121, 2806, -4, 187, 376, 1158, 2878, -2, 192, 382, 1180, 2949, -1, 197, 398, 1207, 3039, -1, 202, 402, 1241, 3114, -2, 207, 410, 1277, 3175, 2, 212, 426, 1297, 3260, -2, 217, 432, 1338, 3331, 1, 222, 440, 1360, 3399, -1, 227, 458, 1391, 3473, 3, 232, 468, 1416, 3553, 1, 237, 478, 1455, 3629, -1, 242, 486, 1484, 3706, 2, 247, 490]
}

