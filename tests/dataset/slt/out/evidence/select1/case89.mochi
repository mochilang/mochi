/*
# line: 1213
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 103,
    b: 102,
    c: 100,
    d: 101,
    e: 104,
  },
  t1Row {
    a: 107,
    b: 106,
    c: 108,
    d: 109,
    e: 105,
  },
  t1Row {
    a: 110,
    b: 114,
    c: 112,
    d: 111,
    e: 113,
  },
  t1Row {
    a: 116,
    b: 119,
    c: 117,
    d: 115,
    e: 118,
  },
  t1Row {
    a: 123,
    b: 122,
    c: 124,
    d: 120,
    e: 121,
  },
  t1Row {
    a: 127,
    b: 128,
    c: 129,
    d: 126,
    e: 125,
  },
  t1Row {
    a: 132,
    b: 134,
    c: 131,
    d: 133,
    e: 130,
  },
  t1Row {
    a: 138,
    b: 136,
    c: 139,
    d: 135,
    e: 137,
  },
  t1Row {
    a: 144,
    b: 141,
    c: 140,
    d: 142,
    e: 143,
  },
  t1Row {
    a: 145,
    b: 149,
    c: 146,
    d: 148,
    e: 147,
  },
  t1Row {
    a: 151,
    b: 150,
    c: 153,
    d: 154,
    e: 152,
  },
  t1Row {
    a: 155,
    b: 157,
    c: 159,
    d: 156,
    e: 158,
  },
  t1Row {
    a: 161,
    b: 160,
    c: 163,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 167,
    b: 169,
    c: 168,
    d: 165,
    e: 166,
  },
  t1Row {
    a: 171,
    b: 170,
    c: 172,
    d: 173,
    e: 174,
  },
  t1Row {
    a: 177,
    b: 176,
    c: 179,
    d: 178,
    e: 175,
  },
  t1Row {
    a: 181,
    b: 180,
    c: 182,
    d: 183,
    e: 184,
  },
  t1Row {
    a: 187,
    b: 188,
    c: 186,
    d: 189,
    e: 185,
  },
  t1Row {
    a: 190,
    b: 194,
    c: 193,
    d: 192,
    e: 191,
  },
  t1Row {
    a: 199,
    b: 197,
    c: 198,
    d: 196,
    e: 195,
  },
  t1Row {
    a: 200,
    b: 202,
    c: 203,
    d: 201,
    e: 204,
  },
  t1Row {
    a: 208,
    b: 209,
    c: 205,
    d: 206,
    e: 207,
  },
  t1Row {
    a: 214,
    b: 210,
    c: 213,
    d: 212,
    e: 211,
  },
  t1Row {
    a: 218,
    b: 215,
    c: 216,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 223,
    b: 221,
    c: 222,
    d: 220,
    e: 224,
  },
  t1Row {
    a: 226,
    b: 227,
    c: 228,
    d: 229,
    e: 225,
  },
  t1Row {
    a: 234,
    b: 231,
    c: 232,
    d: 230,
    e: 233,
  },
  t1Row {
    a: 237,
    b: 236,
    c: 239,
    d: 235,
    e: 238,
  },
  t1Row {
    a: 242,
    b: 244,
    c: 240,
    d: 243,
    e: 241,
  },
  t1Row {
    a: 246,
    b: 248,
    c: 247,
    d: 249,
    e: 245,
  },
]

/* SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d), a+b*2+c*3, d-e, b, a, c, a+b*2 FROM t1 WHERE (c<=d-2 OR c>=d+2) OR (e>a AND e<b) OR d>e ORDER BY 5,6,3,7,2,1,4 */
let result = from row in t1
  where ((((row.c <= row.d - 2 || row.c >= row.d + 2)) || ((row.e > row.a && row.e < row.b))) || row.d > row.e)
  order by [row.a, row.c, row.d - row.e, row.a + row.b * 2, row.a + row.b * 2 + row.c * 3, count(from x in t1
  where (x.c > row.c && x.d < row.d)
  select x), row.b]
  select [count(from x in t1
  where (x.c > row.c && x.d < row.d)
  select x), row.a + row.b * 2 + row.c * 3, row.d - row.e, row.b, row.a, row.c, row.a + row.b * 2]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}

test "case89" {
  expect flatResult == [0, 643, 4, 106, 107, 108, 319, 0, 674, -2, 114, 110, 112, 338, 0, 705, -3, 119, 116, 117, 354, 0, 739, -1, 122, 123, 124, 367, 0, 770, 1, 128, 127, 129, 383, 0, 793, 3, 134, 132, 131, 400, 0, 827, -2, 136, 138, 139, 410, 0, 846, -1, 141, 144, 140, 426, 0, 881, 1, 149, 145, 146, 443, 0, 910, 2, 150, 151, 153, 451, 0, 946, -2, 157, 155, 159, 469, 0, 970, 2, 160, 161, 163, 481, 0, 1009, -1, 169, 167, 168, 505, 0, 1066, 3, 176, 177, 179, 529, 0, 1121, 4, 188, 187, 186, 563, 0, 1157, 1, 194, 190, 193, 578, 0, 1187, 1, 197, 199, 198, 593, 0, 1213, -3, 202, 200, 203, 604, 0, 1273, 1, 210, 214, 213, 634, 0, 1331, -4, 221, 223, 222, 665, 0, 1364, 4, 227, 226, 228, 680, 0, 1392, -3, 231, 234, 232, 696, 0, 1426, -3, 236, 237, 239, 709, 0, 1450, 2, 244, 242, 240, 730, 0, 1483, 4, 248, 246, 247, 742]
}
