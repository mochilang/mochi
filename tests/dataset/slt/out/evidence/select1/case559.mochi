/*
# line: 6869
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 104,
    b: 100,
    c: 102,
    d: 101,
    e: 103,
  },
  t1Row {
    a: 107,
    b: 105,
    c: 106,
    d: 108,
    e: 109,
  },
  t1Row {
    a: 111,
    b: 112,
    c: 113,
    d: 114,
    e: 110,
  },
  t1Row {
    a: 115,
    b: 118,
    c: 119,
    d: 116,
    e: 117,
  },
  t1Row {
    a: 121,
    b: 124,
    c: 123,
    d: 122,
    e: 120,
  },
  t1Row {
    a: 127,
    b: 129,
    c: 125,
    d: 128,
    e: 126,
  },
  t1Row {
    a: 131,
    b: 130,
    c: 134,
    d: 133,
    e: 132,
  },
  t1Row {
    a: 138,
    b: 139,
    c: 137,
    d: 136,
    e: 135,
  },
  t1Row {
    a: 142,
    b: 143,
    c: 141,
    d: 140,
    e: 144,
  },
  t1Row {
    a: 149,
    b: 145,
    c: 147,
    d: 148,
    e: 146,
  },
  t1Row {
    a: 153,
    b: 151,
    c: 150,
    d: 154,
    e: 152,
  },
  t1Row {
    a: 159,
    b: 158,
    c: 155,
    d: 156,
    e: 157,
  },
  t1Row {
    a: 163,
    b: 160,
    c: 161,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 168,
    b: 167,
    c: 166,
    d: 169,
    e: 165,
  },
  t1Row {
    a: 174,
    b: 170,
    c: 172,
    d: 171,
    e: 173,
  },
  t1Row {
    a: 179,
    b: 175,
    c: 176,
    d: 178,
    e: 177,
  },
  t1Row {
    a: 182,
    b: 181,
    c: 184,
    d: 183,
    e: 180,
  },
  t1Row {
    a: 188,
    b: 186,
    c: 187,
    d: 185,
    e: 189,
  },
  t1Row {
    a: 191,
    b: 194,
    c: 193,
    d: 190,
    e: 192,
  },
  t1Row {
    a: 199,
    b: 198,
    c: 195,
    d: 196,
    e: 197,
  },
  t1Row {
    a: 201,
    b: 200,
    c: 202,
    d: 203,
    e: 204,
  },
  t1Row {
    a: 205,
    b: 206,
    c: 208,
    d: 207,
    e: 209,
  },
  t1Row {
    a: 213,
    b: 211,
    c: 214,
    d: 212,
    e: 210,
  },
  t1Row {
    a: 216,
    b: 218,
    c: 215,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 220,
    b: 223,
    c: 224,
    d: 222,
    e: 221,
  },
  t1Row {
    a: 229,
    b: 228,
    c: 225,
    d: 226,
    e: 227,
  },
  t1Row {
    a: 234,
    b: 232,
    c: 231,
    d: 233,
    e: 230,
  },
  t1Row {
    a: 239,
    b: 236,
    c: 235,
    d: 238,
    e: 237,
  },
  t1Row {
    a: 243,
    b: 240,
    c: 244,
    d: 241,
    e: 242,
  },
  t1Row {
    a: 245,
    b: 249,
    c: 247,
    d: 248,
    e: 246,
  },
]

/* SELECT c, e, b, abs(a), d, a FROM t1 WHERE (a>b-2 AND a<b+2) OR c BETWEEN b-2 AND d+2 ORDER BY 5,3,2,1,4,6 */
let result = from row in t1
  where (((row.a > row.b - 2 && row.a < row.b + 2)) || (row.c >= row.b - 2 && row.c <= row.d + 2))
  order by [row.d, row.b, row.e, row.c, (if row.a < 0 { -(row.a) } else { row.a }), row.a]
  select [row.c, row.e, row.b, (if row.a < 0 { -(row.a) } else { row.a }), row.d, row.a]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}
test "case559" {
  expect flatResult == [102, 103, 100, 104, 101, 104, 106, 109, 105, 107, 108, 107, 113, 110, 112, 111, 114, 111, 123, 120, 124, 121, 122, 121, 134, 132, 130, 131, 133, 131, 137, 135, 139, 138, 136, 138, 141, 144, 143, 142, 140, 142, 147, 146, 145, 149, 148, 149, 150, 152, 151, 153, 154, 153, 155, 157, 158, 159, 156, 159, 161, 162, 160, 163, 164, 163, 166, 165, 167, 168, 169, 168, 172, 173, 170, 174, 171, 174, 176, 177, 175, 179, 178, 179, 184, 180, 181, 182, 183, 182, 187, 189, 186, 188, 185, 188, 195, 197, 198, 199, 196, 199, 202, 204, 200, 201, 203, 201, 208, 209, 206, 205, 207, 205, 214, 210, 211, 213, 212, 213, 224, 221, 223, 220, 222, 220, 225, 227, 228, 229, 226, 229, 231, 230, 232, 234, 233, 234, 235, 237, 236, 239, 238, 239, 247, 246, 249, 245, 248, 245]
}

