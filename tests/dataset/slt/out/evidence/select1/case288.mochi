/*
# line: 3665
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 104,
    b: 100,
    c: 102,
    d: 101,
    e: 103,
  },
  t1Row {
    a: 107,
    b: 105,
    c: 106,
    d: 108,
    e: 109,
  },
  t1Row {
    a: 111,
    b: 112,
    c: 113,
    d: 114,
    e: 110,
  },
  t1Row {
    a: 115,
    b: 118,
    c: 119,
    d: 116,
    e: 117,
  },
  t1Row {
    a: 121,
    b: 124,
    c: 123,
    d: 122,
    e: 120,
  },
  t1Row {
    a: 127,
    b: 129,
    c: 125,
    d: 128,
    e: 126,
  },
  t1Row {
    a: 131,
    b: 130,
    c: 134,
    d: 133,
    e: 132,
  },
  t1Row {
    a: 138,
    b: 139,
    c: 137,
    d: 136,
    e: 135,
  },
  t1Row {
    a: 142,
    b: 143,
    c: 141,
    d: 140,
    e: 144,
  },
  t1Row {
    a: 149,
    b: 145,
    c: 147,
    d: 148,
    e: 146,
  },
  t1Row {
    a: 153,
    b: 151,
    c: 150,
    d: 154,
    e: 152,
  },
  t1Row {
    a: 159,
    b: 158,
    c: 155,
    d: 156,
    e: 157,
  },
  t1Row {
    a: 163,
    b: 160,
    c: 161,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 168,
    b: 167,
    c: 166,
    d: 169,
    e: 165,
  },
  t1Row {
    a: 174,
    b: 170,
    c: 172,
    d: 171,
    e: 173,
  },
  t1Row {
    a: 179,
    b: 175,
    c: 176,
    d: 178,
    e: 177,
  },
  t1Row {
    a: 182,
    b: 181,
    c: 184,
    d: 183,
    e: 180,
  },
  t1Row {
    a: 188,
    b: 186,
    c: 187,
    d: 185,
    e: 189,
  },
  t1Row {
    a: 191,
    b: 194,
    c: 193,
    d: 190,
    e: 192,
  },
  t1Row {
    a: 199,
    b: 198,
    c: 195,
    d: 196,
    e: 197,
  },
  t1Row {
    a: 201,
    b: 200,
    c: 202,
    d: 203,
    e: 204,
  },
  t1Row {
    a: 205,
    b: 206,
    c: 208,
    d: 207,
    e: 209,
  },
  t1Row {
    a: 213,
    b: 211,
    c: 214,
    d: 212,
    e: 210,
  },
  t1Row {
    a: 216,
    b: 218,
    c: 215,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 220,
    b: 223,
    c: 224,
    d: 222,
    e: 221,
  },
  t1Row {
    a: 229,
    b: 228,
    c: 225,
    d: 226,
    e: 227,
  },
  t1Row {
    a: 234,
    b: 232,
    c: 231,
    d: 233,
    e: 230,
  },
  t1Row {
    a: 239,
    b: 236,
    c: 235,
    d: 238,
    e: 237,
  },
  t1Row {
    a: 243,
    b: 240,
    c: 244,
    d: 241,
    e: 242,
  },
  t1Row {
    a: 245,
    b: 249,
    c: 247,
    d: 248,
    e: 246,
  },
]

/* SELECT a+b*2+c*3+d*4, (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b), d, (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d), CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END FROM t1 ORDER BY 4,5,3,2,1 */
let result = from row in t1
  order by [count(from x in t1
  where (x.c > row.c && x.d < row.d)
  select x), (if row.c > avg(from x in t1
  select x.c) { row.a * 2 } else { row.b * 10 }), row.d, count(from x in t1
  where x.b < row.b
  select x), row.a + row.b * 2 + row.c * 3 + row.d * 4]
  select [row.a + row.b * 2 + row.c * 3 + row.d * 4, count(from x in t1
  where x.b < row.b
  select x), row.d, count(from x in t1
  where (x.c > row.c && x.d < row.d)
  select x), (if row.c > avg(from x in t1
  select x.c) { row.a * 2 } else { row.b * 10 })]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}
test "case288" {
  expect flatResult == [1769, 15, 178, 0, 358, 1828, 16, 183, 0, 364, 1861, 17, 185, 0, 376, 1918, 18, 190, 0, 382, 1964, 19, 196, 0, 398, 2019, 20, 203, 0, 402, 2069, 21, 207, 0, 410, 2125, 22, 212, 0, 426, 2165, 23, 217, 0, 432, 2226, 24, 222, 0, 440, 2264, 25, 226, 0, 458, 2323, 26, 233, 0, 468, 2368, 27, 238, 0, 478, 2419, 28, 241, 0, 486, 2476, 29, 248, 0, 490, 1014, 0, 101, 0, 1000, 1067, 1, 108, 0, 1050, 1130, 2, 114, 0, 1120, 1172, 3, 116, 0, 1180, 1226, 4, 122, 0, 1240, 1272, 5, 128, 0, 1290, 1325, 6, 133, 0, 1300, 1371, 7, 136, 0, 1390, 1411, 8, 140, 0, 1430, 1472, 9, 148, 0, 1450, 1521, 10, 154, 0, 1510, 1564, 11, 156, 0, 1580, 1622, 12, 164, 0, 1600, 1676, 13, 169, 0, 1670, 1714, 14, 171, 0, 1700]
}

