/*
# line: 994
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 104,
    b: 100,
    c: 102,
    d: 101,
    e: 103,
  },
  t1Row {
    a: 107,
    b: 105,
    c: 106,
    d: 108,
    e: 109,
  },
  t1Row {
    a: 111,
    b: 112,
    c: 113,
    d: 114,
    e: 110,
  },
  t1Row {
    a: 115,
    b: 118,
    c: 119,
    d: 116,
    e: 117,
  },
  t1Row {
    a: 121,
    b: 124,
    c: 123,
    d: 122,
    e: 120,
  },
  t1Row {
    a: 127,
    b: 129,
    c: 125,
    d: 128,
    e: 126,
  },
  t1Row {
    a: 131,
    b: 130,
    c: 134,
    d: 133,
    e: 132,
  },
  t1Row {
    a: 138,
    b: 139,
    c: 137,
    d: 136,
    e: 135,
  },
  t1Row {
    a: 142,
    b: 143,
    c: 141,
    d: 140,
    e: 144,
  },
  t1Row {
    a: 149,
    b: 145,
    c: 147,
    d: 148,
    e: 146,
  },
  t1Row {
    a: 153,
    b: 151,
    c: 150,
    d: 154,
    e: 152,
  },
  t1Row {
    a: 159,
    b: 158,
    c: 155,
    d: 156,
    e: 157,
  },
  t1Row {
    a: 163,
    b: 160,
    c: 161,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 168,
    b: 167,
    c: 166,
    d: 169,
    e: 165,
  },
  t1Row {
    a: 174,
    b: 170,
    c: 172,
    d: 171,
    e: 173,
  },
  t1Row {
    a: 179,
    b: 175,
    c: 176,
    d: 178,
    e: 177,
  },
  t1Row {
    a: 182,
    b: 181,
    c: 184,
    d: 183,
    e: 180,
  },
  t1Row {
    a: 188,
    b: 186,
    c: 187,
    d: 185,
    e: 189,
  },
  t1Row {
    a: 191,
    b: 194,
    c: 193,
    d: 190,
    e: 192,
  },
  t1Row {
    a: 199,
    b: 198,
    c: 195,
    d: 196,
    e: 197,
  },
  t1Row {
    a: 201,
    b: 200,
    c: 202,
    d: 203,
    e: 204,
  },
  t1Row {
    a: 205,
    b: 206,
    c: 208,
    d: 207,
    e: 209,
  },
  t1Row {
    a: 213,
    b: 211,
    c: 214,
    d: 212,
    e: 210,
  },
  t1Row {
    a: 216,
    b: 218,
    c: 215,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 220,
    b: 223,
    c: 224,
    d: 222,
    e: 221,
  },
  t1Row {
    a: 229,
    b: 228,
    c: 225,
    d: 226,
    e: 227,
  },
  t1Row {
    a: 234,
    b: 232,
    c: 231,
    d: 233,
    e: 230,
  },
  t1Row {
    a: 239,
    b: 236,
    c: 235,
    d: 238,
    e: 237,
  },
  t1Row {
    a: 243,
    b: 240,
    c: 244,
    d: 241,
    e: 242,
  },
  t1Row {
    a: 245,
    b: 249,
    c: 247,
    d: 248,
    e: 246,
  },
]

/* SELECT d, c, b, a+b*2+c*3+d*4, b-c, CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222 WHEN a<b+3 THEN 333 ELSE 444 END FROM t1 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b) OR c>d OR (a>b-2 AND a<b+2) ORDER BY 3,5,6,2,4,1 */
let result = from row in t1
  where ((count(from x in t1
  where x.b < row.b
  select x) > 0 || row.c > row.d) || ((row.a > row.b - 2 && row.a < row.b + 2)))
  order by [row.b, row.b - row.c, (if row.a < row.b - 3 { 111 } else { (if row.a <= row.b { 222 } else { (if row.a < row.b + 3 { 333 } else { 444 }) }) }), row.c, row.a + row.b * 2 + row.c * 3 + row.d * 4, row.d]
  select [row.d, row.c, row.b, row.a + row.b * 2 + row.c * 3 + row.d * 4, row.b - row.c, (if row.a < row.b - 3 { 111 } else { (if row.a <= row.b { 222 } else { (if row.a < row.b + 3 { 333 } else { 444 }) }) })]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}
test "case72" {
  expect flatResult == [101, 102, 100, 1014, -2, 444, 108, 106, 105, 1067, -1, 333, 114, 113, 112, 1130, -1, 222, 116, 119, 118, 1172, -1, 222, 122, 123, 124, 1226, 1, 222, 128, 125, 129, 1272, 4, 222, 133, 134, 130, 1325, -4, 333, 136, 137, 139, 1371, 2, 222, 140, 141, 143, 1411, 2, 222, 148, 147, 145, 1472, -2, 444, 154, 150, 151, 1521, 1, 333, 156, 155, 158, 1564, 3, 333, 164, 161, 160, 1622, -1, 444, 169, 166, 167, 1676, 1, 333, 171, 172, 170, 1714, -2, 444, 178, 176, 175, 1769, -1, 444, 183, 184, 181, 1828, -3, 333, 185, 187, 186, 1861, -1, 333, 190, 193, 194, 1918, 1, 222, 196, 195, 198, 1964, 3, 333, 203, 202, 200, 2019, -2, 333, 207, 208, 206, 2069, -2, 222, 212, 214, 211, 2125, -3, 333, 217, 215, 218, 2165, 3, 222, 222, 224, 223, 2226, -1, 222, 226, 225, 228, 2264, 3, 333, 233, 231, 232, 2323, 1, 333, 238, 235, 236, 2368, 1, 444, 241, 244, 240, 2419, -4, 444, 248, 247, 249, 2476, 2, 111]
}

