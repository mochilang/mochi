/*
# line: 994
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 103,
    b: 102,
    c: 100,
    d: 101,
    e: 104,
  },
  t1Row {
    a: 107,
    b: 106,
    c: 108,
    d: 109,
    e: 105,
  },
  t1Row {
    a: 110,
    b: 114,
    c: 112,
    d: 111,
    e: 113,
  },
  t1Row {
    a: 116,
    b: 119,
    c: 117,
    d: 115,
    e: 118,
  },
  t1Row {
    a: 123,
    b: 122,
    c: 124,
    d: 120,
    e: 121,
  },
  t1Row {
    a: 127,
    b: 128,
    c: 129,
    d: 126,
    e: 125,
  },
  t1Row {
    a: 132,
    b: 134,
    c: 131,
    d: 133,
    e: 130,
  },
  t1Row {
    a: 138,
    b: 136,
    c: 139,
    d: 135,
    e: 137,
  },
  t1Row {
    a: 144,
    b: 141,
    c: 140,
    d: 142,
    e: 143,
  },
  t1Row {
    a: 145,
    b: 149,
    c: 146,
    d: 148,
    e: 147,
  },
  t1Row {
    a: 151,
    b: 150,
    c: 153,
    d: 154,
    e: 152,
  },
  t1Row {
    a: 155,
    b: 157,
    c: 159,
    d: 156,
    e: 158,
  },
  t1Row {
    a: 161,
    b: 160,
    c: 163,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 167,
    b: 169,
    c: 168,
    d: 165,
    e: 166,
  },
  t1Row {
    a: 171,
    b: 170,
    c: 172,
    d: 173,
    e: 174,
  },
  t1Row {
    a: 177,
    b: 176,
    c: 179,
    d: 178,
    e: 175,
  },
  t1Row {
    a: 181,
    b: 180,
    c: 182,
    d: 183,
    e: 184,
  },
  t1Row {
    a: 187,
    b: 188,
    c: 186,
    d: 189,
    e: 185,
  },
  t1Row {
    a: 190,
    b: 194,
    c: 193,
    d: 192,
    e: 191,
  },
  t1Row {
    a: 199,
    b: 197,
    c: 198,
    d: 196,
    e: 195,
  },
  t1Row {
    a: 200,
    b: 202,
    c: 203,
    d: 201,
    e: 204,
  },
  t1Row {
    a: 208,
    b: 209,
    c: 205,
    d: 206,
    e: 207,
  },
  t1Row {
    a: 214,
    b: 210,
    c: 213,
    d: 212,
    e: 211,
  },
  t1Row {
    a: 218,
    b: 215,
    c: 216,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 223,
    b: 221,
    c: 222,
    d: 220,
    e: 224,
  },
  t1Row {
    a: 226,
    b: 227,
    c: 228,
    d: 229,
    e: 225,
  },
  t1Row {
    a: 234,
    b: 231,
    c: 232,
    d: 230,
    e: 233,
  },
  t1Row {
    a: 237,
    b: 236,
    c: 239,
    d: 235,
    e: 238,
  },
  t1Row {
    a: 242,
    b: 244,
    c: 240,
    d: 243,
    e: 241,
  },
  t1Row {
    a: 246,
    b: 248,
    c: 247,
    d: 249,
    e: 245,
  },
]

/* SELECT d, c, b, a+b*2+c*3+d*4, b-c, CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222 WHEN a<b+3 THEN 333 ELSE 444 END FROM t1 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b) OR c>d OR (a>b-2 AND a<b+2) ORDER BY 3,5,6,2,4,1 */
let result = from row in t1
  where ((count(from x in t1
  where x.b < row.b
  select x) > 0 || row.c > row.d) || ((row.a > row.b - 2 && row.a < row.b + 2)))
  order by [row.b, row.b - row.c, (if row.a < row.b - 3 { 111 } else { (if row.a <= row.b { 222 } else { (if row.a < row.b + 3 { 333 } else { 444 }) }) }), row.c, row.a + row.b * 2 + row.c * 3 + row.d * 4, row.d]
  select [row.d, row.c, row.b, row.a + row.b * 2 + row.c * 3 + row.d * 4, row.b - row.c, (if row.a < row.b - 3 { 111 } else { (if row.a <= row.b { 222 } else { (if row.a < row.b + 3 { 333 } else { 444 }) }) })]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}

test "case72" {
  expect flatResult == [101, 100, 102, 1011, 2, 333, 109, 108, 106, 1079, -2, 333, 111, 112, 114, 1118, 2, 111, 115, 117, 119, 1165, 2, 222, 120, 124, 122, 1219, -2, 333, 126, 129, 128, 1274, -1, 222, 133, 131, 134, 1325, 3, 222, 135, 139, 136, 1367, -3, 333, 142, 140, 141, 1414, 1, 444, 148, 146, 149, 1473, 3, 111, 154, 153, 150, 1526, -3, 333, 156, 159, 157, 1570, -2, 222, 164, 163, 160, 1626, -3, 333, 165, 168, 169, 1669, 1, 222, 173, 172, 170, 1719, -2, 333, 178, 179, 176, 1778, -3, 333, 183, 182, 180, 1819, -2, 333, 189, 186, 188, 1877, 2, 222, 192, 193, 194, 1925, 1, 111, 196, 198, 197, 1971, -1, 333, 201, 203, 202, 2017, -1, 222, 206, 205, 209, 2065, 4, 222, 212, 213, 210, 2121, -3, 444, 217, 216, 215, 2164, -1, 444, 220, 222, 221, 2211, -1, 333, 229, 228, 227, 2280, -1, 222, 230, 232, 231, 2312, -1, 444, 235, 239, 236, 2366, -3, 333, 243, 240, 244, 2422, 4, 222, 249, 247, 248, 2479, 1, 222]
}
