/*
# line: 437
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 103,
    b: 102,
    c: 100,
    d: 101,
    e: 104,
  },
  t1Row {
    a: 107,
    b: 106,
    c: 108,
    d: 109,
    e: 105,
  },
  t1Row {
    a: 110,
    b: 114,
    c: 112,
    d: 111,
    e: 113,
  },
  t1Row {
    a: 116,
    b: 119,
    c: 117,
    d: 115,
    e: 118,
  },
  t1Row {
    a: 123,
    b: 122,
    c: 124,
    d: 120,
    e: 121,
  },
  t1Row {
    a: 127,
    b: 128,
    c: 129,
    d: 126,
    e: 125,
  },
  t1Row {
    a: 132,
    b: 134,
    c: 131,
    d: 133,
    e: 130,
  },
  t1Row {
    a: 138,
    b: 136,
    c: 139,
    d: 135,
    e: 137,
  },
  t1Row {
    a: 144,
    b: 141,
    c: 140,
    d: 142,
    e: 143,
  },
  t1Row {
    a: 145,
    b: 149,
    c: 146,
    d: 148,
    e: 147,
  },
  t1Row {
    a: 151,
    b: 150,
    c: 153,
    d: 154,
    e: 152,
  },
  t1Row {
    a: 155,
    b: 157,
    c: 159,
    d: 156,
    e: 158,
  },
  t1Row {
    a: 161,
    b: 160,
    c: 163,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 167,
    b: 169,
    c: 168,
    d: 165,
    e: 166,
  },
  t1Row {
    a: 171,
    b: 170,
    c: 172,
    d: 173,
    e: 174,
  },
  t1Row {
    a: 177,
    b: 176,
    c: 179,
    d: 178,
    e: 175,
  },
  t1Row {
    a: 181,
    b: 180,
    c: 182,
    d: 183,
    e: 184,
  },
  t1Row {
    a: 187,
    b: 188,
    c: 186,
    d: 189,
    e: 185,
  },
  t1Row {
    a: 190,
    b: 194,
    c: 193,
    d: 192,
    e: 191,
  },
  t1Row {
    a: 199,
    b: 197,
    c: 198,
    d: 196,
    e: 195,
  },
  t1Row {
    a: 200,
    b: 202,
    c: 203,
    d: 201,
    e: 204,
  },
  t1Row {
    a: 208,
    b: 209,
    c: 205,
    d: 206,
    e: 207,
  },
  t1Row {
    a: 214,
    b: 210,
    c: 213,
    d: 212,
    e: 211,
  },
  t1Row {
    a: 218,
    b: 215,
    c: 216,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 223,
    b: 221,
    c: 222,
    d: 220,
    e: 224,
  },
  t1Row {
    a: 226,
    b: 227,
    c: 228,
    d: 229,
    e: 225,
  },
  t1Row {
    a: 234,
    b: 231,
    c: 232,
    d: 230,
    e: 233,
  },
  t1Row {
    a: 237,
    b: 236,
    c: 239,
    d: 235,
    e: 238,
  },
  t1Row {
    a: 242,
    b: 244,
    c: 240,
    d: 243,
    e: 241,
  },
  t1Row {
    a: 246,
    b: 248,
    c: 247,
    d: 249,
    e: 245,
  },
]

/* SELECT a+b*2+c*3+d*4+e*5, CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222 WHEN a<b+3 THEN 333 ELSE 444 END, a, abs(b-c), a+b*2, d, CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END FROM t1 WHERE (e>c OR e<d) OR a>b ORDER BY 4,5,3,7,1,6,2 */
let result = from row in t1
  where (((row.e > row.c || row.e < row.d)) || row.a > row.b)
  order by [(if row.b - row.c < 0 { -(row.b - row.c) } else { row.b - row.c }), row.a + row.b * 2, row.a, (if row.c > avg(from x in t1
  select x.c) { row.a * 2 } else { row.b * 10 }), row.a + row.b * 2 + row.c * 3 + row.d * 4 + row.e * 5, row.d, (if row.a < row.b - 3 { 111 } else { (if row.a <= row.b { 222 } else { (if row.a < row.b + 3 { 333 } else { 444 }) }) })]
  select [row.a + row.b * 2 + row.c * 3 + row.d * 4 + row.e * 5, (if row.a < row.b - 3 { 111 } else { (if row.a <= row.b { 222 } else { (if row.a < row.b + 3 { 333 } else { 444 }) }) }), row.a, (if row.b - row.c < 0 { -(row.b - row.c) } else { row.b - row.c }), row.a + row.b * 2, row.d, (if row.c > avg(from x in t1
  select x.c) { row.a * 2 } else { row.b * 10 })]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}

test "case27" {
  expect flatResult == [1899, 222, 127, 1, 383, 126, 1280, 2129, 444, 144, 1, 426, 142, 1410, 2880, 111, 190, 1, 578, 192, 380, 2946, 333, 199, 1, 593, 196, 398, 3037, 222, 200, 1, 604, 201, 400, 3259, 444, 218, 1, 648, 217, 436, 3331, 333, 223, 1, 665, 220, 446, 3405, 222, 226, 1, 680, 229, 452, 3477, 444, 234, 1, 696, 230, 468, 3704, 222, 246, 1, 742, 249, 492, 1531, 333, 103, 2, 307, 101, 1020, 1604, 333, 107, 2, 319, 109, 1060, 1683, 111, 110, 2, 338, 111, 1140, 1755, 222, 116, 2, 354, 115, 1190, 1824, 333, 123, 2, 367, 120, 1220, 2589, 333, 171, 2, 511, 173, 1700, 2739, 333, 181, 2, 541, 183, 362, 2802, 222, 187, 2, 563, 189, 374, 1975, 222, 132, 3, 400, 133, 1340, 2052, 333, 138, 3, 410, 135, 1360, 2208, 111, 145, 3, 443, 148, 1490, 2286, 333, 151, 3, 451, 154, 1500, 2436, 333, 161, 3, 481, 164, 1600, 2653, 333, 177, 3, 529, 178, 354, 3176, 444, 214, 3, 634, 212, 428, 3556, 333, 237, 3, 709, 235, 474, 3100, 222, 208, 4, 626, 206, 416, 3627, 222, 242, 4, 730, 243, 484]
}
