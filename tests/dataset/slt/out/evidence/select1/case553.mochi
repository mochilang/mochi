/*
# line: 6794
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 104,
    b: 100,
    c: 102,
    d: 101,
    e: 103,
  },
  t1Row {
    a: 107,
    b: 105,
    c: 106,
    d: 108,
    e: 109,
  },
  t1Row {
    a: 111,
    b: 112,
    c: 113,
    d: 114,
    e: 110,
  },
  t1Row {
    a: 115,
    b: 118,
    c: 119,
    d: 116,
    e: 117,
  },
  t1Row {
    a: 121,
    b: 124,
    c: 123,
    d: 122,
    e: 120,
  },
  t1Row {
    a: 127,
    b: 129,
    c: 125,
    d: 128,
    e: 126,
  },
  t1Row {
    a: 131,
    b: 130,
    c: 134,
    d: 133,
    e: 132,
  },
  t1Row {
    a: 138,
    b: 139,
    c: 137,
    d: 136,
    e: 135,
  },
  t1Row {
    a: 142,
    b: 143,
    c: 141,
    d: 140,
    e: 144,
  },
  t1Row {
    a: 149,
    b: 145,
    c: 147,
    d: 148,
    e: 146,
  },
  t1Row {
    a: 153,
    b: 151,
    c: 150,
    d: 154,
    e: 152,
  },
  t1Row {
    a: 159,
    b: 158,
    c: 155,
    d: 156,
    e: 157,
  },
  t1Row {
    a: 163,
    b: 160,
    c: 161,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 168,
    b: 167,
    c: 166,
    d: 169,
    e: 165,
  },
  t1Row {
    a: 174,
    b: 170,
    c: 172,
    d: 171,
    e: 173,
  },
  t1Row {
    a: 179,
    b: 175,
    c: 176,
    d: 178,
    e: 177,
  },
  t1Row {
    a: 182,
    b: 181,
    c: 184,
    d: 183,
    e: 180,
  },
  t1Row {
    a: 188,
    b: 186,
    c: 187,
    d: 185,
    e: 189,
  },
  t1Row {
    a: 191,
    b: 194,
    c: 193,
    d: 190,
    e: 192,
  },
  t1Row {
    a: 199,
    b: 198,
    c: 195,
    d: 196,
    e: 197,
  },
  t1Row {
    a: 201,
    b: 200,
    c: 202,
    d: 203,
    e: 204,
  },
  t1Row {
    a: 205,
    b: 206,
    c: 208,
    d: 207,
    e: 209,
  },
  t1Row {
    a: 213,
    b: 211,
    c: 214,
    d: 212,
    e: 210,
  },
  t1Row {
    a: 216,
    b: 218,
    c: 215,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 220,
    b: 223,
    c: 224,
    d: 222,
    e: 221,
  },
  t1Row {
    a: 229,
    b: 228,
    c: 225,
    d: 226,
    e: 227,
  },
  t1Row {
    a: 234,
    b: 232,
    c: 231,
    d: 233,
    e: 230,
  },
  t1Row {
    a: 239,
    b: 236,
    c: 235,
    d: 238,
    e: 237,
  },
  t1Row {
    a: 243,
    b: 240,
    c: 244,
    d: 241,
    e: 242,
  },
  t1Row {
    a: 245,
    b: 249,
    c: 247,
    d: 248,
    e: 246,
  },
]

/* SELECT a+b*2+c*3, c-d, CASE a+1 WHEN b THEN 111 WHEN c THEN 222 WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END, a, (a+b+c+d+e)/5, a+b*2, CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END FROM t1 ORDER BY 3,2,5,7,1,6,4 */
let sub0 = avg(from x in t1
  select x.c)

let result = from row in t1
  order by [(if (row.a + 1) == row.b { 111 } else { (if (row.a + 1) == row.c { 222 } else { (if (row.a + 1) == row.d { 333 } else { (if (row.a + 1) == row.e { 444 } else { 555 }) }) }) }), (row.c - row.d), ((((((row.a + row.b) + row.c) + row.d) + row.e)) / 5), (if row.c > sub0 { (row.a * 2) } else { (row.b * 10) }), ((row.a + (row.b * 2)) + (row.c * 3)), (row.a + (row.b * 2)), row.a]
  select [((row.a + (row.b * 2)) + (row.c * 3)), (row.c - row.d), (if (row.a + 1) == row.b { 111 } else { (if (row.a + 1) == row.c { 222 } else { (if (row.a + 1) == row.d { 333 } else { (if (row.a + 1) == row.e { 444 } else { 555 }) }) }) }), row.a, ((((((row.a + row.b) + row.c) + row.d) + row.e)) / 5), (row.a + (row.b * 2)), (if row.c > sub0 { (row.a * 2) } else { (row.b * 10) })]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}
test "case553" {
  expect flatResult == [674, -1, 111, 111, 112, 335, 1120, 827, 1, 111, 138, 137, 416, 1390, 851, 1, 111, 142, 142, 428, 1430, 1241, 1, 111, 205, 207, 617, 410, 1207, -1, 222, 201, 202, 601, 402, 1277, 2, 222, 213, 212, 635, 426, 1455, 3, 222, 243, 242, 723, 486, 905, -4, 333, 153, 152, 455, 1510, 760, -3, 333, 127, 127, 385, 1290, 966, -3, 333, 163, 162, 483, 1600, 1000, -3, 333, 168, 167, 502, 1670, 635, -2, 333, 107, 107, 317, 1050, 1297, -2, 333, 216, 217, 652, 432, 738, 1, 333, 121, 122, 369, 1240, 1096, 1, 333, 182, 182, 544, 364, 708, 3, 333, 115, 117, 351, 1180, 1484, -1, 444, 245, 247, 743, 490, 793, 1, 444, 131, 132, 391, 1300, 1121, 2, 444, 188, 187, 560, 376, 1338, 2, 444, 220, 222, 666, 440, 1158, 3, 444, 191, 192, 579, 382, 1416, -3, 555, 239, 237, 711, 478, 1057, -2, 555, 179, 177, 529, 358, 1391, -2, 555, 234, 232, 698, 468, 880, -1, 555, 149, 147, 439, 1450, 940, -1, 555, 159, 157, 475, 1580, 1180, -1, 555, 199, 197, 595, 398, 1360, -1, 555, 229, 227, 685, 458, 610, 1, 555, 104, 102, 304, 1000, 1030, 1, 555, 174, 172, 514, 1700]
}

