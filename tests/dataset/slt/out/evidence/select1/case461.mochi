/*
# line: 5703
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 104,
    b: 100,
    c: 102,
    d: 101,
    e: 103,
  },
  t1Row {
    a: 107,
    b: 105,
    c: 106,
    d: 108,
    e: 109,
  },
  t1Row {
    a: 111,
    b: 112,
    c: 113,
    d: 114,
    e: 110,
  },
  t1Row {
    a: 115,
    b: 118,
    c: 119,
    d: 116,
    e: 117,
  },
  t1Row {
    a: 121,
    b: 124,
    c: 123,
    d: 122,
    e: 120,
  },
  t1Row {
    a: 127,
    b: 129,
    c: 125,
    d: 128,
    e: 126,
  },
  t1Row {
    a: 131,
    b: 130,
    c: 134,
    d: 133,
    e: 132,
  },
  t1Row {
    a: 138,
    b: 139,
    c: 137,
    d: 136,
    e: 135,
  },
  t1Row {
    a: 142,
    b: 143,
    c: 141,
    d: 140,
    e: 144,
  },
  t1Row {
    a: 149,
    b: 145,
    c: 147,
    d: 148,
    e: 146,
  },
  t1Row {
    a: 153,
    b: 151,
    c: 150,
    d: 154,
    e: 152,
  },
  t1Row {
    a: 159,
    b: 158,
    c: 155,
    d: 156,
    e: 157,
  },
  t1Row {
    a: 163,
    b: 160,
    c: 161,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 168,
    b: 167,
    c: 166,
    d: 169,
    e: 165,
  },
  t1Row {
    a: 174,
    b: 170,
    c: 172,
    d: 171,
    e: 173,
  },
  t1Row {
    a: 179,
    b: 175,
    c: 176,
    d: 178,
    e: 177,
  },
  t1Row {
    a: 182,
    b: 181,
    c: 184,
    d: 183,
    e: 180,
  },
  t1Row {
    a: 188,
    b: 186,
    c: 187,
    d: 185,
    e: 189,
  },
  t1Row {
    a: 191,
    b: 194,
    c: 193,
    d: 190,
    e: 192,
  },
  t1Row {
    a: 199,
    b: 198,
    c: 195,
    d: 196,
    e: 197,
  },
  t1Row {
    a: 201,
    b: 200,
    c: 202,
    d: 203,
    e: 204,
  },
  t1Row {
    a: 205,
    b: 206,
    c: 208,
    d: 207,
    e: 209,
  },
  t1Row {
    a: 213,
    b: 211,
    c: 214,
    d: 212,
    e: 210,
  },
  t1Row {
    a: 216,
    b: 218,
    c: 215,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 220,
    b: 223,
    c: 224,
    d: 222,
    e: 221,
  },
  t1Row {
    a: 229,
    b: 228,
    c: 225,
    d: 226,
    e: 227,
  },
  t1Row {
    a: 234,
    b: 232,
    c: 231,
    d: 233,
    e: 230,
  },
  t1Row {
    a: 239,
    b: 236,
    c: 235,
    d: 238,
    e: 237,
  },
  t1Row {
    a: 243,
    b: 240,
    c: 244,
    d: 241,
    e: 242,
  },
  t1Row {
    a: 245,
    b: 249,
    c: 247,
    d: 248,
    e: 246,
  },
]

/* SELECT a-b, (a+b+c+d+e)/5, CASE a+1 WHEN b THEN 111 WHEN c THEN 222 WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END, abs(a), d-e, abs(b-c), a+b*2+c*3+d*4 FROM t1 ORDER BY 6,4,5,3,1,2,7 */
let result = from row in t1
  order by [(if (row.b - row.c) < 0 { -((row.b - row.c)) } else { (row.b - row.c) }), (if row.a < 0 { -(row.a) } else { row.a }), (row.d - row.e), (if (row.a + 1) == row.b { 111 } else { (if (row.a + 1) == row.c { 222 } else { (if (row.a + 1) == row.d { 333 } else { (if (row.a + 1) == row.e { 444 } else { 555 }) }) }) }), (row.a - row.b), ((((((row.a + row.b) + row.c) + row.d) + row.e)) / 5), (((row.a + (row.b * 2)) + (row.c * 3)) + (row.d * 4))]
  select [(row.a - row.b), ((((((row.a + row.b) + row.c) + row.d) + row.e)) / 5), (if (row.a + 1) == row.b { 111 } else { (if (row.a + 1) == row.c { 222 } else { (if (row.a + 1) == row.d { 333 } else { (if (row.a + 1) == row.e { 444 } else { 555 }) }) }) }), (if row.a < 0 { -(row.a) } else { row.a }), (row.d - row.e), (if (row.b - row.c) < 0 { -((row.b - row.c)) } else { (row.b - row.c) }), (((row.a + (row.b * 2)) + (row.c * 3)) + (row.d * 4))]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}
test "case461" {
  expect flatResult == [2, 107, 333, 107, -1, 1, 1067, -1, 112, 111, 111, 4, 1, 1130, -3, 117, 333, 115, -1, 1, 1172, -3, 122, 333, 121, 2, 1, 1226, 2, 152, 333, 153, 2, 1, 1521, 3, 162, 333, 163, 2, 1, 1622, 1, 167, 333, 168, 4, 1, 1676, 4, 177, 555, 179, 1, 1, 1769, 2, 187, 444, 188, -4, 1, 1861, -3, 192, 444, 191, -2, 1, 1918, -3, 222, 444, 220, 1, 1, 2226, 2, 232, 555, 234, 3, 1, 2323, 3, 237, 555, 239, 1, 1, 2368, 4, 102, 555, 104, -2, 2, 1014, -1, 137, 111, 138, 1, 2, 1371, -1, 142, 111, 142, -4, 2, 1411, 4, 147, 555, 149, 2, 2, 1472, 4, 172, 555, 174, -2, 2, 1714, 1, 202, 222, 201, -1, 2, 2019, -1, 207, 111, 205, -2, 2, 2069, -4, 247, 444, 245, 2, 2, 2476, 1, 157, 555, 159, -1, 3, 1564, 1, 182, 333, 182, 3, 3, 1828, 1, 197, 555, 199, -1, 3, 1964, 2, 212, 222, 213, 2, 3, 2125, -2, 217, 333, 216, -2, 3, 2165, 1, 227, 555, 229, -1, 3, 2264, -2, 127, 333, 127, 2, 4, 1272, 1, 132, 444, 131, 1, 4, 1325, 3, 242, 222, 243, -1, 4, 2419]
}

