/*
# line: 10696
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 104,
    b: 100,
    c: 102,
    d: 101,
    e: 103,
  },
  t1Row {
    a: 107,
    b: 105,
    c: 106,
    d: 108,
    e: 109,
  },
  t1Row {
    a: 111,
    b: 112,
    c: 113,
    d: 114,
    e: 110,
  },
  t1Row {
    a: 115,
    b: 118,
    c: 119,
    d: 116,
    e: 117,
  },
  t1Row {
    a: 121,
    b: 124,
    c: 123,
    d: 122,
    e: 120,
  },
  t1Row {
    a: 127,
    b: 129,
    c: 125,
    d: 128,
    e: 126,
  },
  t1Row {
    a: 131,
    b: 130,
    c: 134,
    d: 133,
    e: 132,
  },
  t1Row {
    a: 138,
    b: 139,
    c: 137,
    d: 136,
    e: 135,
  },
  t1Row {
    a: 142,
    b: 143,
    c: 141,
    d: 140,
    e: 144,
  },
  t1Row {
    a: 149,
    b: 145,
    c: 147,
    d: 148,
    e: 146,
  },
  t1Row {
    a: 153,
    b: 151,
    c: 150,
    d: 154,
    e: 152,
  },
  t1Row {
    a: 159,
    b: 158,
    c: 155,
    d: 156,
    e: 157,
  },
  t1Row {
    a: 163,
    b: 160,
    c: 161,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 168,
    b: 167,
    c: 166,
    d: 169,
    e: 165,
  },
  t1Row {
    a: 174,
    b: 170,
    c: 172,
    d: 171,
    e: 173,
  },
  t1Row {
    a: 179,
    b: 175,
    c: 176,
    d: 178,
    e: 177,
  },
  t1Row {
    a: 182,
    b: 181,
    c: 184,
    d: 183,
    e: 180,
  },
  t1Row {
    a: 188,
    b: 186,
    c: 187,
    d: 185,
    e: 189,
  },
  t1Row {
    a: 191,
    b: 194,
    c: 193,
    d: 190,
    e: 192,
  },
  t1Row {
    a: 199,
    b: 198,
    c: 195,
    d: 196,
    e: 197,
  },
  t1Row {
    a: 201,
    b: 200,
    c: 202,
    d: 203,
    e: 204,
  },
  t1Row {
    a: 205,
    b: 206,
    c: 208,
    d: 207,
    e: 209,
  },
  t1Row {
    a: 213,
    b: 211,
    c: 214,
    d: 212,
    e: 210,
  },
  t1Row {
    a: 216,
    b: 218,
    c: 215,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 220,
    b: 223,
    c: 224,
    d: 222,
    e: 221,
  },
  t1Row {
    a: 229,
    b: 228,
    c: 225,
    d: 226,
    e: 227,
  },
  t1Row {
    a: 234,
    b: 232,
    c: 231,
    d: 233,
    e: 230,
  },
  t1Row {
    a: 239,
    b: 236,
    c: 235,
    d: 238,
    e: 237,
  },
  t1Row {
    a: 243,
    b: 240,
    c: 244,
    d: 241,
    e: 242,
  },
  t1Row {
    a: 245,
    b: 249,
    c: 247,
    d: 248,
    e: 246,
  },
]

/* SELECT e, CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222 WHEN a<b+3 THEN 333 ELSE 444 END, abs(a), c-d, CASE a+1 WHEN b THEN 111 WHEN c THEN 222 WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END, b, (a+b+c+d+e)/5 FROM t1 ORDER BY 6,7,5,4,1,3,2 */
let result = from row in t1
  order by [row.b, ((((((row.a + row.b) + row.c) + row.d) + row.e)) / 5), (if (row.a + 1) == row.b { 111 } else { (if (row.a + 1) == row.c { 222 } else { (if (row.a + 1) == row.d { 333 } else { (if (row.a + 1) == row.e { 444 } else { 555 }) }) }) }), (row.c - row.d), row.e, (if row.a < 0 { -(row.a) } else { row.a }), (if row.a < (row.b - 3) { 111 } else { (if row.a <= row.b { 222 } else { (if row.a < (row.b + 3) { 333 } else { 444 }) }) })]
  select [row.e, (if row.a < (row.b - 3) { 111 } else { (if row.a <= row.b { 222 } else { (if row.a < (row.b + 3) { 333 } else { 444 }) }) }), (if row.a < 0 { -(row.a) } else { row.a }), (row.c - row.d), (if (row.a + 1) == row.b { 111 } else { (if (row.a + 1) == row.c { 222 } else { (if (row.a + 1) == row.d { 333 } else { (if (row.a + 1) == row.e { 444 } else { 555 }) }) }) }), row.b, ((((((row.a + row.b) + row.c) + row.d) + row.e)) / 5)]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}
test "case877" {
  expect flatResult == [103, 444, 104, 1, 555, 100, 102, 109, 333, 107, -2, 333, 105, 107, 110, 222, 111, -1, 111, 112, 112, 117, 222, 115, 3, 333, 118, 117, 120, 222, 121, 1, 333, 124, 122, 126, 222, 127, -3, 333, 129, 127, 132, 333, 131, 1, 444, 130, 132, 135, 222, 138, 1, 111, 139, 137, 144, 222, 142, 1, 111, 143, 142, 146, 444, 149, -1, 555, 145, 147, 152, 333, 153, -4, 333, 151, 152, 157, 333, 159, -1, 555, 158, 157, 162, 444, 163, -3, 333, 160, 162, 165, 333, 168, -3, 333, 167, 167, 173, 444, 174, 1, 555, 170, 172, 177, 444, 179, -2, 555, 175, 177, 180, 333, 182, 1, 333, 181, 182, 189, 333, 188, 2, 444, 186, 187, 192, 222, 191, 3, 444, 194, 192, 197, 333, 199, -1, 555, 198, 197, 204, 333, 201, -1, 222, 200, 202, 209, 222, 205, 1, 111, 206, 207, 210, 333, 213, 2, 222, 211, 212, 219, 222, 216, -2, 333, 218, 217, 221, 222, 220, 2, 444, 223, 222, 227, 333, 229, -1, 555, 228, 227, 230, 333, 234, -2, 555, 232, 232, 237, 444, 239, -3, 555, 236, 237, 242, 444, 243, 3, 222, 240, 242, 246, 111, 245, -1, 444, 249, 247]
}

