/*
# line: 491
# TBD-EVIDENCE-OF: R-19553-64528 Total() never throws an integer overflow.
*/

type t1Row {
  x: int
  y: string
}

let t1 = [
  t1Row {
    x: 1,
    y: "true" + "",
  },
  t1Row {
    x: 0,
    y: "false" + "",
  },
  t1Row {
    x: null,
    y: "NULL",
  },
  t1Row {
    x: 2,
    y: "true" + "",
  },
  t1Row {
    x: 2,
    y: "true" + "",
  },
  t1Row {
    x: 4,
    y: "true" + "",
  },
  t1Row {
    x: null,
    y: "true" + "",
  },
  t1Row {
    x: null,
    y: "true" + "",
  },
  t1Row {
    x: -1,
    y: "true" + "",
  },
]

/* SELECT total(x) FROM t1 */
var result = sum(from row in t1
  where row.x != null
  select row.x)
result = if result == null then 0.0 else (result as float)
print(result)

test "case66" {
  expect result == 8
}
