/*
# line: 77
# EVIDENCE-OF: R-00171-59428 In such cases, duplicate elements are
# filtered before being passed into the aggregate function.
# EVIDENCE-OF: R-31453-41389 For example, the function "count(distinct
# X)" will return the number of distinct values of column X instead of
# the total number of non-null values in column X.
INSERT INTO t1 VALUES(2,'true')
INSERT INTO t1 VALUES(2,'true')
*/

type t1Row {
  x: int
  y: string
}

let t1 = [
  t1Row {
    x: 1,
    y: "true" + "",
  },
  t1Row {
    x: 0,
    y: "false" + "",
  },
  t1Row {
    x: null,
    y: "NULL",
  },
  t1Row {
    x: 2,
    y: "true" + "",
  },
  t1Row {
    x: 2,
    y: "true" + "",
  },
]

/* SELECT count(DISTINCT x) FROM t1 */
let result = count(from row in t1
  where row.x != null
  select row)
print(result)

test "case8" {
  expect result == 3
}
