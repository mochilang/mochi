/*
# line: 11737
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 104,
    b: 100,
    c: 102,
    d: 101,
    e: 103,
  },
  t1Row {
    a: 107,
    b: 105,
    c: 106,
    d: 108,
    e: 109,
  },
  t1Row {
    a: 111,
    b: 112,
    c: 113,
    d: 114,
    e: 110,
  },
  t1Row {
    a: 115,
    b: 118,
    c: 119,
    d: 116,
    e: 117,
  },
  t1Row {
    a: 121,
    b: 124,
    c: 123,
    d: 122,
    e: 120,
  },
  t1Row {
    a: 127,
    b: 129,
    c: 125,
    d: 128,
    e: 126,
  },
  t1Row {
    a: 131,
    b: 130,
    c: 134,
    d: 133,
    e: 132,
  },
  t1Row {
    a: 138,
    b: 139,
    c: 137,
    d: 136,
    e: 135,
  },
  t1Row {
    a: 142,
    b: 143,
    c: 141,
    d: 140,
    e: 144,
  },
  t1Row {
    a: 149,
    b: 145,
    c: 147,
    d: 148,
    e: 146,
  },
  t1Row {
    a: 153,
    b: 151,
    c: 150,
    d: 154,
    e: 152,
  },
  t1Row {
    a: 159,
    b: 158,
    c: 155,
    d: 156,
    e: 157,
  },
  t1Row {
    a: 163,
    b: 160,
    c: 161,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 168,
    b: 167,
    c: 166,
    d: 169,
    e: 165,
  },
  t1Row {
    a: 174,
    b: 170,
    c: 172,
    d: 171,
    e: 173,
  },
  t1Row {
    a: 179,
    b: 175,
    c: 176,
    d: 178,
    e: 177,
  },
  t1Row {
    a: 182,
    b: 181,
    c: 184,
    d: 183,
    e: 180,
  },
  t1Row {
    a: 188,
    b: 186,
    c: 187,
    d: 185,
    e: 189,
  },
  t1Row {
    a: 191,
    b: 194,
    c: 193,
    d: 190,
    e: 192,
  },
  t1Row {
    a: 199,
    b: 198,
    c: 195,
    d: 196,
    e: 197,
  },
  t1Row {
    a: 201,
    b: 200,
    c: 202,
    d: 203,
    e: 204,
  },
  t1Row {
    a: 205,
    b: 206,
    c: 208,
    d: 207,
    e: 209,
  },
  t1Row {
    a: 213,
    b: 211,
    c: 214,
    d: 212,
    e: 210,
  },
  t1Row {
    a: 216,
    b: 218,
    c: 215,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 220,
    b: 223,
    c: 224,
    d: 222,
    e: 221,
  },
  t1Row {
    a: 229,
    b: 228,
    c: 225,
    d: 226,
    e: 227,
  },
  t1Row {
    a: 234,
    b: 232,
    c: 231,
    d: 233,
    e: 230,
  },
  t1Row {
    a: 239,
    b: 236,
    c: 235,
    d: 238,
    e: 237,
  },
  t1Row {
    a: 243,
    b: 240,
    c: 244,
    d: 241,
    e: 242,
  },
  t1Row {
    a: 245,
    b: 249,
    c: 247,
    d: 248,
    e: 246,
  },
]

/* SELECT abs(a), CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END, a+b*2+c*3+d*4, e, d, a, b-c FROM t1 WHERE e+d BETWEEN a+b-10 AND c+130 OR (e>c OR e<d) ORDER BY 5,1,7,2,3,6,4 */
let sub0 = avg(from x in t1
  select x.c)

var result = from row in t1
  where (((row.e + row.d) >= ((row.a + row.b) - 10) && (row.e + row.d) <= (row.c + 130)) || ((row.e > row.c || row.e < row.d)))
  order by [row.d, (if row.a < 0 { -(row.a) } else { row.a }), (row.b - row.c), (if row.c > sub0 { (row.a * 2) } else { (row.b * 10) }), (((row.a + (row.b * 2)) + (row.c * 3)) + (row.d * 4)), row.a, row.e]
  select [(if row.a < 0 { -(row.a) } else { row.a }), (if row.c > sub0 { (row.a * 2) } else { (row.b * 10) }), (((row.a + (row.b * 2)) + (row.c * 3)) + (row.d * 4)), row.e, row.d, row.a, (row.b - row.c)]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}
test "case962" {
  expect flatResult == [104, 1000, 1014, 103, 101, 104, -2, 107, 1050, 1067, 109, 108, 107, -1, 111, 1120, 1130, 110, 114, 111, -1, 115, 1180, 1172, 117, 116, 115, -1, 121, 1240, 1226, 120, 122, 121, 1, 127, 1290, 1272, 126, 128, 127, 4, 131, 1300, 1325, 132, 133, 131, -4, 138, 1390, 1371, 135, 136, 138, 2, 142, 1430, 1411, 144, 140, 142, 2, 149, 1450, 1472, 146, 148, 149, -2, 153, 1510, 1521, 152, 154, 153, 1, 159, 1580, 1564, 157, 156, 159, 3, 163, 1600, 1622, 162, 164, 163, -1, 168, 1670, 1676, 165, 169, 168, 1, 174, 1700, 1714, 173, 171, 174, -2, 179, 358, 1769, 177, 178, 179, -1, 182, 364, 1828, 180, 183, 182, -3, 188, 376, 1861, 189, 185, 188, -1, 199, 398, 1964, 197, 196, 199, 3, 201, 402, 2019, 204, 203, 201, -2, 205, 410, 2069, 209, 207, 205, -2, 213, 426, 2125, 210, 212, 213, -3, 216, 432, 2165, 219, 217, 216, 3, 220, 440, 2226, 221, 222, 220, -1, 229, 458, 2264, 227, 226, 229, 3, 234, 468, 2323, 230, 233, 234, 1, 239, 478, 2368, 237, 238, 239, 1, 245, 490, 2476, 246, 248, 245, 2]
}

