/*
# line: 322
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 103,
    b: 102,
    c: 100,
    d: 101,
    e: 104,
  },
  t1Row {
    a: 107,
    b: 106,
    c: 108,
    d: 109,
    e: 105,
  },
  t1Row {
    a: 110,
    b: 114,
    c: 112,
    d: 111,
    e: 113,
  },
  t1Row {
    a: 116,
    b: 119,
    c: 117,
    d: 115,
    e: 118,
  },
  t1Row {
    a: 123,
    b: 122,
    c: 124,
    d: 120,
    e: 121,
  },
  t1Row {
    a: 127,
    b: 128,
    c: 129,
    d: 126,
    e: 125,
  },
  t1Row {
    a: 132,
    b: 134,
    c: 131,
    d: 133,
    e: 130,
  },
  t1Row {
    a: 138,
    b: 136,
    c: 139,
    d: 135,
    e: 137,
  },
  t1Row {
    a: 144,
    b: 141,
    c: 140,
    d: 142,
    e: 143,
  },
  t1Row {
    a: 145,
    b: 149,
    c: 146,
    d: 148,
    e: 147,
  },
  t1Row {
    a: 151,
    b: 150,
    c: 153,
    d: 154,
    e: 152,
  },
  t1Row {
    a: 155,
    b: 157,
    c: 159,
    d: 156,
    e: 158,
  },
  t1Row {
    a: 161,
    b: 160,
    c: 163,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 167,
    b: 169,
    c: 168,
    d: 165,
    e: 166,
  },
  t1Row {
    a: 171,
    b: 170,
    c: 172,
    d: 173,
    e: 174,
  },
  t1Row {
    a: 177,
    b: 176,
    c: 179,
    d: 178,
    e: 175,
  },
  t1Row {
    a: 181,
    b: 180,
    c: 182,
    d: 183,
    e: 184,
  },
  t1Row {
    a: 187,
    b: 188,
    c: 186,
    d: 189,
    e: 185,
  },
  t1Row {
    a: 190,
    b: 194,
    c: 193,
    d: 192,
    e: 191,
  },
  t1Row {
    a: 199,
    b: 197,
    c: 198,
    d: 196,
    e: 195,
  },
  t1Row {
    a: 200,
    b: 202,
    c: 203,
    d: 201,
    e: 204,
  },
  t1Row {
    a: 208,
    b: 209,
    c: 205,
    d: 206,
    e: 207,
  },
  t1Row {
    a: 214,
    b: 210,
    c: 213,
    d: 212,
    e: 211,
  },
  t1Row {
    a: 218,
    b: 215,
    c: 216,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 223,
    b: 221,
    c: 222,
    d: 220,
    e: 224,
  },
  t1Row {
    a: 226,
    b: 227,
    c: 228,
    d: 229,
    e: 225,
  },
  t1Row {
    a: 234,
    b: 231,
    c: 232,
    d: 230,
    e: 233,
  },
  t1Row {
    a: 237,
    b: 236,
    c: 239,
    d: 235,
    e: 238,
  },
  t1Row {
    a: 242,
    b: 244,
    c: 240,
    d: 243,
    e: 241,
  },
  t1Row {
    a: 246,
    b: 248,
    c: 247,
    d: 249,
    e: 245,
  },
]

/* SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222 WHEN a<b+3 THEN 333 ELSE 444 END, c, (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b), b-c, b, CASE a+1 WHEN b THEN 111 WHEN c THEN 222 WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END, a+b*2 FROM t1 ORDER BY 4,3,5,1,6,2,7 */
let result = from row in t1
  order by [row.b - row.c, count(from x in t1
  where x.b < row.b
  select x), row.b, (if row.a < row.b - 3 { 111 } else { (if row.a <= row.b { 222 } else { (if row.a < row.b + 3 { 333 } else { 444 }) }) }), (if row.a + 1 == row.b { 111 } else { (if row.a + 1 == row.c { 222 } else { (if row.a + 1 == row.d { 333 } else { (if row.a + 1 == row.e { 444 } else { 555 }) }) }) }), row.c, row.a + row.b * 2]
  select [(if row.a < row.b - 3 { 111 } else { (if row.a <= row.b { 222 } else { (if row.a < row.b + 3 { 333 } else { 444 }) }) }), row.c, count(from x in t1
  where x.b < row.b
  select x), row.b - row.c, row.b, (if row.a + 1 == row.b { 111 } else { (if row.a + 1 == row.c { 222 } else { (if row.a + 1 == row.d { 333 } else { (if row.a + 1 == row.e { 444 } else { 555 }) }) }) }), row.a + row.b * 2]
test "case19" {
  var flatResult = []
  for row in result {
    for x in row {
      flatResult = append(flatResult, x)
    }
  }
  for x in flatResult {
    print(x)
  }
  expect flatResult == [333, 139, 7, -3, 136, 222, 410, 333, 153, 10, -3, 150, 444, 451, 333, 163, 12, -3, 160, 444, 481, 333, 179, 15, -3, 176, 333, 529, 444, 213, 22, -3, 210, 555, 634, 333, 239, 27, -3, 236, 444, 709, 333, 108, 1, -2, 106, 222, 319, 333, 124, 4, -2, 122, 222, 367, 222, 159, 11, -2, 157, 333, 469, 333, 172, 14, -2, 170, 222, 511, 333, 182, 16, -2, 180, 222, 541, 222, 129, 5, -1, 128, 111, 383, 333, 198, 19, -1, 197, 555, 593, 222, 203, 20, -1, 202, 333, 604, 444, 216, 23, -1, 215, 444, 648, 333, 222, 24, -1, 221, 444, 665, 222, 228, 25, -1, 227, 111, 680, 444, 232, 26, -1, 231, 555, 696, 444, 140, 8, 1, 141, 555, 426, 222, 168, 13, 1, 169, 222, 505, 111, 193, 18, 1, 194, 444, 578, 222, 247, 29, 1, 248, 222, 742, 333, 100, 0, 2, 102, 444, 307, 111, 112, 2, 2, 114, 333, 338, 222, 117, 3, 2, 119, 222, 354, 222, 186, 17, 2, 188, 111, 563, 222, 131, 6, 3, 134, 333, 400, 111, 146, 9, 3, 149, 222, 443, 222, 205, 21, 4, 209, 111, 626, 222, 240, 28, 4, 244, 333, 730]
}
