/*
# line: 2884
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 104,
    b: 100,
    c: 102,
    d: 101,
    e: 103,
  },
  t1Row {
    a: 107,
    b: 105,
    c: 106,
    d: 108,
    e: 109,
  },
  t1Row {
    a: 111,
    b: 112,
    c: 113,
    d: 114,
    e: 110,
  },
  t1Row {
    a: 115,
    b: 118,
    c: 119,
    d: 116,
    e: 117,
  },
  t1Row {
    a: 121,
    b: 124,
    c: 123,
    d: 122,
    e: 120,
  },
  t1Row {
    a: 127,
    b: 129,
    c: 125,
    d: 128,
    e: 126,
  },
  t1Row {
    a: 131,
    b: 130,
    c: 134,
    d: 133,
    e: 132,
  },
  t1Row {
    a: 138,
    b: 139,
    c: 137,
    d: 136,
    e: 135,
  },
  t1Row {
    a: 142,
    b: 143,
    c: 141,
    d: 140,
    e: 144,
  },
  t1Row {
    a: 149,
    b: 145,
    c: 147,
    d: 148,
    e: 146,
  },
  t1Row {
    a: 153,
    b: 151,
    c: 150,
    d: 154,
    e: 152,
  },
  t1Row {
    a: 159,
    b: 158,
    c: 155,
    d: 156,
    e: 157,
  },
  t1Row {
    a: 163,
    b: 160,
    c: 161,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 168,
    b: 167,
    c: 166,
    d: 169,
    e: 165,
  },
  t1Row {
    a: 174,
    b: 170,
    c: 172,
    d: 171,
    e: 173,
  },
  t1Row {
    a: 179,
    b: 175,
    c: 176,
    d: 178,
    e: 177,
  },
  t1Row {
    a: 182,
    b: 181,
    c: 184,
    d: 183,
    e: 180,
  },
  t1Row {
    a: 188,
    b: 186,
    c: 187,
    d: 185,
    e: 189,
  },
  t1Row {
    a: 191,
    b: 194,
    c: 193,
    d: 190,
    e: 192,
  },
  t1Row {
    a: 199,
    b: 198,
    c: 195,
    d: 196,
    e: 197,
  },
  t1Row {
    a: 201,
    b: 200,
    c: 202,
    d: 203,
    e: 204,
  },
  t1Row {
    a: 205,
    b: 206,
    c: 208,
    d: 207,
    e: 209,
  },
  t1Row {
    a: 213,
    b: 211,
    c: 214,
    d: 212,
    e: 210,
  },
  t1Row {
    a: 216,
    b: 218,
    c: 215,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 220,
    b: 223,
    c: 224,
    d: 222,
    e: 221,
  },
  t1Row {
    a: 229,
    b: 228,
    c: 225,
    d: 226,
    e: 227,
  },
  t1Row {
    a: 234,
    b: 232,
    c: 231,
    d: 233,
    e: 230,
  },
  t1Row {
    a: 239,
    b: 236,
    c: 235,
    d: 238,
    e: 237,
  },
  t1Row {
    a: 243,
    b: 240,
    c: 244,
    d: 241,
    e: 242,
  },
  t1Row {
    a: 245,
    b: 249,
    c: 247,
    d: 248,
    e: 246,
  },
]

/* SELECT c-d, (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d), abs(a), d-e, b, abs(b-c), a+b*2+c*3 FROM t1 ORDER BY 6,1,4,2,5,3,7 */
var result = from row in t1
  order by [(if (row.b - row.c) < 0 { -((row.b - row.c)) } else { (row.b - row.c) }), (row.c - row.d), (row.d - row.e), count(from x in t1
  where (x.c > row.c && x.d < row.d)
  select x), row.b, (if row.a < 0 { -(row.a) } else { row.a }), ((row.a + (row.b * 2)) + (row.c * 3))]
  select [(row.c - row.d), count(from x in t1
  where (x.c > row.c && x.d < row.d)
  select x), (if row.a < 0 { -(row.a) } else { row.a }), (row.d - row.e), row.b, (if (row.b - row.c) < 0 { -((row.b - row.c)) } else { (row.b - row.c) }), ((row.a + (row.b * 2)) + (row.c * 3))]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}
test "case224" {
  expect flatResult == [-4, 0, 153, 2, 151, 1, 905, -3, 0, 239, 1, 236, 1, 1416, -3, 0, 163, 2, 160, 1, 966, -3, 0, 168, 4, 167, 1, 1000, -2, 0, 107, -1, 105, 1, 635, -2, 0, 179, 1, 175, 1, 1057, -2, 0, 234, 3, 232, 1, 1391, -1, 0, 111, 4, 112, 1, 674, 1, 0, 121, 2, 124, 1, 738, 2, 0, 188, -4, 186, 1, 1121, 2, 0, 220, 1, 223, 1, 1338, 3, 0, 191, -2, 194, 1, 1158, 3, 0, 115, -1, 118, 1, 708, -1, 0, 201, -1, 200, 2, 1207, -1, 0, 149, 2, 145, 2, 880, -1, 0, 245, 2, 249, 2, 1484, 1, 0, 142, -4, 143, 2, 851, 1, 0, 104, -2, 100, 2, 610, 1, 0, 174, -2, 170, 2, 1030, 1, 0, 205, -2, 206, 2, 1241, 1, 0, 138, 1, 139, 2, 827, -2, 0, 216, -2, 218, 3, 1297, -1, 0, 159, -1, 158, 3, 940, -1, 0, 199, -1, 198, 3, 1180, -1, 0, 229, -1, 228, 3, 1360, 1, 0, 182, 3, 181, 3, 1096, 2, 0, 213, 2, 211, 3, 1277, -3, 0, 127, 2, 129, 4, 760, 1, 0, 131, 1, 130, 4, 793, 3, 0, 243, -1, 240, 4, 1455]
}

