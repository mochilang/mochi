/*
# line: 4027
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 104,
    b: 100,
    c: 102,
    d: 101,
    e: 103,
  },
  t1Row {
    a: 107,
    b: 105,
    c: 106,
    d: 108,
    e: 109,
  },
  t1Row {
    a: 111,
    b: 112,
    c: 113,
    d: 114,
    e: 110,
  },
  t1Row {
    a: 115,
    b: 118,
    c: 119,
    d: 116,
    e: 117,
  },
  t1Row {
    a: 121,
    b: 124,
    c: 123,
    d: 122,
    e: 120,
  },
  t1Row {
    a: 127,
    b: 129,
    c: 125,
    d: 128,
    e: 126,
  },
  t1Row {
    a: 131,
    b: 130,
    c: 134,
    d: 133,
    e: 132,
  },
  t1Row {
    a: 138,
    b: 139,
    c: 137,
    d: 136,
    e: 135,
  },
  t1Row {
    a: 142,
    b: 143,
    c: 141,
    d: 140,
    e: 144,
  },
  t1Row {
    a: 149,
    b: 145,
    c: 147,
    d: 148,
    e: 146,
  },
  t1Row {
    a: 153,
    b: 151,
    c: 150,
    d: 154,
    e: 152,
  },
  t1Row {
    a: 159,
    b: 158,
    c: 155,
    d: 156,
    e: 157,
  },
  t1Row {
    a: 163,
    b: 160,
    c: 161,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 168,
    b: 167,
    c: 166,
    d: 169,
    e: 165,
  },
  t1Row {
    a: 174,
    b: 170,
    c: 172,
    d: 171,
    e: 173,
  },
  t1Row {
    a: 179,
    b: 175,
    c: 176,
    d: 178,
    e: 177,
  },
  t1Row {
    a: 182,
    b: 181,
    c: 184,
    d: 183,
    e: 180,
  },
  t1Row {
    a: 188,
    b: 186,
    c: 187,
    d: 185,
    e: 189,
  },
  t1Row {
    a: 191,
    b: 194,
    c: 193,
    d: 190,
    e: 192,
  },
  t1Row {
    a: 199,
    b: 198,
    c: 195,
    d: 196,
    e: 197,
  },
  t1Row {
    a: 201,
    b: 200,
    c: 202,
    d: 203,
    e: 204,
  },
  t1Row {
    a: 205,
    b: 206,
    c: 208,
    d: 207,
    e: 209,
  },
  t1Row {
    a: 213,
    b: 211,
    c: 214,
    d: 212,
    e: 210,
  },
  t1Row {
    a: 216,
    b: 218,
    c: 215,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 220,
    b: 223,
    c: 224,
    d: 222,
    e: 221,
  },
  t1Row {
    a: 229,
    b: 228,
    c: 225,
    d: 226,
    e: 227,
  },
  t1Row {
    a: 234,
    b: 232,
    c: 231,
    d: 233,
    e: 230,
  },
  t1Row {
    a: 239,
    b: 236,
    c: 235,
    d: 238,
    e: 237,
  },
  t1Row {
    a: 243,
    b: 240,
    c: 244,
    d: 241,
    e: 242,
  },
  t1Row {
    a: 245,
    b: 249,
    c: 247,
    d: 248,
    e: 246,
  },
]

/* SELECT a, (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b), abs(b-c), c, a-b, abs(a) FROM t1 ORDER BY 6,1,3,5,2,4 */
let result = from row in t1
  order by [(if row.a < 0 { -(row.a) } else { row.a }), row.a, (if (row.b - row.c) < 0 { -((row.b - row.c)) } else { (row.b - row.c) }), (row.a - row.b), count(from x in t1
  where x.b < row.b
  select x), row.c]
  select [row.a, count(from x in t1
  where x.b < row.b
  select x), (if (row.b - row.c) < 0 { -((row.b - row.c)) } else { (row.b - row.c) }), row.c, (row.a - row.b), (if row.a < 0 { -(row.a) } else { row.a })]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}
test "case319" {
  expect flatResult == [104, 0, 2, 102, 4, 104, 107, 1, 1, 106, 2, 107, 111, 2, 1, 113, -1, 111, 115, 3, 1, 119, -3, 115, 121, 4, 1, 123, -3, 121, 127, 5, 4, 125, -2, 127, 131, 6, 4, 134, 1, 131, 138, 7, 2, 137, -1, 138, 142, 8, 2, 141, -1, 142, 149, 9, 2, 147, 4, 149, 153, 10, 1, 150, 2, 153, 159, 11, 3, 155, 1, 159, 163, 12, 1, 161, 3, 163, 168, 13, 1, 166, 1, 168, 174, 14, 2, 172, 4, 174, 179, 15, 1, 176, 4, 179, 182, 16, 3, 184, 1, 182, 188, 17, 1, 187, 2, 188, 191, 18, 1, 193, -3, 191, 199, 19, 3, 195, 1, 199, 201, 20, 2, 202, 1, 201, 205, 21, 2, 208, -1, 205, 213, 22, 3, 214, 2, 213, 216, 23, 3, 215, -2, 216, 220, 24, 1, 224, -3, 220, 229, 25, 3, 225, 1, 229, 234, 26, 1, 231, 2, 234, 239, 27, 1, 235, 3, 239, 243, 28, 4, 244, 3, 243, 245, 29, 2, 247, -4, 245]
}

