/*
# line: 634
*/

type T1Row {
  a: int,
  b: int,
  c: int,
  d: int,
  e: int,
}

let t1: list<T1Row> = [
  {
    a: 103,
    b: 102,
    c: 100,
    d: 101,
    e: 104,
  },
  {
    a: 107,
    b: 106,
    c: 108,
    d: 109,
    e: 105,
  },
  {
    a: 110,
    b: 114,
    c: 112,
    d: 111,
    e: 113,
  },
  {
    a: 116,
    b: 119,
    c: 117,
    d: 115,
    e: 118,
  },
  {
    a: 123,
    b: 122,
    c: 124,
    d: 120,
    e: 121,
  },
  {
    a: 127,
    b: 128,
    c: 129,
    d: 126,
    e: 125,
  },
  {
    a: 132,
    b: 134,
    c: 131,
    d: 133,
    e: 130,
  },
  {
    a: 138,
    b: 136,
    c: 139,
    d: 135,
    e: 137,
  },
  {
    a: 144,
    b: 141,
    c: 140,
    d: 142,
    e: 143,
  },
  {
    a: 145,
    b: 149,
    c: 146,
    d: 148,
    e: 147,
  },
  {
    a: 151,
    b: 150,
    c: 153,
    d: 154,
    e: 152,
  },
  {
    a: 155,
    b: 157,
    c: 159,
    d: 156,
    e: 158,
  },
  {
    a: 161,
    b: 160,
    c: 163,
    d: 164,
    e: 162,
  },
  {
    a: 167,
    b: 169,
    c: 168,
    d: 165,
    e: 166,
  },
  {
    a: 171,
    b: 170,
    c: 172,
    d: 173,
    e: 174,
  },
  {
    a: 177,
    b: 176,
    c: 179,
    d: 178,
    e: 175,
  },
  {
    a: 181,
    b: 180,
    c: 182,
    d: 183,
    e: 184,
  },
  {
    a: 187,
    b: 188,
    c: 186,
    d: 189,
    e: 185,
  },
  {
    a: 190,
    b: 194,
    c: 193,
    d: 192,
    e: 191,
  },
  {
    a: 199,
    b: 197,
    c: 198,
    d: 196,
    e: 195,
  },
  {
    a: 200,
    b: 202,
    c: 203,
    d: 201,
    e: 204,
  },
  {
    a: 208,
    b: 209,
    c: 205,
    d: 206,
    e: 207,
  },
  {
    a: 214,
    b: 210,
    c: 213,
    d: 212,
    e: 211,
  },
  {
    a: 218,
    b: 215,
    c: 216,
    d: 217,
    e: 219,
  },
  {
    a: 223,
    b: 221,
    c: 222,
    d: 220,
    e: 224,
  },
  {
    a: 226,
    b: 227,
    c: 228,
    d: 229,
    e: 225,
  },
  {
    a: 234,
    b: 231,
    c: 232,
    d: 230,
    e: 233,
  },
  {
    a: 237,
    b: 236,
    c: 239,
    d: 235,
    e: 238,
  },
  {
    a: 242,
    b: 244,
    c: 240,
    d: 243,
    e: 241,
  },
  {
    a: 246,
    b: 248,
    c: 247,
    d: 249,
    e: 245,
  },
]

/* SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222 WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END, (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d), d-e, b, (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b), a+b*2 FROM t1 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b) OR (a>b-2 AND a<b+2) ORDER BY 2,6,3,5,4,1 */
let result = from row in t1
  where (count(from x in t1
  where x["b"] < row["b"]
  select x) > 0 || ((row["a"] > row["b"] - 2 && row["a"] < row["b"] + 2)))
  order by count(from x in t1
  where (x["c"] > row["c"] && x["d"] < row["d"])
  select x), row["a"] + row["b"] * 2, row["d"] - row["e"], count(from x in t1
  where x["b"] < row["b"]
  select x), row["b"], (row["a"] + 1 == row["b"] ? 111 : (row["a"] + 1 == row["c"] ? 222 : (row["a"] + 1 == row["d"] ? 333 : (row["a"] + 1 == row["e"] ? 444 : 555))))
  select [(row["a"] + 1 == row["b"] ? 111 : (row["a"] + 1 == row["c"] ? 222 : (row["a"] + 1 == row["d"] ? 333 : (row["a"] + 1 == row["e"] ? 444 : 555)))), count(from x in t1
  where (x["c"] > row["c"] && x["d"] < row["d"])
  select x), row["d"] - row["e"], row["b"], count(from x in t1
  where x["b"] < row["b"]
  select x), row["a"] + row["b"] * 2]
let flatResult = from row in result
  from x in row
  select x
for x in flatResult {
  print(x)
}

test "case43" {
  expect flatResult == [444, 0, -3, 102, 0, 307, 222, 0, 4, 106, 1, 319, 333, 0, -2, 114, 2, 338, 222, 0, -3, 119, 3, 354, 222, 0, -1, 122, 4, 367, 111, 0, 1, 128, 5, 383, 333, 0, 3, 134, 6, 400, 222, 0, -2, 136, 7, 410, 555, 0, -1, 141, 8, 426, 222, 0, 1, 149, 9, 443, 444, 0, 2, 150, 10, 451, 333, 0, -2, 157, 11, 469, 444, 0, 2, 160, 12, 481, 222, 0, -1, 169, 13, 505, 222, 0, -1, 170, 14, 511, 333, 0, 3, 176, 15, 529, 222, 0, -1, 180, 16, 541, 111, 0, 4, 188, 17, 563, 444, 0, 1, 194, 18, 578, 555, 0, 1, 197, 19, 593, 333, 0, -3, 202, 20, 604, 111, 0, -1, 209, 21, 626, 555, 0, 1, 210, 22, 634, 444, 0, -2, 215, 23, 648, 444, 0, -4, 221, 24, 665, 111, 0, 4, 227, 25, 680, 555, 0, -3, 231, 26, 696, 444, 0, -3, 236, 27, 709, 333, 0, 2, 244, 28, 730, 222, 0, 4, 248, 29, 742]
}
