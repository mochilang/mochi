/*
# line: 11648
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 104,
    b: 100,
    c: 102,
    d: 101,
    e: 103,
  },
  t1Row {
    a: 107,
    b: 105,
    c: 106,
    d: 108,
    e: 109,
  },
  t1Row {
    a: 111,
    b: 112,
    c: 113,
    d: 114,
    e: 110,
  },
  t1Row {
    a: 115,
    b: 118,
    c: 119,
    d: 116,
    e: 117,
  },
  t1Row {
    a: 121,
    b: 124,
    c: 123,
    d: 122,
    e: 120,
  },
  t1Row {
    a: 127,
    b: 129,
    c: 125,
    d: 128,
    e: 126,
  },
  t1Row {
    a: 131,
    b: 130,
    c: 134,
    d: 133,
    e: 132,
  },
  t1Row {
    a: 138,
    b: 139,
    c: 137,
    d: 136,
    e: 135,
  },
  t1Row {
    a: 142,
    b: 143,
    c: 141,
    d: 140,
    e: 144,
  },
  t1Row {
    a: 149,
    b: 145,
    c: 147,
    d: 148,
    e: 146,
  },
  t1Row {
    a: 153,
    b: 151,
    c: 150,
    d: 154,
    e: 152,
  },
  t1Row {
    a: 159,
    b: 158,
    c: 155,
    d: 156,
    e: 157,
  },
  t1Row {
    a: 163,
    b: 160,
    c: 161,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 168,
    b: 167,
    c: 166,
    d: 169,
    e: 165,
  },
  t1Row {
    a: 174,
    b: 170,
    c: 172,
    d: 171,
    e: 173,
  },
  t1Row {
    a: 179,
    b: 175,
    c: 176,
    d: 178,
    e: 177,
  },
  t1Row {
    a: 182,
    b: 181,
    c: 184,
    d: 183,
    e: 180,
  },
  t1Row {
    a: 188,
    b: 186,
    c: 187,
    d: 185,
    e: 189,
  },
  t1Row {
    a: 191,
    b: 194,
    c: 193,
    d: 190,
    e: 192,
  },
  t1Row {
    a: 199,
    b: 198,
    c: 195,
    d: 196,
    e: 197,
  },
  t1Row {
    a: 201,
    b: 200,
    c: 202,
    d: 203,
    e: 204,
  },
  t1Row {
    a: 205,
    b: 206,
    c: 208,
    d: 207,
    e: 209,
  },
  t1Row {
    a: 213,
    b: 211,
    c: 214,
    d: 212,
    e: 210,
  },
  t1Row {
    a: 216,
    b: 218,
    c: 215,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 220,
    b: 223,
    c: 224,
    d: 222,
    e: 221,
  },
  t1Row {
    a: 229,
    b: 228,
    c: 225,
    d: 226,
    e: 227,
  },
  t1Row {
    a: 234,
    b: 232,
    c: 231,
    d: 233,
    e: 230,
  },
  t1Row {
    a: 239,
    b: 236,
    c: 235,
    d: 238,
    e: 237,
  },
  t1Row {
    a: 243,
    b: 240,
    c: 244,
    d: 241,
    e: 242,
  },
  t1Row {
    a: 245,
    b: 249,
    c: 247,
    d: 248,
    e: 246,
  },
]

/* SELECT abs(a), e, a-b, a, CASE a+1 WHEN b THEN 111 WHEN c THEN 222 WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END, d-e FROM t1 WHERE a>b OR d NOT BETWEEN 110 AND 150 OR b>c ORDER BY 4,6,1,2,3,5 */
var result = from row in t1
  where row.a > row.b || (row.d < 110 || row.d > 150) || row.b > row.c
  order by [row.a, row.d - row.e, if row.a < 0 then -(row.a) else row.a, row.e, row.a - row.b, if (row.a + 1 != null && row.b != null && row.a + 1 == row.b) then 111 else if (row.a + 1 != null && row.c != null && row.a + 1 == row.c) then 222 else if (row.a + 1 != null && row.d != null && row.a + 1 == row.d) then 333 else if (row.a + 1 != null && row.e != null && row.a + 1 == row.e) then 444 else 555]
  select [if row.a < 0 then -(row.a) else row.a, row.e, row.a - row.b, row.a, if (row.a + 1 != null && row.b != null && row.a + 1 == row.b) then 111 else if (row.a + 1 != null && row.c != null && row.a + 1 == row.c) then 222 else if (row.a + 1 != null && row.d != null && row.a + 1 == row.d) then 333 else if (row.a + 1 != null && row.e != null && row.a + 1 == row.e) then 444 else 555, row.d - row.e]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}
test "case955" {
  expect flatResult == [104, 103, 4, 104, 555, -2, 107, 109, 2, 107, 333, -1, 121, 120, -3, 121, 333, 2, 127, 126, -2, 127, 333, 2, 131, 132, 1, 131, 444, 1, 138, 135, -1, 138, 111, 1, 142, 144, -1, 142, 111, -4, 149, 146, 4, 149, 555, 2, 153, 152, 2, 153, 333, 2, 159, 157, 1, 159, 555, -1, 163, 162, 3, 163, 333, 2, 168, 165, 1, 168, 333, 4, 174, 173, 4, 174, 555, -2, 179, 177, 4, 179, 555, 1, 182, 180, 1, 182, 333, 3, 188, 189, 2, 188, 444, -4, 191, 192, -3, 191, 444, -2, 199, 197, 1, 199, 555, -1, 201, 204, 1, 201, 222, -1, 205, 209, -1, 205, 111, -2, 213, 210, 2, 213, 222, 2, 216, 219, -2, 216, 333, -2, 220, 221, -3, 220, 444, 1, 229, 227, 1, 229, 555, -1, 234, 230, 2, 234, 555, 3, 239, 237, 3, 239, 555, 1, 243, 242, 3, 243, 222, -1, 245, 246, -4, 245, 444, 2]
}

