/*
# line: 1282
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 104,
    b: 100,
    c: 102,
    d: 101,
    e: 103,
  },
  t1Row {
    a: 107,
    b: 105,
    c: 106,
    d: 108,
    e: 109,
  },
  t1Row {
    a: 111,
    b: 112,
    c: 113,
    d: 114,
    e: 110,
  },
  t1Row {
    a: 115,
    b: 118,
    c: 119,
    d: 116,
    e: 117,
  },
  t1Row {
    a: 121,
    b: 124,
    c: 123,
    d: 122,
    e: 120,
  },
  t1Row {
    a: 127,
    b: 129,
    c: 125,
    d: 128,
    e: 126,
  },
  t1Row {
    a: 131,
    b: 130,
    c: 134,
    d: 133,
    e: 132,
  },
  t1Row {
    a: 138,
    b: 139,
    c: 137,
    d: 136,
    e: 135,
  },
  t1Row {
    a: 142,
    b: 143,
    c: 141,
    d: 140,
    e: 144,
  },
  t1Row {
    a: 149,
    b: 145,
    c: 147,
    d: 148,
    e: 146,
  },
  t1Row {
    a: 153,
    b: 151,
    c: 150,
    d: 154,
    e: 152,
  },
  t1Row {
    a: 159,
    b: 158,
    c: 155,
    d: 156,
    e: 157,
  },
  t1Row {
    a: 163,
    b: 160,
    c: 161,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 168,
    b: 167,
    c: 166,
    d: 169,
    e: 165,
  },
  t1Row {
    a: 174,
    b: 170,
    c: 172,
    d: 171,
    e: 173,
  },
  t1Row {
    a: 179,
    b: 175,
    c: 176,
    d: 178,
    e: 177,
  },
  t1Row {
    a: 182,
    b: 181,
    c: 184,
    d: 183,
    e: 180,
  },
  t1Row {
    a: 188,
    b: 186,
    c: 187,
    d: 185,
    e: 189,
  },
  t1Row {
    a: 191,
    b: 194,
    c: 193,
    d: 190,
    e: 192,
  },
  t1Row {
    a: 199,
    b: 198,
    c: 195,
    d: 196,
    e: 197,
  },
  t1Row {
    a: 201,
    b: 200,
    c: 202,
    d: 203,
    e: 204,
  },
  t1Row {
    a: 205,
    b: 206,
    c: 208,
    d: 207,
    e: 209,
  },
  t1Row {
    a: 213,
    b: 211,
    c: 214,
    d: 212,
    e: 210,
  },
  t1Row {
    a: 216,
    b: 218,
    c: 215,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 220,
    b: 223,
    c: 224,
    d: 222,
    e: 221,
  },
  t1Row {
    a: 229,
    b: 228,
    c: 225,
    d: 226,
    e: 227,
  },
  t1Row {
    a: 234,
    b: 232,
    c: 231,
    d: 233,
    e: 230,
  },
  t1Row {
    a: 239,
    b: 236,
    c: 235,
    d: 238,
    e: 237,
  },
  t1Row {
    a: 243,
    b: 240,
    c: 244,
    d: 241,
    e: 242,
  },
  t1Row {
    a: 245,
    b: 249,
    c: 247,
    d: 248,
    e: 246,
  },
]

/* SELECT a+b*2+c*3+d*4, c, CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222 WHEN a<b+3 THEN 333 ELSE 444 END, (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b), a+b*2+c*3, a+b*2, d-e FROM t1 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b) ORDER BY 1,3,7,2,5,6,4 */
var result = from row in t1
  where count(from x in t1
  where x.b < row.b
  select x) > 0
  order by [row.a + row.b * 2 + row.c * 3 + row.d * 4, if row.a < row.b - 3 then 111 else if row.a <= row.b then 222 else if row.a < row.b + 3 then 333 else 444, row.d - row.e, row.c, row.a + row.b * 2 + row.c * 3, row.a + row.b * 2, count(from x in t1
  where x.b < row.b
  select x)]
  select [row.a + row.b * 2 + row.c * 3 + row.d * 4, row.c, if row.a < row.b - 3 then 111 else if row.a <= row.b then 222 else if row.a < row.b + 3 then 333 else 444, count(from x in t1
  where x.b < row.b
  select x), row.a + row.b * 2 + row.c * 3, row.a + row.b * 2, row.d - row.e]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}
test "case94" {
  expect flatResult == [1067, 106, 333, 1, 635, 317, -1, 1130, 113, 222, 2, 674, 335, 4, 1172, 119, 222, 3, 708, 351, -1, 1226, 123, 222, 4, 738, 369, 2, 1272, 125, 222, 5, 760, 385, 2, 1325, 134, 333, 6, 793, 391, 1, 1371, 137, 222, 7, 827, 416, 1, 1411, 141, 222, 8, 851, 428, -4, 1472, 147, 444, 9, 880, 439, 2, 1521, 150, 333, 10, 905, 455, 2, 1564, 155, 333, 11, 940, 475, -1, 1622, 161, 444, 12, 966, 483, 2, 1676, 166, 333, 13, 1000, 502, 4, 1714, 172, 444, 14, 1030, 514, -2, 1769, 176, 444, 15, 1057, 529, 1, 1828, 184, 333, 16, 1096, 544, 3, 1861, 187, 333, 17, 1121, 560, -4, 1918, 193, 222, 18, 1158, 579, -2, 1964, 195, 333, 19, 1180, 595, -1, 2019, 202, 333, 20, 1207, 601, -1, 2069, 208, 222, 21, 1241, 617, -2, 2125, 214, 333, 22, 1277, 635, 2, 2165, 215, 222, 23, 1297, 652, -2, 2226, 224, 222, 24, 1338, 666, 1, 2264, 225, 333, 25, 1360, 685, -1, 2323, 231, 333, 26, 1391, 698, 3, 2368, 235, 444, 27, 1416, 711, 1, 2419, 244, 444, 28, 1455, 723, -1, 2476, 247, 111, 29, 1484, 743, 2]
}

