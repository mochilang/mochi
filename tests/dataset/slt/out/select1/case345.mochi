/*
# line: 4341
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 104,
    b: 100,
    c: 102,
    d: 101,
    e: 103,
  },
  t1Row {
    a: 107,
    b: 105,
    c: 106,
    d: 108,
    e: 109,
  },
  t1Row {
    a: 111,
    b: 112,
    c: 113,
    d: 114,
    e: 110,
  },
  t1Row {
    a: 115,
    b: 118,
    c: 119,
    d: 116,
    e: 117,
  },
  t1Row {
    a: 121,
    b: 124,
    c: 123,
    d: 122,
    e: 120,
  },
  t1Row {
    a: 127,
    b: 129,
    c: 125,
    d: 128,
    e: 126,
  },
  t1Row {
    a: 131,
    b: 130,
    c: 134,
    d: 133,
    e: 132,
  },
  t1Row {
    a: 138,
    b: 139,
    c: 137,
    d: 136,
    e: 135,
  },
  t1Row {
    a: 142,
    b: 143,
    c: 141,
    d: 140,
    e: 144,
  },
  t1Row {
    a: 149,
    b: 145,
    c: 147,
    d: 148,
    e: 146,
  },
  t1Row {
    a: 153,
    b: 151,
    c: 150,
    d: 154,
    e: 152,
  },
  t1Row {
    a: 159,
    b: 158,
    c: 155,
    d: 156,
    e: 157,
  },
  t1Row {
    a: 163,
    b: 160,
    c: 161,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 168,
    b: 167,
    c: 166,
    d: 169,
    e: 165,
  },
  t1Row {
    a: 174,
    b: 170,
    c: 172,
    d: 171,
    e: 173,
  },
  t1Row {
    a: 179,
    b: 175,
    c: 176,
    d: 178,
    e: 177,
  },
  t1Row {
    a: 182,
    b: 181,
    c: 184,
    d: 183,
    e: 180,
  },
  t1Row {
    a: 188,
    b: 186,
    c: 187,
    d: 185,
    e: 189,
  },
  t1Row {
    a: 191,
    b: 194,
    c: 193,
    d: 190,
    e: 192,
  },
  t1Row {
    a: 199,
    b: 198,
    c: 195,
    d: 196,
    e: 197,
  },
  t1Row {
    a: 201,
    b: 200,
    c: 202,
    d: 203,
    e: 204,
  },
  t1Row {
    a: 205,
    b: 206,
    c: 208,
    d: 207,
    e: 209,
  },
  t1Row {
    a: 213,
    b: 211,
    c: 214,
    d: 212,
    e: 210,
  },
  t1Row {
    a: 216,
    b: 218,
    c: 215,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 220,
    b: 223,
    c: 224,
    d: 222,
    e: 221,
  },
  t1Row {
    a: 229,
    b: 228,
    c: 225,
    d: 226,
    e: 227,
  },
  t1Row {
    a: 234,
    b: 232,
    c: 231,
    d: 233,
    e: 230,
  },
  t1Row {
    a: 239,
    b: 236,
    c: 235,
    d: 238,
    e: 237,
  },
  t1Row {
    a: 243,
    b: 240,
    c: 244,
    d: 241,
    e: 242,
  },
  t1Row {
    a: 245,
    b: 249,
    c: 247,
    d: 248,
    e: 246,
  },
]

/* SELECT e, d-e, (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b), a+b*2, b, a+b*2+c*3 FROM t1 WHERE a>b OR (e>c OR e<d) ORDER BY 4,3,6,5,2,1 */
let result = from row in t1
  where (row.a > row.b || ((row.e > row.c || row.e < row.d)))
  order by [(row.a + (row.b * 2)), count(from x in t1
  where x.b < row.b
  select x), ((row.a + (row.b * 2)) + (row.c * 3)), row.b, (row.d - row.e), row.e]
  select [row.e, (row.d - row.e), count(from x in t1
  where x.b < row.b
  select x), (row.a + (row.b * 2)), row.b, ((row.a + (row.b * 2)) + (row.c * 3))]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}
test "case345" {
  expect flatResult == [103, -2, 0, 304, 100, 610, 109, -1, 1, 317, 105, 635, 110, 4, 2, 335, 112, 674, 120, 2, 4, 369, 124, 738, 126, 2, 5, 385, 129, 760, 132, 1, 6, 391, 130, 793, 135, 1, 7, 416, 139, 827, 144, -4, 8, 428, 143, 851, 146, 2, 9, 439, 145, 880, 152, 2, 10, 455, 151, 905, 157, -1, 11, 475, 158, 940, 162, 2, 12, 483, 160, 966, 165, 4, 13, 502, 167, 1000, 173, -2, 14, 514, 170, 1030, 177, 1, 15, 529, 175, 1057, 180, 3, 16, 544, 181, 1096, 189, -4, 17, 560, 186, 1121, 197, -1, 19, 595, 198, 1180, 204, -1, 20, 601, 200, 1207, 209, -2, 21, 617, 206, 1241, 210, 2, 22, 635, 211, 1277, 219, -2, 23, 652, 218, 1297, 221, 1, 24, 666, 223, 1338, 227, -1, 25, 685, 228, 1360, 230, 3, 26, 698, 232, 1391, 237, 1, 27, 711, 236, 1416, 242, -1, 28, 723, 240, 1455, 246, 2, 29, 743, 249, 1484]
}

