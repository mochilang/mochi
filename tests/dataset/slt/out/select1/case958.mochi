/*
# line: 11692
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 104,
    b: 100,
    c: 102,
    d: 101,
    e: 103,
  },
  t1Row {
    a: 107,
    b: 105,
    c: 106,
    d: 108,
    e: 109,
  },
  t1Row {
    a: 111,
    b: 112,
    c: 113,
    d: 114,
    e: 110,
  },
  t1Row {
    a: 115,
    b: 118,
    c: 119,
    d: 116,
    e: 117,
  },
  t1Row {
    a: 121,
    b: 124,
    c: 123,
    d: 122,
    e: 120,
  },
  t1Row {
    a: 127,
    b: 129,
    c: 125,
    d: 128,
    e: 126,
  },
  t1Row {
    a: 131,
    b: 130,
    c: 134,
    d: 133,
    e: 132,
  },
  t1Row {
    a: 138,
    b: 139,
    c: 137,
    d: 136,
    e: 135,
  },
  t1Row {
    a: 142,
    b: 143,
    c: 141,
    d: 140,
    e: 144,
  },
  t1Row {
    a: 149,
    b: 145,
    c: 147,
    d: 148,
    e: 146,
  },
  t1Row {
    a: 153,
    b: 151,
    c: 150,
    d: 154,
    e: 152,
  },
  t1Row {
    a: 159,
    b: 158,
    c: 155,
    d: 156,
    e: 157,
  },
  t1Row {
    a: 163,
    b: 160,
    c: 161,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 168,
    b: 167,
    c: 166,
    d: 169,
    e: 165,
  },
  t1Row {
    a: 174,
    b: 170,
    c: 172,
    d: 171,
    e: 173,
  },
  t1Row {
    a: 179,
    b: 175,
    c: 176,
    d: 178,
    e: 177,
  },
  t1Row {
    a: 182,
    b: 181,
    c: 184,
    d: 183,
    e: 180,
  },
  t1Row {
    a: 188,
    b: 186,
    c: 187,
    d: 185,
    e: 189,
  },
  t1Row {
    a: 191,
    b: 194,
    c: 193,
    d: 190,
    e: 192,
  },
  t1Row {
    a: 199,
    b: 198,
    c: 195,
    d: 196,
    e: 197,
  },
  t1Row {
    a: 201,
    b: 200,
    c: 202,
    d: 203,
    e: 204,
  },
  t1Row {
    a: 205,
    b: 206,
    c: 208,
    d: 207,
    e: 209,
  },
  t1Row {
    a: 213,
    b: 211,
    c: 214,
    d: 212,
    e: 210,
  },
  t1Row {
    a: 216,
    b: 218,
    c: 215,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 220,
    b: 223,
    c: 224,
    d: 222,
    e: 221,
  },
  t1Row {
    a: 229,
    b: 228,
    c: 225,
    d: 226,
    e: 227,
  },
  t1Row {
    a: 234,
    b: 232,
    c: 231,
    d: 233,
    e: 230,
  },
  t1Row {
    a: 239,
    b: 236,
    c: 235,
    d: 238,
    e: 237,
  },
  t1Row {
    a: 243,
    b: 240,
    c: 244,
    d: 241,
    e: 242,
  },
  t1Row {
    a: 245,
    b: 249,
    c: 247,
    d: 248,
    e: 246,
  },
]

/* SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END, abs(a), a+b*2, a, d-e FROM t1 WHERE (e>c OR e<d) OR (c<=d-2 OR c>=d+2) ORDER BY 4,2,3,5,1 */
let result = from row in t1
  where (((row.e > row.c || row.e < row.d)) || ((row.c <= row.d - 2 || row.c >= row.d + 2)))
  order by [row.a, (if row.a < 0 { -(row.a) } else { row.a }), row.a + row.b * 2, row.d - row.e, (if row.c > avg(from x in t1
  select x.c) { row.a * 2 } else { row.b * 10 })]
  select [(if row.c > avg(from x in t1
  select x.c) { row.a * 2 } else { row.b * 10 }), (if row.a < 0 { -(row.a) } else { row.a }), row.a + row.b * 2, row.a, row.d - row.e]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}
test "case958" {
  expect flatResult == [1000, 104, 304, 104, -2, 1050, 107, 317, 107, -1, 1120, 111, 335, 111, 4, 1180, 115, 351, 115, -1, 1240, 121, 369, 121, 2, 1290, 127, 385, 127, 2, 1300, 131, 391, 131, 1, 1390, 138, 416, 138, 1, 1430, 142, 428, 142, -4, 1450, 149, 439, 149, 2, 1510, 153, 455, 153, 2, 1580, 159, 475, 159, -1, 1600, 163, 483, 163, 2, 1670, 168, 502, 168, 4, 1700, 174, 514, 174, -2, 358, 179, 529, 179, 1, 364, 182, 544, 182, 3, 376, 188, 560, 188, -4, 382, 191, 579, 191, -2, 398, 199, 595, 199, -1, 402, 201, 601, 201, -1, 410, 205, 617, 205, -2, 426, 213, 635, 213, 2, 432, 216, 652, 216, -2, 440, 220, 666, 220, 1, 458, 229, 685, 229, -1, 468, 234, 698, 234, 3, 478, 239, 711, 239, 1, 486, 243, 723, 243, -1, 490, 245, 743, 245, 2]
}

