/*
# line: 9850
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 104,
    b: 100,
    c: 102,
    d: 101,
    e: 103,
  },
  t1Row {
    a: 107,
    b: 105,
    c: 106,
    d: 108,
    e: 109,
  },
  t1Row {
    a: 111,
    b: 112,
    c: 113,
    d: 114,
    e: 110,
  },
  t1Row {
    a: 115,
    b: 118,
    c: 119,
    d: 116,
    e: 117,
  },
  t1Row {
    a: 121,
    b: 124,
    c: 123,
    d: 122,
    e: 120,
  },
  t1Row {
    a: 127,
    b: 129,
    c: 125,
    d: 128,
    e: 126,
  },
  t1Row {
    a: 131,
    b: 130,
    c: 134,
    d: 133,
    e: 132,
  },
  t1Row {
    a: 138,
    b: 139,
    c: 137,
    d: 136,
    e: 135,
  },
  t1Row {
    a: 142,
    b: 143,
    c: 141,
    d: 140,
    e: 144,
  },
  t1Row {
    a: 149,
    b: 145,
    c: 147,
    d: 148,
    e: 146,
  },
  t1Row {
    a: 153,
    b: 151,
    c: 150,
    d: 154,
    e: 152,
  },
  t1Row {
    a: 159,
    b: 158,
    c: 155,
    d: 156,
    e: 157,
  },
  t1Row {
    a: 163,
    b: 160,
    c: 161,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 168,
    b: 167,
    c: 166,
    d: 169,
    e: 165,
  },
  t1Row {
    a: 174,
    b: 170,
    c: 172,
    d: 171,
    e: 173,
  },
  t1Row {
    a: 179,
    b: 175,
    c: 176,
    d: 178,
    e: 177,
  },
  t1Row {
    a: 182,
    b: 181,
    c: 184,
    d: 183,
    e: 180,
  },
  t1Row {
    a: 188,
    b: 186,
    c: 187,
    d: 185,
    e: 189,
  },
  t1Row {
    a: 191,
    b: 194,
    c: 193,
    d: 190,
    e: 192,
  },
  t1Row {
    a: 199,
    b: 198,
    c: 195,
    d: 196,
    e: 197,
  },
  t1Row {
    a: 201,
    b: 200,
    c: 202,
    d: 203,
    e: 204,
  },
  t1Row {
    a: 205,
    b: 206,
    c: 208,
    d: 207,
    e: 209,
  },
  t1Row {
    a: 213,
    b: 211,
    c: 214,
    d: 212,
    e: 210,
  },
  t1Row {
    a: 216,
    b: 218,
    c: 215,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 220,
    b: 223,
    c: 224,
    d: 222,
    e: 221,
  },
  t1Row {
    a: 229,
    b: 228,
    c: 225,
    d: 226,
    e: 227,
  },
  t1Row {
    a: 234,
    b: 232,
    c: 231,
    d: 233,
    e: 230,
  },
  t1Row {
    a: 239,
    b: 236,
    c: 235,
    d: 238,
    e: 237,
  },
  t1Row {
    a: 243,
    b: 240,
    c: 244,
    d: 241,
    e: 242,
  },
  t1Row {
    a: 245,
    b: 249,
    c: 247,
    d: 248,
    e: 246,
  },
]

/* SELECT b, (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b), a+b*2, abs(b-c), a+b*2+c*3, c-d, a FROM t1 ORDER BY 1,4,2,7,3,6,5 */
var result = from row in t1
  order by [row.b, if row.b - row.c < 0 then -(row.b - row.c) else row.b - row.c, count(from x in t1
  where x.b < row.b
  select x), row.a, row.a + row.b * 2, row.c - row.d, row.a + row.b * 2 + row.c * 3]
  select [row.b, count(from x in t1
  where x.b < row.b
  select x), row.a + row.b * 2, if row.b - row.c < 0 then -(row.b - row.c) else row.b - row.c, row.a + row.b * 2 + row.c * 3, row.c - row.d, row.a]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}
test "case808" {
  expect flatResult == [100, 0, 304, 2, 610, 1, 104, 105, 1, 317, 1, 635, -2, 107, 112, 2, 335, 1, 674, -1, 111, 118, 3, 351, 1, 708, 3, 115, 124, 4, 369, 1, 738, 1, 121, 129, 5, 385, 4, 760, -3, 127, 130, 6, 391, 4, 793, 1, 131, 139, 7, 416, 2, 827, 1, 138, 143, 8, 428, 2, 851, 1, 142, 145, 9, 439, 2, 880, -1, 149, 151, 10, 455, 1, 905, -4, 153, 158, 11, 475, 3, 940, -1, 159, 160, 12, 483, 1, 966, -3, 163, 167, 13, 502, 1, 1000, -3, 168, 170, 14, 514, 2, 1030, 1, 174, 175, 15, 529, 1, 1057, -2, 179, 181, 16, 544, 3, 1096, 1, 182, 186, 17, 560, 1, 1121, 2, 188, 194, 18, 579, 1, 1158, 3, 191, 198, 19, 595, 3, 1180, -1, 199, 200, 20, 601, 2, 1207, -1, 201, 206, 21, 617, 2, 1241, 1, 205, 211, 22, 635, 3, 1277, 2, 213, 218, 23, 652, 3, 1297, -2, 216, 223, 24, 666, 1, 1338, 2, 220, 228, 25, 685, 3, 1360, -1, 229, 232, 26, 698, 1, 1391, -2, 234, 236, 27, 711, 1, 1416, -3, 239, 240, 28, 723, 4, 1455, 3, 243, 249, 29, 743, 2, 1484, -1, 245]
}

