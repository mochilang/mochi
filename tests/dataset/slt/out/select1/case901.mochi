/*
# line: 10985
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 104,
    b: 100,
    c: 102,
    d: 101,
    e: 103,
  },
  t1Row {
    a: 107,
    b: 105,
    c: 106,
    d: 108,
    e: 109,
  },
  t1Row {
    a: 111,
    b: 112,
    c: 113,
    d: 114,
    e: 110,
  },
  t1Row {
    a: 115,
    b: 118,
    c: 119,
    d: 116,
    e: 117,
  },
  t1Row {
    a: 121,
    b: 124,
    c: 123,
    d: 122,
    e: 120,
  },
  t1Row {
    a: 127,
    b: 129,
    c: 125,
    d: 128,
    e: 126,
  },
  t1Row {
    a: 131,
    b: 130,
    c: 134,
    d: 133,
    e: 132,
  },
  t1Row {
    a: 138,
    b: 139,
    c: 137,
    d: 136,
    e: 135,
  },
  t1Row {
    a: 142,
    b: 143,
    c: 141,
    d: 140,
    e: 144,
  },
  t1Row {
    a: 149,
    b: 145,
    c: 147,
    d: 148,
    e: 146,
  },
  t1Row {
    a: 153,
    b: 151,
    c: 150,
    d: 154,
    e: 152,
  },
  t1Row {
    a: 159,
    b: 158,
    c: 155,
    d: 156,
    e: 157,
  },
  t1Row {
    a: 163,
    b: 160,
    c: 161,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 168,
    b: 167,
    c: 166,
    d: 169,
    e: 165,
  },
  t1Row {
    a: 174,
    b: 170,
    c: 172,
    d: 171,
    e: 173,
  },
  t1Row {
    a: 179,
    b: 175,
    c: 176,
    d: 178,
    e: 177,
  },
  t1Row {
    a: 182,
    b: 181,
    c: 184,
    d: 183,
    e: 180,
  },
  t1Row {
    a: 188,
    b: 186,
    c: 187,
    d: 185,
    e: 189,
  },
  t1Row {
    a: 191,
    b: 194,
    c: 193,
    d: 190,
    e: 192,
  },
  t1Row {
    a: 199,
    b: 198,
    c: 195,
    d: 196,
    e: 197,
  },
  t1Row {
    a: 201,
    b: 200,
    c: 202,
    d: 203,
    e: 204,
  },
  t1Row {
    a: 205,
    b: 206,
    c: 208,
    d: 207,
    e: 209,
  },
  t1Row {
    a: 213,
    b: 211,
    c: 214,
    d: 212,
    e: 210,
  },
  t1Row {
    a: 216,
    b: 218,
    c: 215,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 220,
    b: 223,
    c: 224,
    d: 222,
    e: 221,
  },
  t1Row {
    a: 229,
    b: 228,
    c: 225,
    d: 226,
    e: 227,
  },
  t1Row {
    a: 234,
    b: 232,
    c: 231,
    d: 233,
    e: 230,
  },
  t1Row {
    a: 239,
    b: 236,
    c: 235,
    d: 238,
    e: 237,
  },
  t1Row {
    a: 243,
    b: 240,
    c: 244,
    d: 241,
    e: 242,
  },
  t1Row {
    a: 245,
    b: 249,
    c: 247,
    d: 248,
    e: 246,
  },
]

/* SELECT abs(b-c), e, a-b, d-e, (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b), a, b FROM t1 WHERE b>c OR c>d OR e+d BETWEEN a+b-10 AND c+130 ORDER BY 6,5,7,2,3,1,4 */
let result = from row in t1
  where ((row.b > row.c || row.c > row.d) || (row.e + row.d >= row.a + row.b - 10 && row.e + row.d <= row.c + 130))
  order by [row.a, count(from x in t1
  where x.b < row.b
  select x), row.b, row.e, row.a - row.b, (if row.b - row.c < 0 { -(row.b - row.c) } else { row.b - row.c }), row.d - row.e]
  select [(if row.b - row.c < 0 { -(row.b - row.c) } else { row.b - row.c }), row.e, row.a - row.b, row.d - row.e, count(from x in t1
  where x.b < row.b
  select x), row.a, row.b]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}
test "case901" {
  expect flatResult == [2, 103, 4, -2, 0, 104, 100, 1, 109, 2, -1, 1, 107, 105, 1, 110, -1, 4, 2, 111, 112, 1, 117, -3, -1, 3, 115, 118, 1, 120, -3, 2, 4, 121, 124, 4, 126, -2, 2, 5, 127, 129, 4, 132, 1, 1, 6, 131, 130, 2, 135, -1, 1, 7, 138, 139, 2, 144, -1, -4, 8, 142, 143, 1, 152, 2, 2, 10, 153, 151, 3, 157, 1, -1, 11, 159, 158, 1, 165, 1, 4, 13, 168, 167, 2, 173, 4, -2, 14, 174, 170, 3, 180, 1, 3, 16, 182, 181, 1, 189, 2, -4, 17, 188, 186, 1, 192, -3, -2, 18, 191, 194, 3, 197, 1, -1, 19, 199, 198, 2, 209, -1, -2, 21, 205, 206, 3, 210, 2, 2, 22, 213, 211, 3, 219, -2, -2, 23, 216, 218, 1, 221, -3, 1, 24, 220, 223, 3, 227, 1, -1, 25, 229, 228, 1, 230, 2, 3, 26, 234, 232, 1, 237, 3, 1, 27, 239, 236, 4, 242, 3, -1, 28, 243, 240, 2, 246, -4, 2, 29, 245, 249]
}

