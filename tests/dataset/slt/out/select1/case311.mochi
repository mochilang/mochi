/*
# line: 3935
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 104,
    b: 100,
    c: 102,
    d: 101,
    e: 103,
  },
  t1Row {
    a: 107,
    b: 105,
    c: 106,
    d: 108,
    e: 109,
  },
  t1Row {
    a: 111,
    b: 112,
    c: 113,
    d: 114,
    e: 110,
  },
  t1Row {
    a: 115,
    b: 118,
    c: 119,
    d: 116,
    e: 117,
  },
  t1Row {
    a: 121,
    b: 124,
    c: 123,
    d: 122,
    e: 120,
  },
  t1Row {
    a: 127,
    b: 129,
    c: 125,
    d: 128,
    e: 126,
  },
  t1Row {
    a: 131,
    b: 130,
    c: 134,
    d: 133,
    e: 132,
  },
  t1Row {
    a: 138,
    b: 139,
    c: 137,
    d: 136,
    e: 135,
  },
  t1Row {
    a: 142,
    b: 143,
    c: 141,
    d: 140,
    e: 144,
  },
  t1Row {
    a: 149,
    b: 145,
    c: 147,
    d: 148,
    e: 146,
  },
  t1Row {
    a: 153,
    b: 151,
    c: 150,
    d: 154,
    e: 152,
  },
  t1Row {
    a: 159,
    b: 158,
    c: 155,
    d: 156,
    e: 157,
  },
  t1Row {
    a: 163,
    b: 160,
    c: 161,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 168,
    b: 167,
    c: 166,
    d: 169,
    e: 165,
  },
  t1Row {
    a: 174,
    b: 170,
    c: 172,
    d: 171,
    e: 173,
  },
  t1Row {
    a: 179,
    b: 175,
    c: 176,
    d: 178,
    e: 177,
  },
  t1Row {
    a: 182,
    b: 181,
    c: 184,
    d: 183,
    e: 180,
  },
  t1Row {
    a: 188,
    b: 186,
    c: 187,
    d: 185,
    e: 189,
  },
  t1Row {
    a: 191,
    b: 194,
    c: 193,
    d: 190,
    e: 192,
  },
  t1Row {
    a: 199,
    b: 198,
    c: 195,
    d: 196,
    e: 197,
  },
  t1Row {
    a: 201,
    b: 200,
    c: 202,
    d: 203,
    e: 204,
  },
  t1Row {
    a: 205,
    b: 206,
    c: 208,
    d: 207,
    e: 209,
  },
  t1Row {
    a: 213,
    b: 211,
    c: 214,
    d: 212,
    e: 210,
  },
  t1Row {
    a: 216,
    b: 218,
    c: 215,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 220,
    b: 223,
    c: 224,
    d: 222,
    e: 221,
  },
  t1Row {
    a: 229,
    b: 228,
    c: 225,
    d: 226,
    e: 227,
  },
  t1Row {
    a: 234,
    b: 232,
    c: 231,
    d: 233,
    e: 230,
  },
  t1Row {
    a: 239,
    b: 236,
    c: 235,
    d: 238,
    e: 237,
  },
  t1Row {
    a: 243,
    b: 240,
    c: 244,
    d: 241,
    e: 242,
  },
  t1Row {
    a: 245,
    b: 249,
    c: 247,
    d: 248,
    e: 246,
  },
]

/* SELECT a+b*2+c*3+d*4, a, c-d, abs(b-c), b, CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END FROM t1 WHERE (e>c OR e<d) OR (c<=d-2 OR c>=d+2) ORDER BY 4,3,2,5,1,6 */
let sub0 = avg(from x in t1
  select x.c)

let result = from row in t1
  where (((row.e > row.c || row.e < row.d)) || ((row.c <= (row.d - 2) || row.c >= (row.d + 2))))
  order by [(if (row.b - row.c) < 0 { -((row.b - row.c)) } else { (row.b - row.c) }), (row.c - row.d), row.a, row.b, (((row.a + (row.b + row.b)) + (row.c * 3)) + (row.d * 4)), (if row.c > sub0 { (row.a + row.a) } else { (row.b * 10) })]
  select [(((row.a + (row.b + row.b)) + (row.c * 3)) + (row.d * 4)), row.a, (row.c - row.d), (if (row.b - row.c) < 0 { -((row.b - row.c)) } else { (row.b - row.c) }), row.b, (if row.c > sub0 { (row.a + row.a) } else { (row.b * 10) })]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}
test "case311" {
  expect flatResult == [1521, 153, -4, 1, 151, 1510, 1622, 163, -3, 1, 160, 1600, 1676, 168, -3, 1, 167, 1670, 2368, 239, -3, 1, 236, 478, 1067, 107, -2, 1, 105, 1050, 1769, 179, -2, 1, 175, 358, 2323, 234, -2, 1, 232, 468, 1130, 111, -1, 1, 112, 1120, 1226, 121, 1, 1, 124, 1240, 1861, 188, 2, 1, 186, 376, 2226, 220, 2, 1, 223, 440, 1172, 115, 3, 1, 118, 1180, 1918, 191, 3, 1, 194, 382, 1472, 149, -1, 2, 145, 1450, 2019, 201, -1, 2, 200, 402, 2476, 245, -1, 2, 249, 490, 1014, 104, 1, 2, 100, 1000, 1371, 138, 1, 2, 139, 1390, 1411, 142, 1, 2, 143, 1430, 1714, 174, 1, 2, 170, 1700, 2069, 205, 1, 2, 206, 410, 2165, 216, -2, 3, 218, 432, 1564, 159, -1, 3, 158, 1580, 1964, 199, -1, 3, 198, 398, 2264, 229, -1, 3, 228, 458, 1828, 182, 1, 3, 181, 364, 2125, 213, 2, 3, 211, 426, 1272, 127, -3, 4, 129, 1290, 1325, 131, 1, 4, 130, 1300, 2419, 243, 3, 4, 240, 486]
}

