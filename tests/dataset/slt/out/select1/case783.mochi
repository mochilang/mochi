/*
# line: 9545
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 104,
    b: 100,
    c: 102,
    d: 101,
    e: 103,
  },
  t1Row {
    a: 107,
    b: 105,
    c: 106,
    d: 108,
    e: 109,
  },
  t1Row {
    a: 111,
    b: 112,
    c: 113,
    d: 114,
    e: 110,
  },
  t1Row {
    a: 115,
    b: 118,
    c: 119,
    d: 116,
    e: 117,
  },
  t1Row {
    a: 121,
    b: 124,
    c: 123,
    d: 122,
    e: 120,
  },
  t1Row {
    a: 127,
    b: 129,
    c: 125,
    d: 128,
    e: 126,
  },
  t1Row {
    a: 131,
    b: 130,
    c: 134,
    d: 133,
    e: 132,
  },
  t1Row {
    a: 138,
    b: 139,
    c: 137,
    d: 136,
    e: 135,
  },
  t1Row {
    a: 142,
    b: 143,
    c: 141,
    d: 140,
    e: 144,
  },
  t1Row {
    a: 149,
    b: 145,
    c: 147,
    d: 148,
    e: 146,
  },
  t1Row {
    a: 153,
    b: 151,
    c: 150,
    d: 154,
    e: 152,
  },
  t1Row {
    a: 159,
    b: 158,
    c: 155,
    d: 156,
    e: 157,
  },
  t1Row {
    a: 163,
    b: 160,
    c: 161,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 168,
    b: 167,
    c: 166,
    d: 169,
    e: 165,
  },
  t1Row {
    a: 174,
    b: 170,
    c: 172,
    d: 171,
    e: 173,
  },
  t1Row {
    a: 179,
    b: 175,
    c: 176,
    d: 178,
    e: 177,
  },
  t1Row {
    a: 182,
    b: 181,
    c: 184,
    d: 183,
    e: 180,
  },
  t1Row {
    a: 188,
    b: 186,
    c: 187,
    d: 185,
    e: 189,
  },
  t1Row {
    a: 191,
    b: 194,
    c: 193,
    d: 190,
    e: 192,
  },
  t1Row {
    a: 199,
    b: 198,
    c: 195,
    d: 196,
    e: 197,
  },
  t1Row {
    a: 201,
    b: 200,
    c: 202,
    d: 203,
    e: 204,
  },
  t1Row {
    a: 205,
    b: 206,
    c: 208,
    d: 207,
    e: 209,
  },
  t1Row {
    a: 213,
    b: 211,
    c: 214,
    d: 212,
    e: 210,
  },
  t1Row {
    a: 216,
    b: 218,
    c: 215,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 220,
    b: 223,
    c: 224,
    d: 222,
    e: 221,
  },
  t1Row {
    a: 229,
    b: 228,
    c: 225,
    d: 226,
    e: 227,
  },
  t1Row {
    a: 234,
    b: 232,
    c: 231,
    d: 233,
    e: 230,
  },
  t1Row {
    a: 239,
    b: 236,
    c: 235,
    d: 238,
    e: 237,
  },
  t1Row {
    a: 243,
    b: 240,
    c: 244,
    d: 241,
    e: 242,
  },
  t1Row {
    a: 245,
    b: 249,
    c: 247,
    d: 248,
    e: 246,
  },
]

/* SELECT a-b, b, a+b*2+c*3+d*4+e*5, d-e, CASE a+1 WHEN b THEN 111 WHEN c THEN 222 WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END, c-d FROM t1 ORDER BY 5,2,1,4,3,6 */
var result = from row in t1
  order by [if (row.a + 1 != null && row.b != null && row.a + 1 == row.b) then 111 else if (row.a + 1 != null && row.c != null && row.a + 1 == row.c) then 222 else if (row.a + 1 != null && row.d != null && row.a + 1 == row.d) then 333 else if (row.a + 1 != null && row.e != null && row.a + 1 == row.e) then 444 else 555, row.b, row.a - row.b, row.d - row.e, row.a + row.b * 2 + row.c * 3 + row.d * 4 + row.e * 5, row.c - row.d]
  select [row.a - row.b, row.b, row.a + row.b * 2 + row.c * 3 + row.d * 4 + row.e * 5, row.d - row.e, if (row.a + 1 != null && row.b != null && row.a + 1 == row.b) then 111 else if (row.a + 1 != null && row.c != null && row.a + 1 == row.c) then 222 else if (row.a + 1 != null && row.d != null && row.a + 1 == row.d) then 333 else if (row.a + 1 != null && row.e != null && row.a + 1 == row.e) then 444 else 555, row.c - row.d]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}
test "case783" {
  expect flatResult == [-1, 112, 1680, 4, 111, -1, -1, 139, 2046, 1, 111, 1, -1, 143, 2131, -4, 111, 1, -1, 206, 3114, -2, 111, 1, 1, 200, 3039, -1, 222, -1, 2, 211, 3175, 2, 222, 2, 3, 240, 3629, -1, 222, 3, 2, 105, 1612, -1, 333, -2, -3, 118, 1757, -1, 333, 3, -3, 124, 1826, 2, 333, 1, -2, 129, 1902, 2, 333, -3, 2, 151, 2281, 2, 333, -4, 3, 160, 2432, 2, 333, -3, 1, 167, 2501, 4, 333, -3, 1, 181, 2728, 3, 333, 1, -2, 218, 3260, -2, 333, -2, 1, 130, 1985, 1, 444, 1, 2, 186, 2806, -4, 444, 2, -3, 194, 2878, -2, 444, 3, -3, 223, 3331, 1, 444, 2, -4, 249, 3706, 2, 444, -1, 4, 100, 1529, -2, 555, 1, 4, 145, 2202, 2, 555, -1, 1, 158, 2349, -1, 555, -1, 4, 170, 2579, -2, 555, 1, 4, 175, 2654, 1, 555, -2, 1, 198, 2949, -1, 555, -1, 1, 228, 3399, -1, 555, -1, 2, 232, 3473, 3, 555, -2, 3, 236, 3553, 1, 555, -3]
}

