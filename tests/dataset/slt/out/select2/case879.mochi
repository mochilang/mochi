/*
# line: 9832
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 104,
    b: null,
    c: 102,
    d: 101,
    e: null,
  },
  t1Row {
    a: 107,
    b: 105,
    c: 106,
    d: 108,
    e: 109,
  },
  t1Row {
    a: null,
    b: 112,
    c: 113,
    d: 114,
    e: 110,
  },
  t1Row {
    a: 115,
    b: null,
    c: 119,
    d: 116,
    e: 117,
  },
  t1Row {
    a: 121,
    b: 124,
    c: 123,
    d: 122,
    e: null,
  },
  t1Row {
    a: 127,
    b: 129,
    c: 125,
    d: 128,
    e: 126,
  },
  t1Row {
    a: 131,
    b: 130,
    c: 134,
    d: 133,
    e: 132,
  },
  t1Row {
    a: 138,
    b: 139,
    c: 137,
    d: 136,
    e: 135,
  },
  t1Row {
    a: 142,
    b: 143,
    c: 141,
    d: 140,
    e: 144,
  },
  t1Row {
    a: 149,
    b: 145,
    c: 147,
    d: null,
    e: 146,
  },
  t1Row {
    a: 153,
    b: 151,
    c: 150,
    d: null,
    e: null,
  },
  t1Row {
    a: 159,
    b: 158,
    c: 155,
    d: null,
    e: 157,
  },
  t1Row {
    a: 163,
    b: 160,
    c: 161,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 168,
    b: 167,
    c: 166,
    d: null,
    e: 165,
  },
  t1Row {
    a: 174,
    b: 170,
    c: 172,
    d: 171,
    e: 173,
  },
  t1Row {
    a: 179,
    b: 175,
    c: 176,
    d: null,
    e: 177,
  },
  t1Row {
    a: 182,
    b: 181,
    c: 184,
    d: 183,
    e: 180,
  },
  t1Row {
    a: 188,
    b: 186,
    c: 187,
    d: 185,
    e: 189,
  },
  t1Row {
    a: 191,
    b: 194,
    c: 193,
    d: 190,
    e: 192,
  },
  t1Row {
    a: 199,
    b: 198,
    c: 195,
    d: 196,
    e: 197,
  },
  t1Row {
    a: 201,
    b: null,
    c: 202,
    d: 203,
    e: 204,
  },
  t1Row {
    a: null,
    b: 206,
    c: 208,
    d: 207,
    e: null,
  },
  t1Row {
    a: 213,
    b: 211,
    c: 214,
    d: 212,
    e: 210,
  },
  t1Row {
    a: 216,
    b: 218,
    c: 215,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 220,
    b: 223,
    c: 224,
    d: 222,
    e: 221,
  },
  t1Row {
    a: 229,
    b: 228,
    c: 225,
    d: 226,
    e: 227,
  },
  t1Row {
    a: 234,
    b: 232,
    c: 231,
    d: 233,
    e: 230,
  },
  t1Row {
    a: 239,
    b: 236,
    c: null,
    d: 238,
    e: 237,
  },
  t1Row {
    a: 243,
    b: 240,
    c: 244,
    d: null,
    e: null,
  },
  t1Row {
    a: 245,
    b: 249,
    c: 247,
    d: 248,
    e: 246,
  },
]

/* SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222 WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END, d, e, c-d, a, abs(a), (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b) FROM t1 */
let result = from row in t1
  select [(if (row.a + 1) == row.b { 111 } else { (if (row.a + 1) == row.c { 222 } else { (if (row.a + 1) == row.d { 333 } else { (if (row.a + 1) == row.e { 444 } else { 555 }) }) }) }), row.d, row.e, (row.c - row.d), row.a, (if row.a < 0 { -(row.a) } else { row.a }), count(from x in t1
  where x.b < row.b
  select x)]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}
test "case879" {
  expect flatResult == [555, 101, null, 1, 104, 104, 0, 333, 108, 109, -2, 107, 107, 0, 555, 114, 110, -1, null, null, 1, 333, 116, 117, 3, 115, 115, 0, 333, 122, null, 1, 121, 121, 2, 333, 128, 126, -3, 127, 127, 3, 444, 133, 132, 1, 131, 131, 4, 111, 136, 135, 1, 138, 138, 5, 111, 140, 144, 1, 142, 142, 6, 555, null, 146, null, 149, 149, 7, 555, null, null, null, 153, 153, 8, 555, null, 157, null, 159, 159, 9, 333, 164, 162, -3, 163, 163, 10, 555, null, 165, null, 168, 168, 11, 555, 171, 173, 1, 174, 174, 12, 555, null, 177, null, 179, 179, 13, 333, 183, 180, 1, 182, 182, 14, 444, 185, 189, 2, 188, 188, 15, 444, 190, 192, 3, 191, 191, 16, 555, 196, 197, -1, 199, 199, 17, 222, 203, 204, -1, 201, 201, 0, 555, 207, null, 1, null, null, 18, 222, 212, 210, 2, 213, 213, 19, 333, 217, 219, -2, 216, 216, 20, 444, 222, 221, 2, 220, 220, 21, 555, 226, 227, -1, 229, 229, 22, 555, 233, 230, -2, 234, 234, 23, 555, 238, 237, null, 239, 239, 24, 222, null, null, null, 243, 243, 25, 444, 248, 246, -1, 245, 245, 26]
}

