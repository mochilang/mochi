/*
# line: 2503
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 104,
    b: null,
    c: 102,
    d: 101,
    e: null,
  },
  t1Row {
    a: 107,
    b: 105,
    c: 106,
    d: 108,
    e: 109,
  },
  t1Row {
    a: null,
    b: 112,
    c: 113,
    d: 114,
    e: 110,
  },
  t1Row {
    a: 115,
    b: null,
    c: 119,
    d: 116,
    e: 117,
  },
  t1Row {
    a: 121,
    b: 124,
    c: 123,
    d: 122,
    e: null,
  },
  t1Row {
    a: 127,
    b: 129,
    c: 125,
    d: 128,
    e: 126,
  },
  t1Row {
    a: 131,
    b: 130,
    c: 134,
    d: 133,
    e: 132,
  },
  t1Row {
    a: 138,
    b: 139,
    c: 137,
    d: 136,
    e: 135,
  },
  t1Row {
    a: 142,
    b: 143,
    c: 141,
    d: 140,
    e: 144,
  },
  t1Row {
    a: 149,
    b: 145,
    c: 147,
    d: null,
    e: 146,
  },
  t1Row {
    a: 153,
    b: 151,
    c: 150,
    d: null,
    e: null,
  },
  t1Row {
    a: 159,
    b: 158,
    c: 155,
    d: null,
    e: 157,
  },
  t1Row {
    a: 163,
    b: 160,
    c: 161,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 168,
    b: 167,
    c: 166,
    d: null,
    e: 165,
  },
  t1Row {
    a: 174,
    b: 170,
    c: 172,
    d: 171,
    e: 173,
  },
  t1Row {
    a: 179,
    b: 175,
    c: 176,
    d: null,
    e: 177,
  },
  t1Row {
    a: 182,
    b: 181,
    c: 184,
    d: 183,
    e: 180,
  },
  t1Row {
    a: 188,
    b: 186,
    c: 187,
    d: 185,
    e: 189,
  },
  t1Row {
    a: 191,
    b: 194,
    c: 193,
    d: 190,
    e: 192,
  },
  t1Row {
    a: 199,
    b: 198,
    c: 195,
    d: 196,
    e: 197,
  },
  t1Row {
    a: 201,
    b: null,
    c: 202,
    d: 203,
    e: 204,
  },
  t1Row {
    a: null,
    b: 206,
    c: 208,
    d: 207,
    e: null,
  },
  t1Row {
    a: 213,
    b: 211,
    c: 214,
    d: 212,
    e: 210,
  },
  t1Row {
    a: 216,
    b: 218,
    c: 215,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 220,
    b: 223,
    c: 224,
    d: 222,
    e: 221,
  },
  t1Row {
    a: 229,
    b: 228,
    c: 225,
    d: 226,
    e: 227,
  },
  t1Row {
    a: 234,
    b: 232,
    c: 231,
    d: 233,
    e: 230,
  },
  t1Row {
    a: 239,
    b: 236,
    c: null,
    d: 238,
    e: 237,
  },
  t1Row {
    a: 243,
    b: 240,
    c: 244,
    d: null,
    e: null,
  },
  t1Row {
    a: 245,
    b: 249,
    c: 247,
    d: 248,
    e: 246,
  },
]

/* SELECT c-d, abs(b-c), b, abs(a), a, CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222 WHEN a<b+3 THEN 333 ELSE 444 END, (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b) FROM t1 */
let result = from row in t1
  select [(row.c - row.d), (if (row.b - row.c) < 0 { -((row.b - row.c)) } else { (row.b - row.c) }), row.b, (if row.a < 0 { -(row.a) } else { row.a }), row.a, (if row.a < (row.b - 3) { 111 } else { (if row.a <= row.b { 222 } else { (if row.a < (row.b + 3) { 333 } else { 444 }) }) }), count(from x in t1
  where x.b < row.b
  select x)]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}
test "case217" {
  expect flatResult == [1, null, null, 104, 104, 444, 0, -2, 1, 105, 107, 107, 333, 0, -1, 1, 112, null, null, 444, 1, 3, null, null, 115, 115, 444, 0, 1, 1, 124, 121, 121, 222, 2, -3, 4, 129, 127, 127, 222, 3, 1, 4, 130, 131, 131, 333, 4, 1, 2, 139, 138, 138, 222, 5, 1, 2, 143, 142, 142, 222, 6, null, 2, 145, 149, 149, 444, 7, null, 1, 151, 153, 153, 333, 8, null, 3, 158, 159, 159, 333, 9, -3, 1, 160, 163, 163, 444, 10, null, 1, 167, 168, 168, 333, 11, 1, 2, 170, 174, 174, 444, 12, null, 1, 175, 179, 179, 444, 13, 1, 3, 181, 182, 182, 333, 14, 2, 1, 186, 188, 188, 333, 15, 3, 1, 194, 191, 191, 222, 16, -1, 3, 198, 199, 199, 333, 17, -1, null, null, 201, 201, 444, 0, 1, 2, 206, null, null, 444, 18, 2, 3, 211, 213, 213, 333, 19, -2, 3, 218, 216, 216, 222, 20, 2, 1, 223, 220, 220, 222, 21, -1, 3, 228, 229, 229, 333, 22, -2, 1, 232, 234, 234, 333, 23, null, null, 236, 239, 239, 444, 24, null, 4, 240, 243, 243, 444, 25, -1, 2, 249, 245, 245, 111, 26]
}

