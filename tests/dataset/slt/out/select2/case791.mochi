/*
# line: 8847
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 104,
    b: null,
    c: 102,
    d: 101,
    e: null,
  },
  t1Row {
    a: 107,
    b: 105,
    c: 106,
    d: 108,
    e: 109,
  },
  t1Row {
    a: null,
    b: 112,
    c: 113,
    d: 114,
    e: 110,
  },
  t1Row {
    a: 115,
    b: null,
    c: 119,
    d: 116,
    e: 117,
  },
  t1Row {
    a: 121,
    b: 124,
    c: 123,
    d: 122,
    e: null,
  },
  t1Row {
    a: 127,
    b: 129,
    c: 125,
    d: 128,
    e: 126,
  },
  t1Row {
    a: 131,
    b: 130,
    c: 134,
    d: 133,
    e: 132,
  },
  t1Row {
    a: 138,
    b: 139,
    c: 137,
    d: 136,
    e: 135,
  },
  t1Row {
    a: 142,
    b: 143,
    c: 141,
    d: 140,
    e: 144,
  },
  t1Row {
    a: 149,
    b: 145,
    c: 147,
    d: null,
    e: 146,
  },
  t1Row {
    a: 153,
    b: 151,
    c: 150,
    d: null,
    e: null,
  },
  t1Row {
    a: 159,
    b: 158,
    c: 155,
    d: null,
    e: 157,
  },
  t1Row {
    a: 163,
    b: 160,
    c: 161,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 168,
    b: 167,
    c: 166,
    d: null,
    e: 165,
  },
  t1Row {
    a: 174,
    b: 170,
    c: 172,
    d: 171,
    e: 173,
  },
  t1Row {
    a: 179,
    b: 175,
    c: 176,
    d: null,
    e: 177,
  },
  t1Row {
    a: 182,
    b: 181,
    c: 184,
    d: 183,
    e: 180,
  },
  t1Row {
    a: 188,
    b: 186,
    c: 187,
    d: 185,
    e: 189,
  },
  t1Row {
    a: 191,
    b: 194,
    c: 193,
    d: 190,
    e: 192,
  },
  t1Row {
    a: 199,
    b: 198,
    c: 195,
    d: 196,
    e: 197,
  },
  t1Row {
    a: 201,
    b: null,
    c: 202,
    d: 203,
    e: 204,
  },
  t1Row {
    a: null,
    b: 206,
    c: 208,
    d: 207,
    e: null,
  },
  t1Row {
    a: 213,
    b: 211,
    c: 214,
    d: 212,
    e: 210,
  },
  t1Row {
    a: 216,
    b: 218,
    c: 215,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 220,
    b: 223,
    c: 224,
    d: 222,
    e: 221,
  },
  t1Row {
    a: 229,
    b: 228,
    c: 225,
    d: 226,
    e: 227,
  },
  t1Row {
    a: 234,
    b: 232,
    c: 231,
    d: 233,
    e: 230,
  },
  t1Row {
    a: 239,
    b: 236,
    c: null,
    d: 238,
    e: 237,
  },
  t1Row {
    a: 243,
    b: 240,
    c: 244,
    d: null,
    e: null,
  },
  t1Row {
    a: 245,
    b: 249,
    c: 247,
    d: 248,
    e: 246,
  },
]

/* SELECT c, b-c, a+b*2+c*3+d*4, (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d), a+b*2+c*3, a, c-d FROM t1 WHERE coalesce(a,b,c,d,e)<>0 AND b IS NOT NULL */
let result = from row in t1
  where (null != 0 && row.b != null)
  select [row.c, (row.b - row.c), (((row.a + (row.b * 2)) + (row.c * 3)) + (row.d * 4)), count(from x in t1
  where (x.c > row.c && x.d < row.d)
  select x), ((row.a + (row.b * 2)) + (row.c * 3)), row.a, (row.c - row.d)]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}
test "case791" {
  expect flatResult == [106, -1, 1067, 0, 635, 107, -2, 113, -1, null, 0, null, null, -1, 123, 1, 1226, 0, 738, 121, 1, 125, 4, 1272, 0, 760, 127, -3, 134, -4, 1325, 0, 793, 131, 1, 137, 2, 1371, 0, 827, 138, 1, 141, 2, 1411, 0, 851, 142, 1, 147, -2, null, 0, 880, 149, null, 150, 1, null, 0, 905, 153, null, 155, 3, null, 0, 940, 159, null, 161, -1, 1622, 0, 966, 163, -3, 166, 1, null, 0, 1000, 168, null, 172, -2, 1714, 0, 1030, 174, 1, 176, -1, null, 0, 1057, 179, null, 184, -3, 1828, 0, 1096, 182, 1, 187, -1, 1861, 0, 1121, 188, 2, 193, 1, 1918, 0, 1158, 191, 3, 195, 3, 1964, 0, 1180, 199, -1, 208, -2, null, 0, null, null, 1, 214, -3, 2125, 0, 1277, 213, 2, 215, 3, 2165, 0, 1297, 216, -2, 224, -1, 2226, 0, 1338, 220, 2, 225, 3, 2264, 0, 1360, 229, -1, 231, 1, 2323, 0, 1391, 234, -2, null, null, null, 0, null, 239, null, 244, -4, null, 0, 1455, 243, null, 247, 2, 2476, 0, 1484, 245, -1]
}

