/*
# line: 1067
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 104,
    b: null,
    c: 102,
    d: 101,
    e: null,
  },
  t1Row {
    a: 107,
    b: 105,
    c: 106,
    d: 108,
    e: 109,
  },
  t1Row {
    a: null,
    b: 112,
    c: 113,
    d: 114,
    e: 110,
  },
  t1Row {
    a: 115,
    b: null,
    c: 119,
    d: 116,
    e: 117,
  },
  t1Row {
    a: 121,
    b: 124,
    c: 123,
    d: 122,
    e: null,
  },
  t1Row {
    a: 127,
    b: 129,
    c: 125,
    d: 128,
    e: 126,
  },
  t1Row {
    a: 131,
    b: 130,
    c: 134,
    d: 133,
    e: 132,
  },
  t1Row {
    a: 138,
    b: 139,
    c: 137,
    d: 136,
    e: 135,
  },
  t1Row {
    a: 142,
    b: 143,
    c: 141,
    d: 140,
    e: 144,
  },
  t1Row {
    a: 149,
    b: 145,
    c: 147,
    d: null,
    e: 146,
  },
  t1Row {
    a: 153,
    b: 151,
    c: 150,
    d: null,
    e: null,
  },
  t1Row {
    a: 159,
    b: 158,
    c: 155,
    d: null,
    e: 157,
  },
  t1Row {
    a: 163,
    b: 160,
    c: 161,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 168,
    b: 167,
    c: 166,
    d: null,
    e: 165,
  },
  t1Row {
    a: 174,
    b: 170,
    c: 172,
    d: 171,
    e: 173,
  },
  t1Row {
    a: 179,
    b: 175,
    c: 176,
    d: null,
    e: 177,
  },
  t1Row {
    a: 182,
    b: 181,
    c: 184,
    d: 183,
    e: 180,
  },
  t1Row {
    a: 188,
    b: 186,
    c: 187,
    d: 185,
    e: 189,
  },
  t1Row {
    a: 191,
    b: 194,
    c: 193,
    d: 190,
    e: 192,
  },
  t1Row {
    a: 199,
    b: 198,
    c: 195,
    d: 196,
    e: 197,
  },
  t1Row {
    a: 201,
    b: null,
    c: 202,
    d: 203,
    e: 204,
  },
  t1Row {
    a: null,
    b: 206,
    c: 208,
    d: 207,
    e: null,
  },
  t1Row {
    a: 213,
    b: 211,
    c: 214,
    d: 212,
    e: 210,
  },
  t1Row {
    a: 216,
    b: 218,
    c: 215,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 220,
    b: 223,
    c: 224,
    d: 222,
    e: 221,
  },
  t1Row {
    a: 229,
    b: 228,
    c: 225,
    d: 226,
    e: 227,
  },
  t1Row {
    a: 234,
    b: 232,
    c: 231,
    d: 233,
    e: 230,
  },
  t1Row {
    a: 239,
    b: 236,
    c: null,
    d: 238,
    e: 237,
  },
  t1Row {
    a: 243,
    b: 240,
    c: 244,
    d: null,
    e: null,
  },
  t1Row {
    a: 245,
    b: 249,
    c: 247,
    d: 248,
    e: 246,
  },
]

/* SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222 WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END, a+b*2+c*3, CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END, e, d, c-d, a FROM t1 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b) */
let sub0 = avg(from x in t1
  select x.c)

let result = from row in t1
  where count(from x in t1
  where x.b < row.b
  select x) > 0
  select [(if (row.a + 1) == row.b { 111 } else { (if (row.a + 1) == row.c { 222 } else { (if (row.a + 1) == row.d { 333 } else { (if (row.a + 1) == row.e { 444 } else { 555 }) }) }) }), ((row.a + (row.b * 2)) + (row.c * 3)), (if row.c > sub0 { (row.a * 2) } else { (row.b * 10) }), row.e, row.d, (row.c - row.d), row.a]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}
test "case88" {
  expect flatResult == [555, null, 2360, 237, 238, null, 239, 444, 1484, 490, 246, 248, -1, 245, 444, 1158, 382, 192, 190, 3, 191, 111, 851, 1430, 144, 140, 1, 142, 333, 966, 1600, 162, 164, -3, 163, 555, 1180, 398, 197, 196, -1, 199, 333, 738, 1240, null, 122, 1, 121, 555, 1030, 1700, 173, 171, 1, 174, 444, 793, 1300, 132, 133, 1, 131, 111, 827, 1390, 135, 136, 1, 138, 555, 1000, 1670, 165, null, null, 168, 333, 760, 1290, 126, 128, -3, 127, 555, 880, 1450, 146, null, null, 149, 555, 1360, 458, 227, 226, -1, 229, 555, 940, 1580, 157, null, null, 159, 333, 1096, 364, 180, 183, 1, 182, 555, 1057, 358, 177, null, null, 179, 222, 1455, 486, null, null, null, 243, 555, null, 1120, 110, 114, -1, null, 222, 1277, 426, 210, 212, 2, 213, 555, null, null, null, 207, 1, null, 555, 1391, 468, 230, 233, -2, 234, 555, 905, 1510, null, null, null, 153, 444, 1121, 376, 189, 185, 2, 188, 444, 1338, 440, 221, 222, 2, 220, 333, 1297, 432, 219, 217, -2, 216]
}

