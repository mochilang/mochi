/*
# line: 6921
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 104,
    b: null,
    c: 102,
    d: 101,
    e: null,
  },
  t1Row {
    a: 107,
    b: 105,
    c: 106,
    d: 108,
    e: 109,
  },
  t1Row {
    a: null,
    b: 112,
    c: 113,
    d: 114,
    e: 110,
  },
  t1Row {
    a: 115,
    b: null,
    c: 119,
    d: 116,
    e: 117,
  },
  t1Row {
    a: 121,
    b: 124,
    c: 123,
    d: 122,
    e: null,
  },
  t1Row {
    a: 127,
    b: 129,
    c: 125,
    d: 128,
    e: 126,
  },
  t1Row {
    a: 131,
    b: 130,
    c: 134,
    d: 133,
    e: 132,
  },
  t1Row {
    a: 138,
    b: 139,
    c: 137,
    d: 136,
    e: 135,
  },
  t1Row {
    a: 142,
    b: 143,
    c: 141,
    d: 140,
    e: 144,
  },
  t1Row {
    a: 149,
    b: 145,
    c: 147,
    d: null,
    e: 146,
  },
  t1Row {
    a: 153,
    b: 151,
    c: 150,
    d: null,
    e: null,
  },
  t1Row {
    a: 159,
    b: 158,
    c: 155,
    d: null,
    e: 157,
  },
  t1Row {
    a: 163,
    b: 160,
    c: 161,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 168,
    b: 167,
    c: 166,
    d: null,
    e: 165,
  },
  t1Row {
    a: 174,
    b: 170,
    c: 172,
    d: 171,
    e: 173,
  },
  t1Row {
    a: 179,
    b: 175,
    c: 176,
    d: null,
    e: 177,
  },
  t1Row {
    a: 182,
    b: 181,
    c: 184,
    d: 183,
    e: 180,
  },
  t1Row {
    a: 188,
    b: 186,
    c: 187,
    d: 185,
    e: 189,
  },
  t1Row {
    a: 191,
    b: 194,
    c: 193,
    d: 190,
    e: 192,
  },
  t1Row {
    a: 199,
    b: 198,
    c: 195,
    d: 196,
    e: 197,
  },
  t1Row {
    a: 201,
    b: null,
    c: 202,
    d: 203,
    e: 204,
  },
  t1Row {
    a: null,
    b: 206,
    c: 208,
    d: 207,
    e: null,
  },
  t1Row {
    a: 213,
    b: 211,
    c: 214,
    d: 212,
    e: 210,
  },
  t1Row {
    a: 216,
    b: 218,
    c: 215,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 220,
    b: 223,
    c: 224,
    d: 222,
    e: 221,
  },
  t1Row {
    a: 229,
    b: 228,
    c: 225,
    d: 226,
    e: 227,
  },
  t1Row {
    a: 234,
    b: 232,
    c: 231,
    d: 233,
    e: 230,
  },
  t1Row {
    a: 239,
    b: 236,
    c: null,
    d: 238,
    e: 237,
  },
  t1Row {
    a: 243,
    b: 240,
    c: 244,
    d: null,
    e: null,
  },
  t1Row {
    a: 245,
    b: 249,
    c: 247,
    d: 248,
    e: 246,
  },
]

/* SELECT b, CASE a+1 WHEN b THEN 111 WHEN c THEN 222 WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END, d, a-b, a+b*2, a+b*2+c*3, (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b) FROM t1 */
let result = from row in t1
  select [row.b, (if (row.a + 1) == row.b { 111 } else { (if (row.a + 1) == row.c { 222 } else { (if (row.a + 1) == row.d { 333 } else { (if (row.a + 1) == row.e { 444 } else { 555 }) }) }) }), row.d, (row.a - row.b), (row.a + (row.b * 2)), ((row.a + (row.b * 2)) + (row.c * 3)), count(from x in t1
  where x.b < row.b
  select x)]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}
test "case614" {
  expect flatResult == [null, 555, 101, null, null, null, 0, 105, 333, 108, 2, 317, 635, 0, 112, 555, 114, null, null, null, 1, null, 333, 116, null, null, null, 0, 124, 333, 122, -3, 369, 738, 2, 129, 333, 128, -2, 385, 760, 3, 130, 444, 133, 1, 391, 793, 4, 139, 111, 136, -1, 416, 827, 5, 143, 111, 140, -1, 428, 851, 6, 145, 555, null, 4, 439, 880, 7, 151, 555, null, 2, 455, 905, 8, 158, 555, null, 1, 475, 940, 9, 160, 333, 164, 3, 483, 966, 10, 167, 555, null, 1, 502, 1000, 11, 170, 555, 171, 4, 514, 1030, 12, 175, 555, null, 4, 529, 1057, 13, 181, 333, 183, 1, 544, 1096, 14, 186, 444, 185, 2, 560, 1121, 15, 194, 444, 190, -3, 579, 1158, 16, 198, 555, 196, 1, 595, 1180, 17, null, 222, 203, null, null, null, 0, 206, 555, 207, null, null, null, 18, 211, 222, 212, 2, 635, 1277, 19, 218, 333, 217, -2, 652, 1297, 20, 223, 444, 222, -3, 666, 1338, 21, 228, 555, 226, 1, 685, 1360, 22, 232, 555, 233, 2, 698, 1391, 23, 236, 555, 238, 3, 711, null, 24, 240, 222, null, 3, 723, 1455, 25, 249, 444, 248, -4, 743, 1484, 26]
}

