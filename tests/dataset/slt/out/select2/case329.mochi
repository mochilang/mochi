/*
# line: 3744
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 104,
    b: null,
    c: 102,
    d: 101,
    e: null,
  },
  t1Row {
    a: 107,
    b: 105,
    c: 106,
    d: 108,
    e: 109,
  },
  t1Row {
    a: null,
    b: 112,
    c: 113,
    d: 114,
    e: 110,
  },
  t1Row {
    a: 115,
    b: null,
    c: 119,
    d: 116,
    e: 117,
  },
  t1Row {
    a: 121,
    b: 124,
    c: 123,
    d: 122,
    e: null,
  },
  t1Row {
    a: 127,
    b: 129,
    c: 125,
    d: 128,
    e: 126,
  },
  t1Row {
    a: 131,
    b: 130,
    c: 134,
    d: 133,
    e: 132,
  },
  t1Row {
    a: 138,
    b: 139,
    c: 137,
    d: 136,
    e: 135,
  },
  t1Row {
    a: 142,
    b: 143,
    c: 141,
    d: 140,
    e: 144,
  },
  t1Row {
    a: 149,
    b: 145,
    c: 147,
    d: null,
    e: 146,
  },
  t1Row {
    a: 153,
    b: 151,
    c: 150,
    d: null,
    e: null,
  },
  t1Row {
    a: 159,
    b: 158,
    c: 155,
    d: null,
    e: 157,
  },
  t1Row {
    a: 163,
    b: 160,
    c: 161,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 168,
    b: 167,
    c: 166,
    d: null,
    e: 165,
  },
  t1Row {
    a: 174,
    b: 170,
    c: 172,
    d: 171,
    e: 173,
  },
  t1Row {
    a: 179,
    b: 175,
    c: 176,
    d: null,
    e: 177,
  },
  t1Row {
    a: 182,
    b: 181,
    c: 184,
    d: 183,
    e: 180,
  },
  t1Row {
    a: 188,
    b: 186,
    c: 187,
    d: 185,
    e: 189,
  },
  t1Row {
    a: 191,
    b: 194,
    c: 193,
    d: 190,
    e: 192,
  },
  t1Row {
    a: 199,
    b: 198,
    c: 195,
    d: 196,
    e: 197,
  },
  t1Row {
    a: 201,
    b: null,
    c: 202,
    d: 203,
    e: 204,
  },
  t1Row {
    a: null,
    b: 206,
    c: 208,
    d: 207,
    e: null,
  },
  t1Row {
    a: 213,
    b: 211,
    c: 214,
    d: 212,
    e: 210,
  },
  t1Row {
    a: 216,
    b: 218,
    c: 215,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 220,
    b: 223,
    c: 224,
    d: 222,
    e: 221,
  },
  t1Row {
    a: 229,
    b: 228,
    c: 225,
    d: 226,
    e: 227,
  },
  t1Row {
    a: 234,
    b: 232,
    c: 231,
    d: 233,
    e: 230,
  },
  t1Row {
    a: 239,
    b: 236,
    c: null,
    d: 238,
    e: 237,
  },
  t1Row {
    a: 243,
    b: 240,
    c: 244,
    d: null,
    e: null,
  },
  t1Row {
    a: 245,
    b: 249,
    c: 247,
    d: 248,
    e: 246,
  },
]

/* SELECT a+b*2, (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d), a-b, c, (a+b+c+d+e)/5, a+b*2+c*3+d*4+e*5, abs(b-c) FROM t1 */
let result = from row in t1
  select [(row.a + (row.b * 2)), count(from x in t1
  where (x.c > row.c && x.d < row.d)
  select x), (row.a - row.b), row.c, ((((((row.a + row.b) + row.c) + row.d) + row.e)) / 5), ((((row.a + (row.b * 2)) + (row.c * 3)) + (row.d * 4)) + (row.e * 5)), (if (row.b - row.c) < 0 { -((row.b - row.c)) } else { (row.b - row.c) })]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}
test "case329" {
  expect flatResult == [null, 0, null, 102, null, null, null, 317, 0, 2, 106, 107, 1612, 1, null, 0, null, 113, null, null, 1, null, 0, null, 119, null, null, null, 369, 0, -3, 123, null, null, 1, 385, 0, -2, 125, 127, 1902, 4, 391, 0, 1, 134, 132, 1985, 4, 416, 0, -1, 137, 137, 2046, 2, 428, 0, -1, 141, 142, 2131, 2, 439, 0, 4, 147, null, null, 2, 455, 0, 2, 150, null, null, 1, 475, 0, 1, 155, null, null, 3, 483, 0, 3, 161, 162, 2432, 1, 502, 0, 1, 166, null, null, 1, 514, 0, 4, 172, 172, 2579, 2, 529, 0, 4, 176, null, null, 1, 544, 0, 1, 184, 182, 2728, 3, 560, 0, 2, 187, 187, 2806, 1, 579, 0, -3, 193, 192, 2878, 1, 595, 0, 1, 195, 197, 2949, 3, null, 0, null, 202, null, null, null, null, 0, null, 208, null, null, 2, 635, 0, 2, 214, 212, 3175, 3, 652, 0, -2, 215, 217, 3260, 3, 666, 0, -3, 224, 222, 3331, 1, 685, 0, 1, 225, 227, 3399, 3, 698, 0, 2, 231, 232, 3473, 1, 711, 0, 3, null, null, null, null, 723, 0, 3, 244, null, null, 4, 743, 0, -4, 247, 247, 3706, 2]
}

