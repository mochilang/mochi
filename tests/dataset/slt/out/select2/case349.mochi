/*
# line: 3999
*/

type t1Row {
  a: int
  b: int
  c: int
  d: int
  e: int
}

let t1 = [
  t1Row {
    a: 104,
    b: null,
    c: 102,
    d: 101,
    e: null,
  },
  t1Row {
    a: 107,
    b: 105,
    c: 106,
    d: 108,
    e: 109,
  },
  t1Row {
    a: null,
    b: 112,
    c: 113,
    d: 114,
    e: 110,
  },
  t1Row {
    a: 115,
    b: null,
    c: 119,
    d: 116,
    e: 117,
  },
  t1Row {
    a: 121,
    b: 124,
    c: 123,
    d: 122,
    e: null,
  },
  t1Row {
    a: 127,
    b: 129,
    c: 125,
    d: 128,
    e: 126,
  },
  t1Row {
    a: 131,
    b: 130,
    c: 134,
    d: 133,
    e: 132,
  },
  t1Row {
    a: 138,
    b: 139,
    c: 137,
    d: 136,
    e: 135,
  },
  t1Row {
    a: 142,
    b: 143,
    c: 141,
    d: 140,
    e: 144,
  },
  t1Row {
    a: 149,
    b: 145,
    c: 147,
    d: null,
    e: 146,
  },
  t1Row {
    a: 153,
    b: 151,
    c: 150,
    d: null,
    e: null,
  },
  t1Row {
    a: 159,
    b: 158,
    c: 155,
    d: null,
    e: 157,
  },
  t1Row {
    a: 163,
    b: 160,
    c: 161,
    d: 164,
    e: 162,
  },
  t1Row {
    a: 168,
    b: 167,
    c: 166,
    d: null,
    e: 165,
  },
  t1Row {
    a: 174,
    b: 170,
    c: 172,
    d: 171,
    e: 173,
  },
  t1Row {
    a: 179,
    b: 175,
    c: 176,
    d: null,
    e: 177,
  },
  t1Row {
    a: 182,
    b: 181,
    c: 184,
    d: 183,
    e: 180,
  },
  t1Row {
    a: 188,
    b: 186,
    c: 187,
    d: 185,
    e: 189,
  },
  t1Row {
    a: 191,
    b: 194,
    c: 193,
    d: 190,
    e: 192,
  },
  t1Row {
    a: 199,
    b: 198,
    c: 195,
    d: 196,
    e: 197,
  },
  t1Row {
    a: 201,
    b: null,
    c: 202,
    d: 203,
    e: 204,
  },
  t1Row {
    a: null,
    b: 206,
    c: 208,
    d: 207,
    e: null,
  },
  t1Row {
    a: 213,
    b: 211,
    c: 214,
    d: 212,
    e: 210,
  },
  t1Row {
    a: 216,
    b: 218,
    c: 215,
    d: 217,
    e: 219,
  },
  t1Row {
    a: 220,
    b: 223,
    c: 224,
    d: 222,
    e: 221,
  },
  t1Row {
    a: 229,
    b: 228,
    c: 225,
    d: 226,
    e: 227,
  },
  t1Row {
    a: 234,
    b: 232,
    c: 231,
    d: 233,
    e: 230,
  },
  t1Row {
    a: 239,
    b: 236,
    c: null,
    d: 238,
    e: 237,
  },
  t1Row {
    a: 243,
    b: 240,
    c: 244,
    d: null,
    e: null,
  },
  t1Row {
    a: 245,
    b: 249,
    c: 247,
    d: 248,
    e: 246,
  },
]

/* SELECT e, (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d), a+b*2, d-e, abs(a), a+b*2+c*3 FROM t1 WHERE b>c OR a>b */
let result = from row in t1
  where (row.b > row.c || row.a > row.b)
  select [row.e, count(from x in t1
  where (x.c > row.c && x.d < row.d)
  select x), (row.a + (row.b * 2)), (row.d - row.e), (if row.a < 0 { -(row.a) } else { row.a }), ((row.a + (row.b * 2)) + (row.c * 3))]
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
for x in flatResult {
  print(x)
}
test "case349" {
  expect flatResult == [null, 0, 369, null, 121, 738, 126, 0, 385, 2, 127, 760, 135, 0, 416, 1, 138, 827, 144, 0, 428, -4, 142, 851, null, 0, 455, null, 153, 905, 157, 0, 475, null, 159, 940, 165, 0, 502, null, 168, 1000, 192, 0, 579, -2, 191, 1158, 197, 0, 595, -1, 199, 1180, 219, 0, 652, -2, 216, 1297, 227, 0, 685, -1, 229, 1360, 230, 0, 698, 3, 234, 1391, 246, 0, 743, 2, 245, 1484, 109, 0, 317, -1, 107, 635, 132, 0, 391, 1, 131, 793, 146, 0, 439, null, 149, 880, 162, 0, 483, 2, 163, 966, 173, 0, 514, -2, 174, 1030, 177, 0, 529, null, 179, 1057, 180, 0, 544, 3, 182, 1096, 189, 0, 560, -4, 188, 1121, 210, 0, 635, 2, 213, 1277, 237, 0, 711, 1, 239, null, null, 0, 723, null, 243, 1455]
}

