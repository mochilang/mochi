/*
# line: 428
*/

type tab0Row {
  col0: int
  col1: int
  col2: int
}

let tab0 = [
  tab0Row {
    col0: 97,
    col1: 1,
    col2: 99,
  },
  tab0Row {
    col0: 15,
    col1: 81,
    col2: 47,
  },
  tab0Row {
    col0: 87,
    col1: 21,
    col2: 10,
  },
]

type tab1Row {
  col0: int
  col1: int
  col2: int
}

let tab1 = [
  tab1Row {
    col0: 51,
    col1: 14,
    col2: 96,
  },
  tab1Row {
    col0: 85,
    col1: 5,
    col2: 59,
  },
  tab1Row {
    col0: 91,
    col1: 47,
    col2: 68,
  },
]

type tab2Row {
  col0: int
  col1: int
  col2: int
}

let tab2 = [
  tab2Row {
    col0: 64,
    col1: 77,
    col2: 40,
  },
  tab2Row {
    col0: 75,
    col1: 67,
    col2: 58,
  },
  tab2Row {
    col0: 46,
    col1: 51,
    col2: 23,
  },
]

/* SELECT DISTINCT + col2 * + 97 * - 54, - col2 AS col0 FROM tab1 cor0 */
var result = from row in tab1
  select [row.col2 * 97 * (-54), (-(row.col2))]
result = from row in result
  group by row into g
  select g.key
result = from row in result
  order by join(from v in row select str(v), " " )
  select row
var flatResult = []
for row in result {
  for x in row {
    flatResult = append(flatResult, x)
  }
}
flatResult = from x in flatResult
  order by str(x)
  select x
for x in flatResult {
  print(x)
}
test "case45" {
  expect flatResult == [(-309042), (-356184), (-502848), (-59), (-68), (-96)]
}

