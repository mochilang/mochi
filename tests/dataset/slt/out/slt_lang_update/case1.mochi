// SQL: CREATE TABLE t1( x INTEGER, y VARCHAR(8) )
// SQL: INSERT INTO t1 VALUES(1,'true')
// SQL: INSERT INTO t1 VALUES(0,'false')
// SQL: INSERT INTO t1 VALUES(NULL,'NULL')
// SQL: CREATE INDEX t1i1 ON t1(x)
// EVIDENCE-OF: R-38515-45264 An UPDATE statement is used to modify a
// subset of the values stored in zero or more rows of the database table
// identified by the qualified-table-name specified as part of the UPDATE
// statement.
// SQL: UPDATE t1 SET x=1 WHERE x>0
// SQL: UPDATE t1 SET x=2 WHERE x>0
// SQL: UPDATE t1 SET y='true' WHERE x>0
// SQL: UPDATE t1 SET y='unknown' WHERE x>0
// SQL: UPDATE t1 SET z='foo'
// SQL: UPDATE t1 SET z='foo' WHERE x>0
// TBD-EVIDENCE-OF: R-55869-30521 If the UPDATE statement does not have a
// WHERE clause, all rows in the table are modified by the UPDATE.
// SQL: UPDATE t1 SET x=3

// SQL: SELECT count(*) FROM t1 WHERE x=3

let t1 = [
  {
    x: 3,
    y: "unknown",
  },
  {
    x: 3,
    y: "false",
  },
  {
    x: 3,
    y: "NULL",
  },
]

let result = count(from row in t1
  where row.x == 3
  select row)
print(result)

test "case1" {
  expect result == 3
}
