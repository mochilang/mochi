let customer = [{c_customer_sk: 1, c_current_addr_sk: 1, c_current_cdemo_sk: 1}]
let customer_address = [{ca_address_sk: 1, ca_county: "Rush County"}]
let customer_demographics = [{cd_demo_sk: 1, cd_gender: "F", cd_marital_status: "M", cd_education_status: "College", cd_purchase_estimate: 100, cd_credit_rating: "A", cd_dep_count: 1, cd_dep_employed_count: 0, cd_dep_college_count: 0}]
let store_sales = [{ss_customer_sk: 1, ss_sold_date_sk: 1}]
let web_sales = [{ws_bill_customer_sk: 1, ws_sold_date_sk: 1}]
let catalog_sales = [{cs_ship_customer_sk: 1, cs_sold_date_sk: 1}]
let date_dim = [{d_date_sk: 1, d_year: 2002, d_moy: 1}]

let result =
  from c in customer
  join ca in customer_address on c.c_current_addr_sk == ca.ca_address_sk
  join cd in customer_demographics on c.c_current_cdemo_sk == cd.cd_demo_sk
  where ca.ca_county == "Rush County"
    && exists(from ss in store_sales join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk where ss.ss_customer_sk == c.c_customer_sk && d.d_year == 2002 && d.d_moy >= 1 && d.d_moy <= 4 select true)
    && (exists(from ws in web_sales join d in date_dim on ws.ws_sold_date_sk == d.d_date_sk where ws.ws_bill_customer_sk == c.c_customer_sk && d.d_year == 2002 && d.d_moy >= 1 && d.d_moy <= 4 select true) ||
        exists(from cs in catalog_sales join d in date_dim on cs.cs_sold_date_sk == d.d_date_sk where cs.cs_ship_customer_sk == c.c_customer_sk && d.d_year == 2002 && d.d_moy >= 1 && d.d_moy <= 4 select true))
  group by {cd_gender: cd.cd_gender, cd_marital_status: cd.cd_marital_status, cd_education_status: cd.cd_education_status, cd_purchase_estimate: cd.cd_purchase_estimate, cd_credit_rating: cd.cd_credit_rating, cd_dep_count: cd.cd_dep_count, cd_dep_employed_count: cd.cd_dep_employed_count, cd_dep_college_count: cd.cd_dep_college_count} into g
  select {cd_gender: g.key.cd_gender, cd_marital_status: g.key.cd_marital_status, cd_education_status: g.key.cd_education_status, cnt1: count(g), cd_purchase_estimate: g.key.cd_purchase_estimate, cnt2: count(g), cd_credit_rating: g.key.cd_credit_rating, cnt3: count(g), cd_dep_count: g.key.cd_dep_count, cnt4: count(g), cd_dep_employed_count: g.key.cd_dep_employed_count, cnt5: count(g), cd_dep_college_count: g.key.cd_dep_college_count, cnt6: count(g)}

json(result)

test "TPCDC Q10 simplified" {
  expect first(result).cnt1 == 1
}
