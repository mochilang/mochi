// Shipping time buckets for catalog sales
type CatalogSale { cs_ship_date_sk: int, cs_sold_date_sk: int, cs_warehouse_sk: int, cs_ship_mode_sk: int, cs_call_center_sk: int }
type Warehouse { w_warehouse_sk: int, w_warehouse_name: string }
type ShipMode { sm_ship_mode_sk: int, sm_type: string }
type CallCenter { cc_call_center_sk: int, cc_name: string }

let catalog_sales = [
  {cs_ship_date_sk: 31, cs_sold_date_sk: 1, cs_warehouse_sk: 1, cs_ship_mode_sk: 1, cs_call_center_sk: 1},
  {cs_ship_date_sk: 51, cs_sold_date_sk: 1, cs_warehouse_sk: 1, cs_ship_mode_sk: 1, cs_call_center_sk: 1},
  {cs_ship_date_sk: 71, cs_sold_date_sk: 1, cs_warehouse_sk: 1, cs_ship_mode_sk: 1, cs_call_center_sk: 1},
  {cs_ship_date_sk: 101, cs_sold_date_sk: 1, cs_warehouse_sk: 1, cs_ship_mode_sk: 1, cs_call_center_sk: 1},
  {cs_ship_date_sk: 131, cs_sold_date_sk: 1, cs_warehouse_sk: 1, cs_ship_mode_sk: 1, cs_call_center_sk: 1},
  {cs_ship_date_sk: 45, cs_sold_date_sk: 1, cs_warehouse_sk: 1, cs_ship_mode_sk: 2, cs_call_center_sk: 1}
]

let warehouse = [{w_warehouse_sk: 1, w_warehouse_name: "Warehouse1"}]
let ship_mode = [{sm_ship_mode_sk: 1, sm_type: "EXP"}]
let call_center = [{cc_call_center_sk: 1, cc_name: "CC1"}]

let grouped =
  from cs in catalog_sales
  join w in warehouse on cs.cs_warehouse_sk == w.w_warehouse_sk
  join sm in ship_mode on cs.cs_ship_mode_sk == sm.sm_ship_mode_sk
  join cc in call_center on cs.cs_call_center_sk == cc.cc_call_center_sk
  group by {warehouse: substr(w.w_warehouse_name,1,20), sm_type: sm.sm_type, cc_name: cc.cc_name} into g
  select {
    warehouse: g.key.warehouse,
    sm_type: g.key.sm_type,
    cc_name: g.key.cc_name,
    d30: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk <= 30 select x),
    d60: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60 select x),
    d90: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90 select x),
    d120: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120 select x),
    dmore: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 120 select x)
  } |> collect

json(grouped)

test "TPCDC Q99 buckets" {
  expect grouped == [{warehouse: "Warehouse1", sm_type: "EXP", cc_name: "CC1", d30: 1, d60: 1, d90: 1, d120: 1, dmore: 1}]
}
