let item = [
  {i_item_sk: 1, i_brand_id: 1, i_class_id: 1, i_category_id: 1}
]

let store_sales = [
  {i_item_sk: 1, ss_quantity: 3, ss_list_price: 10.0, d_year: 1999},
  {i_item_sk: 1, ss_quantity: 7, ss_list_price: 10.0, d_year: 2001, d_moy: 11}
]

let catalog_sales = [
  {i_item_sk: 1, cs_quantity: 4, cs_list_price: 10.0, d_year: 1999},
  {i_item_sk: 1, cs_quantity: 8, cs_list_price: 10.0, d_year: 2001, d_moy: 11}
]

let web_sales = [
  {i_item_sk: 1, ws_quantity: 5, ws_list_price: 10.0, d_year: 1999},
  {i_item_sk: 1, ws_quantity: 9, ws_list_price: 10.0, d_year: 2001, d_moy: 11}
]

// items appearing in all channels between 1999 and 2001
let cross_items =
  let store_items = distinct(from s in store_sales select s.i_item_sk)
  let catalog_items = distinct(from c in catalog_sales select c.i_item_sk)
  let web_items = distinct(from w in web_sales select w.i_item_sk)
  from i in store_items where contains(catalog_items, i) && contains(web_items, i) select i |> to_list

// average sales across all channels in that period
let all_sales =
  concat(
    from s in store_sales select s.ss_quantity * s.ss_list_price,
    from c in catalog_sales select c.cs_quantity * c.cs_list_price,
    from w in web_sales select w.ws_quantity * w.ws_list_price
  )
let avg_sales = avg(all_sales)

// totals for November of 2001
let result =
  from channel in ["store", "catalog", "web"]
  let rows =
    if channel == "store" {
      from s in store_sales where s.d_year == 2001 && s.d_moy == 11 && contains(cross_items, s.i_item_sk) select {
        qty_price: s.ss_quantity * s.ss_list_price,
        item_sk: s.i_item_sk
      }
    } else if channel == "catalog" {
      from c in catalog_sales where c.d_year == 2001 && c.d_moy == 11 && contains(cross_items, c.i_item_sk) select {
        qty_price: c.cs_quantity * c.cs_list_price,
        item_sk: c.i_item_sk
      }
    } else {
      from w in web_sales where w.d_year == 2001 && w.d_moy == 11 && contains(cross_items, w.i_item_sk) select {
        qty_price: w.ws_quantity * w.ws_list_price,
        item_sk: w.i_item_sk
      }
    }
  let total = sum(from r in rows select r.qty_price)
  let count_rows = len(rows)
  where total > avg_sales
  join it in item on first(from r in rows select r.item_sk) == it.i_item_sk
  select {
    channel: channel,
    i_brand_id: it.i_brand_id,
    i_class_id: it.i_class_id,
    i_category_id: it.i_category_id,
    sales: total,
    number_sales: count_rows
  }
  |> to_list

json(result)

test "TPCDC Q14 channel sales" {
  expect result == [
    {channel: "store", i_brand_id: 1, i_class_id: 1, i_category_id: 1, sales: 70.0, number_sales: 1},
    {channel: "catalog", i_brand_id: 1, i_class_id: 1, i_category_id: 1, sales: 80.0, number_sales: 1},
    {channel: "web", i_brand_id: 1, i_class_id: 1, i_category_id: 1, sales: 90.0, number_sales: 1}
  ]
}
