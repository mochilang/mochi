let date_dim = [
  { d_date_sk: 1, d_date: "2000-08-15" }
]

let store = [
  { s_store_sk: 1, s_store_id: 1 },
  { s_store_sk: 2, s_store_id: 2 }
]

let catalog_page = [
  { cp_catalog_page_sk: 1, cp_catalog_page_id: 1 },
  { cp_catalog_page_sk: 2, cp_catalog_page_id: 2 }
]

let web_site = [
  { web_site_sk: 1, web_site_id: 1 },
  { web_site_sk: 2, web_site_id: 2 }
]

let item = [
  { i_item_sk: 1, i_current_price: 60 },
  { i_item_sk: 2, i_current_price: 70 }
]

let promotion = [
  { p_promo_sk: 1, p_channel_tv: "N" }
]

let store_sales = [
  { ss_item_sk: 1, ss_ticket_number: 100, ss_ext_sales_price: 100.0, ss_net_profit: 20.0, ss_sold_date_sk: 1, ss_store_sk: 1, ss_promo_sk: 1 },
  { ss_item_sk: 2, ss_ticket_number: 101, ss_ext_sales_price: 50.0, ss_net_profit: 10.0, ss_sold_date_sk: 1, ss_store_sk: 1, ss_promo_sk: 1 },
  { ss_item_sk: 1, ss_ticket_number: 102, ss_ext_sales_price: 60.0, ss_net_profit: 12.0, ss_sold_date_sk: 1, ss_store_sk: 2, ss_promo_sk: 1 }
]

let store_returns = [
  { sr_item_sk: 1, sr_ticket_number: 100, sr_return_amt: 15.0, sr_net_loss: 3.0 },
  { sr_item_sk: 1, sr_ticket_number: 102, sr_return_amt: 5.0, sr_net_loss: 1.0 }
]

let catalog_sales = [
  { cs_item_sk: 1, cs_order_number: 200, cs_ext_sales_price: 40.0, cs_net_profit: 8.0, cs_sold_date_sk: 1, cs_catalog_page_sk: 1, cs_promo_sk: 1 },
  { cs_item_sk: 2, cs_order_number: 201, cs_ext_sales_price: 80.0, cs_net_profit: 16.0, cs_sold_date_sk: 1, cs_catalog_page_sk: 1, cs_promo_sk: 1 },
  { cs_item_sk: 2, cs_order_number: 202, cs_ext_sales_price: 20.0, cs_net_profit: 4.0, cs_sold_date_sk: 1, cs_catalog_page_sk: 2, cs_promo_sk: 1 }
]

let catalog_returns = [
  { cr_item_sk: 1, cr_order_number: 200, cr_return_amount: 4.0, cr_net_loss: 1.0 },
  { cr_item_sk: 2, cr_order_number: 201, cr_return_amount: 10.0, cr_net_loss: 2.0 }
]

let web_sales = [
  { ws_item_sk: 1, ws_order_number: 300, ws_ext_sales_price: 70.0, ws_net_profit: 14.0, ws_sold_date_sk: 1, ws_web_site_sk: 1, ws_promo_sk: 1 },
  { ws_item_sk: 2, ws_order_number: 301, ws_ext_sales_price: 30.0, ws_net_profit: 6.0, ws_sold_date_sk: 1, ws_web_site_sk: 1, ws_promo_sk: 1 },
  { ws_item_sk: 1, ws_order_number: 302, ws_ext_sales_price: 20.0, ws_net_profit: 5.0, ws_sold_date_sk: 1, ws_web_site_sk: 2, ws_promo_sk: 1 }
]

let web_returns = [
  { wr_item_sk: 1, wr_order_number: 300, wr_return_amt: 7.0, wr_net_loss: 1.0 },
  { wr_item_sk: 1, wr_order_number: 302, wr_return_amt: 3.0, wr_net_loss: 0.5 }
]

let ssr =
  from ss in store_sales
  left join sr in store_returns on ss.ss_item_sk == sr.sr_item_sk && ss.ss_ticket_number == sr.sr_ticket_number
  join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  join s in store on ss.ss_store_sk == s.s_store_sk
  join i in item on ss.ss_item_sk == i.i_item_sk
  join p in promotion on ss.ss_promo_sk == p.p_promo_sk
  where i.i_current_price > 50 && p.p_channel_tv == "N"
  group by s.s_store_id into g
  select {
    channel: "store channel",
    id: "store" + g.key,
    sales: sum(from x in g select x.ss.ss_ext_sales_price),
    returns: sum(from x in g select coalesce(x.sr?.sr_return_amt, 0.0)),
    profit: sum(from x in g select x.ss.ss_net_profit - coalesce(x.sr?.sr_net_loss, 0.0))
  }

let csr =
  from cs in catalog_sales
  left join cr in catalog_returns on cs.cs_item_sk == cr.cr_item_sk && cs.cs_order_number == cr.cr_order_number
  join d in date_dim on cs.cs_sold_date_sk == d.d_date_sk
  join cp in catalog_page on cs.cs_catalog_page_sk == cp.cp_catalog_page_sk
  join i in item on cs.cs_item_sk == i.i_item_sk
  join p in promotion on cs.cs_promo_sk == p.p_promo_sk
  where i.i_current_price > 50 && p.p_channel_tv == "N"
  group by cp.cp_catalog_page_id into g
  select {
    channel: "catalog channel",
    id: "catalog_page" + g.key,
    sales: sum(from x in g select x.cs.cs_ext_sales_price),
    returns: sum(from x in g select coalesce(x.cr?.cr_return_amount, 0.0)),
    profit: sum(from x in g select x.cs.cs_net_profit - coalesce(x.cr?.cr_net_loss, 0.0))
  }

let wsr =
  from ws in web_sales
  left join wr in web_returns on ws.ws_item_sk == wr.wr_item_sk && ws.ws_order_number == wr.wr_order_number
  join d in date_dim on ws.ws_sold_date_sk == d.d_date_sk
  join w in web_site on ws.ws_web_site_sk == w.web_site_sk
  join i in item on ws.ws_item_sk == i.i_item_sk
  join p in promotion on ws.ws_promo_sk == p.p_promo_sk
  where i.i_current_price > 50 && p.p_channel_tv == "N"
  group by w.web_site_id into g
  select {
    channel: "web channel",
    id: "web_site" + g.key,
    sales: sum(from x in g select x.ws.ws_ext_sales_price),
    returns: sum(from x in g select coalesce(x.wr?.wr_return_amt, 0.0)),
    profit: sum(from x in g select x.ws.ws_net_profit - coalesce(x.wr?.wr_net_loss, 0.0))
  }

let result =
  concat(ssr, csr, wsr)
  |> sort_by(fn(a,b) a.channel < b.channel || (a.channel == b.channel && a.id < b.id))

json(result)

test "TPCDC Q80 totals" {
  expect result == [
    { channel: "catalog channel", id: "catalog_page1", sales: 120.0, returns: 14.0, profit: 21.0 },
    { channel: "catalog channel", id: "catalog_page2", sales: 20.0, returns: 0.0, profit: 4.0 },
    { channel: "store channel", id: "store1", sales: 150.0, returns: 15.0, profit: 27.0 },
    { channel: "store channel", id: "store2", sales: 60.0, returns: 5.0, profit: 11.0 },
    { channel: "web channel", id: "web_site1", sales: 100.0, returns: 7.0, profit: 19.0 },
    { channel: "web channel", id: "web_site2", sales: 20.0, returns: 3.0, profit: 4.5 }
  ]
}
