// Bucket statistics for store sales quantities

type StoreSale { ss_quantity: int, ss_list_price: float, ss_coupon_amt: float, ss_wholesale_cost: float }

let store_sales = [
  { ss_quantity: 3, ss_list_price: 100.0, ss_coupon_amt: 50.0, ss_wholesale_cost: 30.0 },
  { ss_quantity: 8, ss_list_price: 80.0, ss_coupon_amt: 10.0, ss_wholesale_cost: 20.0 },
  { ss_quantity: 15, ss_list_price: 70.0, ss_coupon_amt: 5.0, ss_wholesale_cost: 25.0 },
  { ss_quantity: 4, ss_list_price: 90.0, ss_coupon_amt: 20.0, ss_wholesale_cost: 15.0 },
  { ss_quantity: 9, ss_list_price: 85.0, ss_coupon_amt: 0.0, ss_wholesale_cost: 10.0 }
]

let bucket1 =
  from ss in store_sales
  where ss.ss_quantity >= 0 && ss.ss_quantity <= 5
    && (ss.ss_list_price between 0 && 110 || ss.ss_coupon_amt between 0 && 1000 || ss.ss_wholesale_cost between 0 && 50)
  select ss

let bucket2 =
  from ss in store_sales
  where ss.ss_quantity >= 6 && ss.ss_quantity <= 10
    && (ss.ss_list_price between 0 && 110 || ss.ss_coupon_amt between 0 && 1000 || ss.ss_wholesale_cost between 0 && 50)
  select ss

let result = {
  B1_LP: avg(from x in bucket1 select x.ss_list_price),
  B1_CNT: count(bucket1),
  B1_CNTD: count(distinct from x in bucket1 select x.ss_list_price),
  B2_LP: avg(from x in bucket2 select x.ss_list_price),
  B2_CNT: count(bucket2),
  B2_CNTD: count(distinct from x in bucket2 select x.ss_list_price)
}

json(result)

test "TPCDC Q28 buckets" {
  expect result == {
    B1_LP: 95.0,
    B1_CNT: 2,
    B1_CNTD: 2,
    B2_LP: 82.5,
    B2_CNT: 2,
    B2_CNTD: 2
  }
}
