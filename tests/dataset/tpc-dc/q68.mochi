// Minimal dataset for TPC-DC Q68
let store_sales = [
  { ss_ticket_number: 1, ss_customer_sk: 1, ss_addr_sk: 10, ss_hdemo_sk: 1, ss_store_sk: 1, ss_sold_date_sk: 1, ss_ext_sales_price: 100.0, ss_ext_list_price: 120.0, ss_ext_tax: 5.0 },
  { ss_ticket_number: 2, ss_customer_sk: 2, ss_addr_sk: 10, ss_hdemo_sk: 1, ss_store_sk: 1, ss_sold_date_sk: 1, ss_ext_sales_price: 200.0, ss_ext_list_price: 250.0, ss_ext_tax: 10.0 },
  { ss_ticket_number: 3, ss_customer_sk: 3, ss_addr_sk: 10, ss_hdemo_sk: 1, ss_store_sk: 1, ss_sold_date_sk: 1, ss_ext_sales_price: 50.0, ss_ext_list_price: 70.0, ss_ext_tax: 2.0 }
]

let date_dim = [
  { d_date_sk: 1, d_dom: 1, d_year: 1999 }
]

let store = [
  { s_store_sk: 1, s_city: "Midway" }
]

let household_demographics = [
  { hd_demo_sk: 1, hd_dep_count: 4, hd_vehicle_count: 2 }
]

let customer_address = [
  { ca_address_sk: 10, ca_city: "City1" },
  { ca_address_sk: 20, ca_city: "City2" }
]

let customer = [
  { c_customer_sk: 1, c_current_addr_sk: 20, c_last_name: "Doe", c_first_name: "John" },
  { c_customer_sk: 2, c_current_addr_sk: 20, c_last_name: "Smith", c_first_name: "Jane" },
  { c_customer_sk: 3, c_current_addr_sk: 10, c_last_name: "Brown", c_first_name: "Bob" }
]

let current_addr = customer_address

let dn =
  from ss in store_sales
  join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  join s in store on ss.ss_store_sk == s.s_store_sk
  join hd in household_demographics on ss.ss_hdemo_sk == hd.hd_demo_sk
  join ca in customer_address on ss.ss_addr_sk == ca.ca_address_sk
  where d.d_dom >= 1 && d.d_dom <= 2 &&
        (hd.hd_dep_count == 4 || hd.hd_vehicle_count == 3) &&
        d.d_year >= 1999 && d.d_year <= 2001 &&
        (s.s_city == "Midway" || s.s_city == "Fairview")
  group by { ss_ticket_number: ss.ss_ticket_number, ss_customer_sk: ss.ss_customer_sk, ca_city: ca.ca_city } into g
  select {
    ss_ticket_number: g.key.ss_ticket_number,
    ss_customer_sk: g.key.ss_customer_sk,
    ca_city: g.key.ca_city,
    extended_price: sum(from x in g select x.ss_ext_sales_price),
    list_price: sum(from x in g select x.ss_ext_list_price),
    extended_tax: sum(from x in g select x.ss_ext_tax)
  }

let result =
  from dn1 in dn
  join c in customer on dn1.ss_customer_sk == c.c_customer_sk
  join curr in current_addr on c.c_current_addr_sk == curr.ca_address_sk
  where curr.ca_city != dn1.ca_city
  sort by c.c_last_name, dn1.ss_ticket_number
  select {
    c_last_name: c.c_last_name,
    c_first_name: c.c_first_name,
    ca_city: curr.ca_city,
    bought_city: dn1.ca_city,
    ss_ticket_number: dn1.ss_ticket_number,
    extended_price: dn1.extended_price,
    extended_tax: dn1.extended_tax,
    list_price: dn1.list_price
  }

json(result)

test "TPCDC Q68 sales by customer city" {
  expect result == [
    { c_last_name: "Doe", c_first_name: "John", ca_city: "City2", bought_city: "City1", ss_ticket_number: 1, extended_price: 100.0, extended_tax: 5.0, list_price: 120.0 },
    { c_last_name: "Smith", c_first_name: "Jane", ca_city: "City2", bought_city: "City1", ss_ticket_number: 2, extended_price: 200.0, extended_tax: 10.0, list_price: 250.0 }
  ]
}
