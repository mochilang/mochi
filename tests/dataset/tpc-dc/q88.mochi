let time_dim = [
  { t_time_sk: 1, t_hour: 8, t_minute: 45 },
  { t_time_sk: 2, t_hour: 9, t_minute: 15 },
  { t_time_sk: 3, t_hour: 10, t_minute: 5 },
  { t_time_sk: 4, t_hour: 11, t_minute: 45 }
]

let household_demographics = [
  { hd_demo_sk: 1, hd_dep_count: 1, hd_vehicle_count: 1 }
]

let store = [
  { s_store_sk: 1, s_store_name: "ese" }
]

let store_sales = [
  { ss_sold_time_sk: 1, ss_hdemo_sk: 1, ss_store_sk: 1 },
  { ss_sold_time_sk: 2, ss_hdemo_sk: 1, ss_store_sk: 1 },
  { ss_sold_time_sk: 3, ss_hdemo_sk: 1, ss_store_sk: 1 },
  { ss_sold_time_sk: 4, ss_hdemo_sk: 1, ss_store_sk: 1 }
]

let count_interval = fn(start_hour, start_min, end_hour, end_min) {
  from ss in store_sales
  join t in time_dim on ss.ss_sold_time_sk == t.t_time_sk
  join hd in household_demographics on ss.ss_hdemo_sk == hd.hd_demo_sk
  join s in store on ss.ss_store_sk == s.s_store_sk
  where s.s_store_name == "ese" &&
        (t.t_hour > start_hour || (t.t_hour == start_hour && t.t_minute >= start_min)) &&
        (t.t_hour < end_hour || (t.t_hour == end_hour && t.t_minute < end_min))
  count
}

let result = {
  h8_30_to_9: count_interval(8,30,9,0),
  h9_to_9_30: count_interval(9,0,9,30),
  h9_30_to_10: count_interval(9,30,10,0),
  h10_to_10_30: count_interval(10,0,10,30),
  h10_30_to_11: count_interval(10,30,11,0),
  h11_to_11_30: count_interval(11,0,11,30),
  h11_30_to_12: count_interval(11,30,12,0),
  h12_to_12_30: count_interval(12,0,12,30)
}

json(result)

test "TPCDC Q88 counts" {
  expect result == {
    h8_30_to_9: 1, h9_to_9_30: 1, h9_30_to_10: 0, h10_to_10_30: 1,
    h10_30_to_11: 0, h11_to_11_30: 0, h11_30_to_12: 1, h12_to_12_30: 0
  }
}
