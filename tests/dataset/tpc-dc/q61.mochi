// Minimal dataset for TPC-DC Q61
let promotion = [
  { p_promo_sk: 1, p_channel_dmail: "Y", p_channel_email: "N", p_channel_tv: "N" },
  { p_promo_sk: 2, p_channel_dmail: "N", p_channel_email: "N", p_channel_tv: "N" }
]

let store = [
  { s_store_sk: 1, s_gmt_offset: -5 }
]

let date_dim = [
  { d_date_sk: 1, d_year: 1998, d_moy: 11 }
]

let customer = [
  { c_customer_sk: 1, c_current_addr_sk: 10 }
]

let customer_address = [
  { ca_address_sk: 10, ca_gmt_offset: -5 }
]

let item = [
  { i_item_sk: 1, i_category: "Jewelry" }
]

let store_sales = [
  { ss_ext_sales_price: 100.0, ss_sold_date_sk: 1, ss_store_sk: 1, ss_promo_sk: 1, ss_customer_sk: 1, ss_item_sk: 1 },
  { ss_ext_sales_price: 200.0, ss_sold_date_sk: 1, ss_store_sk: 1, ss_promo_sk: 2, ss_customer_sk: 1, ss_item_sk: 1 }
]

let promotional_sales =
  from ss in store_sales
  join s in store on ss.ss_store_sk == s.s_store_sk
  join p in promotion on ss.ss_promo_sk == p.p_promo_sk
  join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  join c in customer on ss.ss_customer_sk == c.c_customer_sk
  join ca in customer_address on c.c_current_addr_sk == ca.ca_address_sk
  join i in item on ss.ss_item_sk == i.i_item_sk
  where ca.ca_gmt_offset == -5 &&
        s.s_gmt_offset == -5 &&
        i.i_category == "Jewelry" &&
        d.d_year == 1998 && d.d_moy == 11 &&
        (p.p_channel_dmail == "Y" || p.p_channel_email == "Y" || p.p_channel_tv == "Y")
  group by {} into g
  select sum(from x in g select x.ss_ext_sales_price)

let all_sales =
  from ss in store_sales
  join s in store on ss.ss_store_sk == s.s_store_sk
  join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  join c in customer on ss.ss_customer_sk == c.c_customer_sk
  join ca in customer_address on c.c_current_addr_sk == ca.ca_address_sk
  join i in item on ss.ss_item_sk == i.i_item_sk
  where ca.ca_gmt_offset == -5 &&
        s.s_gmt_offset == -5 &&
        i.i_category == "Jewelry" &&
        d.d_year == 1998 && d.d_moy == 11
  group by {} into g
  select sum(from x in g select x.ss_ext_sales_price)

let promotions = first(promotional_sales)
let total = first(all_sales)

let result = [{ promotions: promotions, total: total, pct: promotions * 100 / total }]

json(result)

test "TPCDC Q61 ratio of promotional to total sales" {
  expect result == [{promotions: 100.0, total: 300.0, pct: 33.333333333333336}]
}
