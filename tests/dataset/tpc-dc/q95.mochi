// Orders shipped from multiple warehouses with returns
type WebSale { ws_order_number: int, ws_warehouse_sk: int, ws_ship_date_sk: int, ws_ship_addr_sk: int, ws_web_site_sk: int, ws_ext_ship_cost: float, ws_net_profit: float }
type WebReturn { wr_order_number: int }
type DateDim { d_date_sk: int, d_date: string }
type CustomerAddress { ca_address_sk: int, ca_state: string }
type WebSite { web_site_sk: int, web_company_name: string }

let web_sales = [
  {ws_order_number: 1, ws_warehouse_sk: 1, ws_ship_date_sk: 1, ws_ship_addr_sk: 1, ws_web_site_sk: 1, ws_ext_ship_cost: 2.0, ws_net_profit: 5.0},
  {ws_order_number: 1, ws_warehouse_sk: 2, ws_ship_date_sk: 1, ws_ship_addr_sk: 1, ws_web_site_sk: 1, ws_ext_ship_cost: 0.0, ws_net_profit: 0.0}
]

let web_returns = [{wr_order_number: 1}]
let date_dim = [{d_date_sk: 1, d_date: "2001-02-01"}]
let customer_address = [{ca_address_sk: 1, ca_state: "CA"}]
let web_site = [{web_site_sk: 1, web_company_name: "pri"}]

let ws_wh =
  from ws1 in web_sales
  from ws2 in web_sales
  where ws1.ws_order_number == ws2.ws_order_number && ws1.ws_warehouse_sk != ws2.ws_warehouse_sk
  select {ws_order_number: ws1.ws_order_number}

let filtered =
  from ws in web_sales
  join d in date_dim on ws.ws_ship_date_sk == d.d_date_sk
  join ca in customer_address on ws.ws_ship_addr_sk == ca.ca_address_sk
  join w in web_site on ws.ws_web_site_sk == w.web_site_sk
  where ca.ca_state == "CA" && w.web_company_name == "pri" &&
        ws.ws_order_number in (from x in ws_wh select x.ws_order_number) &&
        ws.ws_order_number in (from wr in web_returns select wr.wr_order_number)
  select ws

let result = {
  order_count: count(distinct from x in filtered select x.ws_order_number),
  total_shipping_cost: sum(from x in filtered select x.ws_ext_ship_cost),
  total_net_profit: sum(from x in filtered select x.ws_net_profit)
}

json(result)

test "TPCDC Q95 shipping returns" {
  expect result == {order_count: 1, total_shipping_cost: 2.0, total_net_profit: 5.0}
}
