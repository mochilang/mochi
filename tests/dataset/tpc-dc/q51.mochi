let date_dim = [
  {date_sk: 1, month_seq: 1},
  {date_sk: 2, month_seq: 2},
  {date_sk: 3, month_seq: 3},
  {date_sk: 4, month_seq: 4},
  {date_sk: 5, month_seq: 5}
]

let web_sales = [
  {item_sk: 1, sold_date: 1, price: 10},
  {item_sk: 1, sold_date: 2, price: 15},
  {item_sk: 1, sold_date: 3, price: 10},
  {item_sk: 1, sold_date: 4, price: 5},
  {item_sk: 1, sold_date: 5, price: 20},
  {item_sk: 2, sold_date: 1, price: 5},
  {item_sk: 2, sold_date: 2, price: 5},
  {item_sk: 2, sold_date: 3, price: 5},
  {item_sk: 2, sold_date: 4, price: 5},
  {item_sk: 2, sold_date: 5, price: 5}
  ,{item_sk: 3, sold_date: 1, price: 8}
  ,{item_sk: 3, sold_date: 2, price: 12}
  ,{item_sk: 3, sold_date: 3, price: 10}
  ,{item_sk: 3, sold_date: 4, price: 6}
  ,{item_sk: 3, sold_date: 5, price: 8}
]

let store_sales = [
  {item_sk: 1, sold_date: 1, price: 5},
  {item_sk: 1, sold_date: 2, price: 5},
  {item_sk: 1, sold_date: 3, price: 10},
  {item_sk: 1, sold_date: 4, price: 10},
  {item_sk: 1, sold_date: 5, price: 15},
  {item_sk: 2, sold_date: 1, price: 2},
  {item_sk: 2, sold_date: 2, price: 2},
  {item_sk: 2, sold_date: 3, price: 1},
  {item_sk: 2, sold_date: 4, price: 2},
  {item_sk: 2, sold_date: 5, price: 3}
  ,{item_sk: 3, sold_date: 1, price: 4}
  ,{item_sk: 3, sold_date: 2, price: 3}
  ,{item_sk: 3, sold_date: 3, price: 6}
  ,{item_sk: 3, sold_date: 4, price: 2}
  ,{item_sk: 3, sold_date: 5, price: 4}
]

// Aggregate sales by item and date
let ws_daily =
  from ws in web_sales
  join d in date_dim on ws.sold_date == d.date_sk
  group by {item: ws.item_sk, date: d.date_sk} into g
  sort by {item: g.key.item, date: g.key.date}
  select {item: g.key.item, date: g.key.date, sales: sum(from x in g select x.ws.price)}

let ss_daily =
  from ss in store_sales
  join d in date_dim on ss.sold_date == d.date_sk
  group by {item: ss.item_sk, date: d.date_sk} into g
  sort by {item: g.key.item, date: g.key.date}
  select {item: g.key.item, date: g.key.date, sales: sum(from x in g select x.ss.price)}

// Compute cumulative sums
var ws_running = []
var current_item = nil
var total = 0
for r in ws_daily {
  if current_item != r.item { current_item = r.item; total = 0 }
  total = total + r.sales
  ws_running = ws_running + [{item_sk:r.item, date:r.date, total:total}]
}

var ss_running = []
var ss_cur = nil
var ss_tot = 0
for r in ss_daily {
  if ss_cur != r.item { ss_cur = r.item; ss_tot = 0 }
  ss_tot = ss_tot + r.sales
  ss_running = ss_running + [{item_sk:r.item, date:r.date, total:ss_tot}]
}

var result = []
for w in ws_running {
  var s_total = 0
  for s in ss_running { if s.item_sk == w.item_sk && s.date == w.date { s_total = s.total } }
  result = result + [{item_sk:w.item_sk, d_date:w.date, web_sales:w.total, store_sales:s_total}]
}

json(result)

test "TPCDC Q51 cumulative" {
  expect result == [
    {item_sk:1, d_date:1, web_sales:10, store_sales:5},
    {item_sk:1, d_date:2, web_sales:25, store_sales:10},
    {item_sk:1, d_date:3, web_sales:35, store_sales:20},
    {item_sk:1, d_date:4, web_sales:40, store_sales:30},
    {item_sk:1, d_date:5, web_sales:60, store_sales:45},
    {item_sk:2, d_date:1, web_sales:5, store_sales:2},
    {item_sk:2, d_date:2, web_sales:10, store_sales:4},
    {item_sk:2, d_date:3, web_sales:15, store_sales:5},
    {item_sk:2, d_date:4, web_sales:20, store_sales:7},
    {item_sk:2, d_date:5, web_sales:25, store_sales:10},
    {item_sk:3, d_date:1, web_sales:8, store_sales:4},
    {item_sk:3, d_date:2, web_sales:20, store_sales:7},
    {item_sk:3, d_date:3, web_sales:30, store_sales:13},
    {item_sk:3, d_date:4, web_sales:36, store_sales:15},
    {item_sk:3, d_date:5, web_sales:44, store_sales:19}
  ]
}
