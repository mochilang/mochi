let customer = [
  { c_customer_id: "C1", c_current_addr_sk: 1, c_current_cdemo_sk: 1, c_current_hdemo_sk: 1, c_first_name: "John", c_last_name: "Doe" },
  { c_customer_id: "C2", c_current_addr_sk: 1, c_current_cdemo_sk: 2, c_current_hdemo_sk: 2, c_first_name: "Jane", c_last_name: "Smith" }
]

let customer_address = [
  { ca_address_sk: 1, ca_city: "Spring" }
]

let customer_demographics = [
  { cd_demo_sk: 1 },
  { cd_demo_sk: 2 }
]

let household_demographics = [
  { hd_demo_sk: 1, hd_income_band_sk: 1 },
  { hd_demo_sk: 2, hd_income_band_sk: 2 }
]

let income_band = [
  { ib_income_band_sk: 1, ib_lower_bound: 0, ib_upper_bound: 50000 },
  { ib_income_band_sk: 2, ib_lower_bound: 60000, ib_upper_bound: 100000 }
]

let store_returns = [
  { sr_cdemo_sk: 1 },
  { sr_cdemo_sk: 1 },
  { sr_cdemo_sk: 2 }
]

let result =
  from c in customer
  join ca in customer_address on c.c_current_addr_sk == ca.ca_address_sk
  join cd in customer_demographics on c.c_current_cdemo_sk == cd.cd_demo_sk
  join hd in household_demographics on c.c_current_hdemo_sk == hd.hd_demo_sk
  join ib in income_band on hd.hd_income_band_sk == ib.ib_income_band_sk
  join sr in store_returns on sr.sr_cdemo_sk == cd.cd_demo_sk
  where ca.ca_city == "Spring" && ib.ib_lower_bound >= 0 && ib.ib_upper_bound <= 50000
  sort by c.c_customer_id
  select { customer_id: c.c_customer_id, customername: c.c_last_name + ", " + c.c_first_name }
  |> distinct
  |> to_list

json(result)

test "TPCDC Q84 customers" {
  expect result == [{ customer_id: "C1", customername: "Doe, John" }]
}
