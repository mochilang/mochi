// Minimal dataset for TPC-DC Q65
let store = [
  { s_store_sk: 1, s_store_name: "Store1" }
]

let item = [
  { i_item_sk: 1, i_item_desc: "Item1", i_current_price: 12.0, i_wholesale_cost: 8.0, i_brand: "Brand1" },
  { i_item_sk: 2, i_item_desc: "Item2", i_current_price: 10.0, i_wholesale_cost: 7.0, i_brand: "Brand2" }
]

let date_dim = [
  { d_date_sk: 1, d_month_seq: 1176 },
  { d_date_sk: 2, d_month_seq: 1176 }
]

let store_sales = [
  { ss_store_sk: 1, ss_item_sk: 1, ss_sold_date_sk: 1, ss_sales_price: 100.0 },
  { ss_store_sk: 1, ss_item_sk: 1, ss_sold_date_sk: 2, ss_sales_price: 50.0 },
  { ss_store_sk: 1, ss_item_sk: 2, ss_sold_date_sk: 1, ss_sales_price: 5.0 }
]

let sales =
  from ss in store_sales
  join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  where d.d_month_seq >= 1176 && d.d_month_seq <= 1176 + 11
  group by {ss_store_sk: ss.ss_store_sk, ss_item_sk: ss.ss_item_sk} into g
  select { ss_store_sk: g.key.ss_store_sk, ss_item_sk: g.key.ss_item_sk, revenue: sum(from x in g select x.ss_sales_price) }

let ave =
  from s in sales
  group by {ss_store_sk: s.ss_store_sk} into g
  select { ss_store_sk: g.key.ss_store_sk, ave: avg(from x in g select x.revenue) }

let result =
  from sb in ave
  join sc in sales on sb.ss_store_sk == sc.ss_store_sk
  join s in store on sb.ss_store_sk == s.s_store_sk
  join i in item on sc.ss_item_sk == i.i_item_sk
  where sc.revenue <= 0.1 * sb.ave
  sort by s.s_store_name, i.i_item_desc
  select { s_store_name: s.s_store_name, i_item_desc: i.i_item_desc, revenue: sc.revenue, i_current_price: i.i_current_price, i_wholesale_cost: i.i_wholesale_cost, i_brand: i.i_brand }

json(result)

test "TPCDC Q65 low selling items" {
  expect result == [{ s_store_name: "Store1", i_item_desc: "Item2", revenue: 5.0, i_current_price: 10.0, i_wholesale_cost: 7.0, i_brand: "Brand2" }]
}
