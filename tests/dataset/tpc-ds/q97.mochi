let store_sales = [
  { ss_customer_sk: 1, ss_item_sk: 1, ss_sold_date_sk: 1 }
]

let catalog_sales = [
  { cs_bill_customer_sk: 2, cs_item_sk: 1, cs_sold_date_sk: 1 }
]

let date_dim = [
  { d_date_sk: 1, d_month_seq: 1176 }
]

let ssci =
  from ss in store_sales
  join d in date_dim on d.d_date_sk == ss.ss_sold_date_sk
  where d.d_month_seq >= 1176 && d.d_month_seq <= 1176 + 11
  group by { customer_sk: ss.ss_customer_sk, item_sk: ss.ss_item_sk } into g
  select g.key

let csci =
  from cs in catalog_sales
  join d in date_dim on d.d_date_sk == cs.cs_sold_date_sk
  where d.d_month_seq >= 1176 && d.d_month_seq <= 1176 + 11
  group by { customer_sk: cs.cs_bill_customer_sk, item_sk: cs.cs_item_sk } into g
  select g.key

let joined =
  full_outer_join(ssci, csci, (a,b) => a.customer_sk == b.customer_sk && a.item_sk == b.item_sk)

let store_only = count(from j in joined where j.left != null && j.right == null select 1)
let catalog_only = count(from j in joined where j.left == null && j.right != null select 1)
let store_and_catalog = count(from j in joined where j.left != null && j.right != null select 1)

let result = [{ store_only, catalog_only, store_and_catalog }]

json(result)

test "TPCDS Q97 simplified" {
  expect result == [{ store_only: 1, catalog_only: 1, store_and_catalog: 0 }]
}
