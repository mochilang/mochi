// Customer demographics count by county with recent purchases

type Customer { c_customer_sk: int, c_current_addr_sk: int, c_current_cdemo_sk: int }
type CustomerAddress { ca_address_sk: int, ca_county: string }
type CustomerDemographics {
  cd_demo_sk: int,
  cd_gender: string,
  cd_marital_status: string,
  cd_education_status: string,
  cd_purchase_estimate: int,
  cd_credit_rating: string,
  cd_dep_count: int,
  cd_dep_employed_count: int,
  cd_dep_college_count: int
}
type StoreSale { ss_customer_sk: int, ss_sold_date_sk: int }
type DateDim { d_date_sk: int, d_year: int, d_moy: int }

let customer = [
  { c_customer_sk: 1, c_current_addr_sk: 1, c_current_cdemo_sk: 1 }
]
let customer_address = [ { ca_address_sk: 1, ca_county: "CountyA" } ]
let customer_demographics = [
  {
    cd_demo_sk: 1,
    cd_gender: "F",
    cd_marital_status: "M",
    cd_education_status: "College",
    cd_purchase_estimate: 5000,
    cd_credit_rating: "Good",
    cd_dep_count: 1,
    cd_dep_employed_count: 1,
    cd_dep_college_count: 0
  }
]
let store_sales = [ { ss_customer_sk: 1, ss_sold_date_sk: 1 } ]
let web_sales = []
let catalog_sales = []
let date_dim = [ { d_date_sk: 1, d_year: 2000, d_moy: 2 } ]

let active =
  from c in customer
  join ca in customer_address on c.c_current_addr_sk == ca.ca_address_sk && ca.ca_county == "CountyA"
  join cd in customer_demographics on c.c_current_cdemo_sk == cd.cd_demo_sk
  where exists(
          from ss in store_sales
          join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
          where ss.ss_customer_sk == c.c_customer_sk && d.d_year == 2000 &&
                d.d_moy >= 2 && d.d_moy <= 5
          select ss)
  select cd

let result =
  from a in active
  group by {
    gender: a.cd_gender,
    marital: a.cd_marital_status,
    education: a.cd_education_status,
    purchase: a.cd_purchase_estimate,
    credit: a.cd_credit_rating,
    dep: a.cd_dep_count,
    depemp: a.cd_dep_employed_count,
    depcol: a.cd_dep_college_count
  } into g
  select {
    cd_gender: g.key.gender,
    cd_marital_status: g.key.marital,
    cd_education_status: g.key.education,
    cnt1: count(from _ in g select _),
    cd_purchase_estimate: g.key.purchase,
    cnt2: count(from _ in g select _),
    cd_credit_rating: g.key.credit,
    cnt3: count(from _ in g select _),
    cd_dep_count: g.key.dep,
    cnt4: count(from _ in g select _),
    cd_dep_employed_count: g.key.depemp,
    cnt5: count(from _ in g select _),
    cd_dep_college_count: g.key.depcol,
    cnt6: count(from _ in g select _)
  }

json(result)

test "TPCDS Q10 demographics count" {
  expect result == [
    {
      cd_gender: "F",
      cd_marital_status: "M",
      cd_education_status: "College",
      cnt1: 1,
      cd_purchase_estimate: 5000,
      cnt2: 1,
      cd_credit_rating: "Good",
      cnt3: 1,
      cd_dep_count: 1,
      cnt4: 1,
      cd_dep_employed_count: 1,
      cnt5: 1,
      cd_dep_college_count: 0,
      cnt6: 1
    }
  ]
}
