// Revenue segmentation example
let store_sales = [
  {customer: 1, sold_date: 2, price: 60.0},
  {customer: 2, sold_date: 2, price: 40.0}
]
let date_dim = [ {d_date_sk: 2, d_month_seq: 5} ]
let customer = [ {c_customer_sk: 1, c_current_addr_sk: 1}, {c_customer_sk: 2, c_current_addr_sk: 1} ]
let customer_address = [ {ca_address_sk: 1, ca_county: "X", ca_state: "Y"} ]
let store = [ {s_store_sk: 1, s_county: "X", s_state: "Y"} ]

fun int(x: float): int {
  return x as int
}

let revenue =
  from ss in store_sales
  join d in date_dim on ss.sold_date == d.d_date_sk
  join c in customer on ss.customer == c.c_customer_sk
  join ca in customer_address on c.c_current_addr_sk == ca.ca_address_sk && ca.ca_county == "X" && ca.ca_state == "Y"
  join s in store on 1 == s.s_store_sk && ca.ca_county == s.s_county && ca.ca_state == s.s_state
  select {customer: c.c_customer_sk, amt: ss.price}

let by_customer =
  from r in revenue
  group by r.customer into g
  select {customer: g.key, revenue: sum(from x in g select x.amt)}

let segments =
  from r in by_customer
  group by {seg: int(r.revenue / 50)} into g
  select {segment: g.key.seg, num_customers: count(g), segment_base: g.key.seg * 50}

let result = segments

json(result)

test "TPCDS Q54 simplified" {
  expect result == [
    {segment: 1, num_customers: 1, segment_base: 50},
    {segment: 0, num_customers: 1, segment_base: 0}
  ]
}
