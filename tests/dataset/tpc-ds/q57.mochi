// Catalog sales deviation example
let catalog_sales = [
  {item: 1, call: 1, date: 1, price: 20.0},
  {item: 1, call: 1, date: 2, price: 20.0},
  {item: 1, call: 1, date: 3, price: 40.0}
]
let item = [{i_item_sk: 1, i_category: "A", i_brand: "B"}]
let call_center = [{cc_call_center_sk: 1, cc_name: "C1"}]
let date_dim = [
  {d_date_sk: 1, d_year: 2000, d_moy: 11},
  {d_date_sk: 2, d_year: 2000, d_moy: 12},
  {d_date_sk: 3, d_year: 2001, d_moy: 1}
]

fun abs(x: float): float {
  if x >= 0.0 {
    return x
  }
  return -x
}

let grouped =
  from cs in catalog_sales
  join i in item on cs.item == i.i_item_sk
  join d in date_dim on cs.date == d.d_date_sk
  join cc in call_center on cs.call == cc.cc_call_center_sk
  group by {cat: i.i_category, call: cc.cc_name, year: d.d_year} into g
  select {cat: g.key.cat, call: g.key.call, year: g.key.year, sum_sales: sum(from x in g select x.price)}

let avg_by_year =
  from g in grouped
  group by {cat: g.cat, call: g.call} into gg
  select {cat: gg.key.cat, call: gg.key.call, avg_sales: avg(from x in gg select x.sum_sales)}

let result =
  from g in grouped
  join a in avg_by_year on g.cat == a.cat && g.call == a.call
  where g.year == 2001 && a.avg_sales > 0 && abs(g.sum_sales - a.avg_sales)/a.avg_sales > 0.1
  select {i_category: g.cat, sum_sales: g.sum_sales}

json(result)

test "TPCDS Q57 simplified" {
  expect result == []
}
