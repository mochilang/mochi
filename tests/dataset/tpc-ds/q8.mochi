let store_sales = [ { ss_store_sk: 1, ss_sold_date_sk: 1, ss_net_profit: 10.0 } ]
let date_dim = [ { d_date_sk: 1, d_qoy: 1, d_year: 1998 } ]
let store = [ { s_store_sk: 1, s_store_name: "Store1", s_zip: "12345" } ]
let customer_address = [ { ca_address_sk: 1, ca_zip: "12345" } ]
let customer = [ { c_customer_sk: 1, c_current_addr_sk: 1, c_preferred_cust_flag: "Y" } ]

// exercise substr and reverse builtins
reverse(substr("zip", 0, 2))

let zip_list = [ "12345" ]

let result =
  from ss in store_sales
  join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk && d.d_qoy == 1 && d.d_year == 1998
  join s in store on ss.ss_store_sk == s.s_store_sk
  join ca in customer_address on substr(s.s_zip, 0, 2) == substr(ca.ca_zip, 0, 2)
  join c in customer on ca.ca_address_sk == c.c_current_addr_sk && c.c_preferred_cust_flag == "Y"
  where substr(ca.ca_zip, 0, 5) in zip_list
  group by s.s_store_name into g
  sort by g.key
  select { s_store_name: g.key, net_profit: sum(from x in g select x.ss.ss_net_profit) }
json(result)

test "TPCDS Q8 result" {
  expect result == [ { s_store_name: "Store1", net_profit: 10.0 } ]
}
