% Generated by Mochi compiler v0.10.26 on 2025-07-15T06:39:04Z
:- style_check(-singleton).
get_item(Container, Key, Val) :-
    is_dict(Container), !, (string(Key) -> atom_string(A, Key) ; A = Key), get_dict(A, Container, Val).
get_item(Container, Index, Val) :-
    string(Container), !, string_chars(Container, Chars), nth0(Index, Chars, Val).
get_item(List, Index, Val) :- nth0(Index, List, Val).

:- use_module(library(http/json)).
load_data(Path, Opts, Rows) :-
    (is_dict(Opts), get_dict(format, Opts, Fmt) -> true ; Fmt = 'json'),
    (Path == '' ; Path == '-' -> read_string(user_input, _, Text) ; read_file_to_string(Path, Text, [])),
    (Fmt == 'jsonl' ->
        split_string(Text, '\n', ' \t\r', Lines0),
        exclude(=(''), Lines0, Lines),
        findall(D, (member(L, Lines), open_string(L, S), json_read_dict(S, D), close(S)), Rows)
    ;
        open_string(Text, S), json_read_dict(S, Data), close(S),
        (is_list(Data) -> Rows = Data ; Rows = [Data])
    ).

expect(Cond) :- (Cond -> true ; throw(error('expect failed'))).

:- initialization(main, main).
main :-
    dict_create(_V0, map, [item_id-1, ss_item_rev-50]),
    Ss_items = _V0,
    dict_create(_V1, map, [item_id-1, cs_item_rev-60]),
    Cs_items = _V1,
    dict_create(_V2, map, [item_id-1, ws_item_rev-64]),
    Ws_items = _V2,
    get_item(Ss_items, 'ss_item_rev', _V3),
    get_item(Cs_items, 'cs_item_rev', _V4),
    get_item(Ws_items, 'ws_item_rev', _V5),
    Avg is (((_V3 + _V4) + _V5) / 3),
    get_item(Ss_items, 'item_id', _V6),
    dict_create(_V7, map, [item_id-_V6, average-Avg]),
    Result = [_V7],
    json_write_dict(current_output, Result), nl,
    true,
    dict_create(_V8, map, [item_id-1, average-58]),
    expect((Result == [_V8])),
    true.
