% Generated by Mochi compiler v0.10.26 on 2025-07-15T06:34:34Z
:- style_check(-singleton).
get_item(Container, Key, Val) :-
    is_dict(Container), !, (string(Key) -> atom_string(A, Key) ; A = Key), get_dict(A, Container, Val).
get_item(Container, Index, Val) :-
    string(Container), !, string_chars(Container, Chars), nth0(Index, Chars, Val).
get_item(List, Index, Val) :- nth0(Index, List, Val).

to_list(Str, L) :-
    string(Str), !,
    string_chars(Str, L).
to_list(L, L).

count(V, R) :-
    is_dict(V), !, get_dict('Items', V, Items), length(Items, R).
count(V, R) :-
    string(V), !, string_chars(V, C), length(C, R).
count(V, R) :-
    is_list(V), !, length(V, R).
count(_, _) :- throw(error('count expects list or group')).

avg(V, R) :-
    is_dict(V), !, get_dict('Items', V, Items), avg_list(Items, R).
avg(V, R) :-
    is_list(V), !, avg_list(V, R).
avg(_, _) :- throw(error('avg expects list or group')).
avg_list([], 0).
avg_list(L, R) :- sum_list(L, S), length(L, N), N > 0, R is S / N.

sum(V, R) :-
    is_dict(V), !, get_dict('Items', V, Items), sum_list(Items, R).
sum(V, R) :-
    is_list(V), !, sum_list(V, R).
sum(_, _) :- throw(error('sum expects list or group')).

group_insert(Key, Item, [], [_{key:Key, 'Items':[Item]}]).
group_insert(Key, Item, [G|Gs], [NG|Gs]) :- get_dict(key, G, Key), !, get_dict('Items', G, Items), append(Items, [Item], NItems), put_dict('Items', G, NItems, NG).
group_insert(Key, Item, [G|Gs], [G|Rs]) :- group_insert(Key, Item, Gs, Rs).
group_pairs([], Acc, Res) :- reverse(Acc, Res).
group_pairs([K-V|T], Acc, Res) :- group_insert(K, V, Acc, Acc1), group_pairs(T, Acc1, Res).
group_by(List, Fn, Groups) :- findall(K-V, (member(V, List), call(Fn, V, K)), Pairs), group_pairs(Pairs, [], Groups).

:- use_module(library(http/json)).
load_data(Path, Opts, Rows) :-
    (is_dict(Opts), get_dict(format, Opts, Fmt) -> true ; Fmt = 'json'),
    (Path == '' ; Path == '-' -> read_string(user_input, _, Text) ; read_file_to_string(Path, Text, [])),
    (Fmt == 'jsonl' ->
        split_string(Text, '\n', ' \t\r', Lines0),
        exclude(=(''), Lines0, Lines),
        findall(D, (member(L, Lines), open_string(L, S), json_read_dict(S, D), close(S)), Rows)
    ;
        open_string(Text, S), json_read_dict(S, Data), close(S),
        (is_list(Data) -> Rows = Data ; Rows = [Data])
    ).

expect(Cond) :- (Cond -> true ; throw(error('expect failed'))).

:- initialization(main, main).
main :-
    dict_create(_V0, map, [ticket-1, item-101, sold-1, customer-1, store-1]),
    dict_create(_V1, map, [ticket-2, item-102, sold-1, customer-1, store-1]),
    dict_create(_V2, map, [ticket-3, item-103, sold-1, customer-1, store-1]),
    dict_create(_V3, map, [ticket-4, item-104, sold-1, customer-1, store-1]),
    dict_create(_V4, map, [ticket-5, item-105, sold-1, customer-1, store-1]),
    Store_sales = [_V0, _V1, _V2, _V3, _V4],
    dict_create(_V5, map, [ticket-1, item-101, returned-16, customer-1]),
    dict_create(_V6, map, [ticket-2, item-102, returned-46, customer-1]),
    dict_create(_V7, map, [ticket-3, item-103, returned-76, customer-1]),
    dict_create(_V8, map, [ticket-4, item-104, returned-111, customer-1]),
    dict_create(_V9, map, [ticket-5, item-105, returned-151, customer-1]),
    Store_returns = [_V5, _V6, _V7, _V8, _V9],
    dict_create(_V10, map, [d_date_sk-1, d_year-2001, d_moy-7]),
    dict_create(_V11, map, [d_date_sk-16, d_year-2001, d_moy-8]),
    dict_create(_V12, map, [d_date_sk-46, d_year-2001, d_moy-8]),
    dict_create(_V13, map, [d_date_sk-76, d_year-2001, d_moy-8]),
    dict_create(_V14, map, [d_date_sk-111, d_year-2001, d_moy-8]),
    dict_create(_V15, map, [d_date_sk-151, d_year-2001, d_moy-8]),
    Date_dim = [_V10, _V11, _V12, _V13, _V14, _V15],
    dict_create(_V16, map, [s_store_sk-1, s_store_name-"Main", s_company_id-1, s_street_number-"1", s_street_name-"Main", s_street_type-"St", s_suite_number-"100", s_city-"City", s_county-"County", s_state-"CA", s_zip-"12345"]),
    Store = [_V16],
    Year is 2001,
    Month is 8,
    findall(_V34, (member(Ss, Store_sales), member(Sr, Store_returns), get_item(Ss, 'ticket', _V17), get_item(Sr, 'ticket', _V18), get_item(Ss, 'item', _V19), get_item(Sr, 'item', _V20), get_item(Ss, 'customer', _V21), get_item(Sr, 'customer', _V22), (((_V17 == _V18), (_V19 == _V20)), (_V21 == _V22)), member(D1, Date_dim), get_item(Ss, 'sold', _V23), get_item(D1, 'd_date_sk', _V24), (_V23 == _V24), member(D2, Date_dim), get_item(Sr, 'returned', _V25), get_item(D2, 'd_date_sk', _V26), get_item(D2, 'd_year', _V27), get_item(D2, 'd_moy', _V28), (((_V25 == _V26), (_V27 == Year)), (_V28 == Month)), member(S, Store), get_item(Ss, 'store', _V29), get_item(S, 's_store_sk', _V30), (_V29 == _V30), true, get_item(Sr, 'returned', _V31), get_item(Ss, 'sold', _V32), dict_create(_V33, map, [s-S, diff-(_V31 - _V32)]), _V34 = _V33), _V35),
    Joined = _V35,
    findall(_V39, (member(J, Joined), true, get_item(J, 's', _V36), _V37 = _V36, dict_create(_V38, map, ['J'-J]), _V39 = _V37-_V38), _V40),
    group_pairs(_V40, [], _V41),
    findall(_V68, (member(G, _V41), get_item(G, 'key', _V42), get_item(_V42, 's_store_name', _V43), findall(_V45, (member(X, G), get_item(X, 'diff', _V44), (_V44 =< 30), _V45 = 1), _V46), count(_V46, _V47), findall(_V50, (member(X, G), get_item(X, 'diff', _V48), get_item(X, 'diff', _V49), ((_V48 > 30), (_V49 =< 60)), _V50 = 1), _V51), count(_V51, _V52), findall(_V55, (member(X, G), get_item(X, 'diff', _V53), get_item(X, 'diff', _V54), ((_V53 > 60), (_V54 =< 90)), _V55 = 1), _V56), count(_V56, _V57), findall(_V60, (member(X, G), get_item(X, 'diff', _V58), get_item(X, 'diff', _V59), ((_V58 > 90), (_V59 =< 120)), _V60 = 1), _V61), count(_V61, _V62), findall(_V64, (member(X, G), get_item(X, 'diff', _V63), (_V63 > 120), _V64 = 1), _V65), count(_V65, _V66), dict_create(_V67, map, [s_store_name-_V43, d30-_V47, d31_60-_V52, d61_90-_V57, d91_120-_V62, d_gt_120-_V66]), _V68 = _V67), _V69),
    Result = _V69,
    json_write_dict(current_output, Result), nl,
    true,
    dict_create(_V70, map, [s_store_name-"Main", d30-1, d31_60-1, d61_90-1, d91_120-1, d_gt_120-1]),
    expect((Result == [_V70])),
    true.
