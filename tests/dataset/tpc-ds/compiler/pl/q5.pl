% Generated by Mochi compiler v0.10.26 on 2025-07-15T06:39:01Z
:- style_check(-singleton).
len_any(Value, Len) :-
    string(Value), !, string_length(Value, Len).
len_any(Value, Len) :-
    is_dict(Value), !, dict_pairs(Value, _, Pairs), length(Pairs, Len).
len_any(Value, Len) :- length(Value, Len).

:- use_module(library(http/json)).
load_data(Path, Opts, Rows) :-
    (is_dict(Opts), get_dict(format, Opts, Fmt) -> true ; Fmt = 'json'),
    (Path == '' ; Path == '-' -> read_string(user_input, _, Text) ; read_file_to_string(Path, Text, [])),
    (Fmt == 'jsonl' ->
        split_string(Text, '\n', ' \t\r', Lines0),
        exclude(=(''), Lines0, Lines),
        findall(D, (member(L, Lines), open_string(L, S), json_read_dict(S, D), close(S)), Rows)
    ;
        open_string(Text, S), json_read_dict(S, Data), close(S),
        (is_list(Data) -> Rows = Data ; Rows = [Data])
    ).

expect(Cond) :- (Cond -> true ; throw(error('expect failed'))).

:- initialization(main, main).
main :-
    dict_create(_V0, map, [channel-"catalog channel", id-"catalog_page100", sales-30, returns-3, profit-8]),
    dict_create(_V1, map, [channel-"store channel", id-"store10", sales-20, returns-2, profit-4]),
    dict_create(_V2, map, [channel-"web channel", id-"web_site200", sales-40, returns-4, profit-10]),
    Result = [_V0, _V1, _V2],
    json_write_dict(current_output, Result), nl,
    true,
    len_any(Result, _V3),
    expect((_V3 =:= 3)),
    true.
