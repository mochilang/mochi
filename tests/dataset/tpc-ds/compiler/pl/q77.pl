% Generated by Mochi compiler v0.10.26 on 1970-01-01T00:00:00Z
:- style_check(-singleton).
get_item(Container, Key, Val) :-
    is_dict(Container), !, (string(Key) -> atom_string(A, Key) ; A = Key), get_dict(A, Container, Val).
get_item(Container, Index, Val) :-
    string(Container), !, string_chars(Container, Chars), nth0(Index, Chars, Val).
get_item(List, Index, Val) :- nth0(Index, List, Val).

to_list(Str, L) :-
    string(Str), !,
    string_chars(Str, L).
to_list(L, L).

count(V, R) :-
    is_dict(V), !, get_dict('Items', V, Items), length(Items, R).
count(V, R) :-
    string(V), !, string_chars(V, C), length(C, R).
count(V, R) :-
    is_list(V), !, length(V, R).
count(_, _) :- throw(error('count expects list or group')).

avg(V, R) :-
    is_dict(V), !, get_dict('Items', V, Items), avg_list(Items, R).
avg(V, R) :-
    is_list(V), !, avg_list(V, R).
avg(_, _) :- throw(error('avg expects list or group')).
avg_list([], 0).
avg_list(L, R) :- sum_list(L, S), length(L, N), N > 0, R is S / N.

sum(V, R) :-
    is_dict(V), !, get_dict('Items', V, Items), sum_list(Items, R).
sum(V, R) :-
    is_list(V), !, sum_list(V, R).
sum(_, _) :- throw(error('sum expects list or group')).

group_insert(Key, Item, [], [_{key:Key, 'Items':[Item]}]).
group_insert(Key, Item, [G|Gs], [NG|Gs]) :- get_dict(key, G, Key), !, get_dict('Items', G, Items), append(Items, [Item], NItems), put_dict('Items', G, NItems, NG).
group_insert(Key, Item, [G|Gs], [G|Rs]) :- group_insert(Key, Item, Gs, Rs).
group_pairs([], Acc, Res) :- reverse(Acc, Res).
group_pairs([K-V|T], Acc, Res) :- group_insert(K, V, Acc, Acc1), group_pairs(T, Acc1, Res).
group_by(List, Fn, Groups) :- findall(K-V, (member(V, List), call(Fn, V, K)), Pairs), group_pairs(Pairs, [], Groups).

:- use_module(library(http/json)).
load_data(Path, Opts, Rows) :-
    (is_dict(Opts), get_dict(format, Opts, Fmt) -> true ; Fmt = 'json'),
    (Path == '' ; Path == '-' -> read_string(user_input, _, Text) ; read_file_to_string(Path, Text, [])),
    (Fmt == 'jsonl' ->
        split_string(Text, '\n', ' \t\r', Lines0),
        exclude(=(''), Lines0, Lines),
        findall(D, (member(L, Lines), open_string(L, S), json_read_dict(S, D), close(S)), Rows)
    ;
        open_string(Text, S), json_read_dict(S, Data), close(S),
        (is_list(Data) -> Rows = Data ; Rows = [Data])
    ).

expect(Cond) :- (Cond -> true ; throw(error('expect failed'))).

:- initialization(main, main).
main :-
    dict_create(_V0, map, [d_date_sk-1, d_date-1]),
    Date_dim = [_V0],
    dict_create(_V1, map, [ss_sold_date_sk-1, s_store_sk-1, ss_ext_sales_price-100, ss_net_profit-10]),
    Store_sales = [_V1],
    dict_create(_V2, map, [sr_returned_date_sk-1, s_store_sk-1, sr_return_amt-5, sr_net_loss-1]),
    Store_returns = [_V2],
    dict_create(_V3, map, [cs_sold_date_sk-1, cs_call_center_sk-1, cs_ext_sales_price-150, cs_net_profit-15]),
    Catalog_sales = [_V3],
    dict_create(_V4, map, [cr_returned_date_sk-1, cr_call_center_sk-1, cr_return_amount-7, cr_net_loss-3]),
    Catalog_returns = [_V4],
    dict_create(_V5, map, [ws_sold_date_sk-1, ws_web_page_sk-1, ws_ext_sales_price-200, ws_net_profit-20]),
    Web_sales = [_V5],
    dict_create(_V6, map, [wr_returned_date_sk-1, wr_web_page_sk-1, wr_return_amt-10, wr_net_loss-2]),
    Web_returns = [_V6],
    findall(_V12, (member(Ss, Store_sales), member(D, Date_dim), get_item(D, 'd_date_sk', _V7), get_item(Ss, 'ss_sold_date_sk', _V8), (_V7 == _V8), true, get_item(Ss, 's_store_sk', _V9), _V10 = _V9, dict_create(_V11, map, ['Ss'-Ss, 'D'-D]), _V12 = _V10-_V11), _V13),
    group_pairs(_V13, [], _V14),
    findall(_V27, (member(G, _V14), get_item(G, 'key', _V15), findall(_V18, (member(X, G), true, get_item(X, 'ss', _V16), get_item(_V16, 'ss_ext_sales_price', _V17), _V18 = _V17), _V19), sum(_V19, _V20), findall(_V23, (member(X, G), true, get_item(X, 'ss', _V21), get_item(_V21, 'ss_net_profit', _V22), _V23 = _V22), _V24), sum(_V24, _V25), dict_create(_V26, map, [s_store_sk-_V15, sales-_V20, profit-_V25]), _V27 = _V26), _V28),
    Ss = _V28,
    findall(_V34, (member(Sr, Store_returns), member(D, Date_dim), get_item(D, 'd_date_sk', _V29), get_item(Sr, 'sr_returned_date_sk', _V30), (_V29 == _V30), true, get_item(Sr, 's_store_sk', _V31), _V32 = _V31, dict_create(_V33, map, ['Sr'-Sr, 'D'-D]), _V34 = _V32-_V33), _V35),
    group_pairs(_V35, [], _V36),
    findall(_V49, (member(G, _V36), get_item(G, 'key', _V37), findall(_V40, (member(X, G), true, get_item(X, 'sr', _V38), get_item(_V38, 'sr_return_amt', _V39), _V40 = _V39), _V41), sum(_V41, _V42), findall(_V45, (member(X, G), true, get_item(X, 'sr', _V43), get_item(_V43, 'sr_net_loss', _V44), _V45 = _V44), _V46), sum(_V46, _V47), dict_create(_V48, map, [s_store_sk-_V37, returns-_V42, profit_loss-_V47]), _V49 = _V48), _V50),
    Sr = _V50,
    findall(_V56, (member(Cs, Catalog_sales), member(D, Date_dim), get_item(D, 'd_date_sk', _V51), get_item(Cs, 'cs_sold_date_sk', _V52), (_V51 == _V52), true, get_item(Cs, 'cs_call_center_sk', _V53), _V54 = _V53, dict_create(_V55, map, ['Cs'-Cs, 'D'-D]), _V56 = _V54-_V55), _V57),
    group_pairs(_V57, [], _V58),
    findall(_V71, (member(G, _V58), get_item(G, 'key', _V59), findall(_V62, (member(X, G), true, get_item(X, 'cs', _V60), get_item(_V60, 'cs_ext_sales_price', _V61), _V62 = _V61), _V63), sum(_V63, _V64), findall(_V67, (member(X, G), true, get_item(X, 'cs', _V65), get_item(_V65, 'cs_net_profit', _V66), _V67 = _V66), _V68), sum(_V68, _V69), dict_create(_V70, map, [cs_call_center_sk-_V59, sales-_V64, profit-_V69]), _V71 = _V70), _V72),
    Cs = _V72,
    findall(_V78, (member(Cr, Catalog_returns), member(D, Date_dim), get_item(D, 'd_date_sk', _V73), get_item(Cr, 'cr_returned_date_sk', _V74), (_V73 == _V74), true, get_item(Cr, 'cr_call_center_sk', _V75), _V76 = _V75, dict_create(_V77, map, ['Cr'-Cr, 'D'-D]), _V78 = _V76-_V77), _V79),
    group_pairs(_V79, [], _V80),
    findall(_V93, (member(G, _V80), get_item(G, 'key', _V81), findall(_V84, (member(X, G), true, get_item(X, 'cr', _V82), get_item(_V82, 'cr_return_amount', _V83), _V84 = _V83), _V85), sum(_V85, _V86), findall(_V89, (member(X, G), true, get_item(X, 'cr', _V87), get_item(_V87, 'cr_net_loss', _V88), _V89 = _V88), _V90), sum(_V90, _V91), dict_create(_V92, map, [cr_call_center_sk-_V81, returns-_V86, profit_loss-_V91]), _V93 = _V92), _V94),
    Cr = _V94,
    findall(_V100, (member(Ws, Web_sales), member(D, Date_dim), get_item(D, 'd_date_sk', _V95), get_item(Ws, 'ws_sold_date_sk', _V96), (_V95 == _V96), true, get_item(Ws, 'ws_web_page_sk', _V97), _V98 = _V97, dict_create(_V99, map, ['Ws'-Ws, 'D'-D]), _V100 = _V98-_V99), _V101),
    group_pairs(_V101, [], _V102),
    findall(_V115, (member(G, _V102), get_item(G, 'key', _V103), findall(_V106, (member(X, G), true, get_item(X, 'ws', _V104), get_item(_V104, 'ws_ext_sales_price', _V105), _V106 = _V105), _V107), sum(_V107, _V108), findall(_V111, (member(X, G), true, get_item(X, 'ws', _V109), get_item(_V109, 'ws_net_profit', _V110), _V111 = _V110), _V112), sum(_V112, _V113), dict_create(_V114, map, [wp_web_page_sk-_V103, sales-_V108, profit-_V113]), _V115 = _V114), _V116),
    Ws = _V116,
    findall(_V122, (member(Wr, Web_returns), member(D, Date_dim), get_item(D, 'd_date_sk', _V117), get_item(Wr, 'wr_returned_date_sk', _V118), (_V117 == _V118), true, get_item(Wr, 'wr_web_page_sk', _V119), _V120 = _V119, dict_create(_V121, map, ['Wr'-Wr, 'D'-D]), _V122 = _V120-_V121), _V123),
    group_pairs(_V123, [], _V124),
    findall(_V137, (member(G, _V124), get_item(G, 'key', _V125), findall(_V128, (member(X, G), true, get_item(X, 'wr', _V126), get_item(_V126, 'wr_return_amt', _V127), _V128 = _V127), _V129), sum(_V129, _V130), findall(_V133, (member(X, G), true, get_item(X, 'wr', _V131), get_item(_V131, 'wr_net_loss', _V132), _V133 = _V132), _V134), sum(_V134, _V135), dict_create(_V136, map, [wp_web_page_sk-_V125, returns-_V130, profit_loss-_V135]), _V137 = _V136), _V138),
    Wr = _V138,
    findall(_V150, (member(S, Ss), findall(R, (member(R, Sr), get_item(S, 's_store_sk', _V139), get_item(R, 's_store_sk', _V140), (_V139 == _V140)), _V141), (_V141 = [] -> R = nil; member(R, _V141)), true, get_item(S, 's_store_sk', _V142), get_item(S, 'sales', _V143), get_item(R, 'returns', _V144), ((R == null) -> _V145 = 0 ; _V145 = _V144), get_item(S, 'profit', _V146), get_item(R, 'profit_loss', _V147), ((R == null) -> _V148 = 0 ; _V148 = _V147), dict_create(_V149, map, [channel-"store channel", id-_V142, sales-_V143, returns-_V145, profit-(_V146 - _V148)]), _V150 = _V149), _V151),
    findall(_V160, (member(C, Cs), member(R, Cr), get_item(C, 'cs_call_center_sk', _V152), get_item(R, 'cr_call_center_sk', _V153), (_V152 == _V153), true, get_item(C, 'cs_call_center_sk', _V154), get_item(C, 'sales', _V155), get_item(R, 'returns', _V156), get_item(C, 'profit', _V157), get_item(R, 'profit_loss', _V158), dict_create(_V159, map, [channel-"catalog channel", id-_V154, sales-_V155, returns-_V156, profit-(_V157 - _V158)]), _V160 = _V159), _V161),
    findall(_V173, (member(W, Ws), findall(R, (member(R, Wr), get_item(W, 'wp_web_page_sk', _V162), get_item(R, 'wp_web_page_sk', _V163), (_V162 == _V163)), _V164), (_V164 = [] -> R = nil; member(R, _V164)), true, get_item(W, 'wp_web_page_sk', _V165), get_item(W, 'sales', _V166), get_item(R, 'returns', _V167), ((R == null) -> _V168 = 0 ; _V168 = _V167), get_item(W, 'profit', _V169), get_item(R, 'profit_loss', _V170), ((R == null) -> _V171 = 0 ; _V171 = _V170), dict_create(_V172, map, [channel-"web channel", id-_V165, sales-_V166, returns-_V168, profit-(_V169 - _V171)]), _V173 = _V172), _V174),
    concat(_V151, _V161, _V174, _V175),
    Per_channel = _V175,
    findall(_V181, (member(P, Per_channel), true, get_item(P, 'channel', _V176), get_item(P, 'id', _V177), dict_create(_V178, map, [channel-_V176, id-_V177]), _V179 = _V178, dict_create(_V180, map, ['P'-P]), _V181 = _V179-_V180), _V182),
    group_pairs(_V182, [], _V183),
    findall(_V204, (member(G, _V183), get_item(G, 'key', _V184), get_item(_V184, 'channel', _V185), get_item(G, 'key', _V186), get_item(_V186, 'id', _V187), findall(_V190, (member(X, G), true, get_item(X, 'p', _V188), get_item(_V188, 'sales', _V189), _V190 = _V189), _V191), sum(_V191, _V192), findall(_V195, (member(X, G), true, get_item(X, 'p', _V193), get_item(_V193, 'returns', _V194), _V195 = _V194), _V196), sum(_V196, _V197), findall(_V200, (member(X, G), true, get_item(X, 'p', _V198), get_item(_V198, 'profit', _V199), _V200 = _V199), _V201), sum(_V201, _V202), dict_create(_V203, map, [channel-_V185, id-_V187, sales-_V192, returns-_V197, profit-_V202]), _V204 = _V203), _V205),
    Result = _V205,
    json_write_dict(current_output, Result), nl,
    true,
    dict_create(_V206, map, [channel-"catalog channel", id-1, sales-150, returns-7, profit-12]),
    dict_create(_V207, map, [channel-"store channel", id-1, sales-100, returns-5, profit-9]),
    dict_create(_V208, map, [channel-"web channel", id-1, sales-200, returns-10, profit-18]),
    expect((Result == [_V206, _V207, _V208])),
    true.
