% Generated by Mochi compiler v0.10.26 on 2025-07-15T06:34:34Z
:- style_check(-singleton).
get_item(Container, Key, Val) :-
    is_dict(Container), !, (string(Key) -> atom_string(A, Key) ; A = Key), get_dict(A, Container, Val).
get_item(Container, Index, Val) :-
    string(Container), !, string_chars(Container, Chars), nth0(Index, Chars, Val).
get_item(List, Index, Val) :- nth0(Index, List, Val).

:- use_module(library(http/json)).
load_data(Path, Opts, Rows) :-
    (is_dict(Opts), get_dict(format, Opts, Fmt) -> true ; Fmt = 'json'),
    (Path == '' ; Path == '-' -> read_string(user_input, _, Text) ; read_file_to_string(Path, Text, [])),
    (Fmt == 'jsonl' ->
        split_string(Text, '\n', ' \t\r', Lines0),
        exclude(=(''), Lines0, Lines),
        findall(D, (member(L, Lines), open_string(L, S), json_read_dict(S, D), close(S)), Rows)
    ;
        open_string(Text, S), json_read_dict(S, Data), close(S),
        (is_list(Data) -> Rows = Data ; Rows = [Data])
    ).

expect(Cond) :- (Cond -> true ; throw(error('expect failed'))).

:- initialization(main, main).
main :-
    dict_create(_V0, map, [week-1, store-1, amount-100]),
    Sales_year1 = [_V0],
    dict_create(_V1, map, [week-53, store-1, amount-150]),
    Sales_year2 = [_V1],
    findall(_V10, (member(Y1, Sales_year1), member(Y2, Sales_year2), get_item(Y1, 'store', _V2), get_item(Y2, 'store', _V3), get_item(Y1, 'week', _V4), get_item(Y2, 'week', _V5), ((_V2 == _V3), (_V4 == (_V5 - 52))), true, get_item(Y1, 'store', _V6), get_item(Y2, 'amount', _V7), get_item(Y1, 'amount', _V8), dict_create(_V9, map, [s_store_id1-_V6, ratio-(_V7 / _V8)]), _V10 = _V9), _V11),
    Join = _V11,
    Result = Join,
    json_write_dict(current_output, Result), nl,
    true,
    dict_create(_V12, map, [s_store_id1-1, ratio-1.5]),
    expect((Result == [_V12])),
    true.
