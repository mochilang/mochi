% Generated by Mochi compiler v0.10.26 on 2025-07-15T06:34:34Z
:- style_check(-singleton).
get_item(Container, Key, Val) :-
    is_dict(Container), !, (string(Key) -> atom_string(A, Key) ; A = Key), get_dict(A, Container, Val).
get_item(Container, Index, Val) :-
    string(Container), !, string_chars(Container, Chars), nth0(Index, Chars, Val).
get_item(List, Index, Val) :- nth0(Index, List, Val).

:- use_module(library(http/json)).
load_data(Path, Opts, Rows) :-
    (is_dict(Opts), get_dict(format, Opts, Fmt) -> true ; Fmt = 'json'),
    (Path == '' ; Path == '-' -> read_string(user_input, _, Text) ; read_file_to_string(Path, Text, [])),
    (Fmt == 'jsonl' ->
        split_string(Text, '\n', ' \t\r', Lines0),
        exclude(=(''), Lines0, Lines),
        findall(D, (member(L, Lines), open_string(L, S), json_read_dict(S, D), close(S)), Rows)
    ;
        open_string(Text, S), json_read_dict(S, Data), close(S),
        (is_list(Data) -> Rows = Data ; Rows = [Data])
    ).

expect(Cond) :- (Cond -> true ; throw(error('expect failed'))).

:- initialization(main, main).
main :-
    dict_create(_V0, map, [item-"A", return_ratio-0.2, currency_ratio-0.3, return_rank-1, currency_rank-1]),
    dict_create(_V1, map, [item-"B", return_ratio-0.5, currency_ratio-0.6, return_rank-2, currency_rank-2]),
    Web = [_V0, _V1],
    dict_create(_V2, map, [item-"A", return_ratio-0.3, currency_ratio-0.4, return_rank-1, currency_rank-1]),
    Catalog = [_V2],
    dict_create(_V3, map, [item-"A", return_ratio-0.25, currency_ratio-0.35, return_rank-1, currency_rank-1]),
    Store = [_V3],
    findall(_V11, (member(W, Web), get_item(W, 'return_rank', _V4), get_item(W, 'currency_rank', _V5), ((_V4 =< 10) ; (_V5 =< 10)), get_item(W, 'item', _V6), get_item(W, 'return_ratio', _V7), get_item(W, 'return_rank', _V8), get_item(W, 'currency_rank', _V9), dict_create(_V10, map, [channel-"web", item-_V6, return_ratio-_V7, return_rank-_V8, currency_rank-_V9]), _V11 = _V10), _V12),
    findall(_V20, (member(C, Catalog), get_item(C, 'return_rank', _V13), get_item(C, 'currency_rank', _V14), ((_V13 =< 10) ; (_V14 =< 10)), get_item(C, 'item', _V15), get_item(C, 'return_ratio', _V16), get_item(C, 'return_rank', _V17), get_item(C, 'currency_rank', _V18), dict_create(_V19, map, [channel-"catalog", item-_V15, return_ratio-_V16, return_rank-_V17, currency_rank-_V18]), _V20 = _V19), _V21),
    findall(_V29, (member(S, Store), get_item(S, 'return_rank', _V22), get_item(S, 'currency_rank', _V23), ((_V22 =< 10) ; (_V23 =< 10)), get_item(S, 'item', _V24), get_item(S, 'return_ratio', _V25), get_item(S, 'return_rank', _V26), get_item(S, 'currency_rank', _V27), dict_create(_V28, map, [channel-"store", item-_V24, return_ratio-_V25, return_rank-_V26, currency_rank-_V27]), _V29 = _V28), _V30),
    concat(_V12, _V21, _V30, _V31),
    Tmp = _V31,
    findall(_V32, (member(R, Tmp), true, _V32 = R), _V33),
    Result = _V33,
    json_write_dict(current_output, Result), nl,
    true,
    dict_create(_V34, map, [channel-"catalog", item-"A", return_ratio-0.3, return_rank-1, currency_rank-1]),
    dict_create(_V35, map, [channel-"store", item-"A", return_ratio-0.25, return_rank-1, currency_rank-1]),
    dict_create(_V36, map, [channel-"web", item-"A", return_ratio-0.2, return_rank-1, currency_rank-1]),
    dict_create(_V37, map, [channel-"web", item-"B", return_ratio-0.5, return_rank-2, currency_rank-2]),
    expect((Result == [_V34, _V35, _V36, _V37])),
    true.
