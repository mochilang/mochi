// Generated by Mochi compiler v0.10.25 on 2025-07-15T04:58:07Z
import 'dart:io';
import 'dart:convert';

var date_dim = [{'d_date_sk': 1, 'd_date': 1}];

var store_sales = [{'ss_sold_date_sk': 1, 's_store_sk': 1, 'ss_ext_sales_price': 100, 'ss_net_profit': 10}];

var store_returns = [{'sr_returned_date_sk': 1, 's_store_sk': 1, 'sr_return_amt': 5, 'sr_net_loss': 1}];

var catalog_sales = [{'cs_sold_date_sk': 1, 'cs_call_center_sk': 1, 'cs_ext_sales_price': 150, 'cs_net_profit': 15}];

var catalog_returns = [{'cr_returned_date_sk': 1, 'cr_call_center_sk': 1, 'cr_return_amount': 7, 'cr_net_loss': 3}];

var web_sales = [{'ws_sold_date_sk': 1, 'ws_web_page_sk': 1, 'ws_ext_sales_price': 200, 'ws_net_profit': 20}];

var web_returns = [{'wr_returned_date_sk': 1, 'wr_web_page_sk': 1, 'wr_return_amt': 10, 'wr_net_loss': 2}];

var ss = (() {
  var _q0 = <dynamic>[];
  var _g1 = <String, List<dynamic>>{};
  for (var ss in store_sales) {
    for (var d in date_dim) {
      if (!(d['d_date_sk'] == ss['ss_sold_date_sk'])) continue;
      var _k4 = ss['s_store_sk'];
      var _k4_s = jsonEncode(_k4);
      _g1.putIfAbsent(_k4_s, () => <dynamic>[]).add({'ss': ss, 'd': d});
    }
  }
  for (var entry in _g1.entries) {
    var g = entry.value;
    var _k4 = jsonDecode(entry.key);
    _q0.add({'s_store_sk': _k4, 'sales': _sum(g.map((x) => x['ss']['ss_ext_sales_price'])), 'profit': _sum(g.map((x) => x['ss']['ss_net_profit']))});
  }
  return _q0;
})();

var sr = (() {
  var _q7 = <dynamic>[];
  var _g8 = <String, List<dynamic>>{};
  for (var sr in store_returns) {
    for (var d in date_dim) {
      if (!(d['d_date_sk'] == sr['sr_returned_date_sk'])) continue;
      var _k11 = sr['s_store_sk'];
      var _k11_s = jsonEncode(_k11);
      _g8.putIfAbsent(_k11_s, () => <dynamic>[]).add({'sr': sr, 'd': d});
    }
  }
  for (var entry in _g8.entries) {
    var g = entry.value;
    var _k11 = jsonDecode(entry.key);
    _q7.add({'s_store_sk': _k11, 'returns': _sum(g.map((x) => x['sr']['sr_return_amt'])), 'profit_loss': _sum(g.map((x) => x['sr']['sr_net_loss']))});
  }
  return _q7;
})();

var cs = (() {
  var _q14 = <dynamic>[];
  var _g15 = <String, List<dynamic>>{};
  for (var cs in catalog_sales) {
    for (var d in date_dim) {
      if (!(d['d_date_sk'] == cs['cs_sold_date_sk'])) continue;
      var _k18 = cs['cs_call_center_sk'];
      var _k18_s = jsonEncode(_k18);
      _g15.putIfAbsent(_k18_s, () => <dynamic>[]).add({'cs': cs, 'd': d});
    }
  }
  for (var entry in _g15.entries) {
    var g = entry.value;
    var _k18 = jsonDecode(entry.key);
    _q14.add({'cs_call_center_sk': _k18, 'sales': _sum(g.map((x) => x['cs']['cs_ext_sales_price'])), 'profit': _sum(g.map((x) => x['cs']['cs_net_profit']))});
  }
  return _q14;
})();

var cr = (() {
  var _q21 = <dynamic>[];
  var _g22 = <String, List<dynamic>>{};
  for (var cr in catalog_returns) {
    for (var d in date_dim) {
      if (!(d['d_date_sk'] == cr['cr_returned_date_sk'])) continue;
      var _k25 = cr['cr_call_center_sk'];
      var _k25_s = jsonEncode(_k25);
      _g22.putIfAbsent(_k25_s, () => <dynamic>[]).add({'cr': cr, 'd': d});
    }
  }
  for (var entry in _g22.entries) {
    var g = entry.value;
    var _k25 = jsonDecode(entry.key);
    _q21.add({'cr_call_center_sk': _k25, 'returns': _sum(g.map((x) => x['cr']['cr_return_amount'])), 'profit_loss': _sum(g.map((x) => x['cr']['cr_net_loss']))});
  }
  return _q21;
})();

var ws = (() {
  var _q28 = <dynamic>[];
  var _g29 = <String, List<dynamic>>{};
  for (var ws in web_sales) {
    for (var d in date_dim) {
      if (!(d['d_date_sk'] == ws['ws_sold_date_sk'])) continue;
      var _k32 = ws['ws_web_page_sk'];
      var _k32_s = jsonEncode(_k32);
      _g29.putIfAbsent(_k32_s, () => <dynamic>[]).add({'ws': ws, 'd': d});
    }
  }
  for (var entry in _g29.entries) {
    var g = entry.value;
    var _k32 = jsonDecode(entry.key);
    _q28.add({'wp_web_page_sk': _k32, 'sales': _sum(g.map((x) => x['ws']['ws_ext_sales_price'])), 'profit': _sum(g.map((x) => x['ws']['ws_net_profit']))});
  }
  return _q28;
})();

var wr = (() {
  var _q35 = <dynamic>[];
  var _g36 = <String, List<dynamic>>{};
  for (var wr in web_returns) {
    for (var d in date_dim) {
      if (!(d['d_date_sk'] == wr['wr_returned_date_sk'])) continue;
      var _k39 = wr['wr_web_page_sk'];
      var _k39_s = jsonEncode(_k39);
      _g36.putIfAbsent(_k39_s, () => <dynamic>[]).add({'wr': wr, 'd': d});
    }
  }
  for (var entry in _g36.entries) {
    var g = entry.value;
    var _k39 = jsonDecode(entry.key);
    _q35.add({'wp_web_page_sk': _k39, 'returns': _sum(g.map((x) => x['wr']['wr_return_amt'])), 'profit_loss': _sum(g.map((x) => x['wr']['wr_net_loss']))});
  }
  return _q35;
})();

var per_channel = concat((() {
  var _q42 = <dynamic>[];
  for (var s in ss) {
    var _jt43 = <dynamic>[];
    for (var r in sr) {
      if (!(s['s_store_sk'] == r['s_store_sk'])) continue;
      _jt43.add(r);
    }
    if (_jt43.isEmpty) _jt43.add(null);
    for (var r in _jt43) {
      _q42.add({'channel': 'store channel', 'id': s['s_store_sk'], 'sales': s['sales'], 'returns': (r == null ? 0 : r['returns']), 'profit': (s['profit'] as num) - (((r == null ? 0 : r['profit_loss'])) as num)});
    }
  }
  return _q42;
})(), (() {
  var _q44 = <dynamic>[];
  for (var c in cs) {
    for (var r in cr) {
      if (!(c['cs_call_center_sk'] == r['cr_call_center_sk'])) continue;
      _q44.add({'channel': 'catalog channel', 'id': c['cs_call_center_sk'], 'sales': c['sales'], 'returns': r['returns'], 'profit': (c['profit'] as num) - (r['profit_loss'] as num)});
    }
  }
  return _q44;
})(), (() {
  var _q45 = <dynamic>[];
  for (var w in ws) {
    var _jt46 = <dynamic>[];
    for (var r in wr) {
      if (!(w['wp_web_page_sk'] == r['wp_web_page_sk'])) continue;
      _jt46.add(r);
    }
    if (_jt46.isEmpty) _jt46.add(null);
    for (var r in _jt46) {
      _q45.add({'channel': 'web channel', 'id': w['wp_web_page_sk'], 'sales': w['sales'], 'returns': (r == null ? 0 : r['returns']), 'profit': (w['profit'] as num) - (((r == null ? 0 : r['profit_loss'])) as num)});
    }
  }
  return _q45;
})());

var result = (() {
  var _q47 = <dynamic>[];
  var _g48 = <String, List<dynamic>>{};
  for (var p in per_channel) {
    var _k52 = {'channel': p['channel'], 'id': p['id']};
    var _k52_s = jsonEncode(_k52);
    _g48.putIfAbsent(_k52_s, () => <dynamic>[]).add(p);
  }
  for (var entry in _g48.entries) {
    var g = entry.value;
    var _k52 = jsonDecode(entry.key);
    _q47.add([_k52['channel'], {'channel': _k52['channel'], 'id': _k52['id'], 'sales': _sum(g.map((x) => x['p']['sales'])), 'returns': _sum(g.map((x) => x['p']['returns'])), 'profit': _sum(g.map((x) => x['p']['profit']))}]);
  }
  _q47.sort((a,b) => (jsonEncode(a[0]) as Comparable).compareTo(jsonEncode(b[0])));
  _q47 = [for (var x in _q47) x[1]];
  return _q47;
})();

void main() {
  print(jsonEncode(result));
}

bool _equal(dynamic a, dynamic b) {
    if (a is List && b is List) {
        if (a.length != b.length) return false;
        for (var i = 0; i < a.length; i++) { if (!_equal(a[i], b[i])) return false; }
        return true;
    }
    if (a is Map && b is Map) {
        if (a.length != b.length) return false;
        for (var k in a.keys) { if (!b.containsKey(k) || !_equal(a[k], b[k])) return false; }
        return true;
    }
    return a == b;
}

String _formatDuration(Duration d) {
    if (d.inMicroseconds < 1000) return '${d.inMicroseconds}Âµs';
    if (d.inMilliseconds < 1000) return '${d.inMilliseconds}ms';
    return '${(d.inMilliseconds/1000).toStringAsFixed(2)}s';
}

void _json(dynamic v) {
    print(jsonEncode(v));
}


dynamic _min(dynamic v) {
    List<dynamic>? list;
    if (v is List) list = v;
    else if (v is Map && v['items'] is List) list = (v['items'] as List);
    else if (v is Map && v['Items'] is List) list = (v['Items'] as List);
    else { try { var it = (v as dynamic).items; if (it is List) list = it; } catch (_) {} }
    if (list == null || list.isEmpty) return 0;
    var m = list[0];
    for (var n in list) { if ((n as Comparable).compareTo(m) < 0) m = n; }
    return m;
}

num _sum(dynamic v) {
    Iterable<dynamic>? list;
    if (v is Iterable) list = v;
    else if (v is Map && v['items'] is Iterable) list = (v['items'] as Iterable);
    else if (v is Map && v['Items'] is Iterable) list = (v['Items'] as Iterable);
    else { try { var it = (v as dynamic).items; if (it is Iterable) list = it; } catch (_) {} }
    if (list == null) return 0;
    num s = 0;
    for (var n in list) s += (n as num);
    return s;
}

bool _runTest(String name, void Function() f) {
    stdout.write('   test $name ...');
    var start = DateTime.now();
    try {
        f();
        var d = DateTime.now().difference(start);
        stdout.writeln(' ok (${_formatDuration(d)})');
        return true;
    } catch (e) {
        var d = DateTime.now().difference(start);
        stdout.writeln(' fail $e (${_formatDuration(d)})');
        return false;
    }
}
