// Generated by Mochi compiler v0.10.25 on 2025-07-15T04:58:07Z
import 'dart:io';
import 'dart:convert';

class StoreSale {
  int ss_customer_sk;
  int ss_item_sk;
  StoreSale(this.ss_customer_sk, this.ss_item_sk);
}

class CatalogSale {
  int cs_bill_customer_sk;
  int cs_item_sk;
  CatalogSale(this.cs_bill_customer_sk, this.cs_item_sk);
}

var store_sales = [{'ss_customer_sk': 1, 'ss_item_sk': 1}, {'ss_customer_sk': 2, 'ss_item_sk': 1}];

var catalog_sales = [{'cs_bill_customer_sk': 1, 'cs_item_sk': 1}, {'cs_bill_customer_sk': 3, 'cs_item_sk': 2}];

var ssci = (() {
  var _q0 = <dynamic>[];
  var _g1 = <String, List<dynamic>>{};
  for (var ss in store_sales) {
    var _k2 = {'customer_sk': ss['ss_customer_sk'], 'item_sk': ss['ss_item_sk']};
    var _k2_s = jsonEncode(_k2);
    _g1.putIfAbsent(_k2_s, () => <dynamic>[]).add(ss);
  }
  for (var entry in _g1.entries) {
    var g = entry.value;
    var _k2 = jsonDecode(entry.key);
    _q0.add({'customer_sk': _k2['customer_sk'], 'item_sk': _k2['item_sk']});
  }
  return _q0;
})();

var csci = (() {
  var _q3 = <dynamic>[];
  var _g4 = <String, List<dynamic>>{};
  for (var cs in catalog_sales) {
    var _k5 = {'customer_sk': cs['cs_bill_customer_sk'], 'item_sk': cs['cs_item_sk']};
    var _k5_s = jsonEncode(_k5);
    _g4.putIfAbsent(_k5_s, () => <dynamic>[]).add(cs);
  }
  for (var entry in _g4.entries) {
    var g = entry.value;
    var _k5 = jsonDecode(entry.key);
    _q3.add({'customer_sk': _k5['customer_sk'], 'item_sk': _k5['item_sk']});
  }
  return _q3;
})();

var both = (() {
  var _q6 = <dynamic>[];
  for (var s in ssci) {
    for (var c in csci) {
      if (!(s['customer_sk'] == c['customer_sk'] && s['item_sk'] == c['item_sk'])) continue;
      _q6.add(1);
    }
  }
  return _q6;
})().length;

var store_only = (() {
  var _q7 = <dynamic>[];
  for (var s in ssci) {
    if (!(!((() {
  var _q8 = <dynamic>[];
  for (var c in csci) {
    if (!(s['customer_sk'] == c['customer_sk'] && s['item_sk'] == c['item_sk'])) continue;
    _q8.add(c);
  }
  return _q8;
})().isNotEmpty))) continue;
    _q7.add(1);
  }
  return _q7;
})().length;

var catalog_only = (() {
  var _q9 = <dynamic>[];
  for (var c in csci) {
    if (!(!((() {
  var _q10 = <dynamic>[];
  for (var s in ssci) {
    if (!(s['customer_sk'] == c['customer_sk'] && s['item_sk'] == c['item_sk'])) continue;
    _q10.add(s);
  }
  return _q10;
})().isNotEmpty))) continue;
    _q9.add(1);
  }
  return _q9;
})().length;

var result = {'store_only': store_only, 'catalog_only': catalog_only, 'store_and_catalog': both};

void main() {
  print(jsonEncode(result));
}

bool _equal(dynamic a, dynamic b) {
    if (a is List && b is List) {
        if (a.length != b.length) return false;
        for (var i = 0; i < a.length; i++) { if (!_equal(a[i], b[i])) return false; }
        return true;
    }
    if (a is Map && b is Map) {
        if (a.length != b.length) return false;
        for (var k in a.keys) { if (!b.containsKey(k) || !_equal(a[k], b[k])) return false; }
        return true;
    }
    return a == b;
}

String _formatDuration(Duration d) {
    if (d.inMicroseconds < 1000) return '${d.inMicroseconds}Âµs';
    if (d.inMilliseconds < 1000) return '${d.inMilliseconds}ms';
    return '${(d.inMilliseconds/1000).toStringAsFixed(2)}s';
}

void _json(dynamic v) {
    print(jsonEncode(v));
}


dynamic _min(dynamic v) {
    List<dynamic>? list;
    if (v is List) list = v;
    else if (v is Map && v['items'] is List) list = (v['items'] as List);
    else if (v is Map && v['Items'] is List) list = (v['Items'] as List);
    else { try { var it = (v as dynamic).items; if (it is List) list = it; } catch (_) {} }
    if (list == null || list.isEmpty) return 0;
    var m = list[0];
    for (var n in list) { if ((n as Comparable).compareTo(m) < 0) m = n; }
    return m;
}

num _sum(dynamic v) {
    Iterable<dynamic>? list;
    if (v is Iterable) list = v;
    else if (v is Map && v['items'] is Iterable) list = (v['items'] as Iterable);
    else if (v is Map && v['Items'] is Iterable) list = (v['Items'] as Iterable);
    else { try { var it = (v as dynamic).items; if (it is Iterable) list = it; } catch (_) {} }
    if (list == null) return 0;
    num s = 0;
    for (var n in list) s += (n as num);
    return s;
}

bool _runTest(String name, void Function() f) {
    stdout.write('   test $name ...');
    var start = DateTime.now();
    try {
        f();
        var d = DateTime.now().difference(start);
        stdout.writeln(' ok (${_formatDuration(d)})');
        return true;
    } catch (e) {
        var d = DateTime.now().difference(start);
        stdout.writeln(' fail $e (${_formatDuration(d)})');
        return false;
    }
}
