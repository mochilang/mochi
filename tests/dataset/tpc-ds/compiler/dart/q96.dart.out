// Generated by Mochi compiler v0.10.25 on 2025-07-15T04:58:07Z
import 'dart:io';
import 'dart:convert';

class StoreSale {
  int ss_sold_time_sk;
  int ss_hdemo_sk;
  int ss_store_sk;
  StoreSale(this.ss_sold_time_sk, this.ss_hdemo_sk, this.ss_store_sk);
}

class HouseholdDemographics {
  int hd_demo_sk;
  int hd_dep_count;
  HouseholdDemographics(this.hd_demo_sk, this.hd_dep_count);
}

class TimeDim {
  int t_time_sk;
  int t_hour;
  int t_minute;
  TimeDim(this.t_time_sk, this.t_hour, this.t_minute);
}

class Store {
  int s_store_sk;
  String s_store_name;
  Store(this.s_store_sk, this.s_store_name);
}

var store_sales = [{'ss_sold_time_sk': 1, 'ss_hdemo_sk': 1, 'ss_store_sk': 1}, {'ss_sold_time_sk': 1, 'ss_hdemo_sk': 1, 'ss_store_sk': 1}, {'ss_sold_time_sk': 2, 'ss_hdemo_sk': 1, 'ss_store_sk': 1}];

var household_demographics = [{'hd_demo_sk': 1, 'hd_dep_count': 3}];

var time_dim = [{'t_time_sk': 1, 't_hour': 20, 't_minute': 35}, {'t_time_sk': 2, 't_hour': 20, 't_minute': 45}];

var store = [{'s_store_sk': 1, 's_store_name': 'ese'}];

var result = (() {
  var _q0 = <dynamic>[];
  for (var ss in store_sales) {
    for (var hd in household_demographics) {
      if (!(ss['ss_hdemo_sk'] == hd['hd_demo_sk'])) continue;
      for (var t in time_dim) {
        if (!(ss['ss_sold_time_sk'] == t['t_time_sk'])) continue;
        for (var s in store) {
          if (!(ss['ss_store_sk'] == s['s_store_sk'])) continue;
          if (!(t['t_hour'] == 20 && t['t_minute'] >= 30 && hd['hd_dep_count'] == 3 && s['s_store_name'] == 'ese')) continue;
          _q0.add(ss);
        }
      }
    }
  }
  return _q0;
})().length;

void main() {
  print(jsonEncode(result));
}

bool _equal(dynamic a, dynamic b) {
    if (a is List && b is List) {
        if (a.length != b.length) return false;
        for (var i = 0; i < a.length; i++) { if (!_equal(a[i], b[i])) return false; }
        return true;
    }
    if (a is Map && b is Map) {
        if (a.length != b.length) return false;
        for (var k in a.keys) { if (!b.containsKey(k) || !_equal(a[k], b[k])) return false; }
        return true;
    }
    return a == b;
}

String _formatDuration(Duration d) {
    if (d.inMicroseconds < 1000) return '${d.inMicroseconds}Âµs';
    if (d.inMilliseconds < 1000) return '${d.inMilliseconds}ms';
    return '${(d.inMilliseconds/1000).toStringAsFixed(2)}s';
}

void _json(dynamic v) {
    print(jsonEncode(v));
}


dynamic _min(dynamic v) {
    List<dynamic>? list;
    if (v is List) list = v;
    else if (v is Map && v['items'] is List) list = (v['items'] as List);
    else if (v is Map && v['Items'] is List) list = (v['Items'] as List);
    else { try { var it = (v as dynamic).items; if (it is List) list = it; } catch (_) {} }
    if (list == null || list.isEmpty) return 0;
    var m = list[0];
    for (var n in list) { if ((n as Comparable).compareTo(m) < 0) m = n; }
    return m;
}

num _sum(dynamic v) {
    Iterable<dynamic>? list;
    if (v is Iterable) list = v;
    else if (v is Map && v['items'] is Iterable) list = (v['items'] as Iterable);
    else if (v is Map && v['Items'] is Iterable) list = (v['Items'] as Iterable);
    else { try { var it = (v as dynamic).items; if (it is Iterable) list = it; } catch (_) {} }
    if (list == null) return 0;
    num s = 0;
    for (var n in list) s += (n as num);
    return s;
}

bool _runTest(String name, void Function() f) {
    stdout.write('   test $name ...');
    var start = DateTime.now();
    try {
        f();
        var d = DateTime.now().difference(start);
        stdout.writeln(' ok (${_formatDuration(d)})');
        return true;
    } catch (e) {
        var d = DateTime.now().difference(start);
        stdout.writeln(' fail $e (${_formatDuration(d)})');
        return false;
    }
}
