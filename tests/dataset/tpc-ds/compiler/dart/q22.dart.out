// Generated by Mochi compiler v0.10.25 on 2025-07-15T04:58:06Z
import 'dart:io';
import 'dart:convert';

class Inventory {
  int inv_item_sk;
  int inv_date_sk;
  int inv_quantity_on_hand;
  Inventory(this.inv_item_sk, this.inv_date_sk, this.inv_quantity_on_hand);
}

class DateDim {
  int d_date_sk;
  int d_month_seq;
  DateDim(this.d_date_sk, this.d_month_seq);
}

class Item {
  int i_item_sk;
  String i_product_name;
  String i_brand;
  String i_class;
  String i_category;
  Item(this.i_item_sk, this.i_product_name, this.i_brand, this.i_class, this.i_category);
}

var inventory = [{'inv_item_sk': 1, 'inv_date_sk': 1, 'inv_quantity_on_hand': 10}, {'inv_item_sk': 1, 'inv_date_sk': 2, 'inv_quantity_on_hand': 20}, {'inv_item_sk': 1, 'inv_date_sk': 3, 'inv_quantity_on_hand': 10}, {'inv_item_sk': 1, 'inv_date_sk': 4, 'inv_quantity_on_hand': 20}, {'inv_item_sk': 2, 'inv_date_sk': 1, 'inv_quantity_on_hand': 50}];

var date_dim = [{'d_date_sk': 1, 'd_month_seq': 0}, {'d_date_sk': 2, 'd_month_seq': 1}, {'d_date_sk': 3, 'd_month_seq': 2}, {'d_date_sk': 4, 'd_month_seq': 3}];

var item = [{'i_item_sk': 1, 'i_product_name': 'Prod1', 'i_brand': 'Brand1', 'i_class': 'Class1', 'i_category': 'Cat1'}, {'i_item_sk': 2, 'i_product_name': 'Prod2', 'i_brand': 'Brand2', 'i_class': 'Class2', 'i_category': 'Cat2'}];

var qoh = (() {
  var _q0 = <dynamic>[];
  var _g1 = <String, List<dynamic>>{};
  for (var inv in inventory) {
    for (var d in date_dim) {
      if (!(inv['inv_date_sk'] == d['d_date_sk'])) continue;
      for (var i in item) {
        if (!(inv['inv_item_sk'] == i['i_item_sk'])) continue;
        if (!(d['d_month_seq'] >= 0 && d['d_month_seq'] <= 11)) continue;
        var _k4 = {'product_name': i['i_product_name'], 'brand': i['i_brand'], 'class': i['i_class'], 'category': i['i_category']};
        var _k4_s = jsonEncode(_k4);
        _g1.putIfAbsent(_k4_s, () => <dynamic>[]).add({'inv': inv, 'd': d, 'i': i});
      }
    }
  }
  for (var entry in _g1.entries) {
    var g = entry.value;
    var _k4 = jsonDecode(entry.key);
    _q0.add({'i_product_name': _k4['product_name'], 'i_brand': _k4['brand'], 'i_class': _k4['class'], 'i_category': _k4['category'], 'qoh': (() { var _t6 = (() {
  var _q5 = <dynamic>[];
  for (var x in g) {
    _q5.add(x['inv_quantity_on_hand']);
  }
  return _q5;
})(); return (_t6.isEmpty ? 0 : _t6.reduce((a, b) => a + b) / _t6.length); })()});
  }
  return _q0;
})();

void main() {
  print(jsonEncode(qoh));
}

bool _equal(dynamic a, dynamic b) {
    if (a is List && b is List) {
        if (a.length != b.length) return false;
        for (var i = 0; i < a.length; i++) { if (!_equal(a[i], b[i])) return false; }
        return true;
    }
    if (a is Map && b is Map) {
        if (a.length != b.length) return false;
        for (var k in a.keys) { if (!b.containsKey(k) || !_equal(a[k], b[k])) return false; }
        return true;
    }
    return a == b;
}

String _formatDuration(Duration d) {
    if (d.inMicroseconds < 1000) return '${d.inMicroseconds}Âµs';
    if (d.inMilliseconds < 1000) return '${d.inMilliseconds}ms';
    return '${(d.inMilliseconds/1000).toStringAsFixed(2)}s';
}

void _json(dynamic v) {
    print(jsonEncode(v));
}


dynamic _min(dynamic v) {
    List<dynamic>? list;
    if (v is List) list = v;
    else if (v is Map && v['items'] is List) list = (v['items'] as List);
    else if (v is Map && v['Items'] is List) list = (v['Items'] as List);
    else { try { var it = (v as dynamic).items; if (it is List) list = it; } catch (_) {} }
    if (list == null || list.isEmpty) return 0;
    var m = list[0];
    for (var n in list) { if ((n as Comparable).compareTo(m) < 0) m = n; }
    return m;
}

num _sum(dynamic v) {
    Iterable<dynamic>? list;
    if (v is Iterable) list = v;
    else if (v is Map && v['items'] is Iterable) list = (v['items'] as Iterable);
    else if (v is Map && v['Items'] is Iterable) list = (v['Items'] as Iterable);
    else { try { var it = (v as dynamic).items; if (it is Iterable) list = it; } catch (_) {} }
    if (list == null) return 0;
    num s = 0;
    for (var n in list) s += (n as num);
    return s;
}

bool _runTest(String name, void Function() f) {
    stdout.write('   test $name ...');
    var start = DateTime.now();
    try {
        f();
        var d = DateTime.now().difference(start);
        stdout.writeln(' ok (${_formatDuration(d)})');
        return true;
    } catch (e) {
        var d = DateTime.now().difference(start);
        stdout.writeln(' fail $e (${_formatDuration(d)})');
        return false;
    }
}
