// Generated by Mochi compiler v0.10.25 on 2025-07-15T04:58:06Z
import 'dart:io';
import 'dart:convert';

var date_dim = [{'d_date_sk': 1, 'd_year': 1998, 'd_moy': 12}];

var store_sales = [{'ss_sold_date_sk': 1, 'ss_item_sk': 1, 'ss_ext_sales_price': 10}, {'ss_sold_date_sk': 1, 'ss_item_sk': 2, 'ss_ext_sales_price': 20}];

var item = [{'i_item_sk': 1, 'i_manufact_id': 100, 'i_brand_id': 1, 'i_brand': 'Brand1'}, {'i_item_sk': 2, 'i_manufact_id': 100, 'i_brand_id': 2, 'i_brand': 'Brand2'}];

var result = (() {
  var _q0 = <dynamic>[];
  var _g1 = <String, List<dynamic>>{};
  for (var dt in date_dim) {
    for (var ss in store_sales) {
      if (!(dt['d_date_sk'] == ss['ss_sold_date_sk'])) continue;
      for (var i in item) {
        if (!(ss['ss_item_sk'] == i['i_item_sk'])) continue;
        if (!(i['i_manufact_id'] == 100 && dt['d_moy'] == 12)) continue;
        var _k3 = {'d_year': dt['d_year'], 'brand_id': i['i_brand_id'], 'brand': i['i_brand']};
        var _k3_s = jsonEncode(_k3);
        _g1.putIfAbsent(_k3_s, () => <dynamic>[]).add({'dt': dt, 'ss': ss, 'i': i});
      }
    }
  }
  for (var entry in _g1.entries) {
    var g = entry.value;
    var _k3 = jsonDecode(entry.key);
    _q0.add([[_k3['d_year'], -_sum(g.map((x) => x['ss_ext_sales_price'])), _k3['brand_id']], {'d_year': _k3['d_year'], 'brand_id': _k3['brand_id'], 'brand': _k3['brand'], 'sum_agg': _sum(g.map((x) => x['ss_ext_sales_price']))}]);
  }
  _q0.sort((a,b) => (jsonEncode(a[0]) as Comparable).compareTo(jsonEncode(b[0])));
  _q0 = [for (var x in _q0) x[1]];
  return _q0;
})();

void main() {
  print(jsonEncode(result));
}

bool _equal(dynamic a, dynamic b) {
    if (a is List && b is List) {
        if (a.length != b.length) return false;
        for (var i = 0; i < a.length; i++) { if (!_equal(a[i], b[i])) return false; }
        return true;
    }
    if (a is Map && b is Map) {
        if (a.length != b.length) return false;
        for (var k in a.keys) { if (!b.containsKey(k) || !_equal(a[k], b[k])) return false; }
        return true;
    }
    return a == b;
}

String _formatDuration(Duration d) {
    if (d.inMicroseconds < 1000) return '${d.inMicroseconds}Âµs';
    if (d.inMilliseconds < 1000) return '${d.inMilliseconds}ms';
    return '${(d.inMilliseconds/1000).toStringAsFixed(2)}s';
}

void _json(dynamic v) {
    print(jsonEncode(v));
}


dynamic _min(dynamic v) {
    List<dynamic>? list;
    if (v is List) list = v;
    else if (v is Map && v['items'] is List) list = (v['items'] as List);
    else if (v is Map && v['Items'] is List) list = (v['Items'] as List);
    else { try { var it = (v as dynamic).items; if (it is List) list = it; } catch (_) {} }
    if (list == null || list.isEmpty) return 0;
    var m = list[0];
    for (var n in list) { if ((n as Comparable).compareTo(m) < 0) m = n; }
    return m;
}

num _sum(dynamic v) {
    Iterable<dynamic>? list;
    if (v is Iterable) list = v;
    else if (v is Map && v['items'] is Iterable) list = (v['items'] as Iterable);
    else if (v is Map && v['Items'] is Iterable) list = (v['Items'] as Iterable);
    else { try { var it = (v as dynamic).items; if (it is Iterable) list = it; } catch (_) {} }
    if (list == null) return 0;
    num s = 0;
    for (var n in list) s += (n as num);
    return s;
}

bool _runTest(String name, void Function() f) {
    stdout.write('   test $name ...');
    var start = DateTime.now();
    try {
        f();
        var d = DateTime.now().difference(start);
        stdout.writeln(' ok (${_formatDuration(d)})');
        return true;
    } catch (e) {
        var d = DateTime.now().difference(start);
        stdout.writeln(' fail $e (${_formatDuration(d)})');
        return false;
    }
}
