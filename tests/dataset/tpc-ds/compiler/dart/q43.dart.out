// Generated by Mochi compiler v0.10.25 on 2025-07-15T04:58:06Z
import 'dart:io';
import 'dart:convert';

var date_dim = [{'date_sk': 1, 'd_day_name': 'Sunday', 'd_year': 2020}, {'date_sk': 2, 'd_day_name': 'Monday', 'd_year': 2020}, {'date_sk': 3, 'd_day_name': 'Tuesday', 'd_year': 2020}, {'date_sk': 4, 'd_day_name': 'Wednesday', 'd_year': 2020}, {'date_sk': 5, 'd_day_name': 'Thursday', 'd_year': 2020}, {'date_sk': 6, 'd_day_name': 'Friday', 'd_year': 2020}, {'date_sk': 7, 'd_day_name': 'Saturday', 'd_year': 2020}];

var store = [{'store_sk': 1, 'store_id': 'S1', 'store_name': 'Main', 'gmt_offset': 0}];

var store_sales = [{'sold_date_sk': 1, 'store_sk': 1, 'sales_price': 10}, {'sold_date_sk': 2, 'store_sk': 1, 'sales_price': 20}, {'sold_date_sk': 3, 'store_sk': 1, 'sales_price': 30}, {'sold_date_sk': 4, 'store_sk': 1, 'sales_price': 40}, {'sold_date_sk': 5, 'store_sk': 1, 'sales_price': 50}, {'sold_date_sk': 6, 'store_sk': 1, 'sales_price': 60}, {'sold_date_sk': 7, 'store_sk': 1, 'sales_price': 70}];

var year = 2020;

var gmt = 0;

var records = (() {
  var _q0 = <dynamic>[];
  for (var d in date_dim) {
    for (var ss in store_sales) {
      if (!(ss['sold_date_sk'] == d['date_sk'])) continue;
      for (var s in store) {
        if (!(ss['store_sk'] == s['store_sk'])) continue;
        if (!(s['gmt_offset'] == gmt && d['d_year'] == year)) continue;
        _q0.add({'d_day_name': d['d_day_name'], 's_store_name': s['store_name'], 's_store_id': s['store_id'], 'price': ss['sales_price']});
      }
    }
  }
  return _q0;
})();

var base = (() {
  var _q1 = <dynamic>[];
  var _g2 = <String, List<dynamic>>{};
  for (var r in records) {
    var _k10 = {'name': r['s_store_name'], 'id': r['s_store_id']};
    var _k10_s = jsonEncode(_k10);
    _g2.putIfAbsent(_k10_s, () => <dynamic>[]).add(r);
  }
  for (var entry in _g2.entries) {
    var g = entry.value;
    var _k10 = jsonDecode(entry.key);
    _q1.add({'s_store_name': _k10['name'], 's_store_id': _k10['id'], 'sun_sales': _sum(g.map((x) => (x['d_day_name'] == 'Sunday' ? x['price'] : 0))), 'mon_sales': _sum(g.map((x) => (x['d_day_name'] == 'Monday' ? x['price'] : 0))), 'tue_sales': _sum(g.map((x) => (x['d_day_name'] == 'Tuesday' ? x['price'] : 0))), 'wed_sales': _sum(g.map((x) => (x['d_day_name'] == 'Wednesday' ? x['price'] : 0))), 'thu_sales': _sum(g.map((x) => (x['d_day_name'] == 'Thursday' ? x['price'] : 0))), 'fri_sales': _sum(g.map((x) => (x['d_day_name'] == 'Friday' ? x['price'] : 0))), 'sat_sales': _sum(g.map((x) => (x['d_day_name'] == 'Saturday' ? x['price'] : 0)))});
  }
  return _q1;
})();

var result = base;

void main() {
  print(jsonEncode(result));
}

bool _equal(dynamic a, dynamic b) {
    if (a is List && b is List) {
        if (a.length != b.length) return false;
        for (var i = 0; i < a.length; i++) { if (!_equal(a[i], b[i])) return false; }
        return true;
    }
    if (a is Map && b is Map) {
        if (a.length != b.length) return false;
        for (var k in a.keys) { if (!b.containsKey(k) || !_equal(a[k], b[k])) return false; }
        return true;
    }
    return a == b;
}

String _formatDuration(Duration d) {
    if (d.inMicroseconds < 1000) return '${d.inMicroseconds}Âµs';
    if (d.inMilliseconds < 1000) return '${d.inMilliseconds}ms';
    return '${(d.inMilliseconds/1000).toStringAsFixed(2)}s';
}

void _json(dynamic v) {
    print(jsonEncode(v));
}


dynamic _min(dynamic v) {
    List<dynamic>? list;
    if (v is List) list = v;
    else if (v is Map && v['items'] is List) list = (v['items'] as List);
    else if (v is Map && v['Items'] is List) list = (v['Items'] as List);
    else { try { var it = (v as dynamic).items; if (it is List) list = it; } catch (_) {} }
    if (list == null || list.isEmpty) return 0;
    var m = list[0];
    for (var n in list) { if ((n as Comparable).compareTo(m) < 0) m = n; }
    return m;
}

num _sum(dynamic v) {
    Iterable<dynamic>? list;
    if (v is Iterable) list = v;
    else if (v is Map && v['items'] is Iterable) list = (v['items'] as Iterable);
    else if (v is Map && v['Items'] is Iterable) list = (v['Items'] as Iterable);
    else { try { var it = (v as dynamic).items; if (it is Iterable) list = it; } catch (_) {} }
    if (list == null) return 0;
    num s = 0;
    for (var n in list) s += (n as num);
    return s;
}

bool _runTest(String name, void Function() f) {
    stdout.write('   test $name ...');
    var start = DateTime.now();
    try {
        f();
        var d = DateTime.now().difference(start);
        stdout.writeln(' ok (${_formatDuration(d)})');
        return true;
    } catch (e) {
        var d = DateTime.now().difference(start);
        stdout.writeln(' fail $e (${_formatDuration(d)})');
        return false;
    }
}
