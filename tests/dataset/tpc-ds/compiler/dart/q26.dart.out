// Generated by Mochi compiler v0.10.25 on 2025-07-15T04:58:06Z
import 'dart:io';
import 'dart:convert';

class CatalogSale {
  int cs_sold_date_sk;
  int cs_item_sk;
  int cs_bill_cdemo_sk;
  int cs_promo_sk;
  int cs_quantity;
  double cs_list_price;
  double cs_coupon_amt;
  double cs_sales_price;
  CatalogSale(this.cs_sold_date_sk, this.cs_item_sk, this.cs_bill_cdemo_sk, this.cs_promo_sk, this.cs_quantity, this.cs_list_price, this.cs_coupon_amt, this.cs_sales_price);
}

class CustomerDemo {
  int cd_demo_sk;
  String cd_gender;
  String cd_marital_status;
  String cd_education_status;
  CustomerDemo(this.cd_demo_sk, this.cd_gender, this.cd_marital_status, this.cd_education_status);
}

class DateDim {
  int d_date_sk;
  int d_year;
  DateDim(this.d_date_sk, this.d_year);
}

class Item {
  int i_item_sk;
  String i_item_id;
  Item(this.i_item_sk, this.i_item_id);
}

class Promotion {
  int p_promo_sk;
  String p_channel_email;
  String p_channel_event;
  Promotion(this.p_promo_sk, this.p_channel_email, this.p_channel_event);
}

var catalog_sales = [{'cs_sold_date_sk': 1, 'cs_item_sk': 1, 'cs_bill_cdemo_sk': 1, 'cs_promo_sk': 1, 'cs_quantity': 10, 'cs_list_price': 100, 'cs_coupon_amt': 5, 'cs_sales_price': 95}, {'cs_sold_date_sk': 1, 'cs_item_sk': 2, 'cs_bill_cdemo_sk': 2, 'cs_promo_sk': 2, 'cs_quantity': 5, 'cs_list_price': 50, 'cs_coupon_amt': 2, 'cs_sales_price': 48}];

var customer_demographics = [{'cd_demo_sk': 1, 'cd_gender': 'M', 'cd_marital_status': 'S', 'cd_education_status': 'College'}, {'cd_demo_sk': 2, 'cd_gender': 'F', 'cd_marital_status': 'M', 'cd_education_status': 'High School'}];

var date_dim = [{'d_date_sk': 1, 'd_year': 2000}];

var item = [{'i_item_sk': 1, 'i_item_id': 'ITEM1'}, {'i_item_sk': 2, 'i_item_id': 'ITEM2'}];

var promotion = [{'p_promo_sk': 1, 'p_channel_email': 'N', 'p_channel_event': 'Y'}, {'p_promo_sk': 2, 'p_channel_email': 'Y', 'p_channel_event': 'N'}];

var result = (() {
  var _q0 = <dynamic>[];
  var _g1 = <String, List<dynamic>>{};
  for (var cs in catalog_sales) {
    for (var cd in customer_demographics) {
      if (!(cs['cs_bill_cdemo_sk'] == cd['cd_demo_sk'])) continue;
      for (var d in date_dim) {
        if (!(cs['cs_sold_date_sk'] == d['d_date_sk'])) continue;
        for (var i in item) {
          if (!(cs['cs_item_sk'] == i['i_item_sk'])) continue;
          for (var p in promotion) {
            if (!(cs['cs_promo_sk'] == p['p_promo_sk'])) continue;
            if (!(cd['cd_gender'] == 'M' && cd['cd_marital_status'] == 'S' && cd['cd_education_status'] == 'College' && (p['p_channel_email'] == 'N' || p['p_channel_event'] == 'N') && d['d_year'] == 2000)) continue;
            var _k10 = i['i_item_id'];
            var _k10_s = jsonEncode(_k10);
            _g1.putIfAbsent(_k10_s, () => <dynamic>[]).add({'cs': cs, 'cd': cd, 'd': d, 'i': i, 'p': p});
          }
        }
      }
    }
  }
  for (var entry in _g1.entries) {
    var g = entry.value;
    var _k10 = jsonDecode(entry.key);
    _q0.add({'i_item_id': _k10, 'agg1': (() { var _t12 = (() {
  var _q11 = <dynamic>[];
  for (var x in g) {
    _q11.add(x['cs_quantity']);
  }
  return _q11;
})(); return (_t12.isEmpty ? 0 : _t12.reduce((a, b) => a + b) / _t12.length); })(), 'agg2': (() { var _t14 = (() {
  var _q13 = <dynamic>[];
  for (var x in g) {
    _q13.add(x['cs_list_price']);
  }
  return _q13;
})(); return (_t14.isEmpty ? 0 : _t14.reduce((a, b) => a + b) / _t14.length); })(), 'agg3': (() { var _t16 = (() {
  var _q15 = <dynamic>[];
  for (var x in g) {
    _q15.add(x['cs_coupon_amt']);
  }
  return _q15;
})(); return (_t16.isEmpty ? 0 : _t16.reduce((a, b) => a + b) / _t16.length); })(), 'agg4': (() { var _t18 = (() {
  var _q17 = <dynamic>[];
  for (var x in g) {
    _q17.add(x['cs_sales_price']);
  }
  return _q17;
})(); return (_t18.isEmpty ? 0 : _t18.reduce((a, b) => a + b) / _t18.length); })()});
  }
  return _q0;
})();

void main() {
  print(jsonEncode(result));
}

bool _equal(dynamic a, dynamic b) {
    if (a is List && b is List) {
        if (a.length != b.length) return false;
        for (var i = 0; i < a.length; i++) { if (!_equal(a[i], b[i])) return false; }
        return true;
    }
    if (a is Map && b is Map) {
        if (a.length != b.length) return false;
        for (var k in a.keys) { if (!b.containsKey(k) || !_equal(a[k], b[k])) return false; }
        return true;
    }
    return a == b;
}

String _formatDuration(Duration d) {
    if (d.inMicroseconds < 1000) return '${d.inMicroseconds}Âµs';
    if (d.inMilliseconds < 1000) return '${d.inMilliseconds}ms';
    return '${(d.inMilliseconds/1000).toStringAsFixed(2)}s';
}

void _json(dynamic v) {
    print(jsonEncode(v));
}


dynamic _min(dynamic v) {
    List<dynamic>? list;
    if (v is List) list = v;
    else if (v is Map && v['items'] is List) list = (v['items'] as List);
    else if (v is Map && v['Items'] is List) list = (v['Items'] as List);
    else { try { var it = (v as dynamic).items; if (it is List) list = it; } catch (_) {} }
    if (list == null || list.isEmpty) return 0;
    var m = list[0];
    for (var n in list) { if ((n as Comparable).compareTo(m) < 0) m = n; }
    return m;
}

num _sum(dynamic v) {
    Iterable<dynamic>? list;
    if (v is Iterable) list = v;
    else if (v is Map && v['items'] is Iterable) list = (v['items'] as Iterable);
    else if (v is Map && v['Items'] is Iterable) list = (v['Items'] as Iterable);
    else { try { var it = (v as dynamic).items; if (it is Iterable) list = it; } catch (_) {} }
    if (list == null) return 0;
    num s = 0;
    for (var n in list) s += (n as num);
    return s;
}

bool _runTest(String name, void Function() f) {
    stdout.write('   test $name ...');
    var start = DateTime.now();
    try {
        f();
        var d = DateTime.now().difference(start);
        stdout.writeln(' ok (${_formatDuration(d)})');
        return true;
    } catch (e) {
        var d = DateTime.now().difference(start);
        stdout.writeln(' fail $e (${_formatDuration(d)})');
        return false;
    }
}
