// Generated by Mochi compiler v0.10.25 on 2025-07-15T04:58:07Z
import 'dart:io';
import 'dart:convert';

var store_sales = [{'ticket': 1, 'item': 101, 'sold': 1, 'customer': 1, 'store': 1}, {'ticket': 2, 'item': 102, 'sold': 1, 'customer': 1, 'store': 1}, {'ticket': 3, 'item': 103, 'sold': 1, 'customer': 1, 'store': 1}, {'ticket': 4, 'item': 104, 'sold': 1, 'customer': 1, 'store': 1}, {'ticket': 5, 'item': 105, 'sold': 1, 'customer': 1, 'store': 1}];

var store_returns = [{'ticket': 1, 'item': 101, 'returned': 16, 'customer': 1}, {'ticket': 2, 'item': 102, 'returned': 46, 'customer': 1}, {'ticket': 3, 'item': 103, 'returned': 76, 'customer': 1}, {'ticket': 4, 'item': 104, 'returned': 111, 'customer': 1}, {'ticket': 5, 'item': 105, 'returned': 151, 'customer': 1}];

var date_dim = [{'d_date_sk': 1, 'd_year': 2001, 'd_moy': 7}, {'d_date_sk': 16, 'd_year': 2001, 'd_moy': 8}, {'d_date_sk': 46, 'd_year': 2001, 'd_moy': 8}, {'d_date_sk': 76, 'd_year': 2001, 'd_moy': 8}, {'d_date_sk': 111, 'd_year': 2001, 'd_moy': 8}, {'d_date_sk': 151, 'd_year': 2001, 'd_moy': 8}];

var store = [{'s_store_sk': 1, 's_store_name': 'Main', 's_company_id': 1, 's_street_number': '1', 's_street_name': 'Main', 's_street_type': 'St', 's_suite_number': '100', 's_city': 'City', 's_county': 'County', 's_state': 'CA', 's_zip': '12345'}];

var year = 2001;

var month = 8;

var joined = (() {
  var _q0 = <dynamic>[];
  for (var ss in store_sales) {
    for (var sr in store_returns) {
      if (!(ss['ticket'] == sr['ticket'] && ss['item'] == sr['item'] && ss['customer'] == sr['customer'])) continue;
      for (var d1 in date_dim) {
        if (!(ss['sold'] == d1['d_date_sk'])) continue;
        for (var d2 in date_dim) {
          if (!(sr['returned'] == d2['d_date_sk'] && d2['d_year'] == year && d2['d_moy'] == month)) continue;
          for (var s in store) {
            if (!(ss['store'] == s['s_store_sk'])) continue;
            _q0.add({'s': s, 'diff': sr['returned'] - ss['sold']});
          }
        }
      }
    }
  }
  return _q0;
})();

var result = (() {
  var _q1 = <dynamic>[];
  var _g2 = <String, List<dynamic>>{};
  for (var j in joined) {
    var _k8 = j['s'];
    var _k8_s = jsonEncode(_k8);
    _g2.putIfAbsent(_k8_s, () => <dynamic>[]).add(j);
  }
  for (var entry in _g2.entries) {
    var g = entry.value;
    var _k8 = jsonDecode(entry.key);
    _q1.add({'s_store_name': _k8['s_store_name'], 'd30': (() {
  var _q9 = <dynamic>[];
  for (var x in g) {
    if (!(x['diff'].toString().compareTo(30.toString()) <= 0)) continue;
    _q9.add(1);
  }
  return _q9;
})().length, 'd31_60': (() {
  var _q10 = <dynamic>[];
  for (var x in g) {
    if (!(x['diff'].toString().compareTo(30.toString()) > 0 && x['diff'].toString().compareTo(60.toString()) <= 0)) continue;
    _q10.add(1);
  }
  return _q10;
})().length, 'd61_90': (() {
  var _q11 = <dynamic>[];
  for (var x in g) {
    if (!(x['diff'].toString().compareTo(60.toString()) > 0 && x['diff'].toString().compareTo(90.toString()) <= 0)) continue;
    _q11.add(1);
  }
  return _q11;
})().length, 'd91_120': (() {
  var _q12 = <dynamic>[];
  for (var x in g) {
    if (!(x['diff'].toString().compareTo(90.toString()) > 0 && x['diff'].toString().compareTo(120.toString()) <= 0)) continue;
    _q12.add(1);
  }
  return _q12;
})().length, 'd_gt_120': (() {
  var _q13 = <dynamic>[];
  for (var x in g) {
    if (!(x['diff'].toString().compareTo(120.toString()) > 0)) continue;
    _q13.add(1);
  }
  return _q13;
})().length});
  }
  return _q1;
})();

void main() {
  print(jsonEncode(result));
}

bool _equal(dynamic a, dynamic b) {
    if (a is List && b is List) {
        if (a.length != b.length) return false;
        for (var i = 0; i < a.length; i++) { if (!_equal(a[i], b[i])) return false; }
        return true;
    }
    if (a is Map && b is Map) {
        if (a.length != b.length) return false;
        for (var k in a.keys) { if (!b.containsKey(k) || !_equal(a[k], b[k])) return false; }
        return true;
    }
    return a == b;
}

String _formatDuration(Duration d) {
    if (d.inMicroseconds < 1000) return '${d.inMicroseconds}Âµs';
    if (d.inMilliseconds < 1000) return '${d.inMilliseconds}ms';
    return '${(d.inMilliseconds/1000).toStringAsFixed(2)}s';
}

void _json(dynamic v) {
    print(jsonEncode(v));
}


dynamic _min(dynamic v) {
    List<dynamic>? list;
    if (v is List) list = v;
    else if (v is Map && v['items'] is List) list = (v['items'] as List);
    else if (v is Map && v['Items'] is List) list = (v['Items'] as List);
    else { try { var it = (v as dynamic).items; if (it is List) list = it; } catch (_) {} }
    if (list == null || list.isEmpty) return 0;
    var m = list[0];
    for (var n in list) { if ((n as Comparable).compareTo(m) < 0) m = n; }
    return m;
}

num _sum(dynamic v) {
    Iterable<dynamic>? list;
    if (v is Iterable) list = v;
    else if (v is Map && v['items'] is Iterable) list = (v['items'] as Iterable);
    else if (v is Map && v['Items'] is Iterable) list = (v['Items'] as Iterable);
    else { try { var it = (v as dynamic).items; if (it is Iterable) list = it; } catch (_) {} }
    if (list == null) return 0;
    num s = 0;
    for (var n in list) s += (n as num);
    return s;
}

bool _runTest(String name, void Function() f) {
    stdout.write('   test $name ...');
    var start = DateTime.now();
    try {
        f();
        var d = DateTime.now().difference(start);
        stdout.writeln(' ok (${_formatDuration(d)})');
        return true;
    } catch (e) {
        var d = DateTime.now().difference(start);
        stdout.writeln(' fail $e (${_formatDuration(d)})');
        return false;
    }
}
