// Generated by Mochi compiler v0.10.25 on 2025-07-15T04:58:06Z
import 'dart:io';
import 'dart:convert';

var store_sales = [{'ca_county': 'A', 'd_qoy': 1, 'd_year': 2000, 'ss_ext_sales_price': 100}, {'ca_county': 'A', 'd_qoy': 2, 'd_year': 2000, 'ss_ext_sales_price': 120}, {'ca_county': 'A', 'd_qoy': 3, 'd_year': 2000, 'ss_ext_sales_price': 160}, {'ca_county': 'B', 'd_qoy': 1, 'd_year': 2000, 'ss_ext_sales_price': 80}, {'ca_county': 'B', 'd_qoy': 2, 'd_year': 2000, 'ss_ext_sales_price': 90}, {'ca_county': 'B', 'd_qoy': 3, 'd_year': 2000, 'ss_ext_sales_price': 100}];

var web_sales = [{'ca_county': 'A', 'd_qoy': 1, 'd_year': 2000, 'ws_ext_sales_price': 100}, {'ca_county': 'A', 'd_qoy': 2, 'd_year': 2000, 'ws_ext_sales_price': 150}, {'ca_county': 'A', 'd_qoy': 3, 'd_year': 2000, 'ws_ext_sales_price': 250}, {'ca_county': 'B', 'd_qoy': 1, 'd_year': 2000, 'ws_ext_sales_price': 80}, {'ca_county': 'B', 'd_qoy': 2, 'd_year': 2000, 'ws_ext_sales_price': 90}, {'ca_county': 'B', 'd_qoy': 3, 'd_year': 2000, 'ws_ext_sales_price': 95}];

var counties = ['A', 'B'];

var result = [];

void main() {
  for (var county in counties) {
    var ss1 = (() { var _t1 = (() {
  var _q0 = <dynamic>[];
  for (var s in store_sales) {
    if (!(s['ca_county'] == county && s['d_qoy'] == 1)) continue;
    _q0.add(s['ss_ext_sales_price']);
  }
  return _q0;
})(); return _sum(_t1); })();
    var ss2 = (() { var _t3 = (() {
  var _q2 = <dynamic>[];
  for (var s in store_sales) {
    if (!(s['ca_county'] == county && s['d_qoy'] == 2)) continue;
    _q2.add(s['ss_ext_sales_price']);
  }
  return _q2;
})(); return _sum(_t3); })();
    var ss3 = (() { var _t5 = (() {
  var _q4 = <dynamic>[];
  for (var s in store_sales) {
    if (!(s['ca_county'] == county && s['d_qoy'] == 3)) continue;
    _q4.add(s['ss_ext_sales_price']);
  }
  return _q4;
})(); return _sum(_t5); })();
    var ws1 = (() { var _t7 = (() {
  var _q6 = <dynamic>[];
  for (var w in web_sales) {
    if (!(w['ca_county'] == county && w['d_qoy'] == 1)) continue;
    _q6.add(w['ws_ext_sales_price']);
  }
  return _q6;
})(); return _sum(_t7); })();
    var ws2 = (() { var _t9 = (() {
  var _q8 = <dynamic>[];
  for (var w in web_sales) {
    if (!(w['ca_county'] == county && w['d_qoy'] == 2)) continue;
    _q8.add(w['ws_ext_sales_price']);
  }
  return _q8;
})(); return _sum(_t9); })();
    var ws3 = (() { var _t11 = (() {
  var _q10 = <dynamic>[];
  for (var w in web_sales) {
    if (!(w['ca_county'] == county && w['d_qoy'] == 3)) continue;
    _q10.add(w['ws_ext_sales_price']);
  }
  return _q10;
})(); return _sum(_t11); })();
    var web_g1 = (ws2 as num) / (ws1 as num);
    var store_g1 = (ss2 as num) / (ss1 as num);
    var web_g2 = (ws3 as num) / (ws2 as num);
    var store_g2 = (ss3 as num) / (ss2 as num);
    if (web_g1.toString().compareTo(store_g1.toString()) > 0 && web_g2.toString().compareTo(store_g2.toString()) > 0) {
      result = List.from(result)..add({'ca_county': county, 'd_year': 2000, 'web_q1_q2_increase': web_g1, 'store_q1_q2_increase': store_g1, 'web_q2_q3_increase': web_g2, 'store_q2_q3_increase': store_g2});
    }
  }
  print(jsonEncode(result));
}

bool _equal(dynamic a, dynamic b) {
    if (a is List && b is List) {
        if (a.length != b.length) return false;
        for (var i = 0; i < a.length; i++) { if (!_equal(a[i], b[i])) return false; }
        return true;
    }
    if (a is Map && b is Map) {
        if (a.length != b.length) return false;
        for (var k in a.keys) { if (!b.containsKey(k) || !_equal(a[k], b[k])) return false; }
        return true;
    }
    return a == b;
}

String _formatDuration(Duration d) {
    if (d.inMicroseconds < 1000) return '${d.inMicroseconds}Âµs';
    if (d.inMilliseconds < 1000) return '${d.inMilliseconds}ms';
    return '${(d.inMilliseconds/1000).toStringAsFixed(2)}s';
}

void _json(dynamic v) {
    print(jsonEncode(v));
}


dynamic _min(dynamic v) {
    List<dynamic>? list;
    if (v is List) list = v;
    else if (v is Map && v['items'] is List) list = (v['items'] as List);
    else if (v is Map && v['Items'] is List) list = (v['Items'] as List);
    else { try { var it = (v as dynamic).items; if (it is List) list = it; } catch (_) {} }
    if (list == null || list.isEmpty) return 0;
    var m = list[0];
    for (var n in list) { if ((n as Comparable).compareTo(m) < 0) m = n; }
    return m;
}

num _sum(dynamic v) {
    Iterable<dynamic>? list;
    if (v is Iterable) list = v;
    else if (v is Map && v['items'] is Iterable) list = (v['items'] as Iterable);
    else if (v is Map && v['Items'] is Iterable) list = (v['Items'] as Iterable);
    else { try { var it = (v as dynamic).items; if (it is Iterable) list = it; } catch (_) {} }
    if (list == null) return 0;
    num s = 0;
    for (var n in list) s += (n as num);
    return s;
}

bool _runTest(String name, void Function() f) {
    stdout.write('   test $name ...');
    var start = DateTime.now();
    try {
        f();
        var d = DateTime.now().difference(start);
        stdout.writeln(' ok (${_formatDuration(d)})');
        return true;
    } catch (e) {
        var d = DateTime.now().difference(start);
        stdout.writeln(' fail $e (${_formatDuration(d)})');
        return false;
    }
}
