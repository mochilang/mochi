// Generated by Mochi compiler v0.10.25 on 2025-07-15T04:58:06Z
import 'dart:io';
import 'dart:convert';

var store_sales = [{'ss_quantity': 5, 'ss_ext_discount_amt': 5, 'ss_net_paid': 7}, {'ss_quantity': 30, 'ss_ext_discount_amt': 10, 'ss_net_paid': 15}, {'ss_quantity': 50, 'ss_ext_discount_amt': 20, 'ss_net_paid': 30}, {'ss_quantity': 70, 'ss_ext_discount_amt': 25, 'ss_net_paid': 35}, {'ss_quantity': 90, 'ss_ext_discount_amt': 40, 'ss_net_paid': 50}];

var reason = [{'r_reason_sk': 1}];

var bucket1 = ((() {
  var _q0 = <dynamic>[];
  for (var s in store_sales) {
    if (!(s['ss_quantity'].toString().compareTo(1.toString()) >= 0 && s['ss_quantity'].toString().compareTo(20.toString()) <= 0)) continue;
    _q0.add(s);
  }
  return _q0;
})().length > 10 ? (() { var _t2 = (() {
  var _q1 = <dynamic>[];
  for (var s in store_sales) {
    if (!(s['ss_quantity'].toString().compareTo(1.toString()) >= 0 && s['ss_quantity'].toString().compareTo(20.toString()) <= 0)) continue;
    _q1.add(s['ss_ext_discount_amt']);
  }
  return _q1;
})(); return (_t2.isEmpty ? 0 : _t2.reduce((a, b) => a + b) / _t2.length); })() : (() { var _t4 = (() {
  var _q3 = <dynamic>[];
  for (var s in store_sales) {
    if (!(s['ss_quantity'].toString().compareTo(1.toString()) >= 0 && s['ss_quantity'].toString().compareTo(20.toString()) <= 0)) continue;
    _q3.add(s['ss_net_paid']);
  }
  return _q3;
})(); return (_t4.isEmpty ? 0 : _t4.reduce((a, b) => a + b) / _t4.length); })());

var bucket2 = ((() {
  var _q5 = <dynamic>[];
  for (var s in store_sales) {
    if (!(s['ss_quantity'].toString().compareTo(21.toString()) >= 0 && s['ss_quantity'].toString().compareTo(40.toString()) <= 0)) continue;
    _q5.add(s);
  }
  return _q5;
})().length > 20 ? (() { var _t7 = (() {
  var _q6 = <dynamic>[];
  for (var s in store_sales) {
    if (!(s['ss_quantity'].toString().compareTo(21.toString()) >= 0 && s['ss_quantity'].toString().compareTo(40.toString()) <= 0)) continue;
    _q6.add(s['ss_ext_discount_amt']);
  }
  return _q6;
})(); return (_t7.isEmpty ? 0 : _t7.reduce((a, b) => a + b) / _t7.length); })() : (() { var _t9 = (() {
  var _q8 = <dynamic>[];
  for (var s in store_sales) {
    if (!(s['ss_quantity'].toString().compareTo(21.toString()) >= 0 && s['ss_quantity'].toString().compareTo(40.toString()) <= 0)) continue;
    _q8.add(s['ss_net_paid']);
  }
  return _q8;
})(); return (_t9.isEmpty ? 0 : _t9.reduce((a, b) => a + b) / _t9.length); })());

var bucket3 = ((() {
  var _q10 = <dynamic>[];
  for (var s in store_sales) {
    if (!(s['ss_quantity'].toString().compareTo(41.toString()) >= 0 && s['ss_quantity'].toString().compareTo(60.toString()) <= 0)) continue;
    _q10.add(s);
  }
  return _q10;
})().length > 30 ? (() { var _t12 = (() {
  var _q11 = <dynamic>[];
  for (var s in store_sales) {
    if (!(s['ss_quantity'].toString().compareTo(41.toString()) >= 0 && s['ss_quantity'].toString().compareTo(60.toString()) <= 0)) continue;
    _q11.add(s['ss_ext_discount_amt']);
  }
  return _q11;
})(); return (_t12.isEmpty ? 0 : _t12.reduce((a, b) => a + b) / _t12.length); })() : (() { var _t14 = (() {
  var _q13 = <dynamic>[];
  for (var s in store_sales) {
    if (!(s['ss_quantity'].toString().compareTo(41.toString()) >= 0 && s['ss_quantity'].toString().compareTo(60.toString()) <= 0)) continue;
    _q13.add(s['ss_net_paid']);
  }
  return _q13;
})(); return (_t14.isEmpty ? 0 : _t14.reduce((a, b) => a + b) / _t14.length); })());

var bucket4 = ((() {
  var _q15 = <dynamic>[];
  for (var s in store_sales) {
    if (!(s['ss_quantity'].toString().compareTo(61.toString()) >= 0 && s['ss_quantity'].toString().compareTo(80.toString()) <= 0)) continue;
    _q15.add(s);
  }
  return _q15;
})().length > 40 ? (() { var _t17 = (() {
  var _q16 = <dynamic>[];
  for (var s in store_sales) {
    if (!(s['ss_quantity'].toString().compareTo(61.toString()) >= 0 && s['ss_quantity'].toString().compareTo(80.toString()) <= 0)) continue;
    _q16.add(s['ss_ext_discount_amt']);
  }
  return _q16;
})(); return (_t17.isEmpty ? 0 : _t17.reduce((a, b) => a + b) / _t17.length); })() : (() { var _t19 = (() {
  var _q18 = <dynamic>[];
  for (var s in store_sales) {
    if (!(s['ss_quantity'].toString().compareTo(61.toString()) >= 0 && s['ss_quantity'].toString().compareTo(80.toString()) <= 0)) continue;
    _q18.add(s['ss_net_paid']);
  }
  return _q18;
})(); return (_t19.isEmpty ? 0 : _t19.reduce((a, b) => a + b) / _t19.length); })());

var bucket5 = ((() {
  var _q20 = <dynamic>[];
  for (var s in store_sales) {
    if (!(s['ss_quantity'].toString().compareTo(81.toString()) >= 0 && s['ss_quantity'].toString().compareTo(100.toString()) <= 0)) continue;
    _q20.add(s);
  }
  return _q20;
})().length > 50 ? (() { var _t22 = (() {
  var _q21 = <dynamic>[];
  for (var s in store_sales) {
    if (!(s['ss_quantity'].toString().compareTo(81.toString()) >= 0 && s['ss_quantity'].toString().compareTo(100.toString()) <= 0)) continue;
    _q21.add(s['ss_ext_discount_amt']);
  }
  return _q21;
})(); return (_t22.isEmpty ? 0 : _t22.reduce((a, b) => a + b) / _t22.length); })() : (() { var _t24 = (() {
  var _q23 = <dynamic>[];
  for (var s in store_sales) {
    if (!(s['ss_quantity'].toString().compareTo(81.toString()) >= 0 && s['ss_quantity'].toString().compareTo(100.toString()) <= 0)) continue;
    _q23.add(s['ss_net_paid']);
  }
  return _q23;
})(); return (_t24.isEmpty ? 0 : _t24.reduce((a, b) => a + b) / _t24.length); })());

var result = (() {
  var _q25 = <dynamic>[];
  for (var r in reason) {
    if (!(r['r_reason_sk'] == 1)) continue;
    _q25.add({'bucket1': bucket1, 'bucket2': bucket2, 'bucket3': bucket3, 'bucket4': bucket4, 'bucket5': bucket5});
  }
  return _q25;
})();

void main() {
  print(jsonEncode(result));
}

bool _equal(dynamic a, dynamic b) {
    if (a is List && b is List) {
        if (a.length != b.length) return false;
        for (var i = 0; i < a.length; i++) { if (!_equal(a[i], b[i])) return false; }
        return true;
    }
    if (a is Map && b is Map) {
        if (a.length != b.length) return false;
        for (var k in a.keys) { if (!b.containsKey(k) || !_equal(a[k], b[k])) return false; }
        return true;
    }
    return a == b;
}

String _formatDuration(Duration d) {
    if (d.inMicroseconds < 1000) return '${d.inMicroseconds}Âµs';
    if (d.inMilliseconds < 1000) return '${d.inMilliseconds}ms';
    return '${(d.inMilliseconds/1000).toStringAsFixed(2)}s';
}

void _json(dynamic v) {
    print(jsonEncode(v));
}


dynamic _min(dynamic v) {
    List<dynamic>? list;
    if (v is List) list = v;
    else if (v is Map && v['items'] is List) list = (v['items'] as List);
    else if (v is Map && v['Items'] is List) list = (v['Items'] as List);
    else { try { var it = (v as dynamic).items; if (it is List) list = it; } catch (_) {} }
    if (list == null || list.isEmpty) return 0;
    var m = list[0];
    for (var n in list) { if ((n as Comparable).compareTo(m) < 0) m = n; }
    return m;
}

num _sum(dynamic v) {
    Iterable<dynamic>? list;
    if (v is Iterable) list = v;
    else if (v is Map && v['items'] is Iterable) list = (v['items'] as Iterable);
    else if (v is Map && v['Items'] is Iterable) list = (v['Items'] as Iterable);
    else { try { var it = (v as dynamic).items; if (it is Iterable) list = it; } catch (_) {} }
    if (list == null) return 0;
    num s = 0;
    for (var n in list) s += (n as num);
    return s;
}

bool _runTest(String name, void Function() f) {
    stdout.write('   test $name ...');
    var start = DateTime.now();
    try {
        f();
        var d = DateTime.now().difference(start);
        stdout.writeln(' ok (${_formatDuration(d)})');
        return true;
    } catch (e) {
        var d = DateTime.now().difference(start);
        stdout.writeln(' fail $e (${_formatDuration(d)})');
        return false;
    }
}
