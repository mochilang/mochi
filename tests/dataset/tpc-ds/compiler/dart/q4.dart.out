// Generated by Mochi compiler v0.10.25 on 2025-07-15T04:58:06Z
import 'dart:io';
import 'dart:convert';

var customer = [{'c_customer_sk': 1, 'c_customer_id': 'C1', 'c_first_name': 'Alice', 'c_last_name': 'A', 'c_login': 'alice'}];

var store_sales = [{'ss_customer_sk': 1, 'ss_sold_date_sk': 1, 'ss_ext_list_price': 10, 'ss_ext_wholesale_cost': 5, 'ss_ext_discount_amt': 0, 'ss_ext_sales_price': 10}, {'ss_customer_sk': 1, 'ss_sold_date_sk': 2, 'ss_ext_list_price': 20, 'ss_ext_wholesale_cost': 5, 'ss_ext_discount_amt': 0, 'ss_ext_sales_price': 20}];

var catalog_sales = [{'cs_bill_customer_sk': 1, 'cs_sold_date_sk': 1, 'cs_ext_list_price': 10, 'cs_ext_wholesale_cost': 2, 'cs_ext_discount_amt': 0, 'cs_ext_sales_price': 10}, {'cs_bill_customer_sk': 1, 'cs_sold_date_sk': 2, 'cs_ext_list_price': 30, 'cs_ext_wholesale_cost': 2, 'cs_ext_discount_amt': 0, 'cs_ext_sales_price': 30}];

var web_sales = [{'ws_bill_customer_sk': 1, 'ws_sold_date_sk': 1, 'ws_ext_list_price': 10, 'ws_ext_wholesale_cost': 5, 'ws_ext_discount_amt': 0, 'ws_ext_sales_price': 10}, {'ws_bill_customer_sk': 1, 'ws_sold_date_sk': 2, 'ws_ext_list_price': 12, 'ws_ext_wholesale_cost': 5, 'ws_ext_discount_amt': 0, 'ws_ext_sales_price': 12}];

var date_dim = [{'d_date_sk': 1, 'd_year': 2001}, {'d_date_sk': 2, 'd_year': 2002}];

var year_total = (List.from((List.from(((() {
  var _q0 = <dynamic>[];
  var _g1 = <String, List<dynamic>>{};
  for (var c in customer) {
    for (var s in store_sales) {
      if (!(c['c_customer_sk'] == s['ss_customer_sk'])) continue;
      for (var d in date_dim) {
        if (!(s['ss_sold_date_sk'] == d['d_date_sk'])) continue;
        var _k3 = {'id': c['c_customer_id'], 'first': c['c_first_name'], 'last': c['c_last_name'], 'login': c['c_login'], 'year': d['d_year']};
        var _k3_s = jsonEncode(_k3);
        _g1.putIfAbsent(_k3_s, () => <dynamic>[]).add({'c': c, 's': s, 'd': d});
      }
    }
  }
  for (var entry in _g1.entries) {
    var g = entry.value;
    var _k3 = jsonDecode(entry.key);
    _q0.add({'customer_id': _k3['id'], 'customer_first_name': _k3['first'], 'customer_last_name': _k3['last'], 'customer_login': _k3['login'], 'dyear': _k3['year'], 'year_total': _sum(g.map((x) => ((((((x['ss_ext_list_price'] as num) - (x['ss_ext_wholesale_cost'] as num) as num) - (x['ss_ext_discount_amt'] as num)) as num) + (x['ss_ext_sales_price'] as num)) as num) / 2)), 'sale_type': 's'});
  }
  return _q0;
})()))..addAll(((() {
  var _q5 = <dynamic>[];
  var _g6 = <String, List<dynamic>>{};
  for (var c in customer) {
    for (var cs in catalog_sales) {
      if (!(c['c_customer_sk'] == cs['cs_bill_customer_sk'])) continue;
      for (var d in date_dim) {
        if (!(cs['cs_sold_date_sk'] == d['d_date_sk'])) continue;
        var _k8 = {'id': c['c_customer_id'], 'first': c['c_first_name'], 'last': c['c_last_name'], 'login': c['c_login'], 'year': d['d_year']};
        var _k8_s = jsonEncode(_k8);
        _g6.putIfAbsent(_k8_s, () => <dynamic>[]).add({'c': c, 'cs': cs, 'd': d});
      }
    }
  }
  for (var entry in _g6.entries) {
    var g = entry.value;
    var _k8 = jsonDecode(entry.key);
    _q5.add({'customer_id': _k8['id'], 'customer_first_name': _k8['first'], 'customer_last_name': _k8['last'], 'customer_login': _k8['login'], 'dyear': _k8['year'], 'year_total': _sum(g.map((x) => ((((((x['cs_ext_list_price'] as num) - (x['cs_ext_wholesale_cost'] as num) as num) - (x['cs_ext_discount_amt'] as num)) as num) + (x['cs_ext_sales_price'] as num)) as num) / 2)), 'sale_type': 'c'});
  }
  return _q5;
})()))))..addAll(((() {
  var _q10 = <dynamic>[];
  var _g11 = <String, List<dynamic>>{};
  for (var c in customer) {
    for (var ws in web_sales) {
      if (!(c['c_customer_sk'] == ws['ws_bill_customer_sk'])) continue;
      for (var d in date_dim) {
        if (!(ws['ws_sold_date_sk'] == d['d_date_sk'])) continue;
        var _k13 = {'id': c['c_customer_id'], 'first': c['c_first_name'], 'last': c['c_last_name'], 'login': c['c_login'], 'year': d['d_year']};
        var _k13_s = jsonEncode(_k13);
        _g11.putIfAbsent(_k13_s, () => <dynamic>[]).add({'c': c, 'ws': ws, 'd': d});
      }
    }
  }
  for (var entry in _g11.entries) {
    var g = entry.value;
    var _k13 = jsonDecode(entry.key);
    _q10.add({'customer_id': _k13['id'], 'customer_first_name': _k13['first'], 'customer_last_name': _k13['last'], 'customer_login': _k13['login'], 'dyear': _k13['year'], 'year_total': _sum(g.map((x) => ((((((x['ws_ext_list_price'] as num) - (x['ws_ext_wholesale_cost'] as num) as num) - (x['ws_ext_discount_amt'] as num)) as num) + (x['ws_ext_sales_price'] as num)) as num) / 2)), 'sale_type': 'w'});
  }
  return _q10;
})())));

var result = (() {
  var _q15 = <dynamic>[];
  for (var s1 in year_total) {
    for (var s2 in year_total) {
      if (!(s2['customer_id'] == s1['customer_id'])) continue;
      for (var c1 in year_total) {
        if (!(c1['customer_id'] == s1['customer_id'])) continue;
        for (var c2 in year_total) {
          if (!(c2['customer_id'] == s1['customer_id'])) continue;
          for (var w1 in year_total) {
            if (!(w1['customer_id'] == s1['customer_id'])) continue;
            for (var w2 in year_total) {
              if (!(w2['customer_id'] == s1['customer_id'])) continue;
              if (!(s1['sale_type'] == 's' && c1['sale_type'] == 'c' && w1['sale_type'] == 'w' && s2['sale_type'] == 's' && c2['sale_type'] == 'c' && w2['sale_type'] == 'w' && s1['dyear'] == 2001 && s2['dyear'] == 2002 && c1['dyear'] == 2001 && c2['dyear'] == 2002 && w1['dyear'] == 2001 && w2['dyear'] == 2002 && s1['year_total'].toString().compareTo(0.toString()) > 0 && c1['year_total'].toString().compareTo(0.toString()) > 0 && w1['year_total'].toString().compareTo(0.toString()) > 0 && ((c1['year_total'].toString().compareTo(0.toString()) > 0 ? (c2['year_total'] as num) / (c1['year_total'] as num) : null)).toString().compareTo(((s1['year_total'].toString().compareTo(0.toString()) > 0 ? (s2['year_total'] as num) / (s1['year_total'] as num) : null)).toString()) > 0 && ((c1['year_total'].toString().compareTo(0.toString()) > 0 ? (c2['year_total'] as num) / (c1['year_total'] as num) : null)).toString().compareTo(((w1['year_total'].toString().compareTo(0.toString()) > 0 ? (w2['year_total'] as num) / (w1['year_total'] as num) : null)).toString()) > 0)) continue;
              _q15.add([[s2['customer_id'], s2['customer_first_name'], s2['customer_last_name'], s2['customer_login']], {'customer_id': s2['customer_id'], 'customer_first_name': s2['customer_first_name'], 'customer_last_name': s2['customer_last_name'], 'customer_login': s2['customer_login']}]);
            }
          }
        }
      }
    }
  }
  _q15.sort((a,b) => (jsonEncode(a[0]) as Comparable).compareTo(jsonEncode(b[0])));
  _q15 = [for (var x in _q15) x[1]];
  return _q15;
})();

void main() {
  print(jsonEncode(result));
}

bool _equal(dynamic a, dynamic b) {
    if (a is List && b is List) {
        if (a.length != b.length) return false;
        for (var i = 0; i < a.length; i++) { if (!_equal(a[i], b[i])) return false; }
        return true;
    }
    if (a is Map && b is Map) {
        if (a.length != b.length) return false;
        for (var k in a.keys) { if (!b.containsKey(k) || !_equal(a[k], b[k])) return false; }
        return true;
    }
    return a == b;
}

String _formatDuration(Duration d) {
    if (d.inMicroseconds < 1000) return '${d.inMicroseconds}Âµs';
    if (d.inMilliseconds < 1000) return '${d.inMilliseconds}ms';
    return '${(d.inMilliseconds/1000).toStringAsFixed(2)}s';
}

void _json(dynamic v) {
    print(jsonEncode(v));
}


dynamic _min(dynamic v) {
    List<dynamic>? list;
    if (v is List) list = v;
    else if (v is Map && v['items'] is List) list = (v['items'] as List);
    else if (v is Map && v['Items'] is List) list = (v['Items'] as List);
    else { try { var it = (v as dynamic).items; if (it is List) list = it; } catch (_) {} }
    if (list == null || list.isEmpty) return 0;
    var m = list[0];
    for (var n in list) { if ((n as Comparable).compareTo(m) < 0) m = n; }
    return m;
}

num _sum(dynamic v) {
    Iterable<dynamic>? list;
    if (v is Iterable) list = v;
    else if (v is Map && v['items'] is Iterable) list = (v['items'] as Iterable);
    else if (v is Map && v['Items'] is Iterable) list = (v['Items'] as Iterable);
    else { try { var it = (v as dynamic).items; if (it is Iterable) list = it; } catch (_) {} }
    if (list == null) return 0;
    num s = 0;
    for (var n in list) s += (n as num);
    return s;
}

bool _runTest(String name, void Function() f) {
    stdout.write('   test $name ...');
    var start = DateTime.now();
    try {
        f();
        var d = DateTime.now().difference(start);
        stdout.writeln(' ok (${_formatDuration(d)})');
        return true;
    } catch (e) {
        var d = DateTime.now().difference(start);
        stdout.writeln(' fail $e (${_formatDuration(d)})');
        return false;
    }
}
