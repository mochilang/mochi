// Generated by Mochi compiler v0.10.25 on 2025-07-15T04:58:06Z
import 'dart:io';
import 'dart:convert';

var customer_address = [{'ca_address_sk': 1, 'ca_state': 'CA', 'ca_zip': '12345'}];

var customer = [{'c_customer_sk': 1, 'c_current_addr_sk': 1}];

var store_sales = [{'ss_customer_sk': 1, 'ss_sold_date_sk': 1, 'ss_item_sk': 1}, {'ss_customer_sk': 1, 'ss_sold_date_sk': 1, 'ss_item_sk': 1}, {'ss_customer_sk': 1, 'ss_sold_date_sk': 1, 'ss_item_sk': 1}, {'ss_customer_sk': 1, 'ss_sold_date_sk': 1, 'ss_item_sk': 1}, {'ss_customer_sk': 1, 'ss_sold_date_sk': 1, 'ss_item_sk': 1}, {'ss_customer_sk': 1, 'ss_sold_date_sk': 1, 'ss_item_sk': 1}, {'ss_customer_sk': 1, 'ss_sold_date_sk': 1, 'ss_item_sk': 1}, {'ss_customer_sk': 1, 'ss_sold_date_sk': 1, 'ss_item_sk': 1}, {'ss_customer_sk': 1, 'ss_sold_date_sk': 1, 'ss_item_sk': 1}, {'ss_customer_sk': 1, 'ss_sold_date_sk': 1, 'ss_item_sk': 1}];

var date_dim = [{'d_date_sk': 1, 'd_year': 1999, 'd_moy': 5, 'd_month_seq': 120}];

var item = [{'i_item_sk': 1, 'i_category': 'A', 'i_current_price': 100}, {'i_item_sk': 2, 'i_category': 'A', 'i_current_price': 50}];

var target_month_seq = (() { var _t1 = (() {
  var _q0 = <dynamic>[];
  for (var d in date_dim) {
    if (!(d['d_year'] == 1999 && d['d_moy'] == 5)) continue;
    _q0.add(d['d_month_seq']);
  }
  return _q0;
})(); return _t1.reduce((a, b) => a > b ? a : b); })();

var result = (() {
  var _q2 = <dynamic>[];
  var _g3 = <String, List<dynamic>>{};
  for (var a in customer_address) {
    for (var c in customer) {
      if (!(a['ca_address_sk'] == c['c_current_addr_sk'])) continue;
      for (var s in store_sales) {
        if (!(c['c_customer_sk'] == s['ss_customer_sk'])) continue;
        for (var d in date_dim) {
          if (!(s['ss_sold_date_sk'] == d['d_date_sk'])) continue;
          for (var i in item) {
            if (!(s['ss_item_sk'] == i['i_item_sk'])) continue;
            if (!(d['d_month_seq'] == target_month_seq && i['i_current_price'].toString().compareTo(1.2 * (() { var _t5 = (() {
  var _q4 = <dynamic>[];
  for (var j in item) {
    if (!(j['i_category'] == i['i_category'])) continue;
    _q4.add(j['i_current_price']);
  }
  return _q4;
})(); return (_t5.isEmpty ? 0 : _t5.reduce((a, b) => a + b) / _t5.length); })().toString()) > 0)) continue;
            var _k6 = a['ca_state'];
            var _k6_s = jsonEncode(_k6);
            _g3.putIfAbsent(_k6_s, () => <dynamic>[]).add({'a': a, 'c': c, 's': s, 'd': d, 'i': i});
          }
        }
      }
    }
  }
  for (var entry in _g3.entries) {
    var g = entry.value;
    var _k6 = jsonDecode(entry.key);
    if (!(g.length >= 10)) continue;
    _q2.add([[g.length, _k6], {'state': _k6, 'cnt': g.length}]);
  }
  _q2.sort((a,b) => (jsonEncode(a[0]) as Comparable).compareTo(jsonEncode(b[0])));
  _q2 = [for (var x in _q2) x[1]];
  _q2 = _q2.sublist(0, 100);
  return _q2;
})();

void main() {
  print(jsonEncode(result));
}

bool _equal(dynamic a, dynamic b) {
    if (a is List && b is List) {
        if (a.length != b.length) return false;
        for (var i = 0; i < a.length; i++) { if (!_equal(a[i], b[i])) return false; }
        return true;
    }
    if (a is Map && b is Map) {
        if (a.length != b.length) return false;
        for (var k in a.keys) { if (!b.containsKey(k) || !_equal(a[k], b[k])) return false; }
        return true;
    }
    return a == b;
}

String _formatDuration(Duration d) {
    if (d.inMicroseconds < 1000) return '${d.inMicroseconds}Âµs';
    if (d.inMilliseconds < 1000) return '${d.inMilliseconds}ms';
    return '${(d.inMilliseconds/1000).toStringAsFixed(2)}s';
}

void _json(dynamic v) {
    print(jsonEncode(v));
}


dynamic _min(dynamic v) {
    List<dynamic>? list;
    if (v is List) list = v;
    else if (v is Map && v['items'] is List) list = (v['items'] as List);
    else if (v is Map && v['Items'] is List) list = (v['Items'] as List);
    else { try { var it = (v as dynamic).items; if (it is List) list = it; } catch (_) {} }
    if (list == null || list.isEmpty) return 0;
    var m = list[0];
    for (var n in list) { if ((n as Comparable).compareTo(m) < 0) m = n; }
    return m;
}

num _sum(dynamic v) {
    Iterable<dynamic>? list;
    if (v is Iterable) list = v;
    else if (v is Map && v['items'] is Iterable) list = (v['items'] as Iterable);
    else if (v is Map && v['Items'] is Iterable) list = (v['Items'] as Iterable);
    else { try { var it = (v as dynamic).items; if (it is Iterable) list = it; } catch (_) {} }
    if (list == null) return 0;
    num s = 0;
    for (var n in list) s += (n as num);
    return s;
}

bool _runTest(String name, void Function() f) {
    stdout.write('   test $name ...');
    var start = DateTime.now();
    try {
        f();
        var d = DateTime.now().difference(start);
        stdout.writeln(' ok (${_formatDuration(d)})');
        return true;
    } catch (e) {
        var d = DateTime.now().difference(start);
        stdout.writeln(' fail $e (${_formatDuration(d)})');
        return false;
    }
}
