// Generated by Mochi compiler v0.10.25 on 2025-07-15T04:58:06Z
import 'dart:io';
import 'dart:convert';

var catalog_sales = [{'cs_item_sk': 1, 'cs_sold_date_sk': 1, 'cs_ext_discount_amt': 5}, {'cs_item_sk': 1, 'cs_sold_date_sk': 2, 'cs_ext_discount_amt': 10}, {'cs_item_sk': 1, 'cs_sold_date_sk': 3, 'cs_ext_discount_amt': 20}];

var item = [{'i_item_sk': 1, 'i_manufact_id': 1}];

var date_dim = [{'d_date_sk': 1, 'd_year': 2000}, {'d_date_sk': 2, 'd_year': 2000}, {'d_date_sk': 3, 'd_year': 2000}];

var filtered = (() {
  var _q0 = <dynamic>[];
  for (var cs in catalog_sales) {
    for (var i in item) {
      if (!(cs['cs_item_sk'] == i['i_item_sk'])) continue;
      for (var d in date_dim) {
        if (!(cs['cs_sold_date_sk'] == d['d_date_sk'])) continue;
        if (!(i['i_manufact_id'] == 1 && d['d_year'] == 2000)) continue;
        _q0.add(cs['cs_ext_discount_amt']);
      }
    }
  }
  return _q0;
})();

var avg_discount = (filtered.isEmpty ? 0 : filtered.reduce((a, b) => a + b) / filtered.length);

var result = (() { var _t2 = (() {
  var _q1 = <dynamic>[];
  for (var x in filtered) {
    if (!(x.toString().compareTo(avg_discount * 1.3.toString()) > 0)) continue;
    _q1.add(x);
  }
  return _q1;
})(); return _sum(_t2); })();

void main() {
  print(jsonEncode(result));
}

bool _equal(dynamic a, dynamic b) {
    if (a is List && b is List) {
        if (a.length != b.length) return false;
        for (var i = 0; i < a.length; i++) { if (!_equal(a[i], b[i])) return false; }
        return true;
    }
    if (a is Map && b is Map) {
        if (a.length != b.length) return false;
        for (var k in a.keys) { if (!b.containsKey(k) || !_equal(a[k], b[k])) return false; }
        return true;
    }
    return a == b;
}

String _formatDuration(Duration d) {
    if (d.inMicroseconds < 1000) return '${d.inMicroseconds}Âµs';
    if (d.inMilliseconds < 1000) return '${d.inMilliseconds}ms';
    return '${(d.inMilliseconds/1000).toStringAsFixed(2)}s';
}

void _json(dynamic v) {
    print(jsonEncode(v));
}


dynamic _min(dynamic v) {
    List<dynamic>? list;
    if (v is List) list = v;
    else if (v is Map && v['items'] is List) list = (v['items'] as List);
    else if (v is Map && v['Items'] is List) list = (v['Items'] as List);
    else { try { var it = (v as dynamic).items; if (it is List) list = it; } catch (_) {} }
    if (list == null || list.isEmpty) return 0;
    var m = list[0];
    for (var n in list) { if ((n as Comparable).compareTo(m) < 0) m = n; }
    return m;
}

num _sum(dynamic v) {
    Iterable<dynamic>? list;
    if (v is Iterable) list = v;
    else if (v is Map && v['items'] is Iterable) list = (v['items'] as Iterable);
    else if (v is Map && v['Items'] is Iterable) list = (v['Items'] as Iterable);
    else { try { var it = (v as dynamic).items; if (it is Iterable) list = it; } catch (_) {} }
    if (list == null) return 0;
    num s = 0;
    for (var n in list) s += (n as num);
    return s;
}

bool _runTest(String name, void Function() f) {
    stdout.write('   test $name ...');
    var start = DateTime.now();
    try {
        f();
        var d = DateTime.now().difference(start);
        stdout.writeln(' ok (${_formatDuration(d)})');
        return true;
    } catch (e) {
        var d = DateTime.now().difference(start);
        stdout.writeln(' fail $e (${_formatDuration(d)})');
        return false;
    }
}
