// Generated by Mochi compiler v0.10.25 on 2025-07-15T04:58:07Z
import 'dart:io';
import 'dart:convert';

var catalog_sales = [{'cs_item_sk': 1, 'cs_order_number': 1, 'cs_quantity': 1, 'cs_sold_date_sk': 1, 'cs_ship_date_sk': 3, 'cs_bill_cdemo_sk': 1, 'cs_bill_hdemo_sk': 1, 'cs_promo_sk': null}];

var inventory = [{'inv_item_sk': 1, 'inv_warehouse_sk': 1, 'inv_date_sk': 2, 'inv_quantity_on_hand': 0}];

var warehouse = [{'w_warehouse_sk': 1, 'w_warehouse_name': 'Main'}];

var item = [{'i_item_sk': 1, 'i_item_desc': 'ItemA'}];

var customer_demographics = [{'cd_demo_sk': 1, 'cd_marital_status': 'M'}];

var household_demographics = [{'hd_demo_sk': 1, 'hd_buy_potential': '5001-10000'}];

var date_dim = [{'d_date_sk': 1, 'd_week_seq': 10, 'd_date': 1, 'd_year': 2000}, {'d_date_sk': 2, 'd_week_seq': 10, 'd_date': 1, 'd_year': 2000}, {'d_date_sk': 3, 'd_week_seq': 10, 'd_date': 7, 'd_year': 2000}];

var result = (() {
  var _q0 = <dynamic>[];
  var _g1 = <String, List<dynamic>>{};
  for (var cs in catalog_sales) {
    for (var inv in inventory) {
      if (!(inv['inv_item_sk'] == cs['cs_item_sk'])) continue;
      for (var w in warehouse) {
        if (!(w['w_warehouse_sk'] == inv['inv_warehouse_sk'])) continue;
        for (var i in item) {
          if (!(i['i_item_sk'] == cs['cs_item_sk'])) continue;
          for (var cd in customer_demographics) {
            if (!(cd['cd_demo_sk'] == cs['cs_bill_cdemo_sk'])) continue;
            for (var hd in household_demographics) {
              if (!(hd['hd_demo_sk'] == cs['cs_bill_hdemo_sk'])) continue;
              for (var d1 in date_dim) {
                if (!(d1['d_date_sk'] == cs['cs_sold_date_sk'])) continue;
                for (var d2 in date_dim) {
                  if (!(d2['d_date_sk'] == inv['inv_date_sk'])) continue;
                  for (var d3 in date_dim) {
                    if (!(d3['d_date_sk'] == cs['cs_ship_date_sk'])) continue;
                    if (!(d1['d_week_seq'] == d2['d_week_seq'] && inv['inv_quantity_on_hand'] < cs['cs_quantity'] && d3['d_date'] > d1['d_date'] + 5 && hd['hd_buy_potential'] == '5001-10000' && d1['d_year'] == 2000 && cd['cd_marital_status'] == 'M')) continue;
                    var _k4 = {'item_desc': i['i_item_desc'], 'warehouse': w['w_warehouse_name'], 'week_seq': d1['d_week_seq']};
                    var _k4_s = jsonEncode(_k4);
                    _g1.putIfAbsent(_k4_s, () => <dynamic>[]).add({'cs': cs, 'inv': inv, 'w': w, 'i': i, 'cd': cd, 'hd': hd, 'd1': d1, 'd2': d2, 'd3': d3});
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  for (var entry in _g1.entries) {
    var g = entry.value;
    var _k4 = jsonDecode(entry.key);
    _q0.add({'i_item_desc': _k4['item_desc'], 'w_warehouse_name': _k4['warehouse'], 'd_week_seq': _k4['week_seq'], 'no_promo': (() {
  var _q5 = <dynamic>[];
  for (var x in g) {
    if (!(x['cs_promo_sk'] == null)) continue;
    _q5.add(x);
  }
  return _q5;
})().length, 'promo': (() {
  var _q6 = <dynamic>[];
  for (var x in g) {
    if (!(x['cs_promo_sk'] != null)) continue;
    _q6.add(x);
  }
  return _q6;
})().length, 'total_cnt': g.length});
  }
  return _q0;
})();

void main() {
  print(jsonEncode(result));
}

bool _equal(dynamic a, dynamic b) {
    if (a is List && b is List) {
        if (a.length != b.length) return false;
        for (var i = 0; i < a.length; i++) { if (!_equal(a[i], b[i])) return false; }
        return true;
    }
    if (a is Map && b is Map) {
        if (a.length != b.length) return false;
        for (var k in a.keys) { if (!b.containsKey(k) || !_equal(a[k], b[k])) return false; }
        return true;
    }
    return a == b;
}

String _formatDuration(Duration d) {
    if (d.inMicroseconds < 1000) return '${d.inMicroseconds}Âµs';
    if (d.inMilliseconds < 1000) return '${d.inMilliseconds}ms';
    return '${(d.inMilliseconds/1000).toStringAsFixed(2)}s';
}

void _json(dynamic v) {
    print(jsonEncode(v));
}


dynamic _min(dynamic v) {
    List<dynamic>? list;
    if (v is List) list = v;
    else if (v is Map && v['items'] is List) list = (v['items'] as List);
    else if (v is Map && v['Items'] is List) list = (v['Items'] as List);
    else { try { var it = (v as dynamic).items; if (it is List) list = it; } catch (_) {} }
    if (list == null || list.isEmpty) return 0;
    var m = list[0];
    for (var n in list) { if ((n as Comparable).compareTo(m) < 0) m = n; }
    return m;
}

num _sum(dynamic v) {
    Iterable<dynamic>? list;
    if (v is Iterable) list = v;
    else if (v is Map && v['items'] is Iterable) list = (v['items'] as Iterable);
    else if (v is Map && v['Items'] is Iterable) list = (v['Items'] as Iterable);
    else { try { var it = (v as dynamic).items; if (it is Iterable) list = it; } catch (_) {} }
    if (list == null) return 0;
    num s = 0;
    for (var n in list) s += (n as num);
    return s;
}

bool _runTest(String name, void Function() f) {
    stdout.write('   test $name ...');
    var start = DateTime.now();
    try {
        f();
        var d = DateTime.now().difference(start);
        stdout.writeln(' ok (${_formatDuration(d)})');
        return true;
    } catch (e) {
        var d = DateTime.now().difference(start);
        stdout.writeln(' fail $e (${_formatDuration(d)})');
        return false;
    }
}
