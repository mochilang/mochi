// Generated by Mochi compiler v0.10.25 on 2025-07-15T04:58:07Z
import 'dart:io';
import 'dart:convert';

var ss = [{'ss_sold_year': 1998, 'ss_item_sk': 1, 'ss_customer_sk': 1, 'ss_qty': 10, 'ss_wc': 50, 'ss_sp': 100}];

var ws = [{'ws_sold_year': 1998, 'ws_item_sk': 1, 'ws_customer_sk': 1, 'ws_qty': 5, 'ws_wc': 25, 'ws_sp': 50}];

var cs = [{'cs_sold_year': 1998, 'cs_item_sk': 1, 'cs_customer_sk': 1, 'cs_qty': 3, 'cs_wc': 15, 'cs_sp': 30}];

var result = (() {
  var _q0 = <dynamic>[];
  for (var s in ss) {
    var _jt1 = <dynamic>[];
    for (var w in ws) {
      if (!(w['ws_sold_year'] == s['ss_sold_year'] && w['ws_item_sk'] == s['ss_item_sk'] && w['ws_customer_sk'] == s['ss_customer_sk'])) continue;
      _jt1.add(w);
    }
    if (_jt1.isEmpty) _jt1.add(null);
    for (var w in _jt1) {
      var _jt2 = <dynamic>[];
      for (var c in cs) {
        if (!(c['cs_sold_year'] == s['ss_sold_year'] && c['cs_item_sk'] == s['ss_item_sk'] && c['cs_customer_sk'] == s['ss_customer_sk'])) continue;
        _jt2.add(c);
      }
      if (_jt2.isEmpty) _jt2.add(null);
      for (var c in _jt2) {
        if (!((((w == null ? 0 : w['ws_qty'])).toString().compareTo(0.toString()) > 0 || ((c == null ? 0 : c['cs_qty'])).toString().compareTo(0.toString()) > 0) && s['ss_sold_year'] == 1998)) continue;
        _q0.add({'ss_sold_year': s['ss_sold_year'], 'ss_item_sk': s['ss_item_sk'], 'ss_customer_sk': s['ss_customer_sk'], 'ratio': (s['ss_qty'] as num) / (((((w == null ? 0 : w['ws_qty'])) as num) + (((c == null ? 0 : c['cs_qty'])) as num)) as num), 'store_qty': s['ss_qty'], 'store_wholesale_cost': s['ss_wc'], 'store_sales_price': s['ss_sp'], 'other_chan_qty': (((w == null ? 0 : w['ws_qty'])) as num) + (((c == null ? 0 : c['cs_qty'])) as num), 'other_chan_wholesale_cost': (((w == null ? 0 : w['ws_wc'])) as num) + (((c == null ? 0 : c['cs_wc'])) as num), 'other_chan_sales_price': (((w == null ? 0 : w['ws_sp'])) as num) + (((c == null ? 0 : c['cs_sp'])) as num)});
      }
    }
  }
  return _q0;
})();

void main() {
  print(jsonEncode(result));
}

bool _equal(dynamic a, dynamic b) {
    if (a is List && b is List) {
        if (a.length != b.length) return false;
        for (var i = 0; i < a.length; i++) { if (!_equal(a[i], b[i])) return false; }
        return true;
    }
    if (a is Map && b is Map) {
        if (a.length != b.length) return false;
        for (var k in a.keys) { if (!b.containsKey(k) || !_equal(a[k], b[k])) return false; }
        return true;
    }
    return a == b;
}

String _formatDuration(Duration d) {
    if (d.inMicroseconds < 1000) return '${d.inMicroseconds}Âµs';
    if (d.inMilliseconds < 1000) return '${d.inMilliseconds}ms';
    return '${(d.inMilliseconds/1000).toStringAsFixed(2)}s';
}

void _json(dynamic v) {
    print(jsonEncode(v));
}


dynamic _min(dynamic v) {
    List<dynamic>? list;
    if (v is List) list = v;
    else if (v is Map && v['items'] is List) list = (v['items'] as List);
    else if (v is Map && v['Items'] is List) list = (v['Items'] as List);
    else { try { var it = (v as dynamic).items; if (it is List) list = it; } catch (_) {} }
    if (list == null || list.isEmpty) return 0;
    var m = list[0];
    for (var n in list) { if ((n as Comparable).compareTo(m) < 0) m = n; }
    return m;
}

num _sum(dynamic v) {
    Iterable<dynamic>? list;
    if (v is Iterable) list = v;
    else if (v is Map && v['items'] is Iterable) list = (v['items'] as Iterable);
    else if (v is Map && v['Items'] is Iterable) list = (v['Items'] as Iterable);
    else { try { var it = (v as dynamic).items; if (it is Iterable) list = it; } catch (_) {} }
    if (list == null) return 0;
    num s = 0;
    for (var n in list) s += (n as num);
    return s;
}

bool _runTest(String name, void Function() f) {
    stdout.write('   test $name ...');
    var start = DateTime.now();
    try {
        f();
        var d = DateTime.now().difference(start);
        stdout.writeln(' ok (${_formatDuration(d)})');
        return true;
    } catch (e) {
        var d = DateTime.now().difference(start);
        stdout.writeln(' fail $e (${_formatDuration(d)})');
        return false;
    }
}
