// Generated by Mochi compiler v0.10.25 on 2025-07-15T04:58:07Z
import 'dart:io';
import 'dart:convert';

var catalog_returns = [{'cust': 1, 'state': 'CA', 'amt': 40}, {'cust': 2, 'state': 'CA', 'amt': 50}, {'cust': 3, 'state': 'CA', 'amt': 81}, {'cust': 4, 'state': 'TX', 'amt': 30}, {'cust': 5, 'state': 'TX', 'amt': 20}];

var avg_list = (() {
  var _q0 = <dynamic>[];
  var _g1 = <String, List<dynamic>>{};
  for (var r in catalog_returns) {
    var _k4 = r['state'];
    var _k4_s = jsonEncode(_k4);
    _g1.putIfAbsent(_k4_s, () => <dynamic>[]).add(r);
  }
  for (var entry in _g1.entries) {
    var g = entry.value;
    var _k4 = jsonDecode(entry.key);
    _q0.add({'state': _k4, 'avg_amt': (() { var _t6 = (() {
  var _q5 = <dynamic>[];
  for (var x in g) {
    _q5.add(x['amt']);
  }
  return _q5;
})(); return (_t6.isEmpty ? 0 : _t6.reduce((a, b) => a + b) / _t6.length); })()});
  }
  return _q0;
})();

var avg_state = first((() {
  var _q7 = <dynamic>[];
  for (var a in avg_list) {
    if (!(a['state'] == 'CA')) continue;
    _q7.add(a);
  }
  return _q7;
})());

var result_list = (() {
  var _q8 = <dynamic>[];
  for (var r in catalog_returns) {
    if (!(r['state'] == 'CA' && r['amt'].toString().compareTo((avg_state['avg_amt'] as num) * 1.2.toString()) > 0)) continue;
    _q8.add(r['amt']);
  }
  return _q8;
})();

var result = first(result_list);

void main() {
  print(jsonEncode(result));
}

bool _equal(dynamic a, dynamic b) {
    if (a is List && b is List) {
        if (a.length != b.length) return false;
        for (var i = 0; i < a.length; i++) { if (!_equal(a[i], b[i])) return false; }
        return true;
    }
    if (a is Map && b is Map) {
        if (a.length != b.length) return false;
        for (var k in a.keys) { if (!b.containsKey(k) || !_equal(a[k], b[k])) return false; }
        return true;
    }
    return a == b;
}

String _formatDuration(Duration d) {
    if (d.inMicroseconds < 1000) return '${d.inMicroseconds}Âµs';
    if (d.inMilliseconds < 1000) return '${d.inMilliseconds}ms';
    return '${(d.inMilliseconds/1000).toStringAsFixed(2)}s';
}

void _json(dynamic v) {
    print(jsonEncode(v));
}


dynamic _min(dynamic v) {
    List<dynamic>? list;
    if (v is List) list = v;
    else if (v is Map && v['items'] is List) list = (v['items'] as List);
    else if (v is Map && v['Items'] is List) list = (v['Items'] as List);
    else { try { var it = (v as dynamic).items; if (it is List) list = it; } catch (_) {} }
    if (list == null || list.isEmpty) return 0;
    var m = list[0];
    for (var n in list) { if ((n as Comparable).compareTo(m) < 0) m = n; }
    return m;
}

num _sum(dynamic v) {
    Iterable<dynamic>? list;
    if (v is Iterable) list = v;
    else if (v is Map && v['items'] is Iterable) list = (v['items'] as Iterable);
    else if (v is Map && v['Items'] is Iterable) list = (v['Items'] as Iterable);
    else { try { var it = (v as dynamic).items; if (it is Iterable) list = it; } catch (_) {} }
    if (list == null) return 0;
    num s = 0;
    for (var n in list) s += (n as num);
    return s;
}

bool _runTest(String name, void Function() f) {
    stdout.write('   test $name ...');
    var start = DateTime.now();
    try {
        f();
        var d = DateTime.now().difference(start);
        stdout.writeln(' ok (${_formatDuration(d)})');
        return true;
    } catch (e) {
        var d = DateTime.now().difference(start);
        stdout.writeln(' fail $e (${_formatDuration(d)})');
        return false;
    }
}
