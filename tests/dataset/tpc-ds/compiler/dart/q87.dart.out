// Generated by Mochi compiler v0.10.25 on 2025-07-15T04:58:07Z
import 'dart:io';
import 'dart:convert';

var store_sales = [{'cust': 'A', 'price': 5}, {'cust': 'B', 'price': 30}, {'cust': 'C', 'price': 57}];

var catalog_sales = [{'cust': 'A'}];

var web_sales = [];

var store_customers = (() {
  var _q0 = <dynamic>[];
  for (var s in store_sales) {
    _q0.add(s['cust']);
  }
  return _q0;
})();

var catalog_customers = (() {
  var _q1 = <dynamic>[];
  for (var s in catalog_sales) {
    _q1.add(s['cust']);
  }
  return _q1;
})();

var web_customers = (() {
  var _q2 = <dynamic>[];
  for (var s in web_sales) {
    _q2.add(s['cust']);
  }
  return _q2;
})();

var store_only = (() {
  var _q3 = <dynamic>[];
  for (var c in store_customers) {
    if (!((() {
  var _q4 = <dynamic>[];
  for (var x in catalog_customers) {
    if (!(x == c)) continue;
    _q4.add(x);
  }
  return _q4;
})().length == 0 && (() {
  var _q5 = <dynamic>[];
  for (var x in web_customers) {
    if (!(x == c)) continue;
    _q5.add(x);
  }
  return _q5;
})().length == 0)) continue;
    _q3.add(c);
  }
  return _q3;
})();

var result = (() { var _t8 = (() {
  var _q6 = <dynamic>[];
  for (var s in store_sales) {
    if (!((() {
  var _q7 = <dynamic>[];
  for (var x in store_only) {
    if (!(x == s['cust'])) continue;
    _q7.add(x);
  }
  return _q7;
})().length > 0)) continue;
    _q6.add(s['price']);
  }
  return _q6;
})(); return _sum(_t8); })();

void main() {
  print(jsonEncode(result));
}

bool _equal(dynamic a, dynamic b) {
    if (a is List && b is List) {
        if (a.length != b.length) return false;
        for (var i = 0; i < a.length; i++) { if (!_equal(a[i], b[i])) return false; }
        return true;
    }
    if (a is Map && b is Map) {
        if (a.length != b.length) return false;
        for (var k in a.keys) { if (!b.containsKey(k) || !_equal(a[k], b[k])) return false; }
        return true;
    }
    return a == b;
}

String _formatDuration(Duration d) {
    if (d.inMicroseconds < 1000) return '${d.inMicroseconds}Âµs';
    if (d.inMilliseconds < 1000) return '${d.inMilliseconds}ms';
    return '${(d.inMilliseconds/1000).toStringAsFixed(2)}s';
}

void _json(dynamic v) {
    print(jsonEncode(v));
}


dynamic _min(dynamic v) {
    List<dynamic>? list;
    if (v is List) list = v;
    else if (v is Map && v['items'] is List) list = (v['items'] as List);
    else if (v is Map && v['Items'] is List) list = (v['Items'] as List);
    else { try { var it = (v as dynamic).items; if (it is List) list = it; } catch (_) {} }
    if (list == null || list.isEmpty) return 0;
    var m = list[0];
    for (var n in list) { if ((n as Comparable).compareTo(m) < 0) m = n; }
    return m;
}

num _sum(dynamic v) {
    Iterable<dynamic>? list;
    if (v is Iterable) list = v;
    else if (v is Map && v['items'] is Iterable) list = (v['items'] as Iterable);
    else if (v is Map && v['Items'] is Iterable) list = (v['Items'] as Iterable);
    else { try { var it = (v as dynamic).items; if (it is Iterable) list = it; } catch (_) {} }
    if (list == null) return 0;
    num s = 0;
    for (var n in list) s += (n as num);
    return s;
}

bool _runTest(String name, void Function() f) {
    stdout.write('   test $name ...');
    var start = DateTime.now();
    try {
        f();
        var d = DateTime.now().difference(start);
        stdout.writeln(' ok (${_formatDuration(d)})');
        return true;
    } catch (e) {
        var d = DateTime.now().difference(start);
        stdout.writeln(' fail $e (${_formatDuration(d)})');
        return false;
    }
}
