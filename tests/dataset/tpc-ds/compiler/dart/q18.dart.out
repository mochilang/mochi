// Generated by Mochi compiler v0.10.25 on 2025-07-15T04:58:06Z
import 'dart:io';
import 'dart:convert';

class CatalogSale {
  int cs_quantity;
  double cs_list_price;
  double cs_coupon_amt;
  double cs_sales_price;
  double cs_net_profit;
  int cs_bill_cdemo_sk;
  int cs_bill_customer_sk;
  int cs_sold_date_sk;
  int cs_item_sk;
  CatalogSale(this.cs_quantity, this.cs_list_price, this.cs_coupon_amt, this.cs_sales_price, this.cs_net_profit, this.cs_bill_cdemo_sk, this.cs_bill_customer_sk, this.cs_sold_date_sk, this.cs_item_sk);
}

class CustomerDemographics {
  int cd_demo_sk;
  String cd_gender;
  String cd_education_status;
  int cd_dep_count;
  CustomerDemographics(this.cd_demo_sk, this.cd_gender, this.cd_education_status, this.cd_dep_count);
}

class Customer {
  int c_customer_sk;
  int c_current_cdemo_sk;
  int c_current_addr_sk;
  int c_birth_year;
  int c_birth_month;
  Customer(this.c_customer_sk, this.c_current_cdemo_sk, this.c_current_addr_sk, this.c_birth_year, this.c_birth_month);
}

class CustomerAddress {
  int ca_address_sk;
  String ca_country;
  String ca_state;
  String ca_county;
  CustomerAddress(this.ca_address_sk, this.ca_country, this.ca_state, this.ca_county);
}

class DateDim {
  int d_date_sk;
  int d_year;
  DateDim(this.d_date_sk, this.d_year);
}

class Item {
  int i_item_sk;
  String i_item_id;
  Item(this.i_item_sk, this.i_item_id);
}

var catalog_sales = [{'cs_quantity': 1, 'cs_list_price': 10, 'cs_coupon_amt': 1, 'cs_sales_price': 9, 'cs_net_profit': 2, 'cs_bill_cdemo_sk': 1, 'cs_bill_customer_sk': 1, 'cs_sold_date_sk': 1, 'cs_item_sk': 1}];

var customer_demographics = [{'cd_demo_sk': 1, 'cd_gender': 'M', 'cd_education_status': 'College', 'cd_dep_count': 2}, {'cd_demo_sk': 2, 'cd_gender': 'F', 'cd_education_status': 'College', 'cd_dep_count': 2}];

var customer = [{'c_customer_sk': 1, 'c_current_cdemo_sk': 2, 'c_current_addr_sk': 1, 'c_birth_year': 1980, 'c_birth_month': 1}];

var customer_address = [{'ca_address_sk': 1, 'ca_country': 'US', 'ca_state': 'CA', 'ca_county': 'County1'}];

var date_dim = [{'d_date_sk': 1, 'd_year': 1999}];

var item = [{'i_item_sk': 1, 'i_item_id': 'I1'}];

var joined = (() {
  var _q0 = <dynamic>[];
  for (var cs in catalog_sales) {
    for (var cd1 in customer_demographics) {
      if (!(cs['cs_bill_cdemo_sk'] == cd1['cd_demo_sk'] && cd1['cd_gender'] == 'M' && cd1['cd_education_status'] == 'College')) continue;
      for (var c in customer) {
        if (!(cs['cs_bill_customer_sk'] == c['c_customer_sk'])) continue;
        for (var cd2 in customer_demographics) {
          if (!(c['c_current_cdemo_sk'] == cd2['cd_demo_sk'])) continue;
          for (var ca in customer_address) {
            if (!(c['c_current_addr_sk'] == ca['ca_address_sk'])) continue;
            for (var d in date_dim) {
              if (!(cs['cs_sold_date_sk'] == d['d_date_sk'] && d['d_year'] == 1999)) continue;
              for (var i in item) {
                if (!(cs['cs_item_sk'] == i['i_item_sk'])) continue;
                _q0.add({'i_item_id': i['i_item_id'], 'ca_country': ca['ca_country'], 'ca_state': ca['ca_state'], 'ca_county': ca['ca_county'], 'q': cs['cs_quantity'], 'lp': cs['cs_list_price'], 'cp': cs['cs_coupon_amt'], 'sp': cs['cs_sales_price'], 'np': cs['cs_net_profit'], 'by': c['c_birth_year'], 'dep': cd1['cd_dep_count']});
              }
            }
          }
        }
      }
    }
  }
  return _q0;
})();

var result = (() {
  var _q1 = <dynamic>[];
  var _g2 = <String, List<dynamic>>{};
  for (var j in joined) {
    var _k17 = {'i_item_id': j['i_item_id'], 'ca_country': j['ca_country'], 'ca_state': j['ca_state'], 'ca_county': j['ca_county']};
    var _k17_s = jsonEncode(_k17);
    _g2.putIfAbsent(_k17_s, () => <dynamic>[]).add(j);
  }
  for (var entry in _g2.entries) {
    var g = entry.value;
    var _k17 = jsonDecode(entry.key);
    _q1.add({'i_item_id': _k17['i_item_id'], 'ca_country': _k17['ca_country'], 'ca_state': _k17['ca_state'], 'ca_county': _k17['ca_county'], 'agg1': (() { var _t19 = (() {
  var _q18 = <dynamic>[];
  for (var x in g) {
    _q18.add(x['q']);
  }
  return _q18;
})(); return (_t19.isEmpty ? 0 : _t19.reduce((a, b) => a + b) / _t19.length); })(), 'agg2': (() { var _t21 = (() {
  var _q20 = <dynamic>[];
  for (var x in g) {
    _q20.add(x['lp']);
  }
  return _q20;
})(); return (_t21.isEmpty ? 0 : _t21.reduce((a, b) => a + b) / _t21.length); })(), 'agg3': (() { var _t23 = (() {
  var _q22 = <dynamic>[];
  for (var x in g) {
    _q22.add(x['cp']);
  }
  return _q22;
})(); return (_t23.isEmpty ? 0 : _t23.reduce((a, b) => a + b) / _t23.length); })(), 'agg4': (() { var _t25 = (() {
  var _q24 = <dynamic>[];
  for (var x in g) {
    _q24.add(x['sp']);
  }
  return _q24;
})(); return (_t25.isEmpty ? 0 : _t25.reduce((a, b) => a + b) / _t25.length); })(), 'agg5': (() { var _t27 = (() {
  var _q26 = <dynamic>[];
  for (var x in g) {
    _q26.add(x['np']);
  }
  return _q26;
})(); return (_t27.isEmpty ? 0 : _t27.reduce((a, b) => a + b) / _t27.length); })(), 'agg6': (() { var _t29 = (() {
  var _q28 = <dynamic>[];
  for (var x in g) {
    _q28.add(x['by']);
  }
  return _q28;
})(); return (_t29.isEmpty ? 0 : _t29.reduce((a, b) => a + b) / _t29.length); })(), 'agg7': (() { var _t31 = (() {
  var _q30 = <dynamic>[];
  for (var x in g) {
    _q30.add(x['dep']);
  }
  return _q30;
})(); return (_t31.isEmpty ? 0 : _t31.reduce((a, b) => a + b) / _t31.length); })()});
  }
  return _q1;
})();

void main() {
  print(jsonEncode(result));
}

bool _equal(dynamic a, dynamic b) {
    if (a is List && b is List) {
        if (a.length != b.length) return false;
        for (var i = 0; i < a.length; i++) { if (!_equal(a[i], b[i])) return false; }
        return true;
    }
    if (a is Map && b is Map) {
        if (a.length != b.length) return false;
        for (var k in a.keys) { if (!b.containsKey(k) || !_equal(a[k], b[k])) return false; }
        return true;
    }
    return a == b;
}

String _formatDuration(Duration d) {
    if (d.inMicroseconds < 1000) return '${d.inMicroseconds}Âµs';
    if (d.inMilliseconds < 1000) return '${d.inMilliseconds}ms';
    return '${(d.inMilliseconds/1000).toStringAsFixed(2)}s';
}

void _json(dynamic v) {
    print(jsonEncode(v));
}


dynamic _min(dynamic v) {
    List<dynamic>? list;
    if (v is List) list = v;
    else if (v is Map && v['items'] is List) list = (v['items'] as List);
    else if (v is Map && v['Items'] is List) list = (v['Items'] as List);
    else { try { var it = (v as dynamic).items; if (it is List) list = it; } catch (_) {} }
    if (list == null || list.isEmpty) return 0;
    var m = list[0];
    for (var n in list) { if ((n as Comparable).compareTo(m) < 0) m = n; }
    return m;
}

num _sum(dynamic v) {
    Iterable<dynamic>? list;
    if (v is Iterable) list = v;
    else if (v is Map && v['items'] is Iterable) list = (v['items'] as Iterable);
    else if (v is Map && v['Items'] is Iterable) list = (v['Items'] as Iterable);
    else { try { var it = (v as dynamic).items; if (it is Iterable) list = it; } catch (_) {} }
    if (list == null) return 0;
    num s = 0;
    for (var n in list) s += (n as num);
    return s;
}

bool _runTest(String name, void Function() f) {
    stdout.write('   test $name ...');
    var start = DateTime.now();
    try {
        f();
        var d = DateTime.now().difference(start);
        stdout.writeln(' ok (${_formatDuration(d)})');
        return true;
    } catch (e) {
        var d = DateTime.now().difference(start);
        stdout.writeln(' fail $e (${_formatDuration(d)})');
        return false;
    }
}
