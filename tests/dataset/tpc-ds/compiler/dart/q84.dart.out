// Generated by Mochi compiler v0.10.25 on 2025-07-15T04:58:07Z
import 'dart:io';
import 'dart:convert';

var customer = [{'id': 1, 'current_addr': 1, 'cdemo': 1, 'hdemo': 1}, {'id': 2, 'current_addr': 1, 'cdemo': 2, 'hdemo': 2}, {'id': 3, 'current_addr': 1, 'cdemo': 3, 'hdemo': 1}, {'id': 4, 'current_addr': 1, 'cdemo': 4, 'hdemo': 2}];

var customer_address = [{'ca_address_sk': 1, 'ca_city': 'Springfield'}];

var customer_demographics = [{'cd_demo_sk': 1}, {'cd_demo_sk': 2}, {'cd_demo_sk': 3}, {'cd_demo_sk': 4}];

var household_demographics = [{'hd_demo_sk': 1, 'income_band_sk': 1}, {'hd_demo_sk': 2, 'income_band_sk': 1}];

var income_band = [{'ib_income_band_sk': 1, 'ib_lower_bound': 0, 'ib_upper_bound': 50000}];

var store_returns = [{'sr_cdemo_sk': 1, 'amt': 10}, {'sr_cdemo_sk': 2, 'amt': 20}, {'sr_cdemo_sk': 3, 'amt': 30}, {'sr_cdemo_sk': 4, 'amt': 24}];

var result = (() { var _t1 = (() {
  var _q0 = <dynamic>[];
  for (var c in customer) {
    for (var ca in customer_address) {
      if (!(c['current_addr'] == ca['ca_address_sk'] && ca['ca_city'] == 'Springfield')) continue;
      for (var cd in customer_demographics) {
        if (!(c['cdemo'] == cd['cd_demo_sk'])) continue;
        for (var sr in store_returns) {
          if (!(cd['cd_demo_sk'] == sr['sr_cdemo_sk'])) continue;
          for (var hd in household_demographics) {
            if (!(c['hdemo'] == hd['hd_demo_sk'])) continue;
            for (var ib in income_band) {
              if (!(hd['income_band_sk'] == ib['ib_income_band_sk'])) continue;
              _q0.add(sr['amt']);
            }
          }
        }
      }
    }
  }
  return _q0;
})(); return _sum(_t1); })();

void main() {
  print(jsonEncode(result));
}

bool _equal(dynamic a, dynamic b) {
    if (a is List && b is List) {
        if (a.length != b.length) return false;
        for (var i = 0; i < a.length; i++) { if (!_equal(a[i], b[i])) return false; }
        return true;
    }
    if (a is Map && b is Map) {
        if (a.length != b.length) return false;
        for (var k in a.keys) { if (!b.containsKey(k) || !_equal(a[k], b[k])) return false; }
        return true;
    }
    return a == b;
}

String _formatDuration(Duration d) {
    if (d.inMicroseconds < 1000) return '${d.inMicroseconds}Âµs';
    if (d.inMilliseconds < 1000) return '${d.inMilliseconds}ms';
    return '${(d.inMilliseconds/1000).toStringAsFixed(2)}s';
}

void _json(dynamic v) {
    print(jsonEncode(v));
}


dynamic _min(dynamic v) {
    List<dynamic>? list;
    if (v is List) list = v;
    else if (v is Map && v['items'] is List) list = (v['items'] as List);
    else if (v is Map && v['Items'] is List) list = (v['Items'] as List);
    else { try { var it = (v as dynamic).items; if (it is List) list = it; } catch (_) {} }
    if (list == null || list.isEmpty) return 0;
    var m = list[0];
    for (var n in list) { if ((n as Comparable).compareTo(m) < 0) m = n; }
    return m;
}

num _sum(dynamic v) {
    Iterable<dynamic>? list;
    if (v is Iterable) list = v;
    else if (v is Map && v['items'] is Iterable) list = (v['items'] as Iterable);
    else if (v is Map && v['Items'] is Iterable) list = (v['Items'] as Iterable);
    else { try { var it = (v as dynamic).items; if (it is Iterable) list = it; } catch (_) {} }
    if (list == null) return 0;
    num s = 0;
    for (var n in list) s += (n as num);
    return s;
}

bool _runTest(String name, void Function() f) {
    stdout.write('   test $name ...');
    var start = DateTime.now();
    try {
        f();
        var d = DateTime.now().difference(start);
        stdout.writeln(' ok (${_formatDuration(d)})');
        return true;
    } catch (e) {
        var d = DateTime.now().difference(start);
        stdout.writeln(' fail $e (${_formatDuration(d)})');
        return false;
    }
}
