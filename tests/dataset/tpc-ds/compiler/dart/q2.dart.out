// Generated by Mochi compiler v0.10.25 on 2025-07-15T04:58:06Z
import 'dart:io';
import 'dart:convert';

var web_sales = [{'ws_sold_date_sk': 1, 'ws_ext_sales_price': 5, 'ws_sold_date_name': 'Sunday'}, {'ws_sold_date_sk': 2, 'ws_ext_sales_price': 5, 'ws_sold_date_name': 'Monday'}, {'ws_sold_date_sk': 8, 'ws_ext_sales_price': 10, 'ws_sold_date_name': 'Sunday'}, {'ws_sold_date_sk': 9, 'ws_ext_sales_price': 10, 'ws_sold_date_name': 'Monday'}];

var catalog_sales = [{'cs_sold_date_sk': 1, 'cs_ext_sales_price': 5, 'cs_sold_date_name': 'Sunday'}, {'cs_sold_date_sk': 2, 'cs_ext_sales_price': 5, 'cs_sold_date_name': 'Monday'}, {'cs_sold_date_sk': 8, 'cs_ext_sales_price': 10, 'cs_sold_date_name': 'Sunday'}, {'cs_sold_date_sk': 9, 'cs_ext_sales_price': 10, 'cs_sold_date_name': 'Monday'}];

var date_dim = [{'d_date_sk': 1, 'd_week_seq': 1, 'd_day_name': 'Sunday', 'd_year': 1998}, {'d_date_sk': 2, 'd_week_seq': 1, 'd_day_name': 'Monday', 'd_year': 1998}, {'d_date_sk': 8, 'd_week_seq': 54, 'd_day_name': 'Sunday', 'd_year': 1999}, {'d_date_sk': 9, 'd_week_seq': 54, 'd_day_name': 'Monday', 'd_year': 1999}];

var wscs = (List.from(((() {
  var _q0 = <dynamic>[];
  for (var ws in web_sales) {
    _q0.add({'sold_date_sk': ws['ws_sold_date_sk'], 'sales_price': ws['ws_ext_sales_price'], 'day': ws['ws_sold_date_name']});
  }
  return _q0;
})()))..addAll(((() {
  var _q1 = <dynamic>[];
  for (var cs in catalog_sales) {
    _q1.add({'sold_date_sk': cs['cs_sold_date_sk'], 'sales_price': cs['cs_ext_sales_price'], 'day': cs['cs_sold_date_name']});
  }
  return _q1;
})())));

var wswscs = (() {
  var _q2 = <dynamic>[];
  var _g3 = <String, List<dynamic>>{};
  for (var w in wscs) {
    for (var d in date_dim) {
      if (!(w['sold_date_sk'] == d['d_date_sk'])) continue;
      var _k18 = {'week_seq': d['d_week_seq']};
      var _k18_s = jsonEncode(_k18);
      _g3.putIfAbsent(_k18_s, () => <dynamic>[]).add({'w': w, 'd': d});
    }
  }
  for (var entry in _g3.entries) {
    var g = entry.value;
    var _k18 = jsonDecode(entry.key);
    _q2.add({'d_week_seq': _k18['week_seq'], 'sun_sales': (() { var _t20 = (() {
  var _q19 = <dynamic>[];
  for (var x in g) {
    if (!(x['day'] == 'Sunday')) continue;
    _q19.add(x['sales_price']);
  }
  return _q19;
})(); return _sum(_t20); })(), 'mon_sales': (() { var _t22 = (() {
  var _q21 = <dynamic>[];
  for (var x in g) {
    if (!(x['day'] == 'Monday')) continue;
    _q21.add(x['sales_price']);
  }
  return _q21;
})(); return _sum(_t22); })(), 'tue_sales': (() { var _t24 = (() {
  var _q23 = <dynamic>[];
  for (var x in g) {
    if (!(x['day'] == 'Tuesday')) continue;
    _q23.add(x['sales_price']);
  }
  return _q23;
})(); return _sum(_t24); })(), 'wed_sales': (() { var _t26 = (() {
  var _q25 = <dynamic>[];
  for (var x in g) {
    if (!(x['day'] == 'Wednesday')) continue;
    _q25.add(x['sales_price']);
  }
  return _q25;
})(); return _sum(_t26); })(), 'thu_sales': (() { var _t28 = (() {
  var _q27 = <dynamic>[];
  for (var x in g) {
    if (!(x['day'] == 'Thursday')) continue;
    _q27.add(x['sales_price']);
  }
  return _q27;
})(); return _sum(_t28); })(), 'fri_sales': (() { var _t30 = (() {
  var _q29 = <dynamic>[];
  for (var x in g) {
    if (!(x['day'] == 'Friday')) continue;
    _q29.add(x['sales_price']);
  }
  return _q29;
})(); return _sum(_t30); })(), 'sat_sales': (() { var _t32 = (() {
  var _q31 = <dynamic>[];
  for (var x in g) {
    if (!(x['day'] == 'Saturday')) continue;
    _q31.add(x['sales_price']);
  }
  return _q31;
})(); return _sum(_t32); })()});
  }
  return _q2;
})();

var year1 = (() {
  var _q33 = <dynamic>[];
  for (var w in wswscs) {
    if (!(w['d_week_seq'] == 1)) continue;
    _q33.add(w);
  }
  return _q33;
})();

var year2 = (() {
  var _q34 = <dynamic>[];
  for (var w in wswscs) {
    if (!(w['d_week_seq'] == 54)) continue;
    _q34.add(w);
  }
  return _q34;
})();

var result = (() {
  var _q35 = <dynamic>[];
  for (var y in year1) {
    for (var z in year2) {
      if (!(y['d_week_seq'] == (z['d_week_seq'] as num) - 53)) continue;
      _q35.add({'d_week_seq1': y['d_week_seq'], 'sun_ratio': (y['sun_sales'] as num) / (z['sun_sales'] as num), 'mon_ratio': (y['mon_sales'] as num) / (z['mon_sales'] as num)});
    }
  }
  return _q35;
})();

void main() {
  print(jsonEncode(result));
}

bool _equal(dynamic a, dynamic b) {
    if (a is List && b is List) {
        if (a.length != b.length) return false;
        for (var i = 0; i < a.length; i++) { if (!_equal(a[i], b[i])) return false; }
        return true;
    }
    if (a is Map && b is Map) {
        if (a.length != b.length) return false;
        for (var k in a.keys) { if (!b.containsKey(k) || !_equal(a[k], b[k])) return false; }
        return true;
    }
    return a == b;
}

String _formatDuration(Duration d) {
    if (d.inMicroseconds < 1000) return '${d.inMicroseconds}Âµs';
    if (d.inMilliseconds < 1000) return '${d.inMilliseconds}ms';
    return '${(d.inMilliseconds/1000).toStringAsFixed(2)}s';
}

void _json(dynamic v) {
    print(jsonEncode(v));
}


dynamic _min(dynamic v) {
    List<dynamic>? list;
    if (v is List) list = v;
    else if (v is Map && v['items'] is List) list = (v['items'] as List);
    else if (v is Map && v['Items'] is List) list = (v['Items'] as List);
    else { try { var it = (v as dynamic).items; if (it is List) list = it; } catch (_) {} }
    if (list == null || list.isEmpty) return 0;
    var m = list[0];
    for (var n in list) { if ((n as Comparable).compareTo(m) < 0) m = n; }
    return m;
}

num _sum(dynamic v) {
    Iterable<dynamic>? list;
    if (v is Iterable) list = v;
    else if (v is Map && v['items'] is Iterable) list = (v['items'] as Iterable);
    else if (v is Map && v['Items'] is Iterable) list = (v['Items'] as Iterable);
    else { try { var it = (v as dynamic).items; if (it is Iterable) list = it; } catch (_) {} }
    if (list == null) return 0;
    num s = 0;
    for (var n in list) s += (n as num);
    return s;
}

bool _runTest(String name, void Function() f) {
    stdout.write('   test $name ...');
    var start = DateTime.now();
    try {
        f();
        var d = DateTime.now().difference(start);
        stdout.writeln(' ok (${_formatDuration(d)})');
        return true;
    } catch (e) {
        var d = DateTime.now().difference(start);
        stdout.writeln(' fail $e (${_formatDuration(d)})');
        return false;
    }
}
