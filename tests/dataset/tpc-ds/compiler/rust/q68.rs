// Generated by Mochi compiler v0.10.26 on 2025-07-15T07:09:31Z
#[derive(Default, Debug, Clone, PartialEq, Eq, Hash, PartialOrd, Ord)]
struct Catalog_sale {
    item: i32,
    profit: i32,
}

#[derive(Default, Debug, Clone, PartialEq, Eq, Hash, PartialOrd, Ord)]
struct Store_sale {
    item: i32,
    profit: i32,
}

fn sum<T>(v: &[T]) -> T where T: std::iter::Sum<T> + Copy {
    v.iter().copied().sum()
}

fn _json<T: std::fmt::Debug>(value: &T) {
    println!("{:?}", value);
}

fn main() {
    let catalog_sales = vec![Catalog_sale { item: 1, profit: 30 }, Catalog_sale { item: 2, profit: 38 }];
    let store_sales = vec![Store_sale { item: 1, profit: 30 }];
    let result = sum(&{ let mut tmp1 = Vec::new();for c in &catalog_sales { tmp1.push(c.profit); } tmp1 }) - sum(&{ let mut tmp2 = Vec::new();for s in &store_sales { tmp2.push(s.profit); } tmp2 }) + 30 as f64 as f64 as f64 as f64;
    _json(&result);
    assert!(result == 68 as f64);
}
