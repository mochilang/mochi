// Generated by Mochi compiler v0.10.26 on 2025-07-15T07:09:28Z
#[derive(Default, Debug, Clone, PartialEq, PartialOrd)]
struct V2 {
    d_year: i32,
    item: &'static str,
    avg_monthly_sales: f64,
    sum_sales: f64,
}

#[derive(Default, Debug, Clone, PartialEq, PartialOrd)]
struct Result {
    d_year: i32,
    item: &'static str,
    avg_monthly_sales: f64,
    sum_sales: f64,
}

fn _json<T: std::fmt::Debug>(value: &T) {
    println!("{:?}", value);
}

fn main() {
    let v2 = vec![V2 { d_year: 2020, item: "A", avg_monthly_sales: 100.0, sum_sales: 120.0 }, V2 { d_year: 2020, item: "B", avg_monthly_sales: 80.0, sum_sales: 70.0 }, V2 { d_year: 2019, item: "C", avg_monthly_sales: 50.0, sum_sales: 60.0 }];
    let year = 2020;
    let orderby = "item";
    fn abs(x: f64) -> f64 {
        if x >= 0.0 {
            return x;
        } else {
            return -x;
        }
    }
    let result = { let mut tmp1 = Vec::new();for v in &v2 { if !(v.d_year >= year - 1 && v.avg_monthly_sales > 0 as f64 && v.sum_sales > v.avg_monthly_sales && abs(v.sum_sales - v.avg_monthly_sales) / v.avg_monthly_sales > 0.1) { continue; } let tmp2 = Result { d_year: v.d_year, item: v.item, avg_monthly_sales: v.avg_monthly_sales, sum_sales: v.sum_sales }; let tmp3 = (v.sum_sales - v.avg_monthly_sales, v.item); tmp1.push((tmp3, tmp2)); } tmp1.sort_by(|a,b| a.0.partial_cmp(&b.0).unwrap()); let mut tmp4 = Vec::new(); for p in tmp1 { tmp4.push(p.1); } tmp4 };
    _json(&result);
    assert!(result == vec![V2 { d_year: 2019, item: "C", avg_monthly_sales: 50.0, sum_sales: 60.0 }, V2 { d_year: 2020, item: "A", avg_monthly_sales: 100.0, sum_sales: 120.0 }]);
}
