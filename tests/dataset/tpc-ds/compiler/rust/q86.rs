// Generated by Mochi compiler v0.10.26 on 2025-07-15T07:22:55Z
#[derive(Default, Debug, Clone, PartialEq, PartialOrd)]
struct Web_sale {
    cat: &'static str,
    class: &'static str,
    net: f64,
}

fn sum<T>(v: &[T]) -> T where T: std::iter::Sum<T> + Copy {
    v.iter().copied().sum()
}

fn _json<T: std::fmt::Debug>(value: &T) {
    println!("{:?}", value);
}

fn main() {
    let web_sales = vec![Web_sale { cat: "A", class: "B", net: 40.0 }, Web_sale { cat: "A", class: "B", net: 46.0 }, Web_sale { cat: "A", class: "C", net: 10.0 }, Web_sale { cat: "B", class: "B", net: 20.0 }];
    let result = sum(&{ let mut tmp1 = Vec::new();for ws in &web_sales { if !(ws.cat == "A" && ws.class == "B") { continue; } tmp1.push(ws.net); } tmp1 });
    _json(&result);
    assert!(result == 86.0);
}
