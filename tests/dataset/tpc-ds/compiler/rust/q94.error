rustc: exit status 1
warning: type `Web_sale` should have an upper camel case name
  --> /tmp/q94.rs:37:8
   |
37 | struct Web_sale {
   |        ^^^^^^^^ help: convert the identifier to upper camel case: `WebSale`
   |
   = note: `#[warn(non_camel_case_types)]` on by default

warning: type `Web_return` should have an upper camel case name
  --> /tmp/q94.rs:48:8
   |
48 | struct Web_return {
   |        ^^^^^^^^^^ help: convert the identifier to upper camel case: `WebReturn`

warning: type `Date_dim` should have an upper camel case name
  --> /tmp/q94.rs:53:8
   |
53 | struct Date_dim {
   |        ^^^^^^^^ help: convert the identifier to upper camel case: `DateDim`

warning: type `Customer_addres` should have an upper camel case name
  --> /tmp/q94.rs:59:8
   |
59 | struct Customer_addres {
   |        ^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CustomerAddres`

warning: type `Web_site` should have an upper camel case name
  --> /tmp/q94.rs:65:8
   |
65 | struct Web_site {
   |        ^^^^^^^^ help: convert the identifier to upper camel case: `WebSite`

error[E0308]: mismatched types
  --> /tmp/q94.rs:99:240
   |
99 | ..._shipping_cost", sum(&{ let mut tmp5 = Vec::new();for x in &filtered { tmp5.push(x.ws_ext_ship_cost); } tmp5 })); m.insert("total_net_...
   |                     --- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&[i32]`, found `&Vec<f64>`
   |                     |
   |                     arguments to this function are incorrect
   |
   = note: expected reference `&[i32]`
              found reference `&Vec<f64>`
note: function defined here
  --> /tmp/q94.rs:75:4
   |
75 | fn sum<T>(v: &[T]) -> T where T: std::iter::Sum<T> + Copy {
   |    ^^^    -------

error[E0308]: mismatched types
  --> /tmp/q94.rs:99:366
   |
99 | ...", sum(&{ let mut tmp6 = Vec::new();for x in &filtered { tmp6.push(x.ws_net_profit); } tmp6 })); m };
   |       --- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&[i32]`, found `&Vec<f64>`
   |       |
   |       arguments to this function are incorrect
   |
   = note: expected reference `&[i32]`
              found reference `&Vec<f64>`
note: function defined here
  --> /tmp/q94.rs:75:4
   |
75 | fn sum<T>(v: &[T]) -> T where T: std::iter::Sum<T> + Copy {
   |    ^^^    -------

error[E0308]: mismatched types
   --> /tmp/q94.rs:101:140
    |
101 | ...Map::new(); m.insert("order_count", 1); m.insert("total_shipping_cost", 2.0); m.insert("total_net_profit", 5.0); m });
    |                -                       -     ------                        ^^^ expected integer, found floating-point number
    |                |                       |     |
    |                |                       |     arguments to this method are incorrect
    |                |                       this argument has type `{integer}`...
    |                ... which causes `m` to have type `BTreeMap<&str, {integer}>`
    |
help: the return type of this call is `{float}` due to the type of the argument passed
   --> /tmp/q94.rs:101:108
    |
101 | ...ert("order_count", 1); m.insert("total_shipping_cost", 2.0); m.insert("total_net_profit", 5.0); m });
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---^
    |                                                           |
    |                                                           this argument influences the return type of `insert`
note: method defined here
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/alloc/src/collections/btree/map.rs:1023:12

error[E0308]: mismatched types
   --> /tmp/q94.rs:101:175
    |
101 | ...reeMap::new(); m.insert("order_count", 1); m.insert("total_shipping_cost", 2.0); m.insert("total_net_profit", 5.0); m });
    |                   -                       -                                           ------                     ^^^ expected integer, found floating-point number
    |                   |                       |                                           |
    |                   |                       this argument has type `{integer}`...       arguments to this method are incorrect
    |                   ... which causes `m` to have type `BTreeMap<&str, {integer}>`
    |
help: the return type of this call is `{float}` due to the type of the argument passed
   --> /tmp/q94.rs:101:146
    |
101 | ...l_shipping_cost", 2.0); m.insert("total_net_profit", 5.0); m });
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---^
    |                                                         |
    |                                                         this argument influences the return type of `insert`
note: method defined here
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/alloc/src/collections/btree/map.rs:1023:12

error[E0425]: cannot find function `contains` in this scope
  --> /tmp/q94.rs:92:17
   |
92 |             if !contains(out, x) {
   |                 ^^^^^^^^ not found in this scope
   |
help: use the `.` operator to call the method `contains` on `&[_]`
   |
92 -             if !contains(out, x) {
92 +             if !out.contains(x) {
   |

error: aborting due to 5 previous errors; 5 warnings emitted

Some errors have detailed explanations: E0308, E0425.
For more information about an error, try `rustc --explain E0308`.
