// Generated by Mochi compiler v0.10.26 on 2025-07-15T06:30:30Z
#[derive(Default, Debug, Clone, PartialEq, PartialOrd)]
struct Store_sale {
    price: f64,
    ret: f64,
}

#[derive(Default, Debug, Clone, PartialEq, PartialOrd)]
struct Catalog_sale {
    price: f64,
    ret: f64,
}

#[derive(Default, Debug, Clone, PartialEq, PartialOrd)]
struct Web_sale {
    price: f64,
    ret: f64,
}

fn sum<T>(v: &[T]) -> T where T: std::iter::Sum<T> + Copy {
    v.iter().copied().sum()
}

fn _json<T: std::fmt::Debug>(value: &T) {
    println!("{:?}", value);
}

fn main() {
    let store_sales = vec![Store_sale { price: 20.0, ret: 5.0 }, Store_sale { price: 10.0, ret: 2.0 }, Store_sale { price: 5.0, ret: 0.0 }];
    let catalog_sales = vec![Catalog_sale { price: 15.0, ret: 3.0 }, Catalog_sale { price: 8.0, ret: 1.0 }];
    let web_sales = vec![Web_sale { price: 25.0, ret: 5.0 }, Web_sale { price: 15.0, ret: 8.0 }, Web_sale { price: 8.0, ret: 2.0 }];
    let total_profit = sum(&{ let mut tmp1 = Vec::new();for s in &store_sales { tmp1.push(s.price - s.ret); } tmp1 }) + sum(&{ let mut tmp2 = Vec::new();for c in &catalog_sales { tmp2.push(c.price - c.ret); } tmp2 }) + sum(&{ let mut tmp3 = Vec::new();for w in &web_sales { tmp3.push(w.price - w.ret); } tmp3 });
    _json(&total_profit);
    assert!(total_profit == 80.0);
}
