// Generated by Mochi compiler v0.10.26 on 2025-07-15T07:09:35Z
#[derive(Default, Debug, Clone, PartialEq, Eq, Hash, PartialOrd, Ord)]
struct Sr_item {
    qty: i32,
}

#[derive(Default, Debug, Clone, PartialEq, Eq, Hash, PartialOrd, Ord)]
struct Cr_item {
    qty: i32,
}

#[derive(Default, Debug, Clone, PartialEq, Eq, Hash, PartialOrd, Ord)]
struct Wr_item {
    qty: i32,
}

fn sum<T>(v: &[T]) -> T where T: std::iter::Sum<T> + Copy {
    v.iter().copied().sum()
}

fn _json<T: std::fmt::Debug>(value: &T) {
    println!("{:?}", value);
}

fn main() {
    let sr_items = vec![Sr_item { qty: 10 }, Sr_item { qty: 5 }];
    let cr_items = vec![Cr_item { qty: 25 }, Cr_item { qty: 20 }];
    let wr_items = vec![Wr_item { qty: 10 }, Wr_item { qty: 13 }];
    let result = sum(&{ let mut tmp1 = Vec::new();for x in &sr_items { tmp1.push(x.qty); } tmp1 }) + sum(&{ let mut tmp2 = Vec::new();for x in &cr_items { tmp2.push(x.qty); } tmp2 }) + sum(&{ let mut tmp3 = Vec::new();for x in &wr_items { tmp3.push(x.qty); } tmp3 });
    _json(&result);
    assert!(result == 83 as f64);
}
