// Generated by Mochi compiler v0.10.26 on 2025-07-15T07:10:51Z
#[derive(Default, Debug, Clone, PartialEq, PartialOrd)]
struct Catalog_sale {
    cs_item_sk: i32,
    cs_sold_date_sk: i32,
    cs_ext_discount_amt: f64,
}

#[derive(Default, Debug, Clone, PartialEq, Eq, Hash, PartialOrd, Ord)]
struct Item {
    i_item_sk: i32,
    i_manufact_id: i32,
}

#[derive(Default, Debug, Clone, PartialEq, Eq, Hash, PartialOrd, Ord)]
struct Date_dim {
    d_date_sk: i32,
    d_year: i32,
}

fn avg<T>(v: &[T]) -> f64 where T: Into<f64> + Copy {
    let sum: f64 = v.iter().map(|&x| x.into()).sum();
    sum / v.len() as f64
}

fn sum<T>(v: &[T]) -> T where T: std::iter::Sum<T> + Copy {
    v.iter().copied().sum()
}

fn _json<T: std::fmt::Debug>(value: &T) {
    println!("{:?}", value);
}

fn main() {
    let catalog_sales = vec![Catalog_sale { cs_item_sk: 1, cs_sold_date_sk: 1, cs_ext_discount_amt: 5.0 }, Catalog_sale { cs_item_sk: 1, cs_sold_date_sk: 2, cs_ext_discount_amt: 10.0 }, Catalog_sale { cs_item_sk: 1, cs_sold_date_sk: 3, cs_ext_discount_amt: 20.0 }];
    let item = vec![Item { i_item_sk: 1, i_manufact_id: 1 }];
    let date_dim = vec![Date_dim { d_date_sk: 1, d_year: 2000 }, Date_dim { d_date_sk: 2, d_year: 2000 }, Date_dim { d_date_sk: 3, d_year: 2000 }];
    let filtered = { let mut tmp1 = Vec::new();for cs in &catalog_sales { for i in &item { if !(cs.cs_item_sk == i.i_item_sk) { continue; } for d in &date_dim { if !(cs.cs_sold_date_sk == d.d_date_sk) { continue; } if !(i.i_manufact_id == 1 && d.d_year == 2000) { continue; } tmp1.push(cs.cs_ext_discount_amt); } } } tmp1 };
    let avg_discount = avg(&filtered);
    let result = sum(&{ let mut tmp2 = Vec::new();for &x in &filtered { if !(x > avg_discount * 1.3) { continue; } tmp2.push(x); } tmp2 });
    _json(&result);
    assert!(result == 20.0);
}
