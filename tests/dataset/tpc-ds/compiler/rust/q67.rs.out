// Generated by Mochi compiler v0.10.26 on 2025-07-15T06:30:27Z
#[derive(Default, Debug, Clone, PartialEq, Eq, Hash, PartialOrd, Ord)]
struct Store_sale {
    reason: i32,
    price: i32,
}

#[derive(Default, Debug, Clone, PartialEq, Eq, Hash, PartialOrd, Ord)]
struct Reason {
    id: i32,
    name: &'static str,
}

fn sum<T>(v: &[T]) -> T where T: std::iter::Sum<T> + Copy {
    v.iter().copied().sum()
}

fn _json<T: std::fmt::Debug>(value: &T) {
    println!("{:?}", value);
}

fn main() {
    let store_sales = vec![Store_sale { reason: 1, price: 40 }, Store_sale { reason: 2, price: 27 }];
    let reason = vec![Reason { id: 1, name: "PROMO" }, Reason { id: 2, name: "RETURN" }];
    let result = sum(&{ let mut tmp1 = Vec::new();for ss in &store_sales { for r in &reason { if !(ss.reason == r.id) { continue; } if !(vec!["PROMO", "RETURN"].contains(&r.name)) { continue; } tmp1.push(ss.price); } } tmp1 });
    _json(&result);
    assert!(result == 67 as f64);
}
