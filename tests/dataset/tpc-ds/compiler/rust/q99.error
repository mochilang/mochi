rustc: exit status 1
warning: type `Catalog_sale` should have an upper camel case name
  --> /tmp/q99.rs:30:8
   |
30 | struct Catalog_sale {
   |        ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `CatalogSale`
   |
   = note: `#[warn(non_camel_case_types)]` on by default

warning: type `Ship_mode` should have an upper camel case name
  --> /tmp/q99.rs:45:8
   |
45 | struct Ship_mode {
   |        ^^^^^^^^^ help: convert the identifier to upper camel case: `ShipMode`

warning: type `Call_center` should have an upper camel case name
  --> /tmp/q99.rs:51:8
   |
51 | struct Call_center {
   |        ^^^^^^^^^^^ help: convert the identifier to upper camel case: `CallCenter`

error[E0425]: cannot find function `substr` in this scope
  --> /tmp/q99.rs:98:378
   |
98 | ...center_sk) { continue; } let key = Key { warehouse: substr(w.w_warehouse_name, 0, 20), sm_type: sm.sm_type, cc_name: cc.cc_name }; tmp...
   |                                                        ^^^^^^ not found in this scope

error[E0609]: no field `cs_ship_date_sk` on type `&Item`
  --> /tmp/q99.rs:98:945
   |
98 | ...mp3 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk <= 30) { continue; } tmp3.push(x.clone()); } t...
   |                                                        ^^^^^^^^^^^^^^^ unknown field
   |
help: one of the expressions' fields has a field of the same name
   |
98 |     let grouped = { let mut tmp1 = std::collections::HashMap::new();for cs in &catalog_sales { for w in &warehouse { if !(cs.cs_warehouse_sk == w.w_warehouse_sk) { continue; } for sm in &ship_mode { if !(cs.cs_ship_mode_sk == sm.sm_ship_mode_sk) { continue; } for cc in &call_center { if !(cs.cs_call_center_sk == cc.cc_call_center_sk) { continue; } let key = Key { warehouse: substr(w.w_warehouse_name, 0, 20), sm_type: sm.sm_type, cc_name: cc.cc_name }; tmp1.entry(key).or_insert_with(Vec::new).push(Item {cs: cs.clone(), w: w.clone(), sm: sm.clone(), cc: cc.clone() }); } } } } let mut tmp2 = Vec::<Group>::new(); for (k,v) in tmp1 { tmp2.push(Group { key: k, items: v }); } tmp2.sort_by(|a,b| a.key.partial_cmp(&b.key).unwrap()); let mut result = Vec::new(); for g in tmp2 { result.push(Result { warehouse: g.key.warehouse, sm_type: g.key.sm_type, cc_name: g.key.cc_name, d30: { let mut tmp3 = Vec::new();for x in &g.clone().items { if !(x.cs.cs_ship_date_sk - x.cs_sold_date_sk <= 30) { continue; } tmp3.push(x.clone()); } tmp3 }.len() as i32, d60: { let mut tmp4 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60) { continue; } tmp4.push(x.clone()); } tmp4 }.len() as i32, d90: { let mut tmp5 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90) { continue; } tmp5.push(x.clone()); } tmp5 }.len() as i32, d120: { let mut tmp6 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120) { continue; } tmp6.push(x.clone()); } tmp6 }.len() as i32, dmore: { let mut tmp7 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 120) { continue; } tmp7.push(x.clone()); } tmp7 }.len() as i32 }); } result };
   |

error[E0609]: no field `cs_sold_date_sk` on type `&Item`
  --> /tmp/q99.rs:98:965
   |
98 | ... x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk <= 30) { continue; } tmp3.push(x.clone()); } tmp3 }.len() as i32, ...
   |                                                        ^^^^^^^^^^^^^^^ unknown field
   |
help: one of the expressions' fields has a field of the same name
   |
98 |     let grouped = { let mut tmp1 = std::collections::HashMap::new();for cs in &catalog_sales { for w in &warehouse { if !(cs.cs_warehouse_sk == w.w_warehouse_sk) { continue; } for sm in &ship_mode { if !(cs.cs_ship_mode_sk == sm.sm_ship_mode_sk) { continue; } for cc in &call_center { if !(cs.cs_call_center_sk == cc.cc_call_center_sk) { continue; } let key = Key { warehouse: substr(w.w_warehouse_name, 0, 20), sm_type: sm.sm_type, cc_name: cc.cc_name }; tmp1.entry(key).or_insert_with(Vec::new).push(Item {cs: cs.clone(), w: w.clone(), sm: sm.clone(), cc: cc.clone() }); } } } } let mut tmp2 = Vec::<Group>::new(); for (k,v) in tmp1 { tmp2.push(Group { key: k, items: v }); } tmp2.sort_by(|a,b| a.key.partial_cmp(&b.key).unwrap()); let mut result = Vec::new(); for g in tmp2 { result.push(Result { warehouse: g.key.warehouse, sm_type: g.key.sm_type, cc_name: g.key.cc_name, d30: { let mut tmp3 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs.cs_sold_date_sk <= 30) { continue; } tmp3.push(x.clone()); } tmp3 }.len() as i32, d60: { let mut tmp4 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60) { continue; } tmp4.push(x.clone()); } tmp4 }.len() as i32, d90: { let mut tmp5 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90) { continue; } tmp5.push(x.clone()); } tmp5 }.len() as i32, d120: { let mut tmp6 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120) { continue; } tmp6.push(x.clone()); } tmp6 }.len() as i32, dmore: { let mut tmp7 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 120) { continue; } tmp7.push(x.clone()); } tmp7 }.len() as i32 }); } result };
   |

error[E0609]: no field `cs_ship_date_sk` on type `&Item`
  --> /tmp/q99.rs:98:1115
   |
98 | ...mp4 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk ...
   |                                                        ^^^^^^^^^^^^^^^ unknown field
   |
help: one of the expressions' fields has a field of the same name
   |
98 |     let grouped = { let mut tmp1 = std::collections::HashMap::new();for cs in &catalog_sales { for w in &warehouse { if !(cs.cs_warehouse_sk == w.w_warehouse_sk) { continue; } for sm in &ship_mode { if !(cs.cs_ship_mode_sk == sm.sm_ship_mode_sk) { continue; } for cc in &call_center { if !(cs.cs_call_center_sk == cc.cc_call_center_sk) { continue; } let key = Key { warehouse: substr(w.w_warehouse_name, 0, 20), sm_type: sm.sm_type, cc_name: cc.cc_name }; tmp1.entry(key).or_insert_with(Vec::new).push(Item {cs: cs.clone(), w: w.clone(), sm: sm.clone(), cc: cc.clone() }); } } } } let mut tmp2 = Vec::<Group>::new(); for (k,v) in tmp1 { tmp2.push(Group { key: k, items: v }); } tmp2.sort_by(|a,b| a.key.partial_cmp(&b.key).unwrap()); let mut result = Vec::new(); for g in tmp2 { result.push(Result { warehouse: g.key.warehouse, sm_type: g.key.sm_type, cc_name: g.key.cc_name, d30: { let mut tmp3 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk <= 30) { continue; } tmp3.push(x.clone()); } tmp3 }.len() as i32, d60: { let mut tmp4 = Vec::new();for x in &g.clone().items { if !(x.cs.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60) { continue; } tmp4.push(x.clone()); } tmp4 }.len() as i32, d90: { let mut tmp5 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90) { continue; } tmp5.push(x.clone()); } tmp5 }.len() as i32, d120: { let mut tmp6 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120) { continue; } tmp6.push(x.clone()); } tmp6 }.len() as i32, dmore: { let mut tmp7 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 120) { continue; } tmp7.push(x.clone()); } tmp7 }.len() as i32 }); } result };
   |

error[E0609]: no field `cs_sold_date_sk` on type `&Item`
  --> /tmp/q99.rs:98:1135
   |
98 | ... x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60) { continue; }...
   |                                                        ^^^^^^^^^^^^^^^ unknown field
   |
help: one of the expressions' fields has a field of the same name
   |
98 |     let grouped = { let mut tmp1 = std::collections::HashMap::new();for cs in &catalog_sales { for w in &warehouse { if !(cs.cs_warehouse_sk == w.w_warehouse_sk) { continue; } for sm in &ship_mode { if !(cs.cs_ship_mode_sk == sm.sm_ship_mode_sk) { continue; } for cc in &call_center { if !(cs.cs_call_center_sk == cc.cc_call_center_sk) { continue; } let key = Key { warehouse: substr(w.w_warehouse_name, 0, 20), sm_type: sm.sm_type, cc_name: cc.cc_name }; tmp1.entry(key).or_insert_with(Vec::new).push(Item {cs: cs.clone(), w: w.clone(), sm: sm.clone(), cc: cc.clone() }); } } } } let mut tmp2 = Vec::<Group>::new(); for (k,v) in tmp1 { tmp2.push(Group { key: k, items: v }); } tmp2.sort_by(|a,b| a.key.partial_cmp(&b.key).unwrap()); let mut result = Vec::new(); for g in tmp2 { result.push(Result { warehouse: g.key.warehouse, sm_type: g.key.sm_type, cc_name: g.key.cc_name, d30: { let mut tmp3 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk <= 30) { continue; } tmp3.push(x.clone()); } tmp3 }.len() as i32, d60: { let mut tmp4 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60) { continue; } tmp4.push(x.clone()); } tmp4 }.len() as i32, d90: { let mut tmp5 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90) { continue; } tmp5.push(x.clone()); } tmp5 }.len() as i32, d120: { let mut tmp6 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120) { continue; } tmp6.push(x.clone()); } tmp6 }.len() as i32, dmore: { let mut tmp7 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 120) { continue; } tmp7.push(x.clone()); } tmp7 }.len() as i32 }); } result };
   |

error[E0609]: no field `cs_ship_date_sk` on type `&Item`
  --> /tmp/q99.rs:98:1161
   |
98 | ...f !(x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60) { continue; } tmp4.push(x.clone()); } t...
   |                                                        ^^^^^^^^^^^^^^^ unknown field
   |
help: one of the expressions' fields has a field of the same name
   |
98 |     let grouped = { let mut tmp1 = std::collections::HashMap::new();for cs in &catalog_sales { for w in &warehouse { if !(cs.cs_warehouse_sk == w.w_warehouse_sk) { continue; } for sm in &ship_mode { if !(cs.cs_ship_mode_sk == sm.sm_ship_mode_sk) { continue; } for cc in &call_center { if !(cs.cs_call_center_sk == cc.cc_call_center_sk) { continue; } let key = Key { warehouse: substr(w.w_warehouse_name, 0, 20), sm_type: sm.sm_type, cc_name: cc.cc_name }; tmp1.entry(key).or_insert_with(Vec::new).push(Item {cs: cs.clone(), w: w.clone(), sm: sm.clone(), cc: cc.clone() }); } } } } let mut tmp2 = Vec::<Group>::new(); for (k,v) in tmp1 { tmp2.push(Group { key: k, items: v }); } tmp2.sort_by(|a,b| a.key.partial_cmp(&b.key).unwrap()); let mut result = Vec::new(); for g in tmp2 { result.push(Result { warehouse: g.key.warehouse, sm_type: g.key.sm_type, cc_name: g.key.cc_name, d30: { let mut tmp3 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk <= 30) { continue; } tmp3.push(x.clone()); } tmp3 }.len() as i32, d60: { let mut tmp4 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs.cs_ship_date_sk - x.cs_sold_date_sk <= 60) { continue; } tmp4.push(x.clone()); } tmp4 }.len() as i32, d90: { let mut tmp5 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90) { continue; } tmp5.push(x.clone()); } tmp5 }.len() as i32, d120: { let mut tmp6 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120) { continue; } tmp6.push(x.clone()); } tmp6 }.len() as i32, dmore: { let mut tmp7 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 120) { continue; } tmp7.push(x.clone()); } tmp7 }.len() as i32 }); } result };
   |

error[E0609]: no field `cs_sold_date_sk` on type `&Item`
  --> /tmp/q99.rs:98:1181
   |
98 | ...k - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60) { continue; } tmp4.push(x.clone()); } tmp4 }.len() as i32, ...
   |                                                        ^^^^^^^^^^^^^^^ unknown field
   |
help: one of the expressions' fields has a field of the same name
   |
98 |     let grouped = { let mut tmp1 = std::collections::HashMap::new();for cs in &catalog_sales { for w in &warehouse { if !(cs.cs_warehouse_sk == w.w_warehouse_sk) { continue; } for sm in &ship_mode { if !(cs.cs_ship_mode_sk == sm.sm_ship_mode_sk) { continue; } for cc in &call_center { if !(cs.cs_call_center_sk == cc.cc_call_center_sk) { continue; } let key = Key { warehouse: substr(w.w_warehouse_name, 0, 20), sm_type: sm.sm_type, cc_name: cc.cc_name }; tmp1.entry(key).or_insert_with(Vec::new).push(Item {cs: cs.clone(), w: w.clone(), sm: sm.clone(), cc: cc.clone() }); } } } } let mut tmp2 = Vec::<Group>::new(); for (k,v) in tmp1 { tmp2.push(Group { key: k, items: v }); } tmp2.sort_by(|a,b| a.key.partial_cmp(&b.key).unwrap()); let mut result = Vec::new(); for g in tmp2 { result.push(Result { warehouse: g.key.warehouse, sm_type: g.key.sm_type, cc_name: g.key.cc_name, d30: { let mut tmp3 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk <= 30) { continue; } tmp3.push(x.clone()); } tmp3 }.len() as i32, d60: { let mut tmp4 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs.cs_sold_date_sk <= 60) { continue; } tmp4.push(x.clone()); } tmp4 }.len() as i32, d90: { let mut tmp5 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90) { continue; } tmp5.push(x.clone()); } tmp5 }.len() as i32, d120: { let mut tmp6 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120) { continue; } tmp6.push(x.clone()); } tmp6 }.len() as i32, dmore: { let mut tmp7 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 120) { continue; } tmp7.push(x.clone()); } tmp7 }.len() as i32 }); } result };
   |

error[E0609]: no field `cs_ship_date_sk` on type `&Item`
  --> /tmp/q99.rs:98:1331
   |
98 | ...mp5 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk ...
   |                                                        ^^^^^^^^^^^^^^^ unknown field
   |
help: one of the expressions' fields has a field of the same name
   |
98 |     let grouped = { let mut tmp1 = std::collections::HashMap::new();for cs in &catalog_sales { for w in &warehouse { if !(cs.cs_warehouse_sk == w.w_warehouse_sk) { continue; } for sm in &ship_mode { if !(cs.cs_ship_mode_sk == sm.sm_ship_mode_sk) { continue; } for cc in &call_center { if !(cs.cs_call_center_sk == cc.cc_call_center_sk) { continue; } let key = Key { warehouse: substr(w.w_warehouse_name, 0, 20), sm_type: sm.sm_type, cc_name: cc.cc_name }; tmp1.entry(key).or_insert_with(Vec::new).push(Item {cs: cs.clone(), w: w.clone(), sm: sm.clone(), cc: cc.clone() }); } } } } let mut tmp2 = Vec::<Group>::new(); for (k,v) in tmp1 { tmp2.push(Group { key: k, items: v }); } tmp2.sort_by(|a,b| a.key.partial_cmp(&b.key).unwrap()); let mut result = Vec::new(); for g in tmp2 { result.push(Result { warehouse: g.key.warehouse, sm_type: g.key.sm_type, cc_name: g.key.cc_name, d30: { let mut tmp3 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk <= 30) { continue; } tmp3.push(x.clone()); } tmp3 }.len() as i32, d60: { let mut tmp4 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60) { continue; } tmp4.push(x.clone()); } tmp4 }.len() as i32, d90: { let mut tmp5 = Vec::new();for x in &g.clone().items { if !(x.cs.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90) { continue; } tmp5.push(x.clone()); } tmp5 }.len() as i32, d120: { let mut tmp6 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120) { continue; } tmp6.push(x.clone()); } tmp6 }.len() as i32, dmore: { let mut tmp7 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 120) { continue; } tmp7.push(x.clone()); } tmp7 }.len() as i32 }); } result };
   |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   +++

error[E0609]: no field `cs_sold_date_sk` on type `&Item`
  --> /tmp/q99.rs:98:1351
   |
98 | ... x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90) { continue; }...
   |                                                        ^^^^^^^^^^^^^^^ unknown field
   |
help: one of the expressions' fields has a field of the same name
   |
98 |     let grouped = { let mut tmp1 = std::collections::HashMap::new();for cs in &catalog_sales { for w in &warehouse { if !(cs.cs_warehouse_sk == w.w_warehouse_sk) { continue; } for sm in &ship_mode { if !(cs.cs_ship_mode_sk == sm.sm_ship_mode_sk) { continue; } for cc in &call_center { if !(cs.cs_call_center_sk == cc.cc_call_center_sk) { continue; } let key = Key { warehouse: substr(w.w_warehouse_name, 0, 20), sm_type: sm.sm_type, cc_name: cc.cc_name }; tmp1.entry(key).or_insert_with(Vec::new).push(Item {cs: cs.clone(), w: w.clone(), sm: sm.clone(), cc: cc.clone() }); } } } } let mut tmp2 = Vec::<Group>::new(); for (k,v) in tmp1 { tmp2.push(Group { key: k, items: v }); } tmp2.sort_by(|a,b| a.key.partial_cmp(&b.key).unwrap()); let mut result = Vec::new(); for g in tmp2 { result.push(Result { warehouse: g.key.warehouse, sm_type: g.key.sm_type, cc_name: g.key.cc_name, d30: { let mut tmp3 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk <= 30) { continue; } tmp3.push(x.clone()); } tmp3 }.len() as i32, d60: { let mut tmp4 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60) { continue; } tmp4.push(x.clone()); } tmp4 }.len() as i32, d90: { let mut tmp5 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90) { continue; } tmp5.push(x.clone()); } tmp5 }.len() as i32, d120: { let mut tmp6 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120) { continue; } tmp6.push(x.clone()); } tmp6 }.len() as i32, dmore: { let mut tmp7 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 120) { continue; } tmp7.push(x.clone()); } tmp7 }.len() as i32 }); } result };
   |

error[E0609]: no field `cs_ship_date_sk` on type `&Item`
  --> /tmp/q99.rs:98:1377
   |
98 | ...f !(x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90) { continue; } tmp5.push(x.clone()); } t...
   |                                                        ^^^^^^^^^^^^^^^ unknown field
   |
help: one of the expressions' fields has a field of the same name
   |
98 |     let grouped = { let mut tmp1 = std::collections::HashMap::new();for cs in &catalog_sales { for w in &warehouse { if !(cs.cs_warehouse_sk == w.w_warehouse_sk) { continue; } for sm in &ship_mode { if !(cs.cs_ship_mode_sk == sm.sm_ship_mode_sk) { continue; } for cc in &call_center { if !(cs.cs_call_center_sk == cc.cc_call_center_sk) { continue; } let key = Key { warehouse: substr(w.w_warehouse_name, 0, 20), sm_type: sm.sm_type, cc_name: cc.cc_name }; tmp1.entry(key).or_insert_with(Vec::new).push(Item {cs: cs.clone(), w: w.clone(), sm: sm.clone(), cc: cc.clone() }); } } } } let mut tmp2 = Vec::<Group>::new(); for (k,v) in tmp1 { tmp2.push(Group { key: k, items: v }); } tmp2.sort_by(|a,b| a.key.partial_cmp(&b.key).unwrap()); let mut result = Vec::new(); for g in tmp2 { result.push(Result { warehouse: g.key.warehouse, sm_type: g.key.sm_type, cc_name: g.key.cc_name, d30: { let mut tmp3 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk <= 30) { continue; } tmp3.push(x.clone()); } tmp3 }.len() as i32, d60: { let mut tmp4 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60) { continue; } tmp4.push(x.clone()); } tmp4 }.len() as i32, d90: { let mut tmp5 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs.cs_ship_date_sk - x.cs_sold_date_sk <= 90) { continue; } tmp5.push(x.clone()); } tmp5 }.len() as i32, d120: { let mut tmp6 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120) { continue; } tmp6.push(x.clone()); } tmp6 }.len() as i32, dmore: { let mut tmp7 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 120) { continue; } tmp7.push(x.clone()); } tmp7 }.len() as i32 }); } result };
   |

error[E0609]: no field `cs_sold_date_sk` on type `&Item`
  --> /tmp/q99.rs:98:1397
   |
98 | ...k - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90) { continue; } tmp5.push(x.clone()); } tmp5 }.len() as i32, ...
   |                                                        ^^^^^^^^^^^^^^^ unknown field
   |
help: one of the expressions' fields has a field of the same name
   |
98 |     let grouped = { let mut tmp1 = std::collections::HashMap::new();for cs in &catalog_sales { for w in &warehouse { if !(cs.cs_warehouse_sk == w.w_warehouse_sk) { continue; } for sm in &ship_mode { if !(cs.cs_ship_mode_sk == sm.sm_ship_mode_sk) { continue; } for cc in &call_center { if !(cs.cs_call_center_sk == cc.cc_call_center_sk) { continue; } let key = Key { warehouse: substr(w.w_warehouse_name, 0, 20), sm_type: sm.sm_type, cc_name: cc.cc_name }; tmp1.entry(key).or_insert_with(Vec::new).push(Item {cs: cs.clone(), w: w.clone(), sm: sm.clone(), cc: cc.clone() }); } } } } let mut tmp2 = Vec::<Group>::new(); for (k,v) in tmp1 { tmp2.push(Group { key: k, items: v }); } tmp2.sort_by(|a,b| a.key.partial_cmp(&b.key).unwrap()); let mut result = Vec::new(); for g in tmp2 { result.push(Result { warehouse: g.key.warehouse, sm_type: g.key.sm_type, cc_name: g.key.cc_name, d30: { let mut tmp3 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk <= 30) { continue; } tmp3.push(x.clone()); } tmp3 }.len() as i32, d60: { let mut tmp4 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60) { continue; } tmp4.push(x.clone()); } tmp4 }.len() as i32, d90: { let mut tmp5 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs.cs_sold_date_sk <= 90) { continue; } tmp5.push(x.clone()); } tmp5 }.len() as i32, d120: { let mut tmp6 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120) { continue; } tmp6.push(x.clone()); } tmp6 }.len() as i32, dmore: { let mut tmp7 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 120) { continue; } tmp7.push(x.clone()); } tmp7 }.len() as i32 }); } result };
   |

error[E0609]: no field `cs_ship_date_sk` on type `&Item`
  --> /tmp/q99.rs:98:1548
   |
98 | ...mp6 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk ...
   |                                                        ^^^^^^^^^^^^^^^ unknown field
   |
help: one of the expressions' fields has a field of the same name
   |
98 |     let grouped = { let mut tmp1 = std::collections::HashMap::new();for cs in &catalog_sales { for w in &warehouse { if !(cs.cs_warehouse_sk == w.w_warehouse_sk) { continue; } for sm in &ship_mode { if !(cs.cs_ship_mode_sk == sm.sm_ship_mode_sk) { continue; } for cc in &call_center { if !(cs.cs_call_center_sk == cc.cc_call_center_sk) { continue; } let key = Key { warehouse: substr(w.w_warehouse_name, 0, 20), sm_type: sm.sm_type, cc_name: cc.cc_name }; tmp1.entry(key).or_insert_with(Vec::new).push(Item {cs: cs.clone(), w: w.clone(), sm: sm.clone(), cc: cc.clone() }); } } } } let mut tmp2 = Vec::<Group>::new(); for (k,v) in tmp1 { tmp2.push(Group { key: k, items: v }); } tmp2.sort_by(|a,b| a.key.partial_cmp(&b.key).unwrap()); let mut result = Vec::new(); for g in tmp2 { result.push(Result { warehouse: g.key.warehouse, sm_type: g.key.sm_type, cc_name: g.key.cc_name, d30: { let mut tmp3 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk <= 30) { continue; } tmp3.push(x.clone()); } tmp3 }.len() as i32, d60: { let mut tmp4 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60) { continue; } tmp4.push(x.clone()); } tmp4 }.len() as i32, d90: { let mut tmp5 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90) { continue; } tmp5.push(x.clone()); } tmp5 }.len() as i32, d120: { let mut tmp6 = Vec::new();for x in &g.clone().items { if !(x.cs.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120) { continue; } tmp6.push(x.clone()); } tmp6 }.len() as i32, dmore: { let mut tmp7 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 120) { continue; } tmp7.push(x.clone()); } tmp7 }.len() as i32 }); } result };
   |

error[E0609]: no field `cs_sold_date_sk` on type `&Item`
  --> /tmp/q99.rs:98:1568
   |
98 | ... x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120) { continue; ...
   |                                                        ^^^^^^^^^^^^^^^ unknown field
   |
help: one of the expressions' fields has a field of the same name
   |
98 |     let grouped = { let mut tmp1 = std::collections::HashMap::new();for cs in &catalog_sales { for w in &warehouse { if !(cs.cs_warehouse_sk == w.w_warehouse_sk) { continue; } for sm in &ship_mode { if !(cs.cs_ship_mode_sk == sm.sm_ship_mode_sk) { continue; } for cc in &call_center { if !(cs.cs_call_center_sk == cc.cc_call_center_sk) { continue; } let key = Key { warehouse: substr(w.w_warehouse_name, 0, 20), sm_type: sm.sm_type, cc_name: cc.cc_name }; tmp1.entry(key).or_insert_with(Vec::new).push(Item {cs: cs.clone(), w: w.clone(), sm: sm.clone(), cc: cc.clone() }); } } } } let mut tmp2 = Vec::<Group>::new(); for (k,v) in tmp1 { tmp2.push(Group { key: k, items: v }); } tmp2.sort_by(|a,b| a.key.partial_cmp(&b.key).unwrap()); let mut result = Vec::new(); for g in tmp2 { result.push(Result { warehouse: g.key.warehouse, sm_type: g.key.sm_type, cc_name: g.key.cc_name, d30: { let mut tmp3 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk <= 30) { continue; } tmp3.push(x.clone()); } tmp3 }.len() as i32, d60: { let mut tmp4 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60) { continue; } tmp4.push(x.clone()); } tmp4 }.len() as i32, d90: { let mut tmp5 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90) { continue; } tmp5.push(x.clone()); } tmp5 }.len() as i32, d120: { let mut tmp6 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120) { continue; } tmp6.push(x.clone()); } tmp6 }.len() as i32, dmore: { let mut tmp7 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 120) { continue; } tmp7.push(x.clone()); } tmp7 }.len() as i32 }); } result };
   |

error[E0609]: no field `cs_ship_date_sk` on type `&Item`
  --> /tmp/q99.rs:98:1594
   |
98 | ...f !(x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120) { continue; } tmp6.push(x.clone()); } ...
   |                                                        ^^^^^^^^^^^^^^^ unknown field
   |
help: one of the expressions' fields has a field of the same name
   |
98 |     let grouped = { let mut tmp1 = std::collections::HashMap::new();for cs in &catalog_sales { for w in &warehouse { if !(cs.cs_warehouse_sk == w.w_warehouse_sk) { continue; } for sm in &ship_mode { if !(cs.cs_ship_mode_sk == sm.sm_ship_mode_sk) { continue; } for cc in &call_center { if !(cs.cs_call_center_sk == cc.cc_call_center_sk) { continue; } let key = Key { warehouse: substr(w.w_warehouse_name, 0, 20), sm_type: sm.sm_type, cc_name: cc.cc_name }; tmp1.entry(key).or_insert_with(Vec::new).push(Item {cs: cs.clone(), w: w.clone(), sm: sm.clone(), cc: cc.clone() }); } } } } let mut tmp2 = Vec::<Group>::new(); for (k,v) in tmp1 { tmp2.push(Group { key: k, items: v }); } tmp2.sort_by(|a,b| a.key.partial_cmp(&b.key).unwrap()); let mut result = Vec::new(); for g in tmp2 { result.push(Result { warehouse: g.key.warehouse, sm_type: g.key.sm_type, cc_name: g.key.cc_name, d30: { let mut tmp3 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk <= 30) { continue; } tmp3.push(x.clone()); } tmp3 }.len() as i32, d60: { let mut tmp4 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60) { continue; } tmp4.push(x.clone()); } tmp4 }.len() as i32, d90: { let mut tmp5 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90) { continue; } tmp5.push(x.clone()); } tmp5 }.len() as i32, d120: { let mut tmp6 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs.cs_ship_date_sk - x.cs_sold_date_sk <= 120) { continue; } tmp6.push(x.clone()); } tmp6 }.len() as i32, dmore: { let mut tmp7 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 120) { continue; } tmp7.push(x.clone()); } tmp7 }.len() as i32 }); } result };
   |

error[E0609]: no field `cs_sold_date_sk` on type `&Item`
  --> /tmp/q99.rs:98:1614
   |
98 | ...k - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120) { continue; } tmp6.push(x.clone()); } tmp6 }.len() as i32,...
   |                                                        ^^^^^^^^^^^^^^^ unknown field
   |
help: one of the expressions' fields has a field of the same name
   |
98 |     let grouped = { let mut tmp1 = std::collections::HashMap::new();for cs in &catalog_sales { for w in &warehouse { if !(cs.cs_warehouse_sk == w.w_warehouse_sk) { continue; } for sm in &ship_mode { if !(cs.cs_ship_mode_sk == sm.sm_ship_mode_sk) { continue; } for cc in &call_center { if !(cs.cs_call_center_sk == cc.cc_call_center_sk) { continue; } let key = Key { warehouse: substr(w.w_warehouse_name, 0, 20), sm_type: sm.sm_type, cc_name: cc.cc_name }; tmp1.entry(key).or_insert_with(Vec::new).push(Item {cs: cs.clone(), w: w.clone(), sm: sm.clone(), cc: cc.clone() }); } } } } let mut tmp2 = Vec::<Group>::new(); for (k,v) in tmp1 { tmp2.push(Group { key: k, items: v }); } tmp2.sort_by(|a,b| a.key.partial_cmp(&b.key).unwrap()); let mut result = Vec::new(); for g in tmp2 { result.push(Result { warehouse: g.key.warehouse, sm_type: g.key.sm_type, cc_name: g.key.cc_name, d30: { let mut tmp3 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk <= 30) { continue; } tmp3.push(x.clone()); } tmp3 }.len() as i32, d60: { let mut tmp4 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60) { continue; } tmp4.push(x.clone()); } tmp4 }.len() as i32, d90: { let mut tmp5 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90) { continue; } tmp5.push(x.clone()); } tmp5 }.len() as i32, d120: { let mut tmp6 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs.cs_sold_date_sk <= 120) { continue; } tmp6.push(x.clone()); } tmp6 }.len() as i32, dmore: { let mut tmp7 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 120) { continue; } tmp7.push(x.clone()); } tmp7 }.len() as i32 }); } result };
   |

error[E0609]: no field `cs_ship_date_sk` on type `&Item`
  --> /tmp/q99.rs:98:1767
   |
98 | ...mp7 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 120) { continue; } tmp7.push(x.clone()); } t...
   |                                                        ^^^^^^^^^^^^^^^ unknown field
   |
help: one of the expressions' fields has a field of the same name
   |
98 |     let grouped = { let mut tmp1 = std::collections::HashMap::new();for cs in &catalog_sales { for w in &warehouse { if !(cs.cs_warehouse_sk == w.w_warehouse_sk) { continue; } for sm in &ship_mode { if !(cs.cs_ship_mode_sk == sm.sm_ship_mode_sk) { continue; } for cc in &call_center { if !(cs.cs_call_center_sk == cc.cc_call_center_sk) { continue; } let key = Key { warehouse: substr(w.w_warehouse_name, 0, 20), sm_type: sm.sm_type, cc_name: cc.cc_name }; tmp1.entry(key).or_insert_with(Vec::new).push(Item {cs: cs.clone(), w: w.clone(), sm: sm.clone(), cc: cc.clone() }); } } } } let mut tmp2 = Vec::<Group>::new(); for (k,v) in tmp1 { tmp2.push(Group { key: k, items: v }); } tmp2.sort_by(|a,b| a.key.partial_cmp(&b.key).unwrap()); let mut result = Vec::new(); for g in tmp2 { result.push(Result { warehouse: g.key.warehouse, sm_type: g.key.sm_type, cc_name: g.key.cc_name, d30: { let mut tmp3 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk <= 30) { continue; } tmp3.push(x.clone()); } tmp3 }.len() as i32, d60: { let mut tmp4 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60) { continue; } tmp4.push(x.clone()); } tmp4 }.len() as i32, d90: { let mut tmp5 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90) { continue; } tmp5.push(x.clone()); } tmp5 }.len() as i32, d120: { let mut tmp6 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120) { continue; } tmp6.push(x.clone()); } tmp6 }.len() as i32, dmore: { let mut tmp7 = Vec::new();for x in &g.clone().items { if !(x.cs.cs_ship_date_sk - x.cs_sold_date_sk > 120) { continue; } tmp7.push(x.clone()); } tmp7 }.len() as i32 }); } result };
   |

error[E0609]: no field `cs_sold_date_sk` on type `&Item`
  --> /tmp/q99.rs:98:1787
   |
98 | ... x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 120) { continue; } tmp7.push(x.clone()); } tmp7 }.len() as i32 }...
   |                                                        ^^^^^^^^^^^^^^^ unknown field
   |
help: one of the expressions' fields has a field of the same name
   |
98 |     let grouped = { let mut tmp1 = std::collections::HashMap::new();for cs in &catalog_sales { for w in &warehouse { if !(cs.cs_warehouse_sk == w.w_warehouse_sk) { continue; } for sm in &ship_mode { if !(cs.cs_ship_mode_sk == sm.sm_ship_mode_sk) { continue; } for cc in &call_center { if !(cs.cs_call_center_sk == cc.cc_call_center_sk) { continue; } let key = Key { warehouse: substr(w.w_warehouse_name, 0, 20), sm_type: sm.sm_type, cc_name: cc.cc_name }; tmp1.entry(key).or_insert_with(Vec::new).push(Item {cs: cs.clone(), w: w.clone(), sm: sm.clone(), cc: cc.clone() }); } } } } let mut tmp2 = Vec::<Group>::new(); for (k,v) in tmp1 { tmp2.push(Group { key: k, items: v }); } tmp2.sort_by(|a,b| a.key.partial_cmp(&b.key).unwrap()); let mut result = Vec::new(); for g in tmp2 { result.push(Result { warehouse: g.key.warehouse, sm_type: g.key.sm_type, cc_name: g.key.cc_name, d30: { let mut tmp3 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk <= 30) { continue; } tmp3.push(x.clone()); } tmp3 }.len() as i32, d60: { let mut tmp4 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60) { continue; } tmp4.push(x.clone()); } tmp4 }.len() as i32, d90: { let mut tmp5 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90) { continue; } tmp5.push(x.clone()); } tmp5 }.len() as i32, d120: { let mut tmp6 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120) { continue; } tmp6.push(x.clone()); } tmp6 }.len() as i32, dmore: { let mut tmp7 = Vec::new();for x in &g.clone().items { if !(x.cs_ship_date_sk - x.cs.cs_sold_date_sk > 120) { continue; } tmp7.push(x.clone()); } tmp7 }.len() as i32 }); } result };
   |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           +++

error[E0308]: mismatched types
   --> /tmp/q99.rs:100:49
    |
100 |     assert!(grouped == vec![Result { warehouse: "Warehouse1", sm_type: "EXP", cc_name: "CC1", d30: 1, d60: 1, d90: 1, d120: 1, dmore: 1 }]);
    |                                                 ^^^^^^^^^^^^ expected `i32`, found `&str`

error: aborting due to 18 previous errors; 3 warnings emitted

Some errors have detailed explanations: E0308, E0425, E0609.
For more information about an error, try `rustc --explain E0308`.
