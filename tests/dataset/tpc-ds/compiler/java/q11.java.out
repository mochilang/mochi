// Generated by Mochi compiler v0.10.26 on 2025-07-15T07:50:57Z
// q11.mochi
import java.util.*;

class Customer {
    int c_customer_sk;
    String c_customer_id;
    String c_first_name;
    String c_last_name;
    Customer(int c_customer_sk, String c_customer_id, String c_first_name, String c_last_name) {
        this.c_customer_sk = c_customer_sk;
        this.c_customer_id = c_customer_id;
        this.c_first_name = c_first_name;
        this.c_last_name = c_last_name;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Customer other)) return false;
        return Objects.equals(this.c_customer_sk, other.c_customer_sk) && Objects.equals(this.c_customer_id, other.c_customer_id) && Objects.equals(this.c_first_name, other.c_first_name) && Objects.equals(this.c_last_name, other.c_last_name);
    }
    @Override public int hashCode() {
        return Objects.hash(c_customer_sk, c_customer_id, c_first_name, c_last_name);
    }
}
class StoreSale {
    int ss_customer_sk;
    int ss_sold_date_sk;
    double ss_ext_list_price;
    StoreSale(int ss_customer_sk, int ss_sold_date_sk, double ss_ext_list_price) {
        this.ss_customer_sk = ss_customer_sk;
        this.ss_sold_date_sk = ss_sold_date_sk;
        this.ss_ext_list_price = ss_ext_list_price;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof StoreSale other)) return false;
        return Objects.equals(this.ss_customer_sk, other.ss_customer_sk) && Objects.equals(this.ss_sold_date_sk, other.ss_sold_date_sk) && Objects.equals(this.ss_ext_list_price, other.ss_ext_list_price);
    }
    @Override public int hashCode() {
        return Objects.hash(ss_customer_sk, ss_sold_date_sk, ss_ext_list_price);
    }
}
class WebSale {
    int ws_bill_customer_sk;
    int ws_sold_date_sk;
    double ws_ext_list_price;
    WebSale(int ws_bill_customer_sk, int ws_sold_date_sk, double ws_ext_list_price) {
        this.ws_bill_customer_sk = ws_bill_customer_sk;
        this.ws_sold_date_sk = ws_sold_date_sk;
        this.ws_ext_list_price = ws_ext_list_price;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof WebSale other)) return false;
        return Objects.equals(this.ws_bill_customer_sk, other.ws_bill_customer_sk) && Objects.equals(this.ws_sold_date_sk, other.ws_sold_date_sk) && Objects.equals(this.ws_ext_list_price, other.ws_ext_list_price);
    }
    @Override public int hashCode() {
        return Objects.hash(ws_bill_customer_sk, ws_sold_date_sk, ws_ext_list_price);
    }
}
class CCustomerSkCCustomerIdCFirstNameCLastName {
    int c_customer_sk;
    String c_customer_id;
    String c_first_name;
    String c_last_name;
    CCustomerSkCCustomerIdCFirstNameCLastName(int c_customer_sk, String c_customer_id, String c_first_name, String c_last_name) {
        this.c_customer_sk = c_customer_sk;
        this.c_customer_id = c_customer_id;
        this.c_first_name = c_first_name;
        this.c_last_name = c_last_name;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CCustomerSkCCustomerIdCFirstNameCLastName other)) return false;
        return Objects.equals(this.c_customer_sk, other.c_customer_sk) && Objects.equals(this.c_customer_id, other.c_customer_id) && Objects.equals(this.c_first_name, other.c_first_name) && Objects.equals(this.c_last_name, other.c_last_name);
    }
    @Override public int hashCode() {
        return Objects.hash(c_customer_sk, c_customer_id, c_first_name, c_last_name);
    }
    int size() { return 4; }
}
class SsCustomerSkSsSoldDateSkSsExtListPrice {
    int ss_customer_sk;
    int ss_sold_date_sk;
    double ss_ext_list_price;
    SsCustomerSkSsSoldDateSkSsExtListPrice(int ss_customer_sk, int ss_sold_date_sk, double ss_ext_list_price) {
        this.ss_customer_sk = ss_customer_sk;
        this.ss_sold_date_sk = ss_sold_date_sk;
        this.ss_ext_list_price = ss_ext_list_price;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof SsCustomerSkSsSoldDateSkSsExtListPrice other)) return false;
        return Objects.equals(this.ss_customer_sk, other.ss_customer_sk) && Objects.equals(this.ss_sold_date_sk, other.ss_sold_date_sk) && Objects.equals(this.ss_ext_list_price, other.ss_ext_list_price);
    }
    @Override public int hashCode() {
        return Objects.hash(ss_customer_sk, ss_sold_date_sk, ss_ext_list_price);
    }
    int size() { return 3; }
}
class WsBillCustomerSkWsSoldDateSkWsExtListPrice {
    int ws_bill_customer_sk;
    int ws_sold_date_sk;
    double ws_ext_list_price;
    WsBillCustomerSkWsSoldDateSkWsExtListPrice(int ws_bill_customer_sk, int ws_sold_date_sk, double ws_ext_list_price) {
        this.ws_bill_customer_sk = ws_bill_customer_sk;
        this.ws_sold_date_sk = ws_sold_date_sk;
        this.ws_ext_list_price = ws_ext_list_price;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof WsBillCustomerSkWsSoldDateSkWsExtListPrice other)) return false;
        return Objects.equals(this.ws_bill_customer_sk, other.ws_bill_customer_sk) && Objects.equals(this.ws_sold_date_sk, other.ws_sold_date_sk) && Objects.equals(this.ws_ext_list_price, other.ws_ext_list_price);
    }
    @Override public int hashCode() {
        return Objects.hash(ws_bill_customer_sk, ws_sold_date_sk, ws_ext_list_price);
    }
    int size() { return 3; }
}
class CustomerIdCustomerFirstNameCustomerLastName {
    String customer_id;
    String customer_first_name;
    String customer_last_name;
    CustomerIdCustomerFirstNameCustomerLastName(String customer_id, String customer_first_name, String customer_last_name) {
        this.customer_id = customer_id;
        this.customer_first_name = customer_first_name;
        this.customer_last_name = customer_last_name;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CustomerIdCustomerFirstNameCustomerLastName other)) return false;
        return Objects.equals(this.customer_id, other.customer_id) && Objects.equals(this.customer_first_name, other.customer_first_name) && Objects.equals(this.customer_last_name, other.customer_last_name);
    }
    @Override public int hashCode() {
        return Objects.hash(customer_id, customer_first_name, customer_last_name);
    }
    int size() { return 3; }
}
public class Q11 {
    static Map<String,Object> asMap(Object o) {
        if (o instanceof Map<?,?> mm) {
            LinkedHashMap<String,Object> m = new LinkedHashMap<>();
            for (Map.Entry<?,?> e : mm.entrySet()) m.put(String.valueOf(e.getKey()), e.getValue());
            return m;
        }
        LinkedHashMap<String,Object> m = new LinkedHashMap<>();
        for (var f : o.getClass().getDeclaredFields()) { try { f.setAccessible(true); m.put(f.getName(), f.get(o)); } catch (Exception e) { throw new RuntimeException(e); } }
        return m;
    }
    static void saveJsonl(List<?> list) {
        for (Object obj : list) {
            Map<String,Object> m = asMap(obj);
            List<String> parts = new ArrayList<>();
            for (Map.Entry<?,?> e : m.entrySet()) { parts.add("\"" + e.getKey() + "\":" + e.getValue()); }
            System.out.println("{" + String.join(",", parts) + "}");
        }
    }
    static String toJson(Object o) {
        if (o instanceof Map<?,?> m) {
            StringJoiner j = new StringJoiner(",", "{", "}");
            for (Map.Entry<?,?> e : m.entrySet()) j.add("\"" + e.getKey() + "\":" + toJson(e.getValue()));
            return j.toString();
        } else if (o instanceof Collection<?> c) {
            StringJoiner j = new StringJoiner(",", "[", "]");
            for (var x : c) j.add(toJson(x));
            return j.toString();
        } else if (o instanceof String s) {
            return "\"" + s + "\"";
        } else if (o instanceof Number || o instanceof Boolean || o instanceof Character) {
            return String.valueOf(o);
        } else {
            Map<String,Object> m = asMap(o);
            StringJoiner j = new StringJoiner(",", "{", "}");
            for (Map.Entry<String,Object> e : m.entrySet()) j.add("\"" + e.getKey() + "\":" + toJson(e.getValue()));
            return j.toString();
        }
    }
    static void json(Object o) { System.out.println(toJson(o)); }
    public static void main(String[] args) {
    List<CCustomerSkCCustomerIdCFirstNameCLastName> customer = new ArrayList<>(Arrays.asList(new CCustomerSkCCustomerIdCFirstNameCLastName(1, "C1", "John", "Doe")));
    List<SsCustomerSkSsSoldDateSkSsExtListPrice> store_sales = new ArrayList<>(Arrays.asList(new SsCustomerSkSsSoldDateSkSsExtListPrice(1, 1998, 60.000000), new SsCustomerSkSsSoldDateSkSsExtListPrice(1, 1999, 90.000000)));
    List<WsBillCustomerSkWsSoldDateSkWsExtListPrice> web_sales = new ArrayList<>(Arrays.asList(new WsBillCustomerSkWsSoldDateSkWsExtListPrice(1, 1998, 50.000000), new WsBillCustomerSkWsSoldDateSkWsExtListPrice(1, 1999, 150.000000)));
    double ss98 = (new java.util.function.Supplier<List<Double>>(){public List<Double> get(){
    List<Double> res0 = new ArrayList<>();
    for (var ss : store_sales) {
        if (!(ss.ss_sold_date_sk == 1998)) continue;
        res0.add(ss.ss_ext_list_price);
    }
    return res0;
}}).get().stream().mapToDouble(n -> ((Number)n).doubleValue()).sum();
    double ss99 = (new java.util.function.Supplier<List<Double>>(){public List<Double> get(){
    List<Double> res1 = new ArrayList<>();
    for (var ss : store_sales) {
        if (!(ss.ss_sold_date_sk == 1999)) continue;
        res1.add(ss.ss_ext_list_price);
    }
    return res1;
}}).get().stream().mapToDouble(n -> ((Number)n).doubleValue()).sum();
    double ws98 = (new java.util.function.Supplier<List<Double>>(){public List<Double> get(){
    List<Double> res2 = new ArrayList<>();
    for (var ws : web_sales) {
        if (!(ws.ws_sold_date_sk == 1998)) continue;
        res2.add(ws.ws_ext_list_price);
    }
    return res2;
}}).get().stream().mapToDouble(n -> ((Number)n).doubleValue()).sum();
    double ws99 = (new java.util.function.Supplier<List<Double>>(){public List<Double> get(){
    List<Double> res3 = new ArrayList<>();
    for (var ws : web_sales) {
        if (!(ws.ws_sold_date_sk == 1999)) continue;
        res3.add(ws.ws_ext_list_price);
    }
    return res3;
}}).get().stream().mapToDouble(n -> ((Number)n).doubleValue()).sum();
    boolean growth_ok = ws98 > 0 && ss98 > 0 && String.valueOf((ws99 / ws98)).compareTo(String.valueOf((ss99 / ss98))) > 0;
    Object result = (growth_ok ? Arrays.asList(new CustomerIdCustomerFirstNameCustomerLastName("C1", "John", "Doe")) : Arrays.asList());
    json(result);
    if (!(Objects.equals(result, Arrays.asList(new CustomerIdCustomerFirstNameCustomerLastName("C1", "John", "Doe"))))) throw new AssertionError("expect failed");
    }
}
