// Generated by Mochi compiler v0.10.26 on 2025-07-15T07:51:10Z
// q26.mochi
import java.util.*;

class CatalogSale {
    int cs_sold_date_sk;
    int cs_item_sk;
    int cs_bill_cdemo_sk;
    int cs_promo_sk;
    int cs_quantity;
    double cs_list_price;
    double cs_coupon_amt;
    double cs_sales_price;
    CatalogSale(int cs_sold_date_sk, int cs_item_sk, int cs_bill_cdemo_sk, int cs_promo_sk, int cs_quantity, double cs_list_price, double cs_coupon_amt, double cs_sales_price) {
        this.cs_sold_date_sk = cs_sold_date_sk;
        this.cs_item_sk = cs_item_sk;
        this.cs_bill_cdemo_sk = cs_bill_cdemo_sk;
        this.cs_promo_sk = cs_promo_sk;
        this.cs_quantity = cs_quantity;
        this.cs_list_price = cs_list_price;
        this.cs_coupon_amt = cs_coupon_amt;
        this.cs_sales_price = cs_sales_price;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CatalogSale other)) return false;
        return Objects.equals(this.cs_sold_date_sk, other.cs_sold_date_sk) && Objects.equals(this.cs_item_sk, other.cs_item_sk) && Objects.equals(this.cs_bill_cdemo_sk, other.cs_bill_cdemo_sk) && Objects.equals(this.cs_promo_sk, other.cs_promo_sk) && Objects.equals(this.cs_quantity, other.cs_quantity) && Objects.equals(this.cs_list_price, other.cs_list_price) && Objects.equals(this.cs_coupon_amt, other.cs_coupon_amt) && Objects.equals(this.cs_sales_price, other.cs_sales_price);
    }
    @Override public int hashCode() {
        return Objects.hash(cs_sold_date_sk, cs_item_sk, cs_bill_cdemo_sk, cs_promo_sk, cs_quantity, cs_list_price, cs_coupon_amt, cs_sales_price);
    }
}
class CustomerDemo {
    int cd_demo_sk;
    String cd_gender;
    String cd_marital_status;
    String cd_education_status;
    CustomerDemo(int cd_demo_sk, String cd_gender, String cd_marital_status, String cd_education_status) {
        this.cd_demo_sk = cd_demo_sk;
        this.cd_gender = cd_gender;
        this.cd_marital_status = cd_marital_status;
        this.cd_education_status = cd_education_status;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CustomerDemo other)) return false;
        return Objects.equals(this.cd_demo_sk, other.cd_demo_sk) && Objects.equals(this.cd_gender, other.cd_gender) && Objects.equals(this.cd_marital_status, other.cd_marital_status) && Objects.equals(this.cd_education_status, other.cd_education_status);
    }
    @Override public int hashCode() {
        return Objects.hash(cd_demo_sk, cd_gender, cd_marital_status, cd_education_status);
    }
}
class DateDim {
    int d_date_sk;
    int d_year;
    DateDim(int d_date_sk, int d_year) {
        this.d_date_sk = d_date_sk;
        this.d_year = d_year;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof DateDim other)) return false;
        return Objects.equals(this.d_date_sk, other.d_date_sk) && Objects.equals(this.d_year, other.d_year);
    }
    @Override public int hashCode() {
        return Objects.hash(d_date_sk, d_year);
    }
}
class Item {
    int i_item_sk;
    String i_item_id;
    Item(int i_item_sk, String i_item_id) {
        this.i_item_sk = i_item_sk;
        this.i_item_id = i_item_id;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Item other)) return false;
        return Objects.equals(this.i_item_sk, other.i_item_sk) && Objects.equals(this.i_item_id, other.i_item_id);
    }
    @Override public int hashCode() {
        return Objects.hash(i_item_sk, i_item_id);
    }
}
class Promotion {
    int p_promo_sk;
    String p_channel_email;
    String p_channel_event;
    Promotion(int p_promo_sk, String p_channel_email, String p_channel_event) {
        this.p_promo_sk = p_promo_sk;
        this.p_channel_email = p_channel_email;
        this.p_channel_event = p_channel_event;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Promotion other)) return false;
        return Objects.equals(this.p_promo_sk, other.p_promo_sk) && Objects.equals(this.p_channel_email, other.p_channel_email) && Objects.equals(this.p_channel_event, other.p_channel_event);
    }
    @Override public int hashCode() {
        return Objects.hash(p_promo_sk, p_channel_email, p_channel_event);
    }
}
class CsSoldDateSkCsItemSkCsBillCdemoSkCsPromoSkCsQuantityCsListPriceCsCouponAmtCsSalesPrice {
    int cs_sold_date_sk;
    int cs_item_sk;
    int cs_bill_cdemo_sk;
    int cs_promo_sk;
    int cs_quantity;
    double cs_list_price;
    double cs_coupon_amt;
    double cs_sales_price;
    CsSoldDateSkCsItemSkCsBillCdemoSkCsPromoSkCsQuantityCsListPriceCsCouponAmtCsSalesPrice(int cs_sold_date_sk, int cs_item_sk, int cs_bill_cdemo_sk, int cs_promo_sk, int cs_quantity, double cs_list_price, double cs_coupon_amt, double cs_sales_price) {
        this.cs_sold_date_sk = cs_sold_date_sk;
        this.cs_item_sk = cs_item_sk;
        this.cs_bill_cdemo_sk = cs_bill_cdemo_sk;
        this.cs_promo_sk = cs_promo_sk;
        this.cs_quantity = cs_quantity;
        this.cs_list_price = cs_list_price;
        this.cs_coupon_amt = cs_coupon_amt;
        this.cs_sales_price = cs_sales_price;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CsSoldDateSkCsItemSkCsBillCdemoSkCsPromoSkCsQuantityCsListPriceCsCouponAmtCsSalesPrice other)) return false;
        return Objects.equals(this.cs_sold_date_sk, other.cs_sold_date_sk) && Objects.equals(this.cs_item_sk, other.cs_item_sk) && Objects.equals(this.cs_bill_cdemo_sk, other.cs_bill_cdemo_sk) && Objects.equals(this.cs_promo_sk, other.cs_promo_sk) && Objects.equals(this.cs_quantity, other.cs_quantity) && Objects.equals(this.cs_list_price, other.cs_list_price) && Objects.equals(this.cs_coupon_amt, other.cs_coupon_amt) && Objects.equals(this.cs_sales_price, other.cs_sales_price);
    }
    @Override public int hashCode() {
        return Objects.hash(cs_sold_date_sk, cs_item_sk, cs_bill_cdemo_sk, cs_promo_sk, cs_quantity, cs_list_price, cs_coupon_amt, cs_sales_price);
    }
    int size() { return 8; }
}
class CdDemoSkCdGenderCdMaritalStatusCdEducationStatus {
    int cd_demo_sk;
    String cd_gender;
    String cd_marital_status;
    String cd_education_status;
    CdDemoSkCdGenderCdMaritalStatusCdEducationStatus(int cd_demo_sk, String cd_gender, String cd_marital_status, String cd_education_status) {
        this.cd_demo_sk = cd_demo_sk;
        this.cd_gender = cd_gender;
        this.cd_marital_status = cd_marital_status;
        this.cd_education_status = cd_education_status;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CdDemoSkCdGenderCdMaritalStatusCdEducationStatus other)) return false;
        return Objects.equals(this.cd_demo_sk, other.cd_demo_sk) && Objects.equals(this.cd_gender, other.cd_gender) && Objects.equals(this.cd_marital_status, other.cd_marital_status) && Objects.equals(this.cd_education_status, other.cd_education_status);
    }
    @Override public int hashCode() {
        return Objects.hash(cd_demo_sk, cd_gender, cd_marital_status, cd_education_status);
    }
    int size() { return 4; }
}
class DDateSkDYear {
    int d_date_sk;
    int d_year;
    DDateSkDYear(int d_date_sk, int d_year) {
        this.d_date_sk = d_date_sk;
        this.d_year = d_year;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof DDateSkDYear other)) return false;
        return Objects.equals(this.d_date_sk, other.d_date_sk) && Objects.equals(this.d_year, other.d_year);
    }
    @Override public int hashCode() {
        return Objects.hash(d_date_sk, d_year);
    }
    int size() { return 2; }
}
class IItemSkIItemId {
    int i_item_sk;
    String i_item_id;
    IItemSkIItemId(int i_item_sk, String i_item_id) {
        this.i_item_sk = i_item_sk;
        this.i_item_id = i_item_id;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof IItemSkIItemId other)) return false;
        return Objects.equals(this.i_item_sk, other.i_item_sk) && Objects.equals(this.i_item_id, other.i_item_id);
    }
    @Override public int hashCode() {
        return Objects.hash(i_item_sk, i_item_id);
    }
    int size() { return 2; }
}
class PPromoSkPChannelEmailPChannelEvent {
    int p_promo_sk;
    String p_channel_email;
    String p_channel_event;
    PPromoSkPChannelEmailPChannelEvent(int p_promo_sk, String p_channel_email, String p_channel_event) {
        this.p_promo_sk = p_promo_sk;
        this.p_channel_email = p_channel_email;
        this.p_channel_event = p_channel_event;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof PPromoSkPChannelEmailPChannelEvent other)) return false;
        return Objects.equals(this.p_promo_sk, other.p_promo_sk) && Objects.equals(this.p_channel_email, other.p_channel_email) && Objects.equals(this.p_channel_event, other.p_channel_event);
    }
    @Override public int hashCode() {
        return Objects.hash(p_promo_sk, p_channel_email, p_channel_event);
    }
    int size() { return 3; }
}
class CsCdDIP {
    CsSoldDateSkCsItemSkCsBillCdemoSkCsPromoSkCsQuantityCsListPriceCsCouponAmtCsSalesPrice cs;
    CdDemoSkCdGenderCdMaritalStatusCdEducationStatus cd;
    DDateSkDYear d;
    IItemSkIItemId i;
    PPromoSkPChannelEmailPChannelEvent p;
    CsCdDIP(CsSoldDateSkCsItemSkCsBillCdemoSkCsPromoSkCsQuantityCsListPriceCsCouponAmtCsSalesPrice cs, CdDemoSkCdGenderCdMaritalStatusCdEducationStatus cd, DDateSkDYear d, IItemSkIItemId i, PPromoSkPChannelEmailPChannelEvent p) {
        this.cs = cs;
        this.cd = cd;
        this.d = d;
        this.i = i;
        this.p = p;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CsCdDIP other)) return false;
        return Objects.equals(this.cs, other.cs) && Objects.equals(this.cd, other.cd) && Objects.equals(this.d, other.d) && Objects.equals(this.i, other.i) && Objects.equals(this.p, other.p);
    }
    @Override public int hashCode() {
        return Objects.hash(cs, cd, d, i, p);
    }
    int size() { return 5; }
}
class IItemIdAgg1Agg2Agg3Agg4 {
    String i_item_id;
    double agg1;
    double agg2;
    double agg3;
    double agg4;
    IItemIdAgg1Agg2Agg3Agg4(String i_item_id, double agg1, double agg2, double agg3, double agg4) {
        this.i_item_id = i_item_id;
        this.agg1 = agg1;
        this.agg2 = agg2;
        this.agg3 = agg3;
        this.agg4 = agg4;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof IItemIdAgg1Agg2Agg3Agg4 other)) return false;
        return Objects.equals(this.i_item_id, other.i_item_id) && Objects.equals(this.agg1, other.agg1) && Objects.equals(this.agg2, other.agg2) && Objects.equals(this.agg3, other.agg3) && Objects.equals(this.agg4, other.agg4);
    }
    @Override public int hashCode() {
        return Objects.hash(i_item_id, agg1, agg2, agg3, agg4);
    }
    int size() { return 5; }
}
public class Q26 {
    static class Group<K,V> implements Iterable<V> {
        K key;
        List<V> items;
        Group(K key, List<V> items) { this.key = key; this.items = items; }
        public Iterator<V> iterator() { return items.iterator(); }
        int size() { return items.size(); }
    }
    static Map<String,Object> asMap(Object o) {
        if (o instanceof Map<?,?> mm) {
            LinkedHashMap<String,Object> m = new LinkedHashMap<>();
            for (Map.Entry<?,?> e : mm.entrySet()) m.put(String.valueOf(e.getKey()), e.getValue());
            return m;
        }
        LinkedHashMap<String,Object> m = new LinkedHashMap<>();
        for (var f : o.getClass().getDeclaredFields()) { try { f.setAccessible(true); m.put(f.getName(), f.get(o)); } catch (Exception e) { throw new RuntimeException(e); } }
        return m;
    }
    static void saveJsonl(List<?> list) {
        for (Object obj : list) {
            Map<String,Object> m = asMap(obj);
            List<String> parts = new ArrayList<>();
            for (Map.Entry<?,?> e : m.entrySet()) { parts.add("\"" + e.getKey() + "\":" + e.getValue()); }
            System.out.println("{" + String.join(",", parts) + "}");
        }
    }
    static String toJson(Object o) {
        if (o instanceof Map<?,?> m) {
            StringJoiner j = new StringJoiner(",", "{", "}");
            for (Map.Entry<?,?> e : m.entrySet()) j.add("\"" + e.getKey() + "\":" + toJson(e.getValue()));
            return j.toString();
        } else if (o instanceof Collection<?> c) {
            StringJoiner j = new StringJoiner(",", "[", "]");
            for (var x : c) j.add(toJson(x));
            return j.toString();
        } else if (o instanceof String s) {
            return "\"" + s + "\"";
        } else if (o instanceof Number || o instanceof Boolean || o instanceof Character) {
            return String.valueOf(o);
        } else {
            Map<String,Object> m = asMap(o);
            StringJoiner j = new StringJoiner(",", "{", "}");
            for (Map.Entry<String,Object> e : m.entrySet()) j.add("\"" + e.getKey() + "\":" + toJson(e.getValue()));
            return j.toString();
        }
    }
    static void json(Object o) { System.out.println(toJson(o)); }
    public static void main(String[] args) {
    List<CsSoldDateSkCsItemSkCsBillCdemoSkCsPromoSkCsQuantityCsListPriceCsCouponAmtCsSalesPrice> catalog_sales = new ArrayList<>(Arrays.asList(new CsSoldDateSkCsItemSkCsBillCdemoSkCsPromoSkCsQuantityCsListPriceCsCouponAmtCsSalesPrice(1, 1, 1, 1, 10, 100.000000, 5.000000, 95.000000), new CsSoldDateSkCsItemSkCsBillCdemoSkCsPromoSkCsQuantityCsListPriceCsCouponAmtCsSalesPrice(1, 2, 2, 2, 5, 50.000000, 2.000000, 48.000000)));
    List<CdDemoSkCdGenderCdMaritalStatusCdEducationStatus> customer_demographics = new ArrayList<>(Arrays.asList(new CdDemoSkCdGenderCdMaritalStatusCdEducationStatus(1, "M", "S", "College"), new CdDemoSkCdGenderCdMaritalStatusCdEducationStatus(2, "F", "M", "High School")));
    List<DDateSkDYear> date_dim = new ArrayList<>(Arrays.asList(new DDateSkDYear(1, 2000)));
    List<IItemSkIItemId> item = new ArrayList<>(Arrays.asList(new IItemSkIItemId(1, "ITEM1"), new IItemSkIItemId(2, "ITEM2")));
    List<PPromoSkPChannelEmailPChannelEvent> promotion = new ArrayList<>(Arrays.asList(new PPromoSkPChannelEmailPChannelEvent(1, "N", "Y"), new PPromoSkPChannelEmailPChannelEvent(2, "Y", "N")));
    List<IItemIdAgg1Agg2Agg3Agg4> result = (new java.util.function.Supplier<List<IItemIdAgg1Agg2Agg3Agg4>>(){public List<IItemIdAgg1Agg2Agg3Agg4> get(){
    List<IItemIdAgg1Agg2Agg3Agg4> res0 = new ArrayList<>();
    Map<String,List<CsCdDIP>> groups1 = new LinkedHashMap<>();
    for (var cs : catalog_sales) {
        for (var cd : customer_demographics) {
            if (!(cs.cs_bill_cdemo_sk == cd.cd_demo_sk)) continue;
            for (var d : date_dim) {
                if (!(cs.cs_sold_date_sk == d.d_date_sk)) continue;
                for (var i : item) {
                    if (!(cs.cs_item_sk == i.i_item_sk)) continue;
                    for (var p : promotion) {
                        if (!(cs.cs_promo_sk == p.p_promo_sk)) continue;
                        if (!(Objects.equals(cd.cd_gender, "M") && Objects.equals(cd.cd_marital_status, "S") && Objects.equals(cd.cd_education_status, "College") && (Objects.equals(p.p_channel_email, "N") || Objects.equals(p.p_channel_event, "N")) && d.d_year == 2000)) continue;
                        CsCdDIP row2 = new CsCdDIP(cs, cd, d, i, p);
                        String key3 = i.i_item_id;
                        List<CsCdDIP> bucket4 = groups1.get(key3);
                        if (bucket4 == null) { bucket4 = new ArrayList<>(); groups1.put(key3, bucket4); }
                        bucket4.add(row2);
                    }
                }
            }
        }
    }
    for (Map.Entry<String,List<CsCdDIP>> __e : groups1.entrySet()) {
        String g_key = __e.getKey();
        Group<String,CsCdDIP> g = new Group<>(g_key, __e.getValue());
        res0.add(new IItemIdAgg1Agg2Agg3Agg4(g.key, (new java.util.function.Supplier<List<Object>>(){public List<Object> get(){
    List<Object> res5 = new ArrayList<>();
    for (var x : g) {
        res5.add(x.cs_quantity);
    }
    return res5;
}}).get().stream().mapToDouble(n -> ((Number)n).doubleValue()).average().orElse(0), (new java.util.function.Supplier<List<Object>>(){public List<Object> get(){
    List<Object> res6 = new ArrayList<>();
    for (var x : g) {
        res6.add(x.cs_list_price);
    }
    return res6;
}}).get().stream().mapToDouble(n -> ((Number)n).doubleValue()).average().orElse(0), (new java.util.function.Supplier<List<Object>>(){public List<Object> get(){
    List<Object> res7 = new ArrayList<>();
    for (var x : g) {
        res7.add(x.cs_coupon_amt);
    }
    return res7;
}}).get().stream().mapToDouble(n -> ((Number)n).doubleValue()).average().orElse(0), (new java.util.function.Supplier<List<Object>>(){public List<Object> get(){
    List<Object> res8 = new ArrayList<>();
    for (var x : g) {
        res8.add(x.cs_sales_price);
    }
    return res8;
}}).get().stream().mapToDouble(n -> ((Number)n).doubleValue()).average().orElse(0)));
    }
    return res0;
}}).get();
    json(result);
    if (!(Objects.equals(result, Arrays.asList(new IItemIdAgg1Agg2Agg3Agg4("ITEM1", 10.000000, 100.000000, 5.000000, 95.000000))))) throw new AssertionError("expect failed");
    }
}
