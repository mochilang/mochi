// Generated by Mochi compiler v0.10.26 on 2025-07-15T07:51:47Z
// q71.mochi
import java.util.*;

class IItemSkIBrandIdIBrandIManagerId {
    int i_item_sk;
    int i_brand_id;
    String i_brand;
    int i_manager_id;
    IItemSkIBrandIdIBrandIManagerId(int i_item_sk, int i_brand_id, String i_brand, int i_manager_id) {
        this.i_item_sk = i_item_sk;
        this.i_brand_id = i_brand_id;
        this.i_brand = i_brand;
        this.i_manager_id = i_manager_id;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof IItemSkIBrandIdIBrandIManagerId other)) return false;
        return Objects.equals(this.i_item_sk, other.i_item_sk) && Objects.equals(this.i_brand_id, other.i_brand_id) && Objects.equals(this.i_brand, other.i_brand) && Objects.equals(this.i_manager_id, other.i_manager_id);
    }
    @Override public int hashCode() {
        return Objects.hash(i_item_sk, i_brand_id, i_brand, i_manager_id);
    }
    int size() { return 4; }
}
class TTimeSkTHourTMinuteTMealTime {
    int t_time_sk;
    int t_hour;
    int t_minute;
    String t_meal_time;
    TTimeSkTHourTMinuteTMealTime(int t_time_sk, int t_hour, int t_minute, String t_meal_time) {
        this.t_time_sk = t_time_sk;
        this.t_hour = t_hour;
        this.t_minute = t_minute;
        this.t_meal_time = t_meal_time;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof TTimeSkTHourTMinuteTMealTime other)) return false;
        return Objects.equals(this.t_time_sk, other.t_time_sk) && Objects.equals(this.t_hour, other.t_hour) && Objects.equals(this.t_minute, other.t_minute) && Objects.equals(this.t_meal_time, other.t_meal_time);
    }
    @Override public int hashCode() {
        return Objects.hash(t_time_sk, t_hour, t_minute, t_meal_time);
    }
    int size() { return 4; }
}
class DDateSkDMoyDYear {
    int d_date_sk;
    int d_moy;
    int d_year;
    DDateSkDMoyDYear(int d_date_sk, int d_moy, int d_year) {
        this.d_date_sk = d_date_sk;
        this.d_moy = d_moy;
        this.d_year = d_year;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof DDateSkDMoyDYear other)) return false;
        return Objects.equals(this.d_date_sk, other.d_date_sk) && Objects.equals(this.d_moy, other.d_moy) && Objects.equals(this.d_year, other.d_year);
    }
    @Override public int hashCode() {
        return Objects.hash(d_date_sk, d_moy, d_year);
    }
    int size() { return 3; }
}
class WsExtSalesPriceWsSoldDateSkWsItemSkWsSoldTimeSk {
    double ws_ext_sales_price;
    int ws_sold_date_sk;
    int ws_item_sk;
    int ws_sold_time_sk;
    WsExtSalesPriceWsSoldDateSkWsItemSkWsSoldTimeSk(double ws_ext_sales_price, int ws_sold_date_sk, int ws_item_sk, int ws_sold_time_sk) {
        this.ws_ext_sales_price = ws_ext_sales_price;
        this.ws_sold_date_sk = ws_sold_date_sk;
        this.ws_item_sk = ws_item_sk;
        this.ws_sold_time_sk = ws_sold_time_sk;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof WsExtSalesPriceWsSoldDateSkWsItemSkWsSoldTimeSk other)) return false;
        return Objects.equals(this.ws_ext_sales_price, other.ws_ext_sales_price) && Objects.equals(this.ws_sold_date_sk, other.ws_sold_date_sk) && Objects.equals(this.ws_item_sk, other.ws_item_sk) && Objects.equals(this.ws_sold_time_sk, other.ws_sold_time_sk);
    }
    @Override public int hashCode() {
        return Objects.hash(ws_ext_sales_price, ws_sold_date_sk, ws_item_sk, ws_sold_time_sk);
    }
    int size() { return 4; }
}
class CsExtSalesPriceCsSoldDateSkCsItemSkCsSoldTimeSk {
    double cs_ext_sales_price;
    int cs_sold_date_sk;
    int cs_item_sk;
    int cs_sold_time_sk;
    CsExtSalesPriceCsSoldDateSkCsItemSkCsSoldTimeSk(double cs_ext_sales_price, int cs_sold_date_sk, int cs_item_sk, int cs_sold_time_sk) {
        this.cs_ext_sales_price = cs_ext_sales_price;
        this.cs_sold_date_sk = cs_sold_date_sk;
        this.cs_item_sk = cs_item_sk;
        this.cs_sold_time_sk = cs_sold_time_sk;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CsExtSalesPriceCsSoldDateSkCsItemSkCsSoldTimeSk other)) return false;
        return Objects.equals(this.cs_ext_sales_price, other.cs_ext_sales_price) && Objects.equals(this.cs_sold_date_sk, other.cs_sold_date_sk) && Objects.equals(this.cs_item_sk, other.cs_item_sk) && Objects.equals(this.cs_sold_time_sk, other.cs_sold_time_sk);
    }
    @Override public int hashCode() {
        return Objects.hash(cs_ext_sales_price, cs_sold_date_sk, cs_item_sk, cs_sold_time_sk);
    }
    int size() { return 4; }
}
class SsExtSalesPriceSsSoldDateSkSsItemSkSsSoldTimeSk {
    double ss_ext_sales_price;
    int ss_sold_date_sk;
    int ss_item_sk;
    int ss_sold_time_sk;
    SsExtSalesPriceSsSoldDateSkSsItemSkSsSoldTimeSk(double ss_ext_sales_price, int ss_sold_date_sk, int ss_item_sk, int ss_sold_time_sk) {
        this.ss_ext_sales_price = ss_ext_sales_price;
        this.ss_sold_date_sk = ss_sold_date_sk;
        this.ss_item_sk = ss_item_sk;
        this.ss_sold_time_sk = ss_sold_time_sk;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof SsExtSalesPriceSsSoldDateSkSsItemSkSsSoldTimeSk other)) return false;
        return Objects.equals(this.ss_ext_sales_price, other.ss_ext_sales_price) && Objects.equals(this.ss_sold_date_sk, other.ss_sold_date_sk) && Objects.equals(this.ss_item_sk, other.ss_item_sk) && Objects.equals(this.ss_sold_time_sk, other.ss_sold_time_sk);
    }
    @Override public int hashCode() {
        return Objects.hash(ss_ext_sales_price, ss_sold_date_sk, ss_item_sk, ss_sold_time_sk);
    }
    int size() { return 4; }
}
class ExtPriceItemSkTimeSk {
    double ext_price;
    int item_sk;
    int time_sk;
    ExtPriceItemSkTimeSk(double ext_price, int item_sk, int time_sk) {
        this.ext_price = ext_price;
        this.item_sk = item_sk;
        this.time_sk = time_sk;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof ExtPriceItemSkTimeSk other)) return false;
        return Objects.equals(this.ext_price, other.ext_price) && Objects.equals(this.item_sk, other.item_sk) && Objects.equals(this.time_sk, other.time_sk);
    }
    @Override public int hashCode() {
        return Objects.hash(ext_price, item_sk, time_sk);
    }
    int size() { return 3; }
}
class IT {
    IItemSkIBrandIdIBrandIManagerId i;
    TTimeSkTHourTMinuteTMealTime t;
    IT(IItemSkIBrandIdIBrandIManagerId i, TTimeSkTHourTMinuteTMealTime t) {
        this.i = i;
        this.t = t;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof IT other)) return false;
        return Objects.equals(this.i, other.i) && Objects.equals(this.t, other.t);
    }
    @Override public int hashCode() {
        return Objects.hash(i, t);
    }
    int size() { return 2; }
}
class BrandIdBrandTHourTMinute {
    int brand_id;
    String brand;
    int t_hour;
    int t_minute;
    BrandIdBrandTHourTMinute(int brand_id, String brand, int t_hour, int t_minute) {
        this.brand_id = brand_id;
        this.brand = brand;
        this.t_hour = t_hour;
        this.t_minute = t_minute;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof BrandIdBrandTHourTMinute other)) return false;
        return Objects.equals(this.brand_id, other.brand_id) && Objects.equals(this.brand, other.brand) && Objects.equals(this.t_hour, other.t_hour) && Objects.equals(this.t_minute, other.t_minute);
    }
    @Override public int hashCode() {
        return Objects.hash(brand_id, brand, t_hour, t_minute);
    }
    int size() { return 4; }
}
class IBrandIdIBrandTHourTMinuteExtPrice {
    int i_brand_id;
    String i_brand;
    int t_hour;
    int t_minute;
    int ext_price;
    IBrandIdIBrandTHourTMinuteExtPrice(int i_brand_id, String i_brand, int t_hour, int t_minute, int ext_price) {
        this.i_brand_id = i_brand_id;
        this.i_brand = i_brand;
        this.t_hour = t_hour;
        this.t_minute = t_minute;
        this.ext_price = ext_price;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof IBrandIdIBrandTHourTMinuteExtPrice other)) return false;
        return Objects.equals(this.i_brand_id, other.i_brand_id) && Objects.equals(this.i_brand, other.i_brand) && Objects.equals(this.t_hour, other.t_hour) && Objects.equals(this.t_minute, other.t_minute) && Objects.equals(this.ext_price, other.ext_price);
    }
    @Override public int hashCode() {
        return Objects.hash(i_brand_id, i_brand, t_hour, t_minute, ext_price);
    }
    int size() { return 5; }
}
public class Q71 {
    static class Group<K,V> implements Iterable<V> {
        K key;
        List<V> items;
        Group(K key, List<V> items) { this.key = key; this.items = items; }
        public Iterator<V> iterator() { return items.iterator(); }
        int size() { return items.size(); }
    }
    static Map<String,Object> asMap(Object o) {
        if (o instanceof Map<?,?> mm) {
            LinkedHashMap<String,Object> m = new LinkedHashMap<>();
            for (Map.Entry<?,?> e : mm.entrySet()) m.put(String.valueOf(e.getKey()), e.getValue());
            return m;
        }
        LinkedHashMap<String,Object> m = new LinkedHashMap<>();
        for (var f : o.getClass().getDeclaredFields()) { try { f.setAccessible(true); m.put(f.getName(), f.get(o)); } catch (Exception e) { throw new RuntimeException(e); } }
        return m;
    }
    static void saveJsonl(List<?> list) {
        for (Object obj : list) {
            Map<String,Object> m = asMap(obj);
            List<String> parts = new ArrayList<>();
            for (Map.Entry<?,?> e : m.entrySet()) { parts.add("\"" + e.getKey() + "\":" + e.getValue()); }
            System.out.println("{" + String.join(",", parts) + "}");
        }
    }
    static String toJson(Object o) {
        if (o instanceof Map<?,?> m) {
            StringJoiner j = new StringJoiner(",", "{", "}");
            for (Map.Entry<?,?> e : m.entrySet()) j.add("\"" + e.getKey() + "\":" + toJson(e.getValue()));
            return j.toString();
        } else if (o instanceof Collection<?> c) {
            StringJoiner j = new StringJoiner(",", "[", "]");
            for (var x : c) j.add(toJson(x));
            return j.toString();
        } else if (o instanceof String s) {
            return "\"" + s + "\"";
        } else if (o instanceof Number || o instanceof Boolean || o instanceof Character) {
            return String.valueOf(o);
        } else {
            Map<String,Object> m = asMap(o);
            StringJoiner j = new StringJoiner(",", "{", "}");
            for (Map.Entry<String,Object> e : m.entrySet()) j.add("\"" + e.getKey() + "\":" + toJson(e.getValue()));
            return j.toString();
        }
    }
    static void json(Object o) { System.out.println(toJson(o)); }
    public static void main(String[] args) {
    List<IItemSkIBrandIdIBrandIManagerId> item = new ArrayList<>(Arrays.asList(new IItemSkIBrandIdIBrandIManagerId(1, 10, "BrandA", 1), new IItemSkIBrandIdIBrandIManagerId(2, 20, "BrandB", 1)));
    List<TTimeSkTHourTMinuteTMealTime> time_dim = new ArrayList<>(Arrays.asList(new TTimeSkTHourTMinuteTMealTime(1, 8, 30, "breakfast"), new TTimeSkTHourTMinuteTMealTime(2, 18, 0, "dinner"), new TTimeSkTHourTMinuteTMealTime(3, 12, 0, "lunch")));
    List<DDateSkDMoyDYear> date_dim = new ArrayList<>(Arrays.asList(new DDateSkDMoyDYear(1, 12, 1998)));
    List<WsExtSalesPriceWsSoldDateSkWsItemSkWsSoldTimeSk> web_sales = new ArrayList<>(Arrays.asList(new WsExtSalesPriceWsSoldDateSkWsItemSkWsSoldTimeSk(100.000000, 1, 1, 1)));
    List<CsExtSalesPriceCsSoldDateSkCsItemSkCsSoldTimeSk> catalog_sales = new ArrayList<>(Arrays.asList(new CsExtSalesPriceCsSoldDateSkCsItemSkCsSoldTimeSk(200.000000, 1, 1, 2)));
    List<SsExtSalesPriceSsSoldDateSkSsItemSkSsSoldTimeSk> store_sales = new ArrayList<>(Arrays.asList(new SsExtSalesPriceSsSoldDateSkSsItemSkSsSoldTimeSk(150.000000, 1, 2, 1)));
    int month = 12;
    int year = 1998;
    List<ExtPriceItemSkTimeSk> union_sales = java.util.stream.Stream.concat(java.util.stream.Stream.concat((new java.util.function.Supplier<List<ExtPriceItemSkTimeSk>>(){public List<ExtPriceItemSkTimeSk> get(){
    List<ExtPriceItemSkTimeSk> res0 = new ArrayList<>();
    for (var ws : web_sales) {
        for (var d : date_dim) {
            if (!(d.d_date_sk == ws.ws_sold_date_sk)) continue;
            if (!(d.d_moy == month && d.d_year == year)) continue;
            res0.add(new ExtPriceItemSkTimeSk(ws.ws_ext_sales_price, ws.ws_item_sk, ws.ws_sold_time_sk));
        }
    }
    return res0;
}}).get().stream(), (new java.util.function.Supplier<List<ExtPriceItemSkTimeSk>>(){public List<ExtPriceItemSkTimeSk> get(){
    List<ExtPriceItemSkTimeSk> res1 = new ArrayList<>();
    for (var cs : catalog_sales) {
        for (var d : date_dim) {
            if (!(d.d_date_sk == cs.cs_sold_date_sk)) continue;
            if (!(d.d_moy == month && d.d_year == year)) continue;
            res1.add(new ExtPriceItemSkTimeSk(cs.cs_ext_sales_price, cs.cs_item_sk, cs.cs_sold_time_sk));
        }
    }
    return res1;
}}).get().stream()).collect(java.util.stream.Collectors.toList()).stream(), (new java.util.function.Supplier<List<ExtPriceItemSkTimeSk>>(){public List<ExtPriceItemSkTimeSk> get(){
    List<ExtPriceItemSkTimeSk> res2 = new ArrayList<>();
    for (var ss : store_sales) {
        for (var d : date_dim) {
            if (!(d.d_date_sk == ss.ss_sold_date_sk)) continue;
            if (!(d.d_moy == month && d.d_year == year)) continue;
            res2.add(new ExtPriceItemSkTimeSk(ss.ss_ext_sales_price, ss.ss_item_sk, ss.ss_sold_time_sk));
        }
    }
    return res2;
}}).get().stream()).collect(java.util.stream.Collectors.toList());
    List<IBrandIdIBrandTHourTMinuteExtPrice> result = (new java.util.function.Supplier<List<IBrandIdIBrandTHourTMinuteExtPrice>>(){public List<IBrandIdIBrandTHourTMinuteExtPrice> get(){
    List<IBrandIdIBrandTHourTMinuteExtPrice> res3 = new ArrayList<>();
    Map<BrandIdBrandTHourTMinute,List<IT>> groups4 = new LinkedHashMap<>();
    for (var i : item) {
        for (var s : union_sales) {
            if (!(s.item_sk == i.i_item_sk)) continue;
            for (var t : time_dim) {
                if (!(t.t_time_sk == s.time_sk)) continue;
                if (!(i.i_manager_id == 1 && (Objects.equals(t.t_meal_time, "breakfast") || Objects.equals(t.t_meal_time, "dinner")))) continue;
                IT row5 = new IT(i, t);
                BrandIdBrandTHourTMinute key6 = new BrandIdBrandTHourTMinute(i.i_brand_id, i.i_brand, t.t_hour, t.t_minute);
                List<IT> bucket7 = groups4.get(key6);
                if (bucket7 == null) { bucket7 = new ArrayList<>(); groups4.put(key6, bucket7); }
                bucket7.add(row5);
            }
        }
    }
    for (Map.Entry<BrandIdBrandTHourTMinute,List<IT>> __e : groups4.entrySet()) {
        BrandIdBrandTHourTMinute g_key = __e.getKey();
        Group<BrandIdBrandTHourTMinute,IT> g = new Group<>(g_key, __e.getValue());
        res3.add(new IBrandIdIBrandTHourTMinuteExtPrice(g.key.brand_id, g.key.brand, g.key.t_hour, g.key.t_minute, (new java.util.function.Supplier<List<Object>>(){public List<Object> get(){
    List<Object> res8 = new ArrayList<>();
    for (var x : g) {
        res8.add(x.s.ext_price);
    }
    return res8;
}}).get().stream().mapToInt(n -> ((Number)n).intValue()).sum()));
    }
    return res3;
}}).get();
    json(result);
    if (!(Objects.equals(result, Arrays.asList(new IBrandIdIBrandTHourTMinuteExtPrice(10, "BrandA", 18, 0, 200.000000), new IBrandIdIBrandTHourTMinuteExtPrice(20, "BrandB", 8, 30, 150.000000), new IBrandIdIBrandTHourTMinuteExtPrice(10, "BrandA", 8, 30, 100.000000))))) throw new AssertionError("expect failed");
    }
}
