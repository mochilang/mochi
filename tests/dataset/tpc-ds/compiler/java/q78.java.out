// Generated by Mochi compiler v0.10.26 on 2025-07-15T07:51:53Z
// q78.mochi
import java.util.*;

class SsSoldYearSsItemSkSsCustomerSkSsQtySsWcSsSp {
    int ss_sold_year;
    int ss_item_sk;
    int ss_customer_sk;
    int ss_qty;
    double ss_wc;
    double ss_sp;
    SsSoldYearSsItemSkSsCustomerSkSsQtySsWcSsSp(int ss_sold_year, int ss_item_sk, int ss_customer_sk, int ss_qty, double ss_wc, double ss_sp) {
        this.ss_sold_year = ss_sold_year;
        this.ss_item_sk = ss_item_sk;
        this.ss_customer_sk = ss_customer_sk;
        this.ss_qty = ss_qty;
        this.ss_wc = ss_wc;
        this.ss_sp = ss_sp;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof SsSoldYearSsItemSkSsCustomerSkSsQtySsWcSsSp other)) return false;
        return Objects.equals(this.ss_sold_year, other.ss_sold_year) && Objects.equals(this.ss_item_sk, other.ss_item_sk) && Objects.equals(this.ss_customer_sk, other.ss_customer_sk) && Objects.equals(this.ss_qty, other.ss_qty) && Objects.equals(this.ss_wc, other.ss_wc) && Objects.equals(this.ss_sp, other.ss_sp);
    }
    @Override public int hashCode() {
        return Objects.hash(ss_sold_year, ss_item_sk, ss_customer_sk, ss_qty, ss_wc, ss_sp);
    }
    int size() { return 6; }
}
class WsSoldYearWsItemSkWsCustomerSkWsQtyWsWcWsSp {
    int ws_sold_year;
    int ws_item_sk;
    int ws_customer_sk;
    int ws_qty;
    double ws_wc;
    double ws_sp;
    WsSoldYearWsItemSkWsCustomerSkWsQtyWsWcWsSp(int ws_sold_year, int ws_item_sk, int ws_customer_sk, int ws_qty, double ws_wc, double ws_sp) {
        this.ws_sold_year = ws_sold_year;
        this.ws_item_sk = ws_item_sk;
        this.ws_customer_sk = ws_customer_sk;
        this.ws_qty = ws_qty;
        this.ws_wc = ws_wc;
        this.ws_sp = ws_sp;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof WsSoldYearWsItemSkWsCustomerSkWsQtyWsWcWsSp other)) return false;
        return Objects.equals(this.ws_sold_year, other.ws_sold_year) && Objects.equals(this.ws_item_sk, other.ws_item_sk) && Objects.equals(this.ws_customer_sk, other.ws_customer_sk) && Objects.equals(this.ws_qty, other.ws_qty) && Objects.equals(this.ws_wc, other.ws_wc) && Objects.equals(this.ws_sp, other.ws_sp);
    }
    @Override public int hashCode() {
        return Objects.hash(ws_sold_year, ws_item_sk, ws_customer_sk, ws_qty, ws_wc, ws_sp);
    }
    int size() { return 6; }
}
class CsSoldYearCsItemSkCsCustomerSkCsQtyCsWcCsSp {
    int cs_sold_year;
    int cs_item_sk;
    int cs_customer_sk;
    int cs_qty;
    double cs_wc;
    double cs_sp;
    CsSoldYearCsItemSkCsCustomerSkCsQtyCsWcCsSp(int cs_sold_year, int cs_item_sk, int cs_customer_sk, int cs_qty, double cs_wc, double cs_sp) {
        this.cs_sold_year = cs_sold_year;
        this.cs_item_sk = cs_item_sk;
        this.cs_customer_sk = cs_customer_sk;
        this.cs_qty = cs_qty;
        this.cs_wc = cs_wc;
        this.cs_sp = cs_sp;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CsSoldYearCsItemSkCsCustomerSkCsQtyCsWcCsSp other)) return false;
        return Objects.equals(this.cs_sold_year, other.cs_sold_year) && Objects.equals(this.cs_item_sk, other.cs_item_sk) && Objects.equals(this.cs_customer_sk, other.cs_customer_sk) && Objects.equals(this.cs_qty, other.cs_qty) && Objects.equals(this.cs_wc, other.cs_wc) && Objects.equals(this.cs_sp, other.cs_sp);
    }
    @Override public int hashCode() {
        return Objects.hash(cs_sold_year, cs_item_sk, cs_customer_sk, cs_qty, cs_wc, cs_sp);
    }
    int size() { return 6; }
}
class SsSoldYearSsItemSkSsCustomerSkRatioStoreQtyStoreWholesaleCostStoreSalesPriceOtherChanQtyOtherChanWholesaleCostOtherChanSalesPrice {
    int ss_sold_year;
    int ss_item_sk;
    int ss_customer_sk;
    double ratio;
    int store_qty;
    double store_wholesale_cost;
    double store_sales_price;
    int other_chan_qty;
    int other_chan_wholesale_cost;
    int other_chan_sales_price;
    SsSoldYearSsItemSkSsCustomerSkRatioStoreQtyStoreWholesaleCostStoreSalesPriceOtherChanQtyOtherChanWholesaleCostOtherChanSalesPrice(int ss_sold_year, int ss_item_sk, int ss_customer_sk, double ratio, int store_qty, double store_wholesale_cost, double store_sales_price, int other_chan_qty, int other_chan_wholesale_cost, int other_chan_sales_price) {
        this.ss_sold_year = ss_sold_year;
        this.ss_item_sk = ss_item_sk;
        this.ss_customer_sk = ss_customer_sk;
        this.ratio = ratio;
        this.store_qty = store_qty;
        this.store_wholesale_cost = store_wholesale_cost;
        this.store_sales_price = store_sales_price;
        this.other_chan_qty = other_chan_qty;
        this.other_chan_wholesale_cost = other_chan_wholesale_cost;
        this.other_chan_sales_price = other_chan_sales_price;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof SsSoldYearSsItemSkSsCustomerSkRatioStoreQtyStoreWholesaleCostStoreSalesPriceOtherChanQtyOtherChanWholesaleCostOtherChanSalesPrice other)) return false;
        return Objects.equals(this.ss_sold_year, other.ss_sold_year) && Objects.equals(this.ss_item_sk, other.ss_item_sk) && Objects.equals(this.ss_customer_sk, other.ss_customer_sk) && Objects.equals(this.ratio, other.ratio) && Objects.equals(this.store_qty, other.store_qty) && Objects.equals(this.store_wholesale_cost, other.store_wholesale_cost) && Objects.equals(this.store_sales_price, other.store_sales_price) && Objects.equals(this.other_chan_qty, other.other_chan_qty) && Objects.equals(this.other_chan_wholesale_cost, other.other_chan_wholesale_cost) && Objects.equals(this.other_chan_sales_price, other.other_chan_sales_price);
    }
    @Override public int hashCode() {
        return Objects.hash(ss_sold_year, ss_item_sk, ss_customer_sk, ratio, store_qty, store_wholesale_cost, store_sales_price, other_chan_qty, other_chan_wholesale_cost, other_chan_sales_price);
    }
    int size() { return 10; }
}
public class Q78 {
    static Map<String,Object> asMap(Object o) {
        if (o instanceof Map<?,?> mm) {
            LinkedHashMap<String,Object> m = new LinkedHashMap<>();
            for (Map.Entry<?,?> e : mm.entrySet()) m.put(String.valueOf(e.getKey()), e.getValue());
            return m;
        }
        LinkedHashMap<String,Object> m = new LinkedHashMap<>();
        for (var f : o.getClass().getDeclaredFields()) { try { f.setAccessible(true); m.put(f.getName(), f.get(o)); } catch (Exception e) { throw new RuntimeException(e); } }
        return m;
    }
    static void saveJsonl(List<?> list) {
        for (Object obj : list) {
            Map<String,Object> m = asMap(obj);
            List<String> parts = new ArrayList<>();
            for (Map.Entry<?,?> e : m.entrySet()) { parts.add("\"" + e.getKey() + "\":" + e.getValue()); }
            System.out.println("{" + String.join(",", parts) + "}");
        }
    }
    static String toJson(Object o) {
        if (o instanceof Map<?,?> m) {
            StringJoiner j = new StringJoiner(",", "{", "}");
            for (Map.Entry<?,?> e : m.entrySet()) j.add("\"" + e.getKey() + "\":" + toJson(e.getValue()));
            return j.toString();
        } else if (o instanceof Collection<?> c) {
            StringJoiner j = new StringJoiner(",", "[", "]");
            for (var x : c) j.add(toJson(x));
            return j.toString();
        } else if (o instanceof String s) {
            return "\"" + s + "\"";
        } else if (o instanceof Number || o instanceof Boolean || o instanceof Character) {
            return String.valueOf(o);
        } else {
            Map<String,Object> m = asMap(o);
            StringJoiner j = new StringJoiner(",", "{", "}");
            for (Map.Entry<String,Object> e : m.entrySet()) j.add("\"" + e.getKey() + "\":" + toJson(e.getValue()));
            return j.toString();
        }
    }
    static void json(Object o) { System.out.println(toJson(o)); }
    public static void main(String[] args) {
    List<SsSoldYearSsItemSkSsCustomerSkSsQtySsWcSsSp> ss = new ArrayList<>(Arrays.asList(new SsSoldYearSsItemSkSsCustomerSkSsQtySsWcSsSp(1998, 1, 1, 10, 50.000000, 100.000000)));
    List<WsSoldYearWsItemSkWsCustomerSkWsQtyWsWcWsSp> ws = new ArrayList<>(Arrays.asList(new WsSoldYearWsItemSkWsCustomerSkWsQtyWsWcWsSp(1998, 1, 1, 5, 25.000000, 50.000000)));
    List<CsSoldYearCsItemSkCsCustomerSkCsQtyCsWcCsSp> cs = new ArrayList<>(Arrays.asList(new CsSoldYearCsItemSkCsCustomerSkCsQtyCsWcCsSp(1998, 1, 1, 3, 15.000000, 30.000000)));
    List<SsSoldYearSsItemSkSsCustomerSkRatioStoreQtyStoreWholesaleCostStoreSalesPriceOtherChanQtyOtherChanWholesaleCostOtherChanSalesPrice> result = (new java.util.function.Supplier<List<SsSoldYearSsItemSkSsCustomerSkRatioStoreQtyStoreWholesaleCostStoreSalesPriceOtherChanQtyOtherChanWholesaleCostOtherChanSalesPrice>>(){public List<SsSoldYearSsItemSkSsCustomerSkRatioStoreQtyStoreWholesaleCostStoreSalesPriceOtherChanQtyOtherChanWholesaleCostOtherChanSalesPrice> get(){
    List<SsSoldYearSsItemSkSsCustomerSkRatioStoreQtyStoreWholesaleCostStoreSalesPriceOtherChanQtyOtherChanWholesaleCostOtherChanSalesPrice> res0 = new ArrayList<>();
    for (var s : ss) {
        List<WsSoldYearWsItemSkWsCustomerSkWsQtyWsWcWsSp> tmp1 = new ArrayList<>();
        for (var it2 : ws) {
            var w = it2;
            if (!(w.ws_sold_year == s.ss_sold_year && w.ws_item_sk == s.ss_item_sk && w.ws_customer_sk == s.ss_customer_sk)) continue;
            tmp1.add(it2);
        }
        if (tmp1.isEmpty()) tmp1.add(null);
        for (var w : tmp1) {
            List<CsSoldYearCsItemSkCsCustomerSkCsQtyCsWcCsSp> tmp3 = new ArrayList<>();
            for (var it4 : cs) {
                var c = it4;
                if (!(c.cs_sold_year == s.ss_sold_year && c.cs_item_sk == s.ss_item_sk && c.cs_customer_sk == s.ss_customer_sk)) continue;
                tmp3.add(it4);
            }
            if (tmp3.isEmpty()) tmp3.add(null);
            for (var c : tmp3) {
                if (!((((Objects.equals(w, null) ? 0 : w.ws_qty)) > 0 || ((Objects.equals(c, null) ? 0 : c.cs_qty)) > 0) && s.ss_sold_year == 1998)) continue;
                res0.add(new SsSoldYearSsItemSkSsCustomerSkRatioStoreQtyStoreWholesaleCostStoreSalesPriceOtherChanQtyOtherChanWholesaleCostOtherChanSalesPrice(s.ss_sold_year, s.ss_item_sk, s.ss_customer_sk, s.ss_qty / (((Objects.equals(w, null) ? 0 : w.ws_qty)) + ((Objects.equals(c, null) ? 0 : c.cs_qty))), s.ss_qty, s.ss_wc, s.ss_sp, ((Objects.equals(w, null) ? 0 : w.ws_qty)) + ((Objects.equals(c, null) ? 0 : c.cs_qty)), ((Objects.equals(w, null) ? 0.000000 : w.ws_wc)) + ((Objects.equals(c, null) ? 0.000000 : c.cs_wc)), ((Objects.equals(w, null) ? 0.000000 : w.ws_sp)) + ((Objects.equals(c, null) ? 0.000000 : c.cs_sp))));
            }
        }
    }
    return res0;
}}).get();
    json(result);
    if (!(Objects.equals(result, Arrays.asList(new SsSoldYearSsItemSkSsCustomerSkRatioStoreQtyStoreWholesaleCostStoreSalesPriceOtherChanQtyOtherChanWholesaleCostOtherChanSalesPrice(1998, 1, 1, 1.250000, 10, 50.000000, 100.000000, 8, 40.000000, 80.000000))))) throw new AssertionError("expect failed");
    }
}
