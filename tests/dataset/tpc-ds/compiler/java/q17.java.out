// Generated by Mochi compiler v0.10.26 on 2025-07-15T07:51:02Z
// q17.mochi
import java.util.*;

class StoreSale {
    int ss_sold_date_sk;
    int ss_item_sk;
    int ss_customer_sk;
    int ss_ticket_number;
    int ss_quantity;
    int ss_store_sk;
    StoreSale(int ss_sold_date_sk, int ss_item_sk, int ss_customer_sk, int ss_ticket_number, int ss_quantity, int ss_store_sk) {
        this.ss_sold_date_sk = ss_sold_date_sk;
        this.ss_item_sk = ss_item_sk;
        this.ss_customer_sk = ss_customer_sk;
        this.ss_ticket_number = ss_ticket_number;
        this.ss_quantity = ss_quantity;
        this.ss_store_sk = ss_store_sk;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof StoreSale other)) return false;
        return Objects.equals(this.ss_sold_date_sk, other.ss_sold_date_sk) && Objects.equals(this.ss_item_sk, other.ss_item_sk) && Objects.equals(this.ss_customer_sk, other.ss_customer_sk) && Objects.equals(this.ss_ticket_number, other.ss_ticket_number) && Objects.equals(this.ss_quantity, other.ss_quantity) && Objects.equals(this.ss_store_sk, other.ss_store_sk);
    }
    @Override public int hashCode() {
        return Objects.hash(ss_sold_date_sk, ss_item_sk, ss_customer_sk, ss_ticket_number, ss_quantity, ss_store_sk);
    }
}
class StoreReturn {
    int sr_returned_date_sk;
    int sr_customer_sk;
    int sr_item_sk;
    int sr_ticket_number;
    int sr_return_quantity;
    StoreReturn(int sr_returned_date_sk, int sr_customer_sk, int sr_item_sk, int sr_ticket_number, int sr_return_quantity) {
        this.sr_returned_date_sk = sr_returned_date_sk;
        this.sr_customer_sk = sr_customer_sk;
        this.sr_item_sk = sr_item_sk;
        this.sr_ticket_number = sr_ticket_number;
        this.sr_return_quantity = sr_return_quantity;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof StoreReturn other)) return false;
        return Objects.equals(this.sr_returned_date_sk, other.sr_returned_date_sk) && Objects.equals(this.sr_customer_sk, other.sr_customer_sk) && Objects.equals(this.sr_item_sk, other.sr_item_sk) && Objects.equals(this.sr_ticket_number, other.sr_ticket_number) && Objects.equals(this.sr_return_quantity, other.sr_return_quantity);
    }
    @Override public int hashCode() {
        return Objects.hash(sr_returned_date_sk, sr_customer_sk, sr_item_sk, sr_ticket_number, sr_return_quantity);
    }
}
class CatalogSale {
    int cs_sold_date_sk;
    int cs_item_sk;
    int cs_bill_customer_sk;
    int cs_quantity;
    CatalogSale(int cs_sold_date_sk, int cs_item_sk, int cs_bill_customer_sk, int cs_quantity) {
        this.cs_sold_date_sk = cs_sold_date_sk;
        this.cs_item_sk = cs_item_sk;
        this.cs_bill_customer_sk = cs_bill_customer_sk;
        this.cs_quantity = cs_quantity;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CatalogSale other)) return false;
        return Objects.equals(this.cs_sold_date_sk, other.cs_sold_date_sk) && Objects.equals(this.cs_item_sk, other.cs_item_sk) && Objects.equals(this.cs_bill_customer_sk, other.cs_bill_customer_sk) && Objects.equals(this.cs_quantity, other.cs_quantity);
    }
    @Override public int hashCode() {
        return Objects.hash(cs_sold_date_sk, cs_item_sk, cs_bill_customer_sk, cs_quantity);
    }
}
class DateDim {
    int d_date_sk;
    String d_quarter_name;
    DateDim(int d_date_sk, String d_quarter_name) {
        this.d_date_sk = d_date_sk;
        this.d_quarter_name = d_quarter_name;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof DateDim other)) return false;
        return Objects.equals(this.d_date_sk, other.d_date_sk) && Objects.equals(this.d_quarter_name, other.d_quarter_name);
    }
    @Override public int hashCode() {
        return Objects.hash(d_date_sk, d_quarter_name);
    }
}
class Store {
    int s_store_sk;
    String s_state;
    Store(int s_store_sk, String s_state) {
        this.s_store_sk = s_store_sk;
        this.s_state = s_state;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Store other)) return false;
        return Objects.equals(this.s_store_sk, other.s_store_sk) && Objects.equals(this.s_state, other.s_state);
    }
    @Override public int hashCode() {
        return Objects.hash(s_store_sk, s_state);
    }
}
class Item {
    int i_item_sk;
    String i_item_id;
    String i_item_desc;
    Item(int i_item_sk, String i_item_id, String i_item_desc) {
        this.i_item_sk = i_item_sk;
        this.i_item_id = i_item_id;
        this.i_item_desc = i_item_desc;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Item other)) return false;
        return Objects.equals(this.i_item_sk, other.i_item_sk) && Objects.equals(this.i_item_id, other.i_item_id) && Objects.equals(this.i_item_desc, other.i_item_desc);
    }
    @Override public int hashCode() {
        return Objects.hash(i_item_sk, i_item_id, i_item_desc);
    }
}
class SsSoldDateSkSsItemSkSsCustomerSkSsTicketNumberSsQuantitySsStoreSk {
    int ss_sold_date_sk;
    int ss_item_sk;
    int ss_customer_sk;
    int ss_ticket_number;
    int ss_quantity;
    int ss_store_sk;
    SsSoldDateSkSsItemSkSsCustomerSkSsTicketNumberSsQuantitySsStoreSk(int ss_sold_date_sk, int ss_item_sk, int ss_customer_sk, int ss_ticket_number, int ss_quantity, int ss_store_sk) {
        this.ss_sold_date_sk = ss_sold_date_sk;
        this.ss_item_sk = ss_item_sk;
        this.ss_customer_sk = ss_customer_sk;
        this.ss_ticket_number = ss_ticket_number;
        this.ss_quantity = ss_quantity;
        this.ss_store_sk = ss_store_sk;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof SsSoldDateSkSsItemSkSsCustomerSkSsTicketNumberSsQuantitySsStoreSk other)) return false;
        return Objects.equals(this.ss_sold_date_sk, other.ss_sold_date_sk) && Objects.equals(this.ss_item_sk, other.ss_item_sk) && Objects.equals(this.ss_customer_sk, other.ss_customer_sk) && Objects.equals(this.ss_ticket_number, other.ss_ticket_number) && Objects.equals(this.ss_quantity, other.ss_quantity) && Objects.equals(this.ss_store_sk, other.ss_store_sk);
    }
    @Override public int hashCode() {
        return Objects.hash(ss_sold_date_sk, ss_item_sk, ss_customer_sk, ss_ticket_number, ss_quantity, ss_store_sk);
    }
    int size() { return 6; }
}
class SrReturnedDateSkSrCustomerSkSrItemSkSrTicketNumberSrReturnQuantity {
    int sr_returned_date_sk;
    int sr_customer_sk;
    int sr_item_sk;
    int sr_ticket_number;
    int sr_return_quantity;
    SrReturnedDateSkSrCustomerSkSrItemSkSrTicketNumberSrReturnQuantity(int sr_returned_date_sk, int sr_customer_sk, int sr_item_sk, int sr_ticket_number, int sr_return_quantity) {
        this.sr_returned_date_sk = sr_returned_date_sk;
        this.sr_customer_sk = sr_customer_sk;
        this.sr_item_sk = sr_item_sk;
        this.sr_ticket_number = sr_ticket_number;
        this.sr_return_quantity = sr_return_quantity;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof SrReturnedDateSkSrCustomerSkSrItemSkSrTicketNumberSrReturnQuantity other)) return false;
        return Objects.equals(this.sr_returned_date_sk, other.sr_returned_date_sk) && Objects.equals(this.sr_customer_sk, other.sr_customer_sk) && Objects.equals(this.sr_item_sk, other.sr_item_sk) && Objects.equals(this.sr_ticket_number, other.sr_ticket_number) && Objects.equals(this.sr_return_quantity, other.sr_return_quantity);
    }
    @Override public int hashCode() {
        return Objects.hash(sr_returned_date_sk, sr_customer_sk, sr_item_sk, sr_ticket_number, sr_return_quantity);
    }
    int size() { return 5; }
}
class CsSoldDateSkCsItemSkCsBillCustomerSkCsQuantity {
    int cs_sold_date_sk;
    int cs_item_sk;
    int cs_bill_customer_sk;
    int cs_quantity;
    CsSoldDateSkCsItemSkCsBillCustomerSkCsQuantity(int cs_sold_date_sk, int cs_item_sk, int cs_bill_customer_sk, int cs_quantity) {
        this.cs_sold_date_sk = cs_sold_date_sk;
        this.cs_item_sk = cs_item_sk;
        this.cs_bill_customer_sk = cs_bill_customer_sk;
        this.cs_quantity = cs_quantity;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CsSoldDateSkCsItemSkCsBillCustomerSkCsQuantity other)) return false;
        return Objects.equals(this.cs_sold_date_sk, other.cs_sold_date_sk) && Objects.equals(this.cs_item_sk, other.cs_item_sk) && Objects.equals(this.cs_bill_customer_sk, other.cs_bill_customer_sk) && Objects.equals(this.cs_quantity, other.cs_quantity);
    }
    @Override public int hashCode() {
        return Objects.hash(cs_sold_date_sk, cs_item_sk, cs_bill_customer_sk, cs_quantity);
    }
    int size() { return 4; }
}
class DDateSkDQuarterName {
    int d_date_sk;
    String d_quarter_name;
    DDateSkDQuarterName(int d_date_sk, String d_quarter_name) {
        this.d_date_sk = d_date_sk;
        this.d_quarter_name = d_quarter_name;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof DDateSkDQuarterName other)) return false;
        return Objects.equals(this.d_date_sk, other.d_date_sk) && Objects.equals(this.d_quarter_name, other.d_quarter_name);
    }
    @Override public int hashCode() {
        return Objects.hash(d_date_sk, d_quarter_name);
    }
    int size() { return 2; }
}
class SStoreSkSState {
    int s_store_sk;
    String s_state;
    SStoreSkSState(int s_store_sk, String s_state) {
        this.s_store_sk = s_store_sk;
        this.s_state = s_state;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof SStoreSkSState other)) return false;
        return Objects.equals(this.s_store_sk, other.s_store_sk) && Objects.equals(this.s_state, other.s_state);
    }
    @Override public int hashCode() {
        return Objects.hash(s_store_sk, s_state);
    }
    int size() { return 2; }
}
class IItemSkIItemIdIItemDesc {
    int i_item_sk;
    String i_item_id;
    String i_item_desc;
    IItemSkIItemIdIItemDesc(int i_item_sk, String i_item_id, String i_item_desc) {
        this.i_item_sk = i_item_sk;
        this.i_item_id = i_item_id;
        this.i_item_desc = i_item_desc;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof IItemSkIItemIdIItemDesc other)) return false;
        return Objects.equals(this.i_item_sk, other.i_item_sk) && Objects.equals(this.i_item_id, other.i_item_id) && Objects.equals(this.i_item_desc, other.i_item_desc);
    }
    @Override public int hashCode() {
        return Objects.hash(i_item_sk, i_item_id, i_item_desc);
    }
    int size() { return 3; }
}
class QtyRetCsqIItemIdIItemDescSState {
    int qty;
    int ret;
    int csq;
    String i_item_id;
    String i_item_desc;
    String s_state;
    QtyRetCsqIItemIdIItemDescSState(int qty, int ret, int csq, String i_item_id, String i_item_desc, String s_state) {
        this.qty = qty;
        this.ret = ret;
        this.csq = csq;
        this.i_item_id = i_item_id;
        this.i_item_desc = i_item_desc;
        this.s_state = s_state;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof QtyRetCsqIItemIdIItemDescSState other)) return false;
        return Objects.equals(this.qty, other.qty) && Objects.equals(this.ret, other.ret) && Objects.equals(this.csq, other.csq) && Objects.equals(this.i_item_id, other.i_item_id) && Objects.equals(this.i_item_desc, other.i_item_desc) && Objects.equals(this.s_state, other.s_state);
    }
    @Override public int hashCode() {
        return Objects.hash(qty, ret, csq, i_item_id, i_item_desc, s_state);
    }
    int size() { return 6; }
}
class IItemIdIItemDescSState {
    String i_item_id;
    String i_item_desc;
    String s_state;
    IItemIdIItemDescSState(String i_item_id, String i_item_desc, String s_state) {
        this.i_item_id = i_item_id;
        this.i_item_desc = i_item_desc;
        this.s_state = s_state;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof IItemIdIItemDescSState other)) return false;
        return Objects.equals(this.i_item_id, other.i_item_id) && Objects.equals(this.i_item_desc, other.i_item_desc) && Objects.equals(this.s_state, other.s_state);
    }
    @Override public int hashCode() {
        return Objects.hash(i_item_id, i_item_desc, s_state);
    }
    int size() { return 3; }
}
class IItemIdIItemDescSStateStoreSalesQuantitycountStoreSalesQuantityaveStoreSalesQuantitystdevStoreSalesQuantitycovStoreReturnsQuantitycountStoreReturnsQuantityaveStoreReturnsQuantitystdevStoreReturnsQuantitycovCatalogSalesQuantitycountCatalogSalesQuantityaveCatalogSalesQuantitystdevCatalogSalesQuantitycov {
    String i_item_id;
    String i_item_desc;
    String s_state;
    int store_sales_quantitycount;
    double store_sales_quantityave;
    double store_sales_quantitystdev;
    double store_sales_quantitycov;
    int store_returns_quantitycount;
    double store_returns_quantityave;
    double store_returns_quantitystdev;
    double store_returns_quantitycov;
    int catalog_sales_quantitycount;
    double catalog_sales_quantityave;
    double catalog_sales_quantitystdev;
    double catalog_sales_quantitycov;
    IItemIdIItemDescSStateStoreSalesQuantitycountStoreSalesQuantityaveStoreSalesQuantitystdevStoreSalesQuantitycovStoreReturnsQuantitycountStoreReturnsQuantityaveStoreReturnsQuantitystdevStoreReturnsQuantitycovCatalogSalesQuantitycountCatalogSalesQuantityaveCatalogSalesQuantitystdevCatalogSalesQuantitycov(String i_item_id, String i_item_desc, String s_state, int store_sales_quantitycount, double store_sales_quantityave, double store_sales_quantitystdev, double store_sales_quantitycov, int store_returns_quantitycount, double store_returns_quantityave, double store_returns_quantitystdev, double store_returns_quantitycov, int catalog_sales_quantitycount, double catalog_sales_quantityave, double catalog_sales_quantitystdev, double catalog_sales_quantitycov) {
        this.i_item_id = i_item_id;
        this.i_item_desc = i_item_desc;
        this.s_state = s_state;
        this.store_sales_quantitycount = store_sales_quantitycount;
        this.store_sales_quantityave = store_sales_quantityave;
        this.store_sales_quantitystdev = store_sales_quantitystdev;
        this.store_sales_quantitycov = store_sales_quantitycov;
        this.store_returns_quantitycount = store_returns_quantitycount;
        this.store_returns_quantityave = store_returns_quantityave;
        this.store_returns_quantitystdev = store_returns_quantitystdev;
        this.store_returns_quantitycov = store_returns_quantitycov;
        this.catalog_sales_quantitycount = catalog_sales_quantitycount;
        this.catalog_sales_quantityave = catalog_sales_quantityave;
        this.catalog_sales_quantitystdev = catalog_sales_quantitystdev;
        this.catalog_sales_quantitycov = catalog_sales_quantitycov;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof IItemIdIItemDescSStateStoreSalesQuantitycountStoreSalesQuantityaveStoreSalesQuantitystdevStoreSalesQuantitycovStoreReturnsQuantitycountStoreReturnsQuantityaveStoreReturnsQuantitystdevStoreReturnsQuantitycovCatalogSalesQuantitycountCatalogSalesQuantityaveCatalogSalesQuantitystdevCatalogSalesQuantitycov other)) return false;
        return Objects.equals(this.i_item_id, other.i_item_id) && Objects.equals(this.i_item_desc, other.i_item_desc) && Objects.equals(this.s_state, other.s_state) && Objects.equals(this.store_sales_quantitycount, other.store_sales_quantitycount) && Objects.equals(this.store_sales_quantityave, other.store_sales_quantityave) && Objects.equals(this.store_sales_quantitystdev, other.store_sales_quantitystdev) && Objects.equals(this.store_sales_quantitycov, other.store_sales_quantitycov) && Objects.equals(this.store_returns_quantitycount, other.store_returns_quantitycount) && Objects.equals(this.store_returns_quantityave, other.store_returns_quantityave) && Objects.equals(this.store_returns_quantitystdev, other.store_returns_quantitystdev) && Objects.equals(this.store_returns_quantitycov, other.store_returns_quantitycov) && Objects.equals(this.catalog_sales_quantitycount, other.catalog_sales_quantitycount) && Objects.equals(this.catalog_sales_quantityave, other.catalog_sales_quantityave) && Objects.equals(this.catalog_sales_quantitystdev, other.catalog_sales_quantitystdev) && Objects.equals(this.catalog_sales_quantitycov, other.catalog_sales_quantitycov);
    }
    @Override public int hashCode() {
        return Objects.hash(i_item_id, i_item_desc, s_state, store_sales_quantitycount, store_sales_quantityave, store_sales_quantitystdev, store_sales_quantitycov, store_returns_quantitycount, store_returns_quantityave, store_returns_quantitystdev, store_returns_quantitycov, catalog_sales_quantitycount, catalog_sales_quantityave, catalog_sales_quantitystdev, catalog_sales_quantitycov);
    }
    int size() { return 15; }
}
public class Q17 {
    static class Group<K,V> implements Iterable<V> {
        K key;
        List<V> items;
        Group(K key, List<V> items) { this.key = key; this.items = items; }
        public Iterator<V> iterator() { return items.iterator(); }
        int size() { return items.size(); }
    }
    static Map<String,Object> asMap(Object o) {
        if (o instanceof Map<?,?> mm) {
            LinkedHashMap<String,Object> m = new LinkedHashMap<>();
            for (Map.Entry<?,?> e : mm.entrySet()) m.put(String.valueOf(e.getKey()), e.getValue());
            return m;
        }
        LinkedHashMap<String,Object> m = new LinkedHashMap<>();
        for (var f : o.getClass().getDeclaredFields()) { try { f.setAccessible(true); m.put(f.getName(), f.get(o)); } catch (Exception e) { throw new RuntimeException(e); } }
        return m;
    }
    static void saveJsonl(List<?> list) {
        for (Object obj : list) {
            Map<String,Object> m = asMap(obj);
            List<String> parts = new ArrayList<>();
            for (Map.Entry<?,?> e : m.entrySet()) { parts.add("\"" + e.getKey() + "\":" + e.getValue()); }
            System.out.println("{" + String.join(",", parts) + "}");
        }
    }
    static String toJson(Object o) {
        if (o instanceof Map<?,?> m) {
            StringJoiner j = new StringJoiner(",", "{", "}");
            for (Map.Entry<?,?> e : m.entrySet()) j.add("\"" + e.getKey() + "\":" + toJson(e.getValue()));
            return j.toString();
        } else if (o instanceof Collection<?> c) {
            StringJoiner j = new StringJoiner(",", "[", "]");
            for (var x : c) j.add(toJson(x));
            return j.toString();
        } else if (o instanceof String s) {
            return "\"" + s + "\"";
        } else if (o instanceof Number || o instanceof Boolean || o instanceof Character) {
            return String.valueOf(o);
        } else {
            Map<String,Object> m = asMap(o);
            StringJoiner j = new StringJoiner(",", "{", "}");
            for (Map.Entry<String,Object> e : m.entrySet()) j.add("\"" + e.getKey() + "\":" + toJson(e.getValue()));
            return j.toString();
        }
    }
    static void json(Object o) { System.out.println(toJson(o)); }
    public static void main(String[] args) {
    List<SsSoldDateSkSsItemSkSsCustomerSkSsTicketNumberSsQuantitySsStoreSk> store_sales = new ArrayList<>(Arrays.asList(new SsSoldDateSkSsItemSkSsCustomerSkSsTicketNumberSsQuantitySsStoreSk(1, 1, 1, 1, 10, 1)));
    List<SrReturnedDateSkSrCustomerSkSrItemSkSrTicketNumberSrReturnQuantity> store_returns = new ArrayList<>(Arrays.asList(new SrReturnedDateSkSrCustomerSkSrItemSkSrTicketNumberSrReturnQuantity(2, 1, 1, 1, 2)));
    List<CsSoldDateSkCsItemSkCsBillCustomerSkCsQuantity> catalog_sales = new ArrayList<>(Arrays.asList(new CsSoldDateSkCsItemSkCsBillCustomerSkCsQuantity(3, 1, 1, 5)));
    List<DDateSkDQuarterName> date_dim = new ArrayList<>(Arrays.asList(new DDateSkDQuarterName(1, "1998Q1"), new DDateSkDQuarterName(2, "1998Q2"), new DDateSkDQuarterName(3, "1998Q3")));
    List<SStoreSkSState> store = new ArrayList<>(Arrays.asList(new SStoreSkSState(1, "CA")));
    List<IItemSkIItemIdIItemDesc> item = new ArrayList<>(Arrays.asList(new IItemSkIItemIdIItemDesc(1, "I1", "Item 1")));
    List<QtyRetCsqIItemIdIItemDescSState> joined = (new java.util.function.Supplier<List<QtyRetCsqIItemIdIItemDescSState>>(){public List<QtyRetCsqIItemIdIItemDescSState> get(){
    List<QtyRetCsqIItemIdIItemDescSState> res0 = new ArrayList<>();
    for (var ss : store_sales) {
        for (var sr : store_returns) {
            if (!(ss.ss_customer_sk == sr.sr_customer_sk && ss.ss_item_sk == sr.sr_item_sk && ss.ss_ticket_number == sr.sr_ticket_number)) continue;
            for (var cs : catalog_sales) {
                if (!(sr.sr_customer_sk == cs.cs_bill_customer_sk && sr.sr_item_sk == cs.cs_item_sk)) continue;
                for (var d1 : date_dim) {
                    if (!(ss.ss_sold_date_sk == d1.d_date_sk && Objects.equals(d1.d_quarter_name, "1998Q1"))) continue;
                    for (var d2 : date_dim) {
                        if (!(sr.sr_returned_date_sk == d2.d_date_sk && Arrays.asList("1998Q1", "1998Q2", "1998Q3").contains(d2.d_quarter_name))) continue;
                        for (var d3 : date_dim) {
                            if (!(cs.cs_sold_date_sk == d3.d_date_sk && Arrays.asList("1998Q1", "1998Q2", "1998Q3").contains(d3.d_quarter_name))) continue;
                            for (var s : store) {
                                if (!(ss.ss_store_sk == s.s_store_sk)) continue;
                                for (var i : item) {
                                    if (!(ss.ss_item_sk == i.i_item_sk)) continue;
                                    res0.add(new QtyRetCsqIItemIdIItemDescSState(ss.ss_quantity, sr.sr_return_quantity, cs.cs_quantity, i.i_item_id, i.i_item_desc, s.s_state));
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return res0;
}}).get();
    List<IItemIdIItemDescSStateStoreSalesQuantitycountStoreSalesQuantityaveStoreSalesQuantitystdevStoreSalesQuantitycovStoreReturnsQuantitycountStoreReturnsQuantityaveStoreReturnsQuantitystdevStoreReturnsQuantitycovCatalogSalesQuantitycountCatalogSalesQuantityaveCatalogSalesQuantitystdevCatalogSalesQuantitycov> result = (new java.util.function.Supplier<List<IItemIdIItemDescSStateStoreSalesQuantitycountStoreSalesQuantityaveStoreSalesQuantitystdevStoreSalesQuantitycovStoreReturnsQuantitycountStoreReturnsQuantityaveStoreReturnsQuantitystdevStoreReturnsQuantitycovCatalogSalesQuantitycountCatalogSalesQuantityaveCatalogSalesQuantitystdevCatalogSalesQuantitycov>>(){public List<IItemIdIItemDescSStateStoreSalesQuantitycountStoreSalesQuantityaveStoreSalesQuantitystdevStoreSalesQuantitycovStoreReturnsQuantitycountStoreReturnsQuantityaveStoreReturnsQuantitystdevStoreReturnsQuantitycovCatalogSalesQuantitycountCatalogSalesQuantityaveCatalogSalesQuantitystdevCatalogSalesQuantitycov> get(){
    List<IItemIdIItemDescSStateStoreSalesQuantitycountStoreSalesQuantityaveStoreSalesQuantitystdevStoreSalesQuantitycovStoreReturnsQuantitycountStoreReturnsQuantityaveStoreReturnsQuantitystdevStoreReturnsQuantitycovCatalogSalesQuantitycountCatalogSalesQuantityaveCatalogSalesQuantitystdevCatalogSalesQuantitycov> res1 = new ArrayList<>();
    Map<IItemIdIItemDescSState,List<QtyRetCsqIItemIdIItemDescSState>> groups2 = new LinkedHashMap<>();
    for (var j : joined) {
        var row3 = j;
        IItemIdIItemDescSState key4 = new IItemIdIItemDescSState(j.i_item_id, j.i_item_desc, j.s_state);
        List<QtyRetCsqIItemIdIItemDescSState> bucket5 = groups2.get(key4);
        if (bucket5 == null) { bucket5 = new ArrayList<>(); groups2.put(key4, bucket5); }
        bucket5.add(row3);
    }
    for (Map.Entry<IItemIdIItemDescSState,List<QtyRetCsqIItemIdIItemDescSState>> __e : groups2.entrySet()) {
        IItemIdIItemDescSState g_key = __e.getKey();
        Group<IItemIdIItemDescSState,QtyRetCsqIItemIdIItemDescSState> g = new Group<>(g_key, __e.getValue());
        res1.add(new IItemIdIItemDescSStateStoreSalesQuantitycountStoreSalesQuantityaveStoreSalesQuantitystdevStoreSalesQuantitycovStoreReturnsQuantitycountStoreReturnsQuantityaveStoreReturnsQuantitystdevStoreReturnsQuantitycovCatalogSalesQuantitycountCatalogSalesQuantityaveCatalogSalesQuantitystdevCatalogSalesQuantitycov(g.key.i_item_id, g.key.i_item_desc, g.key.s_state, (new java.util.function.Supplier<List<QtyRetCsqIItemIdIItemDescSState>>(){public List<QtyRetCsqIItemIdIItemDescSState> get(){
    List<QtyRetCsqIItemIdIItemDescSState> res6 = new ArrayList<>();
    for (var _ : g) {
        res6.add(_);
    }
    return res6;
}}).get().size(), (new java.util.function.Supplier<List<Integer>>(){public List<Integer> get(){
    List<Integer> res7 = new ArrayList<>();
    for (var x : g) {
        res7.add(x.qty);
    }
    return res7;
}}).get().stream().mapToDouble(n -> ((Number)n).doubleValue()).average().orElse(0), 0.000000, 0.000000, (new java.util.function.Supplier<List<QtyRetCsqIItemIdIItemDescSState>>(){public List<QtyRetCsqIItemIdIItemDescSState> get(){
    List<QtyRetCsqIItemIdIItemDescSState> res8 = new ArrayList<>();
    for (var _ : g) {
        res8.add(_);
    }
    return res8;
}}).get().size(), (new java.util.function.Supplier<List<Integer>>(){public List<Integer> get(){
    List<Integer> res9 = new ArrayList<>();
    for (var x : g) {
        res9.add(x.ret);
    }
    return res9;
}}).get().stream().mapToDouble(n -> ((Number)n).doubleValue()).average().orElse(0), 0.000000, 0.000000, (new java.util.function.Supplier<List<QtyRetCsqIItemIdIItemDescSState>>(){public List<QtyRetCsqIItemIdIItemDescSState> get(){
    List<QtyRetCsqIItemIdIItemDescSState> res10 = new ArrayList<>();
    for (var _ : g) {
        res10.add(_);
    }
    return res10;
}}).get().size(), (new java.util.function.Supplier<List<Integer>>(){public List<Integer> get(){
    List<Integer> res11 = new ArrayList<>();
    for (var x : g) {
        res11.add(x.csq);
    }
    return res11;
}}).get().stream().mapToDouble(n -> ((Number)n).doubleValue()).average().orElse(0), 0.000000, 0.000000));
    }
    return res1;
}}).get();
    json(result);
    if (!(Objects.equals(result, Arrays.asList(new IItemIdIItemDescSStateStoreSalesQuantitycountStoreSalesQuantityaveStoreSalesQuantitystdevStoreSalesQuantitycovStoreReturnsQuantitycountStoreReturnsQuantityaveStoreReturnsQuantitystdevStoreReturnsQuantitycovCatalogSalesQuantitycountCatalogSalesQuantityaveCatalogSalesQuantitystdevCatalogSalesQuantitycov("I1", "Item 1", "CA", 1, 10.000000, 0.000000, 0.000000, 1, 2.000000, 0.000000, 0.000000, 1, 5.000000, 0.000000, 0.000000))))) throw new AssertionError("expect failed");
    }
}
