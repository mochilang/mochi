// Generated by Mochi compiler v0.10.26 on 2025-07-15T07:51:18Z
// q35.mochi
import java.util.*;

class CCustomerSkCCurrentAddrSkCCurrentCdemoSk {
    int c_customer_sk;
    int c_current_addr_sk;
    int c_current_cdemo_sk;
    CCustomerSkCCurrentAddrSkCCurrentCdemoSk(int c_customer_sk, int c_current_addr_sk, int c_current_cdemo_sk) {
        this.c_customer_sk = c_customer_sk;
        this.c_current_addr_sk = c_current_addr_sk;
        this.c_current_cdemo_sk = c_current_cdemo_sk;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CCustomerSkCCurrentAddrSkCCurrentCdemoSk other)) return false;
        return Objects.equals(this.c_customer_sk, other.c_customer_sk) && Objects.equals(this.c_current_addr_sk, other.c_current_addr_sk) && Objects.equals(this.c_current_cdemo_sk, other.c_current_cdemo_sk);
    }
    @Override public int hashCode() {
        return Objects.hash(c_customer_sk, c_current_addr_sk, c_current_cdemo_sk);
    }
    int size() { return 3; }
}
class CaAddressSkCaState {
    int ca_address_sk;
    String ca_state;
    CaAddressSkCaState(int ca_address_sk, String ca_state) {
        this.ca_address_sk = ca_address_sk;
        this.ca_state = ca_state;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CaAddressSkCaState other)) return false;
        return Objects.equals(this.ca_address_sk, other.ca_address_sk) && Objects.equals(this.ca_state, other.ca_state);
    }
    @Override public int hashCode() {
        return Objects.hash(ca_address_sk, ca_state);
    }
    int size() { return 2; }
}
class CdDemoSkCdGenderCdMaritalStatusCdDepCountCdDepEmployedCountCdDepCollegeCount {
    int cd_demo_sk;
    String cd_gender;
    String cd_marital_status;
    int cd_dep_count;
    int cd_dep_employed_count;
    int cd_dep_college_count;
    CdDemoSkCdGenderCdMaritalStatusCdDepCountCdDepEmployedCountCdDepCollegeCount(int cd_demo_sk, String cd_gender, String cd_marital_status, int cd_dep_count, int cd_dep_employed_count, int cd_dep_college_count) {
        this.cd_demo_sk = cd_demo_sk;
        this.cd_gender = cd_gender;
        this.cd_marital_status = cd_marital_status;
        this.cd_dep_count = cd_dep_count;
        this.cd_dep_employed_count = cd_dep_employed_count;
        this.cd_dep_college_count = cd_dep_college_count;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CdDemoSkCdGenderCdMaritalStatusCdDepCountCdDepEmployedCountCdDepCollegeCount other)) return false;
        return Objects.equals(this.cd_demo_sk, other.cd_demo_sk) && Objects.equals(this.cd_gender, other.cd_gender) && Objects.equals(this.cd_marital_status, other.cd_marital_status) && Objects.equals(this.cd_dep_count, other.cd_dep_count) && Objects.equals(this.cd_dep_employed_count, other.cd_dep_employed_count) && Objects.equals(this.cd_dep_college_count, other.cd_dep_college_count);
    }
    @Override public int hashCode() {
        return Objects.hash(cd_demo_sk, cd_gender, cd_marital_status, cd_dep_count, cd_dep_employed_count, cd_dep_college_count);
    }
    int size() { return 6; }
}
class SsCustomerSkSsSoldDateSk {
    int ss_customer_sk;
    int ss_sold_date_sk;
    SsCustomerSkSsSoldDateSk(int ss_customer_sk, int ss_sold_date_sk) {
        this.ss_customer_sk = ss_customer_sk;
        this.ss_sold_date_sk = ss_sold_date_sk;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof SsCustomerSkSsSoldDateSk other)) return false;
        return Objects.equals(this.ss_customer_sk, other.ss_customer_sk) && Objects.equals(this.ss_sold_date_sk, other.ss_sold_date_sk);
    }
    @Override public int hashCode() {
        return Objects.hash(ss_customer_sk, ss_sold_date_sk);
    }
    int size() { return 2; }
}
class DDateSkDYearDQoy {
    int d_date_sk;
    int d_year;
    int d_qoy;
    DDateSkDYearDQoy(int d_date_sk, int d_year, int d_qoy) {
        this.d_date_sk = d_date_sk;
        this.d_year = d_year;
        this.d_qoy = d_qoy;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof DDateSkDYearDQoy other)) return false;
        return Objects.equals(this.d_date_sk, other.d_date_sk) && Objects.equals(this.d_year, other.d_year) && Objects.equals(this.d_qoy, other.d_qoy);
    }
    @Override public int hashCode() {
        return Objects.hash(d_date_sk, d_year, d_qoy);
    }
    int size() { return 3; }
}
class CCaCd {
    CCustomerSkCCurrentAddrSkCCurrentCdemoSk c;
    CaAddressSkCaState ca;
    CdDemoSkCdGenderCdMaritalStatusCdDepCountCdDepEmployedCountCdDepCollegeCount cd;
    CCaCd(CCustomerSkCCurrentAddrSkCCurrentCdemoSk c, CaAddressSkCaState ca, CdDemoSkCdGenderCdMaritalStatusCdDepCountCdDepEmployedCountCdDepCollegeCount cd) {
        this.c = c;
        this.ca = ca;
        this.cd = cd;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CCaCd other)) return false;
        return Objects.equals(this.c, other.c) && Objects.equals(this.ca, other.ca) && Objects.equals(this.cd, other.cd);
    }
    @Override public int hashCode() {
        return Objects.hash(c, ca, cd);
    }
    int size() { return 3; }
}
class StateGenderMaritalDepEmpCol {
    String state;
    String gender;
    String marital;
    int dep;
    int emp;
    int col;
    StateGenderMaritalDepEmpCol(String state, String gender, String marital, int dep, int emp, int col) {
        this.state = state;
        this.gender = gender;
        this.marital = marital;
        this.dep = dep;
        this.emp = emp;
        this.col = col;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof StateGenderMaritalDepEmpCol other)) return false;
        return Objects.equals(this.state, other.state) && Objects.equals(this.gender, other.gender) && Objects.equals(this.marital, other.marital) && Objects.equals(this.dep, other.dep) && Objects.equals(this.emp, other.emp) && Objects.equals(this.col, other.col);
    }
    @Override public int hashCode() {
        return Objects.hash(state, gender, marital, dep, emp, col);
    }
    int size() { return 6; }
}
class CaStateCdGenderCdMaritalStatusCdDepCountCdDepEmployedCountCdDepCollegeCountCnt {
    String ca_state;
    String cd_gender;
    String cd_marital_status;
    int cd_dep_count;
    int cd_dep_employed_count;
    int cd_dep_college_count;
    int cnt;
    CaStateCdGenderCdMaritalStatusCdDepCountCdDepEmployedCountCdDepCollegeCountCnt(String ca_state, String cd_gender, String cd_marital_status, int cd_dep_count, int cd_dep_employed_count, int cd_dep_college_count, int cnt) {
        this.ca_state = ca_state;
        this.cd_gender = cd_gender;
        this.cd_marital_status = cd_marital_status;
        this.cd_dep_count = cd_dep_count;
        this.cd_dep_employed_count = cd_dep_employed_count;
        this.cd_dep_college_count = cd_dep_college_count;
        this.cnt = cnt;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CaStateCdGenderCdMaritalStatusCdDepCountCdDepEmployedCountCdDepCollegeCountCnt other)) return false;
        return Objects.equals(this.ca_state, other.ca_state) && Objects.equals(this.cd_gender, other.cd_gender) && Objects.equals(this.cd_marital_status, other.cd_marital_status) && Objects.equals(this.cd_dep_count, other.cd_dep_count) && Objects.equals(this.cd_dep_employed_count, other.cd_dep_employed_count) && Objects.equals(this.cd_dep_college_count, other.cd_dep_college_count) && Objects.equals(this.cnt, other.cnt);
    }
    @Override public int hashCode() {
        return Objects.hash(ca_state, cd_gender, cd_marital_status, cd_dep_count, cd_dep_employed_count, cd_dep_college_count, cnt);
    }
    int size() { return 7; }
}
public class Q35 {
    static class Group<K,V> implements Iterable<V> {
        K key;
        List<V> items;
        Group(K key, List<V> items) { this.key = key; this.items = items; }
        public Iterator<V> iterator() { return items.iterator(); }
        int size() { return items.size(); }
    }
    static Map<String,Object> asMap(Object o) {
        if (o instanceof Map<?,?> mm) {
            LinkedHashMap<String,Object> m = new LinkedHashMap<>();
            for (Map.Entry<?,?> e : mm.entrySet()) m.put(String.valueOf(e.getKey()), e.getValue());
            return m;
        }
        LinkedHashMap<String,Object> m = new LinkedHashMap<>();
        for (var f : o.getClass().getDeclaredFields()) { try { f.setAccessible(true); m.put(f.getName(), f.get(o)); } catch (Exception e) { throw new RuntimeException(e); } }
        return m;
    }
    static void saveJsonl(List<?> list) {
        for (Object obj : list) {
            Map<String,Object> m = asMap(obj);
            List<String> parts = new ArrayList<>();
            for (Map.Entry<?,?> e : m.entrySet()) { parts.add("\"" + e.getKey() + "\":" + e.getValue()); }
            System.out.println("{" + String.join(",", parts) + "}");
        }
    }
    static String toJson(Object o) {
        if (o instanceof Map<?,?> m) {
            StringJoiner j = new StringJoiner(",", "{", "}");
            for (Map.Entry<?,?> e : m.entrySet()) j.add("\"" + e.getKey() + "\":" + toJson(e.getValue()));
            return j.toString();
        } else if (o instanceof Collection<?> c) {
            StringJoiner j = new StringJoiner(",", "[", "]");
            for (var x : c) j.add(toJson(x));
            return j.toString();
        } else if (o instanceof String s) {
            return "\"" + s + "\"";
        } else if (o instanceof Number || o instanceof Boolean || o instanceof Character) {
            return String.valueOf(o);
        } else {
            Map<String,Object> m = asMap(o);
            StringJoiner j = new StringJoiner(",", "{", "}");
            for (Map.Entry<String,Object> e : m.entrySet()) j.add("\"" + e.getKey() + "\":" + toJson(e.getValue()));
            return j.toString();
        }
    }
    static void json(Object o) { System.out.println(toJson(o)); }
    public static void main(String[] args) {
    List<CCustomerSkCCurrentAddrSkCCurrentCdemoSk> customer = new ArrayList<>(Arrays.asList(new CCustomerSkCCurrentAddrSkCCurrentCdemoSk(1, 1, 1), new CCustomerSkCCurrentAddrSkCCurrentCdemoSk(2, 2, 2)));
    List<CaAddressSkCaState> customer_address = new ArrayList<>(Arrays.asList(new CaAddressSkCaState(1, "CA"), new CaAddressSkCaState(2, "NY")));
    List<CdDemoSkCdGenderCdMaritalStatusCdDepCountCdDepEmployedCountCdDepCollegeCount> customer_demographics = new ArrayList<>(Arrays.asList(new CdDemoSkCdGenderCdMaritalStatusCdDepCountCdDepEmployedCountCdDepCollegeCount(1, "M", "S", 1, 1, 0), new CdDemoSkCdGenderCdMaritalStatusCdDepCountCdDepEmployedCountCdDepCollegeCount(2, "F", "M", 2, 1, 1)));
    List<SsCustomerSkSsSoldDateSk> store_sales = new ArrayList<>(Arrays.asList(new SsCustomerSkSsSoldDateSk(1, 1)));
    List<DDateSkDYearDQoy> date_dim = new ArrayList<>(Arrays.asList(new DDateSkDYearDQoy(1, 2000, 1)));
    List<Integer> purchased = (new java.util.function.Supplier<List<Integer>>(){public List<Integer> get(){
    List<Integer> res0 = new ArrayList<>();
    for (var ss : store_sales) {
        for (var d : date_dim) {
            if (!(ss.ss_sold_date_sk == d.d_date_sk)) continue;
            if (!(d.d_year == 2000 && d.d_qoy < 4)) continue;
            res0.add(ss.ss_customer_sk);
        }
    }
    return res0;
}}).get();
    List<CaStateCdGenderCdMaritalStatusCdDepCountCdDepEmployedCountCdDepCollegeCountCnt> groups = (new java.util.function.Supplier<List<CaStateCdGenderCdMaritalStatusCdDepCountCdDepEmployedCountCdDepCollegeCountCnt>>(){public List<CaStateCdGenderCdMaritalStatusCdDepCountCdDepEmployedCountCdDepCollegeCountCnt> get(){
    List<CaStateCdGenderCdMaritalStatusCdDepCountCdDepEmployedCountCdDepCollegeCountCnt> res1 = new ArrayList<>();
    Map<StateGenderMaritalDepEmpCol,List<CCaCd>> groups2 = new LinkedHashMap<>();
    for (var c : customer) {
        for (var ca : customer_address) {
            if (!(c.c_current_addr_sk == ca.ca_address_sk)) continue;
            for (var cd : customer_demographics) {
                if (!(c.c_current_cdemo_sk == cd.cd_demo_sk)) continue;
                if (!(purchased.contains(c.c_customer_sk))) continue;
                CCaCd row3 = new CCaCd(c, ca, cd);
                StateGenderMaritalDepEmpCol key4 = new StateGenderMaritalDepEmpCol(ca.ca_state, cd.cd_gender, cd.cd_marital_status, cd.cd_dep_count, cd.cd_dep_employed_count, cd.cd_dep_college_count);
                List<CCaCd> bucket5 = groups2.get(key4);
                if (bucket5 == null) { bucket5 = new ArrayList<>(); groups2.put(key4, bucket5); }
                bucket5.add(row3);
            }
        }
    }
    for (Map.Entry<StateGenderMaritalDepEmpCol,List<CCaCd>> __e : groups2.entrySet()) {
        StateGenderMaritalDepEmpCol g_key = __e.getKey();
        Group<StateGenderMaritalDepEmpCol,CCaCd> g = new Group<>(g_key, __e.getValue());
        res1.add(new CaStateCdGenderCdMaritalStatusCdDepCountCdDepEmployedCountCdDepCollegeCountCnt(g.key.state, g.key.gender, g.key.marital, g.key.dep, g.key.emp, g.key.col, g.size()));
    }
    return res1;
}}).get();
    json(groups);
    if (!(Objects.equals(groups, Arrays.asList(new CaStateCdGenderCdMaritalStatusCdDepCountCdDepEmployedCountCdDepCollegeCountCnt("CA", "M", "S", 1, 1, 0, 1))))) throw new AssertionError("expect failed");
    }
}
