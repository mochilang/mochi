// Generated by Mochi compiler v0.10.26 on 2025-07-15T07:51:09Z
// q25.mochi
import java.util.*;

class Store {
    int s_store_sk;
    String s_store_id;
    String s_store_name;
    Store(int s_store_sk, String s_store_id, String s_store_name) {
        this.s_store_sk = s_store_sk;
        this.s_store_id = s_store_id;
        this.s_store_name = s_store_name;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Store other)) return false;
        return Objects.equals(this.s_store_sk, other.s_store_sk) && Objects.equals(this.s_store_id, other.s_store_id) && Objects.equals(this.s_store_name, other.s_store_name);
    }
    @Override public int hashCode() {
        return Objects.hash(s_store_sk, s_store_id, s_store_name);
    }
}
class Item {
    int i_item_sk;
    String i_item_id;
    String i_item_desc;
    Item(int i_item_sk, String i_item_id, String i_item_desc) {
        this.i_item_sk = i_item_sk;
        this.i_item_id = i_item_id;
        this.i_item_desc = i_item_desc;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Item other)) return false;
        return Objects.equals(this.i_item_sk, other.i_item_sk) && Objects.equals(this.i_item_id, other.i_item_id) && Objects.equals(this.i_item_desc, other.i_item_desc);
    }
    @Override public int hashCode() {
        return Objects.hash(i_item_sk, i_item_id, i_item_desc);
    }
}
class StoreSale {
    int ss_sold_date_sk;
    int ss_item_sk;
    int ss_store_sk;
    int ss_customer_sk;
    double ss_net_profit;
    int ss_ticket_number;
    StoreSale(int ss_sold_date_sk, int ss_item_sk, int ss_store_sk, int ss_customer_sk, double ss_net_profit, int ss_ticket_number) {
        this.ss_sold_date_sk = ss_sold_date_sk;
        this.ss_item_sk = ss_item_sk;
        this.ss_store_sk = ss_store_sk;
        this.ss_customer_sk = ss_customer_sk;
        this.ss_net_profit = ss_net_profit;
        this.ss_ticket_number = ss_ticket_number;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof StoreSale other)) return false;
        return Objects.equals(this.ss_sold_date_sk, other.ss_sold_date_sk) && Objects.equals(this.ss_item_sk, other.ss_item_sk) && Objects.equals(this.ss_store_sk, other.ss_store_sk) && Objects.equals(this.ss_customer_sk, other.ss_customer_sk) && Objects.equals(this.ss_net_profit, other.ss_net_profit) && Objects.equals(this.ss_ticket_number, other.ss_ticket_number);
    }
    @Override public int hashCode() {
        return Objects.hash(ss_sold_date_sk, ss_item_sk, ss_store_sk, ss_customer_sk, ss_net_profit, ss_ticket_number);
    }
}
class StoreReturn {
    int sr_returned_date_sk;
    int sr_item_sk;
    int sr_customer_sk;
    int sr_ticket_number;
    double sr_net_loss;
    StoreReturn(int sr_returned_date_sk, int sr_item_sk, int sr_customer_sk, int sr_ticket_number, double sr_net_loss) {
        this.sr_returned_date_sk = sr_returned_date_sk;
        this.sr_item_sk = sr_item_sk;
        this.sr_customer_sk = sr_customer_sk;
        this.sr_ticket_number = sr_ticket_number;
        this.sr_net_loss = sr_net_loss;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof StoreReturn other)) return false;
        return Objects.equals(this.sr_returned_date_sk, other.sr_returned_date_sk) && Objects.equals(this.sr_item_sk, other.sr_item_sk) && Objects.equals(this.sr_customer_sk, other.sr_customer_sk) && Objects.equals(this.sr_ticket_number, other.sr_ticket_number) && Objects.equals(this.sr_net_loss, other.sr_net_loss);
    }
    @Override public int hashCode() {
        return Objects.hash(sr_returned_date_sk, sr_item_sk, sr_customer_sk, sr_ticket_number, sr_net_loss);
    }
}
class CatalogSale {
    int cs_sold_date_sk;
    int cs_item_sk;
    int cs_bill_customer_sk;
    double cs_net_profit;
    CatalogSale(int cs_sold_date_sk, int cs_item_sk, int cs_bill_customer_sk, double cs_net_profit) {
        this.cs_sold_date_sk = cs_sold_date_sk;
        this.cs_item_sk = cs_item_sk;
        this.cs_bill_customer_sk = cs_bill_customer_sk;
        this.cs_net_profit = cs_net_profit;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CatalogSale other)) return false;
        return Objects.equals(this.cs_sold_date_sk, other.cs_sold_date_sk) && Objects.equals(this.cs_item_sk, other.cs_item_sk) && Objects.equals(this.cs_bill_customer_sk, other.cs_bill_customer_sk) && Objects.equals(this.cs_net_profit, other.cs_net_profit);
    }
    @Override public int hashCode() {
        return Objects.hash(cs_sold_date_sk, cs_item_sk, cs_bill_customer_sk, cs_net_profit);
    }
}
class DateDim {
    int d_date_sk;
    int d_moy;
    int d_year;
    DateDim(int d_date_sk, int d_moy, int d_year) {
        this.d_date_sk = d_date_sk;
        this.d_moy = d_moy;
        this.d_year = d_year;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof DateDim other)) return false;
        return Objects.equals(this.d_date_sk, other.d_date_sk) && Objects.equals(this.d_moy, other.d_moy) && Objects.equals(this.d_year, other.d_year);
    }
    @Override public int hashCode() {
        return Objects.hash(d_date_sk, d_moy, d_year);
    }
}
class SsSoldDateSkSsItemSkSsStoreSkSsCustomerSkSsNetProfitSsTicketNumber {
    int ss_sold_date_sk;
    int ss_item_sk;
    int ss_store_sk;
    int ss_customer_sk;
    double ss_net_profit;
    int ss_ticket_number;
    SsSoldDateSkSsItemSkSsStoreSkSsCustomerSkSsNetProfitSsTicketNumber(int ss_sold_date_sk, int ss_item_sk, int ss_store_sk, int ss_customer_sk, double ss_net_profit, int ss_ticket_number) {
        this.ss_sold_date_sk = ss_sold_date_sk;
        this.ss_item_sk = ss_item_sk;
        this.ss_store_sk = ss_store_sk;
        this.ss_customer_sk = ss_customer_sk;
        this.ss_net_profit = ss_net_profit;
        this.ss_ticket_number = ss_ticket_number;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof SsSoldDateSkSsItemSkSsStoreSkSsCustomerSkSsNetProfitSsTicketNumber other)) return false;
        return Objects.equals(this.ss_sold_date_sk, other.ss_sold_date_sk) && Objects.equals(this.ss_item_sk, other.ss_item_sk) && Objects.equals(this.ss_store_sk, other.ss_store_sk) && Objects.equals(this.ss_customer_sk, other.ss_customer_sk) && Objects.equals(this.ss_net_profit, other.ss_net_profit) && Objects.equals(this.ss_ticket_number, other.ss_ticket_number);
    }
    @Override public int hashCode() {
        return Objects.hash(ss_sold_date_sk, ss_item_sk, ss_store_sk, ss_customer_sk, ss_net_profit, ss_ticket_number);
    }
    int size() { return 6; }
}
class SrReturnedDateSkSrItemSkSrCustomerSkSrTicketNumberSrNetLoss {
    int sr_returned_date_sk;
    int sr_item_sk;
    int sr_customer_sk;
    int sr_ticket_number;
    double sr_net_loss;
    SrReturnedDateSkSrItemSkSrCustomerSkSrTicketNumberSrNetLoss(int sr_returned_date_sk, int sr_item_sk, int sr_customer_sk, int sr_ticket_number, double sr_net_loss) {
        this.sr_returned_date_sk = sr_returned_date_sk;
        this.sr_item_sk = sr_item_sk;
        this.sr_customer_sk = sr_customer_sk;
        this.sr_ticket_number = sr_ticket_number;
        this.sr_net_loss = sr_net_loss;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof SrReturnedDateSkSrItemSkSrCustomerSkSrTicketNumberSrNetLoss other)) return false;
        return Objects.equals(this.sr_returned_date_sk, other.sr_returned_date_sk) && Objects.equals(this.sr_item_sk, other.sr_item_sk) && Objects.equals(this.sr_customer_sk, other.sr_customer_sk) && Objects.equals(this.sr_ticket_number, other.sr_ticket_number) && Objects.equals(this.sr_net_loss, other.sr_net_loss);
    }
    @Override public int hashCode() {
        return Objects.hash(sr_returned_date_sk, sr_item_sk, sr_customer_sk, sr_ticket_number, sr_net_loss);
    }
    int size() { return 5; }
}
class CsSoldDateSkCsItemSkCsBillCustomerSkCsNetProfit {
    int cs_sold_date_sk;
    int cs_item_sk;
    int cs_bill_customer_sk;
    double cs_net_profit;
    CsSoldDateSkCsItemSkCsBillCustomerSkCsNetProfit(int cs_sold_date_sk, int cs_item_sk, int cs_bill_customer_sk, double cs_net_profit) {
        this.cs_sold_date_sk = cs_sold_date_sk;
        this.cs_item_sk = cs_item_sk;
        this.cs_bill_customer_sk = cs_bill_customer_sk;
        this.cs_net_profit = cs_net_profit;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CsSoldDateSkCsItemSkCsBillCustomerSkCsNetProfit other)) return false;
        return Objects.equals(this.cs_sold_date_sk, other.cs_sold_date_sk) && Objects.equals(this.cs_item_sk, other.cs_item_sk) && Objects.equals(this.cs_bill_customer_sk, other.cs_bill_customer_sk) && Objects.equals(this.cs_net_profit, other.cs_net_profit);
    }
    @Override public int hashCode() {
        return Objects.hash(cs_sold_date_sk, cs_item_sk, cs_bill_customer_sk, cs_net_profit);
    }
    int size() { return 4; }
}
class DDateSkDMoyDYear {
    int d_date_sk;
    int d_moy;
    int d_year;
    DDateSkDMoyDYear(int d_date_sk, int d_moy, int d_year) {
        this.d_date_sk = d_date_sk;
        this.d_moy = d_moy;
        this.d_year = d_year;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof DDateSkDMoyDYear other)) return false;
        return Objects.equals(this.d_date_sk, other.d_date_sk) && Objects.equals(this.d_moy, other.d_moy) && Objects.equals(this.d_year, other.d_year);
    }
    @Override public int hashCode() {
        return Objects.hash(d_date_sk, d_moy, d_year);
    }
    int size() { return 3; }
}
class SStoreSkSStoreIdSStoreName {
    int s_store_sk;
    String s_store_id;
    String s_store_name;
    SStoreSkSStoreIdSStoreName(int s_store_sk, String s_store_id, String s_store_name) {
        this.s_store_sk = s_store_sk;
        this.s_store_id = s_store_id;
        this.s_store_name = s_store_name;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof SStoreSkSStoreIdSStoreName other)) return false;
        return Objects.equals(this.s_store_sk, other.s_store_sk) && Objects.equals(this.s_store_id, other.s_store_id) && Objects.equals(this.s_store_name, other.s_store_name);
    }
    @Override public int hashCode() {
        return Objects.hash(s_store_sk, s_store_id, s_store_name);
    }
    int size() { return 3; }
}
class IItemSkIItemIdIItemDesc {
    int i_item_sk;
    String i_item_id;
    String i_item_desc;
    IItemSkIItemIdIItemDesc(int i_item_sk, String i_item_id, String i_item_desc) {
        this.i_item_sk = i_item_sk;
        this.i_item_id = i_item_id;
        this.i_item_desc = i_item_desc;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof IItemSkIItemIdIItemDesc other)) return false;
        return Objects.equals(this.i_item_sk, other.i_item_sk) && Objects.equals(this.i_item_id, other.i_item_id) && Objects.equals(this.i_item_desc, other.i_item_desc);
    }
    @Override public int hashCode() {
        return Objects.hash(i_item_sk, i_item_id, i_item_desc);
    }
    int size() { return 3; }
}
class SsD1D2D3SI {
    SsSoldDateSkSsItemSkSsStoreSkSsCustomerSkSsNetProfitSsTicketNumber ss;
    DDateSkDMoyDYear d1;
    DDateSkDMoyDYear d2;
    DDateSkDMoyDYear d3;
    SStoreSkSStoreIdSStoreName s;
    IItemSkIItemIdIItemDesc i;
    SsD1D2D3SI(SsSoldDateSkSsItemSkSsStoreSkSsCustomerSkSsNetProfitSsTicketNumber ss, DDateSkDMoyDYear d1, DDateSkDMoyDYear d2, DDateSkDMoyDYear d3, SStoreSkSStoreIdSStoreName s, IItemSkIItemIdIItemDesc i) {
        this.ss = ss;
        this.d1 = d1;
        this.d2 = d2;
        this.d3 = d3;
        this.s = s;
        this.i = i;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof SsD1D2D3SI other)) return false;
        return Objects.equals(this.ss, other.ss) && Objects.equals(this.d1, other.d1) && Objects.equals(this.d2, other.d2) && Objects.equals(this.d3, other.d3) && Objects.equals(this.s, other.s) && Objects.equals(this.i, other.i);
    }
    @Override public int hashCode() {
        return Objects.hash(ss, d1, d2, d3, s, i);
    }
    int size() { return 6; }
}
class ItemIdItemDescSStoreIdSStoreName {
    String item_id;
    String item_desc;
    String s_store_id;
    String s_store_name;
    ItemIdItemDescSStoreIdSStoreName(String item_id, String item_desc, String s_store_id, String s_store_name) {
        this.item_id = item_id;
        this.item_desc = item_desc;
        this.s_store_id = s_store_id;
        this.s_store_name = s_store_name;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof ItemIdItemDescSStoreIdSStoreName other)) return false;
        return Objects.equals(this.item_id, other.item_id) && Objects.equals(this.item_desc, other.item_desc) && Objects.equals(this.s_store_id, other.s_store_id) && Objects.equals(this.s_store_name, other.s_store_name);
    }
    @Override public int hashCode() {
        return Objects.hash(item_id, item_desc, s_store_id, s_store_name);
    }
    int size() { return 4; }
}
class IItemIdIItemDescSStoreIdSStoreNameStoreSalesProfitStoreReturnsLossCatalogSalesProfit {
    String i_item_id;
    String i_item_desc;
    String s_store_id;
    String s_store_name;
    int store_sales_profit;
    int store_returns_loss;
    int catalog_sales_profit;
    IItemIdIItemDescSStoreIdSStoreNameStoreSalesProfitStoreReturnsLossCatalogSalesProfit(String i_item_id, String i_item_desc, String s_store_id, String s_store_name, int store_sales_profit, int store_returns_loss, int catalog_sales_profit) {
        this.i_item_id = i_item_id;
        this.i_item_desc = i_item_desc;
        this.s_store_id = s_store_id;
        this.s_store_name = s_store_name;
        this.store_sales_profit = store_sales_profit;
        this.store_returns_loss = store_returns_loss;
        this.catalog_sales_profit = catalog_sales_profit;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof IItemIdIItemDescSStoreIdSStoreNameStoreSalesProfitStoreReturnsLossCatalogSalesProfit other)) return false;
        return Objects.equals(this.i_item_id, other.i_item_id) && Objects.equals(this.i_item_desc, other.i_item_desc) && Objects.equals(this.s_store_id, other.s_store_id) && Objects.equals(this.s_store_name, other.s_store_name) && Objects.equals(this.store_sales_profit, other.store_sales_profit) && Objects.equals(this.store_returns_loss, other.store_returns_loss) && Objects.equals(this.catalog_sales_profit, other.catalog_sales_profit);
    }
    @Override public int hashCode() {
        return Objects.hash(i_item_id, i_item_desc, s_store_id, s_store_name, store_sales_profit, store_returns_loss, catalog_sales_profit);
    }
    int size() { return 7; }
}
public class Q25 {
    static class Group<K,V> implements Iterable<V> {
        K key;
        List<V> items;
        Group(K key, List<V> items) { this.key = key; this.items = items; }
        public Iterator<V> iterator() { return items.iterator(); }
        int size() { return items.size(); }
    }
    static Map<String,Object> asMap(Object o) {
        if (o instanceof Map<?,?> mm) {
            LinkedHashMap<String,Object> m = new LinkedHashMap<>();
            for (Map.Entry<?,?> e : mm.entrySet()) m.put(String.valueOf(e.getKey()), e.getValue());
            return m;
        }
        LinkedHashMap<String,Object> m = new LinkedHashMap<>();
        for (var f : o.getClass().getDeclaredFields()) { try { f.setAccessible(true); m.put(f.getName(), f.get(o)); } catch (Exception e) { throw new RuntimeException(e); } }
        return m;
    }
    static void saveJsonl(List<?> list) {
        for (Object obj : list) {
            Map<String,Object> m = asMap(obj);
            List<String> parts = new ArrayList<>();
            for (Map.Entry<?,?> e : m.entrySet()) { parts.add("\"" + e.getKey() + "\":" + e.getValue()); }
            System.out.println("{" + String.join(",", parts) + "}");
        }
    }
    static String toJson(Object o) {
        if (o instanceof Map<?,?> m) {
            StringJoiner j = new StringJoiner(",", "{", "}");
            for (Map.Entry<?,?> e : m.entrySet()) j.add("\"" + e.getKey() + "\":" + toJson(e.getValue()));
            return j.toString();
        } else if (o instanceof Collection<?> c) {
            StringJoiner j = new StringJoiner(",", "[", "]");
            for (var x : c) j.add(toJson(x));
            return j.toString();
        } else if (o instanceof String s) {
            return "\"" + s + "\"";
        } else if (o instanceof Number || o instanceof Boolean || o instanceof Character) {
            return String.valueOf(o);
        } else {
            Map<String,Object> m = asMap(o);
            StringJoiner j = new StringJoiner(",", "{", "}");
            for (Map.Entry<String,Object> e : m.entrySet()) j.add("\"" + e.getKey() + "\":" + toJson(e.getValue()));
            return j.toString();
        }
    }
    static void json(Object o) { System.out.println(toJson(o)); }
    public static void main(String[] args) {
    List<SsSoldDateSkSsItemSkSsStoreSkSsCustomerSkSsNetProfitSsTicketNumber> store_sales = new ArrayList<>(Arrays.asList(new SsSoldDateSkSsItemSkSsStoreSkSsCustomerSkSsNetProfitSsTicketNumber(1, 1, 1, 1, 50.000000, 1), new SsSoldDateSkSsItemSkSsStoreSkSsCustomerSkSsNetProfitSsTicketNumber(1, 2, 1, 2, 20.000000, 2)));
    List<SrReturnedDateSkSrItemSkSrCustomerSkSrTicketNumberSrNetLoss> store_returns = new ArrayList<>(Arrays.asList(new SrReturnedDateSkSrItemSkSrCustomerSkSrTicketNumberSrNetLoss(2, 1, 1, 1, 10.000000), new SrReturnedDateSkSrItemSkSrCustomerSkSrTicketNumberSrNetLoss(2, 2, 2, 2, 5.000000)));
    List<CsSoldDateSkCsItemSkCsBillCustomerSkCsNetProfit> catalog_sales = new ArrayList<>(Arrays.asList(new CsSoldDateSkCsItemSkCsBillCustomerSkCsNetProfit(3, 1, 1, 30.000000), new CsSoldDateSkCsItemSkCsBillCustomerSkCsNetProfit(3, 2, 2, 15.000000)));
    List<DDateSkDMoyDYear> date_dim = new ArrayList<>(Arrays.asList(new DDateSkDMoyDYear(1, 4, 2000), new DDateSkDMoyDYear(2, 5, 2000), new DDateSkDMoyDYear(3, 6, 2000)));
    List<SStoreSkSStoreIdSStoreName> store = new ArrayList<>(Arrays.asList(new SStoreSkSStoreIdSStoreName(1, "S1", "Store1")));
    List<IItemSkIItemIdIItemDesc> item = new ArrayList<>(Arrays.asList(new IItemSkIItemIdIItemDesc(1, "ITEM1", "Desc1"), new IItemSkIItemIdIItemDesc(2, "ITEM2", "Desc2")));
    List<IItemIdIItemDescSStoreIdSStoreNameStoreSalesProfitStoreReturnsLossCatalogSalesProfit> result = (new java.util.function.Supplier<List<IItemIdIItemDescSStoreIdSStoreNameStoreSalesProfitStoreReturnsLossCatalogSalesProfit>>(){public List<IItemIdIItemDescSStoreIdSStoreNameStoreSalesProfitStoreReturnsLossCatalogSalesProfit> get(){
    List<IItemIdIItemDescSStoreIdSStoreNameStoreSalesProfitStoreReturnsLossCatalogSalesProfit> res0 = new ArrayList<>();
    Map<ItemIdItemDescSStoreIdSStoreName,List<SsD1D2D3SI>> groups1 = new LinkedHashMap<>();
    for (var ss : store_sales) {
        for (var sr : store_returns) {
            if (!(ss.ss_ticket_number == sr.sr_ticket_number && ss.ss_item_sk == sr.sr_item_sk)) continue;
            for (var cs : catalog_sales) {
                if (!(sr.sr_customer_sk == cs.cs_bill_customer_sk && sr.sr_item_sk == cs.cs_item_sk)) continue;
                for (var d1 : date_dim) {
                    if (!(d1.d_date_sk == ss.ss_sold_date_sk)) continue;
                    for (var d2 : date_dim) {
                        if (!(d2.d_date_sk == sr.sr_returned_date_sk)) continue;
                        for (var d3 : date_dim) {
                            if (!(d3.d_date_sk == cs.cs_sold_date_sk)) continue;
                            for (var s : store) {
                                if (!(s.s_store_sk == ss.ss_store_sk)) continue;
                                for (var i : item) {
                                    if (!(i.i_item_sk == ss.ss_item_sk)) continue;
                                    if (!(d1.d_moy == 4 && d1.d_year == 2000 && d2.d_moy >= 4 && d2.d_moy <= 10 && d3.d_moy >= 4 && d3.d_moy <= 10)) continue;
                                    SsD1D2D3SI row2 = new SsD1D2D3SI(ss, d1, d2, d3, s, i);
                                    ItemIdItemDescSStoreIdSStoreName key3 = new ItemIdItemDescSStoreIdSStoreName(i.i_item_id, i.i_item_desc, s.s_store_id, s.s_store_name);
                                    List<SsD1D2D3SI> bucket4 = groups1.get(key3);
                                    if (bucket4 == null) { bucket4 = new ArrayList<>(); groups1.put(key3, bucket4); }
                                    bucket4.add(row2);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    for (Map.Entry<ItemIdItemDescSStoreIdSStoreName,List<SsD1D2D3SI>> __e : groups1.entrySet()) {
        ItemIdItemDescSStoreIdSStoreName g_key = __e.getKey();
        Group<ItemIdItemDescSStoreIdSStoreName,SsD1D2D3SI> g = new Group<>(g_key, __e.getValue());
        res0.add(new IItemIdIItemDescSStoreIdSStoreNameStoreSalesProfitStoreReturnsLossCatalogSalesProfit(g.key.item_id, g.key.item_desc, g.key.s_store_id, g.key.s_store_name, (new java.util.function.Supplier<List<Object>>(){public List<Object> get(){
    List<Object> res5 = new ArrayList<>();
    for (var x : g) {
        res5.add(x.ss_net_profit);
    }
    return res5;
}}).get().stream().mapToInt(n -> ((Number)n).intValue()).sum(), (new java.util.function.Supplier<List<Object>>(){public List<Object> get(){
    List<Object> res6 = new ArrayList<>();
    for (var x : g) {
        res6.add(x.sr_net_loss);
    }
    return res6;
}}).get().stream().mapToInt(n -> ((Number)n).intValue()).sum(), (new java.util.function.Supplier<List<Object>>(){public List<Object> get(){
    List<Object> res7 = new ArrayList<>();
    for (var x : g) {
        res7.add(x.cs_net_profit);
    }
    return res7;
}}).get().stream().mapToInt(n -> ((Number)n).intValue()).sum()));
    }
    return res0;
}}).get();
    json(result);
    if (!(Objects.equals(result, Arrays.asList(new IItemIdIItemDescSStoreIdSStoreNameStoreSalesProfitStoreReturnsLossCatalogSalesProfit("ITEM1", "Desc1", "S1", "Store1", 50.000000, 10.000000, 30.000000), new IItemIdIItemDescSStoreIdSStoreNameStoreSalesProfitStoreReturnsLossCatalogSalesProfit("ITEM2", "Desc2", "S1", "Store1", 20.000000, 5.000000, 15.000000))))) throw new AssertionError("expect failed");
    }
}
