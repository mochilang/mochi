// Generated by Mochi compiler v0.10.26 on 2025-07-15T07:52:04Z
// q91.mochi
import java.util.*;

class HouseholdDemographics {
    int hd_demo_sk;
    String hd_buy_potential;
    HouseholdDemographics(int hd_demo_sk, String hd_buy_potential) {
        this.hd_demo_sk = hd_demo_sk;
        this.hd_buy_potential = hd_buy_potential;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof HouseholdDemographics other)) return false;
        return Objects.equals(this.hd_demo_sk, other.hd_demo_sk) && Objects.equals(this.hd_buy_potential, other.hd_buy_potential);
    }
    @Override public int hashCode() {
        return Objects.hash(hd_demo_sk, hd_buy_potential);
    }
}
class CallCenter {
    int cc_call_center_sk;
    String cc_call_center_id;
    String cc_name;
    String cc_manager;
    CallCenter(int cc_call_center_sk, String cc_call_center_id, String cc_name, String cc_manager) {
        this.cc_call_center_sk = cc_call_center_sk;
        this.cc_call_center_id = cc_call_center_id;
        this.cc_name = cc_name;
        this.cc_manager = cc_manager;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CallCenter other)) return false;
        return Objects.equals(this.cc_call_center_sk, other.cc_call_center_sk) && Objects.equals(this.cc_call_center_id, other.cc_call_center_id) && Objects.equals(this.cc_name, other.cc_name) && Objects.equals(this.cc_manager, other.cc_manager);
    }
    @Override public int hashCode() {
        return Objects.hash(cc_call_center_sk, cc_call_center_id, cc_name, cc_manager);
    }
}
class CatalogReturn {
    int cr_call_center_sk;
    int cr_returned_date_sk;
    int cr_returning_customer_sk;
    double cr_net_loss;
    CatalogReturn(int cr_call_center_sk, int cr_returned_date_sk, int cr_returning_customer_sk, double cr_net_loss) {
        this.cr_call_center_sk = cr_call_center_sk;
        this.cr_returned_date_sk = cr_returned_date_sk;
        this.cr_returning_customer_sk = cr_returning_customer_sk;
        this.cr_net_loss = cr_net_loss;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CatalogReturn other)) return false;
        return Objects.equals(this.cr_call_center_sk, other.cr_call_center_sk) && Objects.equals(this.cr_returned_date_sk, other.cr_returned_date_sk) && Objects.equals(this.cr_returning_customer_sk, other.cr_returning_customer_sk) && Objects.equals(this.cr_net_loss, other.cr_net_loss);
    }
    @Override public int hashCode() {
        return Objects.hash(cr_call_center_sk, cr_returned_date_sk, cr_returning_customer_sk, cr_net_loss);
    }
}
class DateDim {
    int d_date_sk;
    int d_year;
    int d_moy;
    DateDim(int d_date_sk, int d_year, int d_moy) {
        this.d_date_sk = d_date_sk;
        this.d_year = d_year;
        this.d_moy = d_moy;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof DateDim other)) return false;
        return Objects.equals(this.d_date_sk, other.d_date_sk) && Objects.equals(this.d_year, other.d_year) && Objects.equals(this.d_moy, other.d_moy);
    }
    @Override public int hashCode() {
        return Objects.hash(d_date_sk, d_year, d_moy);
    }
}
class Customer {
    int c_customer_sk;
    int c_current_cdemo_sk;
    int c_current_hdemo_sk;
    int c_current_addr_sk;
    Customer(int c_customer_sk, int c_current_cdemo_sk, int c_current_hdemo_sk, int c_current_addr_sk) {
        this.c_customer_sk = c_customer_sk;
        this.c_current_cdemo_sk = c_current_cdemo_sk;
        this.c_current_hdemo_sk = c_current_hdemo_sk;
        this.c_current_addr_sk = c_current_addr_sk;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Customer other)) return false;
        return Objects.equals(this.c_customer_sk, other.c_customer_sk) && Objects.equals(this.c_current_cdemo_sk, other.c_current_cdemo_sk) && Objects.equals(this.c_current_hdemo_sk, other.c_current_hdemo_sk) && Objects.equals(this.c_current_addr_sk, other.c_current_addr_sk);
    }
    @Override public int hashCode() {
        return Objects.hash(c_customer_sk, c_current_cdemo_sk, c_current_hdemo_sk, c_current_addr_sk);
    }
}
class CustomerAddress {
    int ca_address_sk;
    int ca_gmt_offset;
    CustomerAddress(int ca_address_sk, int ca_gmt_offset) {
        this.ca_address_sk = ca_address_sk;
        this.ca_gmt_offset = ca_gmt_offset;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CustomerAddress other)) return false;
        return Objects.equals(this.ca_address_sk, other.ca_address_sk) && Objects.equals(this.ca_gmt_offset, other.ca_gmt_offset);
    }
    @Override public int hashCode() {
        return Objects.hash(ca_address_sk, ca_gmt_offset);
    }
}
class CustomerDemographics {
    int cd_demo_sk;
    String cd_marital_status;
    String cd_education_status;
    CustomerDemographics(int cd_demo_sk, String cd_marital_status, String cd_education_status) {
        this.cd_demo_sk = cd_demo_sk;
        this.cd_marital_status = cd_marital_status;
        this.cd_education_status = cd_education_status;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CustomerDemographics other)) return false;
        return Objects.equals(this.cd_demo_sk, other.cd_demo_sk) && Objects.equals(this.cd_marital_status, other.cd_marital_status) && Objects.equals(this.cd_education_status, other.cd_education_status);
    }
    @Override public int hashCode() {
        return Objects.hash(cd_demo_sk, cd_marital_status, cd_education_status);
    }
}
class CcCallCenterSkCcCallCenterIdCcNameCcManager {
    int cc_call_center_sk;
    String cc_call_center_id;
    String cc_name;
    String cc_manager;
    CcCallCenterSkCcCallCenterIdCcNameCcManager(int cc_call_center_sk, String cc_call_center_id, String cc_name, String cc_manager) {
        this.cc_call_center_sk = cc_call_center_sk;
        this.cc_call_center_id = cc_call_center_id;
        this.cc_name = cc_name;
        this.cc_manager = cc_manager;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CcCallCenterSkCcCallCenterIdCcNameCcManager other)) return false;
        return Objects.equals(this.cc_call_center_sk, other.cc_call_center_sk) && Objects.equals(this.cc_call_center_id, other.cc_call_center_id) && Objects.equals(this.cc_name, other.cc_name) && Objects.equals(this.cc_manager, other.cc_manager);
    }
    @Override public int hashCode() {
        return Objects.hash(cc_call_center_sk, cc_call_center_id, cc_name, cc_manager);
    }
    int size() { return 4; }
}
class CrCallCenterSkCrReturnedDateSkCrReturningCustomerSkCrNetLoss {
    int cr_call_center_sk;
    int cr_returned_date_sk;
    int cr_returning_customer_sk;
    double cr_net_loss;
    CrCallCenterSkCrReturnedDateSkCrReturningCustomerSkCrNetLoss(int cr_call_center_sk, int cr_returned_date_sk, int cr_returning_customer_sk, double cr_net_loss) {
        this.cr_call_center_sk = cr_call_center_sk;
        this.cr_returned_date_sk = cr_returned_date_sk;
        this.cr_returning_customer_sk = cr_returning_customer_sk;
        this.cr_net_loss = cr_net_loss;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CrCallCenterSkCrReturnedDateSkCrReturningCustomerSkCrNetLoss other)) return false;
        return Objects.equals(this.cr_call_center_sk, other.cr_call_center_sk) && Objects.equals(this.cr_returned_date_sk, other.cr_returned_date_sk) && Objects.equals(this.cr_returning_customer_sk, other.cr_returning_customer_sk) && Objects.equals(this.cr_net_loss, other.cr_net_loss);
    }
    @Override public int hashCode() {
        return Objects.hash(cr_call_center_sk, cr_returned_date_sk, cr_returning_customer_sk, cr_net_loss);
    }
    int size() { return 4; }
}
class DDateSkDYearDMoy {
    int d_date_sk;
    int d_year;
    int d_moy;
    DDateSkDYearDMoy(int d_date_sk, int d_year, int d_moy) {
        this.d_date_sk = d_date_sk;
        this.d_year = d_year;
        this.d_moy = d_moy;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof DDateSkDYearDMoy other)) return false;
        return Objects.equals(this.d_date_sk, other.d_date_sk) && Objects.equals(this.d_year, other.d_year) && Objects.equals(this.d_moy, other.d_moy);
    }
    @Override public int hashCode() {
        return Objects.hash(d_date_sk, d_year, d_moy);
    }
    int size() { return 3; }
}
class CCustomerSkCCurrentCdemoSkCCurrentHdemoSkCCurrentAddrSk {
    int c_customer_sk;
    int c_current_cdemo_sk;
    int c_current_hdemo_sk;
    int c_current_addr_sk;
    CCustomerSkCCurrentCdemoSkCCurrentHdemoSkCCurrentAddrSk(int c_customer_sk, int c_current_cdemo_sk, int c_current_hdemo_sk, int c_current_addr_sk) {
        this.c_customer_sk = c_customer_sk;
        this.c_current_cdemo_sk = c_current_cdemo_sk;
        this.c_current_hdemo_sk = c_current_hdemo_sk;
        this.c_current_addr_sk = c_current_addr_sk;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CCustomerSkCCurrentCdemoSkCCurrentHdemoSkCCurrentAddrSk other)) return false;
        return Objects.equals(this.c_customer_sk, other.c_customer_sk) && Objects.equals(this.c_current_cdemo_sk, other.c_current_cdemo_sk) && Objects.equals(this.c_current_hdemo_sk, other.c_current_hdemo_sk) && Objects.equals(this.c_current_addr_sk, other.c_current_addr_sk);
    }
    @Override public int hashCode() {
        return Objects.hash(c_customer_sk, c_current_cdemo_sk, c_current_hdemo_sk, c_current_addr_sk);
    }
    int size() { return 4; }
}
class CdDemoSkCdMaritalStatusCdEducationStatus {
    int cd_demo_sk;
    String cd_marital_status;
    String cd_education_status;
    CdDemoSkCdMaritalStatusCdEducationStatus(int cd_demo_sk, String cd_marital_status, String cd_education_status) {
        this.cd_demo_sk = cd_demo_sk;
        this.cd_marital_status = cd_marital_status;
        this.cd_education_status = cd_education_status;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CdDemoSkCdMaritalStatusCdEducationStatus other)) return false;
        return Objects.equals(this.cd_demo_sk, other.cd_demo_sk) && Objects.equals(this.cd_marital_status, other.cd_marital_status) && Objects.equals(this.cd_education_status, other.cd_education_status);
    }
    @Override public int hashCode() {
        return Objects.hash(cd_demo_sk, cd_marital_status, cd_education_status);
    }
    int size() { return 3; }
}
class HdDemoSkHdBuyPotential {
    int hd_demo_sk;
    String hd_buy_potential;
    HdDemoSkHdBuyPotential(int hd_demo_sk, String hd_buy_potential) {
        this.hd_demo_sk = hd_demo_sk;
        this.hd_buy_potential = hd_buy_potential;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof HdDemoSkHdBuyPotential other)) return false;
        return Objects.equals(this.hd_demo_sk, other.hd_demo_sk) && Objects.equals(this.hd_buy_potential, other.hd_buy_potential);
    }
    @Override public int hashCode() {
        return Objects.hash(hd_demo_sk, hd_buy_potential);
    }
    int size() { return 2; }
}
class CaAddressSkCaGmtOffset {
    int ca_address_sk;
    int ca_gmt_offset;
    CaAddressSkCaGmtOffset(int ca_address_sk, int ca_gmt_offset) {
        this.ca_address_sk = ca_address_sk;
        this.ca_gmt_offset = ca_gmt_offset;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CaAddressSkCaGmtOffset other)) return false;
        return Objects.equals(this.ca_address_sk, other.ca_address_sk) && Objects.equals(this.ca_gmt_offset, other.ca_gmt_offset);
    }
    @Override public int hashCode() {
        return Objects.hash(ca_address_sk, ca_gmt_offset);
    }
    int size() { return 2; }
}
class CcDCdHdCa {
    CcCallCenterSkCcCallCenterIdCcNameCcManager cc;
    DDateSkDYearDMoy d;
    CdDemoSkCdMaritalStatusCdEducationStatus cd;
    HdDemoSkHdBuyPotential hd;
    CaAddressSkCaGmtOffset ca;
    CcDCdHdCa(CcCallCenterSkCcCallCenterIdCcNameCcManager cc, DDateSkDYearDMoy d, CdDemoSkCdMaritalStatusCdEducationStatus cd, HdDemoSkHdBuyPotential hd, CaAddressSkCaGmtOffset ca) {
        this.cc = cc;
        this.d = d;
        this.cd = cd;
        this.hd = hd;
        this.ca = ca;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CcDCdHdCa other)) return false;
        return Objects.equals(this.cc, other.cc) && Objects.equals(this.d, other.d) && Objects.equals(this.cd, other.cd) && Objects.equals(this.hd, other.hd) && Objects.equals(this.ca, other.ca);
    }
    @Override public int hashCode() {
        return Objects.hash(cc, d, cd, hd, ca);
    }
    int size() { return 5; }
}
class IdNameMgr {
    String id;
    String name;
    String mgr;
    IdNameMgr(String id, String name, String mgr) {
        this.id = id;
        this.name = name;
        this.mgr = mgr;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof IdNameMgr other)) return false;
        return Objects.equals(this.id, other.id) && Objects.equals(this.name, other.name) && Objects.equals(this.mgr, other.mgr);
    }
    @Override public int hashCode() {
        return Objects.hash(id, name, mgr);
    }
    int size() { return 3; }
}
class CallCenterCallCenterNameManagerReturnsLoss {
    String Call_Center;
    String Call_Center_Name;
    String Manager;
    int Returns_Loss;
    CallCenterCallCenterNameManagerReturnsLoss(String Call_Center, String Call_Center_Name, String Manager, int Returns_Loss) {
        this.Call_Center = Call_Center;
        this.Call_Center_Name = Call_Center_Name;
        this.Manager = Manager;
        this.Returns_Loss = Returns_Loss;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CallCenterCallCenterNameManagerReturnsLoss other)) return false;
        return Objects.equals(this.Call_Center, other.Call_Center) && Objects.equals(this.Call_Center_Name, other.Call_Center_Name) && Objects.equals(this.Manager, other.Manager) && Objects.equals(this.Returns_Loss, other.Returns_Loss);
    }
    @Override public int hashCode() {
        return Objects.hash(Call_Center, Call_Center_Name, Manager, Returns_Loss);
    }
    int size() { return 4; }
}
public class Q91 {
    static class Group<K,V> implements Iterable<V> {
        K key;
        List<V> items;
        Group(K key, List<V> items) { this.key = key; this.items = items; }
        public Iterator<V> iterator() { return items.iterator(); }
        int size() { return items.size(); }
    }
    static Map<String,Object> asMap(Object o) {
        if (o instanceof Map<?,?> mm) {
            LinkedHashMap<String,Object> m = new LinkedHashMap<>();
            for (Map.Entry<?,?> e : mm.entrySet()) m.put(String.valueOf(e.getKey()), e.getValue());
            return m;
        }
        LinkedHashMap<String,Object> m = new LinkedHashMap<>();
        for (var f : o.getClass().getDeclaredFields()) { try { f.setAccessible(true); m.put(f.getName(), f.get(o)); } catch (Exception e) { throw new RuntimeException(e); } }
        return m;
    }
    static void saveJsonl(List<?> list) {
        for (Object obj : list) {
            Map<String,Object> m = asMap(obj);
            List<String> parts = new ArrayList<>();
            for (Map.Entry<?,?> e : m.entrySet()) { parts.add("\"" + e.getKey() + "\":" + e.getValue()); }
            System.out.println("{" + String.join(",", parts) + "}");
        }
    }
    static String toJson(Object o) {
        if (o instanceof Map<?,?> m) {
            StringJoiner j = new StringJoiner(",", "{", "}");
            for (Map.Entry<?,?> e : m.entrySet()) j.add("\"" + e.getKey() + "\":" + toJson(e.getValue()));
            return j.toString();
        } else if (o instanceof Collection<?> c) {
            StringJoiner j = new StringJoiner(",", "[", "]");
            for (var x : c) j.add(toJson(x));
            return j.toString();
        } else if (o instanceof String s) {
            return "\"" + s + "\"";
        } else if (o instanceof Number || o instanceof Boolean || o instanceof Character) {
            return String.valueOf(o);
        } else {
            Map<String,Object> m = asMap(o);
            StringJoiner j = new StringJoiner(",", "{", "}");
            for (Map.Entry<String,Object> e : m.entrySet()) j.add("\"" + e.getKey() + "\":" + toJson(e.getValue()));
            return j.toString();
        }
    }
    static void json(Object o) { System.out.println(toJson(o)); }
    public static void main(String[] args) {
    List<CcCallCenterSkCcCallCenterIdCcNameCcManager> call_center = new ArrayList<>(Arrays.asList(new CcCallCenterSkCcCallCenterIdCcNameCcManager(1, "CC1", "Main", "Alice")));
    List<CrCallCenterSkCrReturnedDateSkCrReturningCustomerSkCrNetLoss> catalog_returns = new ArrayList<>(Arrays.asList(new CrCallCenterSkCrReturnedDateSkCrReturningCustomerSkCrNetLoss(1, 1, 1, 10.000000)));
    List<DDateSkDYearDMoy> date_dim = new ArrayList<>(Arrays.asList(new DDateSkDYearDMoy(1, 2001, 5)));
    List<CCustomerSkCCurrentCdemoSkCCurrentHdemoSkCCurrentAddrSk> customer = new ArrayList<>(Arrays.asList(new CCustomerSkCCurrentCdemoSkCCurrentHdemoSkCCurrentAddrSk(1, 1, 1, 1)));
    List<CdDemoSkCdMaritalStatusCdEducationStatus> customer_demographics = new ArrayList<>(Arrays.asList(new CdDemoSkCdMaritalStatusCdEducationStatus(1, "M", "Unknown")));
    List<HdDemoSkHdBuyPotential> household_demographics = new ArrayList<>(Arrays.asList(new HdDemoSkHdBuyPotential(1, "1001-5000")));
    List<CaAddressSkCaGmtOffset> customer_address = new ArrayList<>(Arrays.asList(new CaAddressSkCaGmtOffset(1, -6)));
    Object result = first((new java.util.function.Supplier<List<CallCenterCallCenterNameManagerReturnsLoss>>(){public List<CallCenterCallCenterNameManagerReturnsLoss> get(){
    List<CallCenterCallCenterNameManagerReturnsLoss> res0 = new ArrayList<>();
    Map<IdNameMgr,List<CcDCdHdCa>> groups1 = new LinkedHashMap<>();
    for (var cc : call_center) {
        for (var cr : catalog_returns) {
            if (!(cc.cc_call_center_sk == cr.cr_call_center_sk)) continue;
            for (var d : date_dim) {
                if (!(cr.cr_returned_date_sk == d.d_date_sk)) continue;
                for (var c : customer) {
                    if (!(cr.cr_returning_customer_sk == c.c_customer_sk)) continue;
                    for (var cd : customer_demographics) {
                        if (!(c.c_current_cdemo_sk == cd.cd_demo_sk)) continue;
                        for (var hd : household_demographics) {
                            if (!(c.c_current_hdemo_sk == hd.hd_demo_sk)) continue;
                            for (var ca : customer_address) {
                                if (!(c.c_current_addr_sk == ca.ca_address_sk)) continue;
                                if (!(d.d_year == 2001 && d.d_moy == 5 && Objects.equals(cd.cd_marital_status, "M") && Objects.equals(cd.cd_education_status, "Unknown") && Objects.equals(hd.hd_buy_potential, "1001-5000") && Objects.equals(ca.ca_gmt_offset, (-6)))) continue;
                                CcDCdHdCa row2 = new CcDCdHdCa(cc, d, cd, hd, ca);
                                IdNameMgr key3 = new IdNameMgr(cc.cc_call_center_id, cc.cc_name, cc.cc_manager);
                                List<CcDCdHdCa> bucket4 = groups1.get(key3);
                                if (bucket4 == null) { bucket4 = new ArrayList<>(); groups1.put(key3, bucket4); }
                                bucket4.add(row2);
                            }
                        }
                    }
                }
            }
        }
    }
    for (Map.Entry<IdNameMgr,List<CcDCdHdCa>> __e : groups1.entrySet()) {
        IdNameMgr g_key = __e.getKey();
        Group<IdNameMgr,CcDCdHdCa> g = new Group<>(g_key, __e.getValue());
        res0.add(new CallCenterCallCenterNameManagerReturnsLoss(g.key.id, g.key.name, g.key.mgr, (new java.util.function.Supplier<List<Object>>(){public List<Object> get(){
    List<Object> res5 = new ArrayList<>();
    for (var x : g) {
        res5.add(x.cr_net_loss);
    }
    return res5;
}}).get().stream().mapToInt(n -> ((Number)n).intValue()).sum()));
    }
    return res0;
}}).get());
    json(result);
    if (!(Objects.equals(result, new CallCenterCallCenterNameManagerReturnsLoss("CC1", "Main", "Alice", 10.000000)))) throw new AssertionError("expect failed");
    }
}
