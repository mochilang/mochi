// Generated by Mochi compiler v0.10.25 on 2025-07-15T04:55:29Z
// q50.mochi
import java.util.*;

class TicketItemSoldCustomerStore {
    int ticket;
    int item;
    int sold;
    int customer;
    int store;
    TicketItemSoldCustomerStore(int ticket, int item, int sold, int customer, int store) {
        this.ticket = ticket;
        this.item = item;
        this.sold = sold;
        this.customer = customer;
        this.store = store;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof TicketItemSoldCustomerStore other)) return false;
        return Objects.equals(this.ticket, other.ticket) && Objects.equals(this.item, other.item) && Objects.equals(this.sold, other.sold) && Objects.equals(this.customer, other.customer) && Objects.equals(this.store, other.store);
    }
    @Override public int hashCode() {
        return Objects.hash(ticket, item, sold, customer, store);
    }
    int size() { return 5; }
}
class TicketItemReturnedCustomer {
    int ticket;
    int item;
    int returned;
    int customer;
    TicketItemReturnedCustomer(int ticket, int item, int returned, int customer) {
        this.ticket = ticket;
        this.item = item;
        this.returned = returned;
        this.customer = customer;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof TicketItemReturnedCustomer other)) return false;
        return Objects.equals(this.ticket, other.ticket) && Objects.equals(this.item, other.item) && Objects.equals(this.returned, other.returned) && Objects.equals(this.customer, other.customer);
    }
    @Override public int hashCode() {
        return Objects.hash(ticket, item, returned, customer);
    }
    int size() { return 4; }
}
class DDateSkDYearDMoy {
    int d_date_sk;
    int d_year;
    int d_moy;
    DDateSkDYearDMoy(int d_date_sk, int d_year, int d_moy) {
        this.d_date_sk = d_date_sk;
        this.d_year = d_year;
        this.d_moy = d_moy;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof DDateSkDYearDMoy other)) return false;
        return Objects.equals(this.d_date_sk, other.d_date_sk) && Objects.equals(this.d_year, other.d_year) && Objects.equals(this.d_moy, other.d_moy);
    }
    @Override public int hashCode() {
        return Objects.hash(d_date_sk, d_year, d_moy);
    }
    int size() { return 3; }
}
class SStoreSkSStoreNameSCompanyIdSStreetNumberSStreetNameSStreetTypeSSuiteNumberSCitySCountySStateSZip {
    int s_store_sk;
    String s_store_name;
    int s_company_id;
    String s_street_number;
    String s_street_name;
    String s_street_type;
    String s_suite_number;
    String s_city;
    String s_county;
    String s_state;
    String s_zip;
    SStoreSkSStoreNameSCompanyIdSStreetNumberSStreetNameSStreetTypeSSuiteNumberSCitySCountySStateSZip(int s_store_sk, String s_store_name, int s_company_id, String s_street_number, String s_street_name, String s_street_type, String s_suite_number, String s_city, String s_county, String s_state, String s_zip) {
        this.s_store_sk = s_store_sk;
        this.s_store_name = s_store_name;
        this.s_company_id = s_company_id;
        this.s_street_number = s_street_number;
        this.s_street_name = s_street_name;
        this.s_street_type = s_street_type;
        this.s_suite_number = s_suite_number;
        this.s_city = s_city;
        this.s_county = s_county;
        this.s_state = s_state;
        this.s_zip = s_zip;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof SStoreSkSStoreNameSCompanyIdSStreetNumberSStreetNameSStreetTypeSSuiteNumberSCitySCountySStateSZip other)) return false;
        return Objects.equals(this.s_store_sk, other.s_store_sk) && Objects.equals(this.s_store_name, other.s_store_name) && Objects.equals(this.s_company_id, other.s_company_id) && Objects.equals(this.s_street_number, other.s_street_number) && Objects.equals(this.s_street_name, other.s_street_name) && Objects.equals(this.s_street_type, other.s_street_type) && Objects.equals(this.s_suite_number, other.s_suite_number) && Objects.equals(this.s_city, other.s_city) && Objects.equals(this.s_county, other.s_county) && Objects.equals(this.s_state, other.s_state) && Objects.equals(this.s_zip, other.s_zip);
    }
    @Override public int hashCode() {
        return Objects.hash(s_store_sk, s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip);
    }
    int size() { return 11; }
}
class SDiff {
    SStoreSkSStoreNameSCompanyIdSStreetNumberSStreetNameSStreetTypeSSuiteNumberSCitySCountySStateSZip s;
    int diff;
    SDiff(SStoreSkSStoreNameSCompanyIdSStreetNumberSStreetNameSStreetTypeSSuiteNumberSCitySCountySStateSZip s, int diff) {
        this.s = s;
        this.diff = diff;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof SDiff other)) return false;
        return Objects.equals(this.s, other.s) && Objects.equals(this.diff, other.diff);
    }
    @Override public int hashCode() {
        return Objects.hash(s, diff);
    }
    int size() { return 2; }
}
class SStoreNameD30D3160D6190D91120DGt120 {
    String s_store_name;
    int d30;
    int d31_60;
    int d61_90;
    int d91_120;
    int d_gt_120;
    SStoreNameD30D3160D6190D91120DGt120(String s_store_name, int d30, int d31_60, int d61_90, int d91_120, int d_gt_120) {
        this.s_store_name = s_store_name;
        this.d30 = d30;
        this.d31_60 = d31_60;
        this.d61_90 = d61_90;
        this.d91_120 = d91_120;
        this.d_gt_120 = d_gt_120;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof SStoreNameD30D3160D6190D91120DGt120 other)) return false;
        return Objects.equals(this.s_store_name, other.s_store_name) && Objects.equals(this.d30, other.d30) && Objects.equals(this.d31_60, other.d31_60) && Objects.equals(this.d61_90, other.d61_90) && Objects.equals(this.d91_120, other.d91_120) && Objects.equals(this.d_gt_120, other.d_gt_120);
    }
    @Override public int hashCode() {
        return Objects.hash(s_store_name, d30, d31_60, d61_90, d91_120, d_gt_120);
    }
    int size() { return 6; }
}
public class Q50 {
    static class Group<K,V> implements Iterable<V> {
        K key;
        List<V> items;
        Group(K key, List<V> items) { this.key = key; this.items = items; }
        public Iterator<V> iterator() { return items.iterator(); }
        int size() { return items.size(); }
    }
    static Map<String,Object> asMap(Object o) {
        if (o instanceof Map<?,?> mm) {
            LinkedHashMap<String,Object> m = new LinkedHashMap<>();
            for (Map.Entry<?,?> e : mm.entrySet()) m.put(String.valueOf(e.getKey()), e.getValue());
            return m;
        }
        LinkedHashMap<String,Object> m = new LinkedHashMap<>();
        for (var f : o.getClass().getDeclaredFields()) { try { f.setAccessible(true); m.put(f.getName(), f.get(o)); } catch (Exception e) { throw new RuntimeException(e); } }
        return m;
    }
    static void saveJsonl(List<?> list) {
        for (Object obj : list) {
            Map<String,Object> m = asMap(obj);
            List<String> parts = new ArrayList<>();
            for (Map.Entry<?,?> e : m.entrySet()) { parts.add("\"" + e.getKey() + "\":" + e.getValue()); }
            System.out.println("{" + String.join(",", parts) + "}");
        }
    }
    static String toJson(Object o) {
        if (o instanceof Map<?,?> m) {
            StringJoiner j = new StringJoiner(",", "{", "}");
            for (Map.Entry<?,?> e : m.entrySet()) j.add("\"" + e.getKey() + "\":" + toJson(e.getValue()));
            return j.toString();
        } else if (o instanceof Collection<?> c) {
            StringJoiner j = new StringJoiner(",", "[", "]");
            for (var x : c) j.add(toJson(x));
            return j.toString();
        } else if (o instanceof String s) {
            return "\"" + s + "\"";
        } else if (o instanceof Number || o instanceof Boolean || o instanceof Character) {
            return String.valueOf(o);
        } else {
            Map<String,Object> m = asMap(o);
            StringJoiner j = new StringJoiner(",", "{", "}");
            for (Map.Entry<String,Object> e : m.entrySet()) j.add("\"" + e.getKey() + "\":" + toJson(e.getValue()));
            return j.toString();
        }
    }
    static void json(Object o) { System.out.println(toJson(o)); }
    public static void main(String[] args) {
    List<TicketItemSoldCustomerStore> store_sales = new ArrayList<>(Arrays.asList(new TicketItemSoldCustomerStore(1, 101, 1, 1, 1), new TicketItemSoldCustomerStore(2, 102, 1, 1, 1), new TicketItemSoldCustomerStore(3, 103, 1, 1, 1), new TicketItemSoldCustomerStore(4, 104, 1, 1, 1), new TicketItemSoldCustomerStore(5, 105, 1, 1, 1)));
    List<TicketItemReturnedCustomer> store_returns = new ArrayList<>(Arrays.asList(new TicketItemReturnedCustomer(1, 101, 16, 1), new TicketItemReturnedCustomer(2, 102, 46, 1), new TicketItemReturnedCustomer(3, 103, 76, 1), new TicketItemReturnedCustomer(4, 104, 111, 1), new TicketItemReturnedCustomer(5, 105, 151, 1)));
    List<DDateSkDYearDMoy> date_dim = new ArrayList<>(Arrays.asList(new DDateSkDYearDMoy(1, 2001, 7), new DDateSkDYearDMoy(16, 2001, 8), new DDateSkDYearDMoy(46, 2001, 8), new DDateSkDYearDMoy(76, 2001, 8), new DDateSkDYearDMoy(111, 2001, 8), new DDateSkDYearDMoy(151, 2001, 8)));
    List<SStoreSkSStoreNameSCompanyIdSStreetNumberSStreetNameSStreetTypeSSuiteNumberSCitySCountySStateSZip> store = new ArrayList<>(Arrays.asList(new SStoreSkSStoreNameSCompanyIdSStreetNumberSStreetNameSStreetTypeSSuiteNumberSCitySCountySStateSZip(1, "Main", 1, "1", "Main", "St", "100", "City", "County", "CA", "12345")));
    int year = 2001;
    int month = 8;
    List<SDiff> joined = (new java.util.function.Supplier<List<SDiff>>(){public List<SDiff> get(){
    List<SDiff> res0 = new ArrayList<>();
    for (var ss : store_sales) {
        for (var sr : store_returns) {
            if (!(ss.ticket == sr.ticket && ss.item == sr.item && ss.customer == sr.customer)) continue;
            for (var d1 : date_dim) {
                if (!(ss.sold == d1.d_date_sk)) continue;
                for (var d2 : date_dim) {
                    if (!(sr.returned == d2.d_date_sk && d2.d_year == year && d2.d_moy == month)) continue;
                    for (var s : store) {
                        if (!(ss.store == s.s_store_sk)) continue;
                        res0.add(new SDiff(s, sr.returned - ss.sold));
                    }
                }
            }
        }
    }
    return res0;
}}).get();
    List<SStoreNameD30D3160D6190D91120DGt120> result = (new java.util.function.Supplier<List<SStoreNameD30D3160D6190D91120DGt120>>(){public List<SStoreNameD30D3160D6190D91120DGt120> get(){
    List<SStoreNameD30D3160D6190D91120DGt120> res1 = new ArrayList<>();
    Map<SStoreSkSStoreNameSCompanyIdSStreetNumberSStreetNameSStreetTypeSSuiteNumberSCitySCountySStateSZip,List<SDiff>> groups2 = new LinkedHashMap<>();
    for (var j : joined) {
        var row3 = j;
        SStoreSkSStoreNameSCompanyIdSStreetNumberSStreetNameSStreetTypeSSuiteNumberSCitySCountySStateSZip key4 = j.s;
        List<SDiff> bucket5 = groups2.get(key4);
        if (bucket5 == null) { bucket5 = new ArrayList<>(); groups2.put(key4, bucket5); }
        bucket5.add(row3);
    }
    for (Map.Entry<SStoreSkSStoreNameSCompanyIdSStreetNumberSStreetNameSStreetTypeSSuiteNumberSCitySCountySStateSZip,List<SDiff>> __e : groups2.entrySet()) {
        SStoreSkSStoreNameSCompanyIdSStreetNumberSStreetNameSStreetTypeSSuiteNumberSCitySCountySStateSZip g_key = __e.getKey();
        Group<SStoreSkSStoreNameSCompanyIdSStreetNumberSStreetNameSStreetTypeSSuiteNumberSCitySCountySStateSZip,SDiff> g = new Group<>(g_key, __e.getValue());
        res1.add(new SStoreNameD30D3160D6190D91120DGt120(g.key.s_store_name, (new java.util.function.Supplier<List<Integer>>(){public List<Integer> get(){
    List<Integer> res6 = new ArrayList<>();
    for (var x : g) {
        if (!(x.diff <= 30)) continue;
        res6.add(1);
    }
    return res6;
}}).get().size(), (new java.util.function.Supplier<List<Integer>>(){public List<Integer> get(){
    List<Integer> res7 = new ArrayList<>();
    for (var x : g) {
        if (!(x.diff > 30 && x.diff <= 60)) continue;
        res7.add(1);
    }
    return res7;
}}).get().size(), (new java.util.function.Supplier<List<Integer>>(){public List<Integer> get(){
    List<Integer> res8 = new ArrayList<>();
    for (var x : g) {
        if (!(x.diff > 60 && x.diff <= 90)) continue;
        res8.add(1);
    }
    return res8;
}}).get().size(), (new java.util.function.Supplier<List<Integer>>(){public List<Integer> get(){
    List<Integer> res9 = new ArrayList<>();
    for (var x : g) {
        if (!(x.diff > 90 && x.diff <= 120)) continue;
        res9.add(1);
    }
    return res9;
}}).get().size(), (new java.util.function.Supplier<List<Integer>>(){public List<Integer> get(){
    List<Integer> res10 = new ArrayList<>();
    for (var x : g) {
        if (!(x.diff > 120)) continue;
        res10.add(1);
    }
    return res10;
}}).get().size()));
    }
    return res1;
}}).get();
    json(result);
    if (!(Objects.equals(result, Arrays.asList(new SStoreNameD30D3160D6190D91120DGt120("Main", 1, 1, 1, 1, 1))))) throw new AssertionError("expect failed");
    }
}
