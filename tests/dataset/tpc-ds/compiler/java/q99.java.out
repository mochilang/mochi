// Generated by Mochi compiler v0.10.26 on 2025-07-15T06:56:29Z
// q99.mochi
import java.util.*;

class CatalogSale {
    int cs_ship_date_sk;
    int cs_sold_date_sk;
    int cs_warehouse_sk;
    int cs_ship_mode_sk;
    int cs_call_center_sk;
    CatalogSale(int cs_ship_date_sk, int cs_sold_date_sk, int cs_warehouse_sk, int cs_ship_mode_sk, int cs_call_center_sk) {
        this.cs_ship_date_sk = cs_ship_date_sk;
        this.cs_sold_date_sk = cs_sold_date_sk;
        this.cs_warehouse_sk = cs_warehouse_sk;
        this.cs_ship_mode_sk = cs_ship_mode_sk;
        this.cs_call_center_sk = cs_call_center_sk;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CatalogSale other)) return false;
        return Objects.equals(this.cs_ship_date_sk, other.cs_ship_date_sk) && Objects.equals(this.cs_sold_date_sk, other.cs_sold_date_sk) && Objects.equals(this.cs_warehouse_sk, other.cs_warehouse_sk) && Objects.equals(this.cs_ship_mode_sk, other.cs_ship_mode_sk) && Objects.equals(this.cs_call_center_sk, other.cs_call_center_sk);
    }
    @Override public int hashCode() {
        return Objects.hash(cs_ship_date_sk, cs_sold_date_sk, cs_warehouse_sk, cs_ship_mode_sk, cs_call_center_sk);
    }
}
class Warehouse {
    int w_warehouse_sk;
    String w_warehouse_name;
    Warehouse(int w_warehouse_sk, String w_warehouse_name) {
        this.w_warehouse_sk = w_warehouse_sk;
        this.w_warehouse_name = w_warehouse_name;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Warehouse other)) return false;
        return Objects.equals(this.w_warehouse_sk, other.w_warehouse_sk) && Objects.equals(this.w_warehouse_name, other.w_warehouse_name);
    }
    @Override public int hashCode() {
        return Objects.hash(w_warehouse_sk, w_warehouse_name);
    }
}
class ShipMode {
    int sm_ship_mode_sk;
    String sm_type;
    ShipMode(int sm_ship_mode_sk, String sm_type) {
        this.sm_ship_mode_sk = sm_ship_mode_sk;
        this.sm_type = sm_type;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof ShipMode other)) return false;
        return Objects.equals(this.sm_ship_mode_sk, other.sm_ship_mode_sk) && Objects.equals(this.sm_type, other.sm_type);
    }
    @Override public int hashCode() {
        return Objects.hash(sm_ship_mode_sk, sm_type);
    }
}
class CallCenter {
    int cc_call_center_sk;
    String cc_name;
    CallCenter(int cc_call_center_sk, String cc_name) {
        this.cc_call_center_sk = cc_call_center_sk;
        this.cc_name = cc_name;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CallCenter other)) return false;
        return Objects.equals(this.cc_call_center_sk, other.cc_call_center_sk) && Objects.equals(this.cc_name, other.cc_name);
    }
    @Override public int hashCode() {
        return Objects.hash(cc_call_center_sk, cc_name);
    }
}
class CsShipDateSkCsSoldDateSkCsWarehouseSkCsShipModeSkCsCallCenterSk {
    int cs_ship_date_sk;
    int cs_sold_date_sk;
    int cs_warehouse_sk;
    int cs_ship_mode_sk;
    int cs_call_center_sk;
    CsShipDateSkCsSoldDateSkCsWarehouseSkCsShipModeSkCsCallCenterSk(int cs_ship_date_sk, int cs_sold_date_sk, int cs_warehouse_sk, int cs_ship_mode_sk, int cs_call_center_sk) {
        this.cs_ship_date_sk = cs_ship_date_sk;
        this.cs_sold_date_sk = cs_sold_date_sk;
        this.cs_warehouse_sk = cs_warehouse_sk;
        this.cs_ship_mode_sk = cs_ship_mode_sk;
        this.cs_call_center_sk = cs_call_center_sk;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CsShipDateSkCsSoldDateSkCsWarehouseSkCsShipModeSkCsCallCenterSk other)) return false;
        return Objects.equals(this.cs_ship_date_sk, other.cs_ship_date_sk) && Objects.equals(this.cs_sold_date_sk, other.cs_sold_date_sk) && Objects.equals(this.cs_warehouse_sk, other.cs_warehouse_sk) && Objects.equals(this.cs_ship_mode_sk, other.cs_ship_mode_sk) && Objects.equals(this.cs_call_center_sk, other.cs_call_center_sk);
    }
    @Override public int hashCode() {
        return Objects.hash(cs_ship_date_sk, cs_sold_date_sk, cs_warehouse_sk, cs_ship_mode_sk, cs_call_center_sk);
    }
    int size() { return 5; }
}
class WWarehouseSkWWarehouseName {
    int w_warehouse_sk;
    String w_warehouse_name;
    WWarehouseSkWWarehouseName(int w_warehouse_sk, String w_warehouse_name) {
        this.w_warehouse_sk = w_warehouse_sk;
        this.w_warehouse_name = w_warehouse_name;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof WWarehouseSkWWarehouseName other)) return false;
        return Objects.equals(this.w_warehouse_sk, other.w_warehouse_sk) && Objects.equals(this.w_warehouse_name, other.w_warehouse_name);
    }
    @Override public int hashCode() {
        return Objects.hash(w_warehouse_sk, w_warehouse_name);
    }
    int size() { return 2; }
}
class SmShipModeSkSmType {
    int sm_ship_mode_sk;
    String sm_type;
    SmShipModeSkSmType(int sm_ship_mode_sk, String sm_type) {
        this.sm_ship_mode_sk = sm_ship_mode_sk;
        this.sm_type = sm_type;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof SmShipModeSkSmType other)) return false;
        return Objects.equals(this.sm_ship_mode_sk, other.sm_ship_mode_sk) && Objects.equals(this.sm_type, other.sm_type);
    }
    @Override public int hashCode() {
        return Objects.hash(sm_ship_mode_sk, sm_type);
    }
    int size() { return 2; }
}
class CcCallCenterSkCcName {
    int cc_call_center_sk;
    String cc_name;
    CcCallCenterSkCcName(int cc_call_center_sk, String cc_name) {
        this.cc_call_center_sk = cc_call_center_sk;
        this.cc_name = cc_name;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CcCallCenterSkCcName other)) return false;
        return Objects.equals(this.cc_call_center_sk, other.cc_call_center_sk) && Objects.equals(this.cc_name, other.cc_name);
    }
    @Override public int hashCode() {
        return Objects.hash(cc_call_center_sk, cc_name);
    }
    int size() { return 2; }
}
class CsWSmCc {
    CsShipDateSkCsSoldDateSkCsWarehouseSkCsShipModeSkCsCallCenterSk cs;
    WWarehouseSkWWarehouseName w;
    SmShipModeSkSmType sm;
    CcCallCenterSkCcName cc;
    CsWSmCc(CsShipDateSkCsSoldDateSkCsWarehouseSkCsShipModeSkCsCallCenterSk cs, WWarehouseSkWWarehouseName w, SmShipModeSkSmType sm, CcCallCenterSkCcName cc) {
        this.cs = cs;
        this.w = w;
        this.sm = sm;
        this.cc = cc;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CsWSmCc other)) return false;
        return Objects.equals(this.cs, other.cs) && Objects.equals(this.w, other.w) && Objects.equals(this.sm, other.sm) && Objects.equals(this.cc, other.cc);
    }
    @Override public int hashCode() {
        return Objects.hash(cs, w, sm, cc);
    }
    int size() { return 4; }
}
class WarehouseSmTypeCcName {
    Object warehouse;
    String sm_type;
    String cc_name;
    WarehouseSmTypeCcName(Object warehouse, String sm_type, String cc_name) {
        this.warehouse = warehouse;
        this.sm_type = sm_type;
        this.cc_name = cc_name;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof WarehouseSmTypeCcName other)) return false;
        return Objects.equals(this.warehouse, other.warehouse) && Objects.equals(this.sm_type, other.sm_type) && Objects.equals(this.cc_name, other.cc_name);
    }
    @Override public int hashCode() {
        return Objects.hash(warehouse, sm_type, cc_name);
    }
    int size() { return 3; }
}
class WarehouseSmTypeCcNameD30D60D90D120Dmore {
    String warehouse;
    String sm_type;
    String cc_name;
    int d30;
    int d60;
    int d90;
    int d120;
    int dmore;
    WarehouseSmTypeCcNameD30D60D90D120Dmore(String warehouse, String sm_type, String cc_name, int d30, int d60, int d90, int d120, int dmore) {
        this.warehouse = warehouse;
        this.sm_type = sm_type;
        this.cc_name = cc_name;
        this.d30 = d30;
        this.d60 = d60;
        this.d90 = d90;
        this.d120 = d120;
        this.dmore = dmore;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof WarehouseSmTypeCcNameD30D60D90D120Dmore other)) return false;
        return Objects.equals(this.warehouse, other.warehouse) && Objects.equals(this.sm_type, other.sm_type) && Objects.equals(this.cc_name, other.cc_name) && Objects.equals(this.d30, other.d30) && Objects.equals(this.d60, other.d60) && Objects.equals(this.d90, other.d90) && Objects.equals(this.d120, other.d120) && Objects.equals(this.dmore, other.dmore);
    }
    @Override public int hashCode() {
        return Objects.hash(warehouse, sm_type, cc_name, d30, d60, d90, d120, dmore);
    }
    int size() { return 8; }
}
public class Q99 {
    static class Group<K,V> implements Iterable<V> {
        K key;
        List<V> items;
        Group(K key, List<V> items) { this.key = key; this.items = items; }
        public Iterator<V> iterator() { return items.iterator(); }
        int size() { return items.size(); }
    }
    static Map<String,Object> asMap(Object o) {
        if (o instanceof Map<?,?> mm) {
            LinkedHashMap<String,Object> m = new LinkedHashMap<>();
            for (Map.Entry<?,?> e : mm.entrySet()) m.put(String.valueOf(e.getKey()), e.getValue());
            return m;
        }
        LinkedHashMap<String,Object> m = new LinkedHashMap<>();
        for (var f : o.getClass().getDeclaredFields()) { try { f.setAccessible(true); m.put(f.getName(), f.get(o)); } catch (Exception e) { throw new RuntimeException(e); } }
        return m;
    }
    static void saveJsonl(List<?> list) {
        for (Object obj : list) {
            Map<String,Object> m = asMap(obj);
            List<String> parts = new ArrayList<>();
            for (Map.Entry<?,?> e : m.entrySet()) { parts.add("\"" + e.getKey() + "\":" + e.getValue()); }
            System.out.println("{" + String.join(",", parts) + "}");
        }
    }
    static String toJson(Object o) {
        if (o instanceof Map<?,?> m) {
            StringJoiner j = new StringJoiner(",", "{", "}");
            for (Map.Entry<?,?> e : m.entrySet()) j.add("\"" + e.getKey() + "\":" + toJson(e.getValue()));
            return j.toString();
        } else if (o instanceof Collection<?> c) {
            StringJoiner j = new StringJoiner(",", "[", "]");
            for (var x : c) j.add(toJson(x));
            return j.toString();
        } else if (o instanceof String s) {
            return "\"" + s + "\"";
        } else if (o instanceof Number || o instanceof Boolean || o instanceof Character) {
            return String.valueOf(o);
        } else {
            Map<String,Object> m = asMap(o);
            StringJoiner j = new StringJoiner(",", "{", "}");
            for (Map.Entry<String,Object> e : m.entrySet()) j.add("\"" + e.getKey() + "\":" + toJson(e.getValue()));
            return j.toString();
        }
    }
    static void json(Object o) { System.out.println(toJson(o)); }
    public static void main(String[] args) {
    List<CsShipDateSkCsSoldDateSkCsWarehouseSkCsShipModeSkCsCallCenterSk> catalog_sales = new ArrayList<>(Arrays.asList(new CsShipDateSkCsSoldDateSkCsWarehouseSkCsShipModeSkCsCallCenterSk(31, 1, 1, 1, 1), new CsShipDateSkCsSoldDateSkCsWarehouseSkCsShipModeSkCsCallCenterSk(51, 1, 1, 1, 1), new CsShipDateSkCsSoldDateSkCsWarehouseSkCsShipModeSkCsCallCenterSk(71, 1, 1, 1, 1), new CsShipDateSkCsSoldDateSkCsWarehouseSkCsShipModeSkCsCallCenterSk(101, 1, 1, 1, 1), new CsShipDateSkCsSoldDateSkCsWarehouseSkCsShipModeSkCsCallCenterSk(131, 1, 1, 1, 1)));
    List<WWarehouseSkWWarehouseName> warehouse = new ArrayList<>(Arrays.asList(new WWarehouseSkWWarehouseName(1, "Warehouse1")));
    List<SmShipModeSkSmType> ship_mode = new ArrayList<>(Arrays.asList(new SmShipModeSkSmType(1, "EXP")));
    List<CcCallCenterSkCcName> call_center = new ArrayList<>(Arrays.asList(new CcCallCenterSkCcName(1, "CC1")));
    List<WarehouseSmTypeCcNameD30D60D90D120Dmore> grouped = (new java.util.function.Supplier<List<WarehouseSmTypeCcNameD30D60D90D120Dmore>>(){public List<WarehouseSmTypeCcNameD30D60D90D120Dmore> get(){
    List<WarehouseSmTypeCcNameD30D60D90D120Dmore> res0 = new ArrayList<>();
    Map<WarehouseSmTypeCcName,List<CsWSmCc>> groups1 = new LinkedHashMap<>();
    for (var cs : catalog_sales) {
        for (var w : warehouse) {
            if (!(cs.cs_warehouse_sk == w.w_warehouse_sk)) continue;
            for (var sm : ship_mode) {
                if (!(cs.cs_ship_mode_sk == sm.sm_ship_mode_sk)) continue;
                for (var cc : call_center) {
                    if (!(cs.cs_call_center_sk == cc.cc_call_center_sk)) continue;
                    CsWSmCc row2 = new CsWSmCc(cs, w, sm, cc);
                    WarehouseSmTypeCcName key3 = new WarehouseSmTypeCcName(substr(w.w_warehouse_name, 0, 20), sm.sm_type, cc.cc_name);
                    List<CsWSmCc> bucket4 = groups1.get(key3);
                    if (bucket4 == null) { bucket4 = new ArrayList<>(); groups1.put(key3, bucket4); }
                    bucket4.add(row2);
                }
            }
        }
    }
    for (Map.Entry<WarehouseSmTypeCcName,List<CsWSmCc>> __e : groups1.entrySet()) {
        WarehouseSmTypeCcName g_key = __e.getKey();
        Group<WarehouseSmTypeCcName,CsWSmCc> g = new Group<>(g_key, __e.getValue());
        res0.add(new WarehouseSmTypeCcNameD30D60D90D120Dmore(g.key.warehouse, g.key.sm_type, g.key.cc_name, (new java.util.function.Supplier<List<CsWSmCc>>(){public List<CsWSmCc> get(){
    List<CsWSmCc> res5 = new ArrayList<>();
    for (var x : g) {
        if (!(x.cs_ship_date_sk - x.cs_sold_date_sk <= 30)) continue;
        res5.add(x);
    }
    return res5;
}}).get().size(), (new java.util.function.Supplier<List<CsWSmCc>>(){public List<CsWSmCc> get(){
    List<CsWSmCc> res6 = new ArrayList<>();
    for (var x : g) {
        if (!(x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60)) continue;
        res6.add(x);
    }
    return res6;
}}).get().size(), (new java.util.function.Supplier<List<CsWSmCc>>(){public List<CsWSmCc> get(){
    List<CsWSmCc> res7 = new ArrayList<>();
    for (var x : g) {
        if (!(x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90)) continue;
        res7.add(x);
    }
    return res7;
}}).get().size(), (new java.util.function.Supplier<List<CsWSmCc>>(){public List<CsWSmCc> get(){
    List<CsWSmCc> res8 = new ArrayList<>();
    for (var x : g) {
        if (!(x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120)) continue;
        res8.add(x);
    }
    return res8;
}}).get().size(), (new java.util.function.Supplier<List<CsWSmCc>>(){public List<CsWSmCc> get(){
    List<CsWSmCc> res9 = new ArrayList<>();
    for (var x : g) {
        if (!(x.cs_ship_date_sk - x.cs_sold_date_sk > 120)) continue;
        res9.add(x);
    }
    return res9;
}}).get().size()));
    }
    return res0;
}}).get();
    json(grouped);
    if (!(Objects.equals(grouped, Arrays.asList(new WarehouseSmTypeCcNameD30D60D90D120Dmore("Warehouse1", "EXP", "CC1", 1, 1, 1, 1, 1))))) throw new AssertionError("expect failed");
    }
}
