// Generated by Mochi compiler v0.10.26 on 2025-07-15T07:51:14Z
// q31.mochi
import java.util.*;

class CaCountyDQoyDYearSsExtSalesPrice {
    String ca_county;
    int d_qoy;
    int d_year;
    double ss_ext_sales_price;
    CaCountyDQoyDYearSsExtSalesPrice(String ca_county, int d_qoy, int d_year, double ss_ext_sales_price) {
        this.ca_county = ca_county;
        this.d_qoy = d_qoy;
        this.d_year = d_year;
        this.ss_ext_sales_price = ss_ext_sales_price;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CaCountyDQoyDYearSsExtSalesPrice other)) return false;
        return Objects.equals(this.ca_county, other.ca_county) && Objects.equals(this.d_qoy, other.d_qoy) && Objects.equals(this.d_year, other.d_year) && Objects.equals(this.ss_ext_sales_price, other.ss_ext_sales_price);
    }
    @Override public int hashCode() {
        return Objects.hash(ca_county, d_qoy, d_year, ss_ext_sales_price);
    }
    int size() { return 4; }
}
class CaCountyDQoyDYearWsExtSalesPrice {
    String ca_county;
    int d_qoy;
    int d_year;
    double ws_ext_sales_price;
    CaCountyDQoyDYearWsExtSalesPrice(String ca_county, int d_qoy, int d_year, double ws_ext_sales_price) {
        this.ca_county = ca_county;
        this.d_qoy = d_qoy;
        this.d_year = d_year;
        this.ws_ext_sales_price = ws_ext_sales_price;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CaCountyDQoyDYearWsExtSalesPrice other)) return false;
        return Objects.equals(this.ca_county, other.ca_county) && Objects.equals(this.d_qoy, other.d_qoy) && Objects.equals(this.d_year, other.d_year) && Objects.equals(this.ws_ext_sales_price, other.ws_ext_sales_price);
    }
    @Override public int hashCode() {
        return Objects.hash(ca_county, d_qoy, d_year, ws_ext_sales_price);
    }
    int size() { return 4; }
}
class CaCountyDYearWebQ1Q2IncreaseStoreQ1Q2IncreaseWebQ2Q3IncreaseStoreQ2Q3Increase {
    String ca_county;
    int d_year;
    double web_q1_q2_increase;
    double store_q1_q2_increase;
    double web_q2_q3_increase;
    double store_q2_q3_increase;
    CaCountyDYearWebQ1Q2IncreaseStoreQ1Q2IncreaseWebQ2Q3IncreaseStoreQ2Q3Increase(String ca_county, int d_year, double web_q1_q2_increase, double store_q1_q2_increase, double web_q2_q3_increase, double store_q2_q3_increase) {
        this.ca_county = ca_county;
        this.d_year = d_year;
        this.web_q1_q2_increase = web_q1_q2_increase;
        this.store_q1_q2_increase = store_q1_q2_increase;
        this.web_q2_q3_increase = web_q2_q3_increase;
        this.store_q2_q3_increase = store_q2_q3_increase;
    }
    @Override public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CaCountyDYearWebQ1Q2IncreaseStoreQ1Q2IncreaseWebQ2Q3IncreaseStoreQ2Q3Increase other)) return false;
        return Objects.equals(this.ca_county, other.ca_county) && Objects.equals(this.d_year, other.d_year) && Objects.equals(this.web_q1_q2_increase, other.web_q1_q2_increase) && Objects.equals(this.store_q1_q2_increase, other.store_q1_q2_increase) && Objects.equals(this.web_q2_q3_increase, other.web_q2_q3_increase) && Objects.equals(this.store_q2_q3_increase, other.store_q2_q3_increase);
    }
    @Override public int hashCode() {
        return Objects.hash(ca_county, d_year, web_q1_q2_increase, store_q1_q2_increase, web_q2_q3_increase, store_q2_q3_increase);
    }
    int size() { return 6; }
}
public class Q31 {
    static <T> List<T> append(List<T> list, T item) {
        List<T> res = new ArrayList<>(list);
        res.add(item);
        return res;
    }
    static Map<String,Object> asMap(Object o) {
        if (o instanceof Map<?,?> mm) {
            LinkedHashMap<String,Object> m = new LinkedHashMap<>();
            for (Map.Entry<?,?> e : mm.entrySet()) m.put(String.valueOf(e.getKey()), e.getValue());
            return m;
        }
        LinkedHashMap<String,Object> m = new LinkedHashMap<>();
        for (var f : o.getClass().getDeclaredFields()) { try { f.setAccessible(true); m.put(f.getName(), f.get(o)); } catch (Exception e) { throw new RuntimeException(e); } }
        return m;
    }
    static void saveJsonl(List<?> list) {
        for (Object obj : list) {
            Map<String,Object> m = asMap(obj);
            List<String> parts = new ArrayList<>();
            for (Map.Entry<?,?> e : m.entrySet()) { parts.add("\"" + e.getKey() + "\":" + e.getValue()); }
            System.out.println("{" + String.join(",", parts) + "}");
        }
    }
    static String toJson(Object o) {
        if (o instanceof Map<?,?> m) {
            StringJoiner j = new StringJoiner(",", "{", "}");
            for (Map.Entry<?,?> e : m.entrySet()) j.add("\"" + e.getKey() + "\":" + toJson(e.getValue()));
            return j.toString();
        } else if (o instanceof Collection<?> c) {
            StringJoiner j = new StringJoiner(",", "[", "]");
            for (var x : c) j.add(toJson(x));
            return j.toString();
        } else if (o instanceof String s) {
            return "\"" + s + "\"";
        } else if (o instanceof Number || o instanceof Boolean || o instanceof Character) {
            return String.valueOf(o);
        } else {
            Map<String,Object> m = asMap(o);
            StringJoiner j = new StringJoiner(",", "{", "}");
            for (Map.Entry<String,Object> e : m.entrySet()) j.add("\"" + e.getKey() + "\":" + toJson(e.getValue()));
            return j.toString();
        }
    }
    static void json(Object o) { System.out.println(toJson(o)); }
    public static void main(String[] args) {
    List<CaCountyDQoyDYearSsExtSalesPrice> store_sales = new ArrayList<>(Arrays.asList(new CaCountyDQoyDYearSsExtSalesPrice("A", 1, 2000, 100.000000), new CaCountyDQoyDYearSsExtSalesPrice("A", 2, 2000, 120.000000), new CaCountyDQoyDYearSsExtSalesPrice("A", 3, 2000, 160.000000), new CaCountyDQoyDYearSsExtSalesPrice("B", 1, 2000, 80.000000), new CaCountyDQoyDYearSsExtSalesPrice("B", 2, 2000, 90.000000), new CaCountyDQoyDYearSsExtSalesPrice("B", 3, 2000, 100.000000)));
    List<CaCountyDQoyDYearWsExtSalesPrice> web_sales = new ArrayList<>(Arrays.asList(new CaCountyDQoyDYearWsExtSalesPrice("A", 1, 2000, 100.000000), new CaCountyDQoyDYearWsExtSalesPrice("A", 2, 2000, 150.000000), new CaCountyDQoyDYearWsExtSalesPrice("A", 3, 2000, 250.000000), new CaCountyDQoyDYearWsExtSalesPrice("B", 1, 2000, 80.000000), new CaCountyDQoyDYearWsExtSalesPrice("B", 2, 2000, 90.000000), new CaCountyDQoyDYearWsExtSalesPrice("B", 3, 2000, 95.000000)));
    List<String> counties = new ArrayList<>(Arrays.asList("A", "B"));
    List<Object> result = new ArrayList<>(Arrays.asList());
    for (String county : counties) {
        double ss1 = (new java.util.function.Supplier<List<Double>>(){public List<Double> get(){
    List<Double> res0 = new ArrayList<>();
    for (var s : store_sales) {
        if (!(Objects.equals(s.ca_county, county) && s.d_qoy == 1)) continue;
        res0.add(s.ss_ext_sales_price);
    }
    return res0;
}}).get().stream().mapToDouble(n -> ((Number)n).doubleValue()).sum();
        double ss2 = (new java.util.function.Supplier<List<Double>>(){public List<Double> get(){
    List<Double> res1 = new ArrayList<>();
    for (var s : store_sales) {
        if (!(Objects.equals(s.ca_county, county) && s.d_qoy == 2)) continue;
        res1.add(s.ss_ext_sales_price);
    }
    return res1;
}}).get().stream().mapToDouble(n -> ((Number)n).doubleValue()).sum();
        double ss3 = (new java.util.function.Supplier<List<Double>>(){public List<Double> get(){
    List<Double> res2 = new ArrayList<>();
    for (var s : store_sales) {
        if (!(Objects.equals(s.ca_county, county) && s.d_qoy == 3)) continue;
        res2.add(s.ss_ext_sales_price);
    }
    return res2;
}}).get().stream().mapToDouble(n -> ((Number)n).doubleValue()).sum();
        double ws1 = (new java.util.function.Supplier<List<Double>>(){public List<Double> get(){
    List<Double> res3 = new ArrayList<>();
    for (var w : web_sales) {
        if (!(Objects.equals(w.ca_county, county) && w.d_qoy == 1)) continue;
        res3.add(w.ws_ext_sales_price);
    }
    return res3;
}}).get().stream().mapToDouble(n -> ((Number)n).doubleValue()).sum();
        double ws2 = (new java.util.function.Supplier<List<Double>>(){public List<Double> get(){
    List<Double> res4 = new ArrayList<>();
    for (var w : web_sales) {
        if (!(Objects.equals(w.ca_county, county) && w.d_qoy == 2)) continue;
        res4.add(w.ws_ext_sales_price);
    }
    return res4;
}}).get().stream().mapToDouble(n -> ((Number)n).doubleValue()).sum();
        double ws3 = (new java.util.function.Supplier<List<Double>>(){public List<Double> get(){
    List<Double> res5 = new ArrayList<>();
    for (var w : web_sales) {
        if (!(Objects.equals(w.ca_county, county) && w.d_qoy == 3)) continue;
        res5.add(w.ws_ext_sales_price);
    }
    return res5;
}}).get().stream().mapToDouble(n -> ((Number)n).doubleValue()).sum();
        double web_g1 = ws2 / ws1;
        double store_g1 = ss2 / ss1;
        double web_g2 = ws3 / ws2;
        double store_g2 = ss3 / ss2;
        if (web_g1 > store_g1 && web_g2 > store_g2) {
            result.add(new CaCountyDYearWebQ1Q2IncreaseStoreQ1Q2IncreaseWebQ2Q3IncreaseStoreQ2Q3Increase(county, 2000, web_g1, store_g1, web_g2, store_g2));
        }
    }
    json(result);
    if (!(Objects.equals(result, Arrays.asList(new CaCountyDYearWebQ1Q2IncreaseStoreQ1Q2IncreaseWebQ2Q3IncreaseStoreQ2Q3Increase("A", 2000, 1.500000, 1.200000, 1.666667, 1.333333))))) throw new AssertionError("expect failed");
    }
}
