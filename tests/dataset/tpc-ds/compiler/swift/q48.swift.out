import Foundation

func expect(_ cond: Bool) {
  if !cond { fatalError("expect failed") }
}

func _json(_ v: Any) {
  if let d = try? JSONSerialization.data(withJSONObject: v, options: []),
    let s = String(data: d, encoding: .utf8)
  {
    print(s)
  }
}

func _sum<T: BinaryInteger>(_ arr: [T]) -> Double {
  var sum = 0.0
  for v in arr { sum += Double(v) }
  return sum
}
func _sum<T: BinaryFloatingPoint>(_ arr: [T]) -> Double {
  var sum = 0.0
  for v in arr { sum += Double(v) }
  return sum
}

func test_TPCDS_Q48_simplified() {
  expect(result == 35)
}

let store_sales = [
  [
    "cdemo_sk": 1, "addr_sk": 1, "sold_date_sk": 1, "sales_price": 120, "net_profit": 1000,
    "quantity": 5,
  ],
  [
    "cdemo_sk": 2, "addr_sk": 2, "sold_date_sk": 1, "sales_price": 60, "net_profit": 2000,
    "quantity": 10,
  ],
  [
    "cdemo_sk": 3, "addr_sk": 3, "sold_date_sk": 1, "sales_price": 170, "net_profit": 10000,
    "quantity": 20,
  ],
]
let store: [[String: Int]] = [["s_store_sk": 1]]
let customer_demographics = [
  ["cd_demo_sk": 1, "cd_marital_status": "S", "cd_education_status": "E1"],
  ["cd_demo_sk": 2, "cd_marital_status": "M", "cd_education_status": "E2"],
  ["cd_demo_sk": 3, "cd_marital_status": "W", "cd_education_status": "E3"],
]
let customer_address = [
  ["ca_address_sk": 1, "ca_country": "United States", "ca_state": "TX"],
  ["ca_address_sk": 2, "ca_country": "United States", "ca_state": "CA"],
  ["ca_address_sk": 3, "ca_country": "United States", "ca_state": "NY"],
]
let date_dim: [[String: Int]] = [["d_date_sk": 1, "d_year": 2000]]
let year = 2000
let states1: [String] = ["TX"]
let states2: [String] = ["CA"]
let states3: [String] = ["NY"]
let qty_base =
  ({
    var _res: [Any] = []
    for ss in store_sales {
      for cd in customer_demographics {
        if !(ss["cdemo_sk"]! == cd["cd_demo_sk"]!) { continue }
        for ca in customer_address {
          if !(ss["addr_sk"]! == ca["ca_address_sk"]!) { continue }
          for d in date_dim {
            if !(ss["sold_date_sk"]! == d["d_date_sk"]!) { continue }
            if d["d_year"]! == year
              && ((cd["cd_marital_status"]! == "S" && cd["cd_education_status"]! == "E1"
                && ss["sales_price"]! >= 100 && ss["sales_price"]! <= 150)
                || (cd["cd_marital_status"]! == "M" && cd["cd_education_status"]! == "E2"
                  && ss["sales_price"]! >= 50 && ss["sales_price"]! <= 100)
                || (cd["cd_marital_status"]! == "W" && cd["cd_education_status"]! == "E3"
                  && ss["sales_price"]! >= 150 && ss["sales_price"]! <= 200))
              && ((states1.contains(ca["ca_state"]!) && ss["net_profit"]! >= 0
                && ss["net_profit"]! <= 2000)
                || (states2.contains(ca["ca_state"]!) && ss["net_profit"]! >= 150
                  && ss["net_profit"]! <= 3000)
                || (states3.contains(ca["ca_state"]!) && ss["net_profit"]! >= 50
                  && ss["net_profit"]! <= 25000))
            {
              _res.append(ss["quantity"]!)
            }
          }
        }
      }
    }
    var _items = _res
    return _items
  }())
let qty = qty_base
let result = _sum(qty.map { Double($0) })
func main() {
  _json(result)
  test_TPCDS_Q48_simplified()
}
main()
