# Generated by Mochi compiler v0.10.27 on 2025-07-17T17:50:07Z
from __future__ import annotations
import dataclasses
import json


@dataclasses.dataclass
class CatalogSale:
    cs_bill_customer_sk: int
    d_month_seq: int

    def __getitem__(self, key):
        return getattr(self, key)

    def __contains__(self, key):
        return hasattr(self, key)


@dataclasses.dataclass
class Customer:
    c_customer_sk: int
    c_last_name: str
    c_first_name: str

    def __getitem__(self, key):
        return getattr(self, key)

    def __contains__(self, key):
        return hasattr(self, key)


@dataclasses.dataclass
class StoreSale:
    ss_customer_sk: int
    d_month_seq: int

    def __getitem__(self, key):
        return getattr(self, key)

    def __contains__(self, key):
        return hasattr(self, key)


@dataclasses.dataclass
class WebSale:
    ws_bill_customer_sk: int
    d_month_seq: int

    def __getitem__(self, key):
        return getattr(self, key)

    def __contains__(self, key):
        return hasattr(self, key)


def distinct(xs):
    out = []
    for x in xs:
        if not x in out:
            out = out + [x]
    return out


def test_TPCDS_Q38_simplified():
    assert result == 1


customer = [
    Customer(c_customer_sk=1, c_last_name="Smith", c_first_name="John"),
    Customer(c_customer_sk=2, c_last_name="Jones", c_first_name="Alice"),
]
store_sales = [
    StoreSale(ss_customer_sk=1, d_month_seq=1200),
    StoreSale(ss_customer_sk=2, d_month_seq=1205),
]
catalog_sales = [CatalogSale(cs_bill_customer_sk=1, d_month_seq=1203)]
web_sales = [WebSale(ws_bill_customer_sk=1, d_month_seq=1206)]
store_ids = distinct(
    [
        s.ss_customer_sk
        for s in store_sales
        if s.d_month_seq >= 1200 and s.d_month_seq <= 1211
    ]
)
catalog_ids = distinct(
    [
        c.cs_bill_customer_sk
        for c in catalog_sales
        if c.d_month_seq >= 1200 and c.d_month_seq <= 1211
    ]
)
web_ids = distinct(
    [
        w.ws_bill_customer_sk
        for w in web_sales
        if w.d_month_seq >= 1200 and w.d_month_seq <= 1211
    ]
)
hot = list(
    dict.fromkeys(
        [
            it
            for it in list(dict.fromkeys([it for it in store_ids if it in catalog_ids]))
            if it in web_ids
        ]
    )
)
result = len(hot)
print(json.dumps(result, separators=(",", ":"), default=lambda o: vars(o)))
test_TPCDS_Q38_simplified()
