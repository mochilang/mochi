# Generated by Mochi Python compiler
from __future__ import annotations

import json


def _get(obj, name):
    if isinstance(obj, dict):
        if name in obj:
            return obj[name]
    if hasattr(obj, name):
        return getattr(obj, name)
    if isinstance(obj, (list, tuple)):
        for it in obj:
            try:
                return _get(it, name)
            except Exception:
                pass
    raise Exception("field not found: " + name)


def _sum(v):
    if hasattr(v, "Items"):
        v = v.Items
    if not isinstance(v, list):
        raise Exception("sum() expects list or group")
    s = 0.0
    for it in v:
        if it is None:
            continue
        if isinstance(it, (int, float)):
            s += float(it)
        else:
            raise Exception("sum() expects numbers")
    return s


web_sales = None
store_sales = None
result = None


def test_TPCDS_Q69_simplified():
    assert result == 69


def main():
    global web_sales
    web_sales = [{"amount": 34}]
    global store_sales
    store_sales = [{"amount": 35}]
    global result
    result = _sum([_get(w, "amount") for w in web_sales]) + _sum(
        [_get(s, "amount") for s in store_sales]
    )
    print(json.dumps(result, default=lambda o: vars(o)))
    test_TPCDS_Q69_simplified()


if __name__ == "__main__":
    main()
