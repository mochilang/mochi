# Generated by Mochi compiler v0.10.27 on 2025-07-17T17:51:04Z
from __future__ import annotations
import dataclasses
import json


@dataclasses.dataclass
class Inventory:
    item: int
    qty: int

    def __getitem__(self, key):
        return getattr(self, key)

    def __contains__(self, key):
        return hasattr(self, key)


@dataclasses.dataclass
class Item:
    id: int

    def __getitem__(self, key):
        return getattr(self, key)

    def __contains__(self, key):
        return hasattr(self, key)


@dataclasses.dataclass
class StoreSale:
    item: int

    def __getitem__(self, key):
        return getattr(self, key)

    def __contains__(self, key):
        return hasattr(self, key)


def test_TPCDS_Q82_sample():
    assert result == 82


item = [Item(id=1), Item(id=2), Item(id=3)]
inventory = [
    Inventory(item=1, qty=20),
    Inventory(item=1, qty=22),
    Inventory(item=1, qty=5),
    Inventory(item=2, qty=30),
    Inventory(item=2, qty=5),
    Inventory(item=3, qty=10),
]
store_sales = [StoreSale(item=1), StoreSale(item=2)]
result = 0
for inv in inventory:
    for s in store_sales:
        if inv.item == s.item:
            result = result + inv.qty
print(json.dumps(result, separators=(",", ":"), default=lambda o: vars(o)))
test_TPCDS_Q82_sample()
