# Generated by Mochi Python compiler
from __future__ import annotations

import json


def _append(lst, v):
    out = list(lst) if lst is not None else []
    out.append(v)
    return out


def _get(obj, name):
    if isinstance(obj, dict):
        if name in obj:
            return obj[name]
    if hasattr(obj, name):
        return getattr(obj, name)
    if isinstance(obj, (list, tuple)):
        for it in obj:
            try:
                return _get(it, name)
            except Exception:
                pass
    raise Exception("field not found: " + name)


def _sum(v):
    if hasattr(v, "Items"):
        v = v.Items
    if not isinstance(v, list):
        raise Exception("sum() expects list or group")
    s = 0.0
    for it in v:
        if it is None:
            continue
        if isinstance(it, (int, float)):
            s += float(it)
        else:
            raise Exception("sum() expects numbers")
    return s


store_sales = None
web_sales = None
counties = ["A", "B"]
result = []


def test_TPCDS_Q31_simplified():
    assert result == [
        {
            "ca_county": "A",
            "d_year": 2000,
            "web_q1_q2_increase": 1.5,
            "store_q1_q2_increase": 1.2,
            "web_q2_q3_increase": 1.6666666666666667,
            "store_q2_q3_increase": 1.3333333333333333,
        }
    ]


def main():
    global store_sales
    store_sales = [
        {"ca_county": "A", "d_qoy": 1, "d_year": 2000, "ss_ext_sales_price": 100},
        {"ca_county": "A", "d_qoy": 2, "d_year": 2000, "ss_ext_sales_price": 120},
        {"ca_county": "A", "d_qoy": 3, "d_year": 2000, "ss_ext_sales_price": 160},
        {"ca_county": "B", "d_qoy": 1, "d_year": 2000, "ss_ext_sales_price": 80},
        {"ca_county": "B", "d_qoy": 2, "d_year": 2000, "ss_ext_sales_price": 90},
        {"ca_county": "B", "d_qoy": 3, "d_year": 2000, "ss_ext_sales_price": 100},
    ]
    global web_sales
    web_sales = [
        {"ca_county": "A", "d_qoy": 1, "d_year": 2000, "ws_ext_sales_price": 100},
        {"ca_county": "A", "d_qoy": 2, "d_year": 2000, "ws_ext_sales_price": 150},
        {"ca_county": "A", "d_qoy": 3, "d_year": 2000, "ws_ext_sales_price": 250},
        {"ca_county": "B", "d_qoy": 1, "d_year": 2000, "ws_ext_sales_price": 80},
        {"ca_county": "B", "d_qoy": 2, "d_year": 2000, "ws_ext_sales_price": 90},
        {"ca_county": "B", "d_qoy": 3, "d_year": 2000, "ws_ext_sales_price": 95},
    ]
    global counties
    counties = ["A", "B"]
    global result
    result = []
    for county in counties:
        ss1 = _sum(
            [
                _get(s, "ss_ext_sales_price")
                for s in store_sales
                if ((_get(s, "ca_county") == county) and (_get(s, "d_qoy") == 1))
            ]
        )
        ss2 = _sum(
            [
                _get(s, "ss_ext_sales_price")
                for s in store_sales
                if ((_get(s, "ca_county") == county) and (_get(s, "d_qoy") == 2))
            ]
        )
        ss3 = _sum(
            [
                _get(s, "ss_ext_sales_price")
                for s in store_sales
                if ((_get(s, "ca_county") == county) and (_get(s, "d_qoy") == 3))
            ]
        )
        ws1 = _sum(
            [
                _get(w, "ws_ext_sales_price")
                for w in web_sales
                if ((_get(w, "ca_county") == county) and (_get(w, "d_qoy") == 1))
            ]
        )
        ws2 = _sum(
            [
                _get(w, "ws_ext_sales_price")
                for w in web_sales
                if ((_get(w, "ca_county") == county) and (_get(w, "d_qoy") == 2))
            ]
        )
        ws3 = _sum(
            [
                _get(w, "ws_ext_sales_price")
                for w in web_sales
                if ((_get(w, "ca_county") == county) and (_get(w, "d_qoy") == 3))
            ]
        )
        web_g1 = ws2 / ws1
        store_g1 = ss2 / ss1
        web_g2 = ws3 / ws2
        store_g2 = ss3 / ss2
        if (web_g1 > store_g1) and (web_g2 > store_g2):
            result = _append(
                result,
                {
                    "ca_county": county,
                    "d_year": 2000,
                    "web_q1_q2_increase": web_g1,
                    "store_q1_q2_increase": store_g1,
                    "web_q2_q3_increase": web_g2,
                    "store_q2_q3_increase": store_g2,
                },
            )
    print(json.dumps(result, default=lambda o: vars(o)))
    test_TPCDS_Q31_simplified()


if __name__ == "__main__":
    main()
