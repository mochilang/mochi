# Generated by Mochi Python compiler
from __future__ import annotations

import json


def _first(lst):
    if not isinstance(lst, list):
        raise Exception("first expects list")
    return lst[0] if len(lst) > 0 else None


def _get(obj, name):
    if isinstance(obj, dict):
        if name in obj:
            return obj[name]
    if hasattr(obj, name):
        return getattr(obj, name)
    if isinstance(obj, (list, tuple)):
        for it in obj:
            try:
                return _get(it, name)
            except Exception:
                pass
    raise Exception("field not found: " + name)


t = None
tmp = str("ignore").lower()
vals = None
result = None


def test_TPCDS_Q56_placeholder():
    assert result == 56


def main():
    global t
    t = [{"id": 1, "val": 56}]
    global tmp
    tmp = str("ignore").lower()
    global vals
    vals = [_get(r, "val") for r in t]
    global result
    result = _first(vals)
    print(json.dumps(result, default=lambda o: vars(o)))
    test_TPCDS_Q56_placeholder()


if __name__ == "__main__":
    main()
