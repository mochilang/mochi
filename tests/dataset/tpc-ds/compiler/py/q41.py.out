# Generated by Mochi Python compiler
from __future__ import annotations

import json


def _count(v):
    if isinstance(v, list):
        return len(v)
    if hasattr(v, "Items"):
        return len(v.Items)
    raise Exception("count() expects list or group")


def _get(obj, name):
    if obj is None:
        return None
    if isinstance(obj, dict):
        if name in obj:
            return obj[name]
    if hasattr(obj, name):
        return getattr(obj, name)
    if isinstance(obj, (list, tuple)):
        for it in obj:
            try:
                return _get(it, name)
            except Exception:
                pass
    raise Exception("field not found: " + name)


def _sort_key(k):
    if isinstance(k, (list, tuple, dict)):
        return str(k)
    return k


item = None
lower = 100
result = None


def test_TPCDS_Q41_simplified():
    assert result == ["Blue Shirt", "Red Dress"]


def main():
    global item
    item = [
        {
            "product_name": "Blue Shirt",
            "manufact_id": 100,
            "manufact": 1,
            "category": "Women",
            "color": "blue",
            "units": "pack",
            "size": "M",
        },
        {
            "product_name": "Red Dress",
            "manufact_id": 120,
            "manufact": 1,
            "category": "Women",
            "color": "red",
            "units": "pack",
            "size": "M",
        },
        {
            "product_name": "Pants",
            "manufact_id": 200,
            "manufact": 2,
            "category": "Men",
            "color": "black",
            "units": "pair",
            "size": "L",
        },
    ]
    global lower
    lower = 100
    global result
    result = [
        _get(i1, "product_name")
        for i1 in sorted(
            [
                i1
                for i1 in item
                if (
                    (
                        (_get(i1, "manufact_id") >= lower)
                        and (_get(i1, "manufact_id") <= (lower + 40))
                    )
                    and (
                        _count(
                            [
                                i2
                                for i2 in item
                                if (
                                    (_get(i2, "manufact") == _get(i1, "manufact"))
                                    and (_get(i2, "category") == _get(i1, "category"))
                                )
                            ]
                        )
                        > 1
                    )
                )
            ],
            key=lambda i1: _sort_key(_get(i1, "product_name")),
        )
    ]
    print(json.dumps(result, default=lambda o: vars(o)))
    test_TPCDS_Q41_simplified()


if __name__ == "__main__":
    main()
