<?php
$catalog_sales = [
    [
        "item" => 1,
        "call" => 1,
        "date" => 1,
        "price" => 20
    ],
    [
        "item" => 1,
        "call" => 1,
        "date" => 2,
        "price" => 20
    ],
    [
        "item" => 1,
        "call" => 1,
        "date" => 3,
        "price" => 40
    ]
];
$item = [
    [
        "i_item_sk" => 1,
        "i_category" => "A",
        "i_brand" => "B"
    ]
];
$call_center = [
    [
        "cc_call_center_sk" => 1,
        "cc_name" => "C1"
    ]
];
$date_dim = [
    [
        "d_date_sk" => 1,
        "d_year" => 2000,
        "d_moy" => 11
    ],
    [
        "d_date_sk" => 2,
        "d_year" => 2000,
        "d_moy" => 12
    ],
    [
        "d_date_sk" => 3,
        "d_year" => 2001,
        "d_moy" => 1
    ]
];
function abs($x) {
    if ($x >= 0) {
        return $x;
    }
    return -$x;
}
$grouped = (function() use ($call_center, $catalog_sales, $date_dim, $item) {
    $groups = [];
    foreach ($catalog_sales as $cs) {
        foreach ($item as $i) {
            if ($cs['item'] == $i['i_item_sk']) {
                foreach ($date_dim as $d) {
                    if ($cs['date'] == $d['d_date_sk']) {
                        foreach ($call_center as $cc) {
                            if ($cs['call'] == $cc['cc_call_center_sk']) {
                                $_k = json_encode([
    "cat" => $i['i_category'],
    "call" => $cc['cc_name'],
    "year" => $d['d_year']
]);
                                $groups[$_k][] = ["cs" => $cs, "i" => $i, "d" => $d, "cc" => $cc];
                            }
                        }
                    }
                }
            }
        }
    }
    $result = [];
    foreach ($groups as $_k => $__g) {
        $_key = json_decode($_k, true);
        $g = ['key'=>$_key,'items'=> $__g];
        $result[] = [
    "cat" => $g['key']['cat'],
    "call" => $g['key']['call'],
    "year" => $g['key']['year'],
    "sum_sales" => array_sum((function() use ($g) {
        $result = [];
        foreach ($g['items'] as $x) {
            $result[] = $x['price'];
        }
        return $result;
    })())
];
    }
    return $result;
})();
$avg_by_year = (function() use ($grouped) {
    $groups = [];
    foreach ($grouped as $g) {
        $_k = json_encode([
    "cat" => $g['cat'],
    "call" => $g['call']
]);
        $groups[$_k][] = $g;
    }
    $result = [];
    foreach ($groups as $_k => $__g) {
        $_key = json_decode($_k, true);
        $gg = ['key'=>$_key,'items'=> $__g];
        $result[] = [
    "cat" => $gg['key']['cat'],
    "call" => $gg['key']['call'],
    "avg_sales" => _avg((function() use ($gg) {
        $result = [];
        foreach ($gg['items'] as $x) {
            $result[] = $x['sum_sales'];
        }
        return $result;
    })())
];
    }
    return $result;
})();
$result = (function() use ($avg_by_year, $grouped) {
    $result = [];
    foreach ($grouped as $g) {
        foreach ($avg_by_year as $a) {
            if ($g['cat'] == $a['cat'] && $g['call'] == $a['call']) {
                if ($g['year'] == 2001 && $a['avg_sales'] > 0 && abs($g['sum_sales'] - $a['avg_sales']) / $a['avg_sales'] > 0.1) {
                    $result[] = [
    "i_category" => $g['cat'],
    "sum_sales" => $g['sum_sales']
];
                }
            }
        }
    }
    return $result;
})();
echo json_encode($result), PHP_EOL;
function _avg($v) {
    if (is_array($v) && array_key_exists('items', $v)) {
        $v = $v['items'];
    } elseif (is_object($v) && property_exists($v, 'items')) {
        $v = $v->items;
    }
    if (!is_array($v)) {
        throw new Exception('avg() expects list or group');
    }
    if (!$v) return 0;
    $sum = 0;
    foreach ($v as $it) {
        if (is_int($it) || is_float($it)) {
            $sum += $it;
        } else {
            throw new Exception('avg() expects numbers');
        }
    }
    return $sum / count($v);
}
?>
