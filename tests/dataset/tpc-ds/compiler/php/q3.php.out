<?php
$date_dim = [
    [
        "d_date_sk" => 1,
        "d_year" => 1998,
        "d_moy" => 12
    ]
];
$store_sales = [
    [
        "ss_sold_date_sk" => 1,
        "ss_item_sk" => 1,
        "ss_ext_sales_price" => 10
    ],
    [
        "ss_sold_date_sk" => 1,
        "ss_item_sk" => 2,
        "ss_ext_sales_price" => 20
    ]
];
$item = [
    [
        "i_item_sk" => 1,
        "i_manufact_id" => 100,
        "i_brand_id" => 1,
        "i_brand" => "Brand1"
    ],
    [
        "i_item_sk" => 2,
        "i_manufact_id" => 100,
        "i_brand_id" => 2,
        "i_brand" => "Brand2"
    ]
];
$result = (function() use ($date_dim, $item, $store_sales) {
    $groups = [];
    foreach ($date_dim as $dt) {
        foreach ($store_sales as $ss) {
            if ($dt['d_date_sk'] == $ss['ss_sold_date_sk']) {
                foreach ($item as $i) {
                    if ($ss['ss_item_sk'] == $i['i_item_sk']) {
                        if ($i['i_manufact_id'] == 100 && $dt['d_moy'] == 12) {
                            $_k = json_encode([
    "d_year" => $dt['d_year'],
    "brand_id" => $i['i_brand_id'],
    "brand" => $i['i_brand']
]);
                            $groups[$_k][] = ["dt" => $dt, "ss" => $ss, "i" => $i];
                        }
                    }
                }
            }
        }
    }
    $result = [];
    foreach ($groups as $_k => $__g) {
        $_key = json_decode($_k, true);
        $g = ['key'=>$_key,'items'=> $__g];
        $result[] = [[
    $g['key']['d_year'],
    -array_sum((function() use ($g) {
        $result = [];
        foreach ($g['items'] as $x) {
            $result[] = $x['ss_ext_sales_price'];
        }
        return $result;
    })()),
    $g['key']['brand_id']
], [
    "d_year" => $g['key']['d_year'],
    "brand_id" => $g['key']['brand_id'],
    "brand" => $g['key']['brand'],
    "sum_agg" => array_sum((function() use ($g) {
        $result = [];
        foreach ($g['items'] as $x) {
            $result[] = $x['ss_ext_sales_price'];
        }
        return $result;
    })())
]];
    }
    usort($result, function($a, $b) { return $a[0] <=> $b[0]; });
    $result = array_map(fn($r) => $r[1], $result);
    return $result;
})();
echo json_encode($result), PHP_EOL;
?>
