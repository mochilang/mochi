<?php
$store_returns = [
    [
        "sr_returned_date_sk" => 1,
        "sr_customer_sk" => 1,
        "sr_store_sk" => 10,
        "sr_return_amt" => 20
    ],
    [
        "sr_returned_date_sk" => 1,
        "sr_customer_sk" => 2,
        "sr_store_sk" => 10,
        "sr_return_amt" => 50
    ]
];
$date_dim = [["d_date_sk" => 1, "d_year" => 1998]];
$store = [
    ["s_store_sk" => 10, "s_state" => "TN"]
];
$customer = [
    [
        "c_customer_sk" => 1,
        "c_customer_id" => "C1"
    ],
    [
        "c_customer_sk" => 2,
        "c_customer_id" => "C2"
    ]
];
$customer_total_return = (function() use ($date_dim, $store_returns) {
    $groups = [];
    foreach ($store_returns as $sr) {
        foreach ($date_dim as $d) {
            if ($sr['sr_returned_date_sk'] == $d['d_date_sk'] && $d['d_year'] == 1998) {
                $_k = json_encode([
    "customer_sk" => $sr['sr_customer_sk'],
    "store_sk" => $sr['sr_store_sk']
]);
                $groups[$_k][] = ["sr" => $sr, "d" => $d];
            }
        }
    }
    $result = [];
    foreach ($groups as $_k => $__g) {
        $_key = json_decode($_k, true);
        $g = ['key'=>$_key,'items'=> $__g];
        $result[] = [
    "ctr_customer_sk" => $g['key']['customer_sk'],
    "ctr_store_sk" => $g['key']['store_sk'],
    "ctr_total_return" => array_sum((function() use ($g) {
        $result = [];
        foreach ($g['items'] as $x) {
            $result[] = $x['sr_return_amt'];
        }
        return $result;
    })())
];
    }
    return $result;
})();
$result = (function() use ($customer, $customer_total_return, $store) {
    $result = [];
    foreach ($customer_total_return as $ctr1) {
        foreach ($store as $s) {
            if ($ctr1['ctr_store_sk'] == $s['s_store_sk']) {
                foreach ($customer as $c) {
                    if ($ctr1['ctr_customer_sk'] == $c['c_customer_sk']) {
                        if ($ctr1['ctr_total_return'] > _avg((function() use ($ctr1, $customer_total_return) {
    $result = [];
    foreach ($customer_total_return as $ctr2) {
        if ($ctr1['ctr_store_sk'] == $ctr2['ctr_store_sk']) {
            $result[] = $ctr2['ctr_total_return'];
        }
    }
    return $result;
})()) * 1.2 && $s['s_state'] == "TN") {
                            $result[] = [$c['c_customer_id'], ["c_customer_id" => $c['c_customer_id']]];
                        }
                    }
                }
            }
        }
    }
    usort($result, function($a, $b) { return $a[0] <=> $b[0]; });
    $result = array_map(fn($r) => $r[1], $result);
    return $result;
})();
echo json_encode($result), PHP_EOL;
function _avg($v) {
    if (is_array($v) && array_key_exists('items', $v)) {
        $v = $v['items'];
    } elseif (is_object($v) && property_exists($v, 'items')) {
        $v = $v->items;
    }
    if (!is_array($v)) {
        throw new Exception('avg() expects list or group');
    }
    if (!$v) return 0;
    $sum = 0;
    foreach ($v as $it) {
        if (is_int($it) || is_float($it)) {
            $sum += $it;
        } else {
            throw new Exception('avg() expects numbers');
        }
    }
    return $sum / count($v);
}
?>
