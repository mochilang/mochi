// Generated by Mochi compiler v0.10.25 on 2025-07-15T04:47:09Z
open System
open System.Text.Json

type Anon1 = {
    ss_sold_time_sk: int
    ss_hdemo_sk: int
    ss_store_sk: int
}
type Anon2 = {
    hd_demo_sk: int
    hd_dep_count: int
}
type Anon3 = {
    t_time_sk: int
    t_hour: int
    t_minute: int
}
type Anon4 = {
    s_store_sk: int
    s_store_name: string
}
type StoreSale = {
    mutable ss_sold_time_sk: int
    mutable ss_hdemo_sk: int
    mutable ss_store_sk: int
}
type HouseholdDemographics = {
    mutable hd_demo_sk: int
    mutable hd_dep_count: int
}
type TimeDim = {
    mutable t_time_sk: int
    mutable t_hour: int
    mutable t_minute: int
}
type Store = {
    mutable s_store_sk: int
    mutable s_store_name: string
}
let store_sales: Anon1 list = [{ ss_sold_time_sk = 1; ss_hdemo_sk = 1; ss_store_sk = 1 }; { ss_sold_time_sk = 1; ss_hdemo_sk = 1; ss_store_sk = 1 }; { ss_sold_time_sk = 2; ss_hdemo_sk = 1; ss_store_sk = 1 }]
let household_demographics: Anon2 list = [{ hd_demo_sk = 1; hd_dep_count = 3 }]
let time_dim: Anon3 list = [{ t_time_sk = 1; t_hour = 20; t_minute = 35 }; { t_time_sk = 2; t_hour = 20; t_minute = 45 }]
let store: Anon4 list = [{ s_store_sk = 1; s_store_name = "ese" }]
let result: obj = List.length [ for ss in store_sales do 
  for hd in household_demographics do 
  for t in time_dim do 
  for s in store do if ss.ss_hdemo_sk = hd.hd_demo_sk && ss.ss_sold_time_sk = t.t_time_sk && ss.ss_store_sk = s.s_store_sk && t.t_hour = 20 && t.t_minute >= 30 && hd.hd_dep_count = 3 && s.s_store_name = "ese" then yield ss ]
printfn "%A" (JsonSerializer.Serialize(result))
assert (result = 3)
