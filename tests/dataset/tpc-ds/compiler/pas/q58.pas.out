// Generated by Mochi compiler v0.10.26 on 2025-07-15T06:33:27Z
program Q58;
{$mode objfpc}
{$modeswitch nestedprocvars}
uses SysUtils, fgl, fphttpclient, Classes, Variants, fpjson, jsonparser, fpjsonrtti;

type
  generic TArray<T> = array of T;

generic procedure _json<T>(v: T);
begin
  writeln('[]');
end;

var
  _tmp0: specialize TFPGMap<string, Variant>;
  _tmp1: specialize TFPGMap<string, Variant>;
  _tmp2: specialize TFPGMap<string, Variant>;
  _tmp3: specialize TFPGMap<string, Variant>;
  avg: Variant;
  cs_items: specialize TFPGMap<string, Variant>;
  _result: specialize TArray<specialize TFPGMap<string, Variant>>;
  ss_items: specialize TFPGMap<string, Variant>;
  ws_items: specialize TFPGMap<string, Variant>;

procedure test_TPCDS_Q58_simplified;
var
  _tmp4: specialize TFPGMap<string, Variant>;
begin
  _tmp4 := specialize TFPGMap<string, Variant>.Create;
  _tmp4.AddOrSetData('item_id', 1);
  _tmp4.AddOrSetData('average', 58);
  if not ((_result = specialize TArray<_>([_tmp4]))) then raise Exception.Create('expect failed');
end;

begin
  _tmp0 := specialize TFPGMap<string, Variant>.Create;
  _tmp0.AddOrSetData('item_id', 1);
  _tmp0.AddOrSetData('ss_item_rev', 50);
  ss_items := _tmp0;
  _tmp1 := specialize TFPGMap<string, Variant>.Create;
  _tmp1.AddOrSetData('item_id', 1);
  _tmp1.AddOrSetData('cs_item_rev', 60);
  cs_items := _tmp1;
  _tmp2 := specialize TFPGMap<string, Variant>.Create;
  _tmp2.AddOrSetData('item_id', 1);
  _tmp2.AddOrSetData('ws_item_rev', 64);
  ws_items := _tmp2;
  avg := ss_items.KeyData['ss_item_rev'] + cs_items.KeyData['cs_item_rev'] + ws_items.KeyData['ws_item_rev'] / 3;
  _tmp3 := specialize TFPGMap<string, Variant>.Create;
  _tmp3.AddOrSetData('item_id', ss_items.KeyData['item_id']);
  _tmp3.AddOrSetData('average', avg);
  _result := specialize TArray<specialize TFPGMap<string, Variant>>([_tmp3]);
  specialize _json<specialize TArray<specialize TFPGMap<string, Variant>>>(_result);
  test_TPCDS_Q58_simplified;
end.
