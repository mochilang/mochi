// Generated by Mochi compiler v0.10.26 on 2025-07-15T06:33:28Z
program Q60;
{$mode objfpc}
{$modeswitch nestedprocvars}
uses SysUtils, fgl, fphttpclient, Classes, Variants, fpjson, jsonparser, fpjsonrtti;

type
  generic TArray<T> = array of T;

generic procedure _json<T>(v: T);
begin
  writeln('[]');
end;

generic function _sumList<T>(arr: specialize TArray<T>): double;
var i: integer; s: double;
begin
  s := 0;
  for i := 0 to High(arr) do
    s := s + arr[i];
  Result := s;
end;

var
  _tmp0: specialize TFPGMap<string, integer>;
  _tmp1: specialize TFPGMap<string, integer>;
  _tmp2: specialize TFPGMap<string, integer>;
  _tmp3: specialize TFPGMap<string, integer>;
  _tmp4: specialize TArray<integer>;
  all_sales: specialize TArray<specialize TFPGMap<string, integer>>;
  catalog_sales: specialize TArray<specialize TFPGMap<string, integer>>;
  _result: double;
  s: specialize TFPGMap<string, integer>;
  store_sales: specialize TArray<specialize TFPGMap<string, integer>>;
  web_sales: specialize TArray<specialize TFPGMap<string, integer>>;

procedure test_TPCDS_Q60_simplified;
begin
  if not ((_result = 60)) then raise Exception.Create('expect failed');
end;

begin
  _tmp0 := specialize TFPGMap<string, integer>.Create;
  _tmp0.AddOrSetData('item', 1);
  _tmp0.AddOrSetData('price', 10);
  _tmp1 := specialize TFPGMap<string, integer>.Create;
  _tmp1.AddOrSetData('item', 1);
  _tmp1.AddOrSetData('price', 20);
  store_sales := specialize TArray<specialize TFPGMap<string, integer>>([_tmp0, _tmp1]);
  _tmp2 := specialize TFPGMap<string, integer>.Create;
  _tmp2.AddOrSetData('item', 1);
  _tmp2.AddOrSetData('price', 15);
  catalog_sales := specialize TArray<specialize TFPGMap<string, integer>>([_tmp2]);
  _tmp3 := specialize TFPGMap<string, integer>.Create;
  _tmp3.AddOrSetData('item', 1);
  _tmp3.AddOrSetData('price', 15);
  web_sales := specialize TArray<specialize TFPGMap<string, integer>>([_tmp3]);
  all_sales := Concat(Concat(store_sales, catalog_sales), web_sales);
  SetLength(_tmp4, 0);
  for s in all_sales do
  begin
    _tmp4 := Concat(_tmp4, [s.KeyData['price']]);
  end;
  _result := specialize _sumList<integer>(_tmp4);
  specialize _json<double>(_result);
  test_TPCDS_Q60_simplified;
end.
