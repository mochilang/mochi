// Generated by Mochi compiler v0.10.26 on 2025-07-15T07:19:22Z
fun String.starts_with(prefix: String): Boolean = this.startsWith(prefix)

fun json(v: Any?) {
    println(toJson(v))
}

fun toJson(v: Any?): String = when (v) {
    null -> "null"
    is String -> "\"" + v.replace("\"", "\\\"") + "\""
    is Boolean, is Number -> v.toString()
    is Map<*, *> -> v.entries.joinToString(prefix = "{", postfix = "}") { toJson(it.key.toString()) + ":" + toJson(it.value) }
    is Iterable<*> -> v.joinToString(prefix = "[", postfix = "]") { toJson(it) }
    else -> toJson(v.toString())
}
// Code generated from q96.mochi

data class StoreSale(var ss_sold_time_sk: Int, var ss_hdemo_sk: Int, var ss_store_sk: Int)

data class HouseholdDemographics(var hd_demo_sk: Int, var hd_dep_count: Int)

data class TimeDim(var t_time_sk: Int, var t_hour: Int, var t_minute: Int)

data class Store(var s_store_sk: Int, var s_store_name: String)

data class Household_demographic(var hd_demo_sk: Int, var hd_dep_count: Int)

data class Store(var s_store_sk: Int, var s_store_name: String)

data class Store_sale(var ss_sold_time_sk: Int, var ss_hdemo_sk: Int, var ss_store_sk: Int)

data class Time_dim(var t_time_sk: Int, var t_hour: Int, var t_minute: Int)

val store_sales = mutableListOf(Store_sale(ss_sold_time_sk = 1, ss_hdemo_sk = 1, ss_store_sk = 1), Store_sale(ss_sold_time_sk = 1, ss_hdemo_sk = 1, ss_store_sk = 1), Store_sale(ss_sold_time_sk = 2, ss_hdemo_sk = 1, ss_store_sk = 1))

val household_demographics = mutableListOf(Household_demographic(hd_demo_sk = 1, hd_dep_count = 3))

val time_dim = mutableListOf(Time_dim(t_time_sk = 1, t_hour = 20, t_minute = 35), Time_dim(t_time_sk = 2, t_hour = 20, t_minute = 45))

val store = mutableListOf(Store(s_store_sk = 1, s_store_name = "ese"))

val result = run {
    val __res = mutableListOf<Store_sale>()
    for (ss in store_sales) {
        for (hd in household_demographics) {
            if (ss.ss_hdemo_sk == hd.hd_demo_sk) {
                for (t in time_dim) {
                    if (ss.ss_sold_time_sk == t.t_time_sk) {
                        for (s in store) {
                            if (ss.ss_store_sk == s.s_store_sk) {
                                if (t.t_hour == 20 && t.t_minute >= 30 && hd.hd_dep_count == 3 && s.s_store_name == "ese") {
                                    __res.add(ss)
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    __res
}.size

fun main() {
    json(result)
}
