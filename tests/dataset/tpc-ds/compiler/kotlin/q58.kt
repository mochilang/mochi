// Generated by Mochi compiler v0.10.26 on 2025-07-15T06:37:52Z
fun div(a: Any?, b: Any?): Double {
    val x = toDouble(a)
    val y = toDouble(b)
    return if (y == 0.0) 0.0 else x / y
}

fun String.starts_with(prefix: String): Boolean = this.startsWith(prefix)

fun toDouble(v: Any?): Double = when (v) {
    is Double -> v
    is Int -> v.toDouble()
    is String -> v.toDouble()
    else -> 0.0
}

fun json(v: Any?) {
    println(toJson(v))
}

fun toJson(v: Any?): String = when (v) {
    null -> "null"
    is String -> "\"" + v.replace("\"", "\\\"") + "\""
    is Boolean, is Number -> v.toString()
    is Map<*, *> -> v.entries.joinToString(prefix = "{", postfix = "}") { toJson(it.key.toString()) + ":" + toJson(it.value) }
    is Iterable<*> -> v.joinToString(prefix = "[", postfix = "]") { toJson(it) }
    else -> toJson(v.toString())
}
// Code generated from q58.mochi

data class Result(var item_id: Any?, var average: Any?)

val ss_items = mutableMapOf("item_id" to 1, "ss_item_rev" to 50.0)

val cs_items = mutableMapOf("item_id" to 1, "cs_item_rev" to 60.0)

val ws_items = mutableMapOf("item_id" to 1, "ws_item_rev" to 64.0)

val avg = div(toDouble((toDouble(toDouble((ss_items as MutableMap<String, Any?>)["ss_item_rev"]) + toDouble((cs_items as MutableMap<String, Any?>)["cs_item_rev"])) + toDouble((ws_items as MutableMap<String, Any?>)["ws_item_rev"]))), toDouble(3.0))

val result = mutableListOf(Result(item_id = (ss_items as MutableMap<String, Any?>)["item_id"], average = avg))

fun main() {
    json(result)
}
