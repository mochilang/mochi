// Generated by Mochi compiler v0.10.26 on 2025-07-15T07:23:29Z
fun String.starts_with(prefix: String): Boolean = this.startsWith(prefix)

fun json(v: Any?) {
    println(toJson(v))
}

fun toJson(v: Any?): String = when (v) {
    null -> "null"
    is String -> "\"" + v.replace("\"", "\\\"") + "\""
    is Boolean, is Number -> v.toString()
    is Map<*, *> -> v.entries.joinToString(prefix = "{", postfix = "}") { toJson(it.key.toString()) + ":" + toJson(it.value) }
    is Iterable<*> -> v.joinToString(prefix = "[", postfix = "]") { toJson(it) }
    else -> toJson(v.toString())
}
// Code generated from q41.mochi

data class Item(var product_name: String, var manufact_id: Int, var manufact: Int, var category: String, var color: String, var units: String, var size: String)

val item = mutableListOf(Item(product_name = "Blue Shirt", manufact_id = 100, manufact = 1, category = "Women", color = "blue", units = "pack", size = "M"), Item(product_name = "Red Dress", manufact_id = 120, manufact = 1, category = "Women", color = "red", units = "pack", size = "M"), Item(product_name = "Pants", manufact_id = 200, manufact = 2, category = "Men", color = "black", units = "pair", size = "L"))

val lower = 100

val result = run {
    val __res = mutableListOf<String>()
    for (i1 in item) {
        if (i1.manufact_id >= lower && i1.manufact_id <= lower + 40 && run {
    val __res = mutableListOf<Item>()
    for (i2 in item) {
        if (i2.manufact == i1.manufact && i2.category == i1.category) {
            __res.add(i2)
        }
    }
    __res
}.size > 1) {
            __res.add(i1.product_name)
        }
    }
    __res
}.sortedBy { it.product_name as Comparable<Any> }

fun main() {
    json(result)
}
