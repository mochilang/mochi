// Generated by Mochi compiler v0.10.26 on 2025-07-15T07:18:22Z
fun String.starts_with(prefix: String): Boolean = this.startsWith(prefix)

fun toDouble(v: Any?): Double = when (v) {
    is Double -> v
    is Int -> v.toDouble()
    is String -> v.toDouble()
    else -> 0.0
}

fun json(v: Any?) {
    println(toJson(v))
}

fun toJson(v: Any?): String = when (v) {
    null -> "null"
    is String -> "\"" + v.replace("\"", "\\\"") + "\""
    is Boolean, is Number -> v.toString()
    is Map<*, *> -> v.entries.joinToString(prefix = "{", postfix = "}") { toJson(it.key.toString()) + ":" + toJson(it.value) }
    is Iterable<*> -> v.joinToString(prefix = "[", postfix = "]") { toJson(it) }
    else -> toJson(v.toString())
}
// Code generated from q78.mochi

data class C(var cs_sold_year: Int, var cs_item_sk: Int, var cs_customer_sk: Int, var cs_qty: Int, var cs_wc: Double, var cs_sp: Double)

data class S(var ss_sold_year: Int, var ss_item_sk: Int, var ss_customer_sk: Int, var ss_qty: Int, var ss_wc: Double, var ss_sp: Double)

data class W(var ws_sold_year: Int, var ws_item_sk: Int, var ws_customer_sk: Int, var ws_qty: Int, var ws_wc: Double, var ws_sp: Double)

val ss = mutableListOf(S(ss_sold_year = 1998, ss_item_sk = 1, ss_customer_sk = 1, ss_qty = 10, ss_wc = 50.0, ss_sp = 100.0))

val ws = mutableListOf(W(ws_sold_year = 1998, ws_item_sk = 1, ws_customer_sk = 1, ws_qty = 5, ws_wc = 25.0, ws_sp = 50.0))

val cs = mutableListOf(C(cs_sold_year = 1998, cs_item_sk = 1, cs_customer_sk = 1, cs_qty = 3, cs_wc = 15.0, cs_sp = 30.0))

val result = run {
    val __res = mutableListOf<Any?>()
    for (s in ss) {
        for (w in ws) {
            if (w.ws_sold_year == s.ss_sold_year && w.ws_item_sk == s.ss_item_sk && w.ws_customer_sk == s.ss_customer_sk) {
                for (c in cs) {
                    if (c.cs_sold_year == s.ss_sold_year && c.cs_item_sk == s.ss_item_sk && c.cs_customer_sk == s.ss_customer_sk) {
                        if (((if (w == null) 0 else w.ws_qty) > 0 || (if (c == null) 0 else c.cs_qty) > 0) && s.ss_sold_year == 1998) {
                            __res.add(mutableMapOf("ss_sold_year" to s.ss_sold_year, "ss_item_sk" to s.ss_item_sk, "ss_customer_sk" to s.ss_customer_sk, "ratio" to (s.ss_qty).toDouble() / (((if (w == null) 0 else w.ws_qty) + (if (c == null) 0 else c.cs_qty))).toDouble(), "store_qty" to s.ss_qty, "store_wholesale_cost" to s.ss_wc, "store_sales_price" to s.ss_sp, "other_chan_qty" to (if (w == null) 0 else w.ws_qty) + (if (c == null) 0 else c.cs_qty), "other_chan_wholesale_cost" to toDouble((if (w == null) 0.0 else w.ws_wc)) + toDouble((if (c == null) 0.0 else c.cs_wc)), "other_chan_sales_price" to toDouble((if (w == null) 0.0 else w.ws_sp)) + toDouble((if (c == null) 0.0 else c.cs_sp))))
                        }
                    }
                }
            }
        }
    }
    __res
}

fun main() {
    json(result)
}
