// Generated by Mochi compiler v0.10.26 on 2025-07-15T07:18:39Z
fun sum(list: List<Any?>): Number {
    var s = 0.0
    var allInt = true
    for (n in list) {
        val d = toDouble(n)
        if (d % 1.0 != 0.0) allInt = false
        s += d
    }
    return if (allInt) s.toInt() else s
}

fun String.starts_with(prefix: String): Boolean = this.startsWith(prefix)

fun toDouble(v: Any?): Double = when (v) {
    is Double -> v
    is Int -> v.toDouble()
    is String -> v.toDouble()
    else -> 0.0
}

fun json(v: Any?) {
    println(toJson(v))
}

fun toJson(v: Any?): String = when (v) {
    null -> "null"
    is String -> "\"" + v.replace("\"", "\\\"") + "\""
    is Boolean, is Number -> v.toString()
    is Map<*, *> -> v.entries.joinToString(prefix = "{", postfix = "}") { toJson(it.key.toString()) + ":" + toJson(it.value) }
    is Iterable<*> -> v.joinToString(prefix = "[", postfix = "]") { toJson(it) }
    else -> toJson(v.toString())
}
// Code generated from q83.mochi

data class Cr_item(var qty: Int)

data class Sr_item(var qty: Int)

data class Wr_item(var qty: Int)

val sr_items = mutableListOf(Sr_item(qty = 10), Sr_item(qty = 5))

val cr_items = mutableListOf(Cr_item(qty = 25), Cr_item(qty = 20))

val wr_items = mutableListOf(Wr_item(qty = 10), Wr_item(qty = 13))

val result = toDouble(toDouble(sum(run {
    val __res = mutableListOf<Int>()
    for (x in sr_items) {
        __res.add(x.qty)
    }
    __res
})) + toDouble(sum(run {
    val __res = mutableListOf<Int>()
    for (x in cr_items) {
        __res.add(x.qty)
    }
    __res
}))) + toDouble(sum(run {
    val __res = mutableListOf<Int>()
    for (x in wr_items) {
        __res.add(x.qty)
    }
    __res
}))

fun main() {
    json(result)
}
