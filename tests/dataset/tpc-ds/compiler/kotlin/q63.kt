// Generated by Mochi compiler v0.10.26 on 2025-07-15T07:17:35Z
fun sum(list: List<Any?>): Number {
    var s = 0.0
    var allInt = true
    for (n in list) {
        val d = toDouble(n)
        if (d % 1.0 != 0.0) allInt = false
        s += d
    }
    return if (allInt) s.toInt() else s
}

fun String.starts_with(prefix: String): Boolean = this.startsWith(prefix)

fun toDouble(v: Any?): Double = when (v) {
    is Double -> v
    is Int -> v.toDouble()
    is String -> v.toDouble()
    else -> 0.0
}

fun json(v: Any?) {
    println(toJson(v))
}

fun toJson(v: Any?): String = when (v) {
    null -> "null"
    is String -> "\"" + v.replace("\"", "\\\"") + "\""
    is Boolean, is Number -> v.toString()
    is Map<*, *> -> v.entries.joinToString(prefix = "{", postfix = "}") { toJson(it.key.toString()) + ":" + toJson(it.value) }
    is Iterable<*> -> v.joinToString(prefix = "[", postfix = "]") { toJson(it) }
    else -> toJson(v.toString())
}

class Group<K, T>(val key: K, val items: MutableList<T>) : MutableList<T> by items
// Code generated from q63.mochi

data class Sale(var mgr: Int, var amount: Int)

val sales = mutableListOf(Sale(mgr = 1, amount = 30), Sale(mgr = 2, amount = 33))

val by_mgr = run {
    val __groups = mutableMapOf<MutableMap<String, Any?>, Group<MutableMap<String, Any?>, Sale>>()
    val __order = mutableListOf<MutableMap<String, Any?>>()
    for (s in sales) {
        val __k = (mutableMapOf("mgr" to s.mgr) as MutableMap<String, Any?>)
        var __g = __groups[__k]
        if (__g == null) {
            __g = Group(__k, mutableListOf<Sale>())
            __groups[__k] = __g
            __order.add(__k)
        }
        __g.add(s)
    }
    val __res = mutableListOf<Any?>()
    for (k in __order) {
        val g = __groups[k]!!
        __res.add(mutableMapOf("mgr" to (g.key as MutableMap<String, Any?>)["mgr"], "sum_sales" to sum(run {
    val __res = mutableListOf<Int>()
    for (x in g) {
        __res.add(x.amount)
    }
    __res
})))
    }
    __res
}

val result = sum(run {
    val __res = mutableListOf<Any?>()
    for (x in by_mgr) {
        __res.add((x as MutableMap<String, Any?>)["sum_sales"])
    }
    __res
})

fun main() {
    json(result)
}
