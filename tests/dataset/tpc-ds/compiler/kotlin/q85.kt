// Generated by Mochi compiler v0.10.26 on 2025-07-15T07:18:49Z
fun String.starts_with(prefix: String): Boolean = this.startsWith(prefix)

fun toDouble(v: Any?): Double = when (v) {
    is Double -> v
    is Int -> v.toDouble()
    is String -> v.toDouble()
    else -> 0.0
}

fun json(v: Any?) {
    println(toJson(v))
}

fun toJson(v: Any?): String = when (v) {
    null -> "null"
    is String -> "\"" + v.replace("\"", "\\\"") + "\""
    is Boolean, is Number -> v.toString()
    is Map<*, *> -> v.entries.joinToString(prefix = "{", postfix = "}") { toJson(it.key.toString()) + ":" + toJson(it.value) }
    is Iterable<*> -> v.joinToString(prefix = "[", postfix = "]") { toJson(it) }
    else -> toJson(v.toString())
}
// Code generated from q85.mochi

data class Web_return(var qty: Int, var cash: Double, var fee: Double)

val web_returns = mutableListOf(Web_return(qty = 60, cash = 20.0, fee = 1.0), Web_return(qty = 100, cash = 30.0, fee = 2.0), Web_return(qty = 95, cash = 25.0, fee = 3.0))

val result = run { val r = run {
    val __res = mutableListOf<Int>()
    for (r in web_returns) {
        __res.add(r.qty)
    }
    __res
}.map{ toDouble(it) }.average(); if (r % 1.0 == 0.0) r.toInt() else r }

fun main() {
    json(result)
}
