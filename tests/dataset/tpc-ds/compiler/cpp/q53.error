/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:67:12: error: ‘ss’ was not declared in this scope
   67 |   decltype(ss) ss;
      |            ^~
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:67:12: error: ‘ss’ was not declared in this scope
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:68:12: error: ‘i’ was not declared in this scope
   68 |   decltype(i) i;
      |            ^
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:68:12: error: ‘i’ was not declared in this scope
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:69:12: error: ‘d’ was not declared in this scope
   69 |   decltype(d) d;
      |            ^
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:69:12: error: ‘d’ was not declared in this scope
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:72:12: error: ‘i’ was not declared in this scope
   72 |   decltype(i.i_manufact_id) key;
      |            ^
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:72:12: error: ‘i’ was not declared in this scope
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:89:36: error: ‘struct Grouped’ has no member named ‘manu’
   89 |   decltype(std::declval<Grouped>().manu) i_manufact_id;
      |                                    ^~~~
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:89:36: error: ‘struct Grouped’ has no member named ‘manu’
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:90:36: error: ‘struct Grouped’ has no member named ‘sum_sales’
   90 |   decltype(std::declval<Grouped>().sum_sales) sum_sales;
      |                                    ^~~~~~~~~
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:90:36: error: ‘struct Grouped’ has no member named ‘sum_sales’
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp: In lambda function:
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:223:43: error: cannot convert ‘StoreSale’ to ‘int’ in initialization
  223 |               __g.items.push_back(Grouped{ss, i, d});
      |                                           ^~
      |                                           |
      |                                           StoreSale
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:230:63: error: cannot convert ‘StoreSale’ to ‘int’ in initialization
  230 |                 __struct5{__key, std::vector<Grouped>{Grouped{ss, i, d}}});
      |                                                               ^~
      |                                                               |
      |                                                               StoreSale
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:230:72: error: no matching function for call to ‘std::vector<Grouped>::vector(<brace-enclosed initializer list>)’
  230 |                 __struct5{__key, std::vector<Grouped>{Grouped{ss, i, d}}});
      |                                                                        ^
In file included from /usr/include/c++/13/vector:66,
                 from /tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:6:
/usr/include/c++/13/bits/stl_vector.h:707:9: note: candidate: ‘template<class _InputIterator, class> std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with <template-parameter-2-2> = _InputIterator; _Tp = Grouped; _Alloc = std::allocator<Grouped>]’
  707 |         vector(_InputIterator __first, _InputIterator __last,
      |         ^~~~~~
/usr/include/c++/13/bits/stl_vector.h:707:9: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/stl_vector.h:678:7: note: candidate: ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = Grouped; _Alloc = std::allocator<Grouped>; allocator_type = std::allocator<Grouped>]’
  678 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
/usr/include/c++/13/bits/stl_vector.h:678:7: note:   conversion of argument 1 would be ill-formed:
/usr/include/c++/13/bits/stl_vector.h:659:7: note: candidate: ‘std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&, std::__type_identity_t<_Alloc>&) [with _Tp = Grouped; _Alloc = std::allocator<Grouped>; std::__type_identity_t<_Alloc> = std::allocator<Grouped>]’
  659 |       vector(vector&& __rv, const __type_identity_t<allocator_type>& __m)
      |       ^~~~~~
/usr/include/c++/13/bits/stl_vector.h:659:7: note:   candidate expects 2 arguments, 1 provided
/usr/include/c++/13/bits/stl_vector.h:640:7: note: candidate: ‘std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&, const allocator_type&, std::false_type) [with _Tp = Grouped; _Alloc = std::allocator<Grouped>; allocator_type = std::allocator<Grouped>; std::false_type = std::integral_constant<bool, false>]’
  640 |       vector(vector&& __rv, const allocator_type& __m, false_type)
      |       ^~~~~~
/usr/include/c++/13/bits/stl_vector.h:640:7: note:   candidate expects 3 arguments, 1 provided
/usr/include/c++/13/bits/stl_vector.h:635:7: note: candidate: ‘std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&, const allocator_type&, std::true_type) [with _Tp = Grouped; _Alloc = std::allocator<Grouped>; allocator_type = std::allocator<Grouped>; std::true_type = std::integral_constant<bool, true>]’
  635 |       vector(vector&& __rv, const allocator_type& __m, true_type) noexcept
      |       ^~~~~~
/usr/include/c++/13/bits/stl_vector.h:635:7: note:   candidate expects 3 arguments, 1 provided
/usr/include/c++/13/bits/stl_vector.h:624:7: note: candidate: ‘std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&, std::__type_identity_t<_Alloc>&) [with _Tp = Grouped; _Alloc = std::allocator<Grouped>; std::__type_identity_t<_Alloc> = std::allocator<Grouped>]’
  624 |       vector(const vector& __x, const __type_identity_t<allocator_type>& __a)
      |       ^~~~~~
/usr/include/c++/13/bits/stl_vector.h:624:7: note:   candidate expects 2 arguments, 1 provided
/usr/include/c++/13/bits/stl_vector.h:620:7: note: candidate: ‘std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&) [with _Tp = Grouped; _Alloc = std::allocator<Grouped>]’
  620 |       vector(vector&&) noexcept = default;
      |       ^~~~~~
/usr/include/c++/13/bits/stl_vector.h:620:7: note:   conversion of argument 1 would be ill-formed:
/usr/include/c++/13/bits/stl_vector.h:601:7: note: candidate: ‘std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = Grouped; _Alloc = std::allocator<Grouped>]’
  601 |       vector(const vector& __x)
      |       ^~~~~~
/usr/include/c++/13/bits/stl_vector.h:601:7: note:   conversion of argument 1 would be ill-formed:
/usr/include/c++/13/bits/stl_vector.h:569:7: note: candidate: ‘std::vector<_Tp, _Alloc>::vector(size_type, const value_type&, const allocator_type&) [with _Tp = Grouped; _Alloc = std::allocator<Grouped>; size_type = long unsigned int; value_type = Grouped; allocator_type = std::allocator<Grouped>]’
  569 |       vector(size_type __n, const value_type& __value,
      |       ^~~~~~
/usr/include/c++/13/bits/stl_vector.h:569:7: note:   candidate expects 3 arguments, 1 provided
/usr/include/c++/13/bits/stl_vector.h:556:7: note: candidate: ‘std::vector<_Tp, _Alloc>::vector(size_type, const allocator_type&) [with _Tp = Grouped; _Alloc = std::allocator<Grouped>; size_type = long unsigned int; allocator_type = std::allocator<Grouped>]’
  556 |       vector(size_type __n, const allocator_type& __a = allocator_type())
      |       ^~~~~~
/usr/include/c++/13/bits/stl_vector.h:556:7: note:   conversion of argument 1 would be ill-formed:
/usr/include/c++/13/bits/stl_vector.h:542:7: note: candidate: ‘std::vector<_Tp, _Alloc>::vector(const allocator_type&) [with _Tp = Grouped; _Alloc = std::allocator<Grouped>; allocator_type = std::allocator<Grouped>]’
  542 |       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
      |       ^~~~~~
/usr/include/c++/13/bits/stl_vector.h:542:7: note:   conversion of argument 1 would be ill-formed:
/usr/include/c++/13/bits/stl_vector.h:531:7: note: candidate: ‘std::vector<_Tp, _Alloc>::vector() [with _Tp = Grouped; _Alloc = std::allocator<Grouped>]’
  531 |       vector() = default;
      |       ^~~~~~
/usr/include/c++/13/bits/stl_vector.h:531:7: note:   candidate expects 0 arguments, 1 provided
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp: In lambda function:
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:241:58: error: ‘struct Grouped’ has no member named ‘price’
  241 |             std::vector<decltype(std::declval<Grouped>().price)> __items;
      |                                                          ^~~~~
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:241:58: error: ‘struct Grouped’ has no member named ‘price’
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:241:64: error: template argument 1 is invalid
  241 |             std::vector<decltype(std::declval<Grouped>().price)> __items;
      |                                                                ^
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:241:64: error: template argument 2 is invalid
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:243:23: error: request for member ‘push_back’ in ‘__items’, which is of non-class type ‘int’
  243 |               __items.push_back(x.price);
      |                       ^~~~~~~~~
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:243:35: error: ‘struct Grouped’ has no member named ‘price’
  243 |               __items.push_back(x.price);
      |                                   ^~~~~
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp: In instantiation of ‘main()::<lambda()>::<lambda(auto:1)> [with auto:1 = int]’:
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:240:13:   required from here
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:239:38: error: request for member ‘begin’ in ‘v’, which is of non-class type ‘int’
  239 |             return std::accumulate(v.begin(), v.end(), 0.0);
      |                                    ~~^~~~~
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:239:49: error: request for member ‘end’ in ‘v’, which is of non-class type ‘int’
  239 |             return std::accumulate(v.begin(), v.end(), 0.0);
      |                                               ~~^~~
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp: In lambda function:
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:248:58: error: ‘struct Grouped’ has no member named ‘price’
  248 |             std::vector<decltype(std::declval<Grouped>().price)> __items;
      |                                                          ^~~~~
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:248:58: error: ‘struct Grouped’ has no member named ‘price’
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:248:64: error: template argument 1 is invalid
  248 |             std::vector<decltype(std::declval<Grouped>().price)> __items;
      |                                                                ^
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:248:64: error: template argument 2 is invalid
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:250:23: error: request for member ‘push_back’ in ‘__items’, which is of non-class type ‘int’
  250 |               __items.push_back(x.price);
      |                       ^~~~~~~~~
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:250:35: error: ‘struct Grouped’ has no member named ‘price’
  250 |               __items.push_back(x.price);
      |                                   ^~~~~
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp: In lambda function:
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:247:16: error: no matching function for call to ‘__avg(int)’
  247 |           __avg(([&]() {
      |           ~~~~~^~~~~~~~~
  248 |             std::vector<decltype(std::declval<Grouped>().price)> __items;
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  249 |             for (auto x : g.items) {
      |             ~~~~~~~~~~~~~~~~~~~~~~~~
  250 |               __items.push_back(x.price);
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~
  251 |             }
      |             ~   
  252 |             return __items;
      |             ~~~~~~~~~~~~~~~
  253 |           })())});
      |           ~~~~~ 
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:75:30: note: candidate: ‘template<class T> double __avg(const std::vector<T>&)’
   75 | template <typename T> double __avg(const std::vector<T> &v) {
      |                              ^~~~~
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:75:30: note:   template argument deduction/substitution failed:
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:247:16: note:   mismatched types ‘const std::vector<T>’ and ‘int’
  247 |           __avg(([&]() {
      |           ~~~~~^~~~~~~~~
  248 |             std::vector<decltype(std::declval<Grouped>().price)> __items;
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  249 |             for (auto x : g.items) {
      |             ~~~~~~~~~~~~~~~~~~~~~~~~
  250 |               __items.push_back(x.price);
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~
  251 |             }
      |             ~   
  252 |             return __items;
      |             ~~~~~~~~~~~~~~~
  253 |           })())});
      |           ~~~~~ 
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp: In function ‘int main()’:
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:256:5: error: conversion from ‘vector<__struct6>’ to non-scalar type ‘vector<Grouped>’ requested
  210 |   std::vector<Grouped> grouped = ([&]() {
      |                                  ~~~~~~~~
  211 |     std::vector<__struct5> __groups;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |     for (auto ss : store_sales) {
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  213 |       for (auto i : item) {
      |       ~~~~~~~~~~~~~~~~~~~~~
  214 |         if (!((ss.item == i.i_item_sk)))
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |           continue;
      |           ~~~~~~~~~
  216 |         for (auto d : date_dim) {
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |           if (!((ss.date == d.d_date_sk)))
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             continue;
      |             ~~~~~~~~~
  219 |           auto __key = i.i_manufact_id;
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |           bool __found = false;
      |           ~~~~~~~~~~~~~~~~~~~~~
  221 |           for (auto &__g : __groups) {
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             if (__g.key == __key) {
      |             ~~~~~~~~~~~~~~~~~~~~~~~
  223 |               __g.items.push_back(Grouped{ss, i, d});
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |               __found = true;
      |               ~~~~~~~~~~~~~~~
  225 |               break;
      |               ~~~~~~
  226 |             }
      |             ~
  227 |           }
      |           ~
  228 |           if (!__found) {
      |           ~~~~~~~~~~~~~~~
  229 |             __groups.push_back(
      |             ~~~~~~~~~~~~~~~~~~~
  230 |                 __struct5{__key, std::vector<Grouped>{Grouped{ss, i, d}}});
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |           }
      |           ~
  232 |         }
      |         ~
  233 |       }
      |       ~
  234 |     }
      |     ~
  235 |     std::vector<__struct6> __items;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |     for (auto &g : __groups) {
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |       __items.push_back(__struct6{
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  238 |           g.key, ([&](auto v) {
      |           ~~~~~~~~~~~~~~~~~~~~~
  239 |             return std::accumulate(v.begin(), v.end(), 0.0);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  240 |           })(([&]() {
      |           ~~~~~~~~~~~
  241 |             std::vector<decltype(std::declval<Grouped>().price)> __items;
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  242 |             for (auto x : g.items) {
      |             ~~~~~~~~~~~~~~~~~~~~~~~~
  243 |               __items.push_back(x.price);
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~
  244 |             }
      |             ~
  245 |             return __items;
      |             ~~~~~~~~~~~~~~~
  246 |           })()),
      |           ~~~~~~
  247 |           __avg(([&]() {
      |           ~~~~~~~~~~~~~~
  248 |             std::vector<decltype(std::declval<Grouped>().price)> __items;
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  249 |             for (auto x : g.items) {
      |             ~~~~~~~~~~~~~~~~~~~~~~~~
  250 |               __items.push_back(x.price);
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~
  251 |             }
      |             ~
  252 |             return __items;
      |             ~~~~~~~~~~~~~~~
  253 |           })())});
      |           ~~~~~~~~
  254 |     }
      |     ~
  255 |     return __items;
      |     ~~~~~~~~~~~~~~~
  256 |   })();
      |   ~~^~
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp: In lambda function:
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:260:17: error: ‘struct Grouped’ has no member named ‘avg_sales’
  260 |       if (!(((g.avg_sales > 0) &&
      |                 ^~~~~~~~~
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:261:23: error: ‘struct Grouped’ has no member named ‘sum_sales’
  261 |              ((abs((g.sum_sales - g.avg_sales)) / g.avg_sales) > 0.1))))
      |                       ^~~~~~~~~
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:261:37: error: ‘struct Grouped’ has no member named ‘avg_sales’
  261 |              ((abs((g.sum_sales - g.avg_sales)) / g.avg_sales) > 0.1))))
      |                                     ^~~~~~~~~
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:261:53: error: ‘struct Grouped’ has no member named ‘avg_sales’
  261 |              ((abs((g.sum_sales - g.avg_sales)) / g.avg_sales) > 0.1))))
      |                                                     ^~~~~~~~~
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:263:34: error: ‘struct Grouped’ has no member named ‘manu’
  263 |       __items.push_back(Result{g.manu, g.sum_sales});
      |                                  ^~~~
/tmp/TestCPPCompiler_TPCDSQueriesq532438170783/001/prog.cpp:263:42: error: ‘struct Grouped’ has no member named ‘sum_sales’
  263 |       __items.push_back(Result{g.manu, g.sum_sales});
      |                                          ^~~~~~~~~
