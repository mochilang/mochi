// Generated by Mochi TypeScript compiler

let inventory: Record<string, number>[];
let item: Record<string, number>[];
var result: number;
let store_sales: Record<string, number>[];

function test_TPCDS_Q82_sample(): void {
  if (!(result == 82)) throw new Error("expect failed");
}

function main(): void {
  item = [
    { "id": 1 },
    { "id": 2 },
    { "id": 3 },
  ];
  inventory = [
    {
      "item": 1,
      "qty": 20,
    },
    {
      "item": 1,
      "qty": 22,
    },
    {
      "item": 1,
      "qty": 5,
    },
    {
      "item": 2,
      "qty": 30,
    },
    {
      "item": 2,
      "qty": 5,
    },
    {
      "item": 3,
      "qty": 10,
    },
  ];
  store_sales = [
    { "item": 1 },
    { "item": 2 },
  ];
  result = 0;
  for (const inv of inventory) {
    for (const s of store_sales) {
      if ((inv.item == s.item)) {
        result = result + inv.qty;
      }
    }
  }
  console.log(_json(result));
  test_TPCDS_Q82_sample();
}
function _json(v: any): string {
  function _sort(x: any): any {
    if (Array.isArray(x)) return x.map(_sort);
    if (x && typeof x === "object") {
      const keys = Object.keys(x).sort();
      const o: any = {};
      for (const k of keys) o[k] = _sort(x[k]);
      return o;
    }
    return x;
  }
  return JSON.stringify(_sort(v));
}

main();
