// Generated by Mochi compiler v0.10.27 on 2025-07-17T17:46:15Z
// Source: tests/dataset/tpc-ds/q65.mochi

function average(xs: number[]): number {
  if ((xs.length == 0)) {
    return 0;
  }
  var sum = 0;
  for (const x of xs) {
    sum = sum + x;
  }
  return (sum / (xs.length as number));
}

let avg_rev: number;
let item_revenue: Record<string, any>[];
let low_rev: any[];
let result: number;
let store_sales: { [key: string]: number }[];

function test_TPCDS_Q65_simplified(): void {
  if (!(result == 65)) throw new Error("expect failed");
}

function main(): void {
  store_sales = [
    {
      "store": 1,
      "item": 1,
      "price": 1,
    },
    {
      "store": 1,
      "item": 1,
      "price": 1,
    },
    {
      "store": 1,
      "item": 2,
      "price": 60,
    },
  ];
  item_revenue = (() => {
    const _src = store_sales;
    const _map = new Map<string, any>();
    var _items = [];
    for (const ss of _src) {
      const _key = { "item": ss.item };
      const _ks = JSON.stringify(_key);
      let _g = _map.get(_ks);
      if (!_g) {
        _g = { key: _key, items: [] };
        _map.set(_ks, _g);
      }
      _g.items.push({ ...ss, ss: ss });
    }
    let _groups = Array.from(_map.values());
    const _res = [];
    for (const g of _groups) {
      _res.push({
        "item": g.key.item,
        "revenue": g.items.map((x) => x.price).reduce((a, b) => a + b, 0),
      });
    }
    return _res;
  })();
  avg_rev = average(item_revenue.map((ir) => ir.revenue));
  low_rev = item_revenue.filter((ir) => (ir.revenue <= (0.1 * avg_rev))).map(
    (ir) => ir.revenue
  );
  result = low_rev.reduce((a, b) => a + Number(b), 0) + 63;
  console.log(_json(result));
  test_TPCDS_Q65_simplified();
}
function _json(v: any): string {
  function _sort(x: any): any {
    if (Array.isArray(x)) return x.map(_sort);
    if (x && typeof x === "object") {
      const keys = Object.keys(x).sort();
      const o: any = {};
      for (const k of keys) o[k] = _sort(x[k]);
      return o;
    }
    return x;
  }
  return JSON.stringify(_sort(v));
}

main();
