// Generated by Mochi compiler v0.10.27 on 2025-07-17T17:46:17Z
// Source: tests/dataset/tpc-ds/q96.mochi

type StoreSale = {
  ss_sold_time_sk: number;
  ss_hdemo_sk: number;
  ss_store_sk: number;
};

type HouseholdDemographics = {
  hd_demo_sk: number;
  hd_dep_count: number;
};

type TimeDim = {
  t_time_sk: number;
  t_hour: number;
  t_minute: number;
};

type Store = {
  s_store_sk: number;
  s_store_name: string;
};

let household_demographics: { [key: string]: number }[];
let result: number;
let store: Record<string, any>[];
let store_sales: { [key: string]: number }[];
let time_dim: { [key: string]: number }[];

function test_TPCDS_Q96_count(): void {
  if (!(result == 3)) throw new Error("expect failed");
}

function main(): void {
  store_sales = [
    {
      "ss_sold_time_sk": 1,
      "ss_hdemo_sk": 1,
      "ss_store_sk": 1,
    },
    {
      "ss_sold_time_sk": 1,
      "ss_hdemo_sk": 1,
      "ss_store_sk": 1,
    },
    {
      "ss_sold_time_sk": 2,
      "ss_hdemo_sk": 1,
      "ss_store_sk": 1,
    },
  ];
  household_demographics = [
    {
      "hd_demo_sk": 1,
      "hd_dep_count": 3,
    },
  ];
  time_dim = [
    {
      "t_time_sk": 1,
      "t_hour": 20,
      "t_minute": 35,
    },
    {
      "t_time_sk": 2,
      "t_hour": 20,
      "t_minute": 45,
    },
  ];
  store = [
    {
      "s_store_sk": 1,
      "s_store_name": "ese",
    },
  ];
  result = (() => {
    const _src = store_sales;
    const _res = [];
    for (const ss of _src) {
      for (const hd of household_demographics) {
        if (!(ss.ss_hdemo_sk == hd.hd_demo_sk)) continue;
        for (const t of time_dim) {
          if (!(ss.ss_sold_time_sk == t.t_time_sk)) continue;
          for (const s of store) {
            if (!(ss.ss_store_sk == s.s_store_sk)) continue;
            if (
              !((((t.t_hour == 20) && (t.t_minute >= 30)) &&
                (hd.hd_dep_count == 3)) && (s.s_store_name == "ese"))
            ) continue;
            _res.push(ss);
          }
        }
      }
    }
    return _res;
  })().length;
  console.log(_json(result));
  test_TPCDS_Q96_count();
}
function _json(v: any): string {
  function _sort(x: any): any {
    if (Array.isArray(x)) return x.map(_sort);
    if (x && typeof x === "object") {
      const keys = Object.keys(x).sort();
      const o: any = {};
      for (const k of keys) o[k] = _sort(x[k]);
      return o;
    }
    return x;
  }
  return JSON.stringify(_sort(v));
}

main();
