// Generated by Mochi compiler v0.10.27 on 2025-07-17T17:46:16Z
// Source: tests/dataset/tpc-ds/q80.mochi

let catalog_sales: { [key: string]: number }[];
let store_sales: { [key: string]: number }[];
let total_profit: number;
let web_sales: { [key: string]: number }[];

function test_TPCDS_Q80_sample(): void {
  if (!(total_profit == 80)) throw new Error("expect failed");
}

function main(): void {
  store_sales = [
    {
      "price": 20,
      "ret": 5,
    },
    {
      "price": 10,
      "ret": 2,
    },
    {
      "price": 5,
      "ret": 0,
    },
  ];
  catalog_sales = [
    {
      "price": 15,
      "ret": 3,
    },
    {
      "price": 8,
      "ret": 1,
    },
  ];
  web_sales = [
    {
      "price": 25,
      "ret": 5,
    },
    {
      "price": 15,
      "ret": 8,
    },
    {
      "price": 8,
      "ret": 2,
    },
  ];
  total_profit =
    (store_sales.map((s) => (s.price - s.ret)).reduce((a, b) => a + b, 0) +
      catalog_sales.map((c) => (c.price - c.ret)).reduce((a, b) => a + b, 0)) +
    web_sales.map((w) => (w.price - w.ret)).reduce((a, b) => a + b, 0);
  console.log(_json(total_profit));
  test_TPCDS_Q80_sample();
}
function _json(v: any): string {
  function _sort(x: any): any {
    if (Array.isArray(x)) return x.map(_sort);
    if (x && typeof x === "object") {
      const keys = Object.keys(x).sort();
      const o: any = {};
      for (const k of keys) o[k] = _sort(x[k]);
      return o;
    }
    return x;
  }
  return JSON.stringify(_sort(v));
}

main();
