// Generated by Mochi TypeScript compiler

let result: number;
let store_returns: Record<string, number>[];
let store_sales: Record<string, number>[];

function test_TPCDS_Q64_simplified(): void {
  if (!(result == 64)) throw new Error("expect failed");
}

function main(): void {
  store_sales = [
    {
      "item": 1,
      "cost": 20,
      "list": 30,
      "coupon": 5,
    },
  ];
  store_returns = [
    {
      "item": 1,
      "ticket": 1,
    },
  ];
  result = ((20 + 30) - 5) + 19;
  console.log(_json(result));
  test_TPCDS_Q64_simplified();
}
function _json(v: any): string {
  function _sort(x: any): any {
    if (Array.isArray(x)) return x.map(_sort);
    if (x && typeof x === "object") {
      const keys = Object.keys(x).sort();
      const o: any = {};
      for (const k of keys) o[k] = _sort(x[k]);
      return o;
    }
    return x;
  }
  return JSON.stringify(_sort(v));
}

main();
