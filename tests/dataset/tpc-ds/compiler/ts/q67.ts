// Generated by Mochi compiler v0.10.27 on 2025-07-17T17:46:15Z
// Source: tests/dataset/tpc-ds/q67.mochi

let reason: Record<string, any>[];
let result: number;
let store_sales: { [key: string]: number }[];

function test_TPCDS_Q67_simplified(): void {
  if (!(result == 67)) throw new Error("expect failed");
}

function main(): void {
  store_sales = [
    {
      "reason": 1,
      "price": 40,
    },
    {
      "reason": 2,
      "price": 27,
    },
  ];
  reason = [
    {
      "id": 1,
      "name": "PROMO",
    },
    {
      "id": 2,
      "name": "RETURN",
    },
  ];
  result = (() => {
    const _src = store_sales;
    const _res = [];
    for (const ss of _src) {
      for (const r of reason) {
        if (!(ss.reason == r.id)) continue;
        if (!(["PROMO", "RETURN"].includes(r.name) ? 1 : 0)) continue;
        _res.push(ss.price);
      }
    }
    return _res;
  })().reduce((a, b) => a + b, 0);
  console.log(_json(result));
  test_TPCDS_Q67_simplified();
}
function _json(v: any): string {
  function _sort(x: any): any {
    if (Array.isArray(x)) return x.map(_sort);
    if (x && typeof x === "object") {
      const keys = Object.keys(x).sort();
      const o: any = {};
      for (const k of keys) o[k] = _sort(x[k]);
      return o;
    }
    return x;
  }
  return JSON.stringify(_sort(v));
}

main();
