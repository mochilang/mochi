// Generated by Mochi compiler v0.10.25 on 2025-07-15T04:53:48Z
// Source: tests/dataset/tpc-ds/q67.mochi

let reason: Record<string, any>[];
let result: number;
let store_sales: { [key: string]: number }[];

function test_TPCDS_Q67_simplified(): void {
  if (!(result == 67)) throw new Error("expect failed");
}

function main(): void {
  store_sales = [
    {
      "reason": 1,
      "price": 40,
    },
    {
      "reason": 2,
      "price": 27,
    },
  ];
  reason = [
    {
      "id": 1,
      "name": "PROMO",
    },
    {
      "id": 2,
      "name": "RETURN",
    },
  ];
  result = _sum((() => {
    const _src = store_sales;
    const _res = [];
    for (const ss of _src) {
      for (const r of reason) {
        if (!(ss.reason == r.id)) continue;
        if (
          !([
            "PROMO",
            "RETURN",
          ].includes(r.name))
        ) continue;
        _res.push(ss.price);
      }
    }
    return _res;
  })());
  console.log(_json(result));
  test_TPCDS_Q67_simplified();
}
function _json(v: any): string {
  function _sort(x: any): any {
    if (Array.isArray(x)) return x.map(_sort);
    if (x && typeof x === "object") {
      const keys = Object.keys(x).sort();
      const o: any = {};
      for (const k of keys) o[k] = _sort(x[k]);
      return o;
    }
    return x;
  }
  return JSON.stringify(_sort(v), null, 2);
}

function _sum(v: any): number {
  let list: any[] | null = null;
  if (Array.isArray(v)) list = v;
  else if (v && typeof v === "object") {
    if (Array.isArray((v as any).items)) list = (v as any).items;
    else if (Array.isArray((v as any).Items)) list = (v as any).Items;
  }
  if (!list || list.length === 0) return 0;
  let sum = 0;
  for (const n of list) sum += Number(n);
  return sum;
}

main();
