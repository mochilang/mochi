// Generated by Mochi compiler v0.10.27 on 2025-07-17T17:46:16Z
// Source: tests/dataset/tpc-ds/q81.mochi

let avg_list: Record<string, any>[];
let avg_state: any;
let catalog_returns: Record<string, any>[];
let result: any;
let result_list: any[];

function test_TPCDS_Q81_sample(): void {
  if (!(result == 81)) throw new Error("expect failed");
}

function main(): void {
  catalog_returns = [
    {
      "cust": 1,
      "state": "CA",
      "amt": 40,
    },
    {
      "cust": 2,
      "state": "CA",
      "amt": 50,
    },
    {
      "cust": 3,
      "state": "CA",
      "amt": 81,
    },
    {
      "cust": 4,
      "state": "TX",
      "amt": 30,
    },
    {
      "cust": 5,
      "state": "TX",
      "amt": 20,
    },
  ];
  avg_list = (() => {
    const _src = catalog_returns;
    const _map = new Map<string, any>();
    var _items = [];
    for (const r of _src) {
      const _key = r.state;
      const _ks = JSON.stringify(_key);
      let _g = _map.get(_ks);
      if (!_g) {
        _g = { key: _key, items: [] };
        _map.set(_ks, _g);
      }
      _g.items.push({ ...r, r: r });
    }
    let _groups = Array.from(_map.values());
    const _res = [];
    for (const g of _groups) {
      _res.push({
        "state": g.key,
        "avg_amt": (g.items.map((x) =>
          x.amt
        ).reduce((a, b) => a + Number(b), 0) / g.items.map((x) =>
          x.amt
        ).length),
      });
    }
    return _res;
  })();
  avg_state = (avg_list.filter((a) => (a.state == "CA")).map((a) => a))[0];
  result_list = catalog_returns.filter(
    (r) => ((r.state == "CA") && (r.amt > (avg_state.avg_amt * 1.2)))
  ).map((r) => r.amt);
  result = result_list[0];
  console.log(_json(result));
  test_TPCDS_Q81_sample();
}
function _json(v: any): string {
  function _sort(x: any): any {
    if (Array.isArray(x)) return x.map(_sort);
    if (x && typeof x === "object") {
      const keys = Object.keys(x).sort();
      const o: any = {};
      for (const k of keys) o[k] = _sort(x[k]);
      return o;
    }
    return x;
  }
  return JSON.stringify(_sort(v));
}

main();
