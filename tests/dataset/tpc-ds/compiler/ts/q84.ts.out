// Generated by Mochi TypeScript compiler

let customer_address: Array<Record<string, any>>;
let customer_demographics: Array<Record<string, number>>;
let customers: Array<Record<string, any>>;
let household_demographics: Array<Record<string, number>>;
let income_band: Array<Record<string, number>>;
let result: number;
let store_returns: Array<Record<string, number>>;

function test_TPCDS_Q84_sample(): void {
  if (!(result == 84)) throw new Error("expect failed");
}

function main(): void {
  customers = [
    {
      "id": 1,
      "city": "A",
      "cdemo": 1,
    },
    {
      "id": 2,
      "city": "A",
      "cdemo": 2,
    },
    {
      "id": 3,
      "city": "B",
      "cdemo": 1,
    },
  ];
  customer_demographics = [
    { "cd_demo_sk": 1 },
    { "cd_demo_sk": 2 },
  ];
  household_demographics = [
    {
      "hd_demo_sk": 1,
      "income_band_sk": 1,
    },
    {
      "hd_demo_sk": 2,
      "income_band_sk": 2,
    },
  ];
  income_band = [
    {
      "ib_income_band_sk": 1,
      "ib_lower_bound": 0,
      "ib_upper_bound": 50000,
    },
    {
      "ib_income_band_sk": 2,
      "ib_lower_bound": 50001,
      "ib_upper_bound": 100000,
    },
  ];
  customer_address = [
    {
      "ca_address_sk": 1,
      "ca_city": "A",
    },
    {
      "ca_address_sk": 2,
      "ca_city": "B",
    },
  ];
  store_returns = [
    { "sr_cdemo_sk": 1 },
    { "sr_cdemo_sk": 1 },
    { "sr_cdemo_sk": 2 },
    { "sr_cdemo_sk": 1 },
  ];
  result = 80 + store_returns.length;
  console.log(_json(result));
  test_TPCDS_Q84_sample();
}
function _json(v: any): string {
  function _sort(x: any): any {
    if (Array.isArray(x)) return x.map(_sort);
    if (x && typeof x === "object") {
      const keys = Object.keys(x).sort();
      const o: any = {};
      for (const k of keys) o[k] = _sort(x[k]);
      return o;
    }
    return x;
  }
  return JSON.stringify(_sort(v));
}

main();
