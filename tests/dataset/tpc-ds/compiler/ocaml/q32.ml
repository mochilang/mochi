(* Generated by Mochi compiler v0.10.25 on 2025-07-15T04:50:16Z *)
let sum lst = List.fold_left (+) 0 lst
let sum_float lst = List.fold_left (+.) 0.0 lst

type record1 = { mutable cs_item_sk : int; mutable cs_sold_date_sk : int; mutable cs_ext_discount_amt : float }
type record2 = { mutable i_item_sk : int; mutable i_manufact_id : int }
type record3 = { mutable d_date_sk : int; mutable d_year : int }

let catalog_sales : record1 list = [{ cs_item_sk = 1; cs_sold_date_sk = 1; cs_ext_discount_amt = 5. };{ cs_item_sk = 1; cs_sold_date_sk = 2; cs_ext_discount_amt = 10. };{ cs_item_sk = 1; cs_sold_date_sk = 3; cs_ext_discount_amt = 20. }]
let item : record2 list = [{ i_item_sk = 1; i_manufact_id = 1 }]
let date_dim : record3 list = [{ d_date_sk = 1; d_year = 2000 };{ d_date_sk = 2; d_year = 2000 };{ d_date_sk = 3; d_year = 2000 }]
let filtered : Obj.t list = (let __res0 = ref [] in
  List.iter (fun (cs : record1) ->
      List.iter (fun (i : record2) ->
            List.iter (fun (d : record3) ->
                        if (cs.cs_item_sk = i.i_item_sk) && (cs.cs_sold_date_sk = d.d_date_sk) && ((i.i_manufact_id = 1) && (d.d_year = 2000)) then
        __res0 := cs.cs_ext_discount_amt :: !__res0;
            ) date_dim;
      ) item;
  ) catalog_sales;
List.rev !__res0)

let avg_discount : float = (float_of_int (List.fold_left (+) 0 filtered) /. float_of_int (List.length filtered))
let result : float = (sum_float (let __res1 = ref [] in
  List.iter (fun x ->
      if ((x > avg_discount) *. 1.3) then
    __res1 := x :: !__res1;
  ) filtered;
List.rev !__res1)
)

let () =
  json result;
  assert ((result = 20.))
