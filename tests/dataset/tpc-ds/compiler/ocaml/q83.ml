(* Generated by Mochi compiler v0.10.25 on 2025-07-15T04:50:17Z *)
let sum lst = List.fold_left (+) 0 lst
let sum_float lst = List.fold_left (+.) 0.0 lst

type record1 = { mutable qty : int }

let sr_items : record1 list = [[("qty",Obj.repr (10))];[("qty",Obj.repr (5))]]
let cr_items : record1 list = [[("qty",Obj.repr (25))];[("qty",Obj.repr (20))]]
let wr_items : record1 list = [[("qty",Obj.repr (10))];[("qty",Obj.repr (13))]]
let result : float = (((sum_float (let __res0 = ref [] in
  List.iter (fun x ->
      __res0 := Obj.obj (List.assoc "qty" x) :: !__res0;
  ) sr_items;
List.rev !__res0)
) +. (sum_float (let __res1 = ref [] in
  List.iter (fun x ->
      __res1 := Obj.obj (List.assoc "qty" x) :: !__res1;
  ) cr_items;
List.rev !__res1)
)) +. (sum_float (let __res2 = ref [] in
  List.iter (fun x ->
      __res2 := Obj.obj (List.assoc "qty" x) :: !__res2;
  ) wr_items;
List.rev !__res2)
))

let () =
  json result;
  assert ((result = 83))
