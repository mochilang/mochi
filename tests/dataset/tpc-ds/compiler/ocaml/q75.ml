(* Generated by Mochi compiler v0.10.25 on 2025-07-15T04:50:17Z *)
let sum lst = List.fold_left (+) 0 lst
let sum_float lst = List.fold_left (+.) 0.0 lst
type ('k,'v) group = { key : 'k; items : 'v list }

type record1 = { mutable d_date_sk : int; mutable d_year : int }
type record2 = { mutable ss_item_sk : int; mutable ss_quantity : int; mutable ss_sales_price : float; mutable ss_sold_date_sk : int }
type record3 = { mutable ws_item_sk : int; mutable ws_quantity : int; mutable ws_sales_price : float; mutable ws_sold_date_sk : int }
type record4 = { mutable cs_item_sk : int; mutable cs_quantity : int; mutable cs_sales_price : float; mutable cs_sold_date_sk : int }
type record5 = { mutable i_item_sk : int; mutable i_brand_id : int; mutable i_class_id : int; mutable i_category_id : int; mutable i_manufact_id : int; mutable i_category : string }
type record6 = { mutable d_year : int; mutable i_item_sk : int; mutable quantity : int; mutable amount : float }
type record7 = { mutable year : Obj.t; mutable brand_id : int; mutable class_id : int; mutable category_id : int; mutable manuf_id : int }
type record8 = { mutable d_year : Obj.t; mutable i_brand_id : Obj.t; mutable i_class_id : Obj.t; mutable i_category_id : Obj.t; mutable i_manufact_id : Obj.t; mutable sales_cnt : float; mutable sales_amt : float }
type record9 = { mutable d_year : Obj.t; mutable i_brand_id : int; mutable i_class_id : int; mutable i_category_id : int; mutable i_manufact_id : int; mutable sales_cnt : float; mutable sales_amt : float }
type record10 = { mutable prev_year : Obj.t; mutable year : Obj.t; mutable i_brand_id : Obj.t; mutable i_class_id : Obj.t; mutable i_category_id : Obj.t; mutable i_manufact_id : Obj.t; mutable prev_yr_cnt : Obj.t; mutable curr_yr_cnt : Obj.t; mutable sales_cnt_diff : Obj.t; mutable sales_amt_diff : Obj.t }
type record11 = { mutable prev_year : int; mutable year : int; mutable i_brand_id : int; mutable i_class_id : int; mutable i_category_id : int; mutable i_manufact_id : int; mutable prev_yr_cnt : int; mutable curr_yr_cnt : int; mutable sales_cnt_diff : int; mutable sales_amt_diff : float }

let date_dim : record1 list = [{ d_date_sk = 1; d_year = 2000 };{ d_date_sk = 2; d_year = 2001 }]
let store_sales : record2 list = [{ ss_item_sk = 1; ss_quantity = 50; ss_sales_price = 500.; ss_sold_date_sk = 1 };{ ss_item_sk = 1; ss_quantity = 40; ss_sales_price = 400.; ss_sold_date_sk = 2 }]
let web_sales : record3 list = [{ ws_item_sk = 1; ws_quantity = 30; ws_sales_price = 300.; ws_sold_date_sk = 1 };{ ws_item_sk = 1; ws_quantity = 25; ws_sales_price = 250.; ws_sold_date_sk = 2 }]
let catalog_sales : record4 list = [{ cs_item_sk = 1; cs_quantity = 20; cs_sales_price = 200.; cs_sold_date_sk = 1 };{ cs_item_sk = 1; cs_quantity = 15; cs_sales_price = 150.; cs_sold_date_sk = 2 }]
let item : record5 list = [{ i_item_sk = 1; i_brand_id = 1; i_class_id = 2; i_category_id = 3; i_manufact_id = 4; i_category = "Electronics" }]
let sales_detail : Obj.t list = concat (let __res0 = ref [] in
  List.iter (fun ss ->
    List.iter (fun d ->
      if (d.d_date_sk = ss.ss_sold_date_sk) then (
        __res0 := { d_year = d.d_year; i_item_sk = ss.ss_item_sk; quantity = ss.ss_quantity; amount = ss.ss_sales_price } :: !__res0;
      )
    ) date_dim;
  ) store_sales;
  List.rev !__res0)
 (let __res1 = ref [] in
  List.iter (fun ws ->
    List.iter (fun d ->
      if (d.d_date_sk = ws.ws_sold_date_sk) then (
        __res1 := { d_year = d.d_year; i_item_sk = ws.ws_item_sk; quantity = ws.ws_quantity; amount = ws.ws_sales_price } :: !__res1;
      )
    ) date_dim;
  ) web_sales;
  List.rev !__res1)
 (let __res2 = ref [] in
  List.iter (fun cs ->
    List.iter (fun d ->
      if (d.d_date_sk = cs.cs_sold_date_sk) then (
        __res2 := { d_year = d.d_year; i_item_sk = cs.cs_item_sk; quantity = cs.cs_quantity; amount = cs.cs_sales_price } :: !__res2;
      )
    ) date_dim;
  ) catalog_sales;
  List.rev !__res2)

let all_sales : record9 list = (let (__groups3 : (record7 * Obj.t list) list ref) = ref [] in
  List.iter (fun sd ->
      List.iter (fun (i : record5) ->
              if (i.i_item_sk = sd.i_item_sk) && (i.i_category = "Electronics") then (
        let (key : record7) = { year = sd.d_year; brand_id = i.i_brand_id; class_id = i.i_class_id; category_id = i.i_category_id; manuf_id = i.i_manufact_id } in
        let cur = try List.assoc key !__groups3 with Not_found -> [] in
        __groups3 := (key, sd :: cur) :: List.remove_assoc key !__groups3);
      ) item;
  ) sales_detail;
  let __res3 = ref [] in
  List.iter (fun ((gKey : record7), gItems) ->
    let g = { key = gKey; items = List.rev gItems } in
    __res3 := { d_year = g.key.year; i_brand_id = g.key.brand_id; i_class_id = g.key.class_id; i_category_id = g.key.category_id; i_manufact_id = g.key.manuf_id; sales_cnt = (sum_float (let __res4 = ref [] in
  List.iter (fun x ->
      __res4 := x.sd.quantity :: !__res4;
  ) g.items;
List.rev !__res4)
); sales_amt = (sum_float (let __res5 = ref [] in
  List.iter (fun x ->
      __res5 := x.sd.amount :: !__res5;
  ) g.items;
List.rev !__res5)
) } :: !__res3
  ) !__groups3;
  List.rev !__res3)

let prev_yr : (string * Obj.t) list = first (let __res6 = ref [] in
  List.iter (fun (a : record9) ->
      if (a.d_year = 2000) then
    __res6 := a :: !__res6;
  ) all_sales;
List.rev !__res6)

let curr_yr : (string * Obj.t) list = first (let __res7 = ref [] in
  List.iter (fun (a : record9) ->
      if (a.d_year = 2001) then
    __res7 := a :: !__res7;
  ) all_sales;
List.rev !__res7)

let result = (if (((curr_yr.sales_cnt / prev_yr.sales_cnt)) < 0.9) then [{ prev_year = prev_yr.d_year; year = curr_yr.d_year; i_brand_id = curr_yr.i_brand_id; i_class_id = curr_yr.i_class_id; i_category_id = curr_yr.i_category_id; i_manufact_id = curr_yr.i_manufact_id; prev_yr_cnt = prev_yr.sales_cnt; curr_yr_cnt = curr_yr.sales_cnt; sales_cnt_diff = (curr_yr.sales_cnt - prev_yr.sales_cnt); sales_amt_diff = (curr_yr.sales_amt - prev_yr.sales_amt) }] else [])

let () =
  json result;
  assert ((result = [{ prev_year = 2000; year = 2001; i_brand_id = 1; i_class_id = 2; i_category_id = 3; i_manufact_id = 4; prev_yr_cnt = 100; curr_yr_cnt = 80; sales_cnt_diff = -20; sales_amt_diff = -200. }]))
