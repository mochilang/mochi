(* Generated by Mochi compiler v0.10.25 on 2025-07-15T04:50:17Z *)
type ('k,'v) group = { key : 'k; items : 'v list }

type record1 = { mutable cs_ship_date_sk : int; mutable cs_sold_date_sk : int; mutable cs_warehouse_sk : int; mutable cs_ship_mode_sk : int; mutable cs_call_center_sk : int }
type record2 = { mutable w_warehouse_sk : int; mutable w_warehouse_name : string }
type record3 = { mutable sm_ship_mode_sk : int; mutable sm_type : string }
type record4 = { mutable cc_call_center_sk : int; mutable cc_name : string }
type record5 = { mutable warehouse : string; mutable sm_type : string; mutable cc_name : string }
type record6 = { mutable warehouse : Obj.t; mutable sm_type : Obj.t; mutable cc_name : Obj.t; mutable d30 : int; mutable d60 : int; mutable d90 : int; mutable d120 : int; mutable dmore : int }
type record7 = { mutable warehouse : string; mutable sm_type : string; mutable cc_name : string; mutable d30 : int; mutable d60 : int; mutable d90 : int; mutable d120 : int; mutable dmore : int }

type catalogsale = { mutable cs_ship_date_sk : int; mutable cs_sold_date_sk : int; mutable cs_warehouse_sk : int; mutable cs_ship_mode_sk : int; mutable cs_call_center_sk : int }
type warehouse = { mutable w_warehouse_sk : int; mutable w_warehouse_name : string }
type shipmode = { mutable sm_ship_mode_sk : int; mutable sm_type : string }
type callcenter = { mutable cc_call_center_sk : int; mutable cc_name : string }
let catalog_sales : record1 list = [{ cs_ship_date_sk = 31; cs_sold_date_sk = 1; cs_warehouse_sk = 1; cs_ship_mode_sk = 1; cs_call_center_sk = 1 };{ cs_ship_date_sk = 51; cs_sold_date_sk = 1; cs_warehouse_sk = 1; cs_ship_mode_sk = 1; cs_call_center_sk = 1 };{ cs_ship_date_sk = 71; cs_sold_date_sk = 1; cs_warehouse_sk = 1; cs_ship_mode_sk = 1; cs_call_center_sk = 1 };{ cs_ship_date_sk = 101; cs_sold_date_sk = 1; cs_warehouse_sk = 1; cs_ship_mode_sk = 1; cs_call_center_sk = 1 };{ cs_ship_date_sk = 131; cs_sold_date_sk = 1; cs_warehouse_sk = 1; cs_ship_mode_sk = 1; cs_call_center_sk = 1 }]
let warehouse : record2 list = [{ w_warehouse_sk = 1; w_warehouse_name = "Warehouse1" }]
let ship_mode : record3 list = [{ sm_ship_mode_sk = 1; sm_type = "EXP" }]
let call_center : record4 list = [{ cc_call_center_sk = 1; cc_name = "CC1" }]
let grouped : record7 list = (let (__groups0 : (record5 * record1 list) list ref) = ref [] in
  List.iter (fun (cs : record1) ->
      List.iter (fun (w : record2) ->
            List.iter (fun (sm : record3) ->
                    List.iter (fun (cc : record4) ->
                                    if (cs.cs_warehouse_sk = w.w_warehouse_sk) && (cs.cs_ship_mode_sk = sm.sm_ship_mode_sk) && (cs.cs_call_center_sk = cc.cc_call_center_sk) then (
            let (key : record5) = { warehouse = substr w.w_warehouse_name 0 20; sm_type = sm.sm_type; cc_name = cc.cc_name } in
            let cur = try List.assoc key !__groups0 with Not_found -> [] in
            __groups0 := (key, cs :: cur) :: List.remove_assoc key !__groups0);
                    ) call_center;
            ) ship_mode;
      ) warehouse;
  ) catalog_sales;
  let __res0 = ref [] in
  List.iter (fun ((gKey : record5), gItems) ->
    let g = { key = gKey; items = List.rev gItems } in
    __res0 := { warehouse = g.key.warehouse; sm_type = g.key.sm_type; cc_name = g.key.cc_name; d30 = List.length (let __res1 = ref [] in
  List.iter (fun x ->
      if ((x.cs_ship_date_sk - x.cs_sold_date_sk) <= 30) then
    __res1 := x :: !__res1;
  ) g.items;
List.rev !__res1)
; d60 = List.length (let __res2 = ref [] in
  List.iter (fun x ->
      if (((((x.cs_ship_date_sk - x.cs_sold_date_sk) > 30) && x.cs_ship_date_sk) - x.cs_sold_date_sk) <= 60) then
    __res2 := x :: !__res2;
  ) g.items;
List.rev !__res2)
; d90 = List.length (let __res3 = ref [] in
  List.iter (fun x ->
      if (((((x.cs_ship_date_sk - x.cs_sold_date_sk) > 60) && x.cs_ship_date_sk) - x.cs_sold_date_sk) <= 90) then
    __res3 := x :: !__res3;
  ) g.items;
List.rev !__res3)
; d120 = List.length (let __res4 = ref [] in
  List.iter (fun x ->
      if (((((x.cs_ship_date_sk - x.cs_sold_date_sk) > 90) && x.cs_ship_date_sk) - x.cs_sold_date_sk) <= 120) then
    __res4 := x :: !__res4;
  ) g.items;
List.rev !__res4)
; dmore = List.length (let __res5 = ref [] in
  List.iter (fun x ->
      if ((x.cs_ship_date_sk - x.cs_sold_date_sk) > 120) then
    __res5 := x :: !__res5;
  ) g.items;
List.rev !__res5)
 } :: !__res0
  ) !__groups0;
  List.rev !__res0)


let () =
  json grouped;
  assert ((grouped = [{ warehouse = "Warehouse1"; sm_type = "EXP"; cc_name = "CC1"; d30 = 1; d60 = 1; d90 = 1; d120 = 1; dmore = 1 }]))
