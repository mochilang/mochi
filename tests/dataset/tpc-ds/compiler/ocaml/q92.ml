(* Generated by Mochi compiler v0.10.25 on 2025-07-15T04:50:17Z *)
let sum lst = List.fold_left (+) 0 lst
let sum_float lst = List.fold_left (+.) 0.0 lst

type record1 = { mutable ws_item_sk : int; mutable ws_sold_date_sk : int; mutable ws_ext_discount_amt : float }
type record2 = { mutable i_item_sk : int; mutable i_manufact_id : int }
type record3 = { mutable d_date_sk : int; mutable d_date : string }

type websale = { mutable ws_item_sk : int; mutable ws_sold_date_sk : int; mutable ws_ext_discount_amt : float }
let web_sales : record1 list = [{ ws_item_sk = 1; ws_sold_date_sk = 1; ws_ext_discount_amt = 1. };{ ws_item_sk = 1; ws_sold_date_sk = 1; ws_ext_discount_amt = 1. };{ ws_item_sk = 1; ws_sold_date_sk = 1; ws_ext_discount_amt = 2. }]
let item : record2 list = [{ i_item_sk = 1; i_manufact_id = 1 }]
let date_dim : record3 list = [{ d_date_sk = 1; d_date = "2000-01-02" }]
let sum_amt : float = (sum_float (let __res0 = ref [] in
  List.iter (fun (ws : record1) ->
      __res0 := ws.ws_ext_discount_amt :: !__res0;
  ) web_sales;
List.rev !__res0)
)
let avg_amt : float = (float_of_int (List.fold_left (+) 0 (let __res1 = ref [] in
  List.iter (fun (ws : record1) ->
      __res1 := ws.ws_ext_discount_amt :: !__res1;
  ) web_sales;
List.rev !__res1)
) /. float_of_int (List.length (let __res1 = ref [] in
  List.iter (fun (ws : record1) ->
      __res1 := ws.ws_ext_discount_amt :: !__res1;
  ) web_sales;
List.rev !__res1)
))
let result : float = (if ((sum_amt > avg_amt) *. 1.3) then sum_amt else 0.)

let () =
  json result;
  assert ((result = 4.))
