; Generated by Mochi compiler v0.10.25 on 2025-07-15T04:45:56Z
(ns main)

(defn _equal [a b]
  (cond
    (and (sequential? a) (sequential? b))
      (and (= (count a) (count b)) (every? true? (map _equal a b)))
    (and (map? a) (map? b))
      (and (= (count a) (count b))
           (every? (fn [k] (_equal (get a k) (get b k))) (keys a)))
    (and (number? a) (number? b))
      (= (double a) (double b))
    :else
      (= a b)))

(defn _escape_json [s]
  (-> s
      (clojure.string/replace "\\" "\\\\")
      (clojure.string/replace "\"" "\\\"")))

(defn _to_json [v]
  (cond
    (nil? v) "null"
    (string? v) (str "\"" (_escape_json v) "\"")
    (number? v) (str v)
    (boolean? v) (str v)
    (sequential? v) (str "[" (clojure.string/join "," (map _to_json v)) "]")
    (map? v) (str "{" (clojure.string/join "," (map (fn [[k val]]
                                        (str "\"" (_escape_json (name k)) "\":" (_to_json val))) v)) "}")
    :else (str "\"" (_escape_json (str v)) "\"")))

(defn _json [v]
  (println (_to_json v)))

(declare catalog_sales item date_dim filtered avg_discount result)

(defn test_TPCDS_Q32_simplified []
  (assert (_equal result 20.0) "expect failed")
)

(defn -main []
  (def catalog_sales [{:cs_item_sk 1 :cs_sold_date_sk 1 :cs_ext_discount_amt 5.0} {:cs_item_sk 1 :cs_sold_date_sk 2 :cs_ext_discount_amt 10.0} {:cs_item_sk 1 :cs_sold_date_sk 3 :cs_ext_discount_amt 20.0}]) ;; list of
  (def item [{:i_item_sk 1 :i_manufact_id 1}]) ;; list of
  (def date_dim [{:d_date_sk 1 :d_year 2000} {:d_date_sk 2 :d_year 2000} {:d_date_sk 3 :d_year 2000}]) ;; list of
  (def filtered (vec (->> (for [cs catalog_sales i item :when (_equal (:cs_item_sk cs) (:i_item_sk i)) d date_dim :when (_equal (:cs_sold_date_sk cs) (:d_date_sk d)) :when (and (_equal (:i_manufact_id i) 1) (_equal (:d_year d) 2000))] (:cs_ext_discount_amt cs))))) ;; list of float
  (def avg_discount (let [xs filtered] (if (empty? xs) 0 (/ (reduce + xs) (double (count xs)))))) ;; float
  (def result (reduce + 0 (vec (->> (for [x filtered :when (> x (* avg_discount 1.3))] x))))) ;; float
  (_json result)
  (test_TPCDS_Q32_simplified)
)

(-main)
