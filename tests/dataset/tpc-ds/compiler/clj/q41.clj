; Generated by Mochi compiler v0.10.25 on 2025-07-15T04:46:11Z
(ns main)

(defn _equal [a b]
  (cond
    (and (sequential? a) (sequential? b))
      (and (= (count a) (count b)) (every? true? (map _equal a b)))
    (and (map? a) (map? b))
      (and (= (count a) (count b))
           (every? (fn [k] (_equal (get a k) (get b k))) (keys a)))
    (and (number? a) (number? b))
      (= (double a) (double b))
    :else
      (= a b)))

(defn _escape_json [s]
  (-> s
      (clojure.string/replace "\\" "\\\\")
      (clojure.string/replace "\"" "\\\"")))

(defn _to_json [v]
  (cond
    (nil? v) "null"
    (string? v) (str "\"" (_escape_json v) "\"")
    (number? v) (str v)
    (boolean? v) (str v)
    (sequential? v) (str "[" (clojure.string/join "," (map _to_json v)) "]")
    (map? v) (str "{" (clojure.string/join "," (map (fn [[k val]]
                                        (str "\"" (_escape_json (name k)) "\":" (_to_json val))) v)) "}")
    :else (str "\"" (_escape_json (str v)) "\"")))

(defn _json [v]
  (println (_to_json v)))

(defn _sort_key [k]
  (cond
    (map? k) (pr-str (into (sorted-map) k))
    (sequential? k) (vec k)
    :else k))
(declare item lower result)

(defn test_TPCDS_Q41_simplified []
  (assert (_equal result ["Blue Shirt" "Red Dress"]) "expect failed")
)

(defn -main []
  (def item [{:product_name "Blue Shirt" :manufact_id 100 :manufact 1 :category "Women" :color "blue" :units "pack" :size "M"} {:product_name "Red Dress" :manufact_id 120 :manufact 1 :category "Women" :color "red" :units "pack" :size "M"} {:product_name "Pants" :manufact_id 200 :manufact 2 :category "Men" :color "black" :units "pair" :size "L"}]) ;; list of
  (def lower 100) ;; int
  (def result (vec (->> (for [i1 item :when (and (and (>= (:manufact_id i1) lower) (<= (:manufact_id i1) (+ lower 40))) (> (count (vec (->> (for [i2 item :when (and (_equal (:manufact i2) (:manufact i1)) (_equal (:category i2) (:category i1)))] i2)))) 1))] (:product_name i1)) (sort-by (fn [i1] (_sort_key (:product_name i1))))))) ;; list of string
  (_json result)
  (test_TPCDS_Q41_simplified)
)

(-main)
