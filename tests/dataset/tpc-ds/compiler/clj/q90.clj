; Generated by Mochi compiler v0.10.25 on 2025-07-15T04:47:25Z
(ns main)

(defn _equal [a b]
  (cond
    (and (sequential? a) (sequential? b))
      (and (= (count a) (count b)) (every? true? (map _equal a b)))
    (and (map? a) (map? b))
      (and (= (count a) (count b))
           (every? (fn [k] (_equal (get a k) (get b k))) (keys a)))
    (and (number? a) (number? b))
      (= (double a) (double b))
    :else
      (= a b)))

(defn _escape_json [s]
  (-> s
      (clojure.string/replace "\\" "\\\\")
      (clojure.string/replace "\"" "\\\"")))

(defn _to_json [v]
  (cond
    (nil? v) "null"
    (string? v) (str "\"" (_escape_json v) "\"")
    (number? v) (str v)
    (boolean? v) (str v)
    (sequential? v) (str "[" (clojure.string/join "," (map _to_json v)) "]")
    (map? v) (str "{" (clojure.string/join "," (map (fn [[k val]]
                                        (str "\"" (_escape_json (name k)) "\":" (_to_json val))) v)) "}")
    :else (str "\"" (_escape_json (str v)) "\"")))

(defn _json [v]
  (println (_to_json v)))

(declare web_sales household_demographics time_dim web_page amc pmc result)

(defn WebSale [ws_sold_time_sk ws_ship_hdemo_sk ws_web_page_sk]
  {:__name "WebSale" :ws_sold_time_sk ws_sold_time_sk :ws_ship_hdemo_sk ws_ship_hdemo_sk :ws_web_page_sk ws_web_page_sk}
)


(defn test_TPCDS_Q90_ratio []
  (assert (_equal result 2.0) "expect failed")
)

(defn -main []
  (def web_sales [{:ws_sold_time_sk 1 :ws_ship_hdemo_sk 1 :ws_web_page_sk 10} {:ws_sold_time_sk 1 :ws_ship_hdemo_sk 1 :ws_web_page_sk 10} {:ws_sold_time_sk 2 :ws_ship_hdemo_sk 1 :ws_web_page_sk 10}]) ;; list of
  (def household_demographics [{:hd_demo_sk 1 :hd_dep_count 2}]) ;; list of
  (def time_dim [{:t_time_sk 1 :t_hour 7} {:t_time_sk 2 :t_hour 14}]) ;; list of
  (def web_page [{:wp_web_page_sk 10 :wp_char_count 5100}]) ;; list of
  (def amc (count (vec (->> (for [ws web_sales hd household_demographics :when (_equal (:ws_ship_hdemo_sk ws) (:hd_demo_sk hd)) t time_dim :when (_equal (:ws_sold_time_sk ws) (:t_time_sk t)) wp web_page :when (_equal (:ws_web_page_sk ws) (:wp_web_page_sk wp)) :when (and (and (and (and (>= (:t_hour t) 7) (<= (:t_hour t) 8)) (_equal (:hd_dep_count hd) 2)) (>= (:wp_char_count wp) 5000)) (<= (:wp_char_count wp) 5200))] ws))))) ;; int
  (def pmc (count (vec (->> (for [ws web_sales hd household_demographics :when (_equal (:ws_ship_hdemo_sk ws) (:hd_demo_sk hd)) t time_dim :when (_equal (:ws_sold_time_sk ws) (:t_time_sk t)) wp web_page :when (_equal (:ws_web_page_sk ws) (:wp_web_page_sk wp)) :when (and (and (and (and (>= (:t_hour t) 14) (<= (:t_hour t) 15)) (_equal (:hd_dep_count hd) 2)) (>= (:wp_char_count wp) 5000)) (<= (:wp_char_count wp) 5200))] ws))))) ;; int
  (def result (/ (double amc) (double pmc))) ;; float
  (_json result)
  (test_TPCDS_Q90_ratio)
)

(-main)
