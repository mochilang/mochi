run: exit status 127
/tmp/q6.erl:12:89: variable 'It' unsafe in 'case' (line 12, column 1088)
%   12|     Result = lists:sublist([V || {_, V} <- lists:keysort(1, [{[(case Val0 of #{items := It} -> length(It); _ -> length(Val0) end), Key0], #{state => Key0, cnt => (case Val0 of #{items := It} -> length(It); _ -> length(Val0) end)}} || {Key0, Val0} <- maps:to_list(lists:foldl(fun({Key0, Val0}, Acc0) -> L = maps:get(Key0, Acc0, []), maps:put(Key0, [Val0 | L], Acc0) end, #{}, [{maps:get(ca_state, A), #{a => A, c => C, s => S, d => D, i => I}} || A <- Customer_address, C <- Customer, S <- Store_sales, D <- Date_dim, I <- Item, (maps:get(ca_address_sk, A) == maps:get(c_current_addr_sk, C)), (maps:get(c_customer_sk, C) == maps:get(ss_customer_sk, S)), (maps:get(ss_sold_date_sk, S) == maps:get(d_date_sk, D)), (maps:get(ss_item_sk, S) == maps:get(i_item_sk, I)), ((maps:get(d_month_seq, D) == Target_month_seq) andalso (maps:get(i_current_price, I) > (1.2 * (lists:sum([maps:get(i_current_price, J) || J <- Item, (maps:get(i_category, J) == maps:get(i_category, I))]) / length([maps:get(i_current_price, J) || J <- Item, (maps:get(i_category, J) == maps:get(i_category, I))])))))])), ((case Val0 of #{items := It} -> length(It); _ -> length(Val0) end) >= 10)])], 100),
%     |                                                                                         ^

/tmp/q6.erl:12:188: variable 'It' unsafe in 'case' (line 12, column 1088)
%   12|     Result = lists:sublist([V || {_, V} <- lists:keysort(1, [{[(case Val0 of #{items := It} -> length(It); _ -> length(Val0) end), Key0], #{state => Key0, cnt => (case Val0 of #{items := It} -> length(It); _ -> length(Val0) end)}} || {Key0, Val0} <- maps:to_list(lists:foldl(fun({Key0, Val0}, Acc0) -> L = maps:get(Key0, Acc0, []), maps:put(Key0, [Val0 | L], Acc0) end, #{}, [{maps:get(ca_state, A), #{a => A, c => C, s => S, d => D, i => I}} || A <- Customer_address, C <- Customer, S <- Store_sales, D <- Date_dim, I <- Item, (maps:get(ca_address_sk, A) == maps:get(c_current_addr_sk, C)), (maps:get(c_customer_sk, C) == maps:get(ss_customer_sk, S)), (maps:get(ss_sold_date_sk, S) == maps:get(d_date_sk, D)), (maps:get(ss_item_sk, S) == maps:get(i_item_sk, I)), ((maps:get(d_month_seq, D) == Target_month_seq) andalso (maps:get(i_current_price, I) > (1.2 * (lists:sum([maps:get(i_current_price, J) || J <- Item, (maps:get(i_category, J) == maps:get(i_category, I))]) / length([maps:get(i_current_price, J) || J <- Item, (maps:get(i_category, J) == maps:get(i_category, I))])))))])), ((case Val0 of #{items := It} -> length(It); _ -> length(Val0) end) >= 10)])], 100),
%     |                                                                                                                                                                                            ^

escript: There were compilation errors.
