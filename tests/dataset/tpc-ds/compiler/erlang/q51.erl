#!/usr/bin/env escript
% Generated by Mochi compiler v0.10.26 on 2025-07-15T06:31:35Z
% q51.erl - generated from q51.mochi

cumulative(Xs) ->
    Out0 = [],
    Acc0 = 0,
    {Acc1, Out1} = lists:foldl(fun(X, {Acc, Out}) -> Acc1 = (Acc + maps:get(price, X)), Out1 = Out ++ [#{date => maps:get(date, X), cum => Acc}], {Acc1, Out1} end, {Acc0, Out0}, Xs),
    Out1.

main(_) ->
    Web_sales = [#{item => 1, date => 1, price => 30}, #{item => 1, date => 2, price => 20}],
    Store_sales = [#{item => 1, date => 1, price => 5}, #{item => 1, date => 2, price => 19}],
    Web_cum = cumulative(([V || {_, V} <- lists:keysort(1, [{maps:get(date, W), #{date => maps:get(date, W), price => maps:get(price, W)}} || W <- Web_sales])])),
    Store_cum = cumulative(([V || {_, V} <- lists:keysort(1, [{maps:get(date, S), #{date => maps:get(date, S), price => maps:get(price, S)}} || S <- Store_sales])])),
    Joined = [#{item_sk => 1, d_date => maps:get(date, W)} || W <- Web_cum, S <- Store_cum, (maps:get(date, W) == maps:get(date, S)), (maps:get(cum, W) > maps:get(cum, S))],
    Result = Joined,
    mochi_json(Result),
    (case (Result == [#{item_sk => 1, d_date => 1}, #{item_sk => 1, d_date => 2}]) of true -> ok; _ -> erlang:error(test_failed) end).

mochi_escape_json([]) -> [];
mochi_escape_json([H|T]) ->
    E = case H of
        $\ -> "\\";
        $" -> "\"";
        _ -> [H]
    end,
    E ++ mochi_escape_json(T).

mochi_to_json(true) -> "true";
mochi_to_json(false) -> "false";
mochi_to_json(V) when is_integer(V); is_float(V) -> lists:flatten(io_lib:format("~p", [V]));
mochi_to_json(V) when is_binary(V) -> "\"" ++ mochi_escape_json(binary_to_list(V)) ++ "\"";
mochi_to_json(V) when is_list(V), (V =:= [] orelse is_integer(hd(V))) -> "\"" ++ mochi_escape_json(V) ++ "\"";
mochi_to_json(V) when is_list(V) -> "[" ++ lists:join(",", [mochi_to_json(X) || X <- V]) ++ "]";
mochi_to_json(V) when is_map(V) -> "{" ++ lists:join(",", ["\"" ++ atom_to_list(K) ++ "\":" ++ mochi_to_json(Val) || {K,Val} <- maps:to_list(V)]) ++ "}".

mochi_json(V) -> io:format("~s
", [mochi_to_json(V)]).
