run: exit status 127
/tmp/q8.erl:11:5: function reverse/1 undefined
%   11|     reverse(substr("zip", 0, 2)),
%     |     ^

/tmp/q8.erl:11:13: function substr/3 undefined
%   11|     reverse(substr("zip", 0, 2)),
%     |             ^

/tmp/q8.erl:13:662: function substr/3 undefined
%   13|     Result = [V || {_, V} <- lists:keysort(1, [{Key0, #{s_store_name => Key0, net_profit => lists:sum([maps:get(ss_net_profit, maps:get(ss, X)) || X <- Val0])}} || {Key0, Val0} <- maps:to_list(lists:foldl(fun({Key0, Val0}, Acc0) -> L = maps:get(Key0, Acc0, []), maps:put(Key0, [Val0 | L], Acc0) end, #{}, [{maps:get(s_store_name, S), #{ss => Ss, d => D, s => S, ca => Ca, c => C}} || Ss <- Store_sales, D <- Date_dim, S <- Store, Ca <- Customer_address, C <- Customer, (((maps:get(ss_sold_date_sk, Ss) == maps:get(d_date_sk, D)) andalso (maps:get(d_qoy, D) == 1)) andalso (maps:get(d_year, D) == 1998)), (maps:get(ss_store_sk, Ss) == maps:get(s_store_sk, S)), (substr(maps:get(s_zip, S), 0, 2) == substr(maps:get(ca_zip, Ca), 0, 2)), ((maps:get(ca_address_sk, Ca) == maps:get(c_current_addr_sk, C)) andalso (maps:get(c_preferred_cust_flag, C) == "Y")), lists:member(substr(maps:get(ca_zip, Ca), 0, 5), Zip_list)]))])],
%     |

/tmp/q8.erl:13:698: function substr/3 undefined
%   13|     Result = [V || {_, V} <- lists:keysort(1, [{Key0, #{s_store_name => Key0, net_profit => lists:sum([maps:get(ss_net_profit, maps:get(ss, X)) || X <- Val0])}} || {Key0, Val0} <- maps:to_list(lists:foldl(fun({Key0, Val0}, Acc0) -> L = maps:get(Key0, Acc0, []), maps:put(Key0, [Val0 | L], Acc0) end, #{}, [{maps:get(s_store_name, S), #{ss => Ss, d => D, s => S, ca => Ca, c => C}} || Ss <- Store_sales, D <- Date_dim, S <- Store, Ca <- Customer_address, C <- Customer, (((maps:get(ss_sold_date_sk, Ss) == maps:get(d_date_sk, D)) andalso (maps:get(d_qoy, D) == 1)) andalso (maps:get(d_year, D) == 1998)), (maps:get(ss_store_sk, Ss) == maps:get(s_store_sk, S)), (substr(maps:get(s_zip, S), 0, 2) == substr(maps:get(ca_zip, Ca), 0, 2)), ((maps:get(ca_address_sk, Ca) == maps:get(c_current_addr_sk, C)) andalso (maps:get(c_preferred_cust_flag, C) == "Y")), lists:member(substr(maps:get(ca_zip, Ca), 0, 5), Zip_list)]))])],
%     |

/tmp/q8.erl:13:867: function substr/3 undefined
%   13|     Result = [V || {_, V} <- lists:keysort(1, [{Key0, #{s_store_name => Key0, net_profit => lists:sum([maps:get(ss_net_profit, maps:get(ss, X)) || X <- Val0])}} || {Key0, Val0} <- maps:to_list(lists:foldl(fun({Key0, Val0}, Acc0) -> L = maps:get(Key0, Acc0, []), maps:put(Key0, [Val0 | L], Acc0) end, #{}, [{maps:get(s_store_name, S), #{ss => Ss, d => D, s => S, ca => Ca, c => C}} || Ss <- Store_sales, D <- Date_dim, S <- Store, Ca <- Customer_address, C <- Customer, (((maps:get(ss_sold_date_sk, Ss) == maps:get(d_date_sk, D)) andalso (maps:get(d_qoy, D) == 1)) andalso (maps:get(d_year, D) == 1998)), (maps:get(ss_store_sk, Ss) == maps:get(s_store_sk, S)), (substr(maps:get(s_zip, S), 0, 2) == substr(maps:get(ca_zip, Ca), 0, 2)), ((maps:get(ca_address_sk, Ca) == maps:get(c_current_addr_sk, C)) andalso (maps:get(c_preferred_cust_flag, C) == "Y")), lists:member(substr(maps:get(ca_zip, Ca), 0, 5), Zip_list)]))])],
%     |

escript: There were compilation errors.
