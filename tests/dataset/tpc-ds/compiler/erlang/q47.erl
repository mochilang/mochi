#!/usr/bin/env escript
% Generated by Mochi compiler v0.10.25 on 2025-07-15T04:58:34Z
% q47.erl - generated from q47.mochi

abs(X) ->
    (case (X >= 0) of true -> X; _ -> -X end).

main(_) ->
    V2 = [#{d_year => 2020, item => "A", avg_monthly_sales => 100, sum_sales => 120}, #{d_year => 2020, item => "B", avg_monthly_sales => 80, sum_sales => 70}, #{d_year => 2019, item => "C", avg_monthly_sales => 50, sum_sales => 60}],
    Result = [V || {_, V} <- lists:keysort(1, [{[(maps:get(sum_sales, V) - maps:get(avg_monthly_sales, V)), maps:get(item, V)], #{d_year => maps:get(d_year, V), item => maps:get(item, V), avg_monthly_sales => maps:get(avg_monthly_sales, V), sum_sales => maps:get(sum_sales, V)}} || V <- V2, ((((maps:get(d_year, V) >= (2020 - 1)) andalso (maps:get(avg_monthly_sales, V) > 0)) andalso (maps:get(sum_sales, V) > maps:get(avg_monthly_sales, V))) andalso ((abs((maps:get(sum_sales, V) - maps:get(avg_monthly_sales, V))) / maps:get(avg_monthly_sales, V)) > 0.1))])],
    mochi_json(Result),
    (case (Result == [#{d_year => 2019, item => "C", avg_monthly_sales => 50, sum_sales => 60}, #{d_year => 2020, item => "A", avg_monthly_sales => 100, sum_sales => 120}]) of true -> ok; _ -> erlang:error(test_failed) end).

mochi_escape_json([]) -> [];
mochi_escape_json([H|T]) ->
    E = case H of
        $\ -> "\\";
        $" -> "\"";
        _ -> [H]
    end,
    E ++ mochi_escape_json(T).

mochi_to_json(true) -> "true";
mochi_to_json(false) -> "false";
mochi_to_json(V) when is_integer(V); is_float(V) -> lists:flatten(io_lib:format("~p", [V]));
mochi_to_json(V) when is_binary(V) -> "\"" ++ mochi_escape_json(binary_to_list(V)) ++ "\"";
mochi_to_json(V) when is_list(V), (V =:= [] orelse is_integer(hd(V))) -> "\"" ++ mochi_escape_json(V) ++ "\"";
mochi_to_json(V) when is_list(V) -> "[" ++ lists:join(",", [mochi_to_json(X) || X <- V]) ++ "]";
mochi_to_json(V) when is_map(V) -> "{" ++ lists:join(",", ["\"" ++ atom_to_list(K) ++ "\":" ++ mochi_to_json(Val) || {K,Val} <- maps:to_list(V)]) ++ "}".

mochi_json(V) -> io:format("~s
", [mochi_to_json(V)]).
