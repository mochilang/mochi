# Generated by Mochi compiler v0.10.25 on 2025-07-15T04:48:30Z
require 'ostruct'

def _json(v)
  require 'json'
  obj = v
  if v.is_a?(Array)
    obj = v.map { |it| it.respond_to?(:to_h) ? it.to_h : it }
  elsif v.respond_to?(:to_h)
    obj = v.to_h
  end
  puts(JSON.generate(obj))
end

def distinct(xs)
	out = []
	xs.each do |x|
		if (!contains.call(out, x))
			out = (out + [x])
		end
	end
	return out
end

$customer = [OpenStruct.new(c_customer_sk: 1, c_last_name: "Smith", c_first_name: "John"), OpenStruct.new(c_customer_sk: 2, c_last_name: "Jones", c_first_name: "Alice")]
$store_sales = [OpenStruct.new(ss_customer_sk: 1, d_month_seq: 1200), OpenStruct.new(ss_customer_sk: 2, d_month_seq: 1205)]
$catalog_sales = [OpenStruct.new(cs_bill_customer_sk: 1, d_month_seq: 1203)]
$web_sales = [OpenStruct.new(ws_bill_customer_sk: 1, d_month_seq: 1206)]
$store_ids = distinct(((($store_sales)).select { |s| ((s.d_month_seq >= 1200) && (s.d_month_seq <= 1211)) }).map { |s| s.ss_customer_sk })
$catalog_ids = distinct(((($catalog_sales)).select { |c| ((c.d_month_seq >= 1200) && (c.d_month_seq <= 1211)) }).map { |c| c.cs_bill_customer_sk })
$web_ids = distinct(((($web_sales)).select { |w| ((w.d_month_seq >= 1200) && (w.d_month_seq <= 1211)) }).map { |w| w.ws_bill_customer_sk })
$hot = (($store_ids & $catalog_ids) & $web_ids)
$result = ($hot).length
_json($result)
raise "expect failed" unless ($result == 1)
