# Generated by Mochi compiler v0.10.25 on 2025-07-15T04:48:31Z
require 'ostruct'

def _json(v)
  require 'json'
  obj = v
  if v.is_a?(Array)
    obj = v.map { |it| it.respond_to?(:to_h) ? it.to_h : it }
  elsif v.respond_to?(:to_h)
    obj = v.to_h
  end
  puts(JSON.generate(obj))
end

def abs(x)
	if (x >= 0.0)
		return x
	else
		return (-x)
	end
end

$v2 = [OpenStruct.new(d_year: 2020, item: "A", avg_monthly_sales: 100.0, sum_sales: 120.0), OpenStruct.new(d_year: 2020, item: "B", avg_monthly_sales: 80.0, sum_sales: 70.0), OpenStruct.new(d_year: 2019, item: "C", avg_monthly_sales: 50.0, sum_sales: 60.0)]
$year = 2020
$orderby = "item"
$result = (((($v2)).select { |v| ((((v.d_year >= ($year - 1)) && (v.avg_monthly_sales > 0)) && (v.sum_sales > v.avg_monthly_sales)) && ((abs((v.sum_sales - v.avg_monthly_sales)) / v.avg_monthly_sales) > 0.1)) }).sort_by { |v| [(v.sum_sales - v.avg_monthly_sales), v.item] }).map { |v| OpenStruct.new(d_year: v.d_year, item: v.item, avg_monthly_sales: v.avg_monthly_sales, sum_sales: v.sum_sales) }
_json($result)
raise "expect failed" unless ($result == [OpenStruct.new(d_year: 2019, item: "C", avg_monthly_sales: 50.0, sum_sales: 60.0), OpenStruct.new(d_year: 2020, item: "A", avg_monthly_sales: 100.0, sum_sales: 120.0)])
