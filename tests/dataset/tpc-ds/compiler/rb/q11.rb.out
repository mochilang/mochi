# Generated by Mochi compiler v0.10.25 on 2025-07-15T04:48:26Z
require 'ostruct'

def _json(v)
  require 'json'
  obj = v
  if v.is_a?(Array)
    obj = v.map { |it| it.respond_to?(:to_h) ? it.to_h : it }
  elsif v.respond_to?(:to_h)
    obj = v.to_h
  end
  puts(JSON.generate(obj))
end
def _sum(v)
  list = nil
  if defined?(MGroup) && v.is_a?(MGroup)
    list = v.Items
  elsif v.is_a?(Array)
    list = v
  elsif v.respond_to?(:to_a)
    list = v.to_a
  end
  return 0 if !list || list.empty?
  s = 0.0
  list.each { |n| s += n.to_f }
  s
end

Customer = Struct.new(:c_customer_sk, :c_customer_id, :c_first_name, :c_last_name, keyword_init: true)

StoreSale = Struct.new(:ss_customer_sk, :ss_sold_date_sk, :ss_ext_list_price, keyword_init: true)

WebSale = Struct.new(:ws_bill_customer_sk, :ws_sold_date_sk, :ws_ext_list_price, keyword_init: true)

$customer = [OpenStruct.new(c_customer_sk: 1, c_customer_id: "C1", c_first_name: "John", c_last_name: "Doe")]
$store_sales = [OpenStruct.new(ss_customer_sk: 1, ss_sold_date_sk: 1998, ss_ext_list_price: 60.0), OpenStruct.new(ss_customer_sk: 1, ss_sold_date_sk: 1999, ss_ext_list_price: 90.0)]
$web_sales = [OpenStruct.new(ws_bill_customer_sk: 1, ws_sold_date_sk: 1998, ws_ext_list_price: 50.0), OpenStruct.new(ws_bill_customer_sk: 1, ws_sold_date_sk: 1999, ws_ext_list_price: 150.0)]
$ss98 = _sum(((($store_sales)).select { |ss| (ss.ss_sold_date_sk == 1998) }).map { |ss| ss.ss_ext_list_price })
$ss99 = _sum(((($store_sales)).select { |ss| (ss.ss_sold_date_sk == 1999) }).map { |ss| ss.ss_ext_list_price })
$ws98 = _sum(((($web_sales)).select { |ws| (ws.ws_sold_date_sk == 1998) }).map { |ws| ws.ws_ext_list_price })
$ws99 = _sum(((($web_sales)).select { |ws| (ws.ws_sold_date_sk == 1999) }).map { |ws| ws.ws_ext_list_price })
$growth_ok = ((($ws98 > 0) && ($ss98 > 0)) && ((($ws99 / $ws98)) > (($ss99 / $ss98))))
$result = ($growth_ok ? [OpenStruct.new(customer_id: "C1", customer_first_name: "John", customer_last_name: "Doe")] : [])
_json($result)
raise "expect failed" unless ($result == [OpenStruct.new(customer_id: "C1", customer_first_name: "John", customer_last_name: "Doe")])
