# Generated by Mochi compiler v0.10.25 on 2025-07-15T04:48:37Z
require 'ostruct'

def _avg(v)
  list = nil
  if defined?(MGroup) && v.is_a?(MGroup)
    list = v.Items
  elsif v.is_a?(Array)
    list = v
  elsif v.respond_to?(:to_a)
    list = v.to_a
  end
  return 0 if !list || list.empty?
  list.sum(0.0) / list.length
end
def _json(v)
  require 'json'
  obj = v
  if v.is_a?(Array)
    obj = v.map { |it| it.respond_to?(:to_h) ? it.to_h : it }
  elsif v.respond_to?(:to_h)
    obj = v.to_h
  end
  puts(JSON.generate(obj))
end
def _sum(v)
  list = nil
  if defined?(MGroup) && v.is_a?(MGroup)
    list = v.Items
  elsif v.is_a?(Array)
    list = v
  elsif v.respond_to?(:to_a)
    list = v.to_a
  end
  return 0 if !list || list.empty?
  s = 0.0
  list.each { |n| s += n.to_f }
  s
end

WebSale = Struct.new(:ws_item_sk, :ws_sold_date_sk, :ws_ext_discount_amt, keyword_init: true)

$web_sales = [OpenStruct.new(ws_item_sk: 1, ws_sold_date_sk: 1, ws_ext_discount_amt: 1.0), OpenStruct.new(ws_item_sk: 1, ws_sold_date_sk: 1, ws_ext_discount_amt: 1.0), OpenStruct.new(ws_item_sk: 1, ws_sold_date_sk: 1, ws_ext_discount_amt: 2.0)]
$item = [OpenStruct.new(i_item_sk: 1, i_manufact_id: 1)]
$date_dim = [OpenStruct.new(d_date_sk: 1, d_date: "2000-01-02")]
$sum_amt = _sum((($web_sales)).map { |ws| ws.ws_ext_discount_amt })
$avg_amt = _avg((($web_sales)).map { |ws| ws.ws_ext_discount_amt })
$result = (($sum_amt > ($avg_amt * 1.3)) ? $sum_amt : 0.0)
_json($result)
raise "expect failed" unless ($result == 4.0)
