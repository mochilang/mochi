# Generated by Mochi compiler v0.10.26 on 2025-07-15T06:48:06Z
require 'ostruct'

def _json(v)
  require 'json'
  obj = v
  if v.is_a?(Array)
    obj = v.map { |it| it.respond_to?(:to_h) ? it.to_h : it }
  elsif v.respond_to?(:to_h)
    obj = v.to_h
  end
  puts(JSON.generate(obj))
end
def _sum(v)
  list = nil
  if defined?(MGroup) && v.is_a?(MGroup)
    list = v.Items
  elsif v.is_a?(Array)
    list = v
  elsif v.respond_to?(:to_a)
    list = v.to_a
  end
  return 0 if !list || list.empty?
  s = 0.0
  list.each { |n| s += n.to_f }
  s
end

$store_sales = [OpenStruct.new(cust: "A", price: 5.0), OpenStruct.new(cust: "B", price: 30.0), OpenStruct.new(cust: "C", price: 57.0)]
$catalog_sales = [OpenStruct.new(cust: "A")]
$web_sales = []
$store_customers = (($store_sales)).map { |s| s.cust }
$catalog_customers = (($catalog_sales)).map { |s| s.cust }
$web_customers = (($web_sales)).map { |s| s.cust }
$store_only = ((($store_customers)).select { |c| (((((($catalog_customers)).select { |x| (x == c) }).map { |x| x }).length == 0) && ((((($web_customers)).select { |x| (x == c) }).map { |x| x }).length == 0)) }).map { |c| c }
$result = _sum(((($store_sales)).select { |s| ((((($store_only)).select { |x| (x == s.cust) }).map { |x| x }).length > 0) }).map { |s| s.price })
_json($result)
raise "expect failed" unless ($result == 87.0)
