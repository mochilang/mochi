# Generated by Mochi compiler v0.10.26 on 2025-07-15T06:47:55Z
require 'ostruct'

def _json(v)
  require 'json'
  obj = v
  if v.is_a?(Array)
    obj = v.map { |it| it.respond_to?(:to_h) ? it.to_h : it }
  elsif v.respond_to?(:to_h)
    obj = v.to_h
  end
  puts(JSON.generate(obj))
end

def cumulative(xs)
	out = []
	acc = 0.0
	xs.each do |x|
		acc = (acc + x.price)
		out = (out + [OpenStruct.new(date: x.date, cum: acc)])
	end
	return out
end

$web_sales = [OpenStruct.new(item: 1, date: 1, price: 30.0), OpenStruct.new(item: 1, date: 2, price: 20.0)]
$store_sales = [OpenStruct.new(item: 1, date: 1, price: 5.0), OpenStruct.new(item: 1, date: 2, price: 19.0)]
$dms = 1
$web_cum = cumulative((((($web_sales)).sort_by { |w| w.date }).map { |w| OpenStruct.new(date: w.date, price: w.price) }))
$store_cum = cumulative((((($store_sales)).sort_by { |s| s.date }).map { |s| OpenStruct.new(date: s.date, price: s.price) }))
$joined = (begin
	_res = []
	for w in $web_cum
		for s in $store_cum
			if (w.date == s.date)
				if (w.cum > s.cum)
					_res << OpenStruct.new(item_sk: 1, d_date: w.date)
				end
			end
		end
	end
	_res
end)
$result = $joined
_json($result)
raise "expect failed" unless ($result == [OpenStruct.new(item_sk: 1, d_date: 1), OpenStruct.new(item_sk: 1, d_date: 2)])
