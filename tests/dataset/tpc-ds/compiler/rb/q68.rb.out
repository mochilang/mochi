require "ostruct"

def _json(v)
  require "json"
  obj = v
  if v.is_a?(Array)
    obj = v.map { |it| it.respond_to?(:to_h) ? it.to_h : it }
  elsif v.respond_to?(:to_h)
    obj = v.to_h
  end
  puts(JSON.generate(obj))
end

def _sum(v)
  list = nil
  if v.is_a?(MGroup)
    list = v.Items
  elsif v.is_a?(Array)
    list = v
  elsif v.respond_to?(:to_a)
    list = v.to_a
  end
  return 0 if !list || list.empty?
  s = 0.0
  list.each { |n| s += n.to_f }
  s
end

catalog_sales = [OpenStruct.new(item: 1, profit: 30), OpenStruct.new(item: 2, profit: 38)]
store_sales = [OpenStruct.new(item: 1, profit: 30)]
result = ((_sum(catalog_sales.map { |c| c.profit }) - _sum(store_sales.map { |s| s.profit })) + 30)
_json(result)
raise "expect failed" unless result == 68
