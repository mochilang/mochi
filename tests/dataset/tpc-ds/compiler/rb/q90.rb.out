require "ostruct"

def _json(v)
  require "json"
  obj = v
  if v.is_a?(Array)
    obj = v.map { |it| it.respond_to?(:to_h) ? it.to_h : it }
  elsif v.respond_to?(:to_h)
    obj = v.to_h
  end
  puts(JSON.generate(obj))
end

WebSale = Struct.new(:ws_sold_time_sk, :ws_ship_hdemo_sk, :ws_web_page_sk, keyword_init: true)

web_sales = [OpenStruct.new(ws_sold_time_sk: 1, ws_ship_hdemo_sk: 1, ws_web_page_sk: 10), OpenStruct.new(ws_sold_time_sk: 1, ws_ship_hdemo_sk: 1, ws_web_page_sk: 10), OpenStruct.new(ws_sold_time_sk: 2, ws_ship_hdemo_sk: 1, ws_web_page_sk: 10)]
household_demographics = [OpenStruct.new(hd_demo_sk: 1, hd_dep_count: 2)]
time_dim = [OpenStruct.new(t_time_sk: 1, t_hour: 7), OpenStruct.new(t_time_sk: 2, t_hour: 14)]
web_page = [OpenStruct.new(wp_web_page_sk: 10, wp_char_count: 5100)]
amc = ((begin
  _res = []
  for ws in web_sales
    for hd in household_demographics
      if ws.ws_ship_hdemo_sk == hd.hd_demo_sk
        for t in time_dim
          if ws.ws_sold_time_sk == t.t_time_sk
            for wp in web_page
              if ws.ws_web_page_sk == wp.wp_web_page_sk
                if (t.t_hour >= 7) && (t.t_hour <= 8) && (hd.hd_dep_count == 2) && (wp.wp_char_count >= 5000) && (wp.wp_char_count <= 5200)
                  _res << ws
                end
              end
            end
          end
        end
      end
    end
  end
  _res
end)).length
pmc = ((begin
  _res = []
  for ws in web_sales
    for hd in household_demographics
      if ws.ws_ship_hdemo_sk == hd.hd_demo_sk
        for t in time_dim
          if ws.ws_sold_time_sk == t.t_time_sk
            for wp in web_page
              if ws.ws_web_page_sk == wp.wp_web_page_sk
                if (t.t_hour >= 14) && (t.t_hour <= 15) && (hd.hd_dep_count == 2) && (wp.wp_char_count >= 5000) && (wp.wp_char_count <= 5200)
                  _res << ws
                end
              end
            end
          end
        end
      end
    end
  end
  _res
end)).length
result = (amc / pmc)
_json(result)
raise "expect failed" unless result == 2.0
