// Generated by Mochi C# compiler
using System;
using System.Collections.Generic;
using System.IO;
using System.Net.Http;
using System.Text;
using System.Web;

public class Program {
    static void test_TPCDS_Q62_simplified() {
        expect((result == 62L));
    }
    
    public static void Main() {
        Dictionary<string, long>[] web_sales = new Dictionary<string, long>[] { new Dictionary<string, long> { { "days", 10L } }, new Dictionary<string, long> { { "days", 40L } }, new Dictionary<string, long> { { "days", 70L } }, new Dictionary<string, long> { { "days", 100L } }, new Dictionary<string, long> { { "days", 130L } } };
        long result = ((_count(web_sales) * 12L) + 2L);
        Console.WriteLine(JsonSerializer.Serialize(result));
        test_TPCDS_Q62_simplified();
    }
    static void expect(bool cond) {
        if (!cond) throw new Exception("expect failed");
    }
    
    static int _count(dynamic v) {
        if (v is string) {
            return ((string)v).Length;
        }
        if (v is System.Collections.ICollection c) {
            return c.Count;
        }
        throw new Exception("count() expects list or string");
    }
    
}
