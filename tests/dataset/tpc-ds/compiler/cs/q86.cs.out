// Generated by Mochi C# compiler
using System;
using System.Collections.Generic;
using System.Linq;
using System.IO;
using System.Net.Http;
using System.Text;
using System.Web;

public class Program {
    static void test_TPCDS_Q86_sample() {
        expect((result == 86.000000));
    }
    
    public static void Main() {
        var web_sales = new Dictionary<string, dynamic>[] { new Dictionary<string, dynamic> { { "cat", "A" }, { "class", "B" }, { "net", 40.000000 } }, new Dictionary<string, dynamic> { { "cat", "A" }, { "class", "B" }, { "net", 46.000000 } }, new Dictionary<string, dynamic> { { "cat", "A" }, { "class", "C" }, { "net", 10.000000 } }, new Dictionary<string, dynamic> { { "cat", "B" }, { "class", "B" }, { "net", 20.000000 } } };
        double result = _sum(new List<dynamic>(web_sales.Select(ws => ws["net"])));
        Console.WriteLine(JsonSerializer.Serialize(result));
        test_TPCDS_Q86_sample();
    }
    static void expect(bool cond) {
        if (!cond) throw new Exception("expect failed");
    }
    
    static double _sum(dynamic v) {
        if (v == null) return 0.0;
        double _sum = 0;
        foreach (var it in v) {
            _sum += Convert.ToDouble(it);
        }
        return _sum;
    }
    
}
