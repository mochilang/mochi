// Generated by Mochi C# compiler
using System;
using System.Collections.Generic;
using System.Linq;
using System.IO;
using System.Net.Http;
using System.Text;
using System.Web;

public struct StoreSale {
    public long ss_sold_time_sk;
    public long ss_hdemo_sk;
    public long ss_store_sk;
}

public struct HouseholdDemographics {
    public long hd_demo_sk;
    public long hd_dep_count;
}

public struct TimeDim {
    public long t_time_sk;
    public long t_hour;
    public long t_minute;
}

public struct Store {
    public long s_store_sk;
    public string s_store_name;
}

public class Program {
    static void test_TPCDS_Q96_count() {
        expect((result == 3L));
    }
    
    public static void Main() {
        Dictionary<string, long>[] store_sales = new Dictionary<string, long>[] { new Dictionary<string, long> { { "ss_sold_time_sk", 1L }, { "ss_hdemo_sk", 1L }, { "ss_store_sk", 1L } }, new Dictionary<string, long> { { "ss_sold_time_sk", 1L }, { "ss_hdemo_sk", 1L }, { "ss_store_sk", 1L } }, new Dictionary<string, long> { { "ss_sold_time_sk", 2L }, { "ss_hdemo_sk", 1L }, { "ss_store_sk", 1L } } };
        Dictionary<string, long>[] household_demographics = new Dictionary<string, long>[] { new Dictionary<string, long> { { "hd_demo_sk", 1L }, { "hd_dep_count", 3L } } };
        Dictionary<string, long>[] time_dim = new Dictionary<string, long>[] { new Dictionary<string, long> { { "t_time_sk", 1L }, { "t_hour", 20L }, { "t_minute", 35L } }, new Dictionary<string, long> { { "t_time_sk", 2L }, { "t_hour", 20L }, { "t_minute", 45L } } };
        var store = new Dictionary<string, dynamic>[] { new Dictionary<string, dynamic> { { "s_store_sk", 1L }, { "s_store_name", "ese" } } };
        long result = _count(new Func<List<dynamic>>(() => {
    var _res = new List<dynamic>();
    foreach (var ss in store_sales) {
        foreach (var hd in household_demographics) {
            if (!((ss["ss_hdemo_sk"] == hd["hd_demo_sk"]))) continue;
            if (!((hd.hd_dep_count == 3L))) continue;
            foreach (var t in time_dim) {
                if (!((ss["ss_sold_time_sk"] == t["t_time_sk"]))) continue;
                if (!((t.t_hour == 20L))) continue;
                if (!((t.t_minute >= 30L))) continue;
                foreach (var s in store) {
                    if (!((ss["ss_store_sk"] == s["s_store_sk"]))) continue;
                    if (!((s.s_store_name == "ese"))) continue;
                    _res.Add(ss);
                }
            }
        }
    }
    return _res;
})());
        Console.WriteLine(JsonSerializer.Serialize(result));
        test_TPCDS_Q96_count();
    }
    static void expect(bool cond) {
        if (!cond) throw new Exception("expect failed");
    }
    
    static int _count(dynamic v) {
        if (v is string) {
            return ((string)v).Length;
        }
        if (v is System.Collections.ICollection c) {
            return c.Count;
        }
        throw new Exception("count() expects list or string");
    }
    
}
