// Generated by Mochi C# compiler
using System;
using System.Collections.Generic;
using System.Linq;
using System.IO;
using System.Net.Http;
using System.Text;
using System.Web;

public class Program {
    static void test_TPCDS_Q60_simplified() {
        expect((result == 60L));
    }
    
    public static void Main() {
        Dictionary<string, long>[] store_sales = new Dictionary<string, long>[] { new Dictionary<string, long> { { "item", 1L }, { "price", 10L } }, new Dictionary<string, long> { { "item", 1L }, { "price", 20L } } };
        Dictionary<string, long>[] catalog_sales = new Dictionary<string, long>[] { new Dictionary<string, long> { { "item", 1L }, { "price", 15L } } };
        Dictionary<string, long>[] web_sales = new Dictionary<string, long>[] { new Dictionary<string, long> { { "item", 1L }, { "price", 15L } } };
        Dictionary<string, long>[] all_sales = _union_all(_union_all(store_sales, catalog_sales), web_sales);
        double result = _sum(new List<dynamic>(all_sales.Select(s => s["price"])));
        Console.WriteLine(JsonSerializer.Serialize(result));
        test_TPCDS_Q60_simplified();
    }
    static void expect(bool cond) {
        if (!cond) throw new Exception("expect failed");
    }
    
    static List<dynamic> _union_all(IEnumerable<dynamic> a, IEnumerable<dynamic> b) {
        var res = new List<dynamic>();
        if (a != null) foreach (var it in a) res.Add(it);
        if (b != null) foreach (var it in b) res.Add(it);
        return res;
    }
    
    static double _sum(dynamic v) {
        if (v == null) return 0.0;
        double _sum = 0;
        foreach (var it in v) {
            _sum += Convert.ToDouble(it);
        }
        return _sum;
    }
    
}
