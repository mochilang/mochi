// Generated by Mochi C# compiler
using System;
using System.Collections.Generic;
using System.Linq;
using System.IO;
using System.Net.Http;
using System.Text;
using System.Web;

public class Program {
    static void test_TPCDS_Q66_simplified() {
        expect((result == 66L));
    }
    
    public static void Main() {
        Dictionary<string, long>[] web_sales = new Dictionary<string, long>[] { new Dictionary<string, long> { { "net", 30L } } };
        Dictionary<string, long>[] catalog_sales = new Dictionary<string, long>[] { new Dictionary<string, long> { { "net", 36L } } };
        double result = (_sum(new List<dynamic>(web_sales.Select(w => w["net"]))) + _sum(new List<dynamic>(catalog_sales.Select(c => c["net"]))));
        Console.WriteLine(JsonSerializer.Serialize(result));
        test_TPCDS_Q66_simplified();
    }
    static void expect(bool cond) {
        if (!cond) throw new Exception("expect failed");
    }
    
    static double _sum(dynamic v) {
        if (v == null) return 0.0;
        double _sum = 0;
        foreach (var it in v) {
            _sum += Convert.ToDouble(it);
        }
        return _sum;
    }
    
}
