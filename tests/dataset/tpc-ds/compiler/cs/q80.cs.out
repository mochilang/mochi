// Generated by Mochi C# compiler
using System;
using System.Collections.Generic;
using System.Linq;
using System.IO;
using System.Net.Http;
using System.Text;
using System.Web;

public class Program {
    static void test_TPCDS_Q80_sample() {
        expect((total_profit == 80.000000));
    }
    
    public static void Main() {
        Dictionary<string, double>[] store_sales = new Dictionary<string, double>[] { new Dictionary<string, double> { { "price", 20.000000 }, { "ret", 5.000000 } }, new Dictionary<string, double> { { "price", 10.000000 }, { "ret", 2.000000 } }, new Dictionary<string, double> { { "price", 5.000000 }, { "ret", 0.000000 } } };
        Dictionary<string, double>[] catalog_sales = new Dictionary<string, double>[] { new Dictionary<string, double> { { "price", 15.000000 }, { "ret", 3.000000 } }, new Dictionary<string, double> { { "price", 8.000000 }, { "ret", 1.000000 } } };
        Dictionary<string, double>[] web_sales = new Dictionary<string, double>[] { new Dictionary<string, double> { { "price", 25.000000 }, { "ret", 5.000000 } }, new Dictionary<string, double> { { "price", 15.000000 }, { "ret", 8.000000 } }, new Dictionary<string, double> { { "price", 8.000000 }, { "ret", 2.000000 } } };
        double total_profit = ((_sum(new List<dynamic>(store_sales.Select(s => (s["price"] - s["ret"])))) + _sum(new List<dynamic>(catalog_sales.Select(c => (c["price"] - c["ret"]))))) + _sum(new List<dynamic>(web_sales.Select(w => (w["price"] - w["ret"])))));
        Console.WriteLine(JsonSerializer.Serialize(total_profit));
        test_TPCDS_Q80_sample();
    }
    static void expect(bool cond) {
        if (!cond) throw new Exception("expect failed");
    }
    
    static double _sum(dynamic v) {
        if (v == null) return 0.0;
        double _sum = 0;
        foreach (var it in v) {
            _sum += Convert.ToDouble(it);
        }
        return _sum;
    }
    
}
