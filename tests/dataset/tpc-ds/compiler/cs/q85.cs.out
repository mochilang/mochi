// Generated by Mochi C# compiler
using System;
using System.Collections.Generic;
using System.Linq;
using System.IO;
using System.Net.Http;
using System.Text;
using System.Web;

public class Program {
    static void test_TPCDS_Q85_sample() {
        expect((result == 85.000000));
    }
    
    public static void Main() {
        var web_returns = new Dictionary<string, dynamic>[] { new Dictionary<string, dynamic> { { "qty", 60L }, { "cash", 20.000000 }, { "fee", 1.000000 } }, new Dictionary<string, dynamic> { { "qty", 100L }, { "cash", 30.000000 }, { "fee", 2.000000 } }, new Dictionary<string, dynamic> { { "qty", 95L }, { "cash", 25.000000 }, { "fee", 3.000000 } } };
        double result = _avg(new List<dynamic>(web_returns.Select(r => r["qty"])));
        Console.WriteLine(JsonSerializer.Serialize(result));
        test_TPCDS_Q85_sample();
    }
    static void expect(bool cond) {
        if (!cond) throw new Exception("expect failed");
    }
    
    static double _avg(dynamic v) {
        if (v == null) return 0.0;
        int _n = 0;
        double _sum = 0;
        foreach (var it in v) {
            _sum += Convert.ToDouble(it);
            _n++;
        }
        return _n == 0 ? 0.0 : _sum / _n;
    }
    
}
