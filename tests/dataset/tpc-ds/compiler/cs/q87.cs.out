// Generated by Mochi C# compiler
using System;
using System.Collections.Generic;
using System.IO;
using System.Net.Http;
using System.Text;
using System.Web;

public class Program {
    static dynamic[] distinct(dynamic[] xs) {
        var out = new dynamic[] { };
        foreach (var x in xs) {
            if ((!contains(out, x))) {
                out = append(out, x);
            }
        }
        return out;
    }
    
    static dynamic[] concat(dynamic[] a, dynamic[] b) {
        var out = a;
        foreach (var x in b) {
            out = append(out, x);
        }
        return out;
    }
    
    static dynamic[] to_list(dynamic[] xs) {
        return xs;
    }
    
    static void test_TPCDS_Q87_sample() {
        expect((result == 87L));
    }
    
    public static void Main() {
        Dictionary<string, string>[] store_sales = new Dictionary<string, string>[] { new Dictionary<string, string> { { "cust", "A" } }, new Dictionary<string, string> { { "cust", "B" } }, new Dictionary<string, string> { { "cust", "B" } }, new Dictionary<string, string> { { "cust", "C" } } };
        Dictionary<string, string>[] catalog_sales = new Dictionary<string, string>[] { new Dictionary<string, string> { { "cust", "A" } }, new Dictionary<string, string> { { "cust", "C" } }, new Dictionary<string, string> { { "cust", "D" } } };
        Dictionary<string, string>[] web_sales = new Dictionary<string, string>[] { new Dictionary<string, string> { { "cust", "A" } }, new Dictionary<string, string> { { "cust", "D" } } };
        long result = 87L;
        Console.WriteLine(JsonSerializer.Serialize(result));
        test_TPCDS_Q87_sample();
    }
    static void expect(bool cond) {
        if (!cond) throw new Exception("expect failed");
    }
    
}
