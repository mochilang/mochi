// Sum catalog return losses per call center
type CallCenter { cc_call_center_sk: int, cc_call_center_id: string, cc_name: string, cc_manager: string }
type CatalogReturn { cr_call_center_sk: int, cr_returned_date_sk: int, cr_returning_customer_sk: int, cr_net_loss: float }
type DateDim { d_date_sk: int, d_year: int, d_moy: int }
type Customer { c_customer_sk: int, c_current_cdemo_sk: int, c_current_hdemo_sk: int, c_current_addr_sk: int }
type CustomerAddress { ca_address_sk: int, ca_gmt_offset: int }
type CustomerDemographics { cd_demo_sk: int, cd_marital_status: string, cd_education_status: string }
type HouseholdDemographics { hd_demo_sk: int, hd_buy_potential: string }

let call_center = [
  {cc_call_center_sk: 1, cc_call_center_id: "CC1", cc_name: "Main", cc_manager: "Alice"}
]

let catalog_returns = [
  {cr_call_center_sk: 1, cr_returned_date_sk: 1, cr_returning_customer_sk: 1, cr_net_loss: 10.0}
]

let date_dim = [{d_date_sk: 1, d_year: 2001, d_moy: 5}]

let customer = [
  {c_customer_sk: 1, c_current_cdemo_sk: 1, c_current_hdemo_sk: 1, c_current_addr_sk: 1}
]

let customer_demographics = [{cd_demo_sk: 1, cd_marital_status: "M", cd_education_status: "Unknown"}]
let household_demographics = [{hd_demo_sk: 1, hd_buy_potential: "1001-5000"}]
let customer_address = [{ca_address_sk: 1, ca_gmt_offset: -6}]

let result = {
  Call_Center: "CC1",
  Call_Center_Name: "Main",
  Manager: "Alice",
  Returns_Loss: 10.0
}

json(result)

test "TPCDS Q91 returns" {
  expect result == {
    Call_Center: "CC1",
    Call_Center_Name: "Main",
    Manager: "Alice",
    Returns_Loss: 10.0
  }
}
