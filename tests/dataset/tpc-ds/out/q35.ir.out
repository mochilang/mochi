func main (regs=190)
  // let customer = [
  Const        r0, [{"c_current_addr_sk": 1, "c_current_cdemo_sk": 1, "c_customer_sk": 1}, {"c_current_addr_sk": 2, "c_current_cdemo_sk": 2, "c_customer_sk": 2}]
  // let customer_address = [
  Const        r1, [{"ca_address_sk": 1, "ca_state": "CA"}, {"ca_address_sk": 2, "ca_state": "NY"}]
  // let customer_demographics = [
  Const        r2, [{"cd_demo_sk": 1, "cd_dep_college_count": 0, "cd_dep_count": 1, "cd_dep_employed_count": 1, "cd_gender": "M", "cd_marital_status": "S"}, {"cd_demo_sk": 2, "cd_dep_college_count": 1, "cd_dep_count": 2, "cd_dep_employed_count": 1, "cd_gender": "F", "cd_marital_status": "M"}]
  // let store_sales = [
  Const        r3, [{"ss_customer_sk": 1, "ss_sold_date_sk": 1}]
  // let date_dim = [
  Const        r4, [{"d_date_sk": 1, "d_qoy": 1, "d_year": 2000}]
  // from ss in store_sales
  Const        r5, []
  IterPrep     r6, r3
  Len          r7, r6
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  IterPrep     r8, r4
  Len          r9, r8
  Const        r10, "ss_sold_date_sk"
  Const        r11, "d_date_sk"
  // where d.d_year == 2000 && d.d_qoy < 4
  Const        r12, "d_year"
  Const        r13, "d_qoy"
  // select ss.ss_customer_sk
  Const        r14, "ss_customer_sk"
  // from ss in store_sales
  Const        r15, 0
L5:
  LessInt      r16, r15, r7
  JumpIfFalse  r16, L0
  Index        r17, r6, r15
  Move         r18, r17
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  Const        r19, 0
L4:
  LessInt      r20, r19, r9
  JumpIfFalse  r20, L1
  Index        r21, r8, r19
  Move         r22, r21
  Const        r10, "ss_sold_date_sk"
  Index        r23, r18, r10
  Const        r11, "d_date_sk"
  Index        r24, r22, r11
  Equal        r25, r23, r24
  JumpIfFalse  r25, L2
  // where d.d_year == 2000 && d.d_qoy < 4
  Const        r12, "d_year"
  Index        r26, r22, r12
  Const        r13, "d_qoy"
  Index        r27, r22, r13
  Const        r28, 4
  Less         r29, r27, r28
  Const        r30, 2000
  Equal        r31, r26, r30
  Move         r32, r31
  JumpIfFalse  r32, L3
  Move         r32, r29
L3:
  JumpIfFalse  r32, L2
  // select ss.ss_customer_sk
  Const        r14, "ss_customer_sk"
  Index        r33, r18, r14
  // from ss in store_sales
  Append       r34, r5, r33
  Move         r5, r34
L2:
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  Const        r35, 1
  AddInt       r19, r19, r35
  Jump         L4
L1:
  // from ss in store_sales
  Const        r35, 1
  AddInt       r15, r15, r35
  Jump         L5
L0:
  // from c in customer
  Const        r36, []
  // group by {state: ca.ca_state, gender: cd.cd_gender, marital: cd.cd_marital_status, dep: cd.cd_dep_count, emp: cd.cd_dep_employed_count, col: cd.cd_dep_college_count} into g
  Const        r37, "state"
  Const        r38, "ca_state"
  Const        r39, "gender"
  Const        r40, "cd_gender"
  Const        r41, "marital"
  Const        r42, "cd_marital_status"
  Const        r43, "dep"
  Const        r44, "cd_dep_count"
  Const        r45, "emp"
  Const        r46, "cd_dep_employed_count"
  Const        r47, "col"
  Const        r48, "cd_dep_college_count"
  // where c.c_customer_sk in purchased
  Const        r49, "c_customer_sk"
  // ca_state: g.key.state,
  Const        r50, "key"
  // cnt: count(g)
  Const        r51, "cnt"
  // from c in customer
  MakeMap      r52, 0, r0
  Const        r54, []
  Move         r53, r54
  IterPrep     r55, r0
  Len          r56, r55
  Const        r57, 0
  LessInt      r58, r57, r56
  JumpIfFalse  r58, L6
  Index        r59, r55, r57
  Move         r60, r59
  // join ca in customer_address on c.c_current_addr_sk == ca.ca_address_sk
  IterPrep     r61, r1
  Len          r62, r61
  Const        r63, 0
  LessInt      r64, r63, r62
  JumpIfFalse  r64, L7
  Index        r65, r61, r63
  Move         r66, r65
  Const        r67, "c_current_addr_sk"
  Index        r68, r60, r67
  Const        r69, "ca_address_sk"
  Index        r70, r66, r69
  Equal        r71, r68, r70
  JumpIfFalse  r71, L8
  // join cd in customer_demographics on c.c_current_cdemo_sk == cd.cd_demo_sk
  IterPrep     r72, r2
  Len          r73, r72
  Const        r74, 0
  LessInt      r75, r74, r73
  JumpIfFalse  r75, L8
  Index        r76, r72, r74
  Move         r77, r76
  Const        r78, "c_current_cdemo_sk"
  Index        r79, r60, r78
  Const        r80, "cd_demo_sk"
  Index        r81, r77, r80
  Equal        r82, r79, r81
  JumpIfFalse  r82, L9
  // where c.c_customer_sk in purchased
  Const        r49, "c_customer_sk"
  Index        r83, r60, r49
  In           r84, r83, r5
  JumpIfFalse  r84, L9
  // from c in customer
  Const        r85, "c"
  Move         r86, r60
  Const        r87, "ca"
L11:
  Move         r88, r66
  Const        r89, "cd"
  Move         r90, r77
  Move         r91, r85
  Move         r92, r86
  Move         r93, r87
  Move         r94, r88
  Move         r95, r89
  Move         r96, r90
  MakeMap      r97, 3, r91
  // group by {state: ca.ca_state, gender: cd.cd_gender, marital: cd.cd_marital_status, dep: cd.cd_dep_count, emp: cd.cd_dep_employed_count, col: cd.cd_dep_college_count} into g
  Const        r98, "state"
  Const        r38, "ca_state"
  Index        r99, r66, r38
  Const        r100, "gender"
  Const        r40, "cd_gender"
  Index        r101, r77, r40
  Const        r102, "marital"
  Const        r42, "cd_marital_status"
  Index        r103, r77, r42
  Const        r104, "dep"
  Const        r44, "cd_dep_count"
  Index        r105, r77, r44
  Const        r106, "emp"
  Const        r46, "cd_dep_employed_count"
  Index        r107, r77, r46
  Const        r108, "col"
  Const        r48, "cd_dep_college_count"
  Index        r109, r77, r48
  Move         r110, r98
  Move         r111, r99
  Move         r112, r100
  Move         r113, r101
  Move         r114, r102
  Move         r115, r103
  Move         r116, r104
  Move         r117, r105
  Move         r118, r106
  Move         r119, r107
  Move         r120, r108
  Move         r121, r109
  MakeMap      r122, 6, r110
  Str          r123, r122
  In           r124, r123, r52
  JumpIfTrue   r124, L10
  // from c in customer
  Const        r54, []
  Const        r125, "__group__"
  Const        r126, true
  Const        r50, "key"
  // group by {state: ca.ca_state, gender: cd.cd_gender, marital: cd.cd_marital_status, dep: cd.cd_dep_count, emp: cd.cd_dep_employed_count, col: cd.cd_dep_college_count} into g
  Move         r127, r122
  // from c in customer
  Const        r128, "items"
  Move         r129, r54
  Const        r130, "count"
  Const        r131, 0
  Move         r132, r125
  Move         r133, r126
  Move         r134, r50
  Move         r135, r127
  Move         r136, r128
  Move         r137, r129
  Move         r138, r130
  Move         r139, r131
  MakeMap      r140, 4, r132
  SetIndex     r52, r123, r140
  Append       r141, r53, r140
  Move         r53, r141
  Index        r142, r52, r123
  Index        r143, r142, r128
  Append       r144, r143, r97
  SetIndex     r142, r128, r144
  Index        r145, r142, r130
  Const        r35, 1
  AddInt       r146, r145, r35
  SetIndex     r142, r130, r146
  // join cd in customer_demographics on c.c_current_cdemo_sk == cd.cd_demo_sk
  AddInt       r74, r74, r35
  Jump         L11
L10:
  // from c in customer
  Move         r147, r131
  Len          r148, r53
  LessInt      r149, r147, r148
  JumpIfFalse  r149, L12
  Index        r150, r53, r147
  Move         r151, r150
  // ca_state: g.key.state,
  Const        r152, "ca_state"
  Const        r50, "key"
  Index        r153, r151, r50
  Const        r37, "state"
L9:
  Index        r154, r153, r37
  // cd_gender: g.key.gender,
  Const        r155, "cd_gender"
  Index        r156, r151, r50
L8:
  Const        r39, "gender"
  Index        r157, r156, r39
  // cd_marital_status: g.key.marital,
  Const        r158, "cd_marital_status"
L7:
  Index        r159, r151, r50
  Const        r41, "marital"
  Index        r160, r159, r41
L6:
  // cd_dep_count: g.key.dep,
  Const        r161, "cd_dep_count"
  Index        r162, r151, r50
  Const        r43, "dep"
L13:
  Index        r163, r162, r43
  // cd_dep_employed_count: g.key.emp,
  Const        r164, "cd_dep_employed_count"
  Index        r165, r151, r50
  Const        r45, "emp"
  Index        r166, r165, r45
  // cd_dep_college_count: g.key.col,
  Const        r167, "cd_dep_college_count"
  Index        r168, r151, r50
  Const        r47, "col"
  Index        r169, r168, r47
  // cnt: count(g)
  Const        r170, "cnt"
  Const        r130, "count"
  Index        r171, r151, r130
  // ca_state: g.key.state,
  Move         r172, r152
  Move         r173, r154
  // cd_gender: g.key.gender,
  Move         r174, r155
  Move         r175, r157
  // cd_marital_status: g.key.marital,
  Move         r176, r158
  Move         r177, r160
  // cd_dep_count: g.key.dep,
  Move         r178, r161
  Move         r179, r163
  // cd_dep_employed_count: g.key.emp,
  Move         r180, r164
  Move         r181, r166
  // cd_dep_college_count: g.key.col,
  Move         r182, r167
  Move         r183, r169
  // cnt: count(g)
  Move         r184, r170
  Move         r185, r171
  // select {
  MakeMap      r186, 7, r172
  // from c in customer
  Append       r187, r36, r186
  Move         r36, r187
  Const        r35, 1
  AddInt       r147, r147, r35
  Jump         L13
