func main (regs=64)
  // let customer = [
  Const        r0, [{"c_current_addr_sk": 1, "c_current_cdemo_sk": 1, "c_customer_sk": 1}, {"c_current_addr_sk": 2, "c_current_cdemo_sk": 2, "c_customer_sk": 2}]
  // let customer_address = [
  Const        r1, [{"ca_address_sk": 1, "ca_state": "CA"}, {"ca_address_sk": 2, "ca_state": "NY"}]
  // let customer_demographics = [
  Const        r2, [{"cd_demo_sk": 1, "cd_dep_college_count": 0, "cd_dep_count": 1, "cd_dep_employed_count": 1, "cd_gender": "M", "cd_marital_status": "S"}, {"cd_demo_sk": 2, "cd_dep_college_count": 1, "cd_dep_count": 2, "cd_dep_employed_count": 1, "cd_gender": "F", "cd_marital_status": "M"}]
L1:
  // let store_sales = [
  Const        r3, [{"ss_customer_sk": 1, "ss_sold_date_sk": 1}]
L4:
  // let date_dim = [
  Const        r4, [{"d_date_sk": 1, "d_qoy": 1, "d_year": 2000}]
  // from ss in store_sales
  Const        r5, []
  IterPrep     r6, r3
L2:
  Len          r3, r6
L3:
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  IterPrep     r7, r4
  Len          r4, r7
  Const        r8, "ss_sold_date_sk"
  Const        r9, "d_date_sk"
  // where d.d_year == 2000 && d.d_qoy < 4
  Const        r10, "d_year"
  Const        r11, "d_qoy"
L5:
  // select ss.ss_customer_sk
  Const        r12, "ss_customer_sk"
  // from ss in store_sales
  Const        r13, 0
L0:
  LessInt      r14, r13, r3
  JumpIfFalse  r14, L0
  Index        r3, r6, r13
  Move         r6, r3
L9:
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  Const        r3, 0
  LessInt      r15, r3, r4
  JumpIfFalse  r15, L1
L13:
  Index        r4, r7, r3
L8:
  Move         r15, r4
  Index        r7, r6, r8
  Index        r8, r15, r9
  Equal        r9, r7, r8
L12:
  JumpIfFalse  r9, L2
  // where d.d_year == 2000 && d.d_qoy < 4
  Index        r7, r15, r10
  Index        r8, r15, r11
L11:
  Const        r9, 4
  Less         r10, r8, r9
  Const        r11, 2000
  Equal        r15, r7, r11
  Move         r8, r15
  JumpIfFalse  r8, L3
  Move         r8, r10
  JumpIfFalse  r8, L2
  // select ss.ss_customer_sk
  Index        r9, r6, r12
  // from ss in store_sales
  Append       r7, r5, r9
L10:
  Move         r5, r7
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  Const        r11, 1
  AddInt       r3, r3, r11
  Jump         L4
  // from ss in store_sales
  AddInt       r13, r13, r11
  Jump         L5
  // from c in customer
  Const        r10, []
  // group by {state: ca.ca_state, gender: cd.cd_gender, marital: cd.cd_marital_status, dep: cd.cd_dep_count, emp: cd.cd_dep_employed_count, col: cd.cd_dep_college_count} into g
  Const        r15, "state"
  Const        r8, "ca_state"
  Const        r12, "gender"
L7:
  Const        r6, "cd_gender"
  Const        r9, "marital"
L6:
  Const        r7, "cd_marital_status"
  Const        r13, "dep"
L15:
  Const        r14, "cd_dep_count"
  Const        r3, "emp"
  Const        r4, "cd_dep_employed_count"
  Const        r16, "col"
  Const        r17, "cd_dep_college_count"
  // where c.c_customer_sk in purchased
  Const        r18, "c_customer_sk"
  // ca_state: g.key.state,
  Const        r19, "key"
  // cnt: count(g)
  Const        r20, "cnt"
  // from c in customer
  MakeMap      r20, 0, r0
  Const        r21, []
  Move         r22, r21
  IterPrep     r23, r0
  Len          r24, r23
  Const        r25, 0
  LessInt      r26, r25, r24
  JumpIfFalse  r26, L6
  Index        r24, r23, r25
  Move         r26, r24
  // join ca in customer_address on c.c_current_addr_sk == ca.ca_address_sk
  IterPrep     r23, r1
  Len          r24, r23
  Const        r1, 0
  LessInt      r27, r1, r24
  JumpIfFalse  r27, L7
  Index        r24, r23, r1
  Move         r27, r24
  Const        r23, "c_current_addr_sk"
  Index        r24, r26, r23
  Const        r23, "ca_address_sk"
  Index        r28, r27, r23
  Equal        r29, r24, r28
  JumpIfFalse  r29, L8
  // join cd in customer_demographics on c.c_current_cdemo_sk == cd.cd_demo_sk
  IterPrep     r24, r2
  Len          r28, r24
  Const        r29, 0
  LessInt      r2, r29, r28
  JumpIfFalse  r2, L8
  Index        r28, r24, r29
  Move         r2, r28
  Const        r24, "c_current_cdemo_sk"
  Index        r30, r26, r24
  Const        r24, "cd_demo_sk"
  Index        r31, r2, r24
  Equal        r24, r30, r31
  JumpIfFalse  r24, L9
  // where c.c_customer_sk in purchased
  Index        r30, r26, r18
  In           r31, r30, r5
  JumpIfFalse  r31, L9
  // from c in customer
  Const        r24, "c"
  Move         r18, r26
  Const        r5, "ca"
  Move         r30, r27
  Const        r31, "cd"
  Move         r26, r2
  Move         r32, r24
  Move         r33, r18
  Move         r34, r5
  Move         r35, r30
  Move         r36, r31
  Move         r37, r26
  MakeMap      r24, 3, r32
  // group by {state: ca.ca_state, gender: cd.cd_gender, marital: cd.cd_marital_status, dep: cd.cd_dep_count, emp: cd.cd_dep_employed_count, col: cd.cd_dep_college_count} into g
  Const        r18, "state"
  Index        r5, r27, r8
  Const        r30, "gender"
  Index        r26, r2, r6
  Const        r32, "marital"
  Index        r33, r2, r7
  Const        r34, "dep"
  Index        r35, r2, r14
  Const        r36, "emp"
  Index        r37, r2, r4
  Const        r8, "col"
  Index        r27, r2, r17
  Move         r38, r18
  Move         r39, r5
  Move         r40, r30
  Move         r41, r26
  Move         r42, r32
  Move         r43, r33
  Move         r44, r34
  Move         r45, r35
  Move         r46, r36
  Move         r47, r37
  Move         r48, r8
  Move         r49, r27
  MakeMap      r6, 6, r38
  Str          r7, r6
  In           r14, r7, r20
  JumpIfTrue   r14, L10
  // from c in customer
  Const        r4, "__group__"
  Const        r17, true
  // group by {state: ca.ca_state, gender: cd.cd_gender, marital: cd.cd_marital_status, dep: cd.cd_dep_count, emp: cd.cd_dep_employed_count, col: cd.cd_dep_college_count} into g
  Move         r2, r6
  // from c in customer
  Const        r18, "items"
  Move         r5, r21
  Const        r30, "count"
  Const        r26, 0
  Move         r38, r4
  Move         r39, r17
  Move         r40, r19
  Move         r41, r2
  Move         r42, r18
  Move         r43, r5
  Move         r44, r30
  Move         r45, r26
  MakeMap      r32, 4, r38
  SetIndex     r20, r7, r32
  Append       r33, r22, r32
  Move         r22, r33
  Index        r34, r20, r7
  Index        r35, r34, r18
  Append       r36, r35, r24
  SetIndex     r34, r18, r36
  Index        r37, r34, r30
  AddInt       r8, r37, r11
  SetIndex     r34, r30, r8
  // join cd in customer_demographics on c.c_current_cdemo_sk == cd.cd_demo_sk
  AddInt       r29, r29, r11
  Jump         L11
  // join ca in customer_address on c.c_current_addr_sk == ca.ca_address_sk
  AddInt       r1, r1, r11
  Jump         L12
  // from c in customer
  AddInt       r25, r25, r11
  Jump         L13
  Move         r27, r26
  Len          r46, r22
  LessInt      r47, r27, r46
  JumpIfFalse  r47, L14
  Index        r48, r22, r27
  Move         r49, r48
  // ca_state: g.key.state,
  Const        r14, "ca_state"
  Index        r6, r49, r19
  Index        r21, r6, r15
  // cd_gender: g.key.gender,
  Const        r4, "cd_gender"
  Index        r17, r49, r19
  Index        r2, r17, r12
  // cd_marital_status: g.key.marital,
  Const        r5, "cd_marital_status"
  Index        r38, r49, r19
  Index        r39, r38, r9
  // cd_dep_count: g.key.dep,
  Const        r40, "cd_dep_count"
  Index        r41, r49, r19
  Index        r42, r41, r13
  // cd_dep_employed_count: g.key.emp,
  Const        r43, "cd_dep_employed_count"
  Index        r44, r49, r19
  Index        r45, r44, r3
  // cd_dep_college_count: g.key.col,
  Const        r32, "cd_dep_college_count"
  Index        r33, r49, r19
  Index        r20, r33, r16
  // cnt: count(g)
  Const        r7, "cnt"
  Index        r24, r49, r30
  // ca_state: g.key.state,
  Move         r50, r14
  Move         r51, r21
  // cd_gender: g.key.gender,
  Move         r52, r4
  Move         r53, r2
  // cd_marital_status: g.key.marital,
  Move         r54, r5
  Move         r55, r39
  // cd_dep_count: g.key.dep,
  Move         r56, r40
  Move         r57, r42
  // cd_dep_employed_count: g.key.emp,
  Move         r58, r43
  Move         r59, r45
  // cd_dep_college_count: g.key.col,
  Move         r60, r32
  Move         r61, r20
  // cnt: count(g)
  Move         r62, r7
  Move         r63, r24
  // select {
  MakeMap      r18, 3, r50
  // from c in customer
  Append       r35, r10, r18
  Move         r10, r35
  AddInt       r27, r27, r11
  Jump         L15
L14:
  // json(groups)
  JSON         r10
  // expect groups == [{ca_state: "CA", cd_gender: "M", cd_marital_status: "S", cd_dep_count: 1, cd_dep_employed_count: 1, cd_dep_college_count: 0, cnt: 1}]
  Const        r36, [{"ca_state": "CA", "cd_dep_college_count": 0, "cd_dep_count": 1, "cd_dep_employed_count": 1, "cd_gender": "M", "cd_marital_status": "S", "cnt": 1}]
  Equal        r25, r10, r36
  Expect       r25
  Return       r0
