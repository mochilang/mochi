func main (regs=278)
  // let store_sales = [
  Const        r0, [{"ss_addr_sk": 1, "ss_coupon_amt": 5.0, "ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_net_profit": 20.0, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}]
  // let date_dim = [ { d_date_sk: 1, d_dow: 6, d_year: 2020 } ]
  Const        r1, [{"d_date_sk": 1, "d_dow": 6, "d_year": 2020}]
  // let store = [ { s_store_sk: 1, s_city: "CityA" } ]
  Const        r2, [{"s_city": "CityA", "s_store_sk": 1}]
  // let household_demographics = [ { hd_demo_sk: 1, hd_dep_count: 2, hd_vehicle_count: 0 } ]
  Const        r3, [{"hd_demo_sk": 1, "hd_dep_count": 2, "hd_vehicle_count": 0}]
  // let customer_address = [ { ca_address_sk: 1, ca_city: "Portland" }, { ca_address_sk: 2, ca_city: "Seattle" } ]
  Const        r4, [{"ca_address_sk": 1, "ca_city": "Portland"}, {"ca_address_sk": 2, "ca_city": "Seattle"}]
  // let customer = [ { c_customer_sk: 1, c_last_name: "Doe", c_first_name: "John", c_current_addr_sk: 2 } ]
  Const        r5, [{"c_current_addr_sk": 2, "c_customer_sk": 1, "c_first_name": "John", "c_last_name": "Doe"}]
  // let depcnt = 2
  Const        r6, 2
  // let vehcnt = 0
  Const        r7, 0
  // let year = 2020
  Const        r8, 2020
  // let cities = ["CityA"]
  Const        r9, ["CityA"]
  // from ss in store_sales
  Const        r10, []
  // group by { ss_ticket_number: ss.ss_ticket_number, ss_customer_sk: ss.ss_customer_sk, ca_city: ca.ca_city } into g
  Const        r11, "ss_ticket_number"
  Const        r12, "ss_customer_sk"
  Const        r13, "ca_city"
  // where (hd.hd_dep_count == depcnt || hd.hd_vehicle_count == vehcnt) &&
  Const        r14, "hd_dep_count"
  Const        r15, "hd_vehicle_count"
  // d.d_dow in [6,0] && d.d_year == year && s.s_city in cities
  Const        r16, "d_dow"
  Const        r17, "d_year"
  Const        r18, "s_city"
  // select { ss_ticket_number: g.key.ss_ticket_number, ss_customer_sk: g.key.ss_customer_sk, bought_city: g.key.ca_city, amt: sum(from x in g select x.ss.ss_coupon_amt), profit: sum(from x in g select x.ss.ss_net_profit) }
  Const        r19, "key"
  Const        r20, "bought_city"
  Const        r21, "amt"
  Const        r22, "ss"
  Const        r23, "ss_coupon_amt"
  Const        r24, "profit"
  Const        r25, "ss_net_profit"
  // from ss in store_sales
  MakeMap      r26, 0, r0
  Const        r28, []
  Move         r27, r28
  IterPrep     r29, r0
  Len          r30, r29
  Const        r31, 0
  LessInt      r32, r31, r30
  JumpIfFalse  r32, L0
  Index        r33, r29, r31
  Move         r34, r33
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  IterPrep     r35, r1
  Len          r36, r35
  Const        r37, 0
  LessInt      r38, r37, r36
  JumpIfFalse  r38, L1
  Index        r39, r35, r37
  Move         r40, r39
L5:
  Const        r41, "ss_sold_date_sk"
  Index        r42, r34, r41
  Const        r43, "d_date_sk"
  Index        r44, r40, r43
  Equal        r45, r42, r44
  JumpIfFalse  r45, L2
  // join s in store on ss.ss_store_sk == s.s_store_sk
  IterPrep     r46, r2
  Len          r47, r46
  Const        r48, 0
  LessInt      r49, r48, r47
  JumpIfFalse  r49, L2
  Index        r50, r46, r48
  Move         r51, r50
  Const        r52, "ss_store_sk"
  Index        r53, r34, r52
  Const        r54, "s_store_sk"
  Index        r55, r51, r54
  Equal        r56, r53, r55
  JumpIfFalse  r56, L3
  // join hd in household_demographics on ss.ss_hdemo_sk == hd.hd_demo_sk
  IterPrep     r57, r3
  Len          r58, r57
  Const        r59, 0
  LessInt      r60, r59, r58
  JumpIfFalse  r60, L3
  Index        r61, r57, r59
  Move         r62, r61
  Const        r63, "ss_hdemo_sk"
  Index        r64, r34, r63
  Const        r65, "hd_demo_sk"
  Index        r66, r62, r65
  Equal        r67, r64, r66
  JumpIfFalse  r67, L4
  // join ca in customer_address on ss.ss_addr_sk == ca.ca_address_sk
  IterPrep     r68, r4
L10:
  Len          r69, r68
  Const        r70, 0
  LessInt      r71, r70, r69
  JumpIfFalse  r71, L4
  Index        r72, r68, r70
  Move         r73, r72
  Const        r74, "ss_addr_sk"
  Index        r75, r34, r74
  Const        r76, "ca_address_sk"
  Index        r77, r73, r76
  Equal        r78, r75, r77
  JumpIfFalse  r78, L5
  // where (hd.hd_dep_count == depcnt || hd.hd_vehicle_count == vehcnt) &&
  Const        r14, "hd_dep_count"
L9:
  Index        r79, r62, r14
  Const        r6, 2
  Equal        r80, r79, r6
  Const        r15, "hd_vehicle_count"
  Index        r81, r62, r15
  Const        r7, 0
  Equal        r82, r81, r7
  Move         r83, r80
  JumpIfTrue   r83, L6
  Move         r83, r82
  // d.d_dow in [6,0] && d.d_year == year && s.s_city in cities
  Const        r16, "d_dow"
  Index        r84, r40, r16
  Const        r85, [6, 0]
  In           r86, r84, r85
  Const        r17, "d_year"
  Index        r87, r40, r17
  Const        r8, 2020
  Equal        r88, r87, r8
  Const        r18, "s_city"
  Index        r89, r51, r18
  Const        r90, ["CityA"]
L6:
  In           r91, r89, r90
  // where (hd.hd_dep_count == depcnt || hd.hd_vehicle_count == vehcnt) &&
  Move         r92, r83
  JumpIfFalse  r92, L7
  Move         r92, r86
  // d.d_dow in [6,0] && d.d_year == year && s.s_city in cities
  JumpIfFalse  r92, L7
  Move         r92, r88
  JumpIfFalse  r92, L7
  Move         r92, r91
  // where (hd.hd_dep_count == depcnt || hd.hd_vehicle_count == vehcnt) &&
  JumpIfFalse  r92, L5
  // from ss in store_sales
  Const        r22, "ss"
  Move         r93, r34
  Const        r94, "d"
  Move         r95, r40
  Const        r96, "s"
  Move         r97, r51
  Const        r98, "hd"
  Move         r99, r62
  Const        r100, "ca"
  Move         r101, r73
L7:
  Move         r102, r22
  Move         r103, r93
  Move         r104, r94
  Move         r105, r95
  Move         r106, r96
  Move         r107, r97
  Move         r108, r98
  Move         r109, r99
  Move         r110, r100
  Move         r111, r101
  MakeMap      r112, 5, r102
  // group by { ss_ticket_number: ss.ss_ticket_number, ss_customer_sk: ss.ss_customer_sk, ca_city: ca.ca_city } into g
  Const        r113, "ss_ticket_number"
  Const        r11, "ss_ticket_number"
  Index        r114, r34, r11
  Const        r115, "ss_customer_sk"
  Const        r12, "ss_customer_sk"
  Index        r116, r34, r12
  Const        r117, "ca_city"
  Const        r13, "ca_city"
  Index        r118, r73, r13
  Move         r119, r113
  Move         r120, r114
  Move         r121, r115
  Move         r122, r116
  Move         r123, r117
  Move         r124, r118
  MakeMap      r125, 3, r119
  Str          r126, r125
  In           r127, r126, r26
  JumpIfTrue   r127, L8
  // from ss in store_sales
  Const        r28, []
  Const        r128, "__group__"
  Const        r129, true
  Const        r19, "key"
  // group by { ss_ticket_number: ss.ss_ticket_number, ss_customer_sk: ss.ss_customer_sk, ca_city: ca.ca_city } into g
  Move         r130, r125
  // from ss in store_sales
  Const        r131, "items"
  Move         r132, r28
  Const        r133, "count"
  Const        r7, 0
  Move         r134, r128
  Move         r135, r129
  Move         r136, r19
  Move         r137, r130
  Move         r138, r131
  Move         r139, r132
  Move         r140, r133
  Move         r141, r7
  MakeMap      r142, 4, r134
  SetIndex     r26, r126, r142
  Append       r143, r27, r142
  Move         r27, r143
  Index        r144, r26, r126
  Index        r145, r144, r131
  Append       r146, r145, r112
  SetIndex     r144, r131, r146
  Index        r147, r144, r133
  Const        r148, 1
  AddInt       r149, r147, r148
  SetIndex     r144, r133, r149
  // join ca in customer_address on ss.ss_addr_sk == ca.ca_address_sk
  AddInt       r70, r70, r148
  Jump         L9
L8:
  // join hd in household_demographics on ss.ss_hdemo_sk == hd.hd_demo_sk
  AddInt       r59, r59, r148
  Jump         L10
L4:
  // from ss in store_sales
  Len          r151, r27
  LessInt      r152, r150, r151
  JumpIfFalse  r152, L11
L3:
  Index        r153, r27, r150
  Move         r154, r153
  // select { ss_ticket_number: g.key.ss_ticket_number, ss_customer_sk: g.key.ss_customer_sk, bought_city: g.key.ca_city, amt: sum(from x in g select x.ss.ss_coupon_amt), profit: sum(from x in g select x.ss.ss_net_profit) }
  Const        r155, "ss_ticket_number"
L2:
  Const        r19, "key"
  Index        r156, r154, r19
  Const        r11, "ss_ticket_number"
L1:
  Index        r157, r156, r11
  Const        r158, "ss_customer_sk"
  Index        r159, r154, r19
L0:
  Const        r12, "ss_customer_sk"
  Index        r160, r159, r12
  Const        r161, "bought_city"
L13:
  Index        r162, r154, r19
  Const        r13, "ca_city"
  Index        r163, r162, r13
  Const        r164, "amt"
  Const        r165, []
  Const        r22, "ss"
  Const        r23, "ss_coupon_amt"
  IterPrep     r166, r154
  Len          r167, r166
  Const        r7, 0
  Move         r168, r7
  LessInt      r169, r168, r167
  JumpIfFalse  r169, L12
  Index        r170, r166, r168
  Move         r171, r170
  Const        r22, "ss"
  Index        r172, r171, r22
  Const        r23, "ss_coupon_amt"
  Index        r173, r172, r23
  Append       r174, r165, r173
  Move         r165, r174
  Const        r148, 1
  AddInt       r168, r168, r148
  Const        r22, "ss"
  Const        r25, "ss_net_profit"
  IterPrep     r178, r154
  Len          r179, r178
  Const        r7, 0
  Move         r180, r7
  LessInt      r181, r180, r179
  JumpIfFalse  r181, L13
  Index        r182, r178, r180
  Move         r171, r182
  Const        r22, "ss"
  Index        r183, r171, r22
  Const        r25, "ss_net_profit"
L12:
  Index        r184, r183, r25
  Append       r185, r177, r184
  Move         r177, r185
  Const        r148, 1
  AddInt       r180, r180, r148
  Move         r189, r158
  Move         r190, r160
  Move         r191, r161
  Move         r192, r163
  Move         r193, r164
  Move         r194, r175
  Move         r195, r176
  Move         r196, r186
  MakeMap      r197, 5, r187
  // from ss in store_sales
  Append       r198, r10, r197
  Move         r10, r198
  Const        r148, 1
  AddInt       r150, r150, r148
  Jump         L13
L11:
  // join c in customer on dnrec.ss_customer_sk == c.c_customer_sk
  IterPrep     r208, r5
  Len          r209, r208
  Const        r12, "ss_customer_sk"
  Const        r210, "c_customer_sk"
  // where current_addr.ca_city != dnrec.bought_city
  Const        r13, "ca_city"
  Const        r20, "bought_city"
  // select { c_last_name: c.c_last_name, c_first_name: c.c_first_name, ca_city: current_addr.ca_city, bought_city: dnrec.bought_city, ss_ticket_number: dnrec.ss_ticket_number, amt: dnrec.amt, profit: dnrec.profit }
  Const        r200, "c_last_name"
  Const        r201, "c_first_name"
  Const        r11, "ss_ticket_number"
  Const        r21, "amt"
  Const        r24, "profit"
  // join c in customer on dnrec.ss_customer_sk == c.c_customer_sk
  Const        r7, 0
  Move         r211, r7
  LessInt      r212, r211, r209
  JumpIfFalse  r212, L14
  Index        r213, r208, r211
  Move         r214, r213
  Const        r12, "ss_customer_sk"
  Index        r215, r207, r12
  Const        r210, "c_customer_sk"
  Index        r216, r214, r210
  Equal        r217, r215, r216
  JumpIfFalse  r217, L15
  // join current_addr in customer_address on c.c_current_addr_sk == current_addr.ca_address_sk
  IterPrep     r218, r4
  Len          r219, r218
  Const        r220, "c_current_addr_sk"
  Const        r76, "ca_address_sk"
  // where current_addr.ca_city != dnrec.bought_city
  Const        r13, "ca_city"
  Const        r20, "bought_city"
  // select { c_last_name: c.c_last_name, c_first_name: c.c_first_name, ca_city: current_addr.ca_city, bought_city: dnrec.bought_city, ss_ticket_number: dnrec.ss_ticket_number, amt: dnrec.amt, profit: dnrec.profit }
  Const        r200, "c_last_name"
  Const        r201, "c_first_name"
  Const        r11, "ss_ticket_number"
  Const        r21, "amt"
  Const        r24, "profit"
  // join current_addr in customer_address on c.c_current_addr_sk == current_addr.ca_address_sk
  Const        r7, 0
  Move         r221, r7
  LessInt      r222, r221, r219
  JumpIfFalse  r222, L15
  Index        r223, r218, r221
  Move         r224, r223
  Const        r220, "c_current_addr_sk"
  Index        r225, r214, r220
  Const        r76, "ca_address_sk"
  Index        r226, r224, r76
  Equal        r227, r225, r226
  JumpIfFalse  r227, L16
  // where current_addr.ca_city != dnrec.bought_city
  Const        r13, "ca_city"
  Index        r228, r224, r13
  Const        r20, "bought_city"
  Index        r229, r207, r20
  NotEqual     r230, r228, r229
  JumpIfFalse  r230, L16
  // sort by [c.c_last_name, c.c_first_name, current_addr.ca_city, dnrec.bought_city, dnrec.ss_ticket_number]
  Const        r200, "c_last_name"
  Index        r238, r214, r200
  Move         r233, r238
  Const        r201, "c_first_name"
  Index        r239, r214, r201
  Move         r234, r239
  Const        r13, "ca_city"
  Index        r240, r224, r13
  Move         r235, r240
  Const        r20, "bought_city"
  Index        r241, r207, r20
  Move         r236, r241
  Const        r11, "ss_ticket_number"
  Index        r242, r207, r11
  Move         r237, r242
  MakeList     r243, 5, r233
  Move         r231, r243
  // select { c_last_name: c.c_last_name, c_first_name: c.c_first_name, ca_city: current_addr.ca_city, bought_city: dnrec.bought_city, ss_ticket_number: dnrec.ss_ticket_number, amt: dnrec.amt, profit: dnrec.profit }
  Const        r244, "c_last_name"
  Index        r245, r214, r200
  Const        r246, "c_first_name"
  Index        r247, r214, r201
  Const        r248, "ca_city"
  Index        r249, r224, r13
  Const        r250, "bought_city"
  Index        r251, r207, r20
  Const        r252, "ss_ticket_number"
  Index        r253, r207, r11
  Const        r254, "amt"
  Const        r21, "amt"
  Index        r255, r207, r21
  Const        r256, "profit"
  Const        r24, "profit"
  Index        r257, r207, r24
  Move         r258, r244
  Move         r259, r245
  Move         r260, r246
  Move         r261, r247
  Move         r262, r248
  Move         r263, r249
  Move         r264, r250
  Move         r265, r251
  Move         r266, r252
L17:
  Move         r267, r253
  Move         r268, r254
  Move         r269, r255
  Move         r270, r256
  Move         r271, r257
  MakeMap      r272, 7, r258
  // from dnrec in dn
  Move         r232, r272
  MakeList     r273, 2, r231
  Append       r274, r199, r273
  Move         r199, r274
  // join current_addr in customer_address on c.c_current_addr_sk == current_addr.ca_address_sk
  Const        r148, 1
  Add          r221, r221, r148
  Jump         L17
