func main (regs=68)
  // let customer = [ { c_customer_sk: 1, c_customer_id: "C1", c_first_name: "John", c_last_name: "Doe" } ]
  Const        r0, [{"c_customer_id": "C1", "c_customer_sk": 1, "c_first_name": "John", "c_last_name": "Doe"}]
  // let store_sales = [ { ss_customer_sk: 1, ss_sold_date_sk: 1998, ss_ext_list_price: 60.0 }, { ss_customer_sk: 1, ss_sold_date_sk: 1999, ss_ext_list_price: 90.0 } ]
  Const        r1, [{"ss_customer_sk": 1, "ss_ext_list_price": 60.0, "ss_sold_date_sk": 1998}, {"ss_customer_sk": 1, "ss_ext_list_price": 90.0, "ss_sold_date_sk": 1999}]
  // let web_sales = [ { ws_bill_customer_sk: 1, ws_sold_date_sk: 1998, ws_ext_list_price: 50.0 }, { ws_bill_customer_sk: 1, ws_sold_date_sk: 1999, ws_ext_list_price: 150.0 } ]
  Const        r2, [{"ws_bill_customer_sk": 1, "ws_ext_list_price": 50.0, "ws_sold_date_sk": 1998}, {"ws_bill_customer_sk": 1, "ws_ext_list_price": 150.0, "ws_sold_date_sk": 1999}]
  // let ss98 = sum(from ss in store_sales where ss.ss_sold_date_sk == 1998 select ss.ss_ext_list_price)
  Const        r3, []
  Const        r4, "ss_sold_date_sk"
  Const        r5, "ss_ext_list_price"
  IterPrep     r6, r1
  Len          r7, r6
  Const        r9, 0
  Move         r8, r9
L2:
  LessInt      r10, r8, r7
  JumpIfFalse  r10, L0
  Index        r11, r6, r8
  Move         r12, r11
  Index        r13, r12, r4
  Const        r14, 1998
  Equal        r15, r13, r14
  JumpIfFalse  r15, L1
  Index        r16, r12, r5
  Append       r17, r3, r16
  Move         r3, r17
L1:
  Const        r18, 1
  AddInt       r8, r8, r18
  Jump         L2
L0:
  Sum          r19, r3
  // let ss99 = sum(from ss in store_sales where ss.ss_sold_date_sk == 1999 select ss.ss_ext_list_price)
  Const        r20, []
  IterPrep     r21, r1
  Len          r22, r21
  Move         r23, r9
L5:
  LessInt      r24, r23, r22
  JumpIfFalse  r24, L3
  Index        r25, r21, r23
  Move         r12, r25
  Index        r26, r12, r4
  Const        r27, 1999
  Equal        r28, r26, r27
  JumpIfFalse  r28, L4
  Index        r29, r12, r5
  Append       r30, r20, r29
  Move         r20, r30
L4:
  AddInt       r23, r23, r18
  Jump         L5
L3:
  Sum          r31, r20
  // let ws98 = sum(from ws in web_sales where ws.ws_sold_date_sk == 1998 select ws.ws_ext_list_price)
  Const        r32, []
  Const        r33, "ws_sold_date_sk"
  Const        r34, "ws_ext_list_price"
  IterPrep     r35, r2
  Len          r36, r35
  Move         r37, r9
L8:
  LessInt      r38, r37, r36
  JumpIfFalse  r38, L6
  Index        r39, r35, r37
  Move         r40, r39
  Index        r41, r40, r33
  Equal        r42, r41, r14
  JumpIfFalse  r42, L7
  Index        r43, r40, r34
  Append       r44, r32, r43
  Move         r32, r44
L7:
  AddInt       r37, r37, r18
  Jump         L8
L6:
  Sum          r45, r32
  // let ws99 = sum(from ws in web_sales where ws.ws_sold_date_sk == 1999 select ws.ws_ext_list_price)
  Const        r46, []
  IterPrep     r47, r2
  Len          r48, r47
  Move         r49, r9
L11:
  LessInt      r50, r49, r48
  JumpIfFalse  r50, L9
  Index        r51, r47, r49
  Move         r40, r51
  Index        r52, r40, r33
  Equal        r53, r52, r27
  JumpIfFalse  r53, L10
  Index        r54, r40, r34
  Append       r55, r46, r54
  Move         r46, r55
L10:
  AddInt       r49, r49, r18
  Jump         L11
L9:
  Sum          r56, r46
  // let growth_ok = ws98 > 0 && ss98 > 0 && (ws99 / ws98) > (ss99 / ss98)
  Less         r57, r9, r45
  Less         r58, r9, r19
  Div          r59, r56, r45
  Div          r60, r31, r19
  Less         r61, r60, r59
  Move         r62, r57
  JumpIfFalse  r62, L12
  Move         r62, r58
  JumpIfFalse  r62, L12
  Move         r62, r61
L12:
  // let result = if growth_ok { [ { customer_id: "C1", customer_first_name: "John", customer_last_name: "Doe" } ] } else { [] }
  Const        r63, [{"customer_first_name": "John", "customer_id": "C1", "customer_last_name": "Doe"}]
  Const        r64, []
  Select       65,62,63,64
  // json(result)
  JSON         r65
  // expect result == [ { customer_id: "C1", customer_first_name: "John", customer_last_name: "Doe" } ]
  Const        r66, [{"customer_first_name": "John", "customer_id": "C1", "customer_last_name": "Doe"}]
  Equal        r67, r65, r66
  Expect       r67
  Return       r0
