func main (regs=302)
  // let web_sales = [
  Const        r0, [{"ws_ext_sales_price": 5.0, "ws_sold_date_name": "Sunday", "ws_sold_date_sk": 1}, {"ws_ext_sales_price": 5.0, "ws_sold_date_name": "Monday", "ws_sold_date_sk": 2}, {"ws_ext_sales_price": 10.0, "ws_sold_date_name": "Sunday", "ws_sold_date_sk": 8}, {"ws_ext_sales_price": 10.0, "ws_sold_date_name": "Monday", "ws_sold_date_sk": 9}]
  // let catalog_sales = [
  Const        r1, [{"cs_ext_sales_price": 5.0, "cs_sold_date_name": "Sunday", "cs_sold_date_sk": 1}, {"cs_ext_sales_price": 5.0, "cs_sold_date_name": "Monday", "cs_sold_date_sk": 2}, {"cs_ext_sales_price": 10.0, "cs_sold_date_name": "Sunday", "cs_sold_date_sk": 8}, {"cs_ext_sales_price": 10.0, "cs_sold_date_name": "Monday", "cs_sold_date_sk": 9}]
  // let date_dim = [
  Const        r2, [{"d_date_sk": 1, "d_day_name": "Sunday", "d_week_seq": 1, "d_year": 1998}, {"d_date_sk": 2, "d_day_name": "Monday", "d_week_seq": 1, "d_year": 1998}, {"d_date_sk": 8, "d_day_name": "Sunday", "d_week_seq": 54, "d_year": 1999}, {"d_date_sk": 9, "d_day_name": "Monday", "d_week_seq": 54, "d_year": 1999}]
  // (from ws in web_sales
  Const        r3, []
  // sold_date_sk: ws.ws_sold_date_sk,
  Const        r4, "sold_date_sk"
  Const        r5, "ws_sold_date_sk"
  // sales_price: ws.ws_ext_sales_price,
  Const        r6, "sales_price"
  Const        r7, "ws_ext_sales_price"
  // day: ws.ws_sold_date_name
  Const        r8, "day"
  Const        r9, "ws_sold_date_name"
  // (from ws in web_sales
  IterPrep     r10, r0
  Len          r11, r10
  Const        r13, 0
  Move         r12, r13
L1:
  LessInt      r14, r12, r11
  JumpIfFalse  r14, L0
  Index        r15, r10, r12
  Move         r16, r15
  // sold_date_sk: ws.ws_sold_date_sk,
  Const        r17, "sold_date_sk"
  Index        r18, r16, r5
  // sales_price: ws.ws_ext_sales_price,
  Const        r19, "sales_price"
  Index        r20, r16, r7
  // day: ws.ws_sold_date_name
  Const        r21, "day"
  Index        r22, r16, r9
  // sold_date_sk: ws.ws_sold_date_sk,
  Move         r23, r17
  Move         r24, r18
  // sales_price: ws.ws_ext_sales_price,
  Move         r25, r19
  Move         r26, r20
  // day: ws.ws_sold_date_name
  Move         r27, r21
  Move         r28, r22
  // select {
  MakeMap      r29, 3, r23
  // (from ws in web_sales
  Append       r30, r3, r29
  Move         r3, r30
  Const        r31, 1
  AddInt       r12, r12, r31
  Jump         L1
L0:
  // from cs in catalog_sales
  Const        r32, []
  // sold_date_sk: cs.cs_sold_date_sk,
  Const        r33, "cs_sold_date_sk"
  // sales_price: cs.cs_ext_sales_price,
  Const        r34, "cs_ext_sales_price"
  // day: cs.cs_sold_date_name
  Const        r35, "cs_sold_date_name"
  // from cs in catalog_sales
  IterPrep     r36, r1
  Len          r37, r36
  Move         r38, r13
L3:
  LessInt      r39, r38, r37
  JumpIfFalse  r39, L2
  Index        r40, r36, r38
  Move         r41, r40
  // sold_date_sk: cs.cs_sold_date_sk,
  Const        r42, "sold_date_sk"
  Index        r43, r41, r33
  // sales_price: cs.cs_ext_sales_price,
  Const        r44, "sales_price"
  Index        r45, r41, r34
  // day: cs.cs_sold_date_name
  Const        r46, "day"
  Index        r47, r41, r35
  // sold_date_sk: cs.cs_sold_date_sk,
  Move         r48, r42
  Move         r49, r43
  // sales_price: cs.cs_ext_sales_price,
  Move         r50, r44
  Move         r51, r45
  // day: cs.cs_sold_date_name
  Move         r52, r46
  Move         r53, r47
  // select {
  MakeMap      r54, 3, r48
  // from cs in catalog_sales
  Append       r55, r32, r54
  Move         r32, r55
  AddInt       r38, r38, r31
  Jump         L3
L2:
  // }) union all (
  UnionAll     r56, r3, r32
  // from w in wscs
  Const        r57, []
  // group by {week_seq: d.d_week_seq} into g
  Const        r58, "week_seq"
  Const        r59, "d_week_seq"
  // d_week_seq: g.key.week_seq,
  Const        r60, "key"
  // sun_sales: sum(from x in g where x.day == "Sunday" select x.sales_price),
  Const        r61, "sun_sales"
  // mon_sales: sum(from x in g where x.day == "Monday" select x.sales_price),
  Const        r62, "mon_sales"
  // tue_sales: sum(from x in g where x.day == "Tuesday" select x.sales_price),
  Const        r63, "tue_sales"
  // wed_sales: sum(from x in g where x.day == "Wednesday" select x.sales_price),
  Const        r64, "wed_sales"
  // thu_sales: sum(from x in g where x.day == "Thursday" select x.sales_price),
  Const        r65, "thu_sales"
  // fri_sales: sum(from x in g where x.day == "Friday" select x.sales_price),
  Const        r66, "fri_sales"
  // sat_sales: sum(from x in g where x.day == "Saturday" select x.sales_price)
  Const        r67, "sat_sales"
  // from w in wscs
  MakeMap      r68, 0, r0
  Const        r70, []
  Move         r69, r70
  IterPrep     r71, r56
  Len          r72, r71
  Const        r73, 0
L9:
  LessInt      r74, r73, r72
  JumpIfFalse  r74, L4
  Index        r75, r71, r73
  Move         r76, r75
  // join d in date_dim on w.sold_date_sk == d.d_date_sk
  IterPrep     r77, r2
  Len          r78, r77
  Const        r79, 0
L8:
  LessInt      r80, r79, r78
  JumpIfFalse  r80, L5
  Index        r81, r77, r79
  Move         r82, r81
  Index        r83, r76, r4
  Const        r84, "d_date_sk"
  Index        r85, r82, r84
  Equal        r86, r83, r85
  JumpIfFalse  r86, L6
  // from w in wscs
  Const        r87, "w"
  Move         r88, r76
  Const        r89, "d"
  Move         r90, r82
  Move         r91, r87
  Move         r92, r88
  Move         r93, r89
  Move         r94, r90
  MakeMap      r95, 2, r91
  // group by {week_seq: d.d_week_seq} into g
  Const        r96, "week_seq"
  Index        r97, r82, r59
  Move         r98, r96
  Move         r99, r97
  MakeMap      r100, 1, r98
  Str          r101, r100
  In           r102, r101, r68
  JumpIfTrue   r102, L7
  // from w in wscs
  Const        r103, "__group__"
  Const        r104, true
  // group by {week_seq: d.d_week_seq} into g
  Move         r105, r100
  // from w in wscs
  Const        r106, "items"
  Move         r107, r70
  Const        r108, "count"
  Move         r109, r103
  Move         r110, r104
  Move         r111, r60
  Move         r112, r105
  Move         r113, r106
  Move         r114, r107
  Move         r115, r108
  Move         r116, r13
  MakeMap      r117, 4, r109
  SetIndex     r68, r101, r117
  Append       r118, r69, r117
  Move         r69, r118
L7:
  Index        r119, r68, r101
  Index        r120, r119, r106
  Append       r121, r120, r95
  SetIndex     r119, r106, r121
  Index        r122, r119, r108
  AddInt       r123, r122, r31
  SetIndex     r119, r108, r123
L6:
  // join d in date_dim on w.sold_date_sk == d.d_date_sk
  AddInt       r79, r79, r31
  Jump         L8
L5:
  // from w in wscs
  AddInt       r73, r73, r31
  Jump         L9
L4:
  Move         r124, r13
  Len          r125, r69
L32:
  LessInt      r126, r124, r125
  JumpIfFalse  r126, L10
  Index        r127, r69, r124
  Move         r128, r127
  // d_week_seq: g.key.week_seq,
  Const        r129, "d_week_seq"
  Index        r130, r128, r60
  Index        r131, r130, r58
  // sun_sales: sum(from x in g where x.day == "Sunday" select x.sales_price),
  Const        r132, "sun_sales"
  Const        r133, []
  IterPrep     r134, r128
  Len          r135, r134
  Move         r136, r13
L13:
  LessInt      r137, r136, r135
  JumpIfFalse  r137, L11
  Index        r138, r134, r136
  Move         r139, r138
  Index        r140, r139, r8
  Const        r141, "Sunday"
  Equal        r142, r140, r141
  JumpIfFalse  r142, L12
  Index        r143, r139, r6
  Append       r144, r133, r143
  Move         r133, r144
L12:
  AddInt       r136, r136, r31
  Jump         L13
L11:
  Sum          r145, r133
  // mon_sales: sum(from x in g where x.day == "Monday" select x.sales_price),
  Const        r146, "mon_sales"
  Const        r147, []
  IterPrep     r148, r128
  Len          r149, r148
  Move         r150, r13
L16:
  LessInt      r151, r150, r149
  JumpIfFalse  r151, L14
  Index        r152, r148, r150
  Move         r139, r152
  Index        r153, r139, r8
  Const        r154, "Monday"
  Equal        r155, r153, r154
  JumpIfFalse  r155, L15
  Index        r156, r139, r6
  Append       r157, r147, r156
  Move         r147, r157
L15:
  AddInt       r150, r150, r31
  Jump         L16
L14:
  Sum          r158, r147
  // tue_sales: sum(from x in g where x.day == "Tuesday" select x.sales_price),
  Const        r159, "tue_sales"
  Const        r160, []
  IterPrep     r161, r128
  Len          r162, r161
  Move         r163, r13
L19:
  LessInt      r164, r163, r162
  JumpIfFalse  r164, L17
  Index        r165, r161, r163
  Move         r139, r165
  Index        r166, r139, r8
  Const        r167, "Tuesday"
  Equal        r168, r166, r167
  JumpIfFalse  r168, L18
  Index        r169, r139, r6
  Append       r170, r160, r169
  Move         r160, r170
L18:
  AddInt       r163, r163, r31
  Jump         L19
L17:
  Sum          r171, r160
  // wed_sales: sum(from x in g where x.day == "Wednesday" select x.sales_price),
  Const        r172, "wed_sales"
  Const        r173, []
  IterPrep     r174, r128
  Len          r175, r174
  Move         r176, r13
L22:
  LessInt      r177, r176, r175
  JumpIfFalse  r177, L20
  Index        r178, r174, r176
  Move         r139, r178
  Index        r179, r139, r8
  Const        r180, "Wednesday"
  Equal        r181, r179, r180
  JumpIfFalse  r181, L21
  Index        r182, r139, r6
  Append       r183, r173, r182
  Move         r173, r183
L21:
  AddInt       r176, r176, r31
  Jump         L22
L20:
  Sum          r184, r173
  // thu_sales: sum(from x in g where x.day == "Thursday" select x.sales_price),
  Const        r185, "thu_sales"
  Const        r186, []
  IterPrep     r187, r128
  Len          r188, r187
  Move         r189, r13
L25:
  LessInt      r190, r189, r188
  JumpIfFalse  r190, L23
  Index        r191, r187, r189
  Move         r139, r191
  Index        r192, r139, r8
  Const        r193, "Thursday"
  Equal        r194, r192, r193
  JumpIfFalse  r194, L24
  Index        r195, r139, r6
  Append       r196, r186, r195
  Move         r186, r196
L24:
  AddInt       r189, r189, r31
  Jump         L25
L23:
  Sum          r197, r186
  // fri_sales: sum(from x in g where x.day == "Friday" select x.sales_price),
  Const        r198, "fri_sales"
  Const        r199, []
  IterPrep     r200, r128
  Len          r201, r200
  Move         r202, r13
L28:
  LessInt      r203, r202, r201
  JumpIfFalse  r203, L26
  Index        r204, r200, r202
  Move         r139, r204
  Index        r205, r139, r8
  Const        r206, "Friday"
  Equal        r207, r205, r206
  JumpIfFalse  r207, L27
  Index        r208, r139, r6
  Append       r209, r199, r208
  Move         r199, r209
L27:
  AddInt       r202, r202, r31
  Jump         L28
L26:
  Sum          r210, r199
  // sat_sales: sum(from x in g where x.day == "Saturday" select x.sales_price)
  Const        r211, "sat_sales"
  Const        r212, []
  IterPrep     r213, r128
  Len          r214, r213
  Move         r215, r13
L31:
  LessInt      r216, r215, r214
  JumpIfFalse  r216, L29
  Index        r217, r213, r215
  Move         r139, r217
  Index        r218, r139, r8
  Const        r219, "Saturday"
  Equal        r220, r218, r219
  JumpIfFalse  r220, L30
  Index        r221, r139, r6
  Append       r222, r212, r221
  Move         r212, r222
L30:
  AddInt       r215, r215, r31
  Jump         L31
L29:
  Sum          r223, r212
  // d_week_seq: g.key.week_seq,
  Move         r224, r129
  Move         r225, r131
  // sun_sales: sum(from x in g where x.day == "Sunday" select x.sales_price),
  Move         r226, r132
  Move         r227, r145
  // mon_sales: sum(from x in g where x.day == "Monday" select x.sales_price),
  Move         r228, r146
  Move         r229, r158
  // tue_sales: sum(from x in g where x.day == "Tuesday" select x.sales_price),
  Move         r230, r159
  Move         r231, r171
  // wed_sales: sum(from x in g where x.day == "Wednesday" select x.sales_price),
  Move         r232, r172
  Move         r233, r184
  // thu_sales: sum(from x in g where x.day == "Thursday" select x.sales_price),
  Move         r234, r185
  Move         r235, r197
  // fri_sales: sum(from x in g where x.day == "Friday" select x.sales_price),
  Move         r236, r198
  Move         r237, r210
  // sat_sales: sum(from x in g where x.day == "Saturday" select x.sales_price)
  Move         r238, r211
  Move         r239, r223
  // select {
  MakeMap      r240, 8, r224
  // from w in wscs
  Append       r241, r57, r240
  Move         r57, r241
  AddInt       r124, r124, r31
  Jump         L32
L10:
  // let year1 = from w in wswscs where w.d_week_seq == 1 select w
  Const        r242, []
  IterPrep     r243, r57
  Len          r244, r243
  Move         r245, r13
L35:
  LessInt      r246, r245, r244
  JumpIfFalse  r246, L33
  Index        r247, r243, r245
  Move         r76, r247
  Index        r248, r76, r59
  Equal        r249, r248, r31
  JumpIfFalse  r249, L34
  Append       r250, r242, r76
  Move         r242, r250
L34:
  AddInt       r245, r245, r31
  Jump         L35
L33:
  // let year2 = from w in wswscs where w.d_week_seq == 54 select w
  Const        r251, []
  IterPrep     r252, r57
  Len          r253, r252
  Move         r254, r13
L38:
  LessInt      r255, r254, r253
  JumpIfFalse  r255, L36
  Index        r256, r252, r254
  Move         r76, r256
  Index        r257, r76, r59
  Const        r258, 54
  Equal        r259, r257, r258
  JumpIfFalse  r259, L37
  Append       r260, r251, r76
  Move         r251, r260
L37:
  AddInt       r254, r254, r31
  Jump         L38
L36:
  // from y in year1
  Const        r261, []
  IterPrep     r262, r242
  Len          r263, r262
  // join z in year2 on y.d_week_seq == z.d_week_seq - 53
  IterPrep     r264, r251
  Len          r265, r264
  // d_week_seq1: y.d_week_seq,
  Const        r266, "d_week_seq1"
  // sun_ratio: y.sun_sales / z.sun_sales,
  Const        r267, "sun_ratio"
  // mon_ratio: y.mon_sales / z.mon_sales,
  Const        r268, "mon_ratio"
  // from y in year1
  Const        r269, 0
L43:
  LessInt      r270, r269, r263
  JumpIfFalse  r270, L39
  Index        r271, r262, r269
  Move         r272, r271
  // join z in year2 on y.d_week_seq == z.d_week_seq - 53
  Const        r273, 0
L42:
  LessInt      r274, r273, r265
  JumpIfFalse  r274, L40
  Index        r275, r264, r273
  Move         r276, r275
  Index        r277, r272, r59
  Index        r278, r276, r59
  Const        r279, 53
  Sub          r280, r278, r279
  Equal        r281, r277, r280
  JumpIfFalse  r281, L41
  // d_week_seq1: y.d_week_seq,
  Const        r282, "d_week_seq1"
  Index        r283, r272, r59
  // sun_ratio: y.sun_sales / z.sun_sales,
  Const        r284, "sun_ratio"
  Index        r285, r272, r61
  Index        r286, r276, r61
  Div          r287, r285, r286
  // mon_ratio: y.mon_sales / z.mon_sales,
  Const        r288, "mon_ratio"
  Index        r289, r272, r62
  Index        r290, r276, r62
  Div          r291, r289, r290
  // d_week_seq1: y.d_week_seq,
  Move         r292, r282
  Move         r293, r283
  // sun_ratio: y.sun_sales / z.sun_sales,
  Move         r294, r284
  Move         r295, r287
  // mon_ratio: y.mon_sales / z.mon_sales,
  Move         r296, r288
  Move         r297, r291
  // select {
  MakeMap      r298, 3, r292
  // from y in year1
  Append       r299, r261, r298
  Move         r261, r299
L41:
  // join z in year2 on y.d_week_seq == z.d_week_seq - 53
  AddInt       r273, r273, r31
  Jump         L42
L40:
  // from y in year1
  AddInt       r269, r269, r31
  Jump         L43
L39:
  // json(result)
  JSON         r261
  // expect result == [ { d_week_seq1: 1, sun_ratio: 0.5, mon_ratio: 0.5 } ]
  Const        r300, [{"d_week_seq1": 1, "mon_ratio": 0.5, "sun_ratio": 0.5}]
  Equal        r301, r261, r300
  Expect       r301
  Return       r0
