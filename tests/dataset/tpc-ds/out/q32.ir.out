func main (regs=59)
  // let catalog_sales = [
  Const        r0, [{"cs_ext_discount_amt": 5, "cs_item_sk": 1, "cs_sold_date_sk": 1}, {"cs_ext_discount_amt": 10, "cs_item_sk": 1, "cs_sold_date_sk": 2}, {"cs_ext_discount_amt": 20, "cs_item_sk": 1, "cs_sold_date_sk": 3}]
  // let item = [
  Const        r1, [{"i_item_sk": 1, "i_manufact_id": 1}]
  // let date_dim = [
  Const        r2, [{"d_date_sk": 1, "d_year": 2000}, {"d_date_sk": 2, "d_year": 2000}, {"d_date_sk": 3, "d_year": 2000}]
  // from cs in catalog_sales
  Const        r3, []
  // where i.i_manufact_id == 1 && d.d_year == 2000
  Const        r4, "i_manufact_id"
  Const        r5, "d_year"
  // select cs.cs_ext_discount_amt
  Const        r6, "cs_ext_discount_amt"
  // from cs in catalog_sales
  IterPrep     r7, r0
  Len          r8, r7
  Const        r10, 0
  Move         r9, r10
L7:
  LessInt      r11, r9, r8
  JumpIfFalse  r11, L0
  Index        r13, r7, r9
  // join i in item on cs.cs_item_sk == i.i_item_sk
  IterPrep     r14, r1
  Len          r15, r14
  Const        r16, "cs_item_sk"
  Const        r17, "i_item_sk"
  Move         r18, r10
L6:
  LessInt      r19, r18, r15
  JumpIfFalse  r19, L1
  Index        r21, r14, r18
  Index        r22, r13, r16
  Index        r23, r21, r17
  Equal        r24, r22, r23
  JumpIfFalse  r24, L2
  // join d in date_dim on cs.cs_sold_date_sk == d.d_date_sk
  IterPrep     r25, r2
  Len          r26, r25
  Const        r27, "cs_sold_date_sk"
  Const        r28, "d_date_sk"
  Move         r29, r10
L5:
  LessInt      r30, r29, r26
  JumpIfFalse  r30, L2
  Index        r32, r25, r29
  Index        r33, r13, r27
  Index        r34, r32, r28
  Equal        r35, r33, r34
  JumpIfFalse  r35, L3
  // where i.i_manufact_id == 1 && d.d_year == 2000
  Index        r36, r21, r4
  Const        r37, 1
  Equal        r38, r36, r37
  Index        r39, r32, r5
  Const        r40, 2000
  Equal        r41, r39, r40
  JumpIfFalse  r38, L4
  Move         r38, r41
L4:
  JumpIfFalse  r38, L3
  // select cs.cs_ext_discount_amt
  Index        r42, r13, r6
  // from cs in catalog_sales
  Append       r3, r3, r42
L3:
  // join d in date_dim on cs.cs_sold_date_sk == d.d_date_sk
  Add          r29, r29, r37
  Jump         L5
L2:
  // join i in item on cs.cs_item_sk == i.i_item_sk
  Add          r18, r18, r37
  Jump         L6
L1:
  // from cs in catalog_sales
  AddInt       r9, r9, r37
  Jump         L7
L0:
  // let avg_discount = avg(filtered)
  Avg          r44, r3
  // let result = sum(from x in filtered where x > avg_discount * 1.3 select x)
  Const        r45, []
  IterPrep     r46, r3
  Len          r47, r46
  Move         r48, r10
L10:
  LessInt      r49, r48, r47
  JumpIfFalse  r49, L8
  Index        r51, r46, r48
  Const        r52, 1.3
  MulFloat     r53, r44, r52
  LessFloat    r54, r53, r51
  JumpIfFalse  r54, L9
  Append       r45, r45, r51
L9:
  AddInt       r48, r48, r37
  Jump         L10
L8:
  Sum          r56, r45
  // json(result)
  JSON         r56
  // expect result == 20.0
  Const        r57, 20
  EqualFloat   r58, r56, r57
  Expect       r58
  Return       r0
