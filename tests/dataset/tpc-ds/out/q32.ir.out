func main (regs=18)
  // let catalog_sales = [
  Const        r0, [{"cs_ext_discount_amt": 5.0, "cs_item_sk": 1, "cs_sold_date_sk": 1}, {"cs_ext_discount_amt": 10.0, "cs_item_sk": 1, "cs_sold_date_sk": 2}, {"cs_ext_discount_amt": 20.0, "cs_item_sk": 1, "cs_sold_date_sk": 3}]
L3:
  // let item = [
  Const        r1, [{"i_item_sk": 1, "i_manufact_id": 1}]
  // let date_dim = [
  Const        r2, [{"d_date_sk": 1, "d_year": 2000}, {"d_date_sk": 2, "d_year": 2000}, {"d_date_sk": 3, "d_year": 2000}]
  // from cs in catalog_sales
  Const        r3, []
L1:
  // where i.i_manufact_id == 1 && d.d_year == 2000
  Const        r4, "i_manufact_id"
  Const        r5, "d_year"
  // select cs.cs_ext_discount_amt
  Const        r6, "cs_ext_discount_amt"
L4:
  // from cs in catalog_sales
  IterPrep     r7, r0
L2:
  Len          r8, r7
  Const        r9, 0
  Move         r10, r9
L5:
  LessInt      r11, r10, r8
  JumpIfFalse  r11, L0
  Index        r8, r7, r10
  Move         r7, r8
  // join i in item on cs.cs_item_sk == i.i_item_sk
  IterPrep     r8, r1
  Len          r1, r8
  Const        r12, "cs_item_sk"
  Const        r13, "i_item_sk"
  Move         r14, r9
  LessInt      r15, r14, r1
  JumpIfFalse  r15, L1
  Index        r1, r8, r14
  Move         r15, r1
  Index        r8, r7, r12
  Index        r12, r15, r13
  Equal        r13, r8, r12
  JumpIfFalse  r13, L2
  // join d in date_dim on cs.cs_sold_date_sk == d.d_date_sk
  IterPrep     r8, r2
  Len          r12, r8
  Const        r13, "cs_sold_date_sk"
  Const        r2, "d_date_sk"
  Move         r16, r9
  LessInt      r17, r16, r12
  JumpIfFalse  r17, L2
  Index        r12, r8, r16
  Move         r17, r12
  Index        r8, r7, r13
  Index        r12, r17, r2
  Equal        r13, r8, r12
  JumpIfFalse  r13, L3
  // where i.i_manufact_id == 1 && d.d_year == 2000
  Index        r2, r15, r4
  Const        r12, 1
  Equal        r13, r2, r12
  Index        r4, r17, r5
  Const        r15, 2000
  Equal        r2, r4, r15
  Move         r5, r13
  JumpIfFalse  r5, L4
  Move         r5, r2
  JumpIfFalse  r5, L3
  // select cs.cs_ext_discount_amt
  Index        r17, r7, r6
  // from cs in catalog_sales
  Append       r4, r3, r17
  Move         r3, r4
  // join d in date_dim on cs.cs_sold_date_sk == d.d_date_sk
  Add          r16, r16, r12
  Jump         L2
  // join i in item on cs.cs_item_sk == i.i_item_sk
  Add          r14, r14, r12
  Jump         L3
  // from cs in catalog_sales
  AddInt       r10, r10, r12
  Jump         L5
L0:
  // let avg_discount = avg(filtered)
  Avg          r15, r3
  // let result = sum(from x in filtered where x > avg_discount * 1.3 select x)
  Const        r13, []
  IterPrep     r2, r3
  Len          r5, r2
  Move         r6, r9
L8:
  LessInt      r7, r6, r5
  JumpIfFalse  r7, L6
  Index        r10, r2, r6
  Move         r11, r10
  Const        r14, 1.3
  MulFloat     r1, r15, r14
  LessFloat    r16, r1, r11
  JumpIfFalse  r16, L7
  Append       r8, r13, r11
  Move         r13, r8
L7:
  AddInt       r6, r6, r12
  Jump         L8
L6:
  Sum          r17, r13
  // json(result)
  JSON         r17
  // expect result == 20.0
  Const        r4, 20.0
  EqualFloat   r3, r17, r4
  Expect       r3
  Return       r0
