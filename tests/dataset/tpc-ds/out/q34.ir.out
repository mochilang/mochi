func main (regs=210)
  // let store_sales = [
  Const        r0, [{"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}]
  // let date_dim = [
  Const        r1, [{"d_date_sk": 1, "d_dom": 2, "d_year": 2000}]
  // let store = [
  Const        r2, [{"s_county": "A", "s_store_sk": 1}]
  // let household_demographics = [
  Const        r3, [{"hd_buy_potential": ">10000", "hd_demo_sk": 1, "hd_dep_count": 3, "hd_vehicle_count": 2}, {"hd_buy_potential": ">10000", "hd_demo_sk": 2, "hd_dep_count": 1, "hd_vehicle_count": 2}]
  // let customer = [
  Const        r4, [{"c_customer_sk": 1, "c_first_name": "John", "c_last_name": "Smith", "c_preferred_cust_flag": "Y", "c_salutation": "Mr."}, {"c_customer_sk": 2, "c_first_name": "Alice", "c_last_name": "Jones", "c_preferred_cust_flag": "N", "c_salutation": "Ms."}]
  // from ss in store_sales
  Const        r5, []
  // group by {ticket: ss.ss_ticket_number, cust: ss.ss_customer_sk} into g
  Const        r6, "ticket"
  Const        r7, "ss_ticket_number"
  Const        r8, "cust"
  Const        r9, "ss_customer_sk"
  // where (d.d_dom >= 1 && d.d_dom <= 3) && hd.hd_buy_potential == ">10000" && hd.hd_vehicle_count > 0 && (hd.hd_dep_count / hd.hd_vehicle_count) > 1.2 && d.d_year == 2000 && s.s_county == "A"
  Const        r10, "d_dom"
  Const        r11, "hd_buy_potential"
  Const        r12, "hd_vehicle_count"
  Const        r13, "hd_dep_count"
  Const        r14, "d_year"
  Const        r15, "s_county"
  // select {ss_ticket_number: g.key.ticket, ss_customer_sk: g.key.cust, cnt: count(g)}
  Const        r16, "key"
  Const        r17, "cnt"
  // from ss in store_sales
  MakeMap      r18, 0, r0
  Const        r19, []
  IterPrep     r21, r0
  Len          r22, r21
  Const        r23, 0
L11:
  LessInt      r24, r23, r22
  JumpIfFalse  r24, L0
  Index        r26, r21, r23
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  IterPrep     r27, r1
  Len          r28, r27
  Const        r29, 0
L10:
  LessInt      r30, r29, r28
  JumpIfFalse  r30, L1
  Index        r32, r27, r29
  Const        r33, "ss_sold_date_sk"
  Index        r34, r26, r33
  Const        r35, "d_date_sk"
  Index        r36, r32, r35
  Equal        r37, r34, r36
  JumpIfFalse  r37, L2
  // join s in store on ss.ss_store_sk == s.s_store_sk
  IterPrep     r38, r2
  Len          r39, r38
  Const        r40, 0
L9:
  LessInt      r41, r40, r39
  JumpIfFalse  r41, L2
  Index        r43, r38, r40
  Const        r44, "ss_store_sk"
  Index        r45, r26, r44
  Const        r46, "s_store_sk"
  Index        r47, r43, r46
  Equal        r48, r45, r47
  JumpIfFalse  r48, L3
  // join hd in household_demographics on ss.ss_hdemo_sk == hd.hd_demo_sk
  IterPrep     r49, r3
  Len          r50, r49
  Const        r51, 0
L8:
  LessInt      r52, r51, r50
  JumpIfFalse  r52, L3
  Index        r54, r49, r51
  Const        r55, "ss_hdemo_sk"
  Index        r56, r26, r55
  Const        r57, "hd_demo_sk"
  Index        r58, r54, r57
  Equal        r59, r56, r58
  JumpIfFalse  r59, L4
  // where (d.d_dom >= 1 && d.d_dom <= 3) && hd.hd_buy_potential == ">10000" && hd.hd_vehicle_count > 0 && (hd.hd_dep_count / hd.hd_vehicle_count) > 1.2 && d.d_year == 2000 && s.s_county == "A"
  Index        r60, r32, r10
  Const        r61, 1
  LessEq       r62, r61, r60
  Index        r63, r32, r10
  Const        r64, 3
  LessEq       r65, r63, r64
  JumpIfFalse  r62, L5
  Move         r62, r65
L5:
  Index        r66, r54, r12
  Const        r67, 0
  Less         r68, r67, r66
  Index        r69, r54, r13
  Index        r70, r54, r12
  Div          r71, r69, r70
  Const        r72, 1.2
  LessFloat    r73, r72, r71
  Index        r74, r54, r11
  Const        r75, ">10000"
  Equal        r76, r74, r75
  Index        r77, r32, r14
  Const        r78, 2000
  Equal        r79, r77, r78
  Index        r80, r43, r15
  Const        r81, "A"
  Equal        r82, r80, r81
  JumpIfFalse  r62, L6
  Move         r62, r76
  JumpIfFalse  r62, L6
  Move         r62, r68
  JumpIfFalse  r62, L6
  Move         r62, r73
  JumpIfFalse  r62, L6
  Move         r62, r79
  JumpIfFalse  r62, L6
  Move         r62, r82
L6:
  JumpIfFalse  r62, L4
  // from ss in store_sales
  Const        r83, "ss"
  Move         r84, r26
  Const        r85, "d"
  Move         r86, r32
  Const        r87, "s"
  Move         r88, r43
  Const        r89, "hd"
  Move         r90, r54
  MakeMap      r91, 4, r83
  // group by {ticket: ss.ss_ticket_number, cust: ss.ss_customer_sk} into g
  Const        r92, "ticket"
  Index        r93, r26, r7
  Const        r94, "cust"
  Index        r95, r26, r9
  Move         r96, r92
  Move         r97, r93
  Move         r98, r94
  Move         r99, r95
  MakeMap      r100, 2, r96
  Str          r101, r100
  In           r102, r101, r18
  JumpIfTrue   r102, L7
  // from ss in store_sales
  Const        r103, []
  Const        r104, "__group__"
  Const        r105, true
  Const        r106, "key"
  // group by {ticket: ss.ss_ticket_number, cust: ss.ss_customer_sk} into g
  Move         r107, r100
  // from ss in store_sales
  Const        r108, "items"
  Move         r109, r103
  Const        r110, "count"
  Const        r111, 0
  Move         r112, r104
  Move         r113, r105
  Move         r114, r106
  Move         r115, r107
  Move         r116, r108
  Move         r117, r109
  Move         r118, r110
  Move         r119, r111
  MakeMap      r120, 4, r112
  SetIndex     r18, r101, r120
  Append       r19, r19, r120
L7:
  Const        r122, "items"
  Index        r123, r18, r101
  Index        r124, r123, r122
  Append       r125, r124, r91
  SetIndex     r123, r122, r125
  Const        r126, "count"
  Index        r127, r123, r126
  AddInt       r128, r127, r61
  SetIndex     r123, r126, r128
L4:
  // join hd in household_demographics on ss.ss_hdemo_sk == hd.hd_demo_sk
  AddInt       r51, r51, r61
  Jump         L8
L3:
  // join s in store on ss.ss_store_sk == s.s_store_sk
  AddInt       r40, r40, r61
  Jump         L9
L2:
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  AddInt       r29, r29, r61
  Jump         L10
L1:
  // from ss in store_sales
  AddInt       r23, r23, r61
  Jump         L11
L0:
  Move         r129, r67
  Len          r130, r19
L13:
  LessInt      r131, r129, r130
  JumpIfFalse  r131, L12
  Index        r133, r19, r129
  // select {ss_ticket_number: g.key.ticket, ss_customer_sk: g.key.cust, cnt: count(g)}
  Const        r134, "ss_ticket_number"
  Index        r135, r133, r16
  Index        r136, r135, r6
  Const        r137, "ss_customer_sk"
  Index        r138, r133, r16
  Index        r139, r138, r8
  Const        r140, "cnt"
  Index        r141, r133, r126
  Move         r142, r134
  Move         r143, r136
  Move         r144, r137
  Move         r145, r139
  Move         r146, r140
  Move         r147, r141
  MakeMap      r148, 3, r142
  // from ss in store_sales
  Append       r5, r5, r148
  AddInt       r129, r129, r61
  Jump         L13
L12:
  // from dn1 in dn
  Const        r150, []
  IterPrep     r151, r5
  Len          r152, r151
  // join c in customer on dn1.ss_customer_sk == c.c_customer_sk
  IterPrep     r153, r4
  Len          r154, r153
  Const        r155, "c_customer_sk"
  // select {c_last_name: c.c_last_name, c_first_name: c.c_first_name, c_salutation: c.c_salutation, c_preferred_cust_flag: c.c_preferred_cust_flag, ss_ticket_number: dn1.ss_ticket_number, cnt: dn1.cnt}
  Const        r156, "c_last_name"
  Const        r157, "c_first_name"
  Const        r158, "c_salutation"
  Const        r159, "c_preferred_cust_flag"
  // from dn1 in dn
  Const        r160, 0
L19:
  LessInt      r161, r160, r152
  JumpIfFalse  r161, L14
  Index        r163, r151, r160
  // join c in customer on dn1.ss_customer_sk == c.c_customer_sk
  Const        r164, 0
L18:
  LessInt      r165, r164, r154
  JumpIfFalse  r165, L15
  Index        r167, r153, r164
  Index        r168, r163, r9
  Index        r169, r167, r155
  Equal        r170, r168, r169
  JumpIfFalse  r170, L16
  // where dn1.cnt >= 15 && dn1.cnt <= 20
  Index        r171, r163, r17
  Const        r172, 15
  LessEq       r173, r172, r171
  Index        r174, r163, r17
  Const        r175, 20
  LessEq       r176, r174, r175
  JumpIfFalse  r173, L17
  Move         r173, r176
L17:
  JumpIfFalse  r173, L16
  // select {c_last_name: c.c_last_name, c_first_name: c.c_first_name, c_salutation: c.c_salutation, c_preferred_cust_flag: c.c_preferred_cust_flag, ss_ticket_number: dn1.ss_ticket_number, cnt: dn1.cnt}
  Const        r177, "c_last_name"
  Index        r178, r167, r156
  Const        r179, "c_first_name"
  Index        r180, r167, r157
  Const        r181, "c_salutation"
  Index        r182, r167, r158
  Const        r183, "c_preferred_cust_flag"
  Index        r184, r167, r159
  Const        r185, "ss_ticket_number"
  Index        r186, r163, r7
  Const        r187, "cnt"
  Index        r188, r163, r17
  Move         r189, r177
  Move         r190, r178
  Move         r191, r179
  Move         r192, r180
  Move         r193, r181
  Move         r194, r182
  Move         r195, r183
  Move         r196, r184
  Move         r197, r185
  Move         r198, r186
  Move         r199, r187
  Move         r200, r188
  MakeMap      r201, 6, r189
  // sort by c.c_last_name
  Index        r203, r167, r156
  // from dn1 in dn
  Move         r204, r201
  MakeList     r205, 2, r203
  Append       r150, r150, r205
L16:
  // join c in customer on dn1.ss_customer_sk == c.c_customer_sk
  AddInt       r164, r164, r61
  Jump         L18
L15:
  // from dn1 in dn
  AddInt       r160, r160, r61
  Jump         L19
L14:
  // sort by c.c_last_name
  Sort         r150, r150
  // json(result)
  JSON         r150
  // expect result == [{c_last_name: "Smith", c_first_name: "John", c_salutation: "Mr.", c_preferred_cust_flag: "Y", ss_ticket_number: 1, cnt: 16}]
  Const        r208, [{"c_first_name": "John", "c_last_name": "Smith", "c_preferred_cust_flag": "Y", "c_salutation": "Mr.", "cnt": 16, "ss_ticket_number": 1}]
  Equal        r209, r150, r208
  Expect       r209
  Return       r0
