func main (regs=221)
  // let store_sales = [
  Const        r0, [{"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}]
  // let date_dim = [
  Const        r1, [{"d_date_sk": 1, "d_dom": 2, "d_year": 2000}]
  // let store = [
  Const        r2, [{"s_county": "A", "s_store_sk": 1}]
  // let household_demographics = [
  Const        r3, [{"hd_buy_potential": ">10000", "hd_demo_sk": 1, "hd_dep_count": 3, "hd_vehicle_count": 2}, {"hd_buy_potential": ">10000", "hd_demo_sk": 2, "hd_dep_count": 1, "hd_vehicle_count": 2}]
  // let customer = [
  Const        r4, [{"c_customer_sk": 1, "c_first_name": "John", "c_last_name": "Smith", "c_preferred_cust_flag": "Y", "c_salutation": "Mr."}, {"c_customer_sk": 2, "c_first_name": "Alice", "c_last_name": "Jones", "c_preferred_cust_flag": "N", "c_salutation": "Ms."}]
  // from ss in store_sales
  Const        r5, []
  // group by {ticket: ss.ss_ticket_number, cust: ss.ss_customer_sk} into g
  Const        r6, "ticket"
  Const        r7, "ss_ticket_number"
  Const        r8, "cust"
  Const        r9, "ss_customer_sk"
  // where (d.d_dom >= 1 && d.d_dom <= 3) && hd.hd_buy_potential == ">10000" && hd.hd_vehicle_count > 0 && (hd.hd_dep_count / hd.hd_vehicle_count) > 1.2 && d.d_year == 2000 && s.s_county == "A"
  Const        r10, "d_dom"
  Const        r11, "hd_buy_potential"
  Const        r12, "hd_vehicle_count"
  Const        r13, "hd_dep_count"
  Const        r14, "d_year"
  Const        r15, "s_county"
  // select {ss_ticket_number: g.key.ticket, ss_customer_sk: g.key.cust, cnt: count(g)}
  Const        r16, "key"
  Const        r17, "cnt"
  // from ss in store_sales
  MakeMap      r18, 0, r0
  Const        r20, []
  Move         r19, r20
  IterPrep     r21, r0
  Len          r22, r21
  Const        r23, 0
L15:
  LessInt      r24, r23, r22
  JumpIfFalse  r24, L0
  Index        r25, r21, r23
  Move         r26, r25
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  IterPrep     r27, r1
  Len          r28, r27
  Const        r29, 0
L14:
  LessInt      r30, r29, r28
  JumpIfFalse  r30, L1
  Index        r31, r27, r29
  Move         r32, r31
  Const        r33, "ss_sold_date_sk"
  Index        r34, r26, r33
  Const        r35, "d_date_sk"
  Index        r36, r32, r35
  Equal        r37, r34, r36
  JumpIfFalse  r37, L2
  // join s in store on ss.ss_store_sk == s.s_store_sk
  IterPrep     r38, r2
  Len          r39, r38
  Const        r40, 0
L13:
  LessInt      r41, r40, r39
  JumpIfFalse  r41, L2
  Index        r42, r38, r40
  Move         r43, r42
  Const        r44, "ss_store_sk"
  Index        r45, r26, r44
  Const        r46, "s_store_sk"
  Index        r47, r43, r46
  Equal        r48, r45, r47
  JumpIfFalse  r48, L3
  // join hd in household_demographics on ss.ss_hdemo_sk == hd.hd_demo_sk
  IterPrep     r49, r3
  Len          r50, r49
  Const        r51, 0
L12:
  LessInt      r52, r51, r50
  JumpIfFalse  r52, L3
  Index        r53, r49, r51
  Move         r54, r53
  Const        r55, "ss_hdemo_sk"
  Index        r56, r26, r55
  Const        r57, "hd_demo_sk"
  Index        r58, r54, r57
  Equal        r59, r56, r58
  JumpIfFalse  r59, L4
  // where (d.d_dom >= 1 && d.d_dom <= 3) && hd.hd_buy_potential == ">10000" && hd.hd_vehicle_count > 0 && (hd.hd_dep_count / hd.hd_vehicle_count) > 1.2 && d.d_year == 2000 && s.s_county == "A"
  Index        r60, r32, r10
  Const        r61, 1
  LessEq       r62, r61, r60
  Index        r63, r32, r10
  Const        r64, 3
  LessEq       r65, r63, r64
  Move         r66, r62
  JumpIfFalse  r66, L5
  Move         r66, r65
L5:
  Index        r67, r54, r12
  Const        r68, 0
  Less         r69, r68, r67
  Index        r70, r54, r13
  Index        r71, r54, r12
  Div          r72, r70, r71
  Const        r73, 1.2
  LessFloat    r74, r73, r72
  Index        r75, r54, r11
  Const        r76, ">10000"
  Equal        r77, r75, r76
  Index        r78, r32, r14
  Const        r79, 2000
  Equal        r80, r78, r79
  Index        r81, r43, r15
  Const        r82, "A"
  Equal        r83, r81, r82
  Move         r84, r66
  JumpIfFalse  r84, L6
  Move         r84, r77
L6:
  Move         r85, r84
  JumpIfFalse  r85, L7
  Move         r85, r69
L7:
  Move         r86, r85
  JumpIfFalse  r86, L8
  Move         r86, r74
L8:
  Move         r87, r86
  JumpIfFalse  r87, L9
  Move         r87, r80
L9:
  Move         r88, r87
  JumpIfFalse  r88, L10
  Move         r88, r83
L10:
  JumpIfFalse  r88, L4
  // from ss in store_sales
  Const        r89, "ss"
  Move         r90, r26
  Const        r91, "d"
  Move         r92, r32
  Const        r93, "s"
  Move         r94, r43
  Const        r95, "hd"
  Move         r96, r54
  Move         r97, r89
  Move         r98, r90
  Move         r99, r91
  Move         r100, r92
  Move         r101, r93
  Move         r102, r94
  Move         r103, r95
  Move         r104, r96
  MakeMap      r105, 4, r97
  // group by {ticket: ss.ss_ticket_number, cust: ss.ss_customer_sk} into g
  Const        r106, "ticket"
  Index        r107, r26, r7
  Const        r108, "cust"
  Index        r109, r26, r9
  Move         r110, r106
  Move         r111, r107
  Move         r112, r108
  Move         r113, r109
  MakeMap      r114, 2, r110
  Str          r115, r114
  In           r116, r115, r18
  JumpIfTrue   r116, L11
  // from ss in store_sales
  Const        r117, []
  Const        r118, "__group__"
  Const        r119, true
  // group by {ticket: ss.ss_ticket_number, cust: ss.ss_customer_sk} into g
  Move         r120, r114
  // from ss in store_sales
  Const        r121, "items"
  Move         r122, r117
  Const        r123, "count"
  Move         r124, r118
  Move         r125, r119
  Move         r126, r16
  Move         r127, r120
  Move         r128, r121
  Move         r129, r122
  Move         r130, r123
  Move         r131, r68
  MakeMap      r132, 4, r124
  SetIndex     r18, r115, r132
  Append       r133, r19, r132
  Move         r19, r133
L11:
  Index        r134, r18, r115
  Index        r135, r134, r121
  Append       r136, r135, r105
  SetIndex     r134, r121, r136
  Index        r137, r134, r123
  AddInt       r138, r137, r61
  SetIndex     r134, r123, r138
L4:
  // join hd in household_demographics on ss.ss_hdemo_sk == hd.hd_demo_sk
  AddInt       r51, r51, r61
  Jump         L12
L3:
  // join s in store on ss.ss_store_sk == s.s_store_sk
  AddInt       r40, r40, r61
  Jump         L13
L2:
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  AddInt       r29, r29, r61
  Jump         L14
L1:
  // from ss in store_sales
  AddInt       r23, r23, r61
  Jump         L15
L0:
  Move         r139, r68
  Len          r140, r19
L17:
  LessInt      r141, r139, r140
  JumpIfFalse  r141, L16
  Index        r142, r19, r139
  Move         r143, r142
  // select {ss_ticket_number: g.key.ticket, ss_customer_sk: g.key.cust, cnt: count(g)}
  Const        r144, "ss_ticket_number"
  Index        r145, r143, r16
  Index        r146, r145, r6
  Const        r147, "ss_customer_sk"
  Index        r148, r143, r16
  Index        r149, r148, r8
  Const        r150, "cnt"
  Index        r151, r143, r123
  Move         r152, r144
  Move         r153, r146
  Move         r154, r147
  Move         r155, r149
  Move         r156, r150
  Move         r157, r151
  MakeMap      r158, 3, r152
  // from ss in store_sales
  Append       r159, r5, r158
  Move         r5, r159
  AddInt       r139, r139, r61
  Jump         L17
L16:
  // from dn1 in dn
  Const        r160, []
  IterPrep     r161, r5
  Len          r162, r161
  // join c in customer on dn1.ss_customer_sk == c.c_customer_sk
  IterPrep     r163, r4
  Len          r164, r163
  Const        r165, "c_customer_sk"
  // select {c_last_name: c.c_last_name, c_first_name: c.c_first_name, c_salutation: c.c_salutation, c_preferred_cust_flag: c.c_preferred_cust_flag, ss_ticket_number: dn1.ss_ticket_number, cnt: dn1.cnt}
  Const        r166, "c_last_name"
  Const        r167, "c_first_name"
  Const        r168, "c_salutation"
  Const        r169, "c_preferred_cust_flag"
  // from dn1 in dn
  Const        r170, 0
L23:
  LessInt      r171, r170, r162
  JumpIfFalse  r171, L18
  Index        r172, r161, r170
  Move         r173, r172
  // join c in customer on dn1.ss_customer_sk == c.c_customer_sk
  Const        r174, 0
L22:
  LessInt      r175, r174, r164
  JumpIfFalse  r175, L19
  Index        r176, r163, r174
  Move         r177, r176
  Index        r178, r173, r9
  Index        r179, r177, r165
  Equal        r180, r178, r179
  JumpIfFalse  r180, L20
  // where dn1.cnt >= 15 && dn1.cnt <= 20
  Index        r181, r173, r17
  Const        r182, 15
  LessEq       r183, r182, r181
  Index        r184, r173, r17
  Const        r185, 20
  LessEq       r186, r184, r185
  Move         r187, r183
  JumpIfFalse  r187, L21
  Move         r187, r186
L21:
  JumpIfFalse  r187, L20
  // select {c_last_name: c.c_last_name, c_first_name: c.c_first_name, c_salutation: c.c_salutation, c_preferred_cust_flag: c.c_preferred_cust_flag, ss_ticket_number: dn1.ss_ticket_number, cnt: dn1.cnt}
  Const        r188, "c_last_name"
  Index        r189, r177, r166
  Const        r190, "c_first_name"
  Index        r191, r177, r167
  Const        r192, "c_salutation"
  Index        r193, r177, r168
  Const        r194, "c_preferred_cust_flag"
  Index        r195, r177, r169
  Const        r196, "ss_ticket_number"
  Index        r197, r173, r7
  Const        r198, "cnt"
  Index        r199, r173, r17
  Move         r200, r188
  Move         r201, r189
  Move         r202, r190
  Move         r203, r191
  Move         r204, r192
  Move         r205, r193
  Move         r206, r194
  Move         r207, r195
  Move         r208, r196
  Move         r209, r197
  Move         r210, r198
  Move         r211, r199
  MakeMap      r212, 6, r200
  // sort by c.c_last_name
  Index        r213, r177, r166
  Move         r214, r213
  // from dn1 in dn
  Move         r215, r212
  MakeList     r216, 2, r214
  Append       r217, r160, r216
  Move         r160, r217
L20:
  // join c in customer on dn1.ss_customer_sk == c.c_customer_sk
  AddInt       r174, r174, r61
  Jump         L22
L19:
  // from dn1 in dn
  AddInt       r170, r170, r61
  Jump         L23
L18:
  // sort by c.c_last_name
  Sort         r218, r160
  // from dn1 in dn
  Move         r160, r218
  // json(result)
  JSON         r160
  // expect result == [{c_last_name: "Smith", c_first_name: "John", c_salutation: "Mr.", c_preferred_cust_flag: "Y", ss_ticket_number: 1, cnt: 16}]
  Const        r219, [{"c_first_name": "John", "c_last_name": "Smith", "c_preferred_cust_flag": "Y", "c_salutation": "Mr.", "cnt": 16, "ss_ticket_number": 1}]
  Equal        r220, r160, r219
  Expect       r220
  Return       r0
