func main (regs=68)
  // let store_sales = [
  Const        r0, [{"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 1, "ss_hdemo_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}, {"ss_customer_sk": 2, "ss_hdemo_sk": 2, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}]
L9:
  // let date_dim = [
  Const        r1, [{"d_date_sk": 1, "d_dom": 2, "d_year": 2000}]
  // let store = [
  Const        r2, [{"s_county": "A", "s_store_sk": 1}]
L2:
  // let household_demographics = [
  Const        r3, [{"hd_buy_potential": ">10000", "hd_demo_sk": 1, "hd_dep_count": 3, "hd_vehicle_count": 2}, {"hd_buy_potential": ">10000", "hd_demo_sk": 2, "hd_dep_count": 1, "hd_vehicle_count": 2}]
  // let customer = [
  Const        r4, [{"c_customer_sk": 1, "c_first_name": "John", "c_last_name": "Smith", "c_preferred_cust_flag": "Y", "c_salutation": "Mr."}, {"c_customer_sk": 2, "c_first_name": "Alice", "c_last_name": "Jones", "c_preferred_cust_flag": "N", "c_salutation": "Ms."}]
  // from ss in store_sales
  Const        r5, []
  // group by {ticket: ss.ss_ticket_number, cust: ss.ss_customer_sk} into g
  Const        r6, "ticket"
  Const        r7, "ss_ticket_number"
  Const        r8, "cust"
  Const        r9, "ss_customer_sk"
L5:
  // where (d.d_dom >= 1 && d.d_dom <= 3) && hd.hd_buy_potential == ">10000" && hd.hd_vehicle_count > 0 && (hd.hd_dep_count / hd.hd_vehicle_count) > 1.2 && d.d_year == 2000 && s.s_county == "A"
  Const        r10, "d_dom"
  Const        r11, "hd_buy_potential"
  Const        r12, "hd_vehicle_count"
  Const        r13, "hd_dep_count"
  Const        r14, "d_year"
  Const        r15, "s_county"
  // select {ss_ticket_number: g.key.ticket, ss_customer_sk: g.key.cust, cnt: count(g)}
  Const        r16, "key"
  Const        r17, "cnt"
L4:
  // from ss in store_sales
  MakeMap      r18, 0, r0
  Const        r19, []
  Move         r20, r19
  IterPrep     r21, r0
  Len          r22, r21
L1:
  Const        r23, 0
L10:
  LessInt      r24, r23, r22
L0:
  JumpIfFalse  r24, L0
L3:
  Index        r22, r21, r23
L8:
  Move         r21, r22
L7:
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  IterPrep     r22, r1
  Len          r1, r22
  Const        r25, 0
  LessInt      r26, r25, r1
  JumpIfFalse  r26, L1
  Index        r1, r22, r25
  Move         r26, r1
  Const        r22, "ss_sold_date_sk"
  Index        r27, r21, r22
  Const        r22, "d_date_sk"
  Index        r28, r26, r22
  Equal        r22, r27, r28
  JumpIfFalse  r22, L2
  // join s in store on ss.ss_store_sk == s.s_store_sk
  IterPrep     r27, r2
L11:
  Len          r28, r27
  Const        r22, 0
  LessInt      r2, r22, r28
  JumpIfFalse  r2, L2
  Index        r28, r27, r22
L12:
  Move         r2, r28
  Const        r27, "ss_store_sk"
  Index        r28, r21, r27
  Const        r29, "s_store_sk"
L17:
  Index        r30, r2, r29
  Equal        r29, r28, r30
  JumpIfFalse  r29, L3
  // join hd in household_demographics on ss.ss_hdemo_sk == hd.hd_demo_sk
  IterPrep     r28, r3
L6:
  Len          r30, r28
  Const        r29, 0
  LessInt      r3, r29, r30
  JumpIfFalse  r3, L3
  Index        r30, r28, r29
  Move         r3, r30
  Const        r28, "ss_hdemo_sk"
  Index        r30, r21, r28
  Const        r28, "hd_demo_sk"
L18:
  Index        r31, r3, r28
  Equal        r32, r30, r31
  JumpIfFalse  r32, L4
  // where (d.d_dom >= 1 && d.d_dom <= 3) && hd.hd_buy_potential == ">10000" && hd.hd_vehicle_count > 0 && (hd.hd_dep_count / hd.hd_vehicle_count) > 1.2 && d.d_year == 2000 && s.s_county == "A"
  Index        r30, r26, r10
  Const        r31, 1
  LessEq       r32, r31, r30
  Index        r30, r26, r10
  Const        r10, 3
  LessEq       r33, r30, r10
  Move         r30, r32
  JumpIfFalse  r30, L5
  Move         r30, r33
  Index        r10, r3, r12
  Const        r32, 0
  Less         r33, r32, r10
  Index        r10, r3, r13
  Index        r13, r3, r12
  Div          r12, r10, r13
  Const        r10, 1.2
  LessFloat    r13, r10, r12
  Index        r12, r3, r11
  Const        r10, ">10000"
  Equal        r11, r12, r10
  Index        r12, r26, r14
  Const        r10, 2000
  Equal        r14, r12, r10
  Index        r12, r2, r15
  Const        r10, "A"
  Equal        r15, r12, r10
  Move         r12, r30
  JumpIfFalse  r12, L5
  Move         r12, r11
  JumpIfFalse  r12, L5
  Move         r12, r33
  JumpIfFalse  r12, L5
  Move         r12, r13
  JumpIfFalse  r12, L5
  Move         r12, r14
  JumpIfFalse  r12, L5
  Move         r12, r15
  JumpIfFalse  r12, L4
  // from ss in store_sales
  Const        r10, "ss"
  Move         r30, r21
  Const        r33, "d"
  Move         r13, r26
  Const        r11, "s"
  Move         r14, r2
  Const        r15, "hd"
  Move         r12, r3
  Move         r34, r10
  Move         r35, r30
  Move         r36, r33
  Move         r37, r13
  Move         r38, r11
  Move         r39, r14
  Move         r40, r15
  Move         r41, r12
  MakeMap      r26, 4, r34
  // group by {ticket: ss.ss_ticket_number, cust: ss.ss_customer_sk} into g
  Const        r2, "ticket"
  Index        r3, r21, r7
  Const        r10, "cust"
  Index        r30, r21, r9
  Move         r34, r2
  Move         r35, r3
  Move         r36, r10
  Move         r37, r30
  MakeMap      r33, 2, r34
  Str          r13, r33
  In           r11, r13, r18
  JumpIfTrue   r11, L6
  // from ss in store_sales
  Const        r14, "__group__"
  Const        r15, true
  // group by {ticket: ss.ss_ticket_number, cust: ss.ss_customer_sk} into g
  Move         r12, r33
  // from ss in store_sales
  Const        r38, "items"
  Move         r39, r19
  Const        r40, "count"
  Move         r42, r14
  Move         r43, r15
  Move         r44, r16
  Move         r45, r12
  Move         r46, r38
  Move         r47, r39
  Move         r48, r40
  Move         r49, r32
  MakeMap      r41, 4, r42
  SetIndex     r18, r13, r41
  Append       r21, r20, r41
  Move         r20, r21
  Index        r2, r18, r13
  Index        r3, r2, r38
  Append       r10, r3, r26
  SetIndex     r2, r38, r10
  Index        r30, r2, r40
  AddInt       r34, r30, r31
  SetIndex     r2, r40, r34
  // join hd in household_demographics on ss.ss_hdemo_sk == hd.hd_demo_sk
  AddInt       r29, r29, r31
  Jump         L7
  // join s in store on ss.ss_store_sk == s.s_store_sk
  AddInt       r22, r22, r31
  Jump         L8
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  AddInt       r25, r25, r31
  Jump         L9
  // from ss in store_sales
  AddInt       r23, r23, r31
  Jump         L10
  Move         r35, r32
  Len          r36, r20
  LessInt      r37, r35, r36
  JumpIfFalse  r37, L11
  Index        r11, r20, r35
  Move         r33, r11
  // select {ss_ticket_number: g.key.ticket, ss_customer_sk: g.key.cust, cnt: count(g)}
  Const        r19, "ss_ticket_number"
  Index        r14, r33, r16
  Index        r15, r14, r6
  Const        r12, "ss_customer_sk"
  Index        r39, r33, r16
  Index        r42, r39, r8
  Const        r43, "cnt"
  Index        r44, r33, r40
  Move         r50, r19
  Move         r51, r15
  Move         r52, r12
  Move         r53, r42
  Move         r54, r43
  Move         r55, r44
  MakeMap      r45, 3, r50
  // from ss in store_sales
  Append       r46, r5, r45
  Move         r5, r46
  AddInt       r35, r35, r31
  Jump         L12
  // from dn1 in dn
  Const        r48, []
  IterPrep     r49, r5
  Len          r41, r49
  // join c in customer on dn1.ss_customer_sk == c.c_customer_sk
  IterPrep     r21, r4
  Len          r18, r21
  Const        r13, "c_customer_sk"
  // select {c_last_name: c.c_last_name, c_first_name: c.c_first_name, c_salutation: c.c_salutation, c_preferred_cust_flag: c.c_preferred_cust_flag, ss_ticket_number: dn1.ss_ticket_number, cnt: dn1.cnt}
  Const        r26, "c_last_name"
  Const        r38, "c_first_name"
  Const        r3, "c_salutation"
  Const        r10, "c_preferred_cust_flag"
  // from dn1 in dn
  Const        r23, 0
  LessInt      r24, r23, r41
  JumpIfFalse  r24, L13
  Index        r25, r49, r23
  Move         r1, r25
  // join c in customer on dn1.ss_customer_sk == c.c_customer_sk
  Const        r47, 0
  LessInt      r22, r47, r18
  JumpIfFalse  r22, L14
  Index        r27, r21, r47
  Move         r29, r27
  Index        r28, r1, r9
  Index        r2, r29, r13
  Equal        r30, r28, r2
  JumpIfFalse  r30, L15
  // where dn1.cnt >= 15 && dn1.cnt <= 20
  Index        r34, r1, r17
  Const        r32, 15
  LessEq       r36, r32, r34
  Index        r37, r1, r17
  Const        r20, 20
  LessEq       r11, r37, r20
  Move         r6, r36
  JumpIfFalse  r6, L16
  Move         r6, r11
L16:
  JumpIfFalse  r6, L15
  // select {c_last_name: c.c_last_name, c_first_name: c.c_first_name, c_salutation: c.c_salutation, c_preferred_cust_flag: c.c_preferred_cust_flag, ss_ticket_number: dn1.ss_ticket_number, cnt: dn1.cnt}
  Const        r14, "c_last_name"
  Index        r16, r29, r26
  Const        r8, "c_first_name"
  Index        r39, r29, r38
  Const        r40, "c_salutation"
  Index        r33, r29, r3
  Const        r19, "c_preferred_cust_flag"
  Index        r15, r29, r10
  Const        r12, "ss_ticket_number"
  Index        r42, r1, r7
  Const        r43, "cnt"
  Index        r44, r1, r17
  Move         r56, r14
  Move         r57, r16
  Move         r58, r8
  Move         r59, r39
  Move         r60, r40
  Move         r61, r33
  Move         r62, r19
  Move         r63, r15
  Move         r64, r12
  Move         r65, r42
  Move         r66, r43
  Move         r67, r44
  MakeMap      r50, 6, r56
  // sort by c.c_last_name
  Index        r51, r29, r26
  Move         r52, r51
  // from dn1 in dn
  Move         r53, r50
  MakeList     r54, 2, r52
  Append       r55, r48, r54
  Move         r48, r55
L15:
  // join c in customer on dn1.ss_customer_sk == c.c_customer_sk
  AddInt       r47, r47, r31
  Jump         L17
L14:
  // from dn1 in dn
  AddInt       r23, r23, r31
  Jump         L18
L13:
  // sort by c.c_last_name
  Sort         r35, r48
  // from dn1 in dn
  Move         r48, r35
  // json(result)
  JSON         r48
  // expect result == [{c_last_name: "Smith", c_first_name: "John", c_salutation: "Mr.", c_preferred_cust_flag: "Y", ss_ticket_number: 1, cnt: 16}]
  Const        r45, [{"c_first_name": "John", "c_last_name": "Smith", "c_preferred_cust_flag": "Y", "c_salutation": "Mr.", "cnt": 16, "ss_ticket_number": 1}]
  Equal        r46, r48, r45
  Expect       r46
  Return       r0
