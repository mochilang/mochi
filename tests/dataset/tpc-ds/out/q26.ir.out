func main (regs=196)
  // let catalog_sales = [
  Const        r0, [{"cs_bill_cdemo_sk": 1, "cs_coupon_amt": 5, "cs_item_sk": 1, "cs_list_price": 100, "cs_promo_sk": 1, "cs_quantity": 10, "cs_sales_price": 95, "cs_sold_date_sk": 1}, {"cs_bill_cdemo_sk": 2, "cs_coupon_amt": 2, "cs_item_sk": 2, "cs_list_price": 50, "cs_promo_sk": 2, "cs_quantity": 5, "cs_sales_price": 48, "cs_sold_date_sk": 1}]
  // let customer_demographics = [
  Const        r1, [{"cd_demo_sk": 1, "cd_education_status": "College", "cd_gender": "M", "cd_marital_status": "S"}, {"cd_demo_sk": 2, "cd_education_status": "High School", "cd_gender": "F", "cd_marital_status": "M"}]
  // let date_dim = [ { d_date_sk: 1, d_year: 2000 } ]
  Const        r2, [{"d_date_sk": 1, "d_year": 2000}]
  // let item = [ { i_item_sk: 1, i_item_id: "ITEM1" }, { i_item_sk: 2, i_item_id: "ITEM2" } ]
  Const        r3, [{"i_item_id": "ITEM1", "i_item_sk": 1}, {"i_item_id": "ITEM2", "i_item_sk": 2}]
  // let promotion = [ { p_promo_sk: 1, p_channel_email: "N", p_channel_event: "Y" }, { p_promo_sk: 2, p_channel_email: "Y", p_channel_event: "N" } ]
  Const        r4, [{"p_channel_email": "N", "p_channel_event": "Y", "p_promo_sk": 1}, {"p_channel_email": "Y", "p_channel_event": "N", "p_promo_sk": 2}]
  // from cs in catalog_sales
  Const        r5, []
  // group by i.i_item_id into g
  Const        r6, "i_item_id"
  // where cd.cd_gender == "M" && cd.cd_marital_status == "S" && cd.cd_education_status == "College" && (p.p_channel_email == "N" || p.p_channel_event == "N") && d.d_year == 2000
  Const        r7, "cd_gender"
  Const        r8, "cd_marital_status"
  Const        r9, "cd_education_status"
  Const        r10, "p_channel_email"
  Const        r11, "p_channel_event"
  Const        r12, "d_year"
  // i_item_id: g.key,
  Const        r13, "key"
  // agg1: avg(from x in g select x.cs_quantity),
  Const        r14, "agg1"
  Const        r15, "cs_quantity"
  // agg2: avg(from x in g select x.cs_list_price),
  Const        r16, "agg2"
  Const        r17, "cs_list_price"
  // agg3: avg(from x in g select x.cs_coupon_amt),
  Const        r18, "agg3"
  Const        r19, "cs_coupon_amt"
  // agg4: avg(from x in g select x.cs_sales_price)
  Const        r20, "agg4"
  Const        r21, "cs_sales_price"
  // from cs in catalog_sales
  MakeMap      r22, 0, r0
  Const        r23, []
  IterPrep     r25, r0
  Len          r26, r25
  Const        r27, 0
L13:
  LessInt      r28, r27, r26
  JumpIfFalse  r28, L0
  Index        r30, r25, r27
  // join cd in customer_demographics on cs.cs_bill_cdemo_sk == cd.cd_demo_sk
  IterPrep     r31, r1
  Len          r32, r31
  Const        r33, 0
L12:
  LessInt      r34, r33, r32
  JumpIfFalse  r34, L1
  Index        r36, r31, r33
  Const        r37, "cs_bill_cdemo_sk"
  Index        r38, r30, r37
  Const        r39, "cd_demo_sk"
  Index        r40, r36, r39
  Equal        r41, r38, r40
  JumpIfFalse  r41, L2
  // join d in date_dim on cs.cs_sold_date_sk == d.d_date_sk
  IterPrep     r42, r2
  Len          r43, r42
  Const        r44, 0
L11:
  LessInt      r45, r44, r43
  JumpIfFalse  r45, L2
  Index        r47, r42, r44
  Const        r48, "cs_sold_date_sk"
  Index        r49, r30, r48
  Const        r50, "d_date_sk"
  Index        r51, r47, r50
  Equal        r52, r49, r51
  JumpIfFalse  r52, L3
  // join i in item on cs.cs_item_sk == i.i_item_sk
  IterPrep     r53, r3
  Len          r54, r53
  Const        r55, 0
L10:
  LessInt      r56, r55, r54
  JumpIfFalse  r56, L3
  Index        r58, r53, r55
  Const        r59, "cs_item_sk"
  Index        r60, r30, r59
  Const        r61, "i_item_sk"
  Index        r62, r58, r61
  Equal        r63, r60, r62
  JumpIfFalse  r63, L4
  // join p in promotion on cs.cs_promo_sk == p.p_promo_sk
  IterPrep     r64, r4
  Len          r65, r64
  Const        r66, 0
L9:
  LessInt      r67, r66, r65
  JumpIfFalse  r67, L4
  Index        r69, r64, r66
  Const        r70, "cs_promo_sk"
  Index        r71, r30, r70
  Const        r72, "p_promo_sk"
  Index        r73, r69, r72
  Equal        r74, r71, r73
  JumpIfFalse  r74, L5
  // where cd.cd_gender == "M" && cd.cd_marital_status == "S" && cd.cd_education_status == "College" && (p.p_channel_email == "N" || p.p_channel_event == "N") && d.d_year == 2000
  Index        r75, r36, r7
  Const        r76, "M"
  Equal        r77, r75, r76
  Index        r78, r36, r8
  Const        r79, "S"
  Equal        r80, r78, r79
  Index        r81, r36, r9
  Const        r82, "College"
  Equal        r83, r81, r82
  Index        r84, r47, r12
  Const        r85, 2000
  Equal        r86, r84, r85
  JumpIfFalse  r77, L6
  Move         r77, r80
  JumpIfFalse  r77, L6
  Move         r77, r83
  JumpIfFalse  r77, L6
  Index        r87, r69, r10
  Const        r88, "N"
  Equal        r89, r87, r88
  Index        r90, r69, r11
  Equal        r91, r90, r88
  JumpIfTrue   r89, L7
L7:
  Move         r77, r91
  JumpIfFalse  r77, L6
  Move         r77, r86
L6:
  JumpIfFalse  r77, L5
  // from cs in catalog_sales
  Const        r92, "cs"
  Move         r93, r30
  Const        r94, "cd"
  Move         r95, r36
  Const        r96, "d"
  Move         r97, r47
  Const        r98, "i"
  Move         r99, r58
  Const        r100, "p"
  Move         r101, r69
  MakeMap      r102, 5, r92
  // group by i.i_item_id into g
  Index        r103, r58, r6
  Str          r104, r103
  In           r105, r104, r22
  JumpIfTrue   r105, L8
  // from cs in catalog_sales
  Const        r106, []
  Const        r107, "__group__"
  Const        r108, true
  Const        r109, "key"
  // group by i.i_item_id into g
  Move         r110, r103
  // from cs in catalog_sales
  Const        r111, "items"
  Move         r112, r106
  Const        r113, "count"
  Const        r114, 0
  Move         r115, r107
  Move         r116, r108
  Move         r117, r109
  Move         r118, r110
  Move         r119, r111
  Move         r120, r112
  Move         r121, r113
  Move         r122, r114
  MakeMap      r123, 4, r115
  SetIndex     r22, r104, r123
  Append       r23, r23, r123
L8:
  Const        r125, "items"
  Index        r126, r22, r104
  Index        r127, r126, r125
  Append       r128, r127, r102
  SetIndex     r126, r125, r128
  Const        r129, "count"
  Index        r130, r126, r129
  Const        r131, 1
  AddInt       r132, r130, r131
  SetIndex     r126, r129, r132
L5:
  // join p in promotion on cs.cs_promo_sk == p.p_promo_sk
  AddInt       r66, r66, r131
  Jump         L9
L4:
  // join i in item on cs.cs_item_sk == i.i_item_sk
  AddInt       r55, r55, r131
  Jump         L10
L3:
  // join d in date_dim on cs.cs_sold_date_sk == d.d_date_sk
  AddInt       r44, r44, r131
  Jump         L11
L2:
  // join cd in customer_demographics on cs.cs_bill_cdemo_sk == cd.cd_demo_sk
  AddInt       r33, r33, r131
  Jump         L12
L1:
  // from cs in catalog_sales
  AddInt       r27, r27, r131
  Jump         L13
L0:
  Const        r134, 0
  Move         r133, r134
  Len          r135, r23
L23:
  LessInt      r136, r133, r135
  JumpIfFalse  r136, L14
  Index        r138, r23, r133
  // i_item_id: g.key,
  Const        r139, "i_item_id"
  Index        r140, r138, r13
  // agg1: avg(from x in g select x.cs_quantity),
  Const        r141, "agg1"
  Const        r142, []
  IterPrep     r143, r138
  Len          r144, r143
  Move         r145, r134
L16:
  LessInt      r146, r145, r144
  JumpIfFalse  r146, L15
  Index        r148, r143, r145
  Index        r149, r148, r15
  Append       r142, r142, r149
  AddInt       r145, r145, r131
  Jump         L16
L15:
  Avg          r151, r142
  // agg2: avg(from x in g select x.cs_list_price),
  Const        r152, "agg2"
  Const        r153, []
  IterPrep     r154, r138
  Len          r155, r154
  Move         r156, r134
L18:
  LessInt      r157, r156, r155
  JumpIfFalse  r157, L17
  Index        r148, r154, r156
  Index        r159, r148, r17
  Append       r153, r153, r159
  AddInt       r156, r156, r131
  Jump         L18
L17:
  Avg          r161, r153
  // agg3: avg(from x in g select x.cs_coupon_amt),
  Const        r162, "agg3"
  Const        r163, []
  IterPrep     r164, r138
  Len          r165, r164
  Move         r166, r134
L20:
  LessInt      r167, r166, r165
  JumpIfFalse  r167, L19
  Index        r148, r164, r166
  Index        r169, r148, r19
  Append       r163, r163, r169
  AddInt       r166, r166, r131
  Jump         L20
L19:
  Avg          r171, r163
  // agg4: avg(from x in g select x.cs_sales_price)
  Const        r172, "agg4"
  Const        r173, []
  IterPrep     r174, r138
  Len          r175, r174
  Move         r176, r134
L22:
  LessInt      r177, r176, r175
  JumpIfFalse  r177, L21
  Index        r148, r174, r176
  Index        r179, r148, r21
  Append       r173, r173, r179
  AddInt       r176, r176, r131
  Jump         L22
L21:
  Avg          r181, r173
  // i_item_id: g.key,
  Move         r182, r139
  Move         r183, r140
  // agg1: avg(from x in g select x.cs_quantity),
  Move         r184, r141
  Move         r185, r151
  // agg2: avg(from x in g select x.cs_list_price),
  Move         r186, r152
  Move         r187, r161
  // agg3: avg(from x in g select x.cs_coupon_amt),
  Move         r188, r162
  Move         r189, r171
  // agg4: avg(from x in g select x.cs_sales_price)
  Move         r190, r172
  Move         r191, r181
  // select {
  MakeMap      r192, 5, r182
  // from cs in catalog_sales
  Append       r5, r5, r192
  AddInt       r133, r133, r131
  Jump         L23
L14:
  // json(result)
  JSON         r5
  // expect result == [
  Const        r194, [{"agg1": 10, "agg2": 100, "agg3": 5, "agg4": 95, "i_item_id": "ITEM1"}]
  Equal        r195, r5, r194
  Expect       r195
  Return       r0
