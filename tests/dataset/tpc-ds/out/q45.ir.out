func main (regs=174)
  // let web_sales = [
  Const        r0, [{"bill_customer_sk": 1, "item_sk": 1, "sales_price": 50, "sold_date_sk": 1}, {"bill_customer_sk": 2, "item_sk": 2, "sales_price": 30, "sold_date_sk": 1}]
  // let customer = [
  Const        r1, [{"c_current_addr_sk": 1, "c_customer_sk": 1}, {"c_current_addr_sk": 2, "c_customer_sk": 2}]
  // let customer_address = [
  Const        r2, [{"ca_address_sk": 1, "ca_zip": "85669"}, {"ca_address_sk": 2, "ca_zip": "99999"}]
  // let item = [
  Const        r3, [{"i_item_id": "I1", "i_item_sk": 1}, {"i_item_id": "I2", "i_item_sk": 2}]
  // let date_dim = [ { d_date_sk: 1, d_qoy: 1, d_year: 2020 } ]
  Const        r4, [{"d_date_sk": 1, "d_qoy": 1, "d_year": 2020}]
  // let zip_list = ["85669", "86197", "88274", "83405", "86475", "85392", "85460", "80348", "81792"]
  Const        r5, ["85669", "86197", "88274", "83405", "86475", "85392", "85460", "80348", "81792"]
  // let item_ids = ["I2"]
  Const        r6, ["I2"]
  // let qoy = 1
  Const        r7, 1
  // let year = 2020
  Const        r8, 2020
  // from ws in web_sales
  Const        r9, []
  // group by ca.ca_zip into g
  Const        r10, "ca_zip"
  // where (substr(ca.ca_zip, 0, 5) in zip_list || i.i_item_id in item_ids) &&
  Const        r11, "ca_zip"
  Const        r12, "i_item_id"
  // d.d_qoy == qoy && d.d_year == year
  Const        r13, "d_qoy"
  Const        r14, "d_year"
  // select { ca_zip: g.key, sum_ws_sales_price: sum(from x in g select x.ws.sales_price) }
  Const        r15, "ca_zip"
  Const        r16, "key"
  Const        r17, "sum_ws_sales_price"
  Const        r18, "ws"
  Const        r19, "sales_price"
  // from ws in web_sales
  MakeMap      r20, 0, r0
  Const        r21, []
  IterPrep     r23, r0
  Len          r24, r23
  Const        r25, 0
L14:
  LessInt      r26, r25, r24
  JumpIfFalse  r26, L0
  Index        r28, r23, r25
  // join c in customer on ws.bill_customer_sk == c.c_customer_sk
  IterPrep     r29, r1
  Len          r30, r29
  Const        r31, 0
L13:
  LessInt      r32, r31, r30
  JumpIfFalse  r32, L1
  Index        r34, r29, r31
  Const        r35, "bill_customer_sk"
  Index        r36, r28, r35
  Const        r37, "c_customer_sk"
  Index        r38, r34, r37
  Equal        r39, r36, r38
  JumpIfFalse  r39, L2
  // join ca in customer_address on c.c_current_addr_sk == ca.ca_address_sk
  IterPrep     r40, r2
  Len          r41, r40
  Const        r42, 0
L12:
  LessInt      r43, r42, r41
  JumpIfFalse  r43, L2
  Index        r45, r40, r42
  Const        r46, "c_current_addr_sk"
  Index        r47, r34, r46
  Const        r48, "ca_address_sk"
  Index        r49, r45, r48
  Equal        r50, r47, r49
  JumpIfFalse  r50, L3
  // join i in item on ws.item_sk == i.i_item_sk
  IterPrep     r51, r3
  Len          r52, r51
  Const        r53, 0
L11:
  LessInt      r54, r53, r52
  JumpIfFalse  r54, L3
  Index        r56, r51, r53
  Const        r57, "item_sk"
  Index        r58, r28, r57
  Const        r59, "i_item_sk"
  Index        r60, r56, r59
  Equal        r61, r58, r60
  JumpIfFalse  r61, L4
  // join d in date_dim on ws.sold_date_sk == d.d_date_sk
  IterPrep     r62, r4
  Len          r63, r62
  Const        r64, 0
L10:
  LessInt      r65, r64, r63
  JumpIfFalse  r65, L4
  Index        r67, r62, r64
  Const        r68, "sold_date_sk"
  Index        r69, r28, r68
  Const        r70, "d_date_sk"
  Index        r71, r67, r70
  Equal        r72, r69, r71
  JumpIfFalse  r72, L5
  // where (substr(ca.ca_zip, 0, 5) in zip_list || i.i_item_id in item_ids) &&
  Const        r73, "ca_zip"
  Index        r74, r45, r73
  Const        r75, 0
  Const        r76, 5
  Slice        r77, r74, r75, r76
  In           r78, r77, r5
  Const        r79, "i_item_id"
  Index        r80, r56, r79
  In           r81, r80, r6
  Move         r82, r78
  JumpIfTrue   r82, L6
  Move         r82, r81
L6:
  // d.d_qoy == qoy && d.d_year == year
  Const        r83, "d_qoy"
  Index        r84, r67, r83
  Equal        r85, r84, r7
  Const        r86, "d_year"
  Index        r87, r67, r86
  Equal        r88, r87, r8
  // where (substr(ca.ca_zip, 0, 5) in zip_list || i.i_item_id in item_ids) &&
  Move         r89, r82
  JumpIfFalse  r89, L7
L7:
  // d.d_qoy == qoy && d.d_year == year
  Move         r90, r85
  JumpIfFalse  r90, L8
  Move         r90, r88
L8:
  // where (substr(ca.ca_zip, 0, 5) in zip_list || i.i_item_id in item_ids) &&
  JumpIfFalse  r90, L5
  // from ws in web_sales
  Const        r91, "ws"
  Move         r92, r28
  Const        r93, "c"
  Move         r94, r34
  Const        r95, "ca"
  Move         r96, r45
  Const        r97, "i"
  Move         r98, r56
  Const        r99, "d"
  Move         r100, r67
  MakeMap      r101, 5, r91
  // group by ca.ca_zip into g
  Const        r102, "ca_zip"
  Index        r103, r45, r102
  Str          r104, r103
  In           r105, r104, r20
  JumpIfTrue   r105, L9
  // from ws in web_sales
  Const        r106, []
  Const        r107, "__group__"
  Const        r108, true
  Const        r109, "key"
  // group by ca.ca_zip into g
  Move         r110, r103
  // from ws in web_sales
  Const        r111, "items"
  Move         r112, r106
  Const        r113, "count"
  Const        r114, 0
  Move         r115, r107
  Move         r116, r108
  Move         r117, r109
  Move         r118, r110
  Move         r119, r111
  Move         r120, r112
  Move         r121, r113
  Move         r122, r114
  MakeMap      r123, 4, r115
  SetIndex     r20, r104, r123
  Append       r21, r21, r123
L9:
  Const        r125, "items"
  Index        r126, r20, r104
  Index        r127, r126, r125
  Append       r128, r127, r101
  SetIndex     r126, r125, r128
  Const        r129, "count"
  Index        r130, r126, r129
  Const        r131, 1
  AddInt       r132, r130, r131
  SetIndex     r126, r129, r132
L5:
  // join d in date_dim on ws.sold_date_sk == d.d_date_sk
  Const        r133, 1
  AddInt       r64, r64, r133
  Jump         L10
L4:
  // join i in item on ws.item_sk == i.i_item_sk
  Const        r134, 1
  AddInt       r53, r53, r134
  Jump         L11
L3:
  // join ca in customer_address on c.c_current_addr_sk == ca.ca_address_sk
  Const        r135, 1
  AddInt       r42, r42, r135
  Jump         L12
L2:
  // join c in customer on ws.bill_customer_sk == c.c_customer_sk
  Const        r136, 1
  AddInt       r31, r31, r136
  Jump         L13
L1:
  // from ws in web_sales
  Const        r137, 1
  AddInt       r25, r25, r137
  Jump         L14
L0:
  Const        r138, 0
  Len          r140, r21
L18:
  LessInt      r141, r138, r140
  JumpIfFalse  r141, L15
  Index        r143, r21, r138
  // select { ca_zip: g.key, sum_ws_sales_price: sum(from x in g select x.ws.sales_price) }
  Const        r144, "ca_zip"
  Const        r145, "key"
  Index        r146, r143, r145
  Const        r147, "sum_ws_sales_price"
  Const        r148, []
  Const        r149, "ws"
  Const        r150, "sales_price"
  IterPrep     r151, r143
  Len          r152, r151
  Const        r153, 0
L17:
  LessInt      r155, r153, r152
  JumpIfFalse  r155, L16
  Index        r157, r151, r153
  Const        r158, "ws"
  Index        r159, r157, r158
  Const        r160, "sales_price"
  Index        r161, r159, r160
  Append       r148, r148, r161
  Const        r163, 1
  AddInt       r153, r153, r163
  Jump         L17
L16:
  Sum          r164, r148
  Move         r165, r144
  Move         r166, r146
  Move         r167, r147
  Move         r168, r164
  MakeMap      r169, 2, r165
  // from ws in web_sales
  Append       r9, r9, r169
  Const        r171, 1
  AddInt       r138, r138, r171
  Jump         L18
L15:
  // json(records)
  JSON         r9
  // expect records == [ { ca_zip: "85669", sum_ws_sales_price: 50.0 }, { ca_zip: "99999", sum_ws_sales_price: 30.0 } ]
  Const        r172, [{"ca_zip": "85669", "sum_ws_sales_price": 50}, {"ca_zip": "99999", "sum_ws_sales_price": 30}]
  Equal        r173, r9, r172
  Expect       r173
  Return       r0
