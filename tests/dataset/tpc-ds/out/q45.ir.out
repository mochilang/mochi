func main (regs=157)
  // let web_sales = [
  Const        r0, [{"bill_customer_sk": 1, "item_sk": 1, "sales_price": 50.0, "sold_date_sk": 1}, {"bill_customer_sk": 2, "item_sk": 2, "sales_price": 30.0, "sold_date_sk": 1}]
  // let customer = [
  Const        r1, [{"c_current_addr_sk": 1, "c_customer_sk": 1}, {"c_current_addr_sk": 2, "c_customer_sk": 2}]
  // let customer_address = [
  Const        r2, [{"ca_address_sk": 1, "ca_zip": "85669"}, {"ca_address_sk": 2, "ca_zip": "99999"}]
  // let item = [
  Const        r3, [{"i_item_id": "I1", "i_item_sk": 1}, {"i_item_id": "I2", "i_item_sk": 2}]
  // let date_dim = [ { d_date_sk: 1, d_qoy: 1, d_year: 2020 } ]
  Const        r4, [{"d_date_sk": 1, "d_qoy": 1, "d_year": 2020}]
  // let zip_list = ["85669", "86197", "88274", "83405", "86475", "85392", "85460", "80348", "81792"]
  Const        r5, ["85669", "86197", "88274", "83405", "86475", "85392", "85460", "80348", "81792"]
  // let item_ids = ["I2"]
  Const        r6, ["I2"]
  // let qoy = 1
  Const        r7, 1
  // let year = 2020
  Const        r8, 2020
  // from ws in web_sales
  Const        r9, []
  // group by ca.ca_zip into g
  Const        r10, "ca_zip"
  // where (substr(ca.ca_zip, 0, 5) in zip_list || i.i_item_id in item_ids) &&
  Const        r10, "ca_zip"
  Const        r11, "i_item_id"
  // d.d_qoy == qoy && d.d_year == year
  Const        r12, "d_qoy"
  Const        r13, "d_year"
  // select { ca_zip: g.key, sum_ws_sales_price: sum(from x in g select x.ws.sales_price) }
  Const        r10, "ca_zip"
  Const        r14, "key"
  Const        r15, "sum_ws_sales_price"
  Const        r16, "ws"
  Const        r17, "sales_price"
  // from ws in web_sales
  MakeMap      r18, 0, r0
  Const        r20, []
  Move         r19, r20
  IterPrep     r21, r0
  Len          r22, r21
  Const        r23, 0
L13:
  LessInt      r24, r23, r22
  JumpIfFalse  r24, L0
  Index        r25, r21, r23
  Move         r26, r25
  // join c in customer on ws.bill_customer_sk == c.c_customer_sk
  IterPrep     r27, r1
  Len          r28, r27
  Const        r29, 0
L12:
  LessInt      r30, r29, r28
  JumpIfFalse  r30, L1
  Index        r31, r27, r29
  Move         r32, r31
  Const        r33, "bill_customer_sk"
  Index        r34, r26, r33
  Const        r35, "c_customer_sk"
  Index        r36, r32, r35
  Equal        r37, r34, r36
  JumpIfFalse  r37, L2
  // join ca in customer_address on c.c_current_addr_sk == ca.ca_address_sk
  IterPrep     r38, r2
  Len          r39, r38
  Const        r40, 0
L11:
  LessInt      r41, r40, r39
  JumpIfFalse  r41, L2
  Index        r42, r38, r40
  Move         r43, r42
  Const        r44, "c_current_addr_sk"
  Index        r45, r32, r44
  Const        r46, "ca_address_sk"
  Index        r47, r43, r46
  Equal        r48, r45, r47
  JumpIfFalse  r48, L3
  // join i in item on ws.item_sk == i.i_item_sk
  IterPrep     r49, r3
  Len          r50, r49
  Const        r51, 0
L10:
  LessInt      r52, r51, r50
  JumpIfFalse  r52, L3
  Index        r53, r49, r51
  Move         r54, r53
  Const        r55, "item_sk"
  Index        r56, r26, r55
  Const        r57, "i_item_sk"
  Index        r58, r54, r57
  Equal        r59, r56, r58
  JumpIfFalse  r59, L4
  // join d in date_dim on ws.sold_date_sk == d.d_date_sk
  IterPrep     r60, r4
  Len          r61, r60
  Const        r62, 0
L9:
  LessInt      r63, r62, r61
  JumpIfFalse  r63, L4
  Index        r64, r60, r62
  Move         r65, r64
  Const        r66, "sold_date_sk"
  Index        r67, r26, r66
  Const        r68, "d_date_sk"
  Index        r69, r65, r68
  Equal        r70, r67, r69
  JumpIfFalse  r70, L5
  // where (substr(ca.ca_zip, 0, 5) in zip_list || i.i_item_id in item_ids) &&
  Const        r10, "ca_zip"
  Index        r71, r43, r10
  Const        r72, 0
  Const        r73, 5
  Slice        r74, r71, r72, r73
  Const        r75, ["85669", "86197", "88274", "83405", "86475", "85392", "85460", "80348", "81792"]
  In           r76, r74, r75
  Const        r11, "i_item_id"
  Index        r77, r54, r11
  Const        r78, ["I2"]
  In           r79, r77, r78
  Move         r80, r76
  JumpIfTrue   r80, L6
  Move         r80, r79
L6:
  // d.d_qoy == qoy && d.d_year == year
  Const        r12, "d_qoy"
  Index        r81, r65, r12
  Const        r7, 1
  Equal        r82, r81, r7
  Const        r13, "d_year"
  Index        r83, r65, r13
  Const        r8, 2020
  Equal        r84, r83, r8
  // where (substr(ca.ca_zip, 0, 5) in zip_list || i.i_item_id in item_ids) &&
  Move         r85, r80
  JumpIfFalse  r85, L7
  Move         r85, r82
  // d.d_qoy == qoy && d.d_year == year
  JumpIfFalse  r85, L7
  Move         r85, r84
L7:
  // where (substr(ca.ca_zip, 0, 5) in zip_list || i.i_item_id in item_ids) &&
  JumpIfFalse  r85, L5
  // from ws in web_sales
  Const        r16, "ws"
  Move         r86, r26
  Const        r87, "c"
  Move         r88, r32
  Const        r89, "ca"
  Move         r90, r43
  Const        r91, "i"
  Move         r92, r54
  Const        r93, "d"
  Move         r94, r65
  Move         r95, r16
  Move         r96, r86
  Move         r97, r87
  Move         r98, r88
  Move         r99, r89
  Move         r100, r90
  Move         r101, r91
  Move         r102, r92
  Move         r103, r93
  Move         r104, r94
  MakeMap      r105, 5, r95
  // group by ca.ca_zip into g
  Const        r10, "ca_zip"
  Index        r106, r43, r10
  Str          r107, r106
  In           r108, r107, r18
  JumpIfTrue   r108, L8
  // from ws in web_sales
  Const        r20, []
  Const        r109, "__group__"
  Const        r110, true
  Const        r14, "key"
  // group by ca.ca_zip into g
  Move         r111, r106
  // from ws in web_sales
  Const        r112, "items"
  Move         r113, r20
  Const        r114, "count"
  Const        r72, 0
  Move         r115, r109
  Move         r116, r110
  Move         r117, r14
  Move         r118, r111
  Move         r119, r112
  Move         r120, r113
  Move         r121, r114
  Move         r122, r72
  MakeMap      r123, 4, r115
  SetIndex     r18, r107, r123
  Append       r124, r19, r123
  Move         r19, r124
L8:
  Const        r112, "items"
  Index        r125, r18, r107
  Index        r126, r125, r112
  Append       r127, r126, r105
  SetIndex     r125, r112, r127
  Const        r114, "count"
  Index        r128, r125, r114
  Const        r7, 1
  AddInt       r129, r128, r7
  SetIndex     r125, r114, r129
L5:
  // join d in date_dim on ws.sold_date_sk == d.d_date_sk
  Const        r7, 1
  AddInt       r62, r62, r7
  Jump         L9
L4:
  // join i in item on ws.item_sk == i.i_item_sk
  Const        r7, 1
  AddInt       r51, r51, r7
  Jump         L10
L3:
  // join ca in customer_address on c.c_current_addr_sk == ca.ca_address_sk
  Const        r7, 1
  AddInt       r40, r40, r7
  Jump         L11
L2:
  // join c in customer on ws.bill_customer_sk == c.c_customer_sk
  Const        r7, 1
  AddInt       r29, r29, r7
  Jump         L12
L1:
  // from ws in web_sales
  Const        r7, 1
  AddInt       r23, r23, r7
  Jump         L13
L0:
  Const        r72, 0
  Move         r130, r72
  Len          r131, r19
L17:
  LessInt      r132, r130, r131
  JumpIfFalse  r132, L14
  Index        r133, r19, r130
  Move         r134, r133
  // select { ca_zip: g.key, sum_ws_sales_price: sum(from x in g select x.ws.sales_price) }
  Const        r135, "ca_zip"
  Const        r14, "key"
  Index        r136, r134, r14
  Const        r137, "sum_ws_sales_price"
  Const        r138, []
  Const        r16, "ws"
  Const        r17, "sales_price"
  IterPrep     r139, r134
  Len          r140, r139
  Const        r72, 0
  Move         r141, r72
L16:
  LessInt      r142, r141, r140
  JumpIfFalse  r142, L15
  Index        r143, r139, r141
  Move         r144, r143
  Const        r16, "ws"
  Index        r145, r144, r16
  Const        r17, "sales_price"
  Index        r146, r145, r17
  Append       r147, r138, r146
  Move         r138, r147
  Const        r7, 1
  AddInt       r141, r141, r7
  Jump         L16
L15:
  Sum          r148, r138
  Move         r149, r135
  Move         r150, r136
  Move         r151, r137
  Move         r152, r148
  MakeMap      r153, 2, r149
  // from ws in web_sales
  Append       r154, r9, r153
  Move         r9, r154
  Const        r7, 1
  AddInt       r130, r130, r7
  Jump         L17
L14:
  // json(records)
  JSON         r9
  // expect records == [ { ca_zip: "85669", sum_ws_sales_price: 50.0 }, { ca_zip: "99999", sum_ws_sales_price: 30.0 } ]
  Const        r155, [{"ca_zip": "85669", "sum_ws_sales_price": 50.0}, {"ca_zip": "99999", "sum_ws_sales_price": 30.0}]
  Equal        r156, r9, r155
  Expect       r156
  Return       r0
