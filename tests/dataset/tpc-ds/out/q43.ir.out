func main (regs=255)
  // let date_dim = [
  Const        r0, [{"d_day_name": "Sunday", "d_year": 2020, "date_sk": 1}, {"d_day_name": "Monday", "d_year": 2020, "date_sk": 2}, {"d_day_name": "Tuesday", "d_year": 2020, "date_sk": 3}, {"d_day_name": "Wednesday", "d_year": 2020, "date_sk": 4}, {"d_day_name": "Thursday", "d_year": 2020, "date_sk": 5}, {"d_day_name": "Friday", "d_year": 2020, "date_sk": 6}, {"d_day_name": "Saturday", "d_year": 2020, "date_sk": 7}]
  // let store = [ { store_sk: 1, store_id: "S1", store_name: "Main", gmt_offset: 0 } ]
  Const        r1, [{"gmt_offset": 0, "store_id": "S1", "store_name": "Main", "store_sk": 1}]
  // let store_sales = [
  Const        r2, [{"sales_price": 10, "sold_date_sk": 1, "store_sk": 1}, {"sales_price": 20, "sold_date_sk": 2, "store_sk": 1}, {"sales_price": 30, "sold_date_sk": 3, "store_sk": 1}, {"sales_price": 40, "sold_date_sk": 4, "store_sk": 1}, {"sales_price": 50, "sold_date_sk": 5, "store_sk": 1}, {"sales_price": 60, "sold_date_sk": 6, "store_sk": 1}, {"sales_price": 70, "sold_date_sk": 7, "store_sk": 1}]
  // let year = 2020
  Const        r3, 2020
  // let gmt = 0
  Const        r4, 0
  // from d in date_dim
  Const        r5, []
  // where s.gmt_offset == gmt && d.d_year == year
  Const        r6, "gmt_offset"
  Const        r7, "d_year"
  // select { d_day_name: d.d_day_name, s_store_name: s.store_name, s_store_id: s.store_id, price: ss.sales_price }
  Const        r8, "d_day_name"
  Const        r9, "s_store_name"
  Const        r10, "store_name"
  Const        r11, "s_store_id"
  Const        r12, "store_id"
  Const        r13, "price"
  Const        r14, "sales_price"
  // from d in date_dim
  IterPrep     r15, r0
  Len          r16, r15
  Move         r17, r4
L7:
  LessInt      r18, r17, r16
  JumpIfFalse  r18, L0
  Index        r20, r15, r17
  // join ss in store_sales on ss.sold_date_sk == d.date_sk
  IterPrep     r21, r2
  Len          r22, r21
  Const        r23, "sold_date_sk"
  Const        r24, "date_sk"
  Move         r25, r4
L6:
  LessInt      r26, r25, r22
  JumpIfFalse  r26, L1
  Index        r28, r21, r25
  Index        r29, r28, r23
  Index        r30, r20, r24
  Equal        r31, r29, r30
  JumpIfFalse  r31, L2
  // join s in store on ss.store_sk == s.store_sk
  IterPrep     r32, r1
  Len          r33, r32
  Const        r34, "store_sk"
  Move         r35, r4
L5:
  LessInt      r36, r35, r33
  JumpIfFalse  r36, L2
  Index        r38, r32, r35
  Index        r39, r28, r34
  Index        r40, r38, r34
  Equal        r41, r39, r40
  JumpIfFalse  r41, L3
  // where s.gmt_offset == gmt && d.d_year == year
  Index        r42, r38, r6
  Equal        r43, r42, r4
  Index        r44, r20, r7
  Equal        r45, r44, r3
  JumpIfFalse  r43, L4
  Move         r43, r45
L4:
  JumpIfFalse  r43, L3
  // select { d_day_name: d.d_day_name, s_store_name: s.store_name, s_store_id: s.store_id, price: ss.sales_price }
  Const        r46, "d_day_name"
  Index        r47, r20, r8
  Const        r48, "s_store_name"
  Index        r49, r38, r10
  Const        r50, "s_store_id"
  Index        r51, r38, r12
  Const        r52, "price"
  Index        r53, r28, r14
  Move         r54, r46
  Move         r55, r47
  Move         r56, r48
  Move         r57, r49
  Move         r58, r50
  Move         r59, r51
  Move         r60, r52
  Move         r61, r53
  MakeMap      r62, 4, r54
  // from d in date_dim
  Append       r5, r5, r62
L3:
  // join s in store on ss.store_sk == s.store_sk
  Const        r64, 1
  Add          r35, r35, r64
  Jump         L5
L2:
  // join ss in store_sales on ss.sold_date_sk == d.date_sk
  Add          r25, r25, r64
  Jump         L6
L1:
  // from d in date_dim
  AddInt       r17, r17, r64
  Jump         L7
L0:
  // from r in records
  Const        r65, []
  // group by { name: r.s_store_name, id: r.s_store_id } into g
  Const        r66, "name"
  Const        r67, "id"
  // s_store_name: g.key.name,
  Const        r68, "key"
  // sun_sales: sum(from x in g select if x.d_day_name == "Sunday" { x.price } else { 0.0 }),
  Const        r69, "sun_sales"
  // mon_sales: sum(from x in g select if x.d_day_name == "Monday" { x.price } else { 0.0 }),
  Const        r70, "mon_sales"
  // tue_sales: sum(from x in g select if x.d_day_name == "Tuesday" { x.price } else { 0.0 }),
  Const        r71, "tue_sales"
  // wed_sales: sum(from x in g select if x.d_day_name == "Wednesday" { x.price } else { 0.0 }),
  Const        r72, "wed_sales"
  // thu_sales: sum(from x in g select if x.d_day_name == "Thursday" { x.price } else { 0.0 }),
  Const        r73, "thu_sales"
  // fri_sales: sum(from x in g select if x.d_day_name == "Friday" { x.price } else { 0.0 }),
  Const        r74, "fri_sales"
  // sat_sales: sum(from x in g select if x.d_day_name == "Saturday" { x.price } else { 0.0 })
  Const        r75, "sat_sales"
  // from r in records
  IterPrep     r76, r5
  Len          r77, r76
  Const        r78, 0
  MakeMap      r79, 0, r0
  Const        r80, []
L10:
  LessInt      r82, r78, r77
  JumpIfFalse  r82, L8
  Index        r83, r76, r78
  Move         r84, r83
  // group by { name: r.s_store_name, id: r.s_store_id } into g
  Const        r85, "name"
  Index        r86, r84, r9
  Const        r87, "id"
  Index        r88, r84, r11
  Move         r89, r85
  Move         r90, r86
  Move         r91, r87
  Move         r92, r88
  MakeMap      r93, 2, r89
  Str          r94, r93
  In           r95, r94, r79
  JumpIfTrue   r95, L9
  // from r in records
  Const        r96, []
  Const        r97, "__group__"
  Const        r98, true
  Const        r99, "key"
  // group by { name: r.s_store_name, id: r.s_store_id } into g
  Move         r100, r93
  // from r in records
  Const        r101, "items"
  Move         r102, r96
  Const        r103, "count"
  Const        r104, 0
  Move         r105, r97
  Move         r106, r98
  Move         r107, r99
  Move         r108, r100
  Move         r109, r101
  Move         r110, r102
  Move         r111, r103
  Move         r112, r104
  MakeMap      r113, 4, r105
  SetIndex     r79, r94, r113
  Append       r80, r80, r113
L9:
  Const        r115, "items"
  Index        r116, r79, r94
  Index        r117, r116, r115
  Append       r118, r117, r83
  SetIndex     r116, r115, r118
  Const        r119, "count"
  Index        r120, r116, r119
  AddInt       r121, r120, r64
  SetIndex     r116, r119, r121
  AddInt       r78, r78, r64
  Jump         L10
L8:
  Move         r122, r4
  Len          r123, r80
L26:
  LessInt      r124, r122, r123
  JumpIfFalse  r124, L11
  Index        r126, r80, r122
  // s_store_name: g.key.name,
  Const        r127, "s_store_name"
  Index        r128, r126, r68
  Index        r129, r128, r66
  // s_store_id: g.key.id,
  Const        r130, "s_store_id"
  Index        r131, r126, r68
  Index        r132, r131, r67
  // sun_sales: sum(from x in g select if x.d_day_name == "Sunday" { x.price } else { 0.0 }),
  Const        r133, "sun_sales"
  Const        r134, []
  IterPrep     r135, r126
  Len          r136, r135
  Move         r137, r4
L13:
  LessInt      r138, r137, r136
  JumpIfFalse  r138, L12
  Index        r140, r135, r137
  Index        r141, r140, r8
  Const        r142, "Sunday"
  Equal        r143, r141, r142
  Index        r144, r140, r13
  Const        r145, 0
  Select       146,143,144,145
  Append       r134, r134, r146
  AddInt       r137, r137, r64
  Jump         L13
L12:
  Sum          r148, r134
  // mon_sales: sum(from x in g select if x.d_day_name == "Monday" { x.price } else { 0.0 }),
  Const        r149, "mon_sales"
  Const        r150, []
  IterPrep     r151, r126
  Len          r152, r151
  Move         r153, r4
L15:
  LessInt      r154, r153, r152
  JumpIfFalse  r154, L14
  Index        r140, r151, r153
  Index        r156, r140, r8
  Const        r157, "Monday"
  Equal        r158, r156, r157
  Index        r159, r140, r13
  Select       160,158,159,145
  Append       r150, r150, r160
  AddInt       r153, r153, r64
  Jump         L15
L14:
  Sum          r162, r150
  // tue_sales: sum(from x in g select if x.d_day_name == "Tuesday" { x.price } else { 0.0 }),
  Const        r163, "tue_sales"
  Const        r164, []
  IterPrep     r165, r126
  Len          r166, r165
  Move         r167, r4
L17:
  LessInt      r168, r167, r166
  JumpIfFalse  r168, L16
  Index        r140, r165, r167
  Index        r170, r140, r8
  Const        r171, "Tuesday"
  Equal        r172, r170, r171
  Index        r173, r140, r13
  Select       174,172,173,145
  Append       r164, r164, r174
  AddInt       r167, r167, r64
  Jump         L17
L16:
  Sum          r176, r164
  // wed_sales: sum(from x in g select if x.d_day_name == "Wednesday" { x.price } else { 0.0 }),
  Const        r177, "wed_sales"
  Const        r178, []
  IterPrep     r179, r126
  Len          r180, r179
  Move         r181, r4
L19:
  LessInt      r182, r181, r180
  JumpIfFalse  r182, L18
  Index        r140, r179, r181
  Index        r184, r140, r8
  Const        r185, "Wednesday"
  Equal        r186, r184, r185
  Index        r187, r140, r13
  Select       188,186,187,145
  Append       r178, r178, r188
  AddInt       r181, r181, r64
  Jump         L19
L18:
  Sum          r190, r178
  // thu_sales: sum(from x in g select if x.d_day_name == "Thursday" { x.price } else { 0.0 }),
  Const        r191, "thu_sales"
  Const        r192, []
  IterPrep     r193, r126
  Len          r194, r193
  Move         r195, r4
L21:
  LessInt      r196, r195, r194
  JumpIfFalse  r196, L20
  Index        r140, r193, r195
  Index        r198, r140, r8
  Const        r199, "Thursday"
  Equal        r200, r198, r199
  Index        r201, r140, r13
  Select       202,200,201,145
  Append       r192, r192, r202
  AddInt       r195, r195, r64
  Jump         L21
L20:
  Sum          r204, r192
  // fri_sales: sum(from x in g select if x.d_day_name == "Friday" { x.price } else { 0.0 }),
  Const        r205, "fri_sales"
  Const        r206, []
  IterPrep     r207, r126
  Len          r208, r207
  Move         r209, r4
L23:
  LessInt      r210, r209, r208
  JumpIfFalse  r210, L22
  Index        r140, r207, r209
  Index        r212, r140, r8
  Const        r213, "Friday"
  Equal        r214, r212, r213
  Index        r215, r140, r13
  Select       216,214,215,145
  Append       r206, r206, r216
  AddInt       r209, r209, r64
  Jump         L23
L22:
  Sum          r218, r206
  // sat_sales: sum(from x in g select if x.d_day_name == "Saturday" { x.price } else { 0.0 })
  Const        r219, "sat_sales"
  Const        r220, []
  IterPrep     r221, r126
  Len          r222, r221
  Move         r223, r4
L25:
  LessInt      r224, r223, r222
  JumpIfFalse  r224, L24
  Index        r140, r221, r223
  Index        r226, r140, r8
  Const        r227, "Saturday"
  Equal        r228, r226, r227
  Index        r229, r140, r13
  Select       230,228,229,145
  Append       r220, r220, r230
  AddInt       r223, r223, r64
  Jump         L25
L24:
  Sum          r232, r220
  // s_store_name: g.key.name,
  Move         r233, r127
  Move         r234, r129
  // s_store_id: g.key.id,
  Move         r235, r130
  Move         r236, r132
  // sun_sales: sum(from x in g select if x.d_day_name == "Sunday" { x.price } else { 0.0 }),
  Move         r237, r133
  Move         r238, r148
  // mon_sales: sum(from x in g select if x.d_day_name == "Monday" { x.price } else { 0.0 }),
  Move         r239, r149
  Move         r240, r162
  // tue_sales: sum(from x in g select if x.d_day_name == "Tuesday" { x.price } else { 0.0 }),
  Move         r241, r163
  Move         r242, r176
  // wed_sales: sum(from x in g select if x.d_day_name == "Wednesday" { x.price } else { 0.0 }),
  Move         r243, r177
  Move         r244, r190
  // thu_sales: sum(from x in g select if x.d_day_name == "Thursday" { x.price } else { 0.0 }),
  Move         r245, r191
  Move         r246, r204
  // fri_sales: sum(from x in g select if x.d_day_name == "Friday" { x.price } else { 0.0 }),
  Move         r247, r205
  Move         r248, r218
  // sat_sales: sum(from x in g select if x.d_day_name == "Saturday" { x.price } else { 0.0 })
  Move         r249, r219
  Move         r250, r232
  // select {
  MakeMap      r251, 9, r233
  // from r in records
  Append       r65, r65, r251
  AddInt       r122, r122, r64
  Jump         L26
L11:
  // json(result)
  JSON         r65
  // expect result == [
  Const        r253, [{"fri_sales": 60, "mon_sales": 20, "s_store_id": "S1", "s_store_name": "Main", "sat_sales": 70, "sun_sales": 10, "thu_sales": 50, "tue_sales": 30, "wed_sales": 40}]
  Equal        r254, r65, r253
  Expect       r254
  Return       r0
