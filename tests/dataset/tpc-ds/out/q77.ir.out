func main (regs=846)
  // let date_dim = [
  Const        r0, [{"d_date": 1, "d_date_sk": 1}]
  // let store_sales = [
  Const        r1, [{"s_store_sk": 1, "ss_ext_sales_price": 100.0, "ss_net_profit": 10.0, "ss_sold_date_sk": 1}]
  // let store_returns = [
  Const        r2, [{"s_store_sk": 1, "sr_net_loss": 1.0, "sr_return_amt": 5.0, "sr_returned_date_sk": 1}]
  // let catalog_sales = [
  Const        r3, [{"cs_call_center_sk": 1, "cs_ext_sales_price": 150.0, "cs_net_profit": 15.0, "cs_sold_date_sk": 1}]
  // let catalog_returns = [
  Const        r4, [{"cr_call_center_sk": 1, "cr_net_loss": 3.0, "cr_return_amount": 7.0, "cr_returned_date_sk": 1}]
  // let web_sales = [
  Const        r5, [{"ws_ext_sales_price": 200.0, "ws_net_profit": 20.0, "ws_sold_date_sk": 1, "ws_web_page_sk": 1}]
  // let web_returns = [
  Const        r6, [{"wr_net_loss": 2.0, "wr_return_amt": 10.0, "wr_returned_date_sk": 1, "wr_web_page_sk": 1}]
  // from ss in store_sales
  Const        r7, []
  // group by ss.s_store_sk into g
  Const        r8, "s_store_sk"
  // select { s_store_sk: g.key, sales: sum(from x in g select x.ss.ss_ext_sales_price), profit: sum(from x in g select x.ss.ss_net_profit) }
  Const        r9, "key"
  Const        r10, "sales"
  Const        r11, "ss"
  Const        r12, "ss_ext_sales_price"
  Const        r13, "profit"
  Const        r14, "ss_net_profit"
  // from ss in store_sales
  MakeMap      r15, 0, r0
  Const        r17, []
  Move         r16, r17
  IterPrep     r18, r1
  Len          r19, r18
  Const        r20, 0
  LessInt      r21, r20, r19
  JumpIfFalse  r21, L0
L2:
  Index        r22, r18, r20
  Move         r23, r22
  // join d in date_dim on d.d_date_sk == ss.ss_sold_date_sk
  IterPrep     r24, r0
  Len          r25, r24
  Const        r26, 0
  LessInt      r27, r26, r25
  JumpIfFalse  r27, L1
L4:
  Index        r28, r24, r26
  Move         r29, r28
  Const        r30, "d_date_sk"
  Index        r31, r29, r30
  Const        r32, "ss_sold_date_sk"
  Index        r33, r23, r32
  Equal        r34, r31, r33
  JumpIfFalse  r34, L2
  // from ss in store_sales
  Const        r11, "ss"
  Move         r35, r23
  Const        r36, "d"
  Move         r37, r29
  Move         r38, r11
  Move         r39, r35
  Move         r40, r36
  Move         r41, r37
  MakeMap      r42, 2, r38
  // group by ss.s_store_sk into g
  Const        r8, "s_store_sk"
  Index        r43, r23, r8
  Str          r44, r43
  In           r45, r44, r15
  JumpIfTrue   r45, L3
  // from ss in store_sales
  Const        r17, []
  Const        r46, "__group__"
  Const        r47, true
  Const        r9, "key"
  // group by ss.s_store_sk into g
  Move         r48, r43
  // from ss in store_sales
  Const        r49, "items"
  Move         r50, r17
  Const        r51, "count"
  Const        r52, 0
  Move         r53, r46
  Move         r54, r47
  Move         r55, r9
  Move         r56, r48
  Move         r57, r49
  Move         r58, r50
  Move         r59, r51
  Move         r60, r52
  MakeMap      r61, 4, r53
  SetIndex     r15, r44, r61
  Append       r62, r16, r61
  Move         r16, r62
  Index        r63, r15, r44
  Index        r64, r63, r49
L3:
  Append       r65, r64, r42
  SetIndex     r63, r49, r65
  Index        r66, r63, r51
  Const        r67, 1
  AddInt       r68, r66, r67
  SetIndex     r63, r51, r68
  // join d in date_dim on d.d_date_sk == ss.ss_sold_date_sk
  AddInt       r26, r26, r67
  Jump         L4
L1:
  // from ss in store_sales
  Len          r70, r16
  LessInt      r71, r69, r70
  JumpIfFalse  r71, L5
L0:
  Index        r72, r16, r69
  Move         r73, r72
  // select { s_store_sk: g.key, sales: sum(from x in g select x.ss.ss_ext_sales_price), profit: sum(from x in g select x.ss.ss_net_profit) }
  Const        r74, "s_store_sk"
L10:
  Const        r9, "key"
  Index        r75, r73, r9
  Const        r76, "sales"
  Const        r77, []
  Const        r11, "ss"
  Const        r12, "ss_ext_sales_price"
  IterPrep     r78, r73
  Len          r79, r78
  Const        r52, 0
  Move         r80, r52
  LessInt      r81, r80, r79
  JumpIfFalse  r81, L6
  Index        r82, r78, r80
  Move         r83, r82
  Const        r11, "ss"
L7:
  Index        r84, r83, r11
  Const        r12, "ss_ext_sales_price"
  Index        r85, r84, r12
  Append       r86, r77, r85
  Move         r77, r86
  Const        r67, 1
  AddInt       r80, r80, r67
  Jump         L7
L6:
  IterPrep     r90, r73
  Len          r91, r90
  Const        r52, 0
  Move         r92, r52
  LessInt      r93, r92, r91
  JumpIfFalse  r93, L8
  Index        r94, r90, r92
  Move         r83, r94
  Const        r11, "ss"
L9:
  Index        r95, r83, r11
  Const        r14, "ss_net_profit"
  Index        r96, r95, r14
  Append       r97, r89, r96
  Move         r89, r97
  Const        r67, 1
  AddInt       r92, r92, r67
  Jump         L9
L8:
  Move         r103, r88
  Move         r104, r98
  MakeMap      r105, 3, r99
  // from ss in store_sales
  Append       r106, r7, r105
  Move         r7, r106
  Const        r67, 1
  AddInt       r69, r69, r67
  Jump         L10
L5:
  // select { s_store_sk: g.key, returns: sum(from x in g select x.sr.sr_return_amt), profit_loss: sum(from x in g select x.sr.sr_net_loss) }
  Const        r110, "sr_return_amt"
  Const        r111, "profit_loss"
  Const        r112, "sr_net_loss"
  // from sr in store_returns
  MakeMap      r113, 0, r0
  Const        r17, []
  Move         r114, r17
  IterPrep     r115, r2
  Len          r116, r115
  Const        r117, 0
  LessInt      r118, r117, r116
  JumpIfFalse  r118, L11
  Index        r119, r115, r117
  Move         r120, r119
  // join d in date_dim on d.d_date_sk == sr.sr_returned_date_sk
  IterPrep     r121, r0
  Len          r122, r121
  Const        r123, 0
  LessInt      r124, r123, r122
  JumpIfFalse  r124, L12
  Index        r125, r121, r123
  Move         r126, r125
  Const        r30, "d_date_sk"
  Index        r127, r126, r30
  Const        r128, "sr_returned_date_sk"
L15:
  Index        r129, r120, r128
  Equal        r130, r127, r129
  JumpIfFalse  r130, L13
  // from sr in store_returns
  Const        r109, "sr"
  Move         r131, r120
  Const        r36, "d"
  Move         r132, r126
  Move         r133, r109
  Move         r134, r131
  Move         r135, r36
  Move         r136, r132
  MakeMap      r137, 2, r133
  // group by sr.s_store_sk into g
  Const        r8, "s_store_sk"
  Index        r138, r120, r8
  Str          r139, r138
  In           r140, r139, r113
  JumpIfTrue   r140, L14
  // from sr in store_returns
  Const        r17, []
  Const        r46, "__group__"
  Const        r47, true
  Const        r9, "key"
  // group by sr.s_store_sk into g
  Move         r141, r138
  // from sr in store_returns
  Const        r49, "items"
  Move         r142, r17
  Const        r51, "count"
  Const        r52, 0
  Move         r143, r46
  Move         r144, r47
  Move         r145, r9
  Move         r146, r141
  Move         r147, r49
  Move         r148, r142
  Move         r149, r51
  Move         r150, r52
  MakeMap      r151, 4, r143
  SetIndex     r113, r139, r151
  Append       r152, r114, r151
  Move         r114, r152
  Index        r153, r113, r139
  Index        r154, r153, r49
  Append       r155, r154, r137
  SetIndex     r153, r49, r155
  Index        r156, r153, r51
  Const        r67, 1
  AddInt       r157, r156, r67
L14:
  SetIndex     r153, r51, r157
  // join d in date_dim on d.d_date_sk == sr.sr_returned_date_sk
  AddInt       r123, r123, r67
  Jump         L15
L13:
  // from sr in store_returns
  JumpIfFalse  r160, L16
  Index        r161, r114, r158
  Move         r73, r161
L12:
  // select { s_store_sk: g.key, returns: sum(from x in g select x.sr.sr_return_amt), profit_loss: sum(from x in g select x.sr.sr_net_loss) }
  Const        r162, "s_store_sk"
  Const        r9, "key"
  Index        r163, r73, r9
L11:
  Const        r164, "returns"
  Const        r165, []
  Const        r109, "sr"
L21:
  Const        r110, "sr_return_amt"
  IterPrep     r166, r73
  Len          r167, r166
  Const        r52, 0
  Move         r168, r52
  LessInt      r169, r168, r167
  JumpIfFalse  r169, L17
  Index        r170, r166, r168
  Move         r83, r170
  Const        r109, "sr"
  Index        r171, r83, r109
  Const        r110, "sr_return_amt"
  Index        r172, r171, r110
  Append       r173, r165, r172
  Move         r165, r173
L18:
  Const        r67, 1
  AddInt       r168, r168, r67
  Jump         L18
L17:
  JumpIfFalse  r180, L19
  Index        r181, r177, r179
  Move         r83, r181
  Const        r109, "sr"
  Index        r182, r83, r109
  Const        r112, "sr_net_loss"
  Index        r183, r182, r112
  Append       r184, r176, r183
  Move         r176, r184
L20:
  Const        r67, 1
  AddInt       r179, r179, r67
  Jump         L20
L19:
  // from sr in store_returns
  Const        r67, 1
  AddInt       r158, r158, r67
  Jump         L21
L16:
  // from cs in catalog_sales
  Move         r200, r17
  IterPrep     r201, r3
  Len          r202, r201
  Const        r203, 0
  LessInt      r204, r203, r202
  JumpIfFalse  r204, L22
  Index        r205, r201, r203
  Move         r206, r205
  // join d in date_dim on d.d_date_sk == cs.cs_sold_date_sk
  IterPrep     r207, r0
  Len          r208, r207
  Const        r209, 0
  LessInt      r210, r209, r208
  JumpIfFalse  r210, L23
  Index        r211, r207, r209
  Move         r212, r211
  Const        r30, "d_date_sk"
L25:
  Index        r213, r212, r30
  Const        r214, "cs_sold_date_sk"
  Index        r215, r206, r214
  Equal        r216, r213, r215
  JumpIfFalse  r216, L24
  // from cs in catalog_sales
  Const        r196, "cs"
  Move         r217, r206
L26:
  Const        r36, "d"
  Move         r218, r212
  Move         r219, r196
  Move         r220, r217
  Move         r221, r36
  Move         r222, r218
  MakeMap      r223, 2, r219
  // group by cs.cs_call_center_sk into g
  Const        r195, "cs_call_center_sk"
  Index        r224, r206, r195
  Str          r225, r224
  In           r226, r225, r199
  JumpIfTrue   r226, L25
  // from cs in catalog_sales
  Const        r17, []
  Const        r46, "__group__"
  Const        r47, true
  Const        r9, "key"
  // group by cs.cs_call_center_sk into g
  Move         r227, r224
  // from cs in catalog_sales
  Const        r49, "items"
  Move         r228, r17
  Const        r51, "count"
  Const        r52, 0
  Move         r229, r46
  Move         r230, r47
  Move         r231, r9
  Move         r232, r227
  Move         r233, r49
  Move         r234, r228
  Move         r235, r51
  Move         r236, r52
  MakeMap      r237, 4, r229
  SetIndex     r199, r225, r237
  Append       r238, r200, r237
  Move         r200, r238
  Index        r239, r199, r225
  Index        r240, r239, r49
  Append       r241, r240, r223
  SetIndex     r239, r49, r241
  Index        r242, r239, r51
  Const        r67, 1
  AddInt       r243, r242, r67
  SetIndex     r239, r51, r243
  // join d in date_dim on d.d_date_sk == cs.cs_sold_date_sk
  AddInt       r209, r209, r67
  Jump         L26
L24:
  // select { cs_call_center_sk: g.key, sales: sum(from x in g select x.cs.cs_ext_sales_price), profit: sum(from x in g select x.cs.cs_net_profit) }
  Index        r249, r73, r9
  Const        r250, "sales"
  Const        r251, []
L23:
  Const        r196, "cs"
  Const        r197, "cs_ext_sales_price"
  IterPrep     r252, r73
L22:
  Len          r253, r252
  Const        r52, 0
  Move         r254, r52
L29:
  LessInt      r255, r254, r253
  JumpIfFalse  r255, L27
  Index        r256, r252, r254
  Move         r83, r256
  Const        r196, "cs"
  Index        r257, r83, r196
  Const        r197, "cs_ext_sales_price"
  Index        r258, r257, r197
  Append       r259, r251, r258
  Move         r251, r259
  Const        r67, 1
  AddInt       r254, r254, r67
  Const        r262, []
  Const        r196, "cs"
  Const        r198, "cs_net_profit"
  IterPrep     r263, r73
  Len          r264, r263
  Const        r52, 0
  Move         r265, r52
  LessInt      r266, r265, r264
  JumpIfFalse  r266, L28
  Index        r267, r263, r265
  Move         r83, r267
  Const        r196, "cs"
  Index        r268, r83, r196
L27:
  Const        r198, "cs_net_profit"
  Index        r269, r268, r198
  Append       r270, r262, r269
  Move         r262, r270
  Const        r67, 1
  AddInt       r265, r265, r67
  Move         r273, r249
  Move         r274, r250
  Move         r275, r260
  Move         r276, r261
  Move         r277, r271
  MakeMap      r278, 3, r272
  // from cs in catalog_sales
  Append       r279, r194, r278
  Move         r194, r279
  Const        r67, 1
  AddInt       r244, r244, r67
  Jump         L29
L28:
  // select { cr_call_center_sk: g.key, returns: sum(from x in g select x.cr.cr_return_amount), profit_loss: sum(from x in g select x.cr.cr_net_loss) }
  Const        r9, "key"
  Const        r108, "returns"
  Const        r282, "cr"
  Const        r283, "cr_return_amount"
  Const        r111, "profit_loss"
  Const        r284, "cr_net_loss"
  // from cr in catalog_returns
  MakeMap      r285, 0, r0
  Const        r17, []
  Move         r286, r17
  IterPrep     r287, r4
  Len          r288, r287
  Const        r289, 0
  LessInt      r290, r289, r288
  JumpIfFalse  r290, L30
  Index        r291, r287, r289
  Move         r292, r291
  // join d in date_dim on d.d_date_sk == cr.cr_returned_date_sk
  IterPrep     r293, r0
  Len          r294, r293
  Const        r295, 0
  LessInt      r296, r295, r294
  JumpIfFalse  r296, L31
  Index        r297, r293, r295
  Move         r298, r297
  Const        r30, "d_date_sk"
  Index        r299, r298, r30
  Const        r300, "cr_returned_date_sk"
  Index        r301, r292, r300
  Equal        r302, r299, r301
  JumpIfFalse  r302, L32
  // from cr in catalog_returns
  Const        r282, "cr"
  Move         r303, r292
  Const        r36, "d"
  Move         r304, r298
  Move         r305, r282
  Move         r306, r303
  Move         r307, r36
L34:
  Move         r308, r304
  MakeMap      r309, 2, r305
  // group by cr.cr_call_center_sk into g
  Const        r281, "cr_call_center_sk"
  Index        r310, r292, r281
  Str          r311, r310
  In           r312, r311, r285
  JumpIfTrue   r312, L33
  // from cr in catalog_returns
  Const        r17, []
  Const        r46, "__group__"
  Const        r47, true
  Const        r9, "key"
  // group by cr.cr_call_center_sk into g
  Move         r313, r310
  // from cr in catalog_returns
  Const        r49, "items"
  Move         r314, r17
  Const        r51, "count"
  Const        r52, 0
  Move         r315, r46
  Move         r316, r47
  Move         r317, r9
  Move         r318, r313
  Move         r319, r49
  Move         r320, r314
  Move         r321, r51
  Move         r322, r52
  MakeMap      r323, 4, r315
  SetIndex     r285, r311, r323
  Append       r324, r286, r323
  Move         r286, r324
  Index        r325, r285, r311
  Index        r326, r325, r49
  Append       r327, r326, r309
  SetIndex     r325, r49, r327
  Index        r328, r325, r51
  Const        r67, 1
  AddInt       r329, r328, r67
  SetIndex     r325, r51, r329
  // join d in date_dim on d.d_date_sk == cr.cr_returned_date_sk
  AddInt       r295, r295, r67
  Jump         L34
L33:
  // from cr in catalog_returns
  JumpIfFalse  r332, L35
  Index        r333, r286, r330
  Move         r73, r333
  // select { cr_call_center_sk: g.key, returns: sum(from x in g select x.cr.cr_return_amount), profit_loss: sum(from x in g select x.cr.cr_net_loss) }
  Const        r334, "cr_call_center_sk"
  Const        r9, "key"
  Index        r335, r73, r9
  Const        r336, "returns"
  Const        r337, []
  Const        r282, "cr"
  Const        r283, "cr_return_amount"
L32:
  IterPrep     r338, r73
  Len          r339, r338
  Const        r52, 0
L31:
  Move         r340, r52
  LessInt      r341, r340, r339
  JumpIfFalse  r341, L36
L30:
  Index        r342, r338, r340
  Move         r83, r342
  Const        r282, "cr"
L38:
  Index        r343, r83, r282
  Const        r283, "cr_return_amount"
  Index        r344, r343, r283
  Append       r345, r337, r344
  Move         r337, r345
  Const        r67, 1
  AddInt       r340, r340, r67
  Const        r52, 0
  Move         r351, r52
  LessInt      r352, r351, r350
  JumpIfFalse  r352, L37
  Index        r353, r349, r351
  Move         r83, r353
  Const        r282, "cr"
  Index        r354, r83, r282
  Const        r284, "cr_net_loss"
  Index        r355, r354, r284
  Append       r356, r348, r355
  Move         r348, r356
  Const        r67, 1
L36:
  AddInt       r351, r351, r67
  MakeMap      r364, 3, r358
  // from cr in catalog_returns
  Append       r365, r280, r364
  Move         r280, r365
  Const        r67, 1
  AddInt       r330, r330, r67
  Jump         L38
L37:
  // select { wp_web_page_sk: g.key, sales: sum(from x in g select x.ws.ws_ext_sales_price), profit: sum(from x in g select x.ws.ws_net_profit) }
  Const        r13, "profit"
  Const        r371, "ws_net_profit"
  // from ws in web_sales
  MakeMap      r372, 0, r0
  Const        r17, []
  Move         r373, r17
  IterPrep     r374, r5
  Len          r375, r374
  Const        r376, 0
  LessInt      r377, r376, r375
  JumpIfFalse  r377, L39
  Index        r378, r374, r376
  Move         r379, r378
  // join d in date_dim on d.d_date_sk == ws.ws_sold_date_sk
  IterPrep     r380, r0
L35:
  Len          r381, r380
  Const        r382, 0
  LessInt      r383, r382, r381
  JumpIfFalse  r383, L40
  Index        r384, r380, r382
  Move         r385, r384
  Const        r30, "d_date_sk"
  Index        r386, r385, r30
  Const        r387, "ws_sold_date_sk"
  Index        r388, r379, r387
  Equal        r389, r386, r388
  JumpIfFalse  r389, L41
  // from ws in web_sales
  Const        r369, "ws"
  Move         r390, r379
  Const        r36, "d"
  Move         r391, r385
  Move         r392, r369
  Move         r393, r390
  Move         r394, r36
  Move         r395, r391
  MakeMap      r396, 2, r392
  // group by ws.ws_web_page_sk into g
  Const        r367, "ws_web_page_sk"
  Index        r397, r379, r367
L43:
  Str          r398, r397
  In           r399, r398, r372
  JumpIfTrue   r399, L42
  // from ws in web_sales
  Const        r17, []
  Const        r46, "__group__"
  Const        r47, true
  Const        r9, "key"
  // group by ws.ws_web_page_sk into g
  Move         r400, r397
  // from ws in web_sales
  Const        r49, "items"
  Move         r401, r17
  Const        r51, "count"
  Const        r52, 0
  Move         r402, r46
  Move         r403, r47
  Move         r404, r9
  Move         r405, r400
  Move         r406, r49
  Move         r407, r401
  Move         r408, r51
  Move         r409, r52
  MakeMap      r410, 4, r402
  SetIndex     r372, r398, r410
  Append       r411, r373, r410
  Move         r373, r411
  Index        r412, r372, r398
  Index        r413, r412, r49
  Append       r414, r413, r396
  SetIndex     r412, r49, r414
  Index        r415, r412, r51
  Const        r67, 1
  AddInt       r416, r415, r67
  SetIndex     r412, r51, r416
  // join d in date_dim on d.d_date_sk == ws.ws_sold_date_sk
  AddInt       r382, r382, r67
  Jump         L43
L42:
  // select { wp_web_page_sk: g.key, sales: sum(from x in g select x.ws.ws_ext_sales_price), profit: sum(from x in g select x.ws.ws_net_profit) }
  Const        r9, "key"
  Index        r422, r73, r9
  Const        r423, "sales"
  Const        r424, []
  Const        r369, "ws"
  Const        r370, "ws_ext_sales_price"
  IterPrep     r425, r73
  Len          r426, r425
  Const        r52, 0
  Move         r427, r52
L41:
  LessInt      r428, r427, r426
  JumpIfFalse  r428, L44
  Index        r429, r425, r427
L40:
  Move         r83, r429
  Const        r369, "ws"
  Index        r430, r83, r369
L39:
  Const        r370, "ws_ext_sales_price"
  Index        r431, r430, r370
  Append       r432, r424, r431
L46:
  Move         r424, r432
  Const        r67, 1
  AddInt       r427, r427, r67
  Index        r440, r436, r438
  Move         r83, r440
  Const        r369, "ws"
  Index        r441, r83, r369
  Const        r371, "ws_net_profit"
  Index        r442, r441, r371
  Append       r443, r435, r442
  Move         r435, r443
  Const        r67, 1
  AddInt       r438, r438, r67
  Jump         L45
L44:
  Move         r446, r422
  Move         r447, r423
  Move         r448, r433
  Move         r449, r434
  Move         r450, r444
  MakeMap      r451, 3, r445
  // from ws in web_sales
  Append       r452, r366, r451
  Move         r366, r452
  Const        r67, 1
L45:
  AddInt       r417, r417, r67
  Jump         L46
