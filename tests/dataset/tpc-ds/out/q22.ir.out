func main (regs=150)
  // let inventory = [
  Const        r0, [{"inv_date_sk": 1, "inv_item_sk": 1, "inv_quantity_on_hand": 10}, {"inv_date_sk": 2, "inv_item_sk": 1, "inv_quantity_on_hand": 20}, {"inv_date_sk": 3, "inv_item_sk": 1, "inv_quantity_on_hand": 10}, {"inv_date_sk": 4, "inv_item_sk": 1, "inv_quantity_on_hand": 20}, {"inv_date_sk": 1, "inv_item_sk": 2, "inv_quantity_on_hand": 50}]
  // let date_dim = [
  Const        r1, [{"d_date_sk": 1, "d_month_seq": 0}, {"d_date_sk": 2, "d_month_seq": 1}, {"d_date_sk": 3, "d_month_seq": 2}, {"d_date_sk": 4, "d_month_seq": 3}]
  // let item = [
  Const        r2, [{"i_brand": "Brand1", "i_category": "Cat1", "i_class": "Class1", "i_item_sk": 1, "i_product_name": "Prod1"}, {"i_brand": "Brand2", "i_category": "Cat2", "i_class": "Class2", "i_item_sk": 2, "i_product_name": "Prod2"}]
  // from inv in inventory
  Const        r3, []
  // product_name: i.i_product_name,
  Const        r4, "product_name"
  Const        r5, "i_product_name"
  // brand: i.i_brand,
  Const        r6, "brand"
  Const        r7, "i_brand"
  // class: i.i_class,
  Const        r8, "class"
  Const        r9, "i_class"
  // category: i.i_category
  Const        r10, "category"
  Const        r11, "i_category"
  // where d.d_month_seq >= 0 && d.d_month_seq <= 11
  Const        r12, "d_month_seq"
  // i_product_name: g.key.product_name,
  Const        r13, "key"
  // qoh: avg(from x in g select x.inv_quantity_on_hand)
  Const        r14, "qoh"
  Const        r15, "inv_quantity_on_hand"
  // from inv in inventory
  MakeMap      r16, 0, r0
  Const        r18, []
  Move         r17, r18
  IterPrep     r19, r0
  Len          r20, r19
  Const        r21, 0
  LessInt      r22, r21, r20
  JumpIfFalse  r22, L0
  Index        r23, r19, r21
  Move         r24, r23
  // join d in date_dim on inv.inv_date_sk == d.d_date_sk
  IterPrep     r25, r1
  Len          r26, r25
  Const        r27, 0
  LessInt      r28, r27, r26
  JumpIfFalse  r28, L1
  Index        r29, r25, r27
  Move         r30, r29
  Const        r31, "inv_date_sk"
L7:
  Index        r32, r24, r31
  Const        r33, "d_date_sk"
  Index        r34, r30, r33
  Equal        r35, r32, r34
  JumpIfFalse  r35, L2
  // join i in item on inv.inv_item_sk == i.i_item_sk
  IterPrep     r36, r2
  Len          r37, r36
  Const        r38, 0
  LessInt      r39, r38, r37
  JumpIfFalse  r39, L2
  Index        r40, r36, r38
  Move         r41, r40
  Const        r42, "inv_item_sk"
  Index        r43, r24, r42
  Const        r44, "i_item_sk"
  Index        r45, r41, r44
  Equal        r46, r43, r45
  JumpIfFalse  r46, L3
  // where d.d_month_seq >= 0 && d.d_month_seq <= 11
  Const        r12, "d_month_seq"
  Index        r47, r30, r12
L6:
  Const        r48, 0
  LessEq       r49, r48, r47
  Index        r50, r30, r12
  Const        r51, 11
  LessEq       r52, r50, r51
  Move         r53, r49
  JumpIfFalse  r53, L4
  Move         r53, r52
  JumpIfFalse  r53, L3
  // from inv in inventory
  Const        r54, "inv"
  Move         r55, r24
  Const        r56, "d"
  Move         r57, r30
  Const        r58, "i"
  Move         r59, r41
  Move         r60, r54
  Move         r61, r55
  Move         r62, r56
  Move         r63, r57
  Move         r64, r58
  Move         r65, r59
L4:
  MakeMap      r66, 3, r60
  // product_name: i.i_product_name,
  Const        r67, "product_name"
  Const        r5, "i_product_name"
  Index        r68, r41, r5
  // brand: i.i_brand,
  Const        r69, "brand"
  Const        r7, "i_brand"
  Index        r70, r41, r7
  // class: i.i_class,
  Const        r71, "class"
  Const        r9, "i_class"
  Index        r72, r41, r9
  // category: i.i_category
  Const        r73, "category"
  Const        r11, "i_category"
  Index        r74, r41, r11
  // product_name: i.i_product_name,
  Move         r75, r67
  Move         r76, r68
  // brand: i.i_brand,
  Move         r77, r69
  Move         r78, r70
  // class: i.i_class,
  Move         r79, r71
  Move         r80, r72
  // category: i.i_category
  Move         r81, r73
  Move         r82, r74
  // group by {
  MakeMap      r83, 4, r75
  Str          r84, r83
  In           r85, r84, r16
  JumpIfTrue   r85, L5
  // from inv in inventory
  Const        r18, []
  Const        r86, "__group__"
  Const        r87, true
  Const        r13, "key"
  // group by {
  Move         r88, r83
  // from inv in inventory
  Const        r89, "items"
  Move         r90, r18
  Const        r91, "count"
  Const        r48, 0
  Move         r92, r86
  Move         r93, r87
  Move         r94, r13
  Move         r95, r88
  Move         r96, r89
  Move         r97, r90
  Move         r98, r91
  Move         r99, r48
  MakeMap      r100, 4, r92
  SetIndex     r16, r84, r100
  Append       r101, r17, r100
  Move         r17, r101
  Index        r102, r16, r84
  Index        r103, r102, r89
  Append       r104, r103, r66
  SetIndex     r102, r89, r104
  Index        r105, r102, r91
  Const        r106, 1
  AddInt       r107, r105, r106
  SetIndex     r102, r91, r107
  // join i in item on inv.inv_item_sk == i.i_item_sk
  AddInt       r38, r38, r106
  Jump         L6
L5:
  // from inv in inventory
  Const        r106, 1
  AddInt       r21, r21, r106
  Jump         L7
L3:
  // i_product_name: g.key.product_name,
  Const        r113, "i_product_name"
  Const        r13, "key"
  Index        r114, r112, r13
L2:
  Const        r4, "product_name"
  Index        r115, r114, r4
  // i_brand: g.key.brand,
  Const        r116, "i_brand"
L1:
  Index        r117, r112, r13
  Const        r6, "brand"
  Index        r118, r117, r6
L0:
  // i_class: g.key.class,
  Const        r119, "i_class"
  Index        r120, r112, r13
  Const        r8, "class"
L9:
  Index        r121, r120, r8
  // i_category: g.key.category,
  Const        r122, "i_category"
  Index        r123, r112, r13
  Const        r10, "category"
  Index        r124, r123, r10
  // qoh: avg(from x in g select x.inv_quantity_on_hand)
  Const        r125, "qoh"
  Const        r126, []
  Const        r15, "inv_quantity_on_hand"
  IterPrep     r127, r112
  Len          r128, r127
  Const        r48, 0
  Move         r129, r48
  LessInt      r130, r129, r128
  JumpIfFalse  r130, L8
  Index        r131, r127, r129
  Move         r132, r131
  Const        r15, "inv_quantity_on_hand"
  Index        r133, r132, r15
  Append       r134, r126, r133
  Move         r126, r134
  Const        r106, 1
  AddInt       r129, r129, r106
  // i_category: g.key.category,
  Move         r143, r124
  // qoh: avg(from x in g select x.inv_quantity_on_hand)
  Move         r144, r125
  Move         r145, r135
  // select {
  MakeMap      r146, 5, r136
  // from inv in inventory
  Append       r147, r3, r146
  Move         r3, r147
  Const        r106, 1
  AddInt       r108, r108, r106
  Jump         L9
L8:
  // expect qoh == [
  Equal        r149, r3, r148
  Expect       r149
  Return       r0
