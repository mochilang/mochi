func main (regs=220)
  // let store_sales = [
  Const        r0, [{"customer": 1, "item": 101, "sold": 1, "store": 1, "ticket": 1}, {"customer": 1, "item": 102, "sold": 1, "store": 1, "ticket": 2}, {"customer": 1, "item": 103, "sold": 1, "store": 1, "ticket": 3}, {"customer": 1, "item": 104, "sold": 1, "store": 1, "ticket": 4}, {"customer": 1, "item": 105, "sold": 1, "store": 1, "ticket": 5}]
  // let store_returns = [
  Const        r1, [{"customer": 1, "item": 101, "returned": 16, "ticket": 1}, {"customer": 1, "item": 102, "returned": 46, "ticket": 2}, {"customer": 1, "item": 103, "returned": 76, "ticket": 3}, {"customer": 1, "item": 104, "returned": 111, "ticket": 4}, {"customer": 1, "item": 105, "returned": 151, "ticket": 5}]
  // let date_dim = [
  Const        r2, [{"d_date_sk": 1, "d_moy": 7, "d_year": 2001}, {"d_date_sk": 16, "d_moy": 8, "d_year": 2001}, {"d_date_sk": 46, "d_moy": 8, "d_year": 2001}, {"d_date_sk": 76, "d_moy": 8, "d_year": 2001}, {"d_date_sk": 111, "d_moy": 8, "d_year": 2001}, {"d_date_sk": 151, "d_moy": 8, "d_year": 2001}]
  // let store = [
  Const        r3, [{"s_city": "City", "s_company_id": 1, "s_county": "County", "s_state": "CA", "s_store_name": "Main", "s_store_sk": 1, "s_street_name": "Main", "s_street_number": "1", "s_street_type": "St", "s_suite_number": "100", "s_zip": "12345"}]
  // let year = 2001
  Const        r4, 2001
  // let month = 8
  Const        r5, 8
  // from ss in store_sales
  Const        r6, []
  // select {s: s, diff: sr.returned - ss.sold}
  Const        r7, "s"
  Const        r8, "diff"
  Const        r9, "returned"
  Const        r10, "sold"
  // from ss in store_sales
  IterPrep     r11, r0
  Len          r12, r11
  Const        r14, 0
  Move         r13, r14
L4:
  LessInt      r15, r13, r12
  JumpIfFalse  r15, L0
  Index        r16, r11, r13
  Move         r17, r16
  // join sr in store_returns on ss.ticket == sr.ticket && ss.item == sr.item && ss.customer == sr.customer
  IterPrep     r18, r1
  Len          r19, r18
  Const        r20, "ticket"
  Const        r21, "item"
  Const        r22, "customer"
  // select {s: s, diff: sr.returned - ss.sold}
  Const        r7, "s"
  Const        r8, "diff"
  Const        r9, "returned"
  Const        r10, "sold"
  // join sr in store_returns on ss.ticket == sr.ticket && ss.item == sr.item && ss.customer == sr.customer
  Const        r14, 0
  Move         r23, r14
  LessInt      r24, r23, r19
  JumpIfFalse  r24, L1
  Index        r25, r18, r23
L6:
  Move         r26, r25
  Const        r20, "ticket"
  Index        r27, r17, r20
  Index        r28, r26, r20
  Equal        r29, r27, r28
  Const        r21, "item"
  Index        r30, r17, r21
  Index        r31, r26, r21
  Equal        r32, r30, r31
  Const        r22, "customer"
  Index        r33, r17, r22
  Index        r34, r26, r22
  Equal        r35, r33, r34
  Move         r36, r29
  JumpIfFalse  r36, L2
  Move         r36, r32
  JumpIfFalse  r36, L2
  Move         r36, r35
  JumpIfFalse  r36, L3
  // join d1 in date_dim on ss.sold == d1.d_date_sk
  IterPrep     r37, r2
  Len          r38, r37
  Const        r10, "sold"
  Const        r39, "d_date_sk"
  // select {s: s, diff: sr.returned - ss.sold}
  Const        r7, "s"
L2:
  Const        r8, "diff"
  Const        r9, "returned"
  // join d1 in date_dim on ss.sold == d1.d_date_sk
  Const        r14, 0
  Move         r40, r14
  LessInt      r41, r40, r38
  JumpIfFalse  r41, L3
  Index        r42, r37, r40
  Move         r43, r42
  Const        r10, "sold"
  Index        r44, r17, r10
  Const        r39, "d_date_sk"
L7:
  Index        r45, r43, r39
  Equal        r46, r44, r45
  JumpIfFalse  r46, L4
  // join d2 in date_dim on sr.returned == d2.d_date_sk && d2.d_year == year && d2.d_moy == month
  IterPrep     r47, r2
  Len          r48, r47
  Const        r9, "returned"
  Const        r39, "d_date_sk"
  Const        r49, "d_year"
  Const        r50, "d_moy"
  // select {s: s, diff: sr.returned - ss.sold}
  Const        r7, "s"
  Const        r8, "diff"
  Const        r10, "sold"
  // join d2 in date_dim on sr.returned == d2.d_date_sk && d2.d_year == year && d2.d_moy == month
  Const        r14, 0
  Move         r51, r14
  LessInt      r52, r51, r48
  JumpIfFalse  r52, L4
  Index        r53, r47, r51
  Move         r54, r53
  Const        r9, "returned"
  Index        r55, r26, r9
  Const        r39, "d_date_sk"
  Index        r56, r54, r39
  Equal        r57, r55, r56
  Const        r49, "d_year"
  Index        r58, r54, r49
  Const        r4, 2001
  Equal        r59, r58, r4
  Const        r50, "d_moy"
  Index        r60, r54, r50
  Const        r5, 8
  Equal        r61, r60, r5
  Move         r62, r57
  JumpIfFalse  r62, L5
  Move         r62, r59
  JumpIfFalse  r62, L5
  Move         r62, r61
  JumpIfFalse  r62, L6
  // join s in store on ss.store == s.s_store_sk
  IterPrep     r63, r3
  Len          r64, r63
  Const        r65, "store"
  Const        r66, "s_store_sk"
  // select {s: s, diff: sr.returned - ss.sold}
  Const        r7, "s"
  Const        r8, "diff"
  Const        r9, "returned"
L5:
  Const        r10, "sold"
  // join s in store on ss.store == s.s_store_sk
  Const        r14, 0
  Move         r67, r14
  LessInt      r68, r67, r64
  JumpIfFalse  r68, L6
  Index        r69, r63, r67
  Move         r70, r69
  Const        r65, "store"
  Index        r71, r17, r65
  Const        r66, "s_store_sk"
  Index        r72, r70, r66
L8:
  Equal        r73, r71, r72
  JumpIfFalse  r73, L7
  // select {s: s, diff: sr.returned - ss.sold}
  Const        r74, "s"
  Const        r75, "diff"
  Const        r9, "returned"
  Index        r76, r26, r9
  Const        r10, "sold"
  Index        r77, r17, r10
  Sub          r78, r76, r77
  Move         r79, r74
  Move         r80, r70
  Move         r81, r75
  Move         r82, r78
  MakeMap      r83, 2, r79
  // from ss in store_sales
  Append       r84, r6, r83
  Move         r6, r84
  // join s in store on ss.store == s.s_store_sk
  Const        r85, 1
  Add          r67, r67, r85
  Jump         L8
L3:
  // s_store_name: g.key.s_store_name,
  Const        r87, "s_store_name"
  Const        r88, "key"
  // d30: count(from x in g where x.diff <= 30 select 1),
  Const        r89, "d30"
L1:
  Const        r8, "diff"
  // d31_60: count(from x in g where x.diff > 30 && x.diff <= 60 select 1),
  Const        r90, "d31_60"
  // d61_90: count(from x in g where x.diff > 60 && x.diff <= 90 select 1),
  Const        r91, "d61_90"
L0:
  // d91_120: count(from x in g where x.diff > 90 && x.diff <= 120 select 1),
  Const        r92, "d91_120"
  // d_gt_120: count(from x in g where x.diff > 120 select 1)
  Const        r93, "d_gt_120"
  // from j in joined
  IterPrep     r94, r6
  Len          r95, r94
  Const        r96, 0
  MakeMap      r97, 0, r0
  Const        r99, []
  Move         r98, r99
  LessInt      r100, r96, r95
  JumpIfFalse  r100, L9
  Index        r101, r94, r96
  Move         r102, r101
  // group by j.s into g
  Const        r7, "s"
  Index        r103, r102, r7
  Str          r104, r103
  In           r105, r104, r97
  JumpIfTrue   r105, L10
  // from j in joined
  Const        r99, []
  Const        r106, "__group__"
  Const        r107, true
  Const        r88, "key"
  // group by j.s into g
  Move         r108, r103
  // from j in joined
  Const        r109, "items"
  Move         r110, r99
L11:
  Const        r111, "count"
  Const        r14, 0
  Move         r112, r106
  Move         r113, r107
  Move         r114, r88
  Move         r115, r108
  Move         r116, r109
  Move         r117, r110
  Move         r118, r111
  Move         r119, r14
  MakeMap      r120, 4, r112
  SetIndex     r97, r104, r120
  Append       r121, r98, r120
  Move         r98, r121
  Index        r122, r97, r104
  Index        r123, r122, r109
  Append       r124, r123, r101
  SetIndex     r122, r109, r124
  Index        r125, r122, r111
  Const        r85, 1
  AddInt       r126, r125, r85
  SetIndex     r122, r111, r126
  AddInt       r96, r96, r85
  Jump         L11
L10:
  Move         r131, r130
  // s_store_name: g.key.s_store_name,
  Const        r132, "s_store_name"
  Const        r88, "key"
  Index        r133, r131, r88
  Const        r87, "s_store_name"
  Index        r134, r133, r87
  // d30: count(from x in g where x.diff <= 30 select 1),
  Const        r135, "d30"
  Const        r136, []
  Const        r8, "diff"
  IterPrep     r137, r131
  Len          r138, r137
  Const        r14, 0
  Move         r139, r14
L9:
  LessInt      r140, r139, r138
  JumpIfFalse  r140, L12
  Index        r141, r137, r139
L26:
  Move         r142, r141
  Const        r8, "diff"
  Index        r143, r142, r8
  Const        r144, 30
  LessEq       r145, r143, r144
  JumpIfFalse  r145, L13
  Const        r85, 1
  Append       r146, r136, r85
  Move         r136, r146
  AddInt       r139, r139, r85
  // d31_60: count(from x in g where x.diff > 30 && x.diff <= 60 select 1),
  Len          r151, r150
  Const        r14, 0
  Move         r152, r14
  LessInt      r153, r152, r151
  JumpIfFalse  r153, L14
  Index        r154, r150, r152
  Move         r142, r154
  Const        r8, "diff"
  Index        r155, r142, r8
  Const        r144, 30
  Less         r156, r144, r155
  Index        r157, r142, r8
L13:
  Const        r158, 60
  LessEq       r159, r157, r158
  Move         r160, r156
L12:
  JumpIfFalse  r160, L15
  Move         r160, r159
  JumpIfFalse  r160, L16
  Const        r85, 1
  Append       r161, r149, r85
  Move         r149, r161
  AddInt       r152, r152, r85
  // d61_90: count(from x in g where x.diff > 60 && x.diff <= 90 select 1),
  Const        r163, "d61_90"
  Const        r164, []
  Const        r8, "diff"
  IterPrep     r165, r131
  Len          r166, r165
  Const        r14, 0
  Move         r167, r14
  LessInt      r168, r167, r166
  JumpIfFalse  r168, L17
  Index        r169, r165, r167
  Move         r142, r169
  Const        r8, "diff"
  Index        r170, r142, r8
  Const        r158, 60
  Less         r171, r158, r170
L15:
  Index        r172, r142, r8
  Const        r173, 90
  LessEq       r174, r172, r173
  Move         r175, r171
L16:
  JumpIfFalse  r175, L18
  Move         r175, r174
  JumpIfFalse  r175, L19
L14:
  Const        r85, 1
  Append       r176, r164, r85
  Move         r164, r176
  AddInt       r167, r167, r85
  // d91_120: count(from x in g where x.diff > 90 && x.diff <= 120 select 1),
  IterPrep     r180, r131
  Len          r181, r180
  Const        r14, 0
  Move         r182, r14
  LessInt      r183, r182, r181
  JumpIfFalse  r183, L20
  Index        r184, r180, r182
  Move         r142, r184
  Const        r8, "diff"
  Index        r185, r142, r8
  Const        r173, 90
  Less         r186, r173, r185
  Index        r187, r142, r8
  Const        r188, 120
  LessEq       r189, r187, r188
L18:
  Move         r190, r186
  JumpIfFalse  r190, L21
  Move         r190, r189
  JumpIfFalse  r190, L22
L19:
  Const        r85, 1
  Append       r191, r179, r85
  Move         r179, r191
L17:
  AddInt       r182, r182, r85
  // d_gt_120: count(from x in g where x.diff > 120 select 1)
  Move         r197, r14
  LessInt      r198, r197, r196
  JumpIfFalse  r198, L23
  Index        r199, r195, r197
  Move         r142, r199
  Const        r8, "diff"
  Index        r200, r142, r8
  Const        r188, 120
  Less         r201, r188, r200
  JumpIfFalse  r201, L24
  Const        r85, 1
  Append       r202, r194, r85
  Move         r194, r202
  AddInt       r197, r197, r85
  Jump         L25
L21:
  Count        r203, r194
  // s_store_name: g.key.s_store_name,
  Move         r204, r132
  Move         r205, r134
  // d30: count(from x in g where x.diff <= 30 select 1),
  Move         r206, r135
L22:
  Move         r207, r147
  // d31_60: count(from x in g where x.diff > 30 && x.diff <= 60 select 1),
  Move         r208, r148
  Move         r209, r162
L20:
  // d61_90: count(from x in g where x.diff > 60 && x.diff <= 90 select 1),
  Move         r210, r163
  Move         r211, r177
  // d91_120: count(from x in g where x.diff > 90 && x.diff <= 120 select 1),
  Move         r212, r178
  Move         r213, r192
  // d_gt_120: count(from x in g where x.diff > 120 select 1)
  Move         r214, r193
  Move         r215, r203
  // select {
  MakeMap      r216, 6, r204
  // from j in joined
  Append       r217, r86, r216
L25:
  Move         r86, r217
  Const        r85, 1
  AddInt       r127, r127, r85
  Jump         L26
