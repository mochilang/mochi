func main (regs=230)
  // let store_sales = [
  Const        r0, [{"ss_cdemo_sk": 1, "ss_coupon_amt": 10, "ss_item_sk": 1, "ss_list_price": 100, "ss_quantity": 5, "ss_sales_price": 90, "ss_sold_date_sk": 1, "ss_store_sk": 1}, {"ss_cdemo_sk": 2, "ss_coupon_amt": 5, "ss_item_sk": 2, "ss_list_price": 50, "ss_quantity": 2, "ss_sales_price": 45, "ss_sold_date_sk": 1, "ss_store_sk": 2}]
  // let customer_demographics = [ { cd_demo_sk: 1, cd_gender: "F", cd_marital_status: "M", cd_education_status: "College" }, { cd_demo_sk: 2, cd_gender: "M", cd_marital_status: "S", cd_education_status: "College" } ]
  Const        r1, [{"cd_demo_sk": 1, "cd_education_status": "College", "cd_gender": "F", "cd_marital_status": "M"}, {"cd_demo_sk": 2, "cd_education_status": "College", "cd_gender": "M", "cd_marital_status": "S"}]
  // let date_dim = [ { d_date_sk: 1, d_year: 2000 } ]
  Const        r2, [{"d_date_sk": 1, "d_year": 2000}]
  // let store = [ { s_store_sk: 1, s_state: "CA" }, { s_store_sk: 2, s_state: "TX" } ]
  Const        r3, [{"s_state": "CA", "s_store_sk": 1}, {"s_state": "TX", "s_store_sk": 2}]
  // let item = [ { i_item_sk: 1, i_item_id: "ITEM1" }, { i_item_sk: 2, i_item_id: "ITEM2" } ]
  Const        r4, [{"i_item_id": "ITEM1", "i_item_sk": 1}, {"i_item_id": "ITEM2", "i_item_sk": 2}]
  // from ss in store_sales
  Const        r5, []
  // group by { item_id: i.i_item_id, state: s.s_state } into g
  Const        r6, "item_id"
  Const        r7, "i_item_id"
  Const        r8, "state"
  Const        r9, "s_state"
  // where cd.cd_gender == "F" && cd.cd_marital_status == "M" && cd.cd_education_status == "College" && d.d_year == 2000 && s.s_state in ["CA"]
  Const        r10, "cd_gender"
  Const        r11, "cd_marital_status"
  Const        r12, "cd_education_status"
  Const        r13, "d_year"
  // i_item_id: g.key.item_id,
  Const        r14, "key"
  // agg1: avg(from x in g select x.ss_quantity),
  Const        r15, "agg1"
  Const        r16, "ss_quantity"
  // agg2: avg(from x in g select x.ss_list_price),
  Const        r17, "agg2"
  Const        r18, "ss_list_price"
  // agg3: avg(from x in g select x.ss_coupon_amt),
  Const        r19, "agg3"
  Const        r20, "ss_coupon_amt"
  // agg4: avg(from x in g select x.ss_sales_price)
  Const        r21, "agg4"
  Const        r22, "ss_sales_price"
  // from ss in store_sales
  MakeMap      r23, 0, r0
  Const        r25, []
  Move         r24, r25
  IterPrep     r26, r0
  Len          r27, r26
  Const        r28, 0
L15:
  LessInt      r29, r28, r27
  JumpIfFalse  r29, L0
  Index        r30, r26, r28
  Move         r31, r30
  // join cd in customer_demographics on ss.ss_cdemo_sk == cd.cd_demo_sk
  IterPrep     r32, r1
  Len          r33, r32
  Const        r34, 0
L14:
  LessInt      r35, r34, r33
  JumpIfFalse  r35, L1
  Index        r36, r32, r34
  Move         r37, r36
  Const        r38, "ss_cdemo_sk"
  Index        r39, r31, r38
  Const        r40, "cd_demo_sk"
  Index        r41, r37, r40
  Equal        r42, r39, r41
  JumpIfFalse  r42, L2
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  IterPrep     r43, r2
  Len          r44, r43
  Const        r45, 0
L13:
  LessInt      r46, r45, r44
  JumpIfFalse  r46, L2
  Index        r47, r43, r45
  Move         r48, r47
  Const        r49, "ss_sold_date_sk"
  Index        r50, r31, r49
  Const        r51, "d_date_sk"
  Index        r52, r48, r51
  Equal        r53, r50, r52
  JumpIfFalse  r53, L3
  // join s in store on ss.ss_store_sk == s.s_store_sk
  IterPrep     r54, r3
  Len          r55, r54
  Const        r56, 0
L12:
  LessInt      r57, r56, r55
  JumpIfFalse  r57, L3
  Index        r58, r54, r56
  Move         r59, r58
  Const        r60, "ss_store_sk"
  Index        r61, r31, r60
  Const        r62, "s_store_sk"
  Index        r63, r59, r62
  Equal        r64, r61, r63
  JumpIfFalse  r64, L4
  // join i in item on ss.ss_item_sk == i.i_item_sk
  IterPrep     r65, r4
  Len          r66, r65
  Const        r67, 0
L11:
  LessInt      r68, r67, r66
  JumpIfFalse  r68, L4
  Index        r69, r65, r67
  Move         r70, r69
  Const        r71, "ss_item_sk"
  Index        r72, r31, r71
  Const        r73, "i_item_sk"
  Index        r74, r70, r73
  Equal        r75, r72, r74
  JumpIfFalse  r75, L5
  // where cd.cd_gender == "F" && cd.cd_marital_status == "M" && cd.cd_education_status == "College" && d.d_year == 2000 && s.s_state in ["CA"]
  Index        r76, r37, r10
  Const        r77, "F"
  Equal        r78, r76, r77
  Index        r79, r37, r11
  Const        r80, "M"
  Equal        r81, r79, r80
  Index        r82, r37, r12
  Const        r83, "College"
  Equal        r84, r82, r83
  Index        r85, r48, r13
  Const        r86, 2000
  Equal        r87, r85, r86
  Index        r88, r59, r9
  Const        r89, ["CA"]
  In           r90, r88, r89
  Move         r91, r78
  JumpIfFalse  r91, L6
  Move         r91, r81
L6:
  Move         r92, r91
  JumpIfFalse  r92, L7
  Move         r92, r84
L7:
  Move         r93, r92
  JumpIfFalse  r93, L8
  Move         r93, r87
L8:
  Move         r94, r93
  JumpIfFalse  r94, L9
  Move         r94, r90
L9:
  JumpIfFalse  r94, L5
  // from ss in store_sales
  Const        r95, "ss"
  Move         r96, r31
  Const        r97, "cd"
  Move         r98, r37
  Const        r99, "d"
  Move         r100, r48
  Const        r101, "s"
  Move         r102, r59
  Const        r103, "i"
  Move         r104, r70
  Move         r105, r95
  Move         r106, r96
  Move         r107, r97
  Move         r108, r98
  Move         r109, r99
  Move         r110, r100
  Move         r111, r101
  Move         r112, r102
  Move         r113, r103
  Move         r114, r104
  MakeMap      r115, 5, r105
  // group by { item_id: i.i_item_id, state: s.s_state } into g
  Const        r116, "item_id"
  Index        r117, r70, r7
  Const        r118, "state"
  Index        r119, r59, r9
  Move         r120, r116
  Move         r121, r117
  Move         r122, r118
  Move         r123, r119
  MakeMap      r124, 2, r120
  Str          r125, r124
  In           r126, r125, r23
  JumpIfTrue   r126, L10
  // from ss in store_sales
  Const        r127, []
  Const        r128, "__group__"
  Const        r129, true
  // group by { item_id: i.i_item_id, state: s.s_state } into g
  Move         r130, r124
  // from ss in store_sales
  Const        r131, "items"
  Move         r132, r127
  Const        r133, "count"
  Const        r134, 0
  Move         r135, r128
  Move         r136, r129
  Move         r137, r14
  Move         r138, r130
  Move         r139, r131
  Move         r140, r132
  Move         r141, r133
  Move         r142, r134
  MakeMap      r143, 4, r135
  SetIndex     r23, r125, r143
  Append       r144, r24, r143
  Move         r24, r144
L10:
  Index        r145, r23, r125
  Index        r146, r145, r131
  Append       r147, r146, r115
  SetIndex     r145, r131, r147
  Index        r148, r145, r133
  Const        r149, 1
  AddInt       r150, r148, r149
  SetIndex     r145, r133, r150
L5:
  // join i in item on ss.ss_item_sk == i.i_item_sk
  AddInt       r67, r67, r149
  Jump         L11
L4:
  // join s in store on ss.ss_store_sk == s.s_store_sk
  AddInt       r56, r56, r149
  Jump         L12
L3:
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  AddInt       r45, r45, r149
  Jump         L13
L2:
  // join cd in customer_demographics on ss.ss_cdemo_sk == cd.cd_demo_sk
  AddInt       r34, r34, r149
  Jump         L14
L1:
  // from ss in store_sales
  AddInt       r28, r28, r149
  Jump         L15
L0:
  Move         r151, r134
  Len          r152, r24
L25:
  LessInt      r153, r151, r152
  JumpIfFalse  r153, L16
  Index        r154, r24, r151
  Move         r155, r154
  // i_item_id: g.key.item_id,
  Const        r156, "i_item_id"
  Index        r157, r155, r14
  Index        r158, r157, r6
  // s_state: g.key.state,
  Const        r159, "s_state"
  Index        r160, r155, r14
  Index        r161, r160, r8
  // agg1: avg(from x in g select x.ss_quantity),
  Const        r162, "agg1"
  Const        r163, []
  IterPrep     r164, r155
  Len          r165, r164
  Move         r166, r134
L18:
  LessInt      r167, r166, r165
  JumpIfFalse  r167, L17
  Index        r168, r164, r166
  Move         r169, r168
  Index        r170, r169, r16
  Append       r171, r163, r170
  Move         r163, r171
  AddInt       r166, r166, r149
  Jump         L18
L17:
  Avg          r172, r163
  // agg2: avg(from x in g select x.ss_list_price),
  Const        r173, "agg2"
  Const        r174, []
  IterPrep     r175, r155
  Len          r176, r175
  Move         r177, r134
L20:
  LessInt      r178, r177, r176
  JumpIfFalse  r178, L19
  Index        r179, r175, r177
  Move         r169, r179
  Index        r180, r169, r18
  Append       r181, r174, r180
  Move         r174, r181
  AddInt       r177, r177, r149
  Jump         L20
L19:
  Avg          r182, r174
  // agg3: avg(from x in g select x.ss_coupon_amt),
  Const        r183, "agg3"
  Const        r184, []
  IterPrep     r185, r155
  Len          r186, r185
  Move         r187, r134
L22:
  LessInt      r188, r187, r186
  JumpIfFalse  r188, L21
  Index        r189, r185, r187
  Move         r169, r189
  Index        r190, r169, r20
  Append       r191, r184, r190
  Move         r184, r191
  AddInt       r187, r187, r149
  Jump         L22
L21:
  Avg          r192, r184
  // agg4: avg(from x in g select x.ss_sales_price)
  Const        r193, "agg4"
  Const        r194, []
  IterPrep     r195, r155
  Len          r196, r195
  Move         r197, r134
L24:
  LessInt      r198, r197, r196
  JumpIfFalse  r198, L23
  Index        r199, r195, r197
  Move         r169, r199
  Index        r200, r169, r22
  Append       r201, r194, r200
  Move         r194, r201
  AddInt       r197, r197, r149
  Jump         L24
L23:
  Avg          r202, r194
  // i_item_id: g.key.item_id,
  Move         r203, r156
  Move         r204, r158
  // s_state: g.key.state,
  Move         r205, r159
  Move         r206, r161
  // agg1: avg(from x in g select x.ss_quantity),
  Move         r207, r162
  Move         r208, r172
  // agg2: avg(from x in g select x.ss_list_price),
  Move         r209, r173
  Move         r210, r182
  // agg3: avg(from x in g select x.ss_coupon_amt),
  Move         r211, r183
  Move         r212, r192
  // agg4: avg(from x in g select x.ss_sales_price)
  Move         r213, r193
  Move         r214, r202
  // select {
  MakeMap      r215, 6, r203
  // sort by [g.key.item_id, g.key.state]
  Index        r216, r155, r14
  Index        r217, r216, r6
  Move         r218, r217
  Index        r219, r155, r14
  Index        r220, r219, r8
  Move         r221, r220
  MakeList     r222, 2, r218
  Move         r223, r222
  // from ss in store_sales
  Move         r224, r215
  MakeList     r225, 2, r223
  Append       r226, r5, r225
  Move         r5, r226
  AddInt       r151, r151, r149
  Jump         L25
L16:
  // sort by [g.key.item_id, g.key.state]
  Sort         r227, r5
  // from ss in store_sales
  Move         r5, r227
  // json(result)
  JSON         r5
  // expect result == [
  Const        r228, [{"agg1": 5, "agg2": 100, "agg3": 10, "agg4": 90, "i_item_id": "ITEM1", "s_state": "CA"}]
  Equal        r229, r5, r228
  Expect       r229
  Return       r0
