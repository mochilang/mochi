func main (regs=226)
  // let store_sales = [
  Const        r0, [{"ss_cdemo_sk": 1, "ss_coupon_amt": 10.0, "ss_item_sk": 1, "ss_list_price": 100.0, "ss_quantity": 5, "ss_sales_price": 90.0, "ss_sold_date_sk": 1, "ss_store_sk": 1}, {"ss_cdemo_sk": 2, "ss_coupon_amt": 5.0, "ss_item_sk": 2, "ss_list_price": 50.0, "ss_quantity": 2, "ss_sales_price": 45.0, "ss_sold_date_sk": 1, "ss_store_sk": 2}]
  // let customer_demographics = [ { cd_demo_sk: 1, cd_gender: "F", cd_marital_status: "M", cd_education_status: "College" }, { cd_demo_sk: 2, cd_gender: "M", cd_marital_status: "S", cd_education_status: "College" } ]
  Const        r1, [{"cd_demo_sk": 1, "cd_education_status": "College", "cd_gender": "F", "cd_marital_status": "M"}, {"cd_demo_sk": 2, "cd_education_status": "College", "cd_gender": "M", "cd_marital_status": "S"}]
  // let date_dim = [ { d_date_sk: 1, d_year: 2000 } ]
  Const        r2, [{"d_date_sk": 1, "d_year": 2000}]
  // let store = [ { s_store_sk: 1, s_state: "CA" }, { s_store_sk: 2, s_state: "TX" } ]
  Const        r3, [{"s_state": "CA", "s_store_sk": 1}, {"s_state": "TX", "s_store_sk": 2}]
  // let item = [ { i_item_sk: 1, i_item_id: "ITEM1" }, { i_item_sk: 2, i_item_id: "ITEM2" } ]
  Const        r4, [{"i_item_id": "ITEM1", "i_item_sk": 1}, {"i_item_id": "ITEM2", "i_item_sk": 2}]
  // from ss in store_sales
  Const        r5, []
  // group by { item_id: i.i_item_id, state: s.s_state } into g
  Const        r6, "item_id"
  Const        r7, "i_item_id"
  Const        r8, "state"
  Const        r9, "s_state"
  // where cd.cd_gender == "F" && cd.cd_marital_status == "M" && cd.cd_education_status == "College" && d.d_year == 2000 && s.s_state in ["CA"]
  Const        r10, "cd_gender"
  Const        r11, "cd_marital_status"
  Const        r12, "cd_education_status"
  Const        r13, "d_year"
  // i_item_id: g.key.item_id,
  Const        r14, "key"
  // agg1: avg(from x in g select x.ss_quantity),
  Const        r15, "agg1"
  Const        r16, "ss_quantity"
  // agg2: avg(from x in g select x.ss_list_price),
  Const        r17, "agg2"
  Const        r18, "ss_list_price"
  // agg3: avg(from x in g select x.ss_coupon_amt),
  Const        r19, "agg3"
  Const        r20, "ss_coupon_amt"
  // agg4: avg(from x in g select x.ss_sales_price)
  Const        r21, "agg4"
  Const        r22, "ss_sales_price"
  // from ss in store_sales
  MakeMap      r23, 0, r0
  Const        r25, []
  Move         r24, r25
  IterPrep     r26, r0
  Len          r27, r26
  Const        r28, 0
L12:
  LessInt      r29, r28, r27
  JumpIfFalse  r29, L0
  Index        r30, r26, r28
  Move         r31, r30
  // join cd in customer_demographics on ss.ss_cdemo_sk == cd.cd_demo_sk
  IterPrep     r32, r1
  Len          r33, r32
  Const        r34, 0
L11:
  LessInt      r35, r34, r33
  JumpIfFalse  r35, L1
  Index        r36, r32, r34
  Move         r37, r36
  Const        r38, "ss_cdemo_sk"
  Index        r39, r31, r38
  Const        r40, "cd_demo_sk"
  Index        r41, r37, r40
  Equal        r42, r39, r41
  JumpIfFalse  r42, L2
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  IterPrep     r43, r2
  Len          r44, r43
  Const        r45, 0
L10:
  LessInt      r46, r45, r44
  JumpIfFalse  r46, L2
  Index        r47, r43, r45
  Move         r48, r47
  Const        r49, "ss_sold_date_sk"
  Index        r50, r31, r49
  Const        r51, "d_date_sk"
  Index        r52, r48, r51
  Equal        r53, r50, r52
  JumpIfFalse  r53, L3
  // join s in store on ss.ss_store_sk == s.s_store_sk
  IterPrep     r54, r3
  Len          r55, r54
  Const        r56, 0
L9:
  LessInt      r57, r56, r55
  JumpIfFalse  r57, L3
  Index        r58, r54, r56
  Move         r59, r58
  Const        r60, "ss_store_sk"
  Index        r61, r31, r60
  Const        r62, "s_store_sk"
  Index        r63, r59, r62
  Equal        r64, r61, r63
  JumpIfFalse  r64, L4
  // join i in item on ss.ss_item_sk == i.i_item_sk
  IterPrep     r65, r4
  Len          r66, r65
  Const        r67, 0
L8:
  LessInt      r68, r67, r66
  JumpIfFalse  r68, L4
  Index        r69, r65, r67
  Move         r70, r69
  Const        r71, "ss_item_sk"
  Index        r72, r31, r71
  Const        r73, "i_item_sk"
  Index        r74, r70, r73
  Equal        r75, r72, r74
  JumpIfFalse  r75, L5
  // where cd.cd_gender == "F" && cd.cd_marital_status == "M" && cd.cd_education_status == "College" && d.d_year == 2000 && s.s_state in ["CA"]
  Index        r76, r37, r10
  Const        r77, "F"
  Equal        r78, r76, r77
  Index        r79, r37, r11
  Const        r80, "M"
  Equal        r81, r79, r80
  Index        r82, r37, r12
  Const        r83, "College"
  Equal        r84, r82, r83
  Index        r85, r48, r13
  Const        r86, 2000
  Equal        r87, r85, r86
  Index        r88, r59, r9
  Const        r89, ["CA"]
  In           r90, r88, r89
  Move         r91, r78
  JumpIfFalse  r91, L6
  Move         r91, r81
  JumpIfFalse  r91, L6
  Move         r91, r84
  JumpIfFalse  r91, L6
  Move         r91, r87
  JumpIfFalse  r91, L6
  Move         r91, r90
L6:
  JumpIfFalse  r91, L5
  // from ss in store_sales
  Const        r92, "ss"
  Move         r93, r31
  Const        r94, "cd"
  Move         r95, r37
  Const        r96, "d"
  Move         r97, r48
  Const        r98, "s"
  Move         r99, r59
  Const        r100, "i"
  Move         r101, r70
  Move         r102, r92
  Move         r103, r93
  Move         r104, r94
  Move         r105, r95
  Move         r106, r96
  Move         r107, r97
  Move         r108, r98
  Move         r109, r99
  Move         r110, r100
  Move         r111, r101
  MakeMap      r112, 5, r102
  // group by { item_id: i.i_item_id, state: s.s_state } into g
  Const        r113, "item_id"
  Index        r114, r70, r7
  Const        r115, "state"
  Index        r116, r59, r9
  Move         r117, r113
  Move         r118, r114
  Move         r119, r115
  Move         r120, r116
  MakeMap      r121, 2, r117
  Str          r122, r121
  In           r123, r122, r23
  JumpIfTrue   r123, L7
  // from ss in store_sales
  Const        r124, "__group__"
  Const        r125, true
  // group by { item_id: i.i_item_id, state: s.s_state } into g
  Move         r126, r121
  // from ss in store_sales
  Const        r127, "items"
  Move         r128, r25
  Const        r129, "count"
  Const        r130, 0
  Move         r131, r124
  Move         r132, r125
  Move         r133, r14
  Move         r134, r126
  Move         r135, r127
  Move         r136, r128
  Move         r137, r129
  Move         r138, r130
  MakeMap      r139, 4, r131
  SetIndex     r23, r122, r139
  Append       r140, r24, r139
  Move         r24, r140
L7:
  Index        r141, r23, r122
  Index        r142, r141, r127
  Append       r143, r142, r112
  SetIndex     r141, r127, r143
  Index        r144, r141, r129
  Const        r145, 1
  AddInt       r146, r144, r145
  SetIndex     r141, r129, r146
L5:
  // join i in item on ss.ss_item_sk == i.i_item_sk
  AddInt       r67, r67, r145
  Jump         L8
L4:
  // join s in store on ss.ss_store_sk == s.s_store_sk
  AddInt       r56, r56, r145
  Jump         L9
L3:
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  AddInt       r45, r45, r145
  Jump         L10
L2:
  // join cd in customer_demographics on ss.ss_cdemo_sk == cd.cd_demo_sk
  AddInt       r34, r34, r145
  Jump         L11
L1:
  // from ss in store_sales
  AddInt       r28, r28, r145
  Jump         L12
L0:
  Move         r147, r130
  Len          r148, r24
L22:
  LessInt      r149, r147, r148
  JumpIfFalse  r149, L13
  Index        r150, r24, r147
  Move         r151, r150
  // i_item_id: g.key.item_id,
  Const        r152, "i_item_id"
  Index        r153, r151, r14
  Index        r154, r153, r6
  // s_state: g.key.state,
  Const        r155, "s_state"
  Index        r156, r151, r14
  Index        r157, r156, r8
  // agg1: avg(from x in g select x.ss_quantity),
  Const        r158, "agg1"
  Const        r159, []
  IterPrep     r160, r151
  Len          r161, r160
  Move         r162, r130
L15:
  LessInt      r163, r162, r161
  JumpIfFalse  r163, L14
  Index        r164, r160, r162
  Move         r165, r164
  Index        r166, r165, r16
  Append       r167, r159, r166
  Move         r159, r167
  AddInt       r162, r162, r145
  Jump         L15
L14:
  Avg          r168, r159
  // agg2: avg(from x in g select x.ss_list_price),
  Const        r169, "agg2"
  Const        r170, []
  IterPrep     r171, r151
  Len          r172, r171
  Move         r173, r130
L17:
  LessInt      r174, r173, r172
  JumpIfFalse  r174, L16
  Index        r175, r171, r173
  Move         r165, r175
  Index        r176, r165, r18
  Append       r177, r170, r176
  Move         r170, r177
  AddInt       r173, r173, r145
  Jump         L17
L16:
  Avg          r178, r170
  // agg3: avg(from x in g select x.ss_coupon_amt),
  Const        r179, "agg3"
  Const        r180, []
  IterPrep     r181, r151
  Len          r182, r181
  Move         r183, r130
L19:
  LessInt      r184, r183, r182
  JumpIfFalse  r184, L18
  Index        r185, r181, r183
  Move         r165, r185
  Index        r186, r165, r20
  Append       r187, r180, r186
  Move         r180, r187
  AddInt       r183, r183, r145
  Jump         L19
L18:
  Avg          r188, r180
  // agg4: avg(from x in g select x.ss_sales_price)
  Const        r189, "agg4"
  Const        r190, []
  IterPrep     r191, r151
  Len          r192, r191
  Move         r193, r130
L21:
  LessInt      r194, r193, r192
  JumpIfFalse  r194, L20
  Index        r195, r191, r193
  Move         r165, r195
  Index        r196, r165, r22
  Append       r197, r190, r196
  Move         r190, r197
  AddInt       r193, r193, r145
  Jump         L21
L20:
  Avg          r198, r190
  // i_item_id: g.key.item_id,
  Move         r199, r152
  Move         r200, r154
  // s_state: g.key.state,
  Move         r201, r155
  Move         r202, r157
  // agg1: avg(from x in g select x.ss_quantity),
  Move         r203, r158
  Move         r204, r168
  // agg2: avg(from x in g select x.ss_list_price),
  Move         r205, r169
  Move         r206, r178
  // agg3: avg(from x in g select x.ss_coupon_amt),
  Move         r207, r179
  Move         r208, r188
  // agg4: avg(from x in g select x.ss_sales_price)
  Move         r209, r189
  Move         r210, r198
  // select {
  MakeMap      r211, 6, r199
  // sort by [g.key.item_id, g.key.state]
  Index        r212, r151, r14
  Index        r213, r212, r6
  Move         r214, r213
  Index        r215, r151, r14
  Index        r216, r215, r8
  Move         r217, r216
  MakeList     r218, 2, r214
  Move         r219, r218
  // from ss in store_sales
  Move         r220, r211
  MakeList     r221, 2, r219
  Append       r222, r5, r221
  Move         r5, r222
  AddInt       r147, r147, r145
  Jump         L22
L13:
  // sort by [g.key.item_id, g.key.state]
  Sort         r223, r5
  // from ss in store_sales
  Move         r5, r223
  // json(result)
  JSON         r5
  // expect result == [
  Const        r224, [{"agg1": 5.0, "agg2": 100.0, "agg3": 10.0, "agg4": 90.0, "i_item_id": "ITEM1", "s_state": "CA"}]
  Equal        r225, r5, r224
  Expect       r225
  Return       r0
