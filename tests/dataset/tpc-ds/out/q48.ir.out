func main (regs=268)
  // let store_sales = [
  Const        r0, [{"addr_sk": 1, "cdemo_sk": 1, "net_profit": 1000, "quantity": 5, "sales_price": 120, "sold_date_sk": 1}, {"addr_sk": 2, "cdemo_sk": 2, "net_profit": 2000, "quantity": 10, "sales_price": 60, "sold_date_sk": 1}, {"addr_sk": 3, "cdemo_sk": 3, "net_profit": 10000, "quantity": 20, "sales_price": 170, "sold_date_sk": 1}]
  // let store = [ { s_store_sk: 1 } ]
  Const        r1, [{"s_store_sk": 1}]
  // let customer_demographics = [
  Const        r2, [{"cd_demo_sk": 1, "cd_education_status": "E1", "cd_marital_status": "S"}, {"cd_demo_sk": 2, "cd_education_status": "E2", "cd_marital_status": "M"}, {"cd_demo_sk": 3, "cd_education_status": "E3", "cd_marital_status": "W"}]
  // let customer_address = [
  Const        r3, [{"ca_address_sk": 1, "ca_country": "United States", "ca_state": "TX"}, {"ca_address_sk": 2, "ca_country": "United States", "ca_state": "CA"}, {"ca_address_sk": 3, "ca_country": "United States", "ca_state": "NY"}]
  // let date_dim = [ { d_date_sk: 1, d_year: 2000 } ]
  Const        r4, [{"d_date_sk": 1, "d_year": 2000}]
  // let dummy = null
  Const        r5, nil
  // let year = 2000
  Const        r6, 2000
  // let states1 = ["TX"]
  Const        r7, ["TX"]
  // let states2 = ["CA"]
  Const        r8, ["CA"]
  // let states3 = ["NY"]
  Const        r9, ["NY"]
  // from ss in store_sales
  Const        r10, []
  // where d.d_year == year &&
  Const        r11, "d_year"
  // (cd.cd_marital_status == "S" && cd.cd_education_status == "E1" && ss.sales_price >= 100.0 && ss.sales_price <= 150.0) ||
  Const        r12, "cd_marital_status"
  Const        r13, "cd_education_status"
  Const        r14, "sales_price"
  Const        r15, "sales_price"
  // (cd.cd_marital_status == "M" && cd.cd_education_status == "E2" && ss.sales_price >= 50.0 && ss.sales_price <= 100.0) ||
  Const        r16, "cd_marital_status"
  Const        r17, "cd_education_status"
  Const        r18, "sales_price"
  Const        r19, "sales_price"
  // (cd.cd_marital_status == "W" && cd.cd_education_status == "E3" && ss.sales_price >= 150.0 && ss.sales_price <= 200.0)
  Const        r20, "cd_marital_status"
  Const        r21, "cd_education_status"
  Const        r22, "sales_price"
  Const        r23, "sales_price"
  // (ca.ca_state in states1 && ss.net_profit >= 0 && ss.net_profit <= 2000) ||
  Const        r24, "ca_state"
  Const        r25, "net_profit"
  Const        r26, "net_profit"
  // (ca.ca_state in states2 && ss.net_profit >= 150 && ss.net_profit <= 3000) ||
  Const        r27, "ca_state"
  Const        r28, "net_profit"
  Const        r29, "net_profit"
  // (ca.ca_state in states3 && ss.net_profit >= 50 && ss.net_profit <= 25000)
  Const        r30, "ca_state"
  Const        r31, "net_profit"
  Const        r32, "net_profit"
  // select ss.quantity
  Const        r33, "quantity"
  // from ss in store_sales
  IterPrep     r34, r0
  Len          r35, r34
  Const        r36, 0
L24:
  LessInt      r38, r36, r35
  JumpIfFalse  r38, L0
  Index        r40, r34, r36
  // join cd in customer_demographics on ss.cdemo_sk == cd.cd_demo_sk
  IterPrep     r41, r2
  Len          r42, r41
  Const        r43, "cdemo_sk"
  Const        r44, "cd_demo_sk"
  // where d.d_year == year &&
  Const        r45, "d_year"
  // (cd.cd_marital_status == "S" && cd.cd_education_status == "E1" && ss.sales_price >= 100.0 && ss.sales_price <= 150.0) ||
  Const        r46, "cd_marital_status"
  Const        r47, "cd_education_status"
  Const        r48, "sales_price"
  Const        r49, "sales_price"
  // (cd.cd_marital_status == "M" && cd.cd_education_status == "E2" && ss.sales_price >= 50.0 && ss.sales_price <= 100.0) ||
  Const        r50, "cd_marital_status"
  Const        r51, "cd_education_status"
  Const        r52, "sales_price"
  Const        r53, "sales_price"
  // (cd.cd_marital_status == "W" && cd.cd_education_status == "E3" && ss.sales_price >= 150.0 && ss.sales_price <= 200.0)
  Const        r54, "cd_marital_status"
  Const        r55, "cd_education_status"
  Const        r56, "sales_price"
  Const        r57, "sales_price"
  // (ca.ca_state in states1 && ss.net_profit >= 0 && ss.net_profit <= 2000) ||
  Const        r58, "ca_state"
  Const        r59, "net_profit"
  Const        r60, "net_profit"
  // (ca.ca_state in states2 && ss.net_profit >= 150 && ss.net_profit <= 3000) ||
  Const        r61, "ca_state"
  Const        r62, "net_profit"
  Const        r63, "net_profit"
  // (ca.ca_state in states3 && ss.net_profit >= 50 && ss.net_profit <= 25000)
  Const        r64, "ca_state"
  Const        r65, "net_profit"
  Const        r66, "net_profit"
  // select ss.quantity
  Const        r67, "quantity"
  // join cd in customer_demographics on ss.cdemo_sk == cd.cd_demo_sk
  Const        r68, 0
L23:
  LessInt      r70, r68, r42
  JumpIfFalse  r70, L1
  Index        r72, r41, r68
  Const        r73, "cdemo_sk"
  Index        r74, r40, r73
  Const        r75, "cd_demo_sk"
  Index        r76, r72, r75
  Equal        r77, r74, r76
  JumpIfFalse  r77, L2
  // join ca in customer_address on ss.addr_sk == ca.ca_address_sk
  IterPrep     r78, r3
  Len          r79, r78
  Const        r80, "addr_sk"
  Const        r81, "ca_address_sk"
  // where d.d_year == year &&
  Const        r82, "d_year"
  // (cd.cd_marital_status == "S" && cd.cd_education_status == "E1" && ss.sales_price >= 100.0 && ss.sales_price <= 150.0) ||
  Const        r83, "cd_marital_status"
  Const        r84, "cd_education_status"
  Const        r85, "sales_price"
  Const        r86, "sales_price"
  // (cd.cd_marital_status == "M" && cd.cd_education_status == "E2" && ss.sales_price >= 50.0 && ss.sales_price <= 100.0) ||
  Const        r87, "cd_marital_status"
  Const        r88, "cd_education_status"
  Const        r89, "sales_price"
  Const        r90, "sales_price"
  // (cd.cd_marital_status == "W" && cd.cd_education_status == "E3" && ss.sales_price >= 150.0 && ss.sales_price <= 200.0)
  Const        r91, "cd_marital_status"
  Const        r92, "cd_education_status"
  Const        r93, "sales_price"
  Const        r94, "sales_price"
  // (ca.ca_state in states1 && ss.net_profit >= 0 && ss.net_profit <= 2000) ||
  Const        r95, "ca_state"
  Const        r96, "net_profit"
  Const        r97, "net_profit"
  // (ca.ca_state in states2 && ss.net_profit >= 150 && ss.net_profit <= 3000) ||
  Const        r98, "ca_state"
  Const        r99, "net_profit"
  Const        r100, "net_profit"
  // (ca.ca_state in states3 && ss.net_profit >= 50 && ss.net_profit <= 25000)
  Const        r101, "ca_state"
  Const        r102, "net_profit"
  Const        r103, "net_profit"
  // select ss.quantity
  Const        r104, "quantity"
  // join ca in customer_address on ss.addr_sk == ca.ca_address_sk
  Const        r105, 0
L22:
  LessInt      r107, r105, r79
  JumpIfFalse  r107, L2
  Index        r109, r78, r105
  Const        r110, "addr_sk"
  Index        r111, r40, r110
  Const        r112, "ca_address_sk"
  Index        r113, r109, r112
  Equal        r114, r111, r113
  JumpIfFalse  r114, L3
  // join d in date_dim on ss.sold_date_sk == d.d_date_sk
  IterPrep     r115, r4
  Len          r116, r115
  Const        r117, "sold_date_sk"
  Const        r118, "d_date_sk"
  // where d.d_year == year &&
  Const        r119, "d_year"
  // (cd.cd_marital_status == "S" && cd.cd_education_status == "E1" && ss.sales_price >= 100.0 && ss.sales_price <= 150.0) ||
  Const        r120, "cd_marital_status"
  Const        r121, "cd_education_status"
  Const        r122, "sales_price"
  Const        r123, "sales_price"
  // (cd.cd_marital_status == "M" && cd.cd_education_status == "E2" && ss.sales_price >= 50.0 && ss.sales_price <= 100.0) ||
  Const        r124, "cd_marital_status"
  Const        r125, "cd_education_status"
  Const        r126, "sales_price"
  Const        r127, "sales_price"
  // (cd.cd_marital_status == "W" && cd.cd_education_status == "E3" && ss.sales_price >= 150.0 && ss.sales_price <= 200.0)
  Const        r128, "cd_marital_status"
  Const        r129, "cd_education_status"
  Const        r130, "sales_price"
  Const        r131, "sales_price"
  // (ca.ca_state in states1 && ss.net_profit >= 0 && ss.net_profit <= 2000) ||
  Const        r132, "ca_state"
  Const        r133, "net_profit"
  Const        r134, "net_profit"
  // (ca.ca_state in states2 && ss.net_profit >= 150 && ss.net_profit <= 3000) ||
  Const        r135, "ca_state"
  Const        r136, "net_profit"
  Const        r137, "net_profit"
  // (ca.ca_state in states3 && ss.net_profit >= 50 && ss.net_profit <= 25000)
  Const        r138, "ca_state"
  Const        r139, "net_profit"
  Const        r140, "net_profit"
  // select ss.quantity
  Const        r141, "quantity"
  // join d in date_dim on ss.sold_date_sk == d.d_date_sk
  Const        r142, 0
L21:
  LessInt      r144, r142, r116
  JumpIfFalse  r144, L3
  Index        r146, r115, r142
  Const        r147, "sold_date_sk"
  Index        r148, r40, r147
  Const        r149, "d_date_sk"
  Index        r150, r146, r149
  Equal        r151, r148, r150
  JumpIfFalse  r151, L4
  // where d.d_year == year &&
  Const        r152, "d_year"
  Index        r153, r146, r152
  Equal        r155, r153, r6
  JumpIfFalse  r155, L5
  // (cd.cd_marital_status == "S" && cd.cd_education_status == "E1" && ss.sales_price >= 100.0 && ss.sales_price <= 150.0) ||
  Const        r156, "cd_marital_status"
  Index        r157, r72, r156
  Const        r158, "sales_price"
  Index        r159, r40, r158
  Const        r160, 100
  LessEqFloat  r161, r160, r159
  Const        r162, "sales_price"
  Index        r163, r40, r162
  Const        r164, 150
  LessEqFloat  r165, r163, r164
  Const        r166, "S"
  Equal        r167, r157, r166
  Const        r168, "cd_education_status"
  Index        r169, r72, r168
  Const        r170, "E1"
  Equal        r171, r169, r170
  Move         r172, r167
  JumpIfFalse  r172, L6
L6:
  Move         r173, r171
  JumpIfFalse  r173, L7
L7:
  Move         r174, r161
  JumpIfFalse  r174, L8
L8:
  Move         r175, r165
  JumpIfTrue   r175, L9
  // (cd.cd_marital_status == "M" && cd.cd_education_status == "E2" && ss.sales_price >= 50.0 && ss.sales_price <= 100.0) ||
  Const        r176, "cd_marital_status"
  Index        r177, r72, r176
  Const        r178, "sales_price"
  Index        r179, r40, r178
  Const        r180, 50
  LessEqFloat  r181, r180, r179
  Const        r182, "sales_price"
  Index        r183, r40, r182
  Const        r184, 100
  LessEqFloat  r185, r183, r184
  Const        r186, "M"
  Equal        r187, r177, r186
  Const        r188, "cd_education_status"
  Index        r189, r72, r188
  Const        r190, "E2"
  Equal        r191, r189, r190
  Move         r192, r187
  JumpIfFalse  r192, L10
L10:
  Move         r193, r191
  JumpIfFalse  r193, L11
L11:
  Move         r194, r181
  JumpIfFalse  r194, L9
L9:
  Move         r195, r185
  JumpIfTrue   r195, L5
  // (cd.cd_marital_status == "W" && cd.cd_education_status == "E3" && ss.sales_price >= 150.0 && ss.sales_price <= 200.0)
  Const        r196, "cd_marital_status"
  Index        r197, r72, r196
  Const        r198, "sales_price"
  Index        r199, r40, r198
  Const        r200, 150
  LessEqFloat  r201, r200, r199
  Const        r202, "sales_price"
  Index        r203, r40, r202
  Const        r204, 200
  LessEqFloat  r205, r203, r204
  Const        r206, "W"
  Equal        r207, r197, r206
  Const        r208, "cd_education_status"
  Index        r209, r72, r208
  Const        r210, "E3"
  Equal        r211, r209, r210
  Move         r212, r207
  JumpIfFalse  r212, L12
L12:
  Move         r213, r211
  JumpIfFalse  r213, L13
L13:
  Move         r214, r201
  JumpIfFalse  r214, L5
L5:
  // ) &&
  Move         r215, r205
  JumpIfFalse  r215, L14
  // (ca.ca_state in states1 && ss.net_profit >= 0 && ss.net_profit <= 2000) ||
  Const        r216, "ca_state"
  Index        r217, r109, r216
  Const        r218, "net_profit"
  Index        r219, r40, r218
  Const        r220, 0
  LessEq       r221, r220, r219
  Const        r222, "net_profit"
  Index        r223, r40, r222
  Const        r224, 2000
  LessEq       r225, r223, r224
  In           r227, r217, r7
  JumpIfFalse  r227, L15
L15:
  Move         r228, r221
  JumpIfFalse  r228, L16
L16:
  Move         r229, r225
  JumpIfTrue   r229, L17
  // (ca.ca_state in states2 && ss.net_profit >= 150 && ss.net_profit <= 3000) ||
  Const        r230, "ca_state"
  Index        r231, r109, r230
  Const        r232, "net_profit"
  Index        r233, r40, r232
  Const        r234, 150
  LessEq       r235, r234, r233
  Const        r236, "net_profit"
  Index        r237, r40, r236
  Const        r238, 3000
  LessEq       r239, r237, r238
  In           r241, r231, r8
  JumpIfFalse  r241, L18
L18:
  Move         r242, r235
  JumpIfFalse  r242, L17
L17:
  Move         r243, r239
  JumpIfTrue   r243, L19
  // (ca.ca_state in states3 && ss.net_profit >= 50 && ss.net_profit <= 25000)
  Const        r244, "ca_state"
  Index        r245, r109, r244
  Const        r246, "net_profit"
  Index        r247, r40, r246
  Const        r248, 50
  LessEq       r249, r248, r247
  Const        r250, "net_profit"
  Index        r251, r40, r250
  Const        r252, 25000
  LessEq       r253, r251, r252
  In           r255, r245, r9
  JumpIfFalse  r255, L20
L20:
  Move         r256, r249
  JumpIfFalse  r256, L19
L19:
  // ) &&
  Move         r215, r253
L14:
  // where d.d_year == year &&
  JumpIfFalse  r215, L4
  // select ss.quantity
  Const        r257, "quantity"
  Index        r258, r40, r257
  // from ss in store_sales
  Append       r10, r10, r258
L4:
  // join d in date_dim on ss.sold_date_sk == d.d_date_sk
  Const        r260, 1
  Add          r142, r142, r260
  Jump         L21
L3:
  // join ca in customer_address on ss.addr_sk == ca.ca_address_sk
  Const        r261, 1
  Add          r105, r105, r261
  Jump         L22
L2:
  // join cd in customer_demographics on ss.cdemo_sk == cd.cd_demo_sk
  Const        r262, 1
  Add          r68, r68, r262
  Jump         L23
L1:
  // from ss in store_sales
  Const        r263, 1
  AddInt       r36, r36, r263
  Jump         L24
L0:
  // let qty = concat(dummy, qty_base)
  UnionAll     r264, r5, r10
  // let result = sum(qty)
  Sum          r265, r264
  // json(result)
  JSON         r265
  // expect result == 35
  Const        r266, 35
  Equal        r267, r265, r266
  Expect       r267
  Return       r0
