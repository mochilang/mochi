func main (regs=69)
  // let time_dim = [
  Const        r0, [{"hour": 8, "minute": 30, "time_sk": 1}, {"hour": 9, "minute": 0, "time_sk": 2}, {"hour": 9, "minute": 30, "time_sk": 3}, {"hour": 10, "minute": 0, "time_sk": 4}, {"hour": 10, "minute": 30, "time_sk": 5}, {"hour": 11, "minute": 0, "time_sk": 6}, {"hour": 11, "minute": 30, "time_sk": 7}, {"hour": 12, "minute": 0, "time_sk": 8}]
  // let household_demographics = [
  Const        r1, [{"hd_demo_sk": 1, "hd_dep_count": 1, "hd_vehicle_count": 1}]
  // let store = [ {s_store_sk: 1, s_store_name: "ese"} ]
  Const        r2, [{"s_store_name": "ese", "s_store_sk": 1}]
  // let store_sales = [
  Const        r3, [{"hdemo_sk": 1, "qty": 10.0, "sold_time_sk": 1, "store_sk": 1}, {"hdemo_sk": 1, "qty": 12.0, "sold_time_sk": 2, "store_sk": 1}, {"hdemo_sk": 1, "qty": 14.0, "sold_time_sk": 3, "store_sk": 1}, {"hdemo_sk": 1, "qty": 11.0, "sold_time_sk": 4, "store_sk": 1}, {"hdemo_sk": 1, "qty": 8.0, "sold_time_sk": 5, "store_sk": 1}, {"hdemo_sk": 1, "qty": 9.0, "sold_time_sk": 6, "store_sk": 1}, {"hdemo_sk": 1, "qty": 10.0, "sold_time_sk": 7, "store_sk": 1}, {"hdemo_sk": 1, "qty": 14.0, "sold_time_sk": 8, "store_sk": 1}]
  // let h8_30_to_9  = count_range(store_sales, time_dim, 8, 30, 60)
  Move         r4, r3
  Move         r5, r0
  Const        r9, 8
  Move         r6, r9
  Const        r10, 30
  Move         r7, r10
  Const        r11, 60
  Move         r8, r11
  Call         r12, count_range, r4, r5, r6, r7, r8
  // let h9_to_9_30  = count_range(store_sales, time_dim, 9, 0, 30)
  Move         r13, r3
  Move         r14, r0
  Const        r18, 9
  Move         r15, r18
  Const        r19, 0
  Move         r16, r19
  Const        r10, 30
  Move         r17, r10
  Call         r20, count_range, r13, r14, r15, r16, r17
  // let h9_30_to_10 = count_range(store_sales, time_dim, 9, 30, 60)
  Move         r21, r3
  Move         r22, r0
  Const        r18, 9
  Move         r23, r18
  Const        r10, 30
  Move         r24, r10
  Const        r11, 60
  Move         r25, r11
  Call         r26, count_range, r21, r22, r23, r24, r25
  // let h10_to_10_30 = count_range(store_sales, time_dim, 10, 0, 30)
  Move         r27, r3
  Move         r28, r0
  Const        r32, 10
  Move         r29, r32
  Const        r19, 0
  Move         r30, r19
  Const        r10, 30
  Move         r31, r10
  Call         r33, count_range, r27, r28, r29, r30, r31
  // let h10_30_to_11 = count_range(store_sales, time_dim, 10, 30, 60)
  Move         r34, r3
  Move         r35, r0
  Const        r32, 10
  Move         r36, r32
  Const        r10, 30
  Move         r37, r10
  Const        r11, 60
  Move         r38, r11
  Call         r39, count_range, r34, r35, r36, r37, r38
  // let h11_to_11_30 = count_range(store_sales, time_dim, 11, 0, 30)
  Move         r40, r3
  Move         r41, r0
  Const        r45, 11
  Move         r42, r45
  Const        r19, 0
  Move         r43, r19
  Const        r10, 30
  Move         r44, r10
  Call         r46, count_range, r40, r41, r42, r43, r44
  // let h11_30_to_12 = count_range(store_sales, time_dim, 11, 30, 60)
  Move         r47, r3
  Move         r48, r0
  Const        r45, 11
  Move         r49, r45
  Const        r10, 30
  Move         r50, r10
  Const        r11, 60
  Move         r51, r11
  Call         r52, count_range, r47, r48, r49, r50, r51
  // let h12_to_12_30 = count_range(store_sales, time_dim, 12, 0, 30)
  Move         r53, r3
  Move         r54, r0
  Const        r58, 12
  Move         r55, r58
  Const        r19, 0
  Move         r56, r19
  Const        r10, 30
  Move         r57, r10
  Call         r59, count_range, r53, r54, r55, r56, r57
  // let result = h8_30_to_9 + h9_to_9_30 + h9_30_to_10 + h10_to_10_30 +
  Add          r60, r12, r20
  Add          r61, r60, r26
  Add          r62, r61, r33
  Add          r63, r62, r39
  // h10_30_to_11 + h11_to_11_30 + h11_30_to_12 + h12_to_12_30
  Add          r64, r63, r46
  Add          r65, r64, r52
  Add          r66, r65, r59
  // json(result)
  JSON         r66
  // expect result == 88
  Const        r67, 88
  Equal        r68, r66, r67
  Expect       r68
  Return       r0

  // fun count_range(ssales: list<any>, tdim: list<any>, hour: int, start_min: int, end_min: int): float {
func count_range (regs=40)
  // var total = 0.0
  Const        r5, 0.0
  Move         r6, r5
  // for ss in ssales {
  IterPrep     r7, r0
  Len          r8, r7
  Const        r9, 0
L5:
  LessInt      r10, r9, r8
  JumpIfFalse  r10, L0
  Index        r11, r7, r9
  Move         r12, r11
  // for t in tdim {
  IterPrep     r13, r1
  Len          r14, r13
  Const        r15, 0
L4:
  LessInt      r16, r15, r14
  JumpIfFalse  r16, L1
  Index        r17, r13, r15
  Move         r18, r17
  // if ss.sold_time_sk == t.time_sk && t.hour == hour && t.minute >= start_min && t.minute < end_min {
  Const        r19, "sold_time_sk"
  Index        r20, r12, r19
  Const        r21, "minute"
  Index        r22, r18, r21
  LessEq       r23, r3, r22
  Const        r21, "minute"
  Index        r24, r18, r21
  Less         r25, r24, r4
  Const        r26, "time_sk"
  Index        r27, r18, r26
  Equal        r28, r20, r27
  Const        r29, "hour"
  Index        r30, r18, r29
  Equal        r31, r30, r2
  Move         r32, r28
  JumpIfFalse  r32, L2
  Move         r32, r31
  JumpIfFalse  r32, L2
  Move         r32, r23
  JumpIfFalse  r32, L2
  Move         r32, r25
L2:
  JumpIfFalse  r32, L3
  // total = total + ss.qty
  Const        r33, "qty"
  Index        r34, r12, r33
  AddFloat     r35, r6, r34
  Move         r6, r35
L3:
  // for t in tdim {
  Const        r36, 1
  AddInt       r37, r15, r36
  Move         r15, r37
  Jump         L4
L1:
  // for ss in ssales {
  Const        r38, 1
  AddInt       r39, r9, r38
  Move         r9, r39
  Jump         L5
L0:
  // return total
  Return       r6
