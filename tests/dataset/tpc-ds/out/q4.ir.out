func main (regs=592)
  // let customer = []
  Const        r0, []
  // from c in customer
  Const        r1, []
  // group by {id: c.c_customer_id, first: c.c_first_name, last: c.c_last_name, login: c.c_login, year: d.d_year} into g
  Const        r2, "id"
  Const        r3, "c_customer_id"
  Const        r4, "first"
  Const        r5, "c_first_name"
  Const        r6, "last"
  Const        r7, "c_last_name"
  Const        r8, "login"
  Const        r9, "c_login"
  Const        r10, "year"
  Const        r11, "d_year"
  // customer_id: g.key.id,
  Const        r12, "customer_id"
  Const        r13, "key"
  // customer_first_name: g.key.first,
  Const        r14, "customer_first_name"
  // customer_last_name: g.key.last,
  Const        r15, "customer_last_name"
  // customer_login: g.key.login,
  Const        r16, "customer_login"
  // dyear: g.key.year,
  Const        r17, "dyear"
  // year_total: sum(from x in g select ((x.ss_ext_list_price - x.ss_ext_wholesale_cost - x.ss_ext_discount_amt) + x.ss_ext_sales_price) / 2),
  Const        r18, "year_total"
  Const        r19, "ss_ext_list_price"
  Const        r20, "ss_ext_wholesale_cost"
  Const        r21, "ss_ext_discount_amt"
  Const        r22, "ss_ext_sales_price"
  // sale_type: "s",
  Const        r23, "sale_type"
  // from c in customer
  MakeMap      r24, 0, r0
  Const        r25, []
  IterPrep     r27, r0
  Len          r28, r27
  Const        r29, 0
L7:
  LessInt      r30, r29, r28
  JumpIfFalse  r30, L0
  Index        r32, r27, r29
  // join s in store_sales on c.c_customer_sk == s.ss_customer_sk
  IterPrep     r33, r0
  Len          r34, r33
  Const        r35, 0
L6:
  LessInt      r36, r35, r34
  JumpIfFalse  r36, L1
  Index        r38, r33, r35
  Const        r39, "c_customer_sk"
  Index        r40, r32, r39
  Const        r41, "ss_customer_sk"
  Index        r42, r38, r41
  Equal        r43, r40, r42
  JumpIfFalse  r43, L2
  // join d in date_dim on s.ss_sold_date_sk == d.d_date_sk
  IterPrep     r44, r0
  Len          r45, r44
  Const        r46, 0
L5:
  LessInt      r47, r46, r45
  JumpIfFalse  r47, L2
  Index        r49, r44, r46
  Const        r50, "ss_sold_date_sk"
  Index        r51, r38, r50
  Const        r52, "d_date_sk"
  Index        r53, r49, r52
  Equal        r54, r51, r53
  JumpIfFalse  r54, L3
  // from c in customer
  Const        r55, "c"
  Move         r56, r32
  Const        r57, "s"
  Move         r58, r38
  Const        r59, "d"
  Move         r60, r49
  MakeMap      r61, 3, r55
  // group by {id: c.c_customer_id, first: c.c_first_name, last: c.c_last_name, login: c.c_login, year: d.d_year} into g
  Const        r62, "id"
  Index        r63, r32, r3
  Const        r64, "first"
  Index        r65, r32, r5
  Const        r66, "last"
  Index        r67, r32, r7
  Const        r68, "login"
  Index        r69, r32, r9
  Const        r70, "year"
  Index        r71, r49, r11
  Move         r72, r62
  Move         r73, r63
  Move         r74, r64
  Move         r75, r65
  Move         r76, r66
  Move         r77, r67
  Move         r78, r68
  Move         r79, r69
  Move         r80, r70
  Move         r81, r71
  MakeMap      r82, 5, r72
  Str          r83, r82
  In           r84, r83, r24
  JumpIfTrue   r84, L4
  // from c in customer
  Const        r85, []
  Const        r86, "__group__"
  Const        r87, true
  Const        r88, "key"
  // group by {id: c.c_customer_id, first: c.c_first_name, last: c.c_last_name, login: c.c_login, year: d.d_year} into g
  Move         r89, r82
  // from c in customer
  Const        r90, "items"
  Move         r91, r85
  Const        r92, "count"
  Const        r93, 0
  Move         r94, r86
  Move         r95, r87
  Move         r96, r88
  Move         r97, r89
  Move         r98, r90
  Move         r99, r91
  Move         r100, r92
  Move         r101, r93
  MakeMap      r102, 4, r94
  SetIndex     r24, r83, r102
  Append       r25, r25, r102
L4:
  Const        r104, "items"
  Index        r105, r24, r83
  Index        r106, r105, r104
  Append       r107, r106, r61
  SetIndex     r105, r104, r107
  Const        r108, "count"
  Index        r109, r105, r108
  Const        r110, 1
  AddInt       r111, r109, r110
  SetIndex     r105, r108, r111
L3:
  // join d in date_dim on s.ss_sold_date_sk == d.d_date_sk
  AddInt       r46, r46, r110
  Jump         L5
L2:
  // join s in store_sales on c.c_customer_sk == s.ss_customer_sk
  AddInt       r35, r35, r110
  Jump         L6
L1:
  // from c in customer
  AddInt       r29, r29, r110
  Jump         L7
L0:
  Const        r113, 0
  Move         r112, r113
  Len          r114, r25
L11:
  LessInt      r115, r112, r114
  JumpIfFalse  r115, L8
  Index        r117, r25, r112
  // customer_id: g.key.id,
  Const        r118, "customer_id"
  Index        r119, r117, r13
  Index        r120, r119, r2
  // customer_first_name: g.key.first,
  Const        r121, "customer_first_name"
  Index        r122, r117, r13
  Index        r123, r122, r4
  // customer_last_name: g.key.last,
  Const        r124, "customer_last_name"
  Index        r125, r117, r13
  Index        r126, r125, r6
  // customer_login: g.key.login,
  Const        r127, "customer_login"
  Index        r128, r117, r13
  Index        r129, r128, r8
  // dyear: g.key.year,
  Const        r130, "dyear"
  Index        r131, r117, r13
  Index        r132, r131, r10
  // year_total: sum(from x in g select ((x.ss_ext_list_price - x.ss_ext_wholesale_cost - x.ss_ext_discount_amt) + x.ss_ext_sales_price) / 2),
  Const        r133, "year_total"
  Const        r134, []
  IterPrep     r135, r117
  Len          r136, r135
  Move         r137, r113
L10:
  LessInt      r138, r137, r136
  JumpIfFalse  r138, L9
  Index        r140, r135, r137
  Index        r141, r140, r19
  Index        r142, r140, r20
  Sub          r143, r141, r142
  Index        r144, r140, r21
  Sub          r145, r143, r144
  Index        r146, r140, r22
  Add          r147, r145, r146
  Const        r148, 2
  Div          r149, r147, r148
  Append       r134, r134, r149
  AddInt       r137, r137, r110
  Jump         L10
L9:
  Sum          r151, r134
  // sale_type: "s",
  Const        r152, "sale_type"
  // customer_id: g.key.id,
  Move         r153, r118
  Move         r154, r120
  // customer_first_name: g.key.first,
  Move         r155, r121
  Move         r156, r123
  // customer_last_name: g.key.last,
  Move         r157, r124
  Move         r158, r126
  // customer_login: g.key.login,
  Move         r159, r127
  Move         r160, r129
  // dyear: g.key.year,
  Move         r161, r130
  Move         r162, r132
  // year_total: sum(from x in g select ((x.ss_ext_list_price - x.ss_ext_wholesale_cost - x.ss_ext_discount_amt) + x.ss_ext_sales_price) / 2),
  Move         r163, r133
  Move         r164, r151
  // sale_type: "s",
  Move         r165, r152
  Move         r166, r57
  // select {
  MakeMap      r167, 7, r153
  // from c in customer
  Append       r1, r1, r167
  AddInt       r112, r112, r110
  Jump         L11
L8:
  // from c in customer
  Const        r169, []
  // year_total: sum(from x in g select ((x.cs_ext_list_price - x.cs_ext_wholesale_cost - x.cs_ext_discount_amt) + x.cs_ext_sales_price) / 2),
  Const        r170, "cs_ext_list_price"
  Const        r171, "cs_ext_wholesale_cost"
  Const        r172, "cs_ext_discount_amt"
  Const        r173, "cs_ext_sales_price"
  // from c in customer
  MakeMap      r174, 0, r0
  Const        r175, []
  IterPrep     r177, r0
  Len          r178, r177
  Const        r179, 0
L19:
  LessInt      r180, r179, r178
  JumpIfFalse  r180, L12
  Index        r32, r177, r179
  // join cs in catalog_sales on c.c_customer_sk == cs.cs_bill_customer_sk
  IterPrep     r182, r0
  Len          r183, r182
  Const        r184, 0
L18:
  LessInt      r185, r184, r183
  JumpIfFalse  r185, L13
  Index        r187, r182, r184
  Index        r188, r32, r39
  Const        r189, "cs_bill_customer_sk"
  Index        r190, r187, r189
  Equal        r191, r188, r190
  JumpIfFalse  r191, L14
  // join d in date_dim on cs.cs_sold_date_sk == d.d_date_sk
  IterPrep     r192, r0
  Len          r193, r192
  Const        r194, 0
L17:
  LessInt      r195, r194, r193
  JumpIfFalse  r195, L14
  Index        r197, r192, r194
  Const        r198, "cs_sold_date_sk"
  Index        r199, r187, r198
  Index        r200, r197, r52
  Equal        r201, r199, r200
  JumpIfFalse  r201, L15
  // from c in customer
  Move         r202, r32
  Const        r203, "cs"
  Move         r204, r187
  Move         r205, r197
  MakeMap      r206, 3, r55
  // group by {id: c.c_customer_id, first: c.c_first_name, last: c.c_last_name, login: c.c_login, year: d.d_year} into g
  Const        r207, "id"
  Index        r208, r32, r3
  Const        r209, "first"
  Index        r210, r32, r5
  Const        r211, "last"
  Index        r212, r32, r7
  Const        r213, "login"
  Index        r214, r32, r9
  Const        r215, "year"
  Index        r216, r197, r11
  Move         r217, r207
  Move         r218, r208
  Move         r219, r209
  Move         r220, r210
  Move         r221, r211
  Move         r222, r212
  Move         r223, r213
  Move         r224, r214
  Move         r225, r215
  Move         r226, r216
  MakeMap      r227, 5, r217
  Str          r228, r227
  In           r229, r228, r174
  JumpIfTrue   r229, L16
  // from c in customer
  Const        r230, []
  Const        r231, "__group__"
  Const        r232, true
  Const        r233, "key"
  // group by {id: c.c_customer_id, first: c.c_first_name, last: c.c_last_name, login: c.c_login, year: d.d_year} into g
  Move         r234, r227
  // from c in customer
  Const        r235, "items"
  Move         r236, r230
  Const        r237, "count"
  Const        r238, 0
  Move         r239, r231
  Move         r240, r232
  Move         r241, r233
  Move         r242, r234
  Move         r243, r235
  Move         r244, r236
  Move         r245, r237
  Move         r246, r238
  MakeMap      r247, 4, r239
  SetIndex     r174, r228, r247
  Append       r175, r175, r247
L16:
  Index        r249, r174, r228
  Index        r250, r249, r104
  Append       r251, r250, r206
  SetIndex     r249, r104, r251
  Index        r252, r249, r108
  AddInt       r253, r252, r110
  SetIndex     r249, r108, r253
L15:
  // join d in date_dim on cs.cs_sold_date_sk == d.d_date_sk
  AddInt       r194, r194, r110
  Jump         L17
L14:
  // join cs in catalog_sales on c.c_customer_sk == cs.cs_bill_customer_sk
  AddInt       r184, r184, r110
  Jump         L18
L13:
  // from c in customer
  AddInt       r179, r179, r110
  Jump         L19
L12:
  Move         r254, r113
  Len          r255, r175
L23:
  LessInt      r256, r254, r255
  JumpIfFalse  r256, L20
  Index        r117, r175, r254
  // customer_id: g.key.id,
  Const        r258, "customer_id"
  Index        r259, r117, r13
  Index        r260, r259, r2
  // customer_first_name: g.key.first,
  Const        r261, "customer_first_name"
  Index        r262, r117, r13
  Index        r263, r262, r4
  // customer_last_name: g.key.last,
  Const        r264, "customer_last_name"
  Index        r265, r117, r13
  Index        r266, r265, r6
  // customer_login: g.key.login,
  Const        r267, "customer_login"
  Index        r268, r117, r13
  Index        r269, r268, r8
  // dyear: g.key.year,
  Const        r270, "dyear"
  Index        r271, r117, r13
  Index        r272, r271, r10
  // year_total: sum(from x in g select ((x.cs_ext_list_price - x.cs_ext_wholesale_cost - x.cs_ext_discount_amt) + x.cs_ext_sales_price) / 2),
  Const        r273, "year_total"
  Const        r274, []
  IterPrep     r275, r117
  Len          r276, r275
  Move         r277, r113
L22:
  LessInt      r278, r277, r276
  JumpIfFalse  r278, L21
  Index        r140, r275, r277
  Index        r280, r140, r170
  Index        r281, r140, r171
  Sub          r282, r280, r281
  Index        r283, r140, r172
  Sub          r284, r282, r283
  Index        r285, r140, r173
  Add          r286, r284, r285
  Div          r287, r286, r148
  Append       r274, r274, r287
  AddInt       r277, r277, r110
  Jump         L22
L21:
  Sum          r289, r274
  // sale_type: "c",
  Const        r290, "sale_type"
  // customer_id: g.key.id,
  Move         r291, r258
  Move         r292, r260
  // customer_first_name: g.key.first,
  Move         r293, r261
  Move         r294, r263
  // customer_last_name: g.key.last,
  Move         r295, r264
  Move         r296, r266
  // customer_login: g.key.login,
  Move         r297, r267
  Move         r298, r269
  // dyear: g.key.year,
  Move         r299, r270
  Move         r300, r272
  // year_total: sum(from x in g select ((x.cs_ext_list_price - x.cs_ext_wholesale_cost - x.cs_ext_discount_amt) + x.cs_ext_sales_price) / 2),
  Move         r301, r273
  Move         r302, r289
  // sale_type: "c",
  Move         r303, r290
  Move         r304, r55
  // select {
  MakeMap      r305, 7, r291
  // from c in customer
  Append       r169, r169, r305
  AddInt       r254, r254, r110
  Jump         L23
L20:
  // ) union all (
  UnionAll     r307, r1, r169
  // from c in customer
  Const        r308, []
  // year_total: sum(from x in g select ((x.ws_ext_list_price - x.ws_ext_wholesale_cost - x.ws_ext_discount_amt) + x.ws_ext_sales_price) / 2),
  Const        r309, "ws_ext_list_price"
  Const        r310, "ws_ext_wholesale_cost"
  Const        r311, "ws_ext_discount_amt"
  Const        r312, "ws_ext_sales_price"
  // from c in customer
  MakeMap      r313, 0, r0
  Const        r314, []
  IterPrep     r316, r0
  Len          r317, r316
  Const        r318, 0
L31:
  LessInt      r319, r318, r317
  JumpIfFalse  r319, L24
  Index        r32, r316, r318
  // join ws in web_sales on c.c_customer_sk == ws.ws_bill_customer_sk
  IterPrep     r321, r0
  Len          r322, r321
  Const        r323, 0
L30:
  LessInt      r324, r323, r322
  JumpIfFalse  r324, L25
  Index        r326, r321, r323
  Index        r327, r32, r39
  Const        r328, "ws_bill_customer_sk"
  Index        r329, r326, r328
  Equal        r330, r327, r329
  JumpIfFalse  r330, L26
  // join d in date_dim on ws.ws_sold_date_sk == d.d_date_sk
  IterPrep     r331, r0
  Len          r332, r331
  Const        r333, 0
L29:
  LessInt      r334, r333, r332
  JumpIfFalse  r334, L26
  Index        r336, r331, r333
  Const        r337, "ws_sold_date_sk"
  Index        r338, r326, r337
  Index        r339, r336, r52
  Equal        r340, r338, r339
  JumpIfFalse  r340, L27
  // from c in customer
  Move         r341, r32
  Const        r342, "ws"
  Move         r343, r326
  Move         r344, r336
  MakeMap      r345, 3, r55
  // group by {id: c.c_customer_id, first: c.c_first_name, last: c.c_last_name, login: c.c_login, year: d.d_year} into g
  Const        r346, "id"
  Index        r347, r32, r3
  Const        r348, "first"
  Index        r349, r32, r5
  Const        r350, "last"
  Index        r351, r32, r7
  Const        r352, "login"
  Index        r353, r32, r9
  Const        r354, "year"
  Index        r355, r336, r11
  Move         r356, r346
  Move         r357, r347
  Move         r358, r348
  Move         r359, r349
  Move         r360, r350
  Move         r361, r351
  Move         r362, r352
  Move         r363, r353
  Move         r364, r354
  Move         r365, r355
  MakeMap      r366, 5, r356
  Str          r367, r366
  In           r368, r367, r313
  JumpIfTrue   r368, L28
  // from c in customer
  Const        r369, []
  Const        r370, "__group__"
  Const        r371, true
  Const        r372, "key"
  // group by {id: c.c_customer_id, first: c.c_first_name, last: c.c_last_name, login: c.c_login, year: d.d_year} into g
  Move         r373, r366
  // from c in customer
  Const        r374, "items"
  Move         r375, r369
  Const        r376, "count"
  Const        r377, 0
  Move         r378, r370
  Move         r379, r371
  Move         r380, r372
  Move         r381, r373
  Move         r382, r374
  Move         r383, r375
  Move         r384, r376
  Move         r385, r377
  MakeMap      r386, 4, r378
  SetIndex     r313, r367, r386
  Append       r314, r314, r386
L28:
  Index        r388, r313, r367
  Index        r389, r388, r104
  Append       r390, r389, r345
  SetIndex     r388, r104, r390
  Index        r391, r388, r108
  AddInt       r392, r391, r110
  SetIndex     r388, r108, r392
L27:
  // join d in date_dim on ws.ws_sold_date_sk == d.d_date_sk
  AddInt       r333, r333, r110
  Jump         L29
L26:
  // join ws in web_sales on c.c_customer_sk == ws.ws_bill_customer_sk
  AddInt       r323, r323, r110
  Jump         L30
L25:
  // from c in customer
  AddInt       r318, r318, r110
  Jump         L31
L24:
  Move         r393, r113
  Len          r394, r314
L35:
  LessInt      r395, r393, r394
  JumpIfFalse  r395, L32
  Index        r117, r314, r393
  // customer_id: g.key.id,
  Const        r397, "customer_id"
  Index        r398, r117, r13
  Index        r399, r398, r2
  // customer_first_name: g.key.first,
  Const        r400, "customer_first_name"
  Index        r401, r117, r13
  Index        r402, r401, r4
  // customer_last_name: g.key.last,
  Const        r403, "customer_last_name"
  Index        r404, r117, r13
  Index        r405, r404, r6
  // customer_login: g.key.login,
  Const        r406, "customer_login"
  Index        r407, r117, r13
  Index        r408, r407, r8
  // dyear: g.key.year,
  Const        r409, "dyear"
  Index        r410, r117, r13
  Index        r411, r410, r10
  // year_total: sum(from x in g select ((x.ws_ext_list_price - x.ws_ext_wholesale_cost - x.ws_ext_discount_amt) + x.ws_ext_sales_price) / 2),
  Const        r412, "year_total"
  Const        r413, []
  IterPrep     r414, r117
  Len          r415, r414
  Move         r416, r113
L34:
  LessInt      r417, r416, r415
  JumpIfFalse  r417, L33
  Index        r140, r414, r416
  Index        r419, r140, r309
  Index        r420, r140, r310
  Sub          r421, r419, r420
  Index        r422, r140, r311
  Sub          r423, r421, r422
  Index        r424, r140, r312
  Add          r425, r423, r424
  Div          r426, r425, r148
  Append       r413, r413, r426
  AddInt       r416, r416, r110
  Jump         L34
L33:
  Sum          r428, r413
  // sale_type: "w",
  Const        r429, "sale_type"
  Const        r430, "w"
  // customer_id: g.key.id,
  Move         r431, r397
  Move         r432, r399
  // customer_first_name: g.key.first,
  Move         r433, r400
  Move         r434, r402
  // customer_last_name: g.key.last,
  Move         r435, r403
  Move         r436, r405
  // customer_login: g.key.login,
  Move         r437, r406
  Move         r438, r408
  // dyear: g.key.year,
  Move         r439, r409
  Move         r440, r411
  // year_total: sum(from x in g select ((x.ws_ext_list_price - x.ws_ext_wholesale_cost - x.ws_ext_discount_amt) + x.ws_ext_sales_price) / 2),
  Move         r441, r412
  Move         r442, r428
  // sale_type: "w",
  Move         r443, r429
  Move         r444, r430
  // select {
  MakeMap      r445, 7, r431
  // from c in customer
  Append       r308, r308, r445
  AddInt       r393, r393, r110
  Jump         L35
L32:
  // ) union all (
  UnionAll     r447, r307, r308
  // from s1 in year_total
  Const        r448, []
  IterPrep     r449, r447
  Len          r450, r449
  Move         r451, r113
L49:
  LessInt      r452, r451, r450
  JumpIfFalse  r452, L36
  Index        r454, r449, r451
  // join s2 in year_total on s2.customer_id == s1.customer_id
  IterPrep     r455, r447
  Len          r456, r455
  Move         r457, r113
L48:
  LessInt      r458, r457, r456
  JumpIfFalse  r458, L37
  Index        r460, r455, r457
  Index        r461, r460, r12
  Index        r462, r454, r12
  Equal        r463, r461, r462
  JumpIfFalse  r463, L38
  // join c1 in year_total on c1.customer_id == s1.customer_id
  IterPrep     r464, r447
  Len          r465, r464
  Move         r466, r113
L47:
  LessInt      r467, r466, r465
  JumpIfFalse  r467, L38
  Index        r469, r464, r466
  Index        r470, r469, r12
  Index        r471, r454, r12
  Equal        r472, r470, r471
  JumpIfFalse  r472, L39
  // join c2 in year_total on c2.customer_id == s1.customer_id
  IterPrep     r473, r447
  Len          r474, r473
  Move         r475, r113
L46:
  LessInt      r476, r475, r474
  JumpIfFalse  r476, L39
  Index        r478, r473, r475
  Index        r479, r478, r12
  Index        r480, r454, r12
  Equal        r481, r479, r480
  JumpIfFalse  r481, L40
  // join w1 in year_total on w1.customer_id == s1.customer_id
  IterPrep     r482, r447
  Len          r483, r482
  Move         r484, r113
L45:
  LessInt      r485, r484, r483
  JumpIfFalse  r485, L40
  Index        r487, r482, r484
  Index        r488, r487, r12
  Index        r489, r454, r12
  Equal        r490, r488, r489
  JumpIfFalse  r490, L41
  // join w2 in year_total on w2.customer_id == s1.customer_id
  IterPrep     r491, r447
  Len          r492, r491
  Move         r493, r113
L44:
  LessInt      r494, r493, r492
  JumpIfFalse  r494, L41
  Index        r496, r491, r493
  Index        r497, r496, r12
  Index        r498, r454, r12
  Equal        r499, r497, r498
  JumpIfFalse  r499, L42
  // where s1.sale_type == "s" && c1.sale_type == "c" && w1.sale_type == "w" &&
  Index        r500, r454, r23
  // s1.year_total > 0 && c1.year_total > 0 && w1.year_total > 0 &&
  Index        r501, r454, r18
  Less         r502, r113, r501
  Index        r503, r469, r18
  Less         r504, r113, r503
  Index        r505, r487, r18
  Less         r506, r113, r505
  // (if c1.year_total > 0 { c2.year_total / c1.year_total } else { null }) >
  Index        r507, r469, r18
  Less         r508, r113, r507
  Index        r509, r478, r18
  Index        r510, r469, r18
  Div          r511, r509, r510
  Const        r512, nil
  Select       513,508,511,512
  // (if s1.year_total > 0 { s2.year_total / s1.year_total } else { null }) &&
  Index        r514, r454, r18
  Less         r515, r113, r514
  Index        r516, r460, r18
  Index        r517, r454, r18
  Div          r518, r516, r517
  Select       519,515,518,512
  // (if c1.year_total > 0 { c2.year_total / c1.year_total } else { null }) >
  Less         r520, r519, r513
  // (if c1.year_total > 0 { c2.year_total / c1.year_total } else { null }) >
  Index        r521, r469, r18
  Less         r522, r113, r521
  Index        r523, r478, r18
  Index        r524, r469, r18
  Div          r525, r523, r524
  Select       526,522,525,512
  // (if w1.year_total > 0 { w2.year_total / w1.year_total } else { null })
  Index        r527, r487, r18
  Less         r528, r113, r527
  Index        r529, r496, r18
  Index        r530, r487, r18
  Div          r531, r529, r530
  Select       532,528,531,512
  // (if c1.year_total > 0 { c2.year_total / c1.year_total } else { null }) >
  Less         r533, r532, r526
  // where s1.sale_type == "s" && c1.sale_type == "c" && w1.sale_type == "w" &&
  Equal        r534, r500, r57
  Index        r535, r469, r23
  Equal        r536, r535, r55
  Index        r537, r487, r23
  Equal        r538, r537, r430
  // s2.sale_type == "s" && c2.sale_type == "c" && w2.sale_type == "w" &&
  Index        r539, r460, r23
  Equal        r540, r539, r57
  Index        r541, r478, r23
  Equal        r542, r541, r55
  Index        r543, r496, r23
  Equal        r544, r543, r430
  // s1.dyear == 2001 && s2.dyear == 2002 &&
  Index        r545, r454, r17
  Const        r546, 2001
  Equal        r547, r545, r546
  Index        r548, r460, r17
  Const        r549, 2002
  Equal        r550, r548, r549
  // c1.dyear == 2001 && c2.dyear == 2002 &&
  Index        r551, r469, r17
  Equal        r552, r551, r546
  Index        r553, r478, r17
  Equal        r554, r553, r549
  // w1.dyear == 2001 && w2.dyear == 2002 &&
  Index        r555, r487, r17
  Equal        r556, r555, r546
  Index        r557, r496, r17
  Equal        r558, r557, r549
  // where s1.sale_type == "s" && c1.sale_type == "c" && w1.sale_type == "w" &&
  JumpIfFalse  r534, L43
  Move         r534, r536
  JumpIfFalse  r534, L43
  Move         r534, r538
  JumpIfFalse  r534, L43
  Move         r534, r540
  // s2.sale_type == "s" && c2.sale_type == "c" && w2.sale_type == "w" &&
  JumpIfFalse  r534, L43
  Move         r534, r542
  JumpIfFalse  r534, L43
  Move         r534, r544
  JumpIfFalse  r534, L43
  Move         r534, r547
  // s1.dyear == 2001 && s2.dyear == 2002 &&
  JumpIfFalse  r534, L43
  Move         r534, r550
  JumpIfFalse  r534, L43
  Move         r534, r552
  // c1.dyear == 2001 && c2.dyear == 2002 &&
  JumpIfFalse  r534, L43
  Move         r534, r554
  JumpIfFalse  r534, L43
  Move         r534, r556
  // w1.dyear == 2001 && w2.dyear == 2002 &&
  JumpIfFalse  r534, L43
  Move         r534, r558
  JumpIfFalse  r534, L43
  Move         r534, r502
  // s1.year_total > 0 && c1.year_total > 0 && w1.year_total > 0 &&
  JumpIfFalse  r534, L43
  Move         r534, r504
  JumpIfFalse  r534, L43
  Move         r534, r506
  JumpIfFalse  r534, L43
  Move         r534, r520
  // (if s1.year_total > 0 { s2.year_total / s1.year_total } else { null }) &&
  JumpIfFalse  r534, L43
  Move         r534, r533
L43:
  // where s1.sale_type == "s" && c1.sale_type == "c" && w1.sale_type == "w" &&
  JumpIfFalse  r534, L42
  // customer_id: s2.customer_id,
  Const        r559, "customer_id"
  Index        r560, r460, r12
  // customer_first_name: s2.customer_first_name,
  Const        r561, "customer_first_name"
  Index        r562, r460, r14
  // customer_last_name: s2.customer_last_name,
  Const        r563, "customer_last_name"
  Index        r564, r460, r15
  // customer_login: s2.customer_login,
  Const        r565, "customer_login"
  Index        r566, r460, r16
  // customer_id: s2.customer_id,
  Move         r567, r559
  Move         r568, r560
  // customer_first_name: s2.customer_first_name,
  Move         r569, r561
  Move         r570, r562
  // customer_last_name: s2.customer_last_name,
  Move         r571, r563
  Move         r572, r564
  // customer_login: s2.customer_login,
  Move         r573, r565
  Move         r574, r566
  // select {
  MakeMap      r575, 4, r567
  // sort by [s2.customer_id, s2.customer_first_name, s2.customer_last_name, s2.customer_login]
  Index        r577, r460, r12
  Index        r578, r460, r14
  Move         r579, r578
  Index        r580, r460, r15
  Move         r581, r580
  Index        r583, r460, r16
  MakeList     r585, 4, r577
  // from s1 in year_total
  Move         r586, r575
  MakeList     r587, 2, r585
  Append       r448, r448, r587
L42:
  // join w2 in year_total on w2.customer_id == s1.customer_id
  Add          r493, r493, r110
  Jump         L44
L41:
  // join w1 in year_total on w1.customer_id == s1.customer_id
  Add          r484, r484, r110
  Jump         L45
L40:
  // join c2 in year_total on c2.customer_id == s1.customer_id
  Add          r475, r475, r110
  Jump         L46
L39:
  // join c1 in year_total on c1.customer_id == s1.customer_id
  Add          r466, r466, r110
  Jump         L47
L38:
  // join s2 in year_total on s2.customer_id == s1.customer_id
  Add          r457, r457, r110
  Jump         L48
L37:
  // from s1 in year_total
  AddInt       r451, r451, r110
  Jump         L49
L36:
  // sort by [s2.customer_id, s2.customer_first_name, s2.customer_last_name, s2.customer_login]
  Sort         r448, r448
  // json(result)
  JSON         r448
  // expect len(result) == 0
  Len          r590, r448
  EqualInt     r591, r590, r113
  Expect       r591
  Return       r0
