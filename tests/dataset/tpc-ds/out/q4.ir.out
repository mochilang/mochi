func main (regs=594)
  // let customer = [
  Const        r0, [{"c_customer_id": "C1", "c_customer_sk": 1, "c_first_name": "Alice", "c_last_name": "A", "c_login": "alice"}]
  // let store_sales = [
  Const        r1, [{"ss_customer_sk": 1, "ss_ext_discount_amt": 0.0, "ss_ext_list_price": 10.0, "ss_ext_sales_price": 10.0, "ss_ext_wholesale_cost": 5.0, "ss_sold_date_sk": 1}, {"ss_customer_sk": 1, "ss_ext_discount_amt": 0.0, "ss_ext_list_price": 20.0, "ss_ext_sales_price": 20.0, "ss_ext_wholesale_cost": 5.0, "ss_sold_date_sk": 2}]
  // let catalog_sales = [
  Const        r2, [{"cs_bill_customer_sk": 1, "cs_ext_discount_amt": 0.0, "cs_ext_list_price": 10.0, "cs_ext_sales_price": 10.0, "cs_ext_wholesale_cost": 2.0, "cs_sold_date_sk": 1}, {"cs_bill_customer_sk": 1, "cs_ext_discount_amt": 0.0, "cs_ext_list_price": 30.0, "cs_ext_sales_price": 30.0, "cs_ext_wholesale_cost": 2.0, "cs_sold_date_sk": 2}]
  // let web_sales = [
  Const        r3, [{"ws_bill_customer_sk": 1, "ws_ext_discount_amt": 0.0, "ws_ext_list_price": 10.0, "ws_ext_sales_price": 10.0, "ws_ext_wholesale_cost": 5.0, "ws_sold_date_sk": 1}, {"ws_bill_customer_sk": 1, "ws_ext_discount_amt": 0.0, "ws_ext_list_price": 12.0, "ws_ext_sales_price": 12.0, "ws_ext_wholesale_cost": 5.0, "ws_sold_date_sk": 2}]
  // let date_dim = [
  Const        r4, [{"d_date_sk": 1, "d_year": 2001}, {"d_date_sk": 2, "d_year": 2002}]
  // from c in customer
  Const        r5, []
  // group by {id: c.c_customer_id, first: c.c_first_name, last: c.c_last_name, login: c.c_login, year: d.d_year} into g
  Const        r6, "id"
  Const        r7, "c_customer_id"
  Const        r8, "first"
  Const        r9, "c_first_name"
  Const        r10, "last"
  Const        r11, "c_last_name"
  Const        r12, "login"
  Const        r13, "c_login"
  Const        r14, "year"
  Const        r15, "d_year"
  // customer_id: g.key.id,
  Const        r16, "customer_id"
  Const        r17, "key"
  // customer_first_name: g.key.first,
  Const        r18, "customer_first_name"
  // customer_last_name: g.key.last,
  Const        r19, "customer_last_name"
  // customer_login: g.key.login,
  Const        r20, "customer_login"
  // dyear: g.key.year,
  Const        r21, "dyear"
  // year_total: sum(from x in g select ((x.ss_ext_list_price - x.ss_ext_wholesale_cost - x.ss_ext_discount_amt) + x.ss_ext_sales_price) / 2),
  Const        r22, "year_total"
  Const        r23, "ss_ext_list_price"
  Const        r24, "ss_ext_wholesale_cost"
  Const        r25, "ss_ext_discount_amt"
  Const        r26, "ss_ext_sales_price"
  // sale_type: "s",
  Const        r27, "sale_type"
  // from c in customer
  MakeMap      r28, 0, r0
  Const        r30, []
  Move         r29, r30
  IterPrep     r31, r0
  Len          r32, r31
  Const        r33, 0
L7:
  LessInt      r34, r33, r32
  JumpIfFalse  r34, L0
  Index        r35, r31, r33
  Move         r36, r35
  // join s in store_sales on c.c_customer_sk == s.ss_customer_sk
  IterPrep     r37, r1
  Len          r38, r37
  Const        r39, 0
L6:
  LessInt      r40, r39, r38
  JumpIfFalse  r40, L1
  Index        r41, r37, r39
  Move         r42, r41
  Const        r43, "c_customer_sk"
  Index        r44, r36, r43
  Const        r45, "ss_customer_sk"
  Index        r46, r42, r45
  Equal        r47, r44, r46
  JumpIfFalse  r47, L2
  // join d in date_dim on s.ss_sold_date_sk == d.d_date_sk
  IterPrep     r48, r4
  Len          r49, r48
  Const        r50, 0
L5:
  LessInt      r51, r50, r49
  JumpIfFalse  r51, L2
  Index        r52, r48, r50
  Move         r53, r52
  Const        r54, "ss_sold_date_sk"
  Index        r55, r42, r54
  Const        r56, "d_date_sk"
  Index        r57, r53, r56
  Equal        r58, r55, r57
  JumpIfFalse  r58, L3
  // from c in customer
  Const        r59, "c"
  Move         r60, r36
  Const        r61, "s"
  Move         r62, r42
  Const        r63, "d"
  Move         r64, r53
  Move         r65, r59
  Move         r66, r60
  Move         r67, r61
  Move         r68, r62
  Move         r69, r63
  Move         r70, r64
  MakeMap      r71, 3, r65
  // group by {id: c.c_customer_id, first: c.c_first_name, last: c.c_last_name, login: c.c_login, year: d.d_year} into g
  Const        r72, "id"
  Index        r73, r36, r7
  Const        r74, "first"
  Index        r75, r36, r9
  Const        r76, "last"
  Index        r77, r36, r11
  Const        r78, "login"
  Index        r79, r36, r13
  Const        r80, "year"
  Index        r81, r53, r15
  Move         r82, r72
  Move         r83, r73
  Move         r84, r74
  Move         r85, r75
  Move         r86, r76
  Move         r87, r77
  Move         r88, r78
  Move         r89, r79
  Move         r90, r80
  Move         r91, r81
  MakeMap      r92, 5, r82
  Str          r93, r92
  In           r94, r93, r28
  JumpIfTrue   r94, L4
  // from c in customer
  Const        r95, "__group__"
  Const        r96, true
  // group by {id: c.c_customer_id, first: c.c_first_name, last: c.c_last_name, login: c.c_login, year: d.d_year} into g
  Move         r97, r92
  // from c in customer
  Const        r98, "items"
  Move         r99, r30
  Const        r100, "count"
  Const        r101, 0
  Move         r102, r95
  Move         r103, r96
  Move         r104, r17
  Move         r105, r97
  Move         r106, r98
  Move         r107, r99
  Move         r108, r100
  Move         r109, r101
  MakeMap      r110, 4, r102
  SetIndex     r28, r93, r110
  Append       r111, r29, r110
  Move         r29, r111
L4:
  Index        r112, r28, r93
  Index        r113, r112, r98
  Append       r114, r113, r71
  SetIndex     r112, r98, r114
  Index        r115, r112, r100
  Const        r116, 1
  AddInt       r117, r115, r116
  SetIndex     r112, r100, r117
L3:
  // join d in date_dim on s.ss_sold_date_sk == d.d_date_sk
  AddInt       r50, r50, r116
  Jump         L5
L2:
  // join s in store_sales on c.c_customer_sk == s.ss_customer_sk
  AddInt       r39, r39, r116
  Jump         L6
L1:
  // from c in customer
  AddInt       r33, r33, r116
  Jump         L7
L0:
  Move         r118, r101
  Len          r119, r29
L11:
  LessInt      r120, r118, r119
  JumpIfFalse  r120, L8
  Index        r121, r29, r118
  Move         r122, r121
  // customer_id: g.key.id,
  Const        r123, "customer_id"
  Index        r124, r122, r17
  Index        r125, r124, r6
  // customer_first_name: g.key.first,
  Const        r126, "customer_first_name"
  Index        r127, r122, r17
  Index        r128, r127, r8
  // customer_last_name: g.key.last,
  Const        r129, "customer_last_name"
  Index        r130, r122, r17
  Index        r131, r130, r10
  // customer_login: g.key.login,
  Const        r132, "customer_login"
  Index        r133, r122, r17
  Index        r134, r133, r12
  // dyear: g.key.year,
  Const        r135, "dyear"
  Index        r136, r122, r17
  Index        r137, r136, r14
  // year_total: sum(from x in g select ((x.ss_ext_list_price - x.ss_ext_wholesale_cost - x.ss_ext_discount_amt) + x.ss_ext_sales_price) / 2),
  Const        r138, "year_total"
  Const        r139, []
  IterPrep     r140, r122
  Len          r141, r140
  Move         r142, r101
L10:
  LessInt      r143, r142, r141
  JumpIfFalse  r143, L9
  Index        r144, r140, r142
  Move         r145, r144
  Index        r146, r145, r23
  Index        r147, r145, r24
  Sub          r148, r146, r147
  Index        r149, r145, r25
  Sub          r150, r148, r149
  Index        r151, r145, r26
  Add          r152, r150, r151
  Const        r153, 2
  Div          r154, r152, r153
  Append       r155, r139, r154
  Move         r139, r155
  AddInt       r142, r142, r116
  Jump         L10
L9:
  Sum          r156, r139
  // sale_type: "s",
  Const        r157, "sale_type"
  // customer_id: g.key.id,
  Move         r158, r123
  Move         r159, r125
  // customer_first_name: g.key.first,
  Move         r160, r126
  Move         r161, r128
  // customer_last_name: g.key.last,
  Move         r162, r129
  Move         r163, r131
  // customer_login: g.key.login,
  Move         r164, r132
  Move         r165, r134
  // dyear: g.key.year,
  Move         r166, r135
  Move         r167, r137
  // year_total: sum(from x in g select ((x.ss_ext_list_price - x.ss_ext_wholesale_cost - x.ss_ext_discount_amt) + x.ss_ext_sales_price) / 2),
  Move         r168, r138
  Move         r169, r156
  // sale_type: "s",
  Move         r170, r157
  Move         r171, r61
  // select {
  MakeMap      r172, 7, r158
  // from c in customer
  Append       r173, r5, r172
  Move         r5, r173
  AddInt       r118, r118, r116
  Jump         L11
L8:
  // from c in customer
  Const        r174, []
  // year_total: sum(from x in g select ((x.cs_ext_list_price - x.cs_ext_wholesale_cost - x.cs_ext_discount_amt) + x.cs_ext_sales_price) / 2),
  Const        r175, "cs_ext_list_price"
  Const        r176, "cs_ext_wholesale_cost"
  Const        r177, "cs_ext_discount_amt"
  Const        r178, "cs_ext_sales_price"
  // from c in customer
  MakeMap      r179, 0, r0
  Move         r180, r30
  IterPrep     r181, r0
  Len          r182, r181
  Const        r183, 0
L19:
  LessInt      r184, r183, r182
  JumpIfFalse  r184, L12
  Index        r185, r181, r183
  Move         r36, r185
  // join cs in catalog_sales on c.c_customer_sk == cs.cs_bill_customer_sk
  IterPrep     r186, r2
  Len          r187, r186
  Const        r188, 0
L18:
  LessInt      r189, r188, r187
  JumpIfFalse  r189, L13
  Index        r190, r186, r188
  Move         r191, r190
  Index        r192, r36, r43
  Const        r193, "cs_bill_customer_sk"
  Index        r194, r191, r193
  Equal        r195, r192, r194
  JumpIfFalse  r195, L14
  // join d in date_dim on cs.cs_sold_date_sk == d.d_date_sk
  IterPrep     r196, r4
  Len          r197, r196
  Const        r198, 0
L17:
  LessInt      r199, r198, r197
  JumpIfFalse  r199, L14
  Index        r200, r196, r198
  Move         r201, r200
  Const        r202, "cs_sold_date_sk"
  Index        r203, r191, r202
  Index        r204, r201, r56
  Equal        r205, r203, r204
  JumpIfFalse  r205, L15
  // from c in customer
  Move         r206, r36
  Const        r207, "cs"
  Move         r208, r191
  Move         r209, r201
  Move         r210, r59
  Move         r211, r206
  Move         r212, r207
  Move         r213, r208
  Move         r214, r63
  Move         r215, r209
  MakeMap      r216, 3, r210
  // group by {id: c.c_customer_id, first: c.c_first_name, last: c.c_last_name, login: c.c_login, year: d.d_year} into g
  Const        r217, "id"
  Index        r218, r36, r7
  Const        r219, "first"
  Index        r220, r36, r9
  Const        r221, "last"
  Index        r222, r36, r11
  Const        r223, "login"
  Index        r224, r36, r13
  Const        r225, "year"
  Index        r226, r201, r15
  Move         r227, r217
  Move         r228, r218
  Move         r229, r219
  Move         r230, r220
  Move         r231, r221
  Move         r232, r222
  Move         r233, r223
  Move         r234, r224
  Move         r235, r225
  Move         r236, r226
  MakeMap      r237, 5, r227
  Str          r238, r237
  In           r239, r238, r179
  JumpIfTrue   r239, L16
  Move         r240, r237
  // from c in customer
  Move         r241, r30
  Move         r242, r95
  Move         r243, r96
  Move         r244, r17
  Move         r245, r240
  Move         r246, r98
  Move         r247, r241
  Move         r248, r100
  Move         r249, r101
  MakeMap      r250, 4, r242
  SetIndex     r179, r238, r250
  Append       r251, r180, r250
  Move         r180, r251
L16:
  Index        r252, r179, r238
  Index        r253, r252, r98
  Append       r254, r253, r216
  SetIndex     r252, r98, r254
  Index        r255, r252, r100
  AddInt       r256, r255, r116
  SetIndex     r252, r100, r256
L15:
  // join d in date_dim on cs.cs_sold_date_sk == d.d_date_sk
  AddInt       r198, r198, r116
  Jump         L17
L14:
  // join cs in catalog_sales on c.c_customer_sk == cs.cs_bill_customer_sk
  AddInt       r188, r188, r116
  Jump         L18
L13:
  // from c in customer
  AddInt       r183, r183, r116
  Jump         L19
L12:
  Move         r257, r101
  Len          r258, r180
L23:
  LessInt      r259, r257, r258
  JumpIfFalse  r259, L20
  Index        r260, r180, r257
  Move         r122, r260
  // customer_id: g.key.id,
  Const        r261, "customer_id"
  Index        r262, r122, r17
  Index        r263, r262, r6
  // customer_first_name: g.key.first,
  Const        r264, "customer_first_name"
  Index        r265, r122, r17
  Index        r266, r265, r8
  // customer_last_name: g.key.last,
  Const        r267, "customer_last_name"
  Index        r268, r122, r17
  Index        r269, r268, r10
  // customer_login: g.key.login,
  Const        r270, "customer_login"
  Index        r271, r122, r17
  Index        r272, r271, r12
  // dyear: g.key.year,
  Const        r273, "dyear"
  Index        r274, r122, r17
  Index        r275, r274, r14
  // year_total: sum(from x in g select ((x.cs_ext_list_price - x.cs_ext_wholesale_cost - x.cs_ext_discount_amt) + x.cs_ext_sales_price) / 2),
  Const        r276, "year_total"
  Const        r277, []
  IterPrep     r278, r122
  Len          r279, r278
  Move         r280, r101
L22:
  LessInt      r281, r280, r279
  JumpIfFalse  r281, L21
  Index        r282, r278, r280
  Move         r145, r282
  Index        r283, r145, r175
  Index        r284, r145, r176
  Sub          r285, r283, r284
  Index        r286, r145, r177
  Sub          r287, r285, r286
  Index        r288, r145, r178
  Add          r289, r287, r288
  Div          r290, r289, r153
  Append       r291, r277, r290
  Move         r277, r291
  AddInt       r280, r280, r116
  Jump         L22
L21:
  Sum          r292, r277
  // sale_type: "c",
  Const        r293, "sale_type"
  // customer_id: g.key.id,
  Move         r294, r261
  Move         r295, r263
  // customer_first_name: g.key.first,
  Move         r296, r264
  Move         r297, r266
  // customer_last_name: g.key.last,
  Move         r298, r267
  Move         r299, r269
  // customer_login: g.key.login,
  Move         r300, r270
  Move         r301, r272
  // dyear: g.key.year,
  Move         r302, r273
  Move         r303, r275
  // year_total: sum(from x in g select ((x.cs_ext_list_price - x.cs_ext_wholesale_cost - x.cs_ext_discount_amt) + x.cs_ext_sales_price) / 2),
  Move         r304, r276
  Move         r305, r292
  // sale_type: "c",
  Move         r306, r293
  Move         r307, r59
  // select {
  MakeMap      r308, 7, r294
  // from c in customer
  Append       r309, r174, r308
  Move         r174, r309
  AddInt       r257, r257, r116
  Jump         L23
L20:
  // ) union all (
  UnionAll     r310, r5, r174
  // from c in customer
  Const        r311, []
  // year_total: sum(from x in g select ((x.ws_ext_list_price - x.ws_ext_wholesale_cost - x.ws_ext_discount_amt) + x.ws_ext_sales_price) / 2),
  Const        r312, "ws_ext_list_price"
  Const        r313, "ws_ext_wholesale_cost"
  Const        r314, "ws_ext_discount_amt"
  Const        r315, "ws_ext_sales_price"
  // from c in customer
  MakeMap      r316, 0, r0
  Move         r317, r30
  IterPrep     r318, r0
  Len          r319, r318
  Const        r320, 0
L31:
  LessInt      r321, r320, r319
  JumpIfFalse  r321, L24
  Index        r322, r318, r320
  Move         r36, r322
  // join ws in web_sales on c.c_customer_sk == ws.ws_bill_customer_sk
  IterPrep     r323, r3
  Len          r324, r323
  Const        r325, 0
L30:
  LessInt      r326, r325, r324
  JumpIfFalse  r326, L25
  Index        r327, r323, r325
  Move         r328, r327
  Index        r329, r36, r43
  Const        r330, "ws_bill_customer_sk"
  Index        r331, r328, r330
  Equal        r332, r329, r331
  JumpIfFalse  r332, L26
  // join d in date_dim on ws.ws_sold_date_sk == d.d_date_sk
  IterPrep     r333, r4
  Len          r334, r333
  Const        r335, 0
L29:
  LessInt      r336, r335, r334
  JumpIfFalse  r336, L26
  Index        r337, r333, r335
  Move         r338, r337
  Const        r339, "ws_sold_date_sk"
  Index        r340, r328, r339
  Index        r341, r338, r56
  Equal        r342, r340, r341
  JumpIfFalse  r342, L27
  // from c in customer
  Move         r343, r36
  Const        r344, "ws"
  Move         r345, r328
  Move         r346, r338
  Move         r347, r59
  Move         r348, r343
  Move         r349, r344
  Move         r350, r345
  Move         r351, r63
  Move         r352, r346
  MakeMap      r353, 3, r347
  // group by {id: c.c_customer_id, first: c.c_first_name, last: c.c_last_name, login: c.c_login, year: d.d_year} into g
  Const        r354, "id"
  Index        r355, r36, r7
  Const        r356, "first"
  Index        r357, r36, r9
  Const        r358, "last"
  Index        r359, r36, r11
  Const        r360, "login"
  Index        r361, r36, r13
  Const        r362, "year"
  Index        r363, r338, r15
  Move         r364, r354
  Move         r365, r355
  Move         r366, r356
  Move         r367, r357
  Move         r368, r358
  Move         r369, r359
  Move         r370, r360
  Move         r371, r361
  Move         r372, r362
  Move         r373, r363
  MakeMap      r374, 5, r364
  Str          r375, r374
  In           r376, r375, r316
  JumpIfTrue   r376, L28
  Move         r377, r374
  // from c in customer
  Move         r378, r30
  Move         r379, r95
  Move         r380, r96
  Move         r381, r17
  Move         r382, r377
  Move         r383, r98
  Move         r384, r378
  Move         r385, r100
  Move         r386, r101
  MakeMap      r387, 4, r379
  SetIndex     r316, r375, r387
  Append       r388, r317, r387
  Move         r317, r388
L28:
  Index        r389, r316, r375
  Index        r390, r389, r98
  Append       r391, r390, r353
  SetIndex     r389, r98, r391
  Index        r392, r389, r100
  AddInt       r393, r392, r116
  SetIndex     r389, r100, r393
L27:
  // join d in date_dim on ws.ws_sold_date_sk == d.d_date_sk
  AddInt       r335, r335, r116
  Jump         L29
L26:
  // join ws in web_sales on c.c_customer_sk == ws.ws_bill_customer_sk
  AddInt       r325, r325, r116
  Jump         L30
L25:
  // from c in customer
  AddInt       r320, r320, r116
  Jump         L31
L24:
  Move         r394, r101
  Len          r395, r317
L35:
  LessInt      r396, r394, r395
  JumpIfFalse  r396, L32
  Index        r397, r317, r394
  Move         r122, r397
  // customer_id: g.key.id,
  Const        r398, "customer_id"
  Index        r399, r122, r17
  Index        r400, r399, r6
  // customer_first_name: g.key.first,
  Const        r401, "customer_first_name"
  Index        r402, r122, r17
  Index        r403, r402, r8
  // customer_last_name: g.key.last,
  Const        r404, "customer_last_name"
  Index        r405, r122, r17
  Index        r406, r405, r10
  // customer_login: g.key.login,
  Const        r407, "customer_login"
  Index        r408, r122, r17
  Index        r409, r408, r12
  // dyear: g.key.year,
  Const        r410, "dyear"
  Index        r411, r122, r17
  Index        r412, r411, r14
  // year_total: sum(from x in g select ((x.ws_ext_list_price - x.ws_ext_wholesale_cost - x.ws_ext_discount_amt) + x.ws_ext_sales_price) / 2),
  Const        r413, "year_total"
  Const        r414, []
  IterPrep     r415, r122
  Len          r416, r415
  Move         r417, r101
L34:
  LessInt      r418, r417, r416
  JumpIfFalse  r418, L33
  Index        r419, r415, r417
  Move         r145, r419
  Index        r420, r145, r312
  Index        r421, r145, r313
  Sub          r422, r420, r421
  Index        r423, r145, r314
  Sub          r424, r422, r423
  Index        r425, r145, r315
  Add          r426, r424, r425
  Div          r427, r426, r153
  Append       r428, r414, r427
  Move         r414, r428
  AddInt       r417, r417, r116
  Jump         L34
L33:
  Sum          r429, r414
  // sale_type: "w",
  Const        r430, "sale_type"
  Const        r431, "w"
  // customer_id: g.key.id,
  Move         r432, r398
  Move         r433, r400
  // customer_first_name: g.key.first,
  Move         r434, r401
  Move         r435, r403
  // customer_last_name: g.key.last,
  Move         r436, r404
  Move         r437, r406
  // customer_login: g.key.login,
  Move         r438, r407
  Move         r439, r409
  // dyear: g.key.year,
  Move         r440, r410
  Move         r441, r412
  // year_total: sum(from x in g select ((x.ws_ext_list_price - x.ws_ext_wholesale_cost - x.ws_ext_discount_amt) + x.ws_ext_sales_price) / 2),
  Move         r442, r413
  Move         r443, r429
  // sale_type: "w",
  Move         r444, r430
  Move         r445, r431
  // select {
  MakeMap      r446, 7, r432
  // from c in customer
  Append       r447, r311, r446
  Move         r311, r447
  AddInt       r394, r394, r116
  Jump         L35
L32:
  // ) union all (
  UnionAll     r448, r310, r311
  // from s1 in year_total
  Const        r449, []
  IterPrep     r450, r448
  Len          r451, r450
  Move         r452, r101
L49:
  LessInt      r453, r452, r451
  JumpIfFalse  r453, L36
  Index        r454, r450, r452
  Move         r455, r454
  // join s2 in year_total on s2.customer_id == s1.customer_id
  IterPrep     r456, r448
  Len          r457, r456
  Move         r458, r101
L48:
  LessInt      r459, r458, r457
  JumpIfFalse  r459, L37
  Index        r460, r456, r458
  Move         r461, r460
  Index        r462, r461, r16
  Index        r463, r455, r16
  Equal        r464, r462, r463
  JumpIfFalse  r464, L38
  // join c1 in year_total on c1.customer_id == s1.customer_id
  IterPrep     r465, r448
  Len          r466, r465
  Move         r467, r101
L47:
  LessInt      r468, r467, r466
  JumpIfFalse  r468, L38
  Index        r469, r465, r467
  Move         r470, r469
  Index        r471, r470, r16
  Index        r472, r455, r16
  Equal        r473, r471, r472
  JumpIfFalse  r473, L39
  // join c2 in year_total on c2.customer_id == s1.customer_id
  IterPrep     r474, r448
  Len          r475, r474
  Move         r476, r101
L46:
  LessInt      r477, r476, r475
  JumpIfFalse  r477, L39
  Index        r478, r474, r476
  Move         r479, r478
  Index        r480, r479, r16
  Index        r481, r455, r16
  Equal        r482, r480, r481
  JumpIfFalse  r482, L40
  // join w1 in year_total on w1.customer_id == s1.customer_id
  IterPrep     r483, r448
  Len          r484, r483
  Move         r485, r101
L45:
  LessInt      r486, r485, r484
  JumpIfFalse  r486, L40
  Index        r487, r483, r485
  Move         r488, r487
  Index        r489, r488, r16
  Index        r490, r455, r16
  Equal        r491, r489, r490
  JumpIfFalse  r491, L41
  // join w2 in year_total on w2.customer_id == s1.customer_id
  IterPrep     r492, r448
  Len          r493, r492
  Move         r494, r101
L44:
  LessInt      r495, r494, r493
  JumpIfFalse  r495, L41
  Index        r496, r492, r494
  Move         r497, r496
  Index        r498, r497, r16
  Index        r499, r455, r16
  Equal        r500, r498, r499
  JumpIfFalse  r500, L42
  // where s1.sale_type == "s" && c1.sale_type == "c" && w1.sale_type == "w" &&
  Index        r501, r455, r27
  // s1.year_total > 0 && c1.year_total > 0 && w1.year_total > 0 &&
  Index        r502, r455, r22
  Less         r503, r101, r502
  Index        r504, r470, r22
  Less         r505, r101, r504
  Index        r506, r488, r22
  Less         r507, r101, r506
  // (if c1.year_total > 0 { c2.year_total / c1.year_total } else { null }) >
  Index        r508, r470, r22
  Less         r509, r101, r508
  Index        r510, r479, r22
  Index        r511, r470, r22
  Div          r512, r510, r511
  Const        r513, nil
  Select       514,509,512,513
  // (if s1.year_total > 0 { s2.year_total / s1.year_total } else { null }) &&
  Index        r515, r455, r22
  Less         r516, r101, r515
  Index        r517, r461, r22
  Index        r518, r455, r22
  Div          r519, r517, r518
  Select       520,516,519,513
  // (if c1.year_total > 0 { c2.year_total / c1.year_total } else { null }) >
  Less         r521, r520, r514
  // (if c1.year_total > 0 { c2.year_total / c1.year_total } else { null }) >
  Index        r522, r470, r22
  Less         r523, r101, r522
  Index        r524, r479, r22
  Index        r525, r470, r22
  Div          r526, r524, r525
  Select       527,523,526,513
  // (if w1.year_total > 0 { w2.year_total / w1.year_total } else { null })
  Index        r528, r488, r22
  Less         r529, r101, r528
  Index        r530, r497, r22
  Index        r531, r488, r22
  Div          r532, r530, r531
  Select       533,529,532,513
  // (if c1.year_total > 0 { c2.year_total / c1.year_total } else { null }) >
  Less         r534, r533, r527
  // where s1.sale_type == "s" && c1.sale_type == "c" && w1.sale_type == "w" &&
  Equal        r535, r501, r61
  Index        r536, r470, r27
  Equal        r537, r536, r59
  Index        r538, r488, r27
  Equal        r539, r538, r431
  // s2.sale_type == "s" && c2.sale_type == "c" && w2.sale_type == "w" &&
  Index        r540, r461, r27
  Equal        r541, r540, r61
  Index        r542, r479, r27
  Equal        r543, r542, r59
  Index        r544, r497, r27
  Equal        r545, r544, r431
  // s1.dyear == 2001 && s2.dyear == 2002 &&
  Index        r546, r455, r21
  Const        r547, 2001
  Equal        r548, r546, r547
  Index        r549, r461, r21
  Const        r550, 2002
  Equal        r551, r549, r550
  // c1.dyear == 2001 && c2.dyear == 2002 &&
  Index        r552, r470, r21
  Equal        r553, r552, r547
  Index        r554, r479, r21
  Equal        r555, r554, r550
  // w1.dyear == 2001 && w2.dyear == 2002 &&
  Index        r556, r488, r21
  Equal        r557, r556, r547
  Index        r558, r497, r21
  Equal        r559, r558, r550
  // where s1.sale_type == "s" && c1.sale_type == "c" && w1.sale_type == "w" &&
  Move         r560, r535
  JumpIfFalse  r560, L43
  Move         r560, r537
  JumpIfFalse  r560, L43
  Move         r560, r539
  JumpIfFalse  r560, L43
  Move         r560, r541
  // s2.sale_type == "s" && c2.sale_type == "c" && w2.sale_type == "w" &&
  JumpIfFalse  r560, L43
  Move         r560, r543
  JumpIfFalse  r560, L43
  Move         r560, r545
  JumpIfFalse  r560, L43
  Move         r560, r548
  // s1.dyear == 2001 && s2.dyear == 2002 &&
  JumpIfFalse  r560, L43
  Move         r560, r551
  JumpIfFalse  r560, L43
  Move         r560, r553
  // c1.dyear == 2001 && c2.dyear == 2002 &&
  JumpIfFalse  r560, L43
  Move         r560, r555
  JumpIfFalse  r560, L43
  Move         r560, r557
  // w1.dyear == 2001 && w2.dyear == 2002 &&
  JumpIfFalse  r560, L43
  Move         r560, r559
  JumpIfFalse  r560, L43
  Move         r560, r503
  // s1.year_total > 0 && c1.year_total > 0 && w1.year_total > 0 &&
  JumpIfFalse  r560, L43
  Move         r560, r505
  JumpIfFalse  r560, L43
  Move         r560, r507
  JumpIfFalse  r560, L43
  Move         r560, r521
  // (if s1.year_total > 0 { s2.year_total / s1.year_total } else { null }) &&
  JumpIfFalse  r560, L43
  Move         r560, r534
L43:
  // where s1.sale_type == "s" && c1.sale_type == "c" && w1.sale_type == "w" &&
  JumpIfFalse  r560, L42
  // customer_id: s2.customer_id,
  Const        r561, "customer_id"
  Index        r562, r461, r16
  // customer_first_name: s2.customer_first_name,
  Const        r563, "customer_first_name"
  Index        r564, r461, r18
  // customer_last_name: s2.customer_last_name,
  Const        r565, "customer_last_name"
  Index        r566, r461, r19
  // customer_login: s2.customer_login,
  Const        r567, "customer_login"
  Index        r568, r461, r20
  // customer_id: s2.customer_id,
  Move         r569, r561
  Move         r570, r562
  // customer_first_name: s2.customer_first_name,
  Move         r571, r563
  Move         r572, r564
  // customer_last_name: s2.customer_last_name,
  Move         r573, r565
  Move         r574, r566
  // customer_login: s2.customer_login,
  Move         r575, r567
  Move         r576, r568
  // select {
  MakeMap      r577, 4, r569
  // sort by [s2.customer_id, s2.customer_first_name, s2.customer_last_name, s2.customer_login]
  Index        r578, r461, r16
  Move         r579, r578
  Index        r580, r461, r18
  Move         r581, r580
  Index        r582, r461, r19
  Move         r583, r582
  Index        r584, r461, r20
  Move         r585, r584
  MakeList     r586, 4, r579
  Move         r587, r586
  // from s1 in year_total
  Move         r588, r577
  MakeList     r589, 2, r587
  Append       r590, r449, r589
  Move         r449, r590
L42:
  // join w2 in year_total on w2.customer_id == s1.customer_id
  Add          r494, r494, r116
  Jump         L44
L41:
  // join w1 in year_total on w1.customer_id == s1.customer_id
  Add          r485, r485, r116
  Jump         L45
L40:
  // join c2 in year_total on c2.customer_id == s1.customer_id
  Add          r476, r476, r116
  Jump         L46
L39:
  // join c1 in year_total on c1.customer_id == s1.customer_id
  Add          r467, r467, r116
  Jump         L47
L38:
  // join s2 in year_total on s2.customer_id == s1.customer_id
  Add          r458, r458, r116
  Jump         L48
L37:
  // from s1 in year_total
  AddInt       r452, r452, r116
  Jump         L49
L36:
  // sort by [s2.customer_id, s2.customer_first_name, s2.customer_last_name, s2.customer_login]
  Sort         r591, r449
  // from s1 in year_total
  Move         r449, r591
  // json(result)
  JSON         r449
  // expect result == [
  Const        r592, [{"customer_first_name": "Alice", "customer_id": "C1", "customer_last_name": "A", "customer_login": "alice"}]
  Equal        r593, r449, r592
  Expect       r593
  Return       r0
