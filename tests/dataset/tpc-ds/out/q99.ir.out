func main (regs=235)
  // let catalog_sales = [
  Const        r0, [{"cs_call_center_sk": 1, "cs_ship_date_sk": 31, "cs_ship_mode_sk": 1, "cs_sold_date_sk": 1, "cs_warehouse_sk": 1}, {"cs_call_center_sk": 1, "cs_ship_date_sk": 51, "cs_ship_mode_sk": 1, "cs_sold_date_sk": 1, "cs_warehouse_sk": 1}, {"cs_call_center_sk": 1, "cs_ship_date_sk": 71, "cs_ship_mode_sk": 1, "cs_sold_date_sk": 1, "cs_warehouse_sk": 1}, {"cs_call_center_sk": 1, "cs_ship_date_sk": 101, "cs_ship_mode_sk": 1, "cs_sold_date_sk": 1, "cs_warehouse_sk": 1}, {"cs_call_center_sk": 1, "cs_ship_date_sk": 131, "cs_ship_mode_sk": 1, "cs_sold_date_sk": 1, "cs_warehouse_sk": 1}]
  // let warehouse = [{w_warehouse_sk: 1, w_warehouse_name: "Warehouse1"}]
  Const        r1, [{"w_warehouse_name": "Warehouse1", "w_warehouse_sk": 1}]
  // let ship_mode = [{sm_ship_mode_sk: 1, sm_type: "EXP"}]
  Const        r2, [{"sm_ship_mode_sk": 1, "sm_type": "EXP"}]
  // let call_center = [{cc_call_center_sk: 1, cc_name: "CC1"}]
  Const        r3, [{"cc_call_center_sk": 1, "cc_name": "CC1"}]
  // from cs in catalog_sales
  Const        r4, []
  // group by {warehouse: substr(w.w_warehouse_name,0,20), sm_type: sm.sm_type, cc_name: cc.cc_name} into g
  Const        r5, "warehouse"
  Const        r6, "w_warehouse_name"
  Const        r7, "sm_type"
  Const        r8, "cc_name"
  // warehouse: g.key.warehouse,
  Const        r9, "key"
  // d30: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk <= 30 select x),
  Const        r10, "d30"
  Const        r11, "cs_ship_date_sk"
  Const        r12, "cs_sold_date_sk"
  // d60: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60 select x),
  Const        r13, "d60"
  // d90: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90 select x),
  Const        r14, "d90"
  // d120: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120 select x),
  Const        r15, "d120"
  // dmore: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 120 select x)
  Const        r16, "dmore"
  // from cs in catalog_sales
  MakeMap      r17, 0, r0
  Const        r19, []
  Move         r18, r19
  IterPrep     r20, r0
  Len          r21, r20
  Const        r22, 0
L9:
  LessInt      r23, r22, r21
  JumpIfFalse  r23, L0
  Index        r24, r20, r22
  Move         r25, r24
  // join w in warehouse on cs.cs_warehouse_sk == w.w_warehouse_sk
  IterPrep     r26, r1
  Len          r27, r26
  Const        r28, 0
L8:
  LessInt      r29, r28, r27
  JumpIfFalse  r29, L1
  Index        r30, r26, r28
  Move         r31, r30
  Const        r32, "cs_warehouse_sk"
  Index        r33, r25, r32
  Const        r34, "w_warehouse_sk"
  Index        r35, r31, r34
  Equal        r36, r33, r35
  JumpIfFalse  r36, L2
  // join sm in ship_mode on cs.cs_ship_mode_sk == sm.sm_ship_mode_sk
  IterPrep     r37, r2
  Len          r38, r37
  Const        r39, 0
L7:
  LessInt      r40, r39, r38
  JumpIfFalse  r40, L2
  Index        r41, r37, r39
  Move         r42, r41
  Const        r43, "cs_ship_mode_sk"
  Index        r44, r25, r43
  Const        r45, "sm_ship_mode_sk"
  Index        r46, r42, r45
  Equal        r47, r44, r46
  JumpIfFalse  r47, L3
  // join cc in call_center on cs.cs_call_center_sk == cc.cc_call_center_sk
  IterPrep     r48, r3
  Len          r49, r48
  Const        r50, 0
L6:
  LessInt      r51, r50, r49
  JumpIfFalse  r51, L3
  Index        r52, r48, r50
  Move         r53, r52
  Const        r54, "cs_call_center_sk"
  Index        r55, r25, r54
  Const        r56, "cc_call_center_sk"
  Index        r57, r53, r56
  Equal        r58, r55, r57
  JumpIfFalse  r58, L4
  // from cs in catalog_sales
  Const        r59, "cs"
  Move         r60, r25
  Const        r61, "w"
  Move         r62, r31
  Const        r63, "sm"
  Move         r64, r42
  Const        r65, "cc"
  Move         r66, r53
  Move         r67, r59
  Move         r68, r60
  Move         r69, r61
  Move         r70, r62
  Move         r71, r63
  Move         r72, r64
  Move         r73, r65
  Move         r74, r66
  MakeMap      r75, 4, r67
  // group by {warehouse: substr(w.w_warehouse_name,0,20), sm_type: sm.sm_type, cc_name: cc.cc_name} into g
  Const        r76, "warehouse"
  Index        r77, r31, r6
  Const        r78, 0
  Const        r79, 20
  Slice        r80, r77, r78, r79
  Const        r81, "sm_type"
  Index        r82, r42, r7
  Const        r83, "cc_name"
  Index        r84, r53, r8
  Move         r85, r76
  Move         r86, r80
  Move         r87, r81
  Move         r88, r82
  Move         r89, r83
  Move         r90, r84
  MakeMap      r91, 3, r85
  Str          r92, r91
  In           r93, r92, r17
  JumpIfTrue   r93, L5
  // from cs in catalog_sales
  Const        r94, "__group__"
  Const        r95, true
  // group by {warehouse: substr(w.w_warehouse_name,0,20), sm_type: sm.sm_type, cc_name: cc.cc_name} into g
  Move         r96, r91
  // from cs in catalog_sales
  Const        r97, "items"
  Move         r98, r19
  Const        r99, "count"
  Move         r100, r94
  Move         r101, r95
  Move         r102, r9
  Move         r103, r96
  Move         r104, r97
  Move         r105, r98
  Move         r106, r99
  Move         r107, r78
  MakeMap      r108, 4, r100
  SetIndex     r17, r92, r108
  Append       r109, r18, r108
  Move         r18, r109
L5:
  Index        r110, r17, r92
  Index        r111, r110, r97
  Append       r112, r111, r75
  SetIndex     r110, r97, r112
  Index        r113, r110, r99
  Const        r114, 1
  AddInt       r115, r113, r114
  SetIndex     r110, r99, r115
L4:
  // join cc in call_center on cs.cs_call_center_sk == cc.cc_call_center_sk
  AddInt       r50, r50, r114
  Jump         L6
L3:
  // join sm in ship_mode on cs.cs_ship_mode_sk == sm.sm_ship_mode_sk
  AddInt       r39, r39, r114
  Jump         L7
L2:
  // join w in warehouse on cs.cs_warehouse_sk == w.w_warehouse_sk
  AddInt       r28, r28, r114
  Jump         L8
L1:
  // from cs in catalog_sales
  AddInt       r22, r22, r114
  Jump         L9
L0:
  Move         r116, r78
  Len          r117, r18
L29:
  LessInt      r118, r116, r117
  JumpIfFalse  r118, L10
  Index        r119, r18, r116
  Move         r120, r119
  // warehouse: g.key.warehouse,
  Const        r121, "warehouse"
  Index        r122, r120, r9
  Index        r123, r122, r5
  // sm_type: g.key.sm_type,
  Const        r124, "sm_type"
  Index        r125, r120, r9
  Index        r126, r125, r7
  // cc_name: g.key.cc_name,
  Const        r127, "cc_name"
  Index        r128, r120, r9
  Index        r129, r128, r8
  // d30: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk <= 30 select x),
  Const        r130, "d30"
  Const        r131, []
  IterPrep     r132, r120
  Len          r133, r132
  Move         r134, r78
L13:
  LessInt      r135, r134, r133
  JumpIfFalse  r135, L11
  Index        r136, r132, r134
  Move         r137, r136
  Index        r138, r137, r11
  Index        r139, r137, r12
  Sub          r140, r138, r139
  Const        r141, 30
  LessEq       r142, r140, r141
  JumpIfFalse  r142, L12
  Append       r143, r131, r137
  Move         r131, r143
L12:
  AddInt       r134, r134, r114
  Jump         L13
L11:
  Count        r144, r131
  // d60: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60 select x),
  Const        r145, "d60"
  Const        r146, []
  IterPrep     r147, r120
  Len          r148, r147
  Move         r149, r78
L17:
  LessInt      r150, r149, r148
  JumpIfFalse  r150, L14
  Index        r151, r147, r149
  Move         r137, r151
  Index        r152, r137, r11
  Index        r153, r137, r12
  Sub          r154, r152, r153
  Index        r155, r137, r11
  Index        r156, r137, r12
  Sub          r157, r155, r156
  Less         r158, r141, r154
  Const        r159, 60
  LessEq       r160, r157, r159
  Move         r161, r158
  JumpIfFalse  r161, L15
  Move         r161, r160
L15:
  JumpIfFalse  r161, L16
  Append       r162, r146, r137
  Move         r146, r162
L16:
  AddInt       r149, r149, r114
  Jump         L17
L14:
  Count        r163, r146
  // d90: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90 select x),
  Const        r164, "d90"
  Const        r165, []
  IterPrep     r166, r120
  Len          r167, r166
  Move         r168, r78
L21:
  LessInt      r169, r168, r167
  JumpIfFalse  r169, L18
  Index        r170, r166, r168
  Move         r137, r170
  Index        r171, r137, r11
  Index        r172, r137, r12
  Sub          r173, r171, r172
  Index        r174, r137, r11
  Index        r175, r137, r12
  Sub          r176, r174, r175
  Less         r177, r159, r173
  Const        r178, 90
  LessEq       r179, r176, r178
  Move         r180, r177
  JumpIfFalse  r180, L19
  Move         r180, r179
L19:
  JumpIfFalse  r180, L20
  Append       r181, r165, r137
  Move         r165, r181
L20:
  AddInt       r168, r168, r114
  Jump         L21
L18:
  Count        r182, r165
  // d120: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120 select x),
  Const        r183, "d120"
  Const        r184, []
  IterPrep     r185, r120
  Len          r186, r185
  Move         r187, r78
L25:
  LessInt      r188, r187, r186
  JumpIfFalse  r188, L22
  Index        r189, r185, r187
  Move         r137, r189
  Index        r190, r137, r11
  Index        r191, r137, r12
  Sub          r192, r190, r191
  Index        r193, r137, r11
  Index        r194, r137, r12
  Sub          r195, r193, r194
  Less         r196, r178, r192
  Const        r197, 120
  LessEq       r198, r195, r197
  Move         r199, r196
  JumpIfFalse  r199, L23
  Move         r199, r198
L23:
  JumpIfFalse  r199, L24
  Append       r200, r184, r137
  Move         r184, r200
L24:
  AddInt       r187, r187, r114
  Jump         L25
L22:
  Count        r201, r184
  // dmore: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 120 select x)
  Const        r202, "dmore"
  Const        r203, []
  IterPrep     r204, r120
  Len          r205, r204
  Move         r206, r78
L28:
  LessInt      r207, r206, r205
  JumpIfFalse  r207, L26
  Index        r208, r204, r206
  Move         r137, r208
  Index        r209, r137, r11
  Index        r210, r137, r12
  Sub          r211, r209, r210
  Less         r212, r197, r211
  JumpIfFalse  r212, L27
  Append       r213, r203, r137
  Move         r203, r213
L27:
  AddInt       r206, r206, r114
  Jump         L28
L26:
  Count        r214, r203
  // warehouse: g.key.warehouse,
  Move         r215, r121
  Move         r216, r123
  // sm_type: g.key.sm_type,
  Move         r217, r124
  Move         r218, r126
  // cc_name: g.key.cc_name,
  Move         r219, r127
  Move         r220, r129
  // d30: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk <= 30 select x),
  Move         r221, r130
  Move         r222, r144
  // d60: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60 select x),
  Move         r223, r145
  Move         r224, r163
  // d90: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90 select x),
  Move         r225, r164
  Move         r226, r182
  // d120: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120 select x),
  Move         r227, r183
  Move         r228, r201
  // dmore: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 120 select x)
  Move         r229, r202
  Move         r230, r214
  // select {
  MakeMap      r231, 8, r215
  // from cs in catalog_sales
  Append       r232, r4, r231
  Move         r4, r232
  AddInt       r116, r116, r114
  Jump         L29
L10:
  // json(grouped)
  JSON         r4
  // expect grouped == [{warehouse: "Warehouse1", sm_type: "EXP", cc_name: "CC1", d30: 1, d60: 1, d90: 1, d120: 1, dmore: 1}]
  Const        r233, [{"cc_name": "CC1", "d120": 1, "d30": 1, "d60": 1, "d90": 1, "dmore": 1, "sm_type": "EXP", "warehouse": "Warehouse1"}]
  Equal        r234, r4, r233
  Expect       r234
  Return       r0
