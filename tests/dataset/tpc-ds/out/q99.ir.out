func main (regs=229)
  // let catalog_sales = [
  Const        r0, [{"cs_call_center_sk": 1, "cs_ship_date_sk": 31, "cs_ship_mode_sk": 1, "cs_sold_date_sk": 1, "cs_warehouse_sk": 1}, {"cs_call_center_sk": 1, "cs_ship_date_sk": 51, "cs_ship_mode_sk": 1, "cs_sold_date_sk": 1, "cs_warehouse_sk": 1}, {"cs_call_center_sk": 1, "cs_ship_date_sk": 71, "cs_ship_mode_sk": 1, "cs_sold_date_sk": 1, "cs_warehouse_sk": 1}, {"cs_call_center_sk": 1, "cs_ship_date_sk": 101, "cs_ship_mode_sk": 1, "cs_sold_date_sk": 1, "cs_warehouse_sk": 1}, {"cs_call_center_sk": 1, "cs_ship_date_sk": 131, "cs_ship_mode_sk": 1, "cs_sold_date_sk": 1, "cs_warehouse_sk": 1}]
  // let warehouse = [{w_warehouse_sk: 1, w_warehouse_name: "Warehouse1"}]
  Const        r1, [{"w_warehouse_name": "Warehouse1", "w_warehouse_sk": 1}]
  // let ship_mode = [{sm_ship_mode_sk: 1, sm_type: "EXP"}]
  Const        r2, [{"sm_ship_mode_sk": 1, "sm_type": "EXP"}]
  // let call_center = [{cc_call_center_sk: 1, cc_name: "CC1"}]
  Const        r3, [{"cc_call_center_sk": 1, "cc_name": "CC1"}]
  // from cs in catalog_sales
  Const        r4, []
  // group by {warehouse: substr(w.w_warehouse_name,0,20), sm_type: sm.sm_type, cc_name: cc.cc_name} into g
  Const        r5, "warehouse"
  Const        r6, "w_warehouse_name"
  Const        r7, "sm_type"
  Const        r8, "cc_name"
  // warehouse: g.key.warehouse,
  Const        r9, "key"
  // d30: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk <= 30 select x),
  Const        r10, "d30"
  Const        r11, "cs_ship_date_sk"
  Const        r12, "cs_sold_date_sk"
  // d60: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60 select x),
  Const        r13, "d60"
  // d90: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90 select x),
  Const        r14, "d90"
  // d120: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120 select x),
  Const        r15, "d120"
  // dmore: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 120 select x)
  Const        r16, "dmore"
  // from cs in catalog_sales
  MakeMap      r17, 0, r0
  Const        r18, []
  IterPrep     r20, r0
  Len          r21, r20
  Const        r22, 0
L9:
  LessInt      r23, r22, r21
  JumpIfFalse  r23, L0
  Index        r25, r20, r22
  // join w in warehouse on cs.cs_warehouse_sk == w.w_warehouse_sk
  IterPrep     r26, r1
  Len          r27, r26
  Const        r28, 0
L8:
  LessInt      r29, r28, r27
  JumpIfFalse  r29, L1
  Index        r31, r26, r28
  Const        r32, "cs_warehouse_sk"
  Index        r33, r25, r32
  Const        r34, "w_warehouse_sk"
  Index        r35, r31, r34
  Equal        r36, r33, r35
  JumpIfFalse  r36, L2
  // join sm in ship_mode on cs.cs_ship_mode_sk == sm.sm_ship_mode_sk
  IterPrep     r37, r2
  Len          r38, r37
  Const        r39, 0
L7:
  LessInt      r40, r39, r38
  JumpIfFalse  r40, L2
  Index        r42, r37, r39
  Const        r43, "cs_ship_mode_sk"
  Index        r44, r25, r43
  Const        r45, "sm_ship_mode_sk"
  Index        r46, r42, r45
  Equal        r47, r44, r46
  JumpIfFalse  r47, L3
  // join cc in call_center on cs.cs_call_center_sk == cc.cc_call_center_sk
  IterPrep     r48, r3
  Len          r49, r48
  Const        r50, 0
L6:
  LessInt      r51, r50, r49
  JumpIfFalse  r51, L3
  Index        r53, r48, r50
  Const        r54, "cs_call_center_sk"
  Index        r55, r25, r54
  Const        r56, "cc_call_center_sk"
  Index        r57, r53, r56
  Equal        r58, r55, r57
  JumpIfFalse  r58, L4
  // from cs in catalog_sales
  Const        r59, "cs"
  Move         r60, r25
  Const        r61, "w"
  Move         r62, r31
  Const        r63, "sm"
  Move         r64, r42
  Const        r65, "cc"
  Move         r66, r53
  MakeMap      r67, 4, r59
  // group by {warehouse: substr(w.w_warehouse_name,0,20), sm_type: sm.sm_type, cc_name: cc.cc_name} into g
  Const        r68, "warehouse"
  Index        r69, r31, r6
  Const        r70, 0
  Const        r71, 20
  Slice        r72, r69, r70, r71
  Const        r73, "sm_type"
  Index        r74, r42, r7
  Const        r75, "cc_name"
  Index        r76, r53, r8
  Move         r77, r68
  Move         r78, r72
  Move         r79, r73
  Move         r80, r74
  Move         r81, r75
  Move         r82, r76
  MakeMap      r83, 3, r77
  Str          r84, r83
  In           r85, r84, r17
  JumpIfTrue   r85, L5
  // from cs in catalog_sales
  Const        r86, []
  Const        r87, "__group__"
  Const        r88, true
  Const        r89, "key"
  // group by {warehouse: substr(w.w_warehouse_name,0,20), sm_type: sm.sm_type, cc_name: cc.cc_name} into g
  Move         r90, r83
  // from cs in catalog_sales
  Const        r91, "items"
  Move         r92, r86
  Const        r93, "count"
  Const        r94, 0
  Move         r95, r87
  Move         r96, r88
  Move         r97, r89
  Move         r98, r90
  Move         r99, r91
  Move         r100, r92
  Move         r101, r93
  Move         r102, r94
  MakeMap      r103, 4, r95
  SetIndex     r17, r84, r103
  Append       r18, r18, r103
L5:
  Const        r105, "items"
  Index        r106, r17, r84
  Index        r107, r106, r105
  Append       r108, r107, r67
  SetIndex     r106, r105, r108
  Const        r109, "count"
  Index        r110, r106, r109
  Const        r111, 1
  AddInt       r112, r110, r111
  SetIndex     r106, r109, r112
L4:
  // join cc in call_center on cs.cs_call_center_sk == cc.cc_call_center_sk
  AddInt       r50, r50, r111
  Jump         L6
L3:
  // join sm in ship_mode on cs.cs_ship_mode_sk == sm.sm_ship_mode_sk
  AddInt       r39, r39, r111
  Jump         L7
L2:
  // join w in warehouse on cs.cs_warehouse_sk == w.w_warehouse_sk
  AddInt       r28, r28, r111
  Jump         L8
L1:
  // from cs in catalog_sales
  AddInt       r22, r22, r111
  Jump         L9
L0:
  Move         r113, r70
  Len          r114, r18
L29:
  LessInt      r115, r113, r114
  JumpIfFalse  r115, L10
  Index        r117, r18, r113
  // warehouse: g.key.warehouse,
  Const        r118, "warehouse"
  Index        r119, r117, r9
  Index        r120, r119, r5
  // sm_type: g.key.sm_type,
  Const        r121, "sm_type"
  Index        r122, r117, r9
  Index        r123, r122, r7
  // cc_name: g.key.cc_name,
  Const        r124, "cc_name"
  Index        r125, r117, r9
  Index        r126, r125, r8
  // d30: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk <= 30 select x),
  Const        r127, "d30"
  Const        r128, []
  IterPrep     r129, r117
  Len          r130, r129
  Move         r131, r70
L13:
  LessInt      r132, r131, r130
  JumpIfFalse  r132, L11
  Index        r134, r129, r131
  Index        r135, r134, r11
  Index        r136, r134, r12
  Sub          r137, r135, r136
  Const        r138, 30
  LessEq       r139, r137, r138
  JumpIfFalse  r139, L12
  Append       r128, r128, r134
L12:
  AddInt       r131, r131, r111
  Jump         L13
L11:
  Count        r141, r128
  // d60: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60 select x),
  Const        r142, "d60"
  Const        r143, []
  IterPrep     r144, r117
  Len          r145, r144
  Move         r146, r70
L17:
  LessInt      r147, r146, r145
  JumpIfFalse  r147, L14
  Index        r134, r144, r146
  Index        r149, r134, r11
  Index        r150, r134, r12
  Sub          r151, r149, r150
  Index        r152, r134, r11
  Index        r153, r134, r12
  Sub          r154, r152, r153
  Less         r155, r138, r151
  Const        r156, 60
  LessEq       r157, r154, r156
  JumpIfFalse  r155, L15
  Move         r155, r157
L15:
  JumpIfFalse  r155, L16
  Append       r143, r143, r134
L16:
  AddInt       r146, r146, r111
  Jump         L17
L14:
  Count        r159, r143
  // d90: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90 select x),
  Const        r160, "d90"
  Const        r161, []
  IterPrep     r162, r117
  Len          r163, r162
  Move         r164, r70
L21:
  LessInt      r165, r164, r163
  JumpIfFalse  r165, L18
  Index        r134, r162, r164
  Index        r167, r134, r11
  Index        r168, r134, r12
  Sub          r169, r167, r168
  Index        r170, r134, r11
  Index        r171, r134, r12
  Sub          r172, r170, r171
  Less         r173, r156, r169
  Const        r174, 90
  LessEq       r175, r172, r174
  JumpIfFalse  r173, L19
  Move         r173, r175
L19:
  JumpIfFalse  r173, L20
  Append       r161, r161, r134
L20:
  AddInt       r164, r164, r111
  Jump         L21
L18:
  Count        r177, r161
  // d120: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120 select x),
  Const        r178, "d120"
  Const        r179, []
  IterPrep     r180, r117
  Len          r181, r180
  Move         r182, r70
L25:
  LessInt      r183, r182, r181
  JumpIfFalse  r183, L22
  Index        r134, r180, r182
  Index        r185, r134, r11
  Index        r186, r134, r12
  Sub          r187, r185, r186
  Index        r188, r134, r11
  Index        r189, r134, r12
  Sub          r190, r188, r189
  Less         r191, r174, r187
  Const        r192, 120
  LessEq       r193, r190, r192
  JumpIfFalse  r191, L23
  Move         r191, r193
L23:
  JumpIfFalse  r191, L24
  Append       r179, r179, r134
L24:
  AddInt       r182, r182, r111
  Jump         L25
L22:
  Count        r195, r179
  // dmore: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 120 select x)
  Const        r196, "dmore"
  Const        r197, []
  IterPrep     r198, r117
  Len          r199, r198
  Move         r200, r70
L28:
  LessInt      r201, r200, r199
  JumpIfFalse  r201, L26
  Index        r134, r198, r200
  Index        r203, r134, r11
  Index        r204, r134, r12
  Sub          r205, r203, r204
  Less         r206, r192, r205
  JumpIfFalse  r206, L27
  Append       r197, r197, r134
L27:
  AddInt       r200, r200, r111
  Jump         L28
L26:
  Count        r208, r197
  // warehouse: g.key.warehouse,
  Move         r209, r118
  Move         r210, r120
  // sm_type: g.key.sm_type,
  Move         r211, r121
  Move         r212, r123
  // cc_name: g.key.cc_name,
  Move         r213, r124
  Move         r214, r126
  // d30: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk <= 30 select x),
  Move         r215, r127
  Move         r216, r141
  // d60: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60 select x),
  Move         r217, r142
  Move         r218, r159
  // d90: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90 select x),
  Move         r219, r160
  Move         r220, r177
  // d120: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120 select x),
  Move         r221, r178
  Move         r222, r195
  // dmore: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 120 select x)
  Move         r223, r196
  Move         r224, r208
  // select {
  MakeMap      r225, 8, r209
  // from cs in catalog_sales
  Append       r4, r4, r225
  AddInt       r113, r113, r111
  Jump         L29
L10:
  // json(grouped)
  JSON         r4
  // expect grouped == [{warehouse: "Warehouse1", sm_type: "EXP", cc_name: "CC1", d30: 1, d60: 1, d90: 1, d120: 1, dmore: 1}]
  Const        r227, [{"cc_name": "CC1", "d120": 1, "d30": 1, "d60": 1, "d90": 1, "dmore": 1, "sm_type": "EXP", "warehouse": "Warehouse1"}]
  Equal        r228, r4, r227
  Expect       r228
  Return       r0
