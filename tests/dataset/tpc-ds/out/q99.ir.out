func main (regs=236)
  // let catalog_sales = [
  Const        r0, [{"cs_call_center_sk": 1, "cs_ship_date_sk": 31, "cs_ship_mode_sk": 1, "cs_sold_date_sk": 1, "cs_warehouse_sk": 1}, {"cs_call_center_sk": 1, "cs_ship_date_sk": 51, "cs_ship_mode_sk": 1, "cs_sold_date_sk": 1, "cs_warehouse_sk": 1}, {"cs_call_center_sk": 1, "cs_ship_date_sk": 71, "cs_ship_mode_sk": 1, "cs_sold_date_sk": 1, "cs_warehouse_sk": 1}, {"cs_call_center_sk": 1, "cs_ship_date_sk": 101, "cs_ship_mode_sk": 1, "cs_sold_date_sk": 1, "cs_warehouse_sk": 1}, {"cs_call_center_sk": 1, "cs_ship_date_sk": 131, "cs_ship_mode_sk": 1, "cs_sold_date_sk": 1, "cs_warehouse_sk": 1}]
  // let warehouse = [{w_warehouse_sk: 1, w_warehouse_name: "Warehouse1"}]
  Const        r1, [{"w_warehouse_name": "Warehouse1", "w_warehouse_sk": 1}]
  // let ship_mode = [{sm_ship_mode_sk: 1, sm_type: "EXP"}]
  Const        r2, [{"sm_ship_mode_sk": 1, "sm_type": "EXP"}]
  // let call_center = [{cc_call_center_sk: 1, cc_name: "CC1"}]
  Const        r3, [{"cc_call_center_sk": 1, "cc_name": "CC1"}]
  // from cs in catalog_sales
  Const        r4, []
  // group by {warehouse: substr(w.w_warehouse_name,0,20), sm_type: sm.sm_type, cc_name: cc.cc_name} into g
  Const        r5, "warehouse"
  Const        r6, "w_warehouse_name"
  Const        r7, "sm_type"
  Const        r8, "cc_name"
  // warehouse: g.key.warehouse,
  Const        r9, "key"
  // d30: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk <= 30 select x),
  Const        r10, "d30"
  Const        r11, "cs_ship_date_sk"
  Const        r12, "cs_sold_date_sk"
  // d60: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60 select x),
  Const        r13, "d60"
  // d90: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90 select x),
  Const        r14, "d90"
  // d120: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120 select x),
  Const        r15, "d120"
  // dmore: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 120 select x)
  Const        r16, "dmore"
  // from cs in catalog_sales
  MakeMap      r17, 0, r0
  Const        r19, []
  Move         r18, r19
  IterPrep     r20, r0
  Len          r21, r20
  Const        r22, 0
L9:
  LessInt      r23, r22, r21
  JumpIfFalse  r23, L0
  Index        r24, r20, r22
  Move         r25, r24
  // join w in warehouse on cs.cs_warehouse_sk == w.w_warehouse_sk
  IterPrep     r26, r1
  Len          r27, r26
  Const        r28, 0
L8:
  LessInt      r29, r28, r27
  JumpIfFalse  r29, L1
  Index        r30, r26, r28
  Move         r31, r30
  Const        r32, "cs_warehouse_sk"
  Index        r33, r25, r32
  Const        r34, "w_warehouse_sk"
  Index        r35, r31, r34
  Equal        r36, r33, r35
  JumpIfFalse  r36, L2
  // join sm in ship_mode on cs.cs_ship_mode_sk == sm.sm_ship_mode_sk
  IterPrep     r37, r2
  Len          r38, r37
  Const        r39, 0
L7:
  LessInt      r40, r39, r38
  JumpIfFalse  r40, L2
  Index        r41, r37, r39
  Move         r42, r41
  Const        r43, "cs_ship_mode_sk"
  Index        r44, r25, r43
  Const        r45, "sm_ship_mode_sk"
  Index        r46, r42, r45
  Equal        r47, r44, r46
  JumpIfFalse  r47, L3
  // join cc in call_center on cs.cs_call_center_sk == cc.cc_call_center_sk
  IterPrep     r48, r3
  Len          r49, r48
  Const        r50, 0
L6:
  LessInt      r51, r50, r49
  JumpIfFalse  r51, L3
  Index        r52, r48, r50
  Move         r53, r52
  Const        r54, "cs_call_center_sk"
  Index        r55, r25, r54
  Const        r56, "cc_call_center_sk"
  Index        r57, r53, r56
  Equal        r58, r55, r57
  JumpIfFalse  r58, L4
  // from cs in catalog_sales
  Const        r59, "cs"
  Move         r60, r25
  Const        r61, "w"
  Move         r62, r31
  Const        r63, "sm"
  Move         r64, r42
  Const        r65, "cc"
  Move         r66, r53
  Move         r67, r59
  Move         r68, r60
  Move         r69, r61
  Move         r70, r62
  Move         r71, r63
  Move         r72, r64
  Move         r73, r65
  Move         r74, r66
  MakeMap      r75, 4, r67
  // group by {warehouse: substr(w.w_warehouse_name,0,20), sm_type: sm.sm_type, cc_name: cc.cc_name} into g
  Const        r76, "warehouse"
  Index        r77, r31, r6
  Const        r78, 0
  Const        r79, 20
  Slice        r80, r77, r78, r79
  Const        r81, "sm_type"
  Index        r82, r42, r7
  Const        r83, "cc_name"
  Index        r84, r53, r8
  Move         r85, r76
  Move         r86, r80
  Move         r87, r81
  Move         r88, r82
  Move         r89, r83
  Move         r90, r84
  MakeMap      r91, 3, r85
  Str          r92, r91
  In           r93, r92, r17
  JumpIfTrue   r93, L5
  // from cs in catalog_sales
  Const        r94, []
  Const        r95, "__group__"
  Const        r96, true
  // group by {warehouse: substr(w.w_warehouse_name,0,20), sm_type: sm.sm_type, cc_name: cc.cc_name} into g
  Move         r97, r91
  // from cs in catalog_sales
  Const        r98, "items"
  Move         r99, r94
  Const        r100, "count"
  Move         r101, r95
  Move         r102, r96
  Move         r103, r9
  Move         r104, r97
  Move         r105, r98
  Move         r106, r99
  Move         r107, r100
  Move         r108, r78
  MakeMap      r109, 4, r101
  SetIndex     r17, r92, r109
  Append       r110, r18, r109
  Move         r18, r110
L5:
  Index        r111, r17, r92
  Index        r112, r111, r98
  Append       r113, r112, r75
  SetIndex     r111, r98, r113
  Index        r114, r111, r100
  Const        r115, 1
  AddInt       r116, r114, r115
  SetIndex     r111, r100, r116
L4:
  // join cc in call_center on cs.cs_call_center_sk == cc.cc_call_center_sk
  AddInt       r50, r50, r115
  Jump         L6
L3:
  // join sm in ship_mode on cs.cs_ship_mode_sk == sm.sm_ship_mode_sk
  AddInt       r39, r39, r115
  Jump         L7
L2:
  // join w in warehouse on cs.cs_warehouse_sk == w.w_warehouse_sk
  AddInt       r28, r28, r115
  Jump         L8
L1:
  // from cs in catalog_sales
  AddInt       r22, r22, r115
  Jump         L9
L0:
  Move         r117, r78
  Len          r118, r18
L29:
  LessInt      r119, r117, r118
  JumpIfFalse  r119, L10
  Index        r120, r18, r117
  Move         r121, r120
  // warehouse: g.key.warehouse,
  Const        r122, "warehouse"
  Index        r123, r121, r9
  Index        r124, r123, r5
  // sm_type: g.key.sm_type,
  Const        r125, "sm_type"
  Index        r126, r121, r9
  Index        r127, r126, r7
  // cc_name: g.key.cc_name,
  Const        r128, "cc_name"
  Index        r129, r121, r9
  Index        r130, r129, r8
  // d30: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk <= 30 select x),
  Const        r131, "d30"
  Const        r132, []
  IterPrep     r133, r121
  Len          r134, r133
  Move         r135, r78
L13:
  LessInt      r136, r135, r134
  JumpIfFalse  r136, L11
  Index        r137, r133, r135
  Move         r138, r137
  Index        r139, r138, r11
  Index        r140, r138, r12
  Sub          r141, r139, r140
  Const        r142, 30
  LessEq       r143, r141, r142
  JumpIfFalse  r143, L12
  Append       r144, r132, r138
  Move         r132, r144
L12:
  AddInt       r135, r135, r115
  Jump         L13
L11:
  Count        r145, r132
  // d60: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60 select x),
  Const        r146, "d60"
  Const        r147, []
  IterPrep     r148, r121
  Len          r149, r148
  Move         r150, r78
L17:
  LessInt      r151, r150, r149
  JumpIfFalse  r151, L14
  Index        r152, r148, r150
  Move         r138, r152
  Index        r153, r138, r11
  Index        r154, r138, r12
  Sub          r155, r153, r154
  Index        r156, r138, r11
  Index        r157, r138, r12
  Sub          r158, r156, r157
  Less         r159, r142, r155
  Const        r160, 60
  LessEq       r161, r158, r160
  Move         r162, r159
  JumpIfFalse  r162, L15
  Move         r162, r161
L15:
  JumpIfFalse  r162, L16
  Append       r163, r147, r138
  Move         r147, r163
L16:
  AddInt       r150, r150, r115
  Jump         L17
L14:
  Count        r164, r147
  // d90: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90 select x),
  Const        r165, "d90"
  Const        r166, []
  IterPrep     r167, r121
  Len          r168, r167
  Move         r169, r78
L21:
  LessInt      r170, r169, r168
  JumpIfFalse  r170, L18
  Index        r171, r167, r169
  Move         r138, r171
  Index        r172, r138, r11
  Index        r173, r138, r12
  Sub          r174, r172, r173
  Index        r175, r138, r11
  Index        r176, r138, r12
  Sub          r177, r175, r176
  Less         r178, r160, r174
  Const        r179, 90
  LessEq       r180, r177, r179
  Move         r181, r178
  JumpIfFalse  r181, L19
  Move         r181, r180
L19:
  JumpIfFalse  r181, L20
  Append       r182, r166, r138
  Move         r166, r182
L20:
  AddInt       r169, r169, r115
  Jump         L21
L18:
  Count        r183, r166
  // d120: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120 select x),
  Const        r184, "d120"
  Const        r185, []
  IterPrep     r186, r121
  Len          r187, r186
  Move         r188, r78
L25:
  LessInt      r189, r188, r187
  JumpIfFalse  r189, L22
  Index        r190, r186, r188
  Move         r138, r190
  Index        r191, r138, r11
  Index        r192, r138, r12
  Sub          r193, r191, r192
  Index        r194, r138, r11
  Index        r195, r138, r12
  Sub          r196, r194, r195
  Less         r197, r179, r193
  Const        r198, 120
  LessEq       r199, r196, r198
  Move         r200, r197
  JumpIfFalse  r200, L23
  Move         r200, r199
L23:
  JumpIfFalse  r200, L24
  Append       r201, r185, r138
  Move         r185, r201
L24:
  AddInt       r188, r188, r115
  Jump         L25
L22:
  Count        r202, r185
  // dmore: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 120 select x)
  Const        r203, "dmore"
  Const        r204, []
  IterPrep     r205, r121
  Len          r206, r205
  Move         r207, r78
L28:
  LessInt      r208, r207, r206
  JumpIfFalse  r208, L26
  Index        r209, r205, r207
  Move         r138, r209
  Index        r210, r138, r11
  Index        r211, r138, r12
  Sub          r212, r210, r211
  Less         r213, r198, r212
  JumpIfFalse  r213, L27
  Append       r214, r204, r138
  Move         r204, r214
L27:
  AddInt       r207, r207, r115
  Jump         L28
L26:
  Count        r215, r204
  // warehouse: g.key.warehouse,
  Move         r216, r122
  Move         r217, r124
  // sm_type: g.key.sm_type,
  Move         r218, r125
  Move         r219, r127
  // cc_name: g.key.cc_name,
  Move         r220, r128
  Move         r221, r130
  // d30: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk <= 30 select x),
  Move         r222, r131
  Move         r223, r145
  // d60: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 30 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 60 select x),
  Move         r224, r146
  Move         r225, r164
  // d90: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 60 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 90 select x),
  Move         r226, r165
  Move         r227, r183
  // d120: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 90 && x.cs_ship_date_sk - x.cs_sold_date_sk <= 120 select x),
  Move         r228, r184
  Move         r229, r202
  // dmore: count(from x in g where x.cs_ship_date_sk - x.cs_sold_date_sk > 120 select x)
  Move         r230, r203
  Move         r231, r215
  // select {
  MakeMap      r232, 8, r216
  // from cs in catalog_sales
  Append       r233, r4, r232
  Move         r4, r233
  AddInt       r117, r117, r115
  Jump         L29
L10:
  // json(grouped)
  JSON         r4
  // expect grouped == [{warehouse: "Warehouse1", sm_type: "EXP", cc_name: "CC1", d30: 1, d60: 1, d90: 1, d120: 1, dmore: 1}]
  Const        r234, [{"cc_name": "CC1", "d120": 1, "d30": 1, "d60": 1, "d90": 1, "dmore": 1, "sm_type": "EXP", "warehouse": "Warehouse1"}]
  Equal        r235, r4, r234
  Expect       r235
  Return       r0
