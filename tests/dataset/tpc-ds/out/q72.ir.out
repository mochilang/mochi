func main (regs=271)
  // let catalog_sales = [
  Const        r0, [{"cs_bill_cdemo_sk": 1, "cs_bill_hdemo_sk": 1, "cs_item_sk": 1, "cs_order_number": 1, "cs_promo_sk": nil, "cs_quantity": 1, "cs_ship_date_sk": 3, "cs_sold_date_sk": 1}]
  // let inventory = [
  Const        r1, [{"inv_date_sk": 2, "inv_item_sk": 1, "inv_quantity_on_hand": 0, "inv_warehouse_sk": 1}]
  // let warehouse = [
  Const        r2, [{"w_warehouse_name": "Main", "w_warehouse_sk": 1}]
  // let item = [
  Const        r3, [{"i_item_desc": "ItemA", "i_item_sk": 1}]
  // let customer_demographics = [
  Const        r4, [{"cd_demo_sk": 1, "cd_marital_status": "M"}]
  // let household_demographics = [
  Const        r5, [{"hd_buy_potential": "5001-10000", "hd_demo_sk": 1}]
  // let date_dim = [
  Const        r6, [{"d_date": 1, "d_date_sk": 1, "d_week_seq": 10, "d_year": 2000}, {"d_date": 1, "d_date_sk": 2, "d_week_seq": 10, "d_year": 2000}, {"d_date": 7, "d_date_sk": 3, "d_week_seq": 10, "d_year": 2000}]
  // from cs in catalog_sales
  Const        r7, []
  // group by { item_desc: i.i_item_desc, warehouse: w.w_warehouse_name, week_seq: d1.d_week_seq } into g
  Const        r8, "item_desc"
  Const        r9, "i_item_desc"
  Const        r10, "warehouse"
  Const        r11, "w_warehouse_name"
  Const        r12, "week_seq"
  Const        r13, "d_week_seq"
  // inv.inv_quantity_on_hand < cs.cs_quantity &&
  Const        r14, "inv_quantity_on_hand"
  Const        r15, "cs_quantity"
  // d3.d_date > d1.d_date + 5 &&
  Const        r16, "d_date"
  // hd.hd_buy_potential == "5001-10000" &&
  Const        r17, "hd_buy_potential"
  // d1.d_year == 2000 &&
  Const        r18, "d_year"
  // cd.cd_marital_status == "M"
  Const        r19, "cd_marital_status"
  // i_item_desc: g.key.item_desc,
  Const        r20, "key"
  // no_promo: count(from x in g where x.cs_promo_sk == null select x),
  Const        r21, "no_promo"
  Const        r22, "cs_promo_sk"
  // promo: count(from x in g where x.cs_promo_sk != null select x),
  Const        r23, "promo"
  // total_cnt: count(g)
  Const        r24, "total_cnt"
  // from cs in catalog_sales
  MakeMap      r25, 0, r0
  Const        r27, []
  Move         r26, r27
  IterPrep     r28, r0
  Len          r29, r28
  Const        r30, 0
  LessInt      r31, r30, r29
  JumpIfFalse  r31, L0
  Index        r32, r28, r30
  Move         r33, r32
  // join inv in inventory on inv.inv_item_sk == cs.cs_item_sk
  IterPrep     r34, r1
  Len          r35, r34
  Const        r36, 0
  LessInt      r37, r36, r35
  JumpIfFalse  r37, L1
  Index        r38, r34, r36
  Move         r39, r38
  Const        r40, "inv_item_sk"
L6:
  Index        r41, r39, r40
  Const        r42, "cs_item_sk"
  Index        r43, r33, r42
  Equal        r44, r41, r43
  JumpIfFalse  r44, L2
  // join w in warehouse on w.w_warehouse_sk == inv.inv_warehouse_sk
  IterPrep     r45, r2
  Len          r46, r45
L7:
  Const        r47, 0
  LessInt      r48, r47, r46
  JumpIfFalse  r48, L2
  Index        r49, r45, r47
  Move         r50, r49
  Const        r51, "w_warehouse_sk"
  Index        r52, r50, r51
  Const        r53, "inv_warehouse_sk"
  Index        r54, r39, r53
  Equal        r55, r52, r54
  JumpIfFalse  r55, L3
  // join i in item on i.i_item_sk == cs.cs_item_sk
  IterPrep     r56, r3
  Len          r57, r56
L8:
  Const        r58, 0
  LessInt      r59, r58, r57
  JumpIfFalse  r59, L3
  Index        r60, r56, r58
  Move         r61, r60
  Const        r62, "i_item_sk"
  Index        r63, r61, r62
  Const        r42, "cs_item_sk"
  Index        r64, r33, r42
  Equal        r65, r63, r64
  JumpIfFalse  r65, L4
  // join cd in customer_demographics on cd.cd_demo_sk == cs.cs_bill_cdemo_sk
  IterPrep     r66, r4
  Len          r67, r66
L9:
  Const        r68, 0
  LessInt      r69, r68, r67
  JumpIfFalse  r69, L4
  Index        r70, r66, r68
  Move         r71, r70
  Const        r72, "cd_demo_sk"
  Index        r73, r71, r72
  Const        r74, "cs_bill_cdemo_sk"
  Index        r75, r33, r74
  Equal        r76, r73, r75
  JumpIfFalse  r76, L5
  // join hd in household_demographics on hd.hd_demo_sk == cs.cs_bill_hdemo_sk
  IterPrep     r77, r5
  Len          r78, r77
  Const        r79, 0
  LessInt      r80, r79, r78
  JumpIfFalse  r80, L5
  Index        r81, r77, r79
  Move         r82, r81
  Const        r83, "hd_demo_sk"
  Index        r84, r82, r83
  Const        r85, "cs_bill_hdemo_sk"
  Index        r86, r33, r85
  Equal        r87, r84, r86
  JumpIfFalse  r87, L6
  // join d1 in date_dim on d1.d_date_sk == cs.cs_sold_date_sk
  IterPrep     r88, r6
  Len          r89, r88
  Const        r90, 0
  LessInt      r91, r90, r89
  JumpIfFalse  r91, L6
  Index        r92, r88, r90
  Move         r93, r92
  Const        r94, "d_date_sk"
  Index        r95, r93, r94
  Const        r96, "cs_sold_date_sk"
  Index        r97, r33, r96
  Equal        r98, r95, r97
  JumpIfFalse  r98, L7
  // join d2 in date_dim on d2.d_date_sk == inv.inv_date_sk
  IterPrep     r99, r6
  Len          r100, r99
L13:
  Const        r101, 0
  LessInt      r102, r101, r100
  JumpIfFalse  r102, L7
  Index        r103, r99, r101
  Move         r104, r103
  Const        r94, "d_date_sk"
  Index        r105, r104, r94
  Const        r106, "inv_date_sk"
  Index        r107, r39, r106
  Equal        r108, r105, r107
  JumpIfFalse  r108, L8
  // join d3 in date_dim on d3.d_date_sk == cs.cs_ship_date_sk
  IterPrep     r109, r6
  Len          r110, r109
  Const        r111, 0
  LessInt      r112, r111, r110
  JumpIfFalse  r112, L8
  Index        r113, r109, r111
  Move         r114, r113
  Const        r94, "d_date_sk"
  Index        r115, r114, r94
  Const        r116, "cs_ship_date_sk"
  Index        r117, r33, r116
  Equal        r118, r115, r117
  JumpIfFalse  r118, L9
  // where d1.d_week_seq == d2.d_week_seq &&
  Const        r13, "d_week_seq"
  Index        r119, r93, r13
L12:
  // d3.d_date > d1.d_date + 5 &&
  Const        r16, "d_date"
  Index        r120, r93, r16
  Const        r121, 5
  Add          r122, r120, r121
  // inv.inv_quantity_on_hand < cs.cs_quantity &&
  Const        r14, "inv_quantity_on_hand"
  Index        r123, r39, r14
  Const        r15, "cs_quantity"
  Index        r124, r33, r15
  Less         r125, r123, r124
  // d3.d_date > d1.d_date + 5 &&
  Index        r126, r114, r16
  Less         r127, r122, r126
  // where d1.d_week_seq == d2.d_week_seq &&
  Index        r128, r104, r13
  Equal        r129, r119, r128
  // hd.hd_buy_potential == "5001-10000" &&
  Const        r17, "hd_buy_potential"
  Index        r130, r82, r17
  Const        r131, "5001-10000"
  Equal        r132, r130, r131
  // d1.d_year == 2000 &&
  Const        r18, "d_year"
  Index        r133, r93, r18
  Const        r134, 2000
  Equal        r135, r133, r134
  // cd.cd_marital_status == "M"
  Const        r19, "cd_marital_status"
  Index        r136, r71, r19
  Const        r137, "M"
  Equal        r138, r136, r137
  // where d1.d_week_seq == d2.d_week_seq &&
  Move         r139, r129
  JumpIfFalse  r139, L10
  Move         r139, r125
  // inv.inv_quantity_on_hand < cs.cs_quantity &&
  JumpIfFalse  r139, L10
  Move         r139, r127
  // d3.d_date > d1.d_date + 5 &&
  JumpIfFalse  r139, L10
  Move         r139, r132
  // hd.hd_buy_potential == "5001-10000" &&
  JumpIfFalse  r139, L10
  Move         r139, r135
  // d1.d_year == 2000 &&
  JumpIfFalse  r139, L10
  Move         r139, r138
  // where d1.d_week_seq == d2.d_week_seq &&
  JumpIfFalse  r139, L9
  // from cs in catalog_sales
  Const        r140, "cs"
  Move         r141, r33
  Const        r142, "inv"
  Move         r143, r39
  Const        r144, "w"
  Move         r145, r50
  Const        r146, "i"
  Move         r147, r61
  Const        r148, "cd"
  Move         r149, r71
  Const        r150, "hd"
  Move         r151, r82
  Const        r152, "d1"
L10:
  Move         r153, r93
  Const        r154, "d2"
  Move         r155, r104
  Const        r156, "d3"
  Move         r157, r114
  Move         r158, r140
  Move         r159, r141
  Move         r160, r142
  Move         r161, r143
  Move         r162, r144
  Move         r163, r145
  Move         r164, r146
  Move         r165, r147
  Move         r166, r148
  Move         r167, r149
  Move         r168, r150
  Move         r169, r151
  Move         r170, r152
  Move         r171, r153
  Move         r172, r154
  Move         r173, r155
  Move         r174, r156
  Move         r175, r157
  MakeMap      r176, 9, r158
  // group by { item_desc: i.i_item_desc, warehouse: w.w_warehouse_name, week_seq: d1.d_week_seq } into g
  Const        r177, "item_desc"
  Const        r9, "i_item_desc"
  Index        r178, r61, r9
  Const        r179, "warehouse"
  Const        r11, "w_warehouse_name"
  Index        r180, r50, r11
  Const        r181, "week_seq"
  Const        r13, "d_week_seq"
  Index        r182, r93, r13
  Move         r183, r177
  Move         r184, r178
  Move         r185, r179
  Move         r186, r180
  Move         r187, r181
  Move         r188, r182
  MakeMap      r189, 3, r183
  Str          r190, r189
  In           r191, r190, r25
  JumpIfTrue   r191, L11
  // from cs in catalog_sales
  Const        r27, []
  Const        r192, "__group__"
  Const        r193, true
  Const        r20, "key"
  // group by { item_desc: i.i_item_desc, warehouse: w.w_warehouse_name, week_seq: d1.d_week_seq } into g
  Move         r194, r189
  // from cs in catalog_sales
  Const        r195, "items"
  Move         r196, r27
  Const        r197, "count"
  Const        r198, 0
  Move         r199, r192
  Move         r200, r193
  Move         r201, r20
  Move         r202, r194
  Move         r203, r195
  Move         r204, r196
  Move         r205, r197
  Move         r206, r198
  MakeMap      r207, 4, r199
  SetIndex     r25, r190, r207
  Append       r208, r26, r207
  Move         r26, r208
  Index        r209, r25, r190
  Index        r210, r209, r195
  Append       r211, r210, r176
  SetIndex     r209, r195, r211
  Index        r212, r209, r197
  Const        r213, 1
  AddInt       r214, r212, r213
  SetIndex     r209, r197, r214
  // join d3 in date_dim on d3.d_date_sk == cs.cs_ship_date_sk
  AddInt       r111, r111, r213
  Jump         L12
L11:
  // join d1 in date_dim on d1.d_date_sk == cs.cs_sold_date_sk
  AddInt       r90, r90, r213
  Jump         L13
L5:
  // from cs in catalog_sales
  Len          r216, r26
  LessInt      r217, r215, r216
  JumpIfFalse  r217, L14
L4:
  Index        r218, r26, r215
  Move         r219, r218
  // i_item_desc: g.key.item_desc,
  Const        r220, "i_item_desc"
L3:
  Const        r20, "key"
  Index        r221, r219, r20
  Const        r8, "item_desc"
L2:
  Index        r222, r221, r8
  // w_warehouse_name: g.key.warehouse,
  Const        r223, "w_warehouse_name"
  Index        r224, r219, r20
L1:
  Const        r10, "warehouse"
  Index        r225, r224, r10
  // d_week_seq: g.key.week_seq,
  Const        r226, "d_week_seq"
L0:
  Index        r227, r219, r20
  Const        r12, "week_seq"
  Index        r228, r227, r12
L19:
  // no_promo: count(from x in g where x.cs_promo_sk == null select x),
  Const        r229, "no_promo"
  Const        r230, []
  Const        r22, "cs_promo_sk"
  IterPrep     r231, r219
  Len          r232, r231
  Const        r198, 0
  Move         r233, r198
  LessInt      r234, r233, r232
  JumpIfFalse  r234, L15
  Index        r235, r231, r233
  Move         r236, r235
  Const        r22, "cs_promo_sk"
  Index        r237, r236, r22
  Const        r238, nil
  Equal        r239, r237, r238
  JumpIfFalse  r239, L16
  Append       r240, r230, r236
  Move         r230, r240
  Const        r213, 1
  AddInt       r233, r233, r213
  // promo: count(from x in g where x.cs_promo_sk != null select x),
  Len          r245, r244
  Const        r198, 0
  Move         r246, r198
  LessInt      r247, r246, r245
  JumpIfFalse  r247, L17
  Index        r248, r244, r246
  Move         r236, r248
  Const        r22, "cs_promo_sk"
  Index        r249, r236, r22
  Const        r238, nil
  NotEqual     r250, r249, r238
L16:
  JumpIfFalse  r250, L18
  Append       r251, r243, r236
  Move         r243, r251
L15:
  Const        r213, 1
  AddInt       r246, r246, r213
  // i_item_desc: g.key.item_desc,
  Move         r256, r222
  // w_warehouse_name: g.key.warehouse,
  Move         r257, r223
  Move         r258, r225
  // d_week_seq: g.key.week_seq,
  Move         r259, r226
  Move         r260, r228
  // no_promo: count(from x in g where x.cs_promo_sk == null select x),
  Move         r261, r229
  Move         r262, r241
  // promo: count(from x in g where x.cs_promo_sk != null select x),
  Move         r263, r242
  Move         r264, r252
  // total_cnt: count(g)
  Move         r265, r253
  Move         r266, r254
L18:
  // select {
  MakeMap      r267, 6, r255
  // from cs in catalog_sales
  Append       r268, r7, r267
  Move         r7, r268
L17:
  Const        r213, 1
  AddInt       r215, r215, r213
  Jump         L19
