func main (regs=276)
  // let catalog_sales = [
  Const        r0, [{"cs_bill_cdemo_sk": 1, "cs_bill_hdemo_sk": 1, "cs_item_sk": 1, "cs_order_number": 1, "cs_promo_sk": nil, "cs_quantity": 1, "cs_ship_date_sk": 3, "cs_sold_date_sk": 1}]
  // let inventory = [
  Const        r1, [{"inv_date_sk": 2, "inv_item_sk": 1, "inv_quantity_on_hand": 0, "inv_warehouse_sk": 1}]
  // let warehouse = [
  Const        r2, [{"w_warehouse_name": "Main", "w_warehouse_sk": 1}]
  // let item = [
  Const        r3, [{"i_item_desc": "ItemA", "i_item_sk": 1}]
  // let customer_demographics = [
  Const        r4, [{"cd_demo_sk": 1, "cd_marital_status": "M"}]
  // let household_demographics = [
  Const        r5, [{"hd_buy_potential": "5001-10000", "hd_demo_sk": 1}]
  // let date_dim = [
  Const        r6, [{"d_date": 1, "d_date_sk": 1, "d_week_seq": 10, "d_year": 2000}, {"d_date": 1, "d_date_sk": 2, "d_week_seq": 10, "d_year": 2000}, {"d_date": 7, "d_date_sk": 3, "d_week_seq": 10, "d_year": 2000}]
  // from cs in catalog_sales
  Const        r7, []
  // group by { item_desc: i.i_item_desc, warehouse: w.w_warehouse_name, week_seq: d1.d_week_seq } into g
  Const        r8, "item_desc"
  Const        r9, "i_item_desc"
  Const        r10, "warehouse"
  Const        r11, "w_warehouse_name"
  Const        r12, "week_seq"
  Const        r13, "d_week_seq"
  // inv.inv_quantity_on_hand < cs.cs_quantity &&
  Const        r14, "inv_quantity_on_hand"
  Const        r15, "cs_quantity"
  // d3.d_date > d1.d_date + 5 &&
  Const        r16, "d_date"
  // hd.hd_buy_potential == "5001-10000" &&
  Const        r17, "hd_buy_potential"
  // d1.d_year == 2000 &&
  Const        r18, "d_year"
  // cd.cd_marital_status == "M"
  Const        r19, "cd_marital_status"
  // i_item_desc: g.key.item_desc,
  Const        r20, "key"
  // no_promo: count(from x in g where x.cs_promo_sk == null select x),
  Const        r21, "no_promo"
  Const        r22, "cs_promo_sk"
  // promo: count(from x in g where x.cs_promo_sk != null select x),
  Const        r23, "promo"
  // total_cnt: count(g)
  Const        r24, "total_cnt"
  // from cs in catalog_sales
  MakeMap      r25, 0, r0
  Const        r27, []
  Move         r26, r27
  IterPrep     r28, r0
  Len          r29, r28
  Const        r30, 0
L24:
  LessInt      r31, r30, r29
  JumpIfFalse  r31, L0
  Index        r32, r28, r30
  Move         r33, r32
  // join inv in inventory on inv.inv_item_sk == cs.cs_item_sk
  IterPrep     r34, r1
  Len          r35, r34
  Const        r36, 0
L23:
  LessInt      r37, r36, r35
  JumpIfFalse  r37, L1
  Index        r38, r34, r36
  Move         r39, r38
  Const        r40, "inv_item_sk"
  Index        r41, r39, r40
  Const        r42, "cs_item_sk"
  Index        r43, r33, r42
  Equal        r44, r41, r43
  JumpIfFalse  r44, L2
  // join w in warehouse on w.w_warehouse_sk == inv.inv_warehouse_sk
  IterPrep     r45, r2
  Len          r46, r45
  Const        r47, 0
L22:
  LessInt      r48, r47, r46
  JumpIfFalse  r48, L2
  Index        r49, r45, r47
  Move         r50, r49
  Const        r51, "w_warehouse_sk"
  Index        r52, r50, r51
  Const        r53, "inv_warehouse_sk"
  Index        r54, r39, r53
  Equal        r55, r52, r54
  JumpIfFalse  r55, L3
  // join i in item on i.i_item_sk == cs.cs_item_sk
  IterPrep     r56, r3
  Len          r57, r56
  Const        r58, 0
L21:
  LessInt      r59, r58, r57
  JumpIfFalse  r59, L3
  Index        r60, r56, r58
  Move         r61, r60
  Const        r62, "i_item_sk"
  Index        r63, r61, r62
  Index        r64, r33, r42
  Equal        r65, r63, r64
  JumpIfFalse  r65, L4
  // join cd in customer_demographics on cd.cd_demo_sk == cs.cs_bill_cdemo_sk
  IterPrep     r66, r4
  Len          r67, r66
  Const        r68, 0
L20:
  LessInt      r69, r68, r67
  JumpIfFalse  r69, L4
  Index        r70, r66, r68
  Move         r71, r70
  Const        r72, "cd_demo_sk"
  Index        r73, r71, r72
  Const        r74, "cs_bill_cdemo_sk"
  Index        r75, r33, r74
  Equal        r76, r73, r75
  JumpIfFalse  r76, L5
  // join hd in household_demographics on hd.hd_demo_sk == cs.cs_bill_hdemo_sk
  IterPrep     r77, r5
  Len          r78, r77
  Const        r79, 0
L19:
  LessInt      r80, r79, r78
  JumpIfFalse  r80, L5
  Index        r81, r77, r79
  Move         r82, r81
  Const        r83, "hd_demo_sk"
  Index        r84, r82, r83
  Const        r85, "cs_bill_hdemo_sk"
  Index        r86, r33, r85
  Equal        r87, r84, r86
  JumpIfFalse  r87, L6
  // join d1 in date_dim on d1.d_date_sk == cs.cs_sold_date_sk
  IterPrep     r88, r6
  Len          r89, r88
  Const        r90, 0
L18:
  LessInt      r91, r90, r89
  JumpIfFalse  r91, L6
  Index        r92, r88, r90
  Move         r93, r92
  Const        r94, "d_date_sk"
  Index        r95, r93, r94
  Const        r96, "cs_sold_date_sk"
  Index        r97, r33, r96
  Equal        r98, r95, r97
  JumpIfFalse  r98, L7
  // join d2 in date_dim on d2.d_date_sk == inv.inv_date_sk
  IterPrep     r99, r6
  Len          r100, r99
  Const        r101, 0
L17:
  LessInt      r102, r101, r100
  JumpIfFalse  r102, L7
  Index        r103, r99, r101
  Move         r104, r103
  Index        r105, r104, r94
  Const        r106, "inv_date_sk"
  Index        r107, r39, r106
  Equal        r108, r105, r107
  JumpIfFalse  r108, L8
  // join d3 in date_dim on d3.d_date_sk == cs.cs_ship_date_sk
  IterPrep     r109, r6
  Len          r110, r109
  Const        r111, 0
L16:
  LessInt      r112, r111, r110
  JumpIfFalse  r112, L8
  Index        r113, r109, r111
  Move         r114, r113
  Index        r115, r114, r94
  Const        r116, "cs_ship_date_sk"
  Index        r117, r33, r116
  Equal        r118, r115, r117
  JumpIfFalse  r118, L9
  // where d1.d_week_seq == d2.d_week_seq &&
  Index        r119, r93, r13
  // d3.d_date > d1.d_date + 5 &&
  Index        r120, r93, r16
  Const        r121, 5
  Add          r122, r120, r121
  // inv.inv_quantity_on_hand < cs.cs_quantity &&
  Index        r123, r39, r14
  Index        r124, r33, r15
  Less         r125, r123, r124
  // d3.d_date > d1.d_date + 5 &&
  Index        r126, r114, r16
  Less         r127, r122, r126
  // where d1.d_week_seq == d2.d_week_seq &&
  Index        r128, r104, r13
  Equal        r129, r119, r128
  // hd.hd_buy_potential == "5001-10000" &&
  Index        r130, r82, r17
  Const        r131, "5001-10000"
  Equal        r132, r130, r131
  // d1.d_year == 2000 &&
  Index        r133, r93, r18
  Const        r134, 2000
  Equal        r135, r133, r134
  // cd.cd_marital_status == "M"
  Index        r136, r71, r19
  Const        r137, "M"
  Equal        r138, r136, r137
  // where d1.d_week_seq == d2.d_week_seq &&
  Move         r139, r129
  JumpIfFalse  r139, L10
  Move         r139, r125
L10:
  // inv.inv_quantity_on_hand < cs.cs_quantity &&
  Move         r140, r139
  JumpIfFalse  r140, L11
  Move         r140, r127
L11:
  // d3.d_date > d1.d_date + 5 &&
  Move         r141, r140
  JumpIfFalse  r141, L12
  Move         r141, r132
L12:
  // hd.hd_buy_potential == "5001-10000" &&
  Move         r142, r141
  JumpIfFalse  r142, L13
  Move         r142, r135
L13:
  // d1.d_year == 2000 &&
  Move         r143, r142
  JumpIfFalse  r143, L14
  Move         r143, r138
L14:
  // where d1.d_week_seq == d2.d_week_seq &&
  JumpIfFalse  r143, L9
  // from cs in catalog_sales
  Const        r144, "cs"
  Move         r145, r33
  Const        r146, "inv"
  Move         r147, r39
  Const        r148, "w"
  Move         r149, r50
  Const        r150, "i"
  Move         r151, r61
  Const        r152, "cd"
  Move         r153, r71
  Const        r154, "hd"
  Move         r155, r82
  Const        r156, "d1"
  Move         r157, r93
  Const        r158, "d2"
  Move         r159, r104
  Const        r160, "d3"
  Move         r161, r114
  Move         r162, r144
  Move         r163, r145
  Move         r164, r146
  Move         r165, r147
  Move         r166, r148
  Move         r167, r149
  Move         r168, r150
  Move         r169, r151
  Move         r170, r152
  Move         r171, r153
  Move         r172, r154
  Move         r173, r155
  Move         r174, r156
  Move         r175, r157
  Move         r176, r158
  Move         r177, r159
  Move         r178, r160
  Move         r179, r161
  MakeMap      r180, 9, r162
  // group by { item_desc: i.i_item_desc, warehouse: w.w_warehouse_name, week_seq: d1.d_week_seq } into g
  Const        r181, "item_desc"
  Index        r182, r61, r9
  Const        r183, "warehouse"
  Index        r184, r50, r11
  Const        r185, "week_seq"
  Index        r186, r93, r13
  Move         r187, r181
  Move         r188, r182
  Move         r189, r183
  Move         r190, r184
  Move         r191, r185
  Move         r192, r186
  MakeMap      r193, 3, r187
  Str          r194, r193
  In           r195, r194, r25
  JumpIfTrue   r195, L15
  // from cs in catalog_sales
  Const        r196, []
  Const        r197, "__group__"
  Const        r198, true
  // group by { item_desc: i.i_item_desc, warehouse: w.w_warehouse_name, week_seq: d1.d_week_seq } into g
  Move         r199, r193
  // from cs in catalog_sales
  Const        r200, "items"
  Move         r201, r196
  Const        r202, "count"
  Const        r203, 0
  Move         r204, r197
  Move         r205, r198
  Move         r206, r20
  Move         r207, r199
  Move         r208, r200
  Move         r209, r201
  Move         r210, r202
  Move         r211, r203
  MakeMap      r212, 4, r204
  SetIndex     r25, r194, r212
  Append       r213, r26, r212
  Move         r26, r213
L15:
  Index        r214, r25, r194
  Index        r215, r214, r200
  Append       r216, r215, r180
  SetIndex     r214, r200, r216
  Index        r217, r214, r202
  Const        r218, 1
  AddInt       r219, r217, r218
  SetIndex     r214, r202, r219
L9:
  // join d3 in date_dim on d3.d_date_sk == cs.cs_ship_date_sk
  AddInt       r111, r111, r218
  Jump         L16
L8:
  // join d2 in date_dim on d2.d_date_sk == inv.inv_date_sk
  AddInt       r101, r101, r218
  Jump         L17
L7:
  // join d1 in date_dim on d1.d_date_sk == cs.cs_sold_date_sk
  AddInt       r90, r90, r218
  Jump         L18
L6:
  // join hd in household_demographics on hd.hd_demo_sk == cs.cs_bill_hdemo_sk
  AddInt       r79, r79, r218
  Jump         L19
L5:
  // join cd in customer_demographics on cd.cd_demo_sk == cs.cs_bill_cdemo_sk
  AddInt       r68, r68, r218
  Jump         L20
L4:
  // join i in item on i.i_item_sk == cs.cs_item_sk
  AddInt       r58, r58, r218
  Jump         L21
L3:
  // join w in warehouse on w.w_warehouse_sk == inv.inv_warehouse_sk
  AddInt       r47, r47, r218
  Jump         L22
L2:
  // join inv in inventory on inv.inv_item_sk == cs.cs_item_sk
  AddInt       r36, r36, r218
  Jump         L23
L1:
  // from cs in catalog_sales
  AddInt       r30, r30, r218
  Jump         L24
L0:
  Move         r220, r203
  Len          r221, r26
L32:
  LessInt      r222, r220, r221
  JumpIfFalse  r222, L25
  Index        r223, r26, r220
  Move         r224, r223
  // i_item_desc: g.key.item_desc,
  Const        r225, "i_item_desc"
  Index        r226, r224, r20
  Index        r227, r226, r8
  // w_warehouse_name: g.key.warehouse,
  Const        r228, "w_warehouse_name"
  Index        r229, r224, r20
  Index        r230, r229, r10
  // d_week_seq: g.key.week_seq,
  Const        r231, "d_week_seq"
  Index        r232, r224, r20
  Index        r233, r232, r12
  // no_promo: count(from x in g where x.cs_promo_sk == null select x),
  Const        r234, "no_promo"
  Const        r235, []
  IterPrep     r236, r224
  Len          r237, r236
  Move         r238, r203
L28:
  LessInt      r239, r238, r237
  JumpIfFalse  r239, L26
  Index        r240, r236, r238
  Move         r241, r240
  Index        r242, r241, r22
  Const        r243, nil
  Equal        r244, r242, r243
  JumpIfFalse  r244, L27
  Append       r245, r235, r241
  Move         r235, r245
L27:
  AddInt       r238, r238, r218
  Jump         L28
L26:
  Count        r246, r235
  // promo: count(from x in g where x.cs_promo_sk != null select x),
  Const        r247, "promo"
  Const        r248, []
  IterPrep     r249, r224
  Len          r250, r249
  Move         r251, r203
L31:
  LessInt      r252, r251, r250
  JumpIfFalse  r252, L29
  Index        r253, r249, r251
  Move         r241, r253
  Index        r254, r241, r22
  NotEqual     r255, r254, r243
  JumpIfFalse  r255, L30
  Append       r256, r248, r241
  Move         r248, r256
L30:
  AddInt       r251, r251, r218
  Jump         L31
L29:
  Count        r257, r248
  // total_cnt: count(g)
  Const        r258, "total_cnt"
  Index        r259, r224, r202
  // i_item_desc: g.key.item_desc,
  Move         r260, r225
  Move         r261, r227
  // w_warehouse_name: g.key.warehouse,
  Move         r262, r228
  Move         r263, r230
  // d_week_seq: g.key.week_seq,
  Move         r264, r231
  Move         r265, r233
  // no_promo: count(from x in g where x.cs_promo_sk == null select x),
  Move         r266, r234
  Move         r267, r246
  // promo: count(from x in g where x.cs_promo_sk != null select x),
  Move         r268, r247
  Move         r269, r257
  // total_cnt: count(g)
  Move         r270, r258
  Move         r271, r259
  // select {
  MakeMap      r272, 6, r260
  // from cs in catalog_sales
  Append       r273, r7, r272
  Move         r7, r273
  AddInt       r220, r220, r218
  Jump         L32
L25:
  // json(result)
  JSON         r7
  // expect result == [
  Const        r274, [{"d_week_seq": 10, "i_item_desc": "ItemA", "no_promo": 1, "promo": 0, "total_cnt": 1, "w_warehouse_name": "Main"}]
  Equal        r275, r7, r274
  Expect       r275
  Return       r0

