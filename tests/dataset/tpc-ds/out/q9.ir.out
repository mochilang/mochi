func main (regs=269)
  // let store_sales = [
  Const        r0, [{"ss_ext_discount_amt": 5.0, "ss_net_paid": 7.0, "ss_quantity": 5}, {"ss_ext_discount_amt": 10.0, "ss_net_paid": 15.0, "ss_quantity": 30}, {"ss_ext_discount_amt": 20.0, "ss_net_paid": 30.0, "ss_quantity": 50}, {"ss_ext_discount_amt": 25.0, "ss_net_paid": 35.0, "ss_quantity": 70}, {"ss_ext_discount_amt": 40.0, "ss_net_paid": 50.0, "ss_quantity": 90}]
  // let reason = [ { r_reason_sk: 1 } ]
  Const        r1, [{"r_reason_sk": 1}]
  // if count(from s in store_sales
  Const        r2, []
  // where s.ss_quantity >= 1 && s.ss_quantity <= 20
  Const        r3, "ss_quantity"
  // if count(from s in store_sales
  IterPrep     r4, r0
  Len          r5, r4
  Const        r7, 0
  Move         r6, r7
  LessInt      r8, r6, r5
L2:
  JumpIfFalse  r8, L0
  Index        r9, r4, r6
  Move         r10, r9
  // where s.ss_quantity >= 1 && s.ss_quantity <= 20
  Const        r3, "ss_quantity"
  Index        r11, r10, r3
  Const        r12, 1
  LessEq       r13, r12, r11
  Index        r14, r10, r3
  Const        r15, 20
  LessEq       r16, r14, r15
  Move         r17, r13
  JumpIfFalse  r17, L1
  Move         r17, r16
  JumpIfFalse  r17, L2
  // if count(from s in store_sales
  Append       r18, r2, r10
L1:
  Move         r2, r18
  Const        r12, 1
  AddInt       r6, r6, r12
  Jump         L2
L0:
  // select s) > 10 {
  LessInt      r21, r20, r19
  // avg(from s in store_sales
  Const        r22, []
  // where s.ss_quantity >= 1 && s.ss_quantity <= 20
  Const        r3, "ss_quantity"
  // select s.ss_ext_discount_amt)
  Const        r23, "ss_ext_discount_amt"
  // avg(from s in store_sales
  IterPrep     r24, r0
  Len          r25, r24
  Const        r7, 0
  Move         r26, r7
  LessInt      r27, r26, r25
  JumpIfFalse  r27, L3
  Index        r28, r24, r26
L6:
  Move         r10, r28
  // where s.ss_quantity >= 1 && s.ss_quantity <= 20
  Const        r3, "ss_quantity"
  Index        r29, r10, r3
  Const        r12, 1
  LessEq       r30, r12, r29
  Index        r31, r10, r3
  Const        r15, 20
  LessEq       r32, r31, r15
  Move         r33, r30
  JumpIfFalse  r33, L4
  Move         r33, r32
  JumpIfFalse  r33, L5
  // select s.ss_ext_discount_amt)
  Const        r23, "ss_ext_discount_amt"
  Index        r34, r10, r23
  // avg(from s in store_sales
  Append       r35, r22, r34
L4:
  Move         r22, r35
  Const        r12, 1
  AddInt       r26, r26, r12
  Jump         L6
L5:
  // avg(from s in store_sales
  Const        r37, []
  // where s.ss_quantity >= 1 && s.ss_quantity <= 20
  Const        r3, "ss_quantity"
  // select s.ss_net_paid)
  Const        r38, "ss_net_paid"
L3:
  // avg(from s in store_sales
  IterPrep     r39, r0
  Len          r40, r39
  Const        r7, 0
  Move         r41, r7
  LessInt      r42, r41, r40
  JumpIfFalse  r42, L7
  Index        r43, r39, r41
  Move         r10, r43
  // where s.ss_quantity >= 1 && s.ss_quantity <= 20
  Const        r3, "ss_quantity"
L10:
  Index        r44, r10, r3
  Const        r12, 1
  LessEq       r45, r12, r44
  Index        r46, r10, r3
  Const        r15, 20
  LessEq       r47, r46, r15
  Move         r48, r45
  JumpIfFalse  r48, L8
  Move         r48, r47
  JumpIfFalse  r48, L9
  // select s.ss_net_paid)
  Const        r38, "ss_net_paid"
  Index        r49, r10, r38
  // avg(from s in store_sales
  Append       r50, r37, r49
  Move         r37, r50
  Const        r12, 1
L8:
  AddInt       r41, r41, r12
  Jump         L10
L9:
  // where s.ss_quantity >= 21 && s.ss_quantity <= 40
  Const        r3, "ss_quantity"
  // if count(from s in store_sales
  IterPrep     r54, r0
  Len          r55, r54
L7:
  Const        r7, 0
  Move         r56, r7
  LessInt      r57, r56, r55
  JumpIfFalse  r57, L11
  Index        r58, r54, r56
  Move         r10, r58
  // where s.ss_quantity >= 21 && s.ss_quantity <= 40
  Const        r3, "ss_quantity"
  Index        r59, r10, r3
  Const        r60, 21
L14:
  LessEq       r61, r60, r59
  Index        r62, r10, r3
  Const        r63, 40
  LessEq       r64, r62, r63
  Move         r65, r61
  JumpIfFalse  r65, L12
  Move         r65, r64
  JumpIfFalse  r65, L13
  // if count(from s in store_sales
  Append       r66, r53, r10
  Move         r53, r66
  Const        r12, 1
  AddInt       r56, r56, r12
  Jump         L14
L12:
  // select s) > 20 {
  LessInt      r68, r15, r67
  // avg(from s in store_sales
  Const        r69, []
  // where s.ss_quantity >= 21 && s.ss_quantity <= 40
  Const        r3, "ss_quantity"
L13:
  // select s.ss_ext_discount_amt)
  Const        r23, "ss_ext_discount_amt"
  // avg(from s in store_sales
  IterPrep     r70, r0
  Len          r71, r70
L11:
  Const        r7, 0
  Move         r72, r7
  LessInt      r73, r72, r71
  JumpIfFalse  r73, L15
  Index        r74, r70, r72
  Move         r10, r74
  // where s.ss_quantity >= 21 && s.ss_quantity <= 40
  Const        r3, "ss_quantity"
  Index        r75, r10, r3
  Const        r60, 21
  LessEq       r76, r60, r75
  Index        r77, r10, r3
L18:
  Const        r63, 40
  LessEq       r78, r77, r63
  Move         r79, r76
  JumpIfFalse  r79, L16
  Move         r79, r78
  JumpIfFalse  r79, L17
  // select s.ss_ext_discount_amt)
  Const        r23, "ss_ext_discount_amt"
  Index        r80, r10, r23
  // avg(from s in store_sales
  Append       r81, r69, r80
  Move         r69, r81
  Const        r12, 1
  AddInt       r72, r72, r12
  Jump         L18
L16:
  // where s.ss_quantity >= 21 && s.ss_quantity <= 40
  Const        r3, "ss_quantity"
  // select s.ss_net_paid)
  Const        r38, "ss_net_paid"
  // avg(from s in store_sales
  IterPrep     r84, r0
  Len          r85, r84
  Const        r7, 0
L17:
  Move         r86, r7
  LessInt      r87, r86, r85
  JumpIfFalse  r87, L19
L15:
  Index        r88, r84, r86
  Move         r10, r88
  // where s.ss_quantity >= 21 && s.ss_quantity <= 40
  Const        r3, "ss_quantity"
  Index        r89, r10, r3
  Const        r60, 21
  LessEq       r90, r60, r89
  Index        r91, r10, r3
  Const        r63, 40
  LessEq       r92, r91, r63
L22:
  Move         r93, r90
  JumpIfFalse  r93, L20
  Move         r93, r92
  JumpIfFalse  r93, L21
  // select s.ss_net_paid)
  Const        r38, "ss_net_paid"
  Index        r94, r10, r38
  // avg(from s in store_sales
  Append       r95, r83, r94
  Move         r83, r95
  Const        r12, 1
  AddInt       r86, r86, r12
  Jump         L22
L20:
  // if count(from s in store_sales
  IterPrep     r99, r0
  Len          r100, r99
  Const        r7, 0
  Move         r101, r7
  LessInt      r102, r101, r100
L21:
  JumpIfFalse  r102, L23
  Index        r103, r99, r101
  Move         r10, r103
L19:
  // where s.ss_quantity >= 41 && s.ss_quantity <= 60
  Const        r3, "ss_quantity"
  Index        r104, r10, r3
  Const        r105, 41
  LessEq       r106, r105, r104
  Index        r107, r10, r3
  Const        r108, 60
  LessEq       r109, r107, r108
  Move         r110, r106
  JumpIfFalse  r110, L24
L26:
  Move         r110, r109
  JumpIfFalse  r110, L25
  // if count(from s in store_sales
  Append       r111, r98, r10
  Move         r98, r111
  Const        r12, 1
  AddInt       r101, r101, r12
  Jump         L26
L24:
  // avg(from s in store_sales
  Const        r7, 0
  Move         r118, r7
  LessInt      r119, r118, r117
L25:
  JumpIfFalse  r119, L27
  Index        r120, r116, r118
  Move         r10, r120
L23:
  // where s.ss_quantity >= 41 && s.ss_quantity <= 60
  Const        r3, "ss_quantity"
  Index        r121, r10, r3
  Const        r105, 41
  LessEq       r122, r105, r121
  Index        r123, r10, r3
  Const        r108, 60
  LessEq       r124, r123, r108
  Move         r125, r122
  JumpIfFalse  r125, L28
  Move         r125, r124
  JumpIfFalse  r125, L29
L30:
  // select s.ss_ext_discount_amt)
  Const        r23, "ss_ext_discount_amt"
  Index        r126, r10, r23
  // avg(from s in store_sales
  Append       r127, r115, r126
  Move         r115, r127
  Const        r12, 1
  AddInt       r118, r118, r12
  Jump         L30
L28:
  // avg(from s in store_sales
  LessInt      r133, r132, r131
  JumpIfFalse  r133, L31
  Index        r134, r130, r132
  Move         r10, r134
  // where s.ss_quantity >= 41 && s.ss_quantity <= 60
  Const        r3, "ss_quantity"
L29:
  Index        r135, r10, r3
  Const        r105, 41
  LessEq       r136, r105, r135
L27:
  Index        r137, r10, r3
  Const        r108, 60
  LessEq       r138, r137, r108
  Move         r139, r136
  JumpIfFalse  r139, L32
  Move         r139, r138
  JumpIfFalse  r139, L33
  // select s.ss_net_paid)
  Const        r38, "ss_net_paid"
  Index        r140, r10, r38
L34:
  // avg(from s in store_sales
  Append       r141, r129, r140
  Move         r129, r141
  Const        r12, 1
  AddInt       r132, r132, r12
  Jump         L34
L32:
  // if count(from s in store_sales
  Index        r149, r145, r147
  Move         r10, r149
  // where s.ss_quantity >= 61 && s.ss_quantity <= 80
  Const        r3, "ss_quantity"
  Index        r150, r10, r3
  Const        r151, 61
L33:
  LessEq       r152, r151, r150
  Index        r153, r10, r3
  Const        r154, 80
L31:
  LessEq       r155, r153, r154
  Move         r156, r152
  JumpIfFalse  r156, L35
  Move         r156, r155
  JumpIfFalse  r156, L36
  // if count(from s in store_sales
  Append       r157, r144, r10
  Move         r144, r157
  Const        r12, 1
  AddInt       r147, r147, r12
L37:
  Jump         L37
L35:
  // where s.ss_quantity >= 61 && s.ss_quantity <= 80
  Const        r3, "ss_quantity"
  Index        r166, r10, r3
  Const        r151, 61
L36:
  LessEq       r167, r151, r166
  Index        r168, r10, r3
  Const        r154, 80
  LessEq       r169, r168, r154
  Move         r170, r167
  JumpIfFalse  r170, L38
  Move         r170, r169
  JumpIfFalse  r170, L39
  // select s.ss_ext_discount_amt)
  Const        r23, "ss_ext_discount_amt"
  Index        r171, r10, r23
  // avg(from s in store_sales
  Append       r172, r160, r171
  Move         r160, r172
  Const        r12, 1
  AddInt       r163, r163, r12
L40:
  Jump         L40
L38:
  // where s.ss_quantity >= 61 && s.ss_quantity <= 80
  Const        r151, 61
  LessEq       r181, r151, r180
  Index        r182, r10, r3
  Const        r154, 80
  LessEq       r183, r182, r154
L39:
  Move         r184, r181
  JumpIfFalse  r184, L41
  Move         r184, r183
  JumpIfFalse  r184, L42
  // select s.ss_net_paid)
  Const        r38, "ss_net_paid"
  Index        r185, r10, r38
  // avg(from s in store_sales
  Append       r186, r174, r185
  Move         r174, r186
  Const        r12, 1
  AddInt       r177, r177, r12
  // if count(from s in store_sales
  Select       188,159,173,187
  // if count(from s in store_sales
  Const        r189, []
  // where s.ss_quantity >= 81 && s.ss_quantity <= 100
  Const        r3, "ss_quantity"
  // if count(from s in store_sales
  IterPrep     r190, r0
  Len          r191, r190
  Const        r7, 0
  Move         r192, r7
  LessInt      r193, r192, r191
  JumpIfFalse  r193, L43
  Index        r194, r190, r192
  Move         r10, r194
  // where s.ss_quantity >= 81 && s.ss_quantity <= 100
  Const        r3, "ss_quantity"
  Index        r195, r10, r3
  Const        r196, 81
  LessEq       r197, r196, r195
L41:
  Index        r198, r10, r3
  Const        r199, 100
  LessEq       r200, r198, r199
  Move         r201, r197
  JumpIfFalse  r201, L44
L42:
  Move         r201, r200
  JumpIfFalse  r201, L45
  // if count(from s in store_sales
  Append       r202, r189, r10
  Move         r189, r202
  Const        r12, 1
  AddInt       r192, r192, r12
  // select s.ss_ext_discount_amt)
  Const        r23, "ss_ext_discount_amt"
  // avg(from s in store_sales
  IterPrep     r207, r0
  Len          r208, r207
  Const        r7, 0
  Move         r209, r7
  LessInt      r210, r209, r208
  JumpIfFalse  r210, L46
  Index        r211, r207, r209
  Move         r10, r211
  // where s.ss_quantity >= 81 && s.ss_quantity <= 100
  Const        r3, "ss_quantity"
  Index        r212, r10, r3
  Const        r196, 81
  LessEq       r213, r196, r212
  Index        r214, r10, r3
  Const        r199, 100
L44:
  LessEq       r215, r214, r199
  Move         r216, r213
  JumpIfFalse  r216, L47
L45:
  Move         r216, r215
  JumpIfFalse  r216, L48
  // select s.ss_ext_discount_amt)
  Const        r23, "ss_ext_discount_amt"
L43:
  Index        r217, r10, r23
  // avg(from s in store_sales
  Append       r218, r206, r217
  Move         r206, r218
  Const        r12, 1
  AddInt       r209, r209, r12
  // avg(from s in store_sales
  Len          r222, r221
  Const        r7, 0
  Move         r223, r7
  LessInt      r224, r223, r222
  JumpIfFalse  r224, L49
  Index        r225, r221, r223
  Move         r10, r225
  // where s.ss_quantity >= 81 && s.ss_quantity <= 100
  Const        r3, "ss_quantity"
  Index        r226, r10, r3
  Const        r196, 81
  LessEq       r227, r196, r226
  Index        r228, r10, r3
  Const        r199, 100
  LessEq       r229, r228, r199
  Move         r230, r227
L47:
  JumpIfFalse  r230, L50
  Move         r230, r229
  JumpIfFalse  r230, L51
  // select s.ss_net_paid)
  Const        r38, "ss_net_paid"
  Index        r231, r10, r38
L48:
  // avg(from s in store_sales
  Append       r232, r220, r231
  Move         r220, r232
  Const        r12, 1
L46:
  AddInt       r223, r223, r12
  // bucket4: bucket4,
  Const        r240, "bucket4"
  // bucket5: bucket5
  Const        r241, "bucket5"
  // from r in reason
  IterPrep     r242, r1
  Len          r243, r242
  Const        r7, 0
  Move         r244, r7
  LessInt      r245, r244, r243
  JumpIfFalse  r245, L52
  Index        r246, r242, r244
  Move         r247, r246
  // where r.r_reason_sk == 1
  Const        r236, "r_reason_sk"
  Index        r248, r247, r236
  Const        r12, 1
  Equal        r249, r248, r12
  JumpIfFalse  r249, L53
L50:
  // bucket1: bucket1,
  Const        r250, "bucket1"
  // bucket2: bucket2,
  Const        r251, "bucket2"
  // bucket3: bucket3,
  Const        r252, "bucket3"
  // bucket4: bucket4,
  Const        r253, "bucket4"
  // bucket5: bucket5
  Const        r254, "bucket5"
L51:
  // bucket1: bucket1,
  Move         r255, r250
  Move         r256, r52
  // bucket2: bucket2,
  Move         r257, r251
L49:
  Move         r258, r97
  // bucket3: bucket3,
  Move         r259, r252
  Move         r260, r143
  // bucket4: bucket4,
  Move         r261, r253
  Move         r262, r188
  // bucket5: bucket5
  Move         r263, r254
  Move         r264, r234
  // select {
  MakeMap      r265, 5, r255
  // from r in reason
  Append       r266, r235, r265
  Move         r235, r266
  Const        r12, 1
  AddInt       r244, r244, r12
  // json(result)
  JSON         r235
  // expect result == [
  Const        r267, [{"bucket1": 7.0, "bucket2": 15.0, "bucket3": 30.0, "bucket4": 35.0, "bucket5": 50.0}]
  Equal        r268, r235, r267
  Expect       r268
  Return       r0
