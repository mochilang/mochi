func main (regs=253)
  // let store_sales = []
  Const        r0, []
  // if count(from s in store_sales
  Const        r1, []
  // where s.ss_quantity >= 1 && s.ss_quantity <= 20
  Const        r2, "ss_quantity"
  // if count(from s in store_sales
  IterPrep     r3, r0
  Len          r4, r3
  Const        r6, 0
  Move         r5, r6
L3:
  LessInt      r7, r5, r4
  JumpIfFalse  r7, L0
  Index        r9, r3, r5
  // where s.ss_quantity >= 1 && s.ss_quantity <= 20
  Index        r10, r9, r2
  Const        r11, 1
  LessEq       r12, r11, r10
  Index        r13, r9, r2
  Const        r14, 20
  LessEq       r15, r13, r14
  JumpIfFalse  r12, L1
  Move         r12, r15
L1:
  JumpIfFalse  r12, L2
  // if count(from s in store_sales
  Append       r1, r1, r9
L2:
  AddInt       r5, r5, r11
  Jump         L3
L0:
  Count        r17, r1
  // select s) > 10 {
  Const        r18, 10
  LessInt      r19, r18, r17
  // avg(from s in store_sales
  Const        r20, []
  // select s.ss_ext_discount_amt)
  Const        r21, "ss_ext_discount_amt"
  // avg(from s in store_sales
  IterPrep     r22, r0
  Len          r23, r22
  Move         r24, r6
L7:
  LessInt      r25, r24, r23
  JumpIfFalse  r25, L4
  Index        r9, r22, r24
  // where s.ss_quantity >= 1 && s.ss_quantity <= 20
  Index        r27, r9, r2
  LessEq       r28, r11, r27
  Index        r29, r9, r2
  LessEq       r30, r29, r14
  JumpIfFalse  r28, L5
  Move         r28, r30
L5:
  JumpIfFalse  r28, L6
  // select s.ss_ext_discount_amt)
  Index        r31, r9, r21
  // avg(from s in store_sales
  Append       r20, r20, r31
L6:
  AddInt       r24, r24, r11
  Jump         L7
L4:
  Avg          r33, r20
  // avg(from s in store_sales
  Const        r34, []
  // select s.ss_net_paid)
  Const        r35, "ss_net_paid"
  // avg(from s in store_sales
  IterPrep     r36, r0
  Len          r37, r36
  Move         r38, r6
L11:
  LessInt      r39, r38, r37
  JumpIfFalse  r39, L8
  Index        r9, r36, r38
  // where s.ss_quantity >= 1 && s.ss_quantity <= 20
  Index        r41, r9, r2
  LessEq       r42, r11, r41
  Index        r43, r9, r2
  LessEq       r44, r43, r14
  JumpIfFalse  r42, L9
  Move         r42, r44
L9:
  JumpIfFalse  r42, L10
  // select s.ss_net_paid)
  Index        r45, r9, r35
  // avg(from s in store_sales
  Append       r34, r34, r45
L10:
  AddInt       r38, r38, r11
  Jump         L11
L8:
  Avg          r47, r34
  // if count(from s in store_sales
  Select       48,19,33,47
  // if count(from s in store_sales
  Const        r49, []
  IterPrep     r50, r0
  Len          r51, r50
  Move         r52, r6
L15:
  LessInt      r53, r52, r51
  JumpIfFalse  r53, L12
  Index        r9, r50, r52
  // where s.ss_quantity >= 21 && s.ss_quantity <= 40
  Index        r55, r9, r2
  Const        r56, 21
  LessEq       r57, r56, r55
  Index        r58, r9, r2
  Const        r59, 40
  LessEq       r60, r58, r59
  JumpIfFalse  r57, L13
  Move         r57, r60
L13:
  JumpIfFalse  r57, L14
  // if count(from s in store_sales
  Append       r49, r49, r9
L14:
  AddInt       r52, r52, r11
  Jump         L15
L12:
  Count        r62, r49
  // select s) > 20 {
  LessInt      r63, r14, r62
  // avg(from s in store_sales
  Const        r64, []
  IterPrep     r65, r0
  Len          r66, r65
  Move         r67, r6
L19:
  LessInt      r68, r67, r66
  JumpIfFalse  r68, L16
  Index        r9, r65, r67
  // where s.ss_quantity >= 21 && s.ss_quantity <= 40
  Index        r70, r9, r2
  LessEq       r71, r56, r70
  Index        r72, r9, r2
  LessEq       r73, r72, r59
  JumpIfFalse  r71, L17
  Move         r71, r73
L17:
  JumpIfFalse  r71, L18
  // select s.ss_ext_discount_amt)
  Index        r74, r9, r21
  // avg(from s in store_sales
  Append       r64, r64, r74
L18:
  AddInt       r67, r67, r11
  Jump         L19
L16:
  Avg          r76, r64
  // avg(from s in store_sales
  Const        r77, []
  IterPrep     r78, r0
  Len          r79, r78
  Move         r80, r6
L23:
  LessInt      r81, r80, r79
  JumpIfFalse  r81, L20
  Index        r9, r78, r80
  // where s.ss_quantity >= 21 && s.ss_quantity <= 40
  Index        r83, r9, r2
  LessEq       r84, r56, r83
  Index        r85, r9, r2
  LessEq       r86, r85, r59
  JumpIfFalse  r84, L21
  Move         r84, r86
L21:
  JumpIfFalse  r84, L22
  // select s.ss_net_paid)
  Index        r87, r9, r35
  // avg(from s in store_sales
  Append       r77, r77, r87
L22:
  AddInt       r80, r80, r11
  Jump         L23
L20:
  Avg          r89, r77
  // if count(from s in store_sales
  Select       90,63,76,89
  // if count(from s in store_sales
  Const        r91, []
  IterPrep     r92, r0
  Len          r93, r92
  Move         r94, r6
L27:
  LessInt      r95, r94, r93
  JumpIfFalse  r95, L24
  Index        r9, r92, r94
  // where s.ss_quantity >= 41 && s.ss_quantity <= 60
  Index        r97, r9, r2
  Const        r98, 41
  LessEq       r99, r98, r97
  Index        r100, r9, r2
  Const        r101, 60
  LessEq       r102, r100, r101
  JumpIfFalse  r99, L25
  Move         r99, r102
L25:
  JumpIfFalse  r99, L26
  // if count(from s in store_sales
  Append       r91, r91, r9
L26:
  AddInt       r94, r94, r11
  Jump         L27
L24:
  Count        r104, r91
  // select s) > 30 {
  Const        r105, 30
  LessInt      r106, r105, r104
  // avg(from s in store_sales
  Const        r107, []
  IterPrep     r108, r0
  Len          r109, r108
  Move         r110, r6
L31:
  LessInt      r111, r110, r109
  JumpIfFalse  r111, L28
  Index        r9, r108, r110
  // where s.ss_quantity >= 41 && s.ss_quantity <= 60
  Index        r113, r9, r2
  LessEq       r114, r98, r113
  Index        r115, r9, r2
  LessEq       r116, r115, r101
  JumpIfFalse  r114, L29
  Move         r114, r116
L29:
  JumpIfFalse  r114, L30
  // select s.ss_ext_discount_amt)
  Index        r117, r9, r21
  // avg(from s in store_sales
  Append       r107, r107, r117
L30:
  AddInt       r110, r110, r11
  Jump         L31
L28:
  Avg          r119, r107
  // avg(from s in store_sales
  Const        r120, []
  IterPrep     r121, r0
  Len          r122, r121
  Move         r123, r6
L35:
  LessInt      r124, r123, r122
  JumpIfFalse  r124, L32
  Index        r9, r121, r123
  // where s.ss_quantity >= 41 && s.ss_quantity <= 60
  Index        r126, r9, r2
  LessEq       r127, r98, r126
  Index        r128, r9, r2
  LessEq       r129, r128, r101
  JumpIfFalse  r127, L33
  Move         r127, r129
L33:
  JumpIfFalse  r127, L34
  // select s.ss_net_paid)
  Index        r130, r9, r35
  // avg(from s in store_sales
  Append       r120, r120, r130
L34:
  AddInt       r123, r123, r11
  Jump         L35
L32:
  Avg          r132, r120
  // if count(from s in store_sales
  Select       133,106,119,132
  // if count(from s in store_sales
  Const        r134, []
  IterPrep     r135, r0
  Len          r136, r135
  Move         r137, r6
L39:
  LessInt      r138, r137, r136
  JumpIfFalse  r138, L36
  Index        r9, r135, r137
  // where s.ss_quantity >= 61 && s.ss_quantity <= 80
  Index        r140, r9, r2
  Const        r141, 61
  LessEq       r142, r141, r140
  Index        r143, r9, r2
  Const        r144, 80
  LessEq       r145, r143, r144
  JumpIfFalse  r142, L37
  Move         r142, r145
L37:
  JumpIfFalse  r142, L38
  // if count(from s in store_sales
  Append       r134, r134, r9
L38:
  AddInt       r137, r137, r11
  Jump         L39
L36:
  Count        r147, r134
  // select s) > 40 {
  LessInt      r148, r59, r147
  // avg(from s in store_sales
  Const        r149, []
  IterPrep     r150, r0
  Len          r151, r150
  Move         r152, r6
L43:
  LessInt      r153, r152, r151
  JumpIfFalse  r153, L40
  Index        r9, r150, r152
  // where s.ss_quantity >= 61 && s.ss_quantity <= 80
  Index        r155, r9, r2
  LessEq       r156, r141, r155
  Index        r157, r9, r2
  LessEq       r158, r157, r144
  JumpIfFalse  r156, L41
  Move         r156, r158
L41:
  JumpIfFalse  r156, L42
  // select s.ss_ext_discount_amt)
  Index        r159, r9, r21
  // avg(from s in store_sales
  Append       r149, r149, r159
L42:
  AddInt       r152, r152, r11
  Jump         L43
L40:
  Avg          r161, r149
  // avg(from s in store_sales
  Const        r162, []
  IterPrep     r163, r0
  Len          r164, r163
  Move         r165, r6
L47:
  LessInt      r166, r165, r164
  JumpIfFalse  r166, L44
  Index        r9, r163, r165
  // where s.ss_quantity >= 61 && s.ss_quantity <= 80
  Index        r168, r9, r2
  LessEq       r169, r141, r168
  Index        r170, r9, r2
  LessEq       r171, r170, r144
  JumpIfFalse  r169, L45
  Move         r169, r171
L45:
  JumpIfFalse  r169, L46
  // select s.ss_net_paid)
  Index        r172, r9, r35
  // avg(from s in store_sales
  Append       r162, r162, r172
L46:
  AddInt       r165, r165, r11
  Jump         L47
L44:
  Avg          r174, r162
  // if count(from s in store_sales
  Select       175,148,161,174
  // if count(from s in store_sales
  Const        r176, []
  IterPrep     r177, r0
  Len          r178, r177
  Move         r179, r6
L51:
  LessInt      r180, r179, r178
  JumpIfFalse  r180, L48
  Index        r9, r177, r179
  // where s.ss_quantity >= 81 && s.ss_quantity <= 100
  Index        r182, r9, r2
  Const        r183, 81
  LessEq       r184, r183, r182
  Index        r185, r9, r2
  Const        r186, 100
  LessEq       r187, r185, r186
  JumpIfFalse  r184, L49
  Move         r184, r187
L49:
  JumpIfFalse  r184, L50
  // if count(from s in store_sales
  Append       r176, r176, r9
L50:
  AddInt       r179, r179, r11
  Jump         L51
L48:
  Count        r189, r176
  // select s) > 50 {
  Const        r190, 50
  LessInt      r191, r190, r189
  // avg(from s in store_sales
  Const        r192, []
  IterPrep     r193, r0
  Len          r194, r193
  Move         r195, r6
L55:
  LessInt      r196, r195, r194
  JumpIfFalse  r196, L52
  Index        r9, r193, r195
  // where s.ss_quantity >= 81 && s.ss_quantity <= 100
  Index        r198, r9, r2
  LessEq       r199, r183, r198
  Index        r200, r9, r2
  LessEq       r201, r200, r186
  JumpIfFalse  r199, L53
  Move         r199, r201
L53:
  JumpIfFalse  r199, L54
  // select s.ss_ext_discount_amt)
  Index        r202, r9, r21
  // avg(from s in store_sales
  Append       r192, r192, r202
L54:
  AddInt       r195, r195, r11
  Jump         L55
L52:
  Avg          r204, r192
  // avg(from s in store_sales
  Const        r205, []
  IterPrep     r206, r0
  Len          r207, r206
  Move         r208, r6
L59:
  LessInt      r209, r208, r207
  JumpIfFalse  r209, L56
  Index        r9, r206, r208
  // where s.ss_quantity >= 81 && s.ss_quantity <= 100
  Index        r211, r9, r2
  LessEq       r212, r183, r211
  Index        r213, r9, r2
  LessEq       r214, r213, r186
  JumpIfFalse  r212, L57
  Move         r212, r214
L57:
  JumpIfFalse  r212, L58
  // select s.ss_net_paid)
  Index        r215, r9, r35
  // avg(from s in store_sales
  Append       r205, r205, r215
L58:
  AddInt       r208, r208, r11
  Jump         L59
L56:
  Avg          r217, r205
  // if count(from s in store_sales
  Select       218,191,204,217
  // from r in reason
  Const        r219, []
  // where r.r_reason_sk == 1
  Const        r220, "r_reason_sk"
  // bucket1: bucket1,
  Const        r221, "bucket1"
  // bucket2: bucket2,
  Const        r222, "bucket2"
  // bucket3: bucket3,
  Const        r223, "bucket3"
  // bucket4: bucket4,
  Const        r224, "bucket4"
  // bucket5: bucket5
  Const        r225, "bucket5"
  // from r in reason
  IterPrep     r226, r0
  Len          r227, r226
  Move         r228, r6
L62:
  LessInt      r229, r228, r227
  JumpIfFalse  r229, L60
  Index        r231, r226, r228
  // where r.r_reason_sk == 1
  Index        r232, r231, r220
  Equal        r233, r232, r11
  JumpIfFalse  r233, L61
  // bucket1: bucket1,
  Const        r234, "bucket1"
  // bucket2: bucket2,
  Const        r235, "bucket2"
  // bucket3: bucket3,
  Const        r236, "bucket3"
  // bucket4: bucket4,
  Const        r237, "bucket4"
  // bucket5: bucket5
  Const        r238, "bucket5"
  // bucket1: bucket1,
  Move         r239, r234
  Move         r240, r48
  // bucket2: bucket2,
  Move         r241, r235
  Move         r242, r90
  // bucket3: bucket3,
  Move         r243, r236
  Move         r244, r133
  // bucket4: bucket4,
  Move         r245, r237
  Move         r246, r175
  // bucket5: bucket5
  Move         r247, r238
  Move         r248, r218
  // select {
  MakeMap      r249, 5, r239
  // from r in reason
  Append       r219, r219, r249
L61:
  AddInt       r228, r228, r11
  Jump         L62
L60:
  // json(result)
  JSON         r219
  // expect len(result) == 0
  Len          r251, r219
  EqualInt     r252, r251, r6
  Expect       r252
  Return       r0
