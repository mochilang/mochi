func main (regs=865)
  // let store_sales = []
  Const        r0, []
  // from ss in store_sales
  Const        r1, []
  // group by s.s_store_id into g
  Const        r2, "s_store_id"
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Const        r3, "d_date"
  // channel: "store channel",
  Const        r4, "channel"
  // id: "store" + str(g.key),
  Const        r5, "id"
  Const        r6, "key"
  // sales: sum(from x in g select x.ss.ss_ext_sales_price),
  Const        r7, "sales"
  Const        r8, "ss"
  Const        r9, "ss_ext_sales_price"
  // returns: 0.0,
  Const        r10, "returns"
  // profit: sum(from x in g select x.ss.ss_net_profit),
  Const        r11, "profit"
  Const        r12, "ss_net_profit"
  // profit_loss: 0.0
  Const        r13, "profit_loss"
  // from ss in store_sales
  MakeMap      r14, 0, r0
  Const        r15, []
  IterPrep     r17, r0
  Len          r18, r17
  Const        r19, 0
L8:
  LessInt      r20, r19, r18
  JumpIfFalse  r20, L0
  Index        r22, r17, r19
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  IterPrep     r23, r0
  Len          r24, r23
  Const        r25, 0
L7:
  LessInt      r26, r25, r24
  JumpIfFalse  r26, L1
  Index        r28, r23, r25
  Const        r29, "ss_sold_date_sk"
  Index        r30, r22, r29
  Const        r31, "d_date_sk"
  Index        r32, r28, r31
  Equal        r33, r30, r32
  JumpIfFalse  r33, L2
  // join s in store on ss.ss_store_sk == s.s_store_sk
  IterPrep     r34, r0
  Len          r35, r34
  Const        r36, 0
L6:
  LessInt      r37, r36, r35
  JumpIfFalse  r37, L2
  Index        r39, r34, r36
  Const        r40, "ss_store_sk"
  Index        r41, r22, r40
  Const        r42, "s_store_sk"
  Index        r43, r39, r42
  Equal        r44, r41, r43
  JumpIfFalse  r44, L3
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Index        r45, r28, r3
  Const        r46, "1998-12-01"
  LessEq       r47, r46, r45
  Index        r48, r28, r3
  Const        r49, "1998-12-15"
  LessEq       r50, r48, r49
  JumpIfFalse  r47, L4
  Move         r47, r50
L4:
  JumpIfFalse  r47, L3
  // from ss in store_sales
  Move         r51, r22
  Const        r52, "d"
  Move         r53, r28
  Const        r54, "s"
  Move         r55, r39
  MakeMap      r56, 3, r8
  // group by s.s_store_id into g
  Index        r57, r39, r2
  Str          r58, r57
  In           r59, r58, r14
  JumpIfTrue   r59, L5
  // from ss in store_sales
  Const        r60, []
  Const        r61, "__group__"
  Const        r62, true
  Const        r63, "key"
  // group by s.s_store_id into g
  Move         r64, r57
  // from ss in store_sales
  Const        r65, "items"
  Move         r66, r60
  Const        r67, "count"
  Const        r68, 0
  Move         r69, r61
  Move         r70, r62
  Move         r71, r63
  Move         r72, r64
  Move         r73, r65
  Move         r74, r66
  Move         r75, r67
  Move         r76, r68
  MakeMap      r77, 4, r69
  SetIndex     r14, r58, r77
  Append       r15, r15, r77
L5:
  Const        r79, "items"
  Index        r80, r14, r58
  Index        r81, r80, r79
  Append       r82, r81, r56
  SetIndex     r80, r79, r82
  Const        r83, "count"
  Index        r84, r80, r83
  Const        r85, 1
  AddInt       r86, r84, r85
  SetIndex     r80, r83, r86
L3:
  // join s in store on ss.ss_store_sk == s.s_store_sk
  AddInt       r36, r36, r85
  Jump         L6
L2:
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  AddInt       r25, r25, r85
  Jump         L7
L1:
  // from ss in store_sales
  AddInt       r19, r19, r85
  Jump         L8
L0:
  Const        r88, 0
  Move         r87, r88
  Len          r89, r15
L14:
  LessInt      r90, r87, r89
  JumpIfFalse  r90, L9
  Index        r92, r15, r87
  // channel: "store channel",
  Const        r93, "channel"
  Const        r94, "store channel"
  // id: "store" + str(g.key),
  Const        r95, "id"
  Const        r96, "store"
  Index        r97, r92, r6
  Str          r98, r97
  Add          r99, r96, r98
  // sales: sum(from x in g select x.ss.ss_ext_sales_price),
  Const        r100, "sales"
  Const        r101, []
  IterPrep     r102, r92
  Len          r103, r102
  Move         r104, r88
L11:
  LessInt      r105, r104, r103
  JumpIfFalse  r105, L10
  Index        r107, r102, r104
  Index        r108, r107, r8
  Index        r109, r108, r9
  Append       r101, r101, r109
  AddInt       r104, r104, r85
  Jump         L11
L10:
  Sum          r111, r101
  // returns: 0.0,
  Const        r112, "returns"
  Const        r113, 0
  // profit: sum(from x in g select x.ss.ss_net_profit),
  Const        r114, "profit"
  Const        r115, []
  IterPrep     r116, r92
  Len          r117, r116
  Move         r118, r88
L13:
  LessInt      r119, r118, r117
  JumpIfFalse  r119, L12
  Index        r107, r116, r118
  Index        r121, r107, r8
  Index        r122, r121, r12
  Append       r115, r115, r122
  AddInt       r118, r118, r85
  Jump         L13
L12:
  Sum          r124, r115
  // profit_loss: 0.0
  Const        r125, "profit_loss"
  // channel: "store channel",
  Move         r126, r93
  Move         r127, r94
  // id: "store" + str(g.key),
  Move         r128, r95
  Move         r129, r99
  // sales: sum(from x in g select x.ss.ss_ext_sales_price),
  Move         r130, r100
  Move         r131, r111
  // returns: 0.0,
  Move         r132, r112
  Move         r133, r113
  // profit: sum(from x in g select x.ss.ss_net_profit),
  Move         r134, r114
  Move         r135, r124
  // profit_loss: 0.0
  Move         r136, r125
  Move         r137, r113
  // select {
  MakeMap      r138, 6, r126
  // from ss in store_sales
  Append       r1, r1, r138
  AddInt       r87, r87, r85
  Jump         L14
L9:
  // from sr in store_returns
  Const        r140, []
  // returns: sum(from x in g select x.sr.sr_return_amt),
  Const        r141, "sr"
  Const        r142, "sr_return_amt"
  // profit_loss: sum(from x in g select x.sr.sr_net_loss)
  Const        r143, "sr_net_loss"
  // from sr in store_returns
  MakeMap      r144, 0, r0
  Const        r146, []
  Move         r145, r146
  IterPrep     r147, r0
  Len          r148, r147
  Const        r149, 0
L23:
  LessInt      r150, r149, r148
  JumpIfFalse  r150, L15
  Index        r152, r147, r149
  // join d in date_dim on sr.sr_returned_date_sk == d.d_date_sk
  IterPrep     r153, r0
  Len          r154, r153
  Const        r155, 0
L22:
  LessInt      r156, r155, r154
  JumpIfFalse  r156, L16
  Index        r158, r153, r155
  Const        r159, "sr_returned_date_sk"
  Index        r160, r152, r159
  Index        r161, r158, r31
  Equal        r162, r160, r161
  JumpIfFalse  r162, L17
  // join s in store on sr.sr_store_sk == s.s_store_sk
  IterPrep     r163, r0
  Len          r164, r163
  Const        r165, 0
L21:
  LessInt      r166, r165, r164
  JumpIfFalse  r166, L17
  Index        r168, r163, r165
  Const        r169, "sr_store_sk"
  Index        r170, r152, r169
  Index        r171, r168, r42
  Equal        r172, r170, r171
  JumpIfFalse  r172, L18
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Index        r173, r158, r3
  LessEq       r174, r46, r173
  Index        r175, r158, r3
  LessEq       r176, r175, r49
  JumpIfFalse  r174, L19
  Move         r174, r176
L19:
  JumpIfFalse  r174, L18
  // from sr in store_returns
  Move         r177, r152
  Move         r178, r158
  Move         r179, r168
  MakeMap      r180, 3, r141
  // group by s.s_store_id into g
  Index        r181, r168, r2
  Str          r182, r181
  In           r183, r182, r144
  JumpIfTrue   r183, L20
  // from sr in store_returns
  Const        r184, []
  Const        r185, "__group__"
  Const        r186, true
  Const        r187, "key"
  // group by s.s_store_id into g
  Move         r188, r181
  // from sr in store_returns
  Const        r189, "items"
  Move         r190, r184
  Const        r191, "count"
  Const        r192, 0
  Move         r193, r185
  Move         r194, r186
  Move         r195, r187
  Move         r196, r188
  Move         r197, r189
  Move         r198, r190
  Move         r199, r191
  Move         r200, r192
  MakeMap      r201, 4, r193
  SetIndex     r144, r182, r201
  Append       r145, r145, r201
L20:
  Index        r203, r144, r182
  Index        r204, r203, r79
  Append       r205, r204, r180
  SetIndex     r203, r79, r205
  Index        r206, r203, r83
  AddInt       r207, r206, r85
  SetIndex     r203, r83, r207
L18:
  // join s in store on sr.sr_store_sk == s.s_store_sk
  AddInt       r165, r165, r85
  Jump         L21
L17:
  // join d in date_dim on sr.sr_returned_date_sk == d.d_date_sk
  AddInt       r155, r155, r85
  Jump         L22
L16:
  // from sr in store_returns
  AddInt       r149, r149, r85
  Jump         L23
L15:
  Move         r208, r88
  Len          r209, r145
L29:
  LessInt      r210, r208, r209
  JumpIfFalse  r210, L24
  Index        r92, r145, r208
  // channel: "store channel",
  Const        r212, "channel"
  // id: "store" + str(g.key),
  Const        r213, "id"
  Index        r214, r92, r6
  Str          r215, r214
  Add          r216, r96, r215
  // sales: 0.0,
  Const        r217, "sales"
  // returns: sum(from x in g select x.sr.sr_return_amt),
  Const        r218, "returns"
  Const        r219, []
  IterPrep     r220, r92
  Len          r221, r220
  Move         r222, r88
L26:
  LessInt      r223, r222, r221
  JumpIfFalse  r223, L25
  Index        r107, r220, r222
  Index        r225, r107, r141
  Index        r226, r225, r142
  Append       r219, r219, r226
  AddInt       r222, r222, r85
  Jump         L26
L25:
  Sum          r228, r219
  // profit: 0.0,
  Const        r229, "profit"
  // profit_loss: sum(from x in g select x.sr.sr_net_loss)
  Const        r230, "profit_loss"
  Const        r231, []
  IterPrep     r232, r92
  Len          r233, r232
  Move         r234, r88
L28:
  LessInt      r235, r234, r233
  JumpIfFalse  r235, L27
  Index        r107, r232, r234
  Index        r237, r107, r141
  Index        r238, r237, r143
  Append       r231, r231, r238
  AddInt       r234, r234, r85
  Jump         L28
L27:
  Sum          r240, r231
  // channel: "store channel",
  Move         r241, r212
  Move         r242, r94
  // id: "store" + str(g.key),
  Move         r243, r213
  Move         r244, r216
  // sales: 0.0,
  Move         r245, r217
  Move         r246, r113
  // returns: sum(from x in g select x.sr.sr_return_amt),
  Move         r247, r218
  Move         r248, r228
  // profit: 0.0,
  Move         r249, r229
  Move         r250, r113
  // profit_loss: sum(from x in g select x.sr.sr_net_loss)
  Move         r251, r230
  Move         r252, r240
  // select {
  MakeMap      r253, 6, r241
  // from sr in store_returns
  Append       r140, r140, r253
  AddInt       r208, r208, r85
  Jump         L29
L24:
  // from cs in catalog_sales
  Const        r255, []
  // group by cp.cp_catalog_page_id into g
  Const        r256, "cp_catalog_page_id"
  // sales: sum(from x in g select x.cs.cs_ext_sales_price),
  Const        r257, "cs"
  Const        r258, "cs_ext_sales_price"
  // profit: sum(from x in g select x.cs.cs_net_profit),
  Const        r259, "cs_net_profit"
  // from cs in catalog_sales
  MakeMap      r260, 0, r0
  Const        r262, []
  Move         r261, r262
  IterPrep     r263, r0
  Len          r264, r263
  Const        r265, 0
L38:
  LessInt      r266, r265, r264
  JumpIfFalse  r266, L30
  Index        r268, r263, r265
  // join d in date_dim on cs.cs_sold_date_sk == d.d_date_sk
  IterPrep     r269, r0
  Len          r270, r269
  Const        r271, 0
L37:
  LessInt      r272, r271, r270
  JumpIfFalse  r272, L31
  Index        r274, r269, r271
  Const        r275, "cs_sold_date_sk"
  Index        r276, r268, r275
  Index        r277, r274, r31
  Equal        r278, r276, r277
  JumpIfFalse  r278, L32
  // join cp in catalog_page on cs.cs_catalog_page_sk == cp.cp_catalog_page_sk
  IterPrep     r279, r0
  Len          r280, r279
  Const        r281, 0
L36:
  LessInt      r282, r281, r280
  JumpIfFalse  r282, L32
  Index        r284, r279, r281
  Const        r285, "cs_catalog_page_sk"
  Index        r286, r268, r285
  Const        r287, "cp_catalog_page_sk"
  Index        r288, r284, r287
  Equal        r289, r286, r288
  JumpIfFalse  r289, L33
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Index        r290, r274, r3
  LessEq       r291, r46, r290
  Index        r292, r274, r3
  LessEq       r293, r292, r49
  JumpIfFalse  r291, L34
  Move         r291, r293
L34:
  JumpIfFalse  r291, L33
  // from cs in catalog_sales
  Move         r294, r268
  Move         r295, r274
  Const        r296, "cp"
  Move         r297, r284
  MakeMap      r298, 3, r257
  // group by cp.cp_catalog_page_id into g
  Index        r299, r284, r256
  Str          r300, r299
  In           r301, r300, r260
  JumpIfTrue   r301, L35
  // from cs in catalog_sales
  Const        r302, []
  Const        r303, "__group__"
  Const        r304, true
  Const        r305, "key"
  // group by cp.cp_catalog_page_id into g
  Move         r306, r299
  // from cs in catalog_sales
  Const        r307, "items"
  Move         r308, r302
  Const        r309, "count"
  Const        r310, 0
  Move         r311, r303
  Move         r312, r304
  Move         r313, r305
  Move         r314, r306
  Move         r315, r307
  Move         r316, r308
  Move         r317, r309
  Move         r318, r310
  MakeMap      r319, 4, r311
  SetIndex     r260, r300, r319
  Append       r261, r261, r319
L35:
  Index        r321, r260, r300
  Index        r322, r321, r79
  Append       r323, r322, r298
  SetIndex     r321, r79, r323
  Index        r324, r321, r83
  AddInt       r325, r324, r85
  SetIndex     r321, r83, r325
L33:
  // join cp in catalog_page on cs.cs_catalog_page_sk == cp.cp_catalog_page_sk
  AddInt       r281, r281, r85
  Jump         L36
L32:
  // join d in date_dim on cs.cs_sold_date_sk == d.d_date_sk
  AddInt       r271, r271, r85
  Jump         L37
L31:
  // from cs in catalog_sales
  AddInt       r265, r265, r85
  Jump         L38
L30:
  Move         r326, r88
  Len          r327, r261
L44:
  LessInt      r328, r326, r327
  JumpIfFalse  r328, L39
  Index        r92, r261, r326
  // channel: "catalog channel",
  Const        r330, "channel"
  Const        r331, "catalog channel"
  // id: "catalog_page" + str(g.key),
  Const        r332, "id"
  Const        r333, "catalog_page"
  Index        r334, r92, r6
  Str          r335, r334
  Add          r336, r333, r335
  // sales: sum(from x in g select x.cs.cs_ext_sales_price),
  Const        r337, "sales"
  Const        r338, []
  IterPrep     r339, r92
  Len          r340, r339
  Move         r341, r88
L41:
  LessInt      r342, r341, r340
  JumpIfFalse  r342, L40
  Index        r107, r339, r341
  Index        r344, r107, r257
  Index        r345, r344, r258
  Append       r338, r338, r345
  AddInt       r341, r341, r85
  Jump         L41
L40:
  Sum          r347, r338
  // returns: 0.0,
  Const        r348, "returns"
  // profit: sum(from x in g select x.cs.cs_net_profit),
  Const        r349, "profit"
  Const        r350, []
  IterPrep     r351, r92
  Len          r352, r351
  Move         r353, r88
L43:
  LessInt      r354, r353, r352
  JumpIfFalse  r354, L42
  Index        r107, r351, r353
  Index        r356, r107, r257
  Index        r357, r356, r259
  Append       r350, r350, r357
  AddInt       r353, r353, r85
  Jump         L43
L42:
  Sum          r359, r350
  // profit_loss: 0.0
  Const        r360, "profit_loss"
  // channel: "catalog channel",
  Move         r361, r330
  Move         r362, r331
  // id: "catalog_page" + str(g.key),
  Move         r363, r332
  Move         r364, r336
  // sales: sum(from x in g select x.cs.cs_ext_sales_price),
  Move         r365, r337
  Move         r366, r347
  // returns: 0.0,
  Move         r367, r348
  Move         r368, r113
  // profit: sum(from x in g select x.cs.cs_net_profit),
  Move         r369, r349
  Move         r370, r359
  // profit_loss: 0.0
  Move         r371, r360
  Move         r372, r113
  // select {
  MakeMap      r373, 6, r361
  // from cs in catalog_sales
  Append       r255, r255, r373
  AddInt       r326, r326, r85
  Jump         L44
L39:
  // from cr in catalog_returns
  Const        r375, []
  // returns: sum(from x in g select x.cr.cr_return_amount),
  Const        r376, "cr"
  Const        r377, "cr_return_amount"
  // profit_loss: sum(from x in g select x.cr.cr_net_loss)
  Const        r378, "cr_net_loss"
  // from cr in catalog_returns
  MakeMap      r379, 0, r0
  Const        r381, []
  Move         r380, r381
  IterPrep     r382, r0
  Len          r383, r382
  Const        r384, 0
L53:
  LessInt      r385, r384, r383
  JumpIfFalse  r385, L45
  Index        r387, r382, r384
  // join d in date_dim on cr.cr_returned_date_sk == d.d_date_sk
  IterPrep     r388, r0
  Len          r389, r388
  Const        r390, 0
L52:
  LessInt      r391, r390, r389
  JumpIfFalse  r391, L46
  Index        r393, r388, r390
  Const        r394, "cr_returned_date_sk"
  Index        r395, r387, r394
  Index        r396, r393, r31
  Equal        r397, r395, r396
  JumpIfFalse  r397, L47
  // join cp in catalog_page on cr.cr_catalog_page_sk == cp.cp_catalog_page_sk
  IterPrep     r398, r0
  Len          r399, r398
  Const        r400, 0
L51:
  LessInt      r401, r400, r399
  JumpIfFalse  r401, L47
  Index        r403, r398, r400
  Const        r404, "cr_catalog_page_sk"
  Index        r405, r387, r404
  Index        r406, r403, r287
  Equal        r407, r405, r406
  JumpIfFalse  r407, L48
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Index        r408, r393, r3
  LessEq       r409, r46, r408
  Index        r410, r393, r3
  LessEq       r411, r410, r49
  JumpIfFalse  r409, L49
  Move         r409, r411
L49:
  JumpIfFalse  r409, L48
  // from cr in catalog_returns
  Move         r412, r387
  Move         r413, r393
  Move         r414, r403
  MakeMap      r415, 3, r376
  // group by cp.cp_catalog_page_id into g
  Index        r416, r403, r256
  Str          r417, r416
  In           r418, r417, r379
  JumpIfTrue   r418, L50
  // from cr in catalog_returns
  Const        r419, []
  Const        r420, "__group__"
  Const        r421, true
  Const        r422, "key"
  // group by cp.cp_catalog_page_id into g
  Move         r423, r416
  // from cr in catalog_returns
  Const        r424, "items"
  Move         r425, r419
  Const        r426, "count"
  Const        r427, 0
  Move         r428, r420
  Move         r429, r421
  Move         r430, r422
  Move         r431, r423
  Move         r432, r424
  Move         r433, r425
  Move         r434, r426
  Move         r435, r427
  MakeMap      r436, 4, r428
  SetIndex     r379, r417, r436
  Append       r380, r380, r436
L50:
  Index        r438, r379, r417
  Index        r439, r438, r79
  Append       r440, r439, r415
  SetIndex     r438, r79, r440
  Index        r441, r438, r83
  AddInt       r442, r441, r85
  SetIndex     r438, r83, r442
L48:
  // join cp in catalog_page on cr.cr_catalog_page_sk == cp.cp_catalog_page_sk
  AddInt       r400, r400, r85
  Jump         L51
L47:
  // join d in date_dim on cr.cr_returned_date_sk == d.d_date_sk
  AddInt       r390, r390, r85
  Jump         L52
L46:
  // from cr in catalog_returns
  AddInt       r384, r384, r85
  Jump         L53
L45:
  Move         r443, r88
  Len          r444, r380
L59:
  LessInt      r445, r443, r444
  JumpIfFalse  r445, L54
  Index        r92, r380, r443
  // channel: "catalog channel",
  Const        r447, "channel"
  // id: "catalog_page" + str(g.key),
  Const        r448, "id"
  Index        r449, r92, r6
  Str          r450, r449
  Add          r451, r333, r450
  // sales: 0.0,
  Const        r452, "sales"
  // returns: sum(from x in g select x.cr.cr_return_amount),
  Const        r453, "returns"
  Const        r454, []
  IterPrep     r455, r92
  Len          r456, r455
  Move         r457, r88
L56:
  LessInt      r458, r457, r456
  JumpIfFalse  r458, L55
  Index        r107, r455, r457
  Index        r460, r107, r376
  Index        r461, r460, r377
  Append       r454, r454, r461
  AddInt       r457, r457, r85
  Jump         L56
L55:
  Sum          r463, r454
  // profit: 0.0,
  Const        r464, "profit"
  // profit_loss: sum(from x in g select x.cr.cr_net_loss)
  Const        r465, "profit_loss"
  Const        r466, []
  IterPrep     r467, r92
  Len          r468, r467
  Move         r469, r88
L58:
  LessInt      r470, r469, r468
  JumpIfFalse  r470, L57
  Index        r107, r467, r469
  Index        r472, r107, r376
  Index        r473, r472, r378
  Append       r466, r466, r473
  AddInt       r469, r469, r85
  Jump         L58
L57:
  Sum          r475, r466
  // channel: "catalog channel",
  Move         r476, r447
  Move         r477, r331
  // id: "catalog_page" + str(g.key),
  Move         r478, r448
  Move         r479, r451
  // sales: 0.0,
  Move         r480, r452
  Move         r481, r113
  // returns: sum(from x in g select x.cr.cr_return_amount),
  Move         r482, r453
  Move         r483, r463
  // profit: 0.0,
  Move         r484, r464
  Move         r485, r113
  // profit_loss: sum(from x in g select x.cr.cr_net_loss)
  Move         r486, r465
  Move         r487, r475
  // select {
  MakeMap      r488, 6, r476
  // from cr in catalog_returns
  Append       r375, r375, r488
  AddInt       r443, r443, r85
  Jump         L59
L54:
  // from ws in web_sales
  Const        r490, []
  // group by w.web_site_id into g
  Const        r491, "web_site_id"
  // sales: sum(from x in g select x.ws.ws_ext_sales_price),
  Const        r492, "ws"
  Const        r493, "ws_ext_sales_price"
  // profit: sum(from x in g select x.ws.ws_net_profit),
  Const        r494, "ws_net_profit"
  // from ws in web_sales
  MakeMap      r495, 0, r0
  Const        r497, []
  Move         r496, r497
  IterPrep     r498, r0
  Len          r499, r498
  Const        r500, 0
L68:
  LessInt      r501, r500, r499
  JumpIfFalse  r501, L60
  Index        r503, r498, r500
  // join d in date_dim on ws.ws_sold_date_sk == d.d_date_sk
  IterPrep     r504, r0
  Len          r505, r504
  Const        r506, 0
L67:
  LessInt      r507, r506, r505
  JumpIfFalse  r507, L61
  Index        r509, r504, r506
  Const        r510, "ws_sold_date_sk"
  Index        r511, r503, r510
  Index        r512, r509, r31
  Equal        r513, r511, r512
  JumpIfFalse  r513, L62
  // join w in web_site on ws.ws_web_site_sk == w.web_site_sk
  IterPrep     r514, r0
  Len          r515, r514
  Const        r516, 0
L66:
  LessInt      r517, r516, r515
  JumpIfFalse  r517, L62
  Index        r519, r514, r516
  Const        r520, "ws_web_site_sk"
  Index        r521, r503, r520
  Const        r522, "web_site_sk"
  Index        r523, r519, r522
  Equal        r524, r521, r523
  JumpIfFalse  r524, L63
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Index        r525, r509, r3
  LessEq       r526, r46, r525
  Index        r527, r509, r3
  LessEq       r528, r527, r49
  JumpIfFalse  r526, L64
  Move         r526, r528
L64:
  JumpIfFalse  r526, L63
  // from ws in web_sales
  Move         r529, r503
  Move         r530, r509
  Const        r531, "w"
  Move         r532, r519
  MakeMap      r533, 3, r492
  // group by w.web_site_id into g
  Index        r534, r519, r491
  Str          r535, r534
  In           r536, r535, r495
  JumpIfTrue   r536, L65
  // from ws in web_sales
  Const        r537, []
  Const        r538, "__group__"
  Const        r539, true
  Const        r540, "key"
  // group by w.web_site_id into g
  Move         r541, r534
  // from ws in web_sales
  Const        r542, "items"
  Move         r543, r537
  Const        r544, "count"
  Const        r545, 0
  Move         r546, r538
  Move         r547, r539
  Move         r548, r540
  Move         r549, r541
  Move         r550, r542
  Move         r551, r543
  Move         r552, r544
  Move         r553, r545
  MakeMap      r554, 4, r546
  SetIndex     r495, r535, r554
  Append       r496, r496, r554
L65:
  Index        r556, r495, r535
  Index        r557, r556, r79
  Append       r558, r557, r533
  SetIndex     r556, r79, r558
  Index        r559, r556, r83
  AddInt       r560, r559, r85
  SetIndex     r556, r83, r560
L63:
  // join w in web_site on ws.ws_web_site_sk == w.web_site_sk
  AddInt       r516, r516, r85
  Jump         L66
L62:
  // join d in date_dim on ws.ws_sold_date_sk == d.d_date_sk
  AddInt       r506, r506, r85
  Jump         L67
L61:
  // from ws in web_sales
  AddInt       r500, r500, r85
  Jump         L68
L60:
  Move         r561, r88
  Len          r562, r496
L74:
  LessInt      r563, r561, r562
  JumpIfFalse  r563, L69
  Index        r92, r496, r561
  // channel: "web channel",
  Const        r565, "channel"
  Const        r566, "web channel"
  // id: "web_site" + str(g.key),
  Const        r567, "id"
  Const        r568, "web_site"
  Index        r569, r92, r6
  Str          r570, r569
  Add          r571, r568, r570
  // sales: sum(from x in g select x.ws.ws_ext_sales_price),
  Const        r572, "sales"
  Const        r573, []
  IterPrep     r574, r92
  Len          r575, r574
  Move         r576, r88
L71:
  LessInt      r577, r576, r575
  JumpIfFalse  r577, L70
  Index        r107, r574, r576
  Index        r579, r107, r492
  Index        r580, r579, r493
  Append       r573, r573, r580
  AddInt       r576, r576, r85
  Jump         L71
L70:
  Sum          r582, r573
  // returns: 0.0,
  Const        r583, "returns"
  // profit: sum(from x in g select x.ws.ws_net_profit),
  Const        r584, "profit"
  Const        r585, []
  IterPrep     r586, r92
  Len          r587, r586
  Move         r588, r88
L73:
  LessInt      r589, r588, r587
  JumpIfFalse  r589, L72
  Index        r107, r586, r588
  Index        r591, r107, r492
  Index        r592, r591, r494
  Append       r585, r585, r592
  AddInt       r588, r588, r85
  Jump         L73
L72:
  Sum          r594, r585
  // profit_loss: 0.0
  Const        r595, "profit_loss"
  // channel: "web channel",
  Move         r596, r565
  Move         r597, r566
  // id: "web_site" + str(g.key),
  Move         r598, r567
  Move         r599, r571
  // sales: sum(from x in g select x.ws.ws_ext_sales_price),
  Move         r600, r572
  Move         r601, r582
  // returns: 0.0,
  Move         r602, r583
  Move         r603, r113
  // profit: sum(from x in g select x.ws.ws_net_profit),
  Move         r604, r584
  Move         r605, r594
  // profit_loss: 0.0
  Move         r606, r595
  Move         r607, r113
  // select {
  MakeMap      r608, 6, r596
  // from ws in web_sales
  Append       r490, r490, r608
  AddInt       r561, r561, r85
  Jump         L74
L69:
  // from wr in web_returns
  Const        r610, []
  // returns: sum(from x in g select x.wr.wr_return_amt),
  Const        r611, "wr"
  Const        r612, "wr_return_amt"
  // profit_loss: sum(from x in g select x.wr.wr_net_loss)
  Const        r613, "wr_net_loss"
  // from wr in web_returns
  MakeMap      r614, 0, r0
  Const        r616, []
  Move         r615, r616
  IterPrep     r617, r0
  Len          r618, r617
  Const        r619, 0
L86:
  LessInt      r620, r619, r618
  JumpIfFalse  r620, L75
  Index        r622, r617, r619
  // join ws in web_sales on wr.wr_item_sk == ws.ws_item_sk && wr.wr_order_number == ws.ws_order_number
  IterPrep     r623, r0
  Len          r624, r623
  Const        r625, 0
L85:
  LessInt      r626, r625, r624
  JumpIfFalse  r626, L76
  Index        r490, r623, r625
  Const        r628, "wr_item_sk"
  Index        r629, r622, r628
  Const        r630, "ws_item_sk"
  Index        r631, r490, r630
  Equal        r632, r629, r631
  Const        r633, "wr_order_number"
  Index        r634, r622, r633
  Const        r635, "ws_order_number"
  Index        r636, r490, r635
  Equal        r637, r634, r636
  JumpIfFalse  r632, L77
  Move         r632, r637
L77:
  JumpIfFalse  r632, L78
  // join d in date_dim on wr.wr_returned_date_sk == d.d_date_sk
  IterPrep     r638, r0
  Len          r639, r638
  Const        r640, 0
L84:
  LessInt      r641, r640, r639
  JumpIfFalse  r641, L78
  Index        r643, r638, r640
  Const        r644, "wr_returned_date_sk"
  Index        r645, r622, r644
  Index        r646, r643, r31
  Equal        r647, r645, r646
  JumpIfFalse  r647, L79
  // join w in web_site on ws.ws_web_site_sk == w.web_site_sk
  IterPrep     r648, r0
  Len          r649, r648
  Const        r650, 0
L83:
  LessInt      r651, r650, r649
  JumpIfFalse  r651, L79
  Index        r653, r648, r650
  Index        r654, r490, r520
  Index        r655, r653, r522
  Equal        r656, r654, r655
  JumpIfFalse  r656, L80
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Index        r657, r643, r3
  LessEq       r658, r46, r657
  Index        r659, r643, r3
  LessEq       r660, r659, r49
  JumpIfFalse  r658, L81
  Move         r658, r660
L81:
  JumpIfFalse  r658, L80
  // from wr in web_returns
  Move         r661, r622
  Move         r662, r490
  Move         r663, r643
  Move         r664, r653
  MakeMap      r665, 4, r611
  // group by w.web_site_id into g
  Index        r666, r653, r491
  Str          r667, r666
  In           r668, r667, r614
  JumpIfTrue   r668, L82
  // from wr in web_returns
  Const        r669, []
  Const        r670, "__group__"
  Const        r671, true
  Const        r672, "key"
  // group by w.web_site_id into g
  Move         r673, r666
  // from wr in web_returns
  Const        r674, "items"
  Move         r675, r669
  Const        r676, "count"
  Const        r677, 0
  Move         r678, r670
  Move         r679, r671
  Move         r680, r672
  Move         r681, r673
  Move         r682, r674
  Move         r683, r675
  Move         r684, r676
  Move         r685, r677
  MakeMap      r686, 4, r678
  SetIndex     r614, r667, r686
  Append       r615, r615, r686
L82:
  Index        r688, r614, r667
  Index        r689, r688, r79
  Append       r690, r689, r665
  SetIndex     r688, r79, r690
  Index        r691, r688, r83
  AddInt       r692, r691, r85
  SetIndex     r688, r83, r692
L80:
  // join w in web_site on ws.ws_web_site_sk == w.web_site_sk
  AddInt       r650, r650, r85
  Jump         L83
L79:
  // join d in date_dim on wr.wr_returned_date_sk == d.d_date_sk
  AddInt       r640, r640, r85
  Jump         L84
L78:
  // join ws in web_sales on wr.wr_item_sk == ws.ws_item_sk && wr.wr_order_number == ws.ws_order_number
  AddInt       r625, r625, r85
  Jump         L85
L76:
  // from wr in web_returns
  AddInt       r619, r619, r85
  Jump         L86
L75:
  Move         r693, r88
  Len          r694, r615
L92:
  LessInt      r695, r693, r694
  JumpIfFalse  r695, L87
  Index        r92, r615, r693
  // channel: "web channel",
  Const        r697, "channel"
  // id: "web_site" + str(g.key),
  Const        r698, "id"
  Index        r699, r92, r6
  Str          r700, r699
  Add          r701, r568, r700
  // sales: 0.0,
  Const        r702, "sales"
  // returns: sum(from x in g select x.wr.wr_return_amt),
  Const        r703, "returns"
  Const        r704, []
  IterPrep     r705, r92
  Len          r706, r705
  Move         r707, r88
L89:
  LessInt      r708, r707, r706
  JumpIfFalse  r708, L88
  Index        r107, r705, r707
  Index        r710, r107, r611
  Index        r711, r710, r612
  Append       r704, r704, r711
  AddInt       r707, r707, r85
  Jump         L89
L88:
  Sum          r713, r704
  // profit: 0.0,
  Const        r714, "profit"
  // profit_loss: sum(from x in g select x.wr.wr_net_loss)
  Const        r715, "profit_loss"
  Const        r716, []
  IterPrep     r717, r92
  Len          r718, r717
  Move         r719, r88
L91:
  LessInt      r720, r719, r718
  JumpIfFalse  r720, L90
  Index        r107, r717, r719
  Index        r722, r107, r611
  Index        r723, r722, r613
  Append       r716, r716, r723
  AddInt       r719, r719, r85
  Jump         L91
L90:
  Sum          r725, r716
  // channel: "web channel",
  Move         r726, r697
  Move         r727, r566
  // id: "web_site" + str(g.key),
  Move         r728, r698
  Move         r729, r701
  // sales: 0.0,
  Move         r730, r702
  Move         r731, r113
  // returns: sum(from x in g select x.wr.wr_return_amt),
  Move         r732, r703
  Move         r733, r713
  // profit: 0.0,
  Move         r734, r714
  Move         r735, r113
  // profit_loss: sum(from x in g select x.wr.wr_net_loss)
  Move         r736, r715
  Move         r737, r725
  // select {
  MakeMap      r738, 6, r726
  // from wr in web_returns
  Append       r610, r610, r738
  AddInt       r693, r693, r85
  Jump         L92
L87:
  // let per_channel = concat(ss union all sr, cs union all cr, ws union all wr)
  UnionAll     r740, r1, r140
  UnionAll     r741, r255, r375
  UnionAll     r742, r740, r741
  UnionAll     r743, r490, r610
  UnionAll     r744, r742, r743
  // from p in per_channel
  Const        r745, []
  // sales: sum(from x in g select x.p.sales),
  Const        r746, "p"
  // from p in per_channel
  IterPrep     r747, r744
  Len          r748, r747
  Const        r749, 0
  MakeMap      r750, 0, r0
  Const        r751, []
L95:
  LessInt      r753, r749, r748
  JumpIfFalse  r753, L93
  Index        r754, r747, r749
  Move         r755, r754
  // group by { channel: p.channel, id: p.id } into g
  Const        r756, "channel"
  Index        r757, r755, r4
  Const        r758, "id"
  Index        r759, r755, r5
  Move         r760, r756
  Move         r761, r757
  Move         r762, r758
  Move         r763, r759
  MakeMap      r764, 2, r760
  Str          r765, r764
  In           r766, r765, r750
  JumpIfTrue   r766, L94
  // from p in per_channel
  Const        r767, []
  Const        r768, "__group__"
  Const        r769, true
  Const        r770, "key"
  // group by { channel: p.channel, id: p.id } into g
  Move         r771, r764
  // from p in per_channel
  Const        r772, "items"
  Move         r773, r767
  Const        r774, "count"
  Const        r775, 0
  Move         r776, r768
  Move         r777, r769
  Move         r778, r770
  Move         r779, r771
  Move         r780, r772
  Move         r781, r773
  Move         r782, r774
  Move         r783, r775
  MakeMap      r784, 4, r776
  SetIndex     r750, r765, r784
  Append       r751, r751, r784
L94:
  Index        r786, r750, r765
  Index        r787, r786, r79
  Append       r788, r787, r754
  SetIndex     r786, r79, r788
  Index        r789, r786, r83
  AddInt       r790, r789, r85
  SetIndex     r786, r83, r790
  AddInt       r749, r749, r85
  Jump         L95
L93:
  Move         r791, r88
  Len          r792, r751
L105:
  LessInt      r793, r791, r792
  JumpIfFalse  r793, L96
  Index        r92, r751, r791
  // channel: g.key.channel,
  Const        r795, "channel"
  Index        r796, r92, r6
  Index        r797, r796, r4
  // id: g.key.id,
  Const        r798, "id"
  Index        r799, r92, r6
  Index        r800, r799, r5
  // sales: sum(from x in g select x.p.sales),
  Const        r801, "sales"
  Const        r802, []
  IterPrep     r803, r92
  Len          r804, r803
  Move         r805, r88
L98:
  LessInt      r806, r805, r804
  JumpIfFalse  r806, L97
  Index        r107, r803, r805
  Index        r808, r107, r746
  Index        r809, r808, r7
  Append       r802, r802, r809
  AddInt       r805, r805, r85
  Jump         L98
L97:
  Sum          r811, r802
  // returns: sum(from x in g select x.p.returns),
  Const        r812, "returns"
  Const        r813, []
  IterPrep     r814, r92
  Len          r815, r814
  Move         r816, r88
L100:
  LessInt      r817, r816, r815
  JumpIfFalse  r817, L99
  Index        r107, r814, r816
  Index        r819, r107, r746
  Index        r820, r819, r10
  Append       r813, r813, r820
  AddInt       r816, r816, r85
  Jump         L100
L99:
  Sum          r822, r813
  // profit: sum(from x in g select x.p.profit) - sum(from x in g select x.p.profit_loss)
  Const        r823, "profit"
  Const        r824, []
  IterPrep     r825, r92
  Len          r826, r825
  Move         r827, r88
L102:
  LessInt      r828, r827, r826
  JumpIfFalse  r828, L101
  Index        r107, r825, r827
  Index        r830, r107, r746
  Index        r831, r830, r11
  Append       r824, r824, r831
  AddInt       r827, r827, r85
  Jump         L102
L101:
  Sum          r833, r824
  Const        r834, []
  IterPrep     r835, r92
  Len          r836, r835
  Move         r837, r88
L104:
  LessInt      r838, r837, r836
  JumpIfFalse  r838, L103
  Index        r107, r835, r837
  Index        r840, r107, r746
  Index        r841, r840, r13
  Append       r834, r834, r841
  AddInt       r837, r837, r85
  Jump         L104
L103:
  Sum          r843, r834
  Sub          r844, r833, r843
  // channel: g.key.channel,
  Move         r845, r795
  Move         r846, r797
  // id: g.key.id,
  Move         r847, r798
  Move         r848, r800
  // sales: sum(from x in g select x.p.sales),
  Move         r849, r801
  Move         r850, r811
  // returns: sum(from x in g select x.p.returns),
  Move         r851, r812
  Move         r852, r822
  // profit: sum(from x in g select x.p.profit) - sum(from x in g select x.p.profit_loss)
  Move         r853, r823
  Move         r854, r844
  // select {
  MakeMap      r855, 5, r845
  // sort by g.key.channel
  Index        r856, r92, r6
  Index        r858, r856, r4
  // from p in per_channel
  Move         r859, r855
  MakeList     r860, 2, r858
  Append       r745, r745, r860
  AddInt       r791, r791, r85
  Jump         L105
L96:
  // sort by g.key.channel
  Sort         r745, r745
  // json(result)
  JSON         r745
  // expect len(result) == 0
  Len          r863, r745
  EqualInt     r864, r863, r88
  Expect       r864
  Return       r0
