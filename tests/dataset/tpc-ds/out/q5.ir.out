func main (regs=856)
  // let store_sales = []
  Const        r0, []
  // from ss in store_sales
  Const        r1, []
  // group by s.s_store_id into g
  Const        r2, "s_store_id"
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Const        r3, "d_date"
  // channel: "store channel",
  Const        r4, "channel"
  // id: "store" + str(g.key),
  Const        r5, "id"
  Const        r6, "key"
  // sales: sum(from x in g select x.ss.ss_ext_sales_price),
  Const        r7, "sales"
  Const        r8, "ss"
  Const        r9, "ss_ext_sales_price"
  // returns: 0.0,
  Const        r10, "returns"
  // profit: sum(from x in g select x.ss.ss_net_profit),
  Const        r11, "profit"
  Const        r12, "ss_net_profit"
  // profit_loss: 0.0
  Const        r13, "profit_loss"
  // from ss in store_sales
  MakeMap      r14, 0, r0
  Move         r15, r0
  IterPrep     r16, r0
  Len          r17, r16
  Const        r18, 0
L8:
  LessInt      r19, r18, r17
  JumpIfFalse  r19, L0
  Index        r20, r16, r18
  Move         r21, r20
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  IterPrep     r22, r0
  Len          r23, r22
  Const        r24, 0
L7:
  LessInt      r25, r24, r23
  JumpIfFalse  r25, L1
  Index        r26, r22, r24
  Move         r27, r26
  Const        r28, "ss_sold_date_sk"
  Index        r29, r21, r28
  Const        r30, "d_date_sk"
  Index        r31, r27, r30
  Equal        r32, r29, r31
  JumpIfFalse  r32, L2
  // join s in store on ss.ss_store_sk == s.s_store_sk
  IterPrep     r33, r0
  Len          r34, r33
  Const        r35, 0
L6:
  LessInt      r36, r35, r34
  JumpIfFalse  r36, L2
  Index        r37, r33, r35
  Move         r38, r37
  Const        r39, "ss_store_sk"
  Index        r40, r21, r39
  Const        r41, "s_store_sk"
  Index        r42, r38, r41
  Equal        r43, r40, r42
  JumpIfFalse  r43, L3
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Index        r44, r27, r3
  Const        r45, "1998-12-01"
  LessEq       r46, r45, r44
  Index        r47, r27, r3
  Const        r48, "1998-12-15"
  LessEq       r49, r47, r48
  Move         r50, r46
  JumpIfFalse  r50, L4
  Move         r50, r49
L4:
  JumpIfFalse  r50, L3
  // from ss in store_sales
  Move         r51, r21
  Const        r52, "d"
  Move         r53, r27
  Const        r54, "s"
  Move         r55, r38
  Move         r56, r8
  Move         r57, r51
  Move         r58, r52
  Move         r59, r53
  Move         r60, r54
  Move         r61, r55
  MakeMap      r62, 3, r56
  // group by s.s_store_id into g
  Index        r63, r38, r2
  Str          r64, r63
  In           r65, r64, r14
  JumpIfTrue   r65, L5
  // from ss in store_sales
  Const        r66, "__group__"
  Const        r67, true
  // group by s.s_store_id into g
  Move         r68, r63
  // from ss in store_sales
  Const        r69, "items"
  Move         r70, r0
  Const        r71, "count"
  Const        r72, 0
  Move         r73, r66
  Move         r74, r67
  Move         r75, r6
  Move         r76, r68
  Move         r77, r69
  Move         r78, r70
  Move         r79, r71
  Move         r80, r72
  MakeMap      r81, 4, r73
  SetIndex     r14, r64, r81
  Append       r82, r15, r81
  Move         r15, r82
L5:
  Index        r83, r14, r64
  Index        r84, r83, r69
  Append       r85, r84, r62
  SetIndex     r83, r69, r85
  Index        r86, r83, r71
  Const        r87, 1
  AddInt       r88, r86, r87
  SetIndex     r83, r71, r88
L3:
  // join s in store on ss.ss_store_sk == s.s_store_sk
  AddInt       r35, r35, r87
  Jump         L6
L2:
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  AddInt       r24, r24, r87
  Jump         L7
L1:
  // from ss in store_sales
  AddInt       r18, r18, r87
  Jump         L8
L0:
  Move         r89, r72
  Len          r90, r15
L14:
  LessInt      r91, r89, r90
  JumpIfFalse  r91, L9
  Index        r92, r15, r89
  Move         r93, r92
  // channel: "store channel",
  Const        r94, "channel"
  Const        r95, "store channel"
  // id: "store" + str(g.key),
  Const        r96, "id"
  Const        r97, "store"
  Index        r98, r93, r6
  Str          r99, r98
  Add          r100, r97, r99
  // sales: sum(from x in g select x.ss.ss_ext_sales_price),
  Const        r101, "sales"
  Const        r102, []
  IterPrep     r103, r93
  Len          r104, r103
  Move         r105, r72
L11:
  LessInt      r106, r105, r104
  JumpIfFalse  r106, L10
  Index        r107, r103, r105
  Move         r108, r107
  Index        r109, r108, r8
  Index        r110, r109, r9
  Append       r111, r102, r110
  Move         r102, r111
  AddInt       r105, r105, r87
  Jump         L11
L10:
  Sum          r112, r102
  // returns: 0.0,
  Const        r113, "returns"
  Const        r114, 0.0
  // profit: sum(from x in g select x.ss.ss_net_profit),
  Const        r115, "profit"
  Const        r116, []
  IterPrep     r117, r93
  Len          r118, r117
  Move         r119, r72
L13:
  LessInt      r120, r119, r118
  JumpIfFalse  r120, L12
  Index        r121, r117, r119
  Move         r108, r121
  Index        r122, r108, r8
  Index        r123, r122, r12
  Append       r124, r116, r123
  Move         r116, r124
  AddInt       r119, r119, r87
  Jump         L13
L12:
  Sum          r125, r116
  // profit_loss: 0.0
  Const        r126, "profit_loss"
  // channel: "store channel",
  Move         r127, r94
  Move         r128, r95
  // id: "store" + str(g.key),
  Move         r129, r96
  Move         r130, r100
  // sales: sum(from x in g select x.ss.ss_ext_sales_price),
  Move         r131, r101
  Move         r132, r112
  // returns: 0.0,
  Move         r133, r113
  Move         r134, r114
  // profit: sum(from x in g select x.ss.ss_net_profit),
  Move         r135, r115
  Move         r136, r125
  // profit_loss: 0.0
  Move         r137, r126
  Move         r138, r114
  // select {
  MakeMap      r139, 6, r127
  // from ss in store_sales
  Append       r140, r1, r139
  Move         r1, r140
  AddInt       r89, r89, r87
  Jump         L14
L9:
  // from sr in store_returns
  Const        r141, []
  // returns: sum(from x in g select x.sr.sr_return_amt),
  Const        r142, "sr"
  Const        r143, "sr_return_amt"
  // profit_loss: sum(from x in g select x.sr.sr_net_loss)
  Const        r144, "sr_net_loss"
  // from sr in store_returns
  MakeMap      r145, 0, r0
  Move         r146, r0
  IterPrep     r147, r0
  Len          r148, r147
  Const        r149, 0
L23:
  LessInt      r150, r149, r148
  JumpIfFalse  r150, L15
  Index        r151, r147, r149
  Move         r152, r151
  // join d in date_dim on sr.sr_returned_date_sk == d.d_date_sk
  IterPrep     r153, r0
  Len          r154, r153
  Const        r155, 0
L22:
  LessInt      r156, r155, r154
  JumpIfFalse  r156, L16
  Index        r157, r153, r155
  Move         r158, r157
  Const        r159, "sr_returned_date_sk"
  Index        r160, r152, r159
  Index        r161, r158, r30
  Equal        r162, r160, r161
  JumpIfFalse  r162, L17
  // join s in store on sr.sr_store_sk == s.s_store_sk
  IterPrep     r163, r0
  Len          r164, r163
  Const        r165, 0
L21:
  LessInt      r166, r165, r164
  JumpIfFalse  r166, L17
  Index        r167, r163, r165
  Move         r168, r167
  Const        r169, "sr_store_sk"
  Index        r170, r152, r169
  Index        r171, r168, r41
  Equal        r172, r170, r171
  JumpIfFalse  r172, L18
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Index        r173, r158, r3
  LessEq       r174, r45, r173
  Index        r175, r158, r3
  LessEq       r176, r175, r48
  Move         r177, r174
  JumpIfFalse  r177, L19
  Move         r177, r176
L19:
  JumpIfFalse  r177, L18
  // from sr in store_returns
  Move         r178, r152
  Move         r179, r158
  Move         r180, r168
  Move         r181, r142
  Move         r182, r178
  Move         r183, r52
  Move         r184, r179
  Move         r185, r54
  Move         r186, r180
  MakeMap      r187, 3, r181
  // group by s.s_store_id into g
  Index        r188, r168, r2
  Str          r189, r188
  In           r190, r189, r145
  JumpIfTrue   r190, L20
  Move         r191, r188
  // from sr in store_returns
  Move         r192, r0
  Move         r193, r66
  Move         r194, r67
  Move         r195, r6
  Move         r196, r191
  Move         r197, r69
  Move         r198, r192
  Move         r199, r71
  Move         r200, r72
  MakeMap      r201, 4, r193
  SetIndex     r145, r189, r201
  Append       r202, r146, r201
  Move         r146, r202
L20:
  Index        r203, r145, r189
  Index        r204, r203, r69
  Append       r205, r204, r187
  SetIndex     r203, r69, r205
  Index        r206, r203, r71
  AddInt       r207, r206, r87
  SetIndex     r203, r71, r207
L18:
  // join s in store on sr.sr_store_sk == s.s_store_sk
  AddInt       r165, r165, r87
  Jump         L21
L17:
  // join d in date_dim on sr.sr_returned_date_sk == d.d_date_sk
  AddInt       r155, r155, r87
  Jump         L22
L16:
  // from sr in store_returns
  AddInt       r149, r149, r87
  Jump         L23
L15:
  Move         r208, r72
  Len          r209, r146
L29:
  LessInt      r210, r208, r209
  JumpIfFalse  r210, L24
  Index        r211, r146, r208
  Move         r93, r211
  // channel: "store channel",
  Const        r212, "channel"
  // id: "store" + str(g.key),
  Const        r213, "id"
  Index        r214, r93, r6
  Str          r215, r214
  Add          r216, r97, r215
  // sales: 0.0,
  Const        r217, "sales"
  // returns: sum(from x in g select x.sr.sr_return_amt),
  Const        r218, "returns"
  Const        r219, []
  IterPrep     r220, r93
  Len          r221, r220
  Move         r222, r72
L26:
  LessInt      r223, r222, r221
  JumpIfFalse  r223, L25
  Index        r224, r220, r222
  Move         r108, r224
  Index        r225, r108, r142
  Index        r226, r225, r143
  Append       r227, r219, r226
  Move         r219, r227
  AddInt       r222, r222, r87
  Jump         L26
L25:
  Sum          r228, r219
  // profit: 0.0,
  Const        r229, "profit"
  // profit_loss: sum(from x in g select x.sr.sr_net_loss)
  Const        r230, "profit_loss"
  Const        r231, []
  IterPrep     r232, r93
  Len          r233, r232
  Move         r234, r72
L28:
  LessInt      r235, r234, r233
  JumpIfFalse  r235, L27
  Index        r236, r232, r234
  Move         r108, r236
  Index        r237, r108, r142
  Index        r238, r237, r144
  Append       r239, r231, r238
  Move         r231, r239
  AddInt       r234, r234, r87
  Jump         L28
L27:
  Sum          r240, r231
  // channel: "store channel",
  Move         r241, r212
  Move         r242, r95
  // id: "store" + str(g.key),
  Move         r243, r213
  Move         r244, r216
  // sales: 0.0,
  Move         r245, r217
  Move         r246, r114
  // returns: sum(from x in g select x.sr.sr_return_amt),
  Move         r247, r218
  Move         r248, r228
  // profit: 0.0,
  Move         r249, r229
  Move         r250, r114
  // profit_loss: sum(from x in g select x.sr.sr_net_loss)
  Move         r251, r230
  Move         r252, r240
  // select {
  MakeMap      r253, 6, r241
  // from sr in store_returns
  Append       r254, r141, r253
  Move         r141, r254
  AddInt       r208, r208, r87
  Jump         L29
L24:
  // from cs in catalog_sales
  Const        r255, []
  // group by cp.cp_catalog_page_id into g
  Const        r256, "cp_catalog_page_id"
  // sales: sum(from x in g select x.cs.cs_ext_sales_price),
  Const        r257, "cs"
  Const        r258, "cs_ext_sales_price"
  // profit: sum(from x in g select x.cs.cs_net_profit),
  Const        r259, "cs_net_profit"
  // from cs in catalog_sales
  MakeMap      r260, 0, r0
  Move         r261, r0
  IterPrep     r262, r0
  Len          r263, r262
  Const        r264, 0
L38:
  LessInt      r265, r264, r263
  JumpIfFalse  r265, L30
  Index        r266, r262, r264
  Move         r267, r266
  // join d in date_dim on cs.cs_sold_date_sk == d.d_date_sk
  IterPrep     r268, r0
  Len          r269, r268
  Const        r270, 0
L37:
  LessInt      r271, r270, r269
  JumpIfFalse  r271, L31
  Index        r272, r268, r270
  Move         r273, r272
  Const        r274, "cs_sold_date_sk"
  Index        r275, r267, r274
  Index        r276, r273, r30
  Equal        r277, r275, r276
  JumpIfFalse  r277, L32
  // join cp in catalog_page on cs.cs_catalog_page_sk == cp.cp_catalog_page_sk
  IterPrep     r278, r0
  Len          r279, r278
  Const        r280, 0
L36:
  LessInt      r281, r280, r279
  JumpIfFalse  r281, L32
  Index        r282, r278, r280
  Move         r283, r282
  Const        r284, "cs_catalog_page_sk"
  Index        r285, r267, r284
  Const        r286, "cp_catalog_page_sk"
  Index        r287, r283, r286
  Equal        r288, r285, r287
  JumpIfFalse  r288, L33
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Index        r289, r273, r3
  LessEq       r290, r45, r289
  Index        r291, r273, r3
  LessEq       r292, r291, r48
  Move         r293, r290
  JumpIfFalse  r293, L34
  Move         r293, r292
L34:
  JumpIfFalse  r293, L33
  // from cs in catalog_sales
  Move         r294, r267
  Move         r295, r273
  Const        r296, "cp"
  Move         r297, r283
  Move         r298, r257
  Move         r299, r294
  Move         r300, r52
  Move         r301, r295
  Move         r302, r296
  Move         r303, r297
  MakeMap      r304, 3, r298
  // group by cp.cp_catalog_page_id into g
  Index        r305, r283, r256
  Str          r306, r305
  In           r307, r306, r260
  JumpIfTrue   r307, L35
  Move         r308, r305
  // from cs in catalog_sales
  Move         r309, r0
  Move         r310, r66
  Move         r311, r67
  Move         r312, r6
  Move         r313, r308
  Move         r314, r69
  Move         r315, r309
  Move         r316, r71
  Move         r317, r72
  MakeMap      r318, 4, r310
  SetIndex     r260, r306, r318
  Append       r319, r261, r318
  Move         r261, r319
L35:
  Index        r320, r260, r306
  Index        r321, r320, r69
  Append       r322, r321, r304
  SetIndex     r320, r69, r322
  Index        r323, r320, r71
  AddInt       r324, r323, r87
  SetIndex     r320, r71, r324
L33:
  // join cp in catalog_page on cs.cs_catalog_page_sk == cp.cp_catalog_page_sk
  AddInt       r280, r280, r87
  Jump         L36
L32:
  // join d in date_dim on cs.cs_sold_date_sk == d.d_date_sk
  AddInt       r270, r270, r87
  Jump         L37
L31:
  // from cs in catalog_sales
  AddInt       r264, r264, r87
  Jump         L38
L30:
  Move         r325, r72
  Len          r326, r261
L44:
  LessInt      r327, r325, r326
  JumpIfFalse  r327, L39
  Index        r328, r261, r325
  Move         r93, r328
  // channel: "catalog channel",
  Const        r329, "channel"
  Const        r330, "catalog channel"
  // id: "catalog_page" + str(g.key),
  Const        r331, "id"
  Const        r332, "catalog_page"
  Index        r333, r93, r6
  Str          r334, r333
  Add          r335, r332, r334
  // sales: sum(from x in g select x.cs.cs_ext_sales_price),
  Const        r336, "sales"
  Const        r337, []
  IterPrep     r338, r93
  Len          r339, r338
  Move         r340, r72
L41:
  LessInt      r341, r340, r339
  JumpIfFalse  r341, L40
  Index        r342, r338, r340
  Move         r108, r342
  Index        r343, r108, r257
  Index        r344, r343, r258
  Append       r345, r337, r344
  Move         r337, r345
  AddInt       r340, r340, r87
  Jump         L41
L40:
  Sum          r346, r337
  // returns: 0.0,
  Const        r347, "returns"
  // profit: sum(from x in g select x.cs.cs_net_profit),
  Const        r348, "profit"
  Const        r349, []
  IterPrep     r350, r93
  Len          r351, r350
  Move         r352, r72
L43:
  LessInt      r353, r352, r351
  JumpIfFalse  r353, L42
  Index        r354, r350, r352
  Move         r108, r354
  Index        r355, r108, r257
  Index        r356, r355, r259
  Append       r357, r349, r356
  Move         r349, r357
  AddInt       r352, r352, r87
  Jump         L43
L42:
  Sum          r358, r349
  // profit_loss: 0.0
  Const        r359, "profit_loss"
  // channel: "catalog channel",
  Move         r360, r329
  Move         r361, r330
  // id: "catalog_page" + str(g.key),
  Move         r362, r331
  Move         r363, r335
  // sales: sum(from x in g select x.cs.cs_ext_sales_price),
  Move         r364, r336
  Move         r365, r346
  // returns: 0.0,
  Move         r366, r347
  Move         r367, r114
  // profit: sum(from x in g select x.cs.cs_net_profit),
  Move         r368, r348
  Move         r369, r358
  // profit_loss: 0.0
  Move         r370, r359
  Move         r371, r114
  // select {
  MakeMap      r372, 6, r360
  // from cs in catalog_sales
  Append       r373, r255, r372
  Move         r255, r373
  AddInt       r325, r325, r87
  Jump         L44
L39:
  // from cr in catalog_returns
  Const        r374, []
  // returns: sum(from x in g select x.cr.cr_return_amount),
  Const        r375, "cr"
  Const        r376, "cr_return_amount"
  // profit_loss: sum(from x in g select x.cr.cr_net_loss)
  Const        r377, "cr_net_loss"
  // from cr in catalog_returns
  MakeMap      r378, 0, r0
  Move         r379, r0
  IterPrep     r380, r0
  Len          r381, r380
  Const        r382, 0
L53:
  LessInt      r383, r382, r381
  JumpIfFalse  r383, L45
  Index        r384, r380, r382
  Move         r385, r384
  // join d in date_dim on cr.cr_returned_date_sk == d.d_date_sk
  IterPrep     r386, r0
  Len          r387, r386
  Const        r388, 0
L52:
  LessInt      r389, r388, r387
  JumpIfFalse  r389, L46
  Index        r390, r386, r388
  Move         r391, r390
  Const        r392, "cr_returned_date_sk"
  Index        r393, r385, r392
  Index        r394, r391, r30
  Equal        r395, r393, r394
  JumpIfFalse  r395, L47
  // join cp in catalog_page on cr.cr_catalog_page_sk == cp.cp_catalog_page_sk
  IterPrep     r396, r0
  Len          r397, r396
  Const        r398, 0
L51:
  LessInt      r399, r398, r397
  JumpIfFalse  r399, L47
  Index        r400, r396, r398
  Move         r401, r400
  Const        r402, "cr_catalog_page_sk"
  Index        r403, r385, r402
  Index        r404, r401, r286
  Equal        r405, r403, r404
  JumpIfFalse  r405, L48
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Index        r406, r391, r3
  LessEq       r407, r45, r406
  Index        r408, r391, r3
  LessEq       r409, r408, r48
  Move         r410, r407
  JumpIfFalse  r410, L49
  Move         r410, r409
L49:
  JumpIfFalse  r410, L48
  // from cr in catalog_returns
  Move         r411, r385
  Move         r412, r391
  Move         r413, r401
  Move         r414, r375
  Move         r415, r411
  Move         r416, r52
  Move         r417, r412
  Move         r418, r296
  Move         r419, r413
  MakeMap      r420, 3, r414
  // group by cp.cp_catalog_page_id into g
  Index        r421, r401, r256
  Str          r422, r421
  In           r423, r422, r378
  JumpIfTrue   r423, L50
  Move         r424, r421
  // from cr in catalog_returns
  Move         r425, r0
  Move         r426, r66
  Move         r427, r67
  Move         r428, r6
  Move         r429, r424
  Move         r430, r69
  Move         r431, r425
  Move         r432, r71
  Move         r433, r72
  MakeMap      r434, 4, r426
  SetIndex     r378, r422, r434
  Append       r435, r379, r434
  Move         r379, r435
L50:
  Index        r436, r378, r422
  Index        r437, r436, r69
  Append       r438, r437, r420
  SetIndex     r436, r69, r438
  Index        r439, r436, r71
  AddInt       r440, r439, r87
  SetIndex     r436, r71, r440
L48:
  // join cp in catalog_page on cr.cr_catalog_page_sk == cp.cp_catalog_page_sk
  AddInt       r398, r398, r87
  Jump         L51
L47:
  // join d in date_dim on cr.cr_returned_date_sk == d.d_date_sk
  AddInt       r388, r388, r87
  Jump         L52
L46:
  // from cr in catalog_returns
  AddInt       r382, r382, r87
  Jump         L53
L45:
  Move         r441, r72
  Len          r442, r379
L59:
  LessInt      r443, r441, r442
  JumpIfFalse  r443, L54
  Index        r444, r379, r441
  Move         r93, r444
  // channel: "catalog channel",
  Const        r445, "channel"
  // id: "catalog_page" + str(g.key),
  Const        r446, "id"
  Index        r447, r93, r6
  Str          r448, r447
  Add          r449, r332, r448
  // sales: 0.0,
  Const        r450, "sales"
  // returns: sum(from x in g select x.cr.cr_return_amount),
  Const        r451, "returns"
  Const        r452, []
  IterPrep     r453, r93
  Len          r454, r453
  Move         r455, r72
L56:
  LessInt      r456, r455, r454
  JumpIfFalse  r456, L55
  Index        r457, r453, r455
  Move         r108, r457
  Index        r458, r108, r375
  Index        r459, r458, r376
  Append       r460, r452, r459
  Move         r452, r460
  AddInt       r455, r455, r87
  Jump         L56
L55:
  Sum          r461, r452
  // profit: 0.0,
  Const        r462, "profit"
  // profit_loss: sum(from x in g select x.cr.cr_net_loss)
  Const        r463, "profit_loss"
  Const        r464, []
  IterPrep     r465, r93
  Len          r466, r465
  Move         r467, r72
L58:
  LessInt      r468, r467, r466
  JumpIfFalse  r468, L57
  Index        r469, r465, r467
  Move         r108, r469
  Index        r470, r108, r375
  Index        r471, r470, r377
  Append       r472, r464, r471
  Move         r464, r472
  AddInt       r467, r467, r87
  Jump         L58
L57:
  Sum          r473, r464
  // channel: "catalog channel",
  Move         r474, r445
  Move         r475, r330
  // id: "catalog_page" + str(g.key),
  Move         r476, r446
  Move         r477, r449
  // sales: 0.0,
  Move         r478, r450
  Move         r479, r114
  // returns: sum(from x in g select x.cr.cr_return_amount),
  Move         r480, r451
  Move         r481, r461
  // profit: 0.0,
  Move         r482, r462
  Move         r483, r114
  // profit_loss: sum(from x in g select x.cr.cr_net_loss)
  Move         r484, r463
  Move         r485, r473
  // select {
  MakeMap      r486, 6, r474
  // from cr in catalog_returns
  Append       r487, r374, r486
  Move         r374, r487
  AddInt       r441, r441, r87
  Jump         L59
L54:
  // from ws in web_sales
  Const        r488, []
  // group by w.web_site_id into g
  Const        r489, "web_site_id"
  // sales: sum(from x in g select x.ws.ws_ext_sales_price),
  Const        r490, "ws"
  Const        r491, "ws_ext_sales_price"
  // profit: sum(from x in g select x.ws.ws_net_profit),
  Const        r492, "ws_net_profit"
  // from ws in web_sales
  MakeMap      r493, 0, r0
  Move         r494, r0
  IterPrep     r495, r0
  Len          r496, r495
  Const        r497, 0
L68:
  LessInt      r498, r497, r496
  JumpIfFalse  r498, L60
  Index        r499, r495, r497
  Move         r500, r499
  // join d in date_dim on ws.ws_sold_date_sk == d.d_date_sk
  IterPrep     r501, r0
  Len          r502, r501
  Const        r503, 0
L67:
  LessInt      r504, r503, r502
  JumpIfFalse  r504, L61
  Index        r505, r501, r503
  Move         r506, r505
  Const        r507, "ws_sold_date_sk"
  Index        r508, r500, r507
  Index        r509, r506, r30
  Equal        r510, r508, r509
  JumpIfFalse  r510, L62
  // join w in web_site on ws.ws_web_site_sk == w.web_site_sk
  IterPrep     r511, r0
  Len          r512, r511
  Const        r513, 0
L66:
  LessInt      r514, r513, r512
  JumpIfFalse  r514, L62
  Index        r515, r511, r513
  Move         r516, r515
  Const        r517, "ws_web_site_sk"
  Index        r518, r500, r517
  Const        r519, "web_site_sk"
  Index        r520, r516, r519
  Equal        r521, r518, r520
  JumpIfFalse  r521, L63
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Index        r522, r506, r3
  LessEq       r523, r45, r522
  Index        r524, r506, r3
  LessEq       r525, r524, r48
  Move         r526, r523
  JumpIfFalse  r526, L64
  Move         r526, r525
L64:
  JumpIfFalse  r526, L63
  // from ws in web_sales
  Move         r527, r500
  Move         r528, r506
  Const        r529, "w"
  Move         r530, r516
  Move         r531, r490
  Move         r532, r527
  Move         r533, r52
  Move         r534, r528
  Move         r535, r529
  Move         r536, r530
  MakeMap      r537, 3, r531
  // group by w.web_site_id into g
  Index        r538, r516, r489
  Str          r539, r538
  In           r540, r539, r493
  JumpIfTrue   r540, L65
  Move         r541, r538
  // from ws in web_sales
  Move         r542, r0
  Move         r543, r66
  Move         r544, r67
  Move         r545, r6
  Move         r546, r541
  Move         r547, r69
  Move         r548, r542
  Move         r549, r71
  Move         r550, r72
  MakeMap      r551, 4, r543
  SetIndex     r493, r539, r551
  Append       r552, r494, r551
  Move         r494, r552
L65:
  Index        r553, r493, r539
  Index        r554, r553, r69
  Append       r555, r554, r537
  SetIndex     r553, r69, r555
  Index        r556, r553, r71
  AddInt       r557, r556, r87
  SetIndex     r553, r71, r557
L63:
  // join w in web_site on ws.ws_web_site_sk == w.web_site_sk
  AddInt       r513, r513, r87
  Jump         L66
L62:
  // join d in date_dim on ws.ws_sold_date_sk == d.d_date_sk
  AddInt       r503, r503, r87
  Jump         L67
L61:
  // from ws in web_sales
  AddInt       r497, r497, r87
  Jump         L68
L60:
  Move         r558, r72
  Len          r559, r494
L74:
  LessInt      r560, r558, r559
  JumpIfFalse  r560, L69
  Index        r561, r494, r558
  Move         r93, r561
  // channel: "web channel",
  Const        r562, "channel"
  Const        r563, "web channel"
  // id: "web_site" + str(g.key),
  Const        r564, "id"
  Const        r565, "web_site"
  Index        r566, r93, r6
  Str          r567, r566
  Add          r568, r565, r567
  // sales: sum(from x in g select x.ws.ws_ext_sales_price),
  Const        r569, "sales"
  Const        r570, []
  IterPrep     r571, r93
  Len          r572, r571
  Move         r573, r72
L71:
  LessInt      r574, r573, r572
  JumpIfFalse  r574, L70
  Index        r575, r571, r573
  Move         r108, r575
  Index        r576, r108, r490
  Index        r577, r576, r491
  Append       r578, r570, r577
  Move         r570, r578
  AddInt       r573, r573, r87
  Jump         L71
L70:
  Sum          r579, r570
  // returns: 0.0,
  Const        r580, "returns"
  // profit: sum(from x in g select x.ws.ws_net_profit),
  Const        r581, "profit"
  Const        r582, []
  IterPrep     r583, r93
  Len          r584, r583
  Move         r585, r72
L73:
  LessInt      r586, r585, r584
  JumpIfFalse  r586, L72
  Index        r587, r583, r585
  Move         r108, r587
  Index        r588, r108, r490
  Index        r589, r588, r492
  Append       r590, r582, r589
  Move         r582, r590
  AddInt       r585, r585, r87
  Jump         L73
L72:
  Sum          r591, r582
  // profit_loss: 0.0
  Const        r592, "profit_loss"
  // channel: "web channel",
  Move         r593, r562
  Move         r594, r563
  // id: "web_site" + str(g.key),
  Move         r595, r564
  Move         r596, r568
  // sales: sum(from x in g select x.ws.ws_ext_sales_price),
  Move         r597, r569
  Move         r598, r579
  // returns: 0.0,
  Move         r599, r580
  Move         r600, r114
  // profit: sum(from x in g select x.ws.ws_net_profit),
  Move         r601, r581
  Move         r602, r591
  // profit_loss: 0.0
  Move         r603, r592
  Move         r604, r114
  // select {
  MakeMap      r605, 6, r593
  // from ws in web_sales
  Append       r606, r488, r605
  Move         r488, r606
  AddInt       r558, r558, r87
  Jump         L74
L69:
  // from wr in web_returns
  Const        r607, []
  // returns: sum(from x in g select x.wr.wr_return_amt),
  Const        r608, "wr"
  Const        r609, "wr_return_amt"
  // profit_loss: sum(from x in g select x.wr.wr_net_loss)
  Const        r610, "wr_net_loss"
  // from wr in web_returns
  MakeMap      r611, 0, r0
  Move         r612, r0
  IterPrep     r613, r0
  Len          r614, r613
  Const        r615, 0
L86:
  LessInt      r616, r615, r614
  JumpIfFalse  r616, L75
  Index        r617, r613, r615
  Move         r618, r617
  // join ws in web_sales on wr.wr_item_sk == ws.ws_item_sk && wr.wr_order_number == ws.ws_order_number
  IterPrep     r619, r0
  Len          r620, r619
  Const        r621, 0
L85:
  LessInt      r622, r621, r620
  JumpIfFalse  r622, L76
  Index        r623, r619, r621
  Move         r488, r623
  Const        r624, "wr_item_sk"
  Index        r625, r618, r624
  Const        r626, "ws_item_sk"
  Index        r627, r488, r626
  Equal        r628, r625, r627
  Const        r629, "wr_order_number"
  Index        r630, r618, r629
  Const        r631, "ws_order_number"
  Index        r632, r488, r631
  Equal        r633, r630, r632
  Move         r634, r628
  JumpIfFalse  r634, L77
  Move         r634, r633
L77:
  JumpIfFalse  r634, L78
  // join d in date_dim on wr.wr_returned_date_sk == d.d_date_sk
  IterPrep     r635, r0
  Len          r636, r635
  Const        r637, 0
L84:
  LessInt      r638, r637, r636
  JumpIfFalse  r638, L78
  Index        r639, r635, r637
  Move         r640, r639
  Const        r641, "wr_returned_date_sk"
  Index        r642, r618, r641
  Index        r643, r640, r30
  Equal        r644, r642, r643
  JumpIfFalse  r644, L79
  // join w in web_site on ws.ws_web_site_sk == w.web_site_sk
  IterPrep     r645, r0
  Len          r646, r645
  Const        r647, 0
L83:
  LessInt      r648, r647, r646
  JumpIfFalse  r648, L79
  Index        r649, r645, r647
  Move         r650, r649
  Index        r651, r488, r517
  Index        r652, r650, r519
  Equal        r653, r651, r652
  JumpIfFalse  r653, L80
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Index        r654, r640, r3
  LessEq       r655, r45, r654
  Index        r656, r640, r3
  LessEq       r657, r656, r48
  Move         r658, r655
  JumpIfFalse  r658, L81
  Move         r658, r657
L81:
  JumpIfFalse  r658, L80
  // from wr in web_returns
  Move         r659, r618
  Move         r660, r488
  Move         r661, r640
  Move         r662, r650
  Move         r663, r608
  Move         r664, r659
  Move         r665, r490
  Move         r666, r660
  Move         r667, r52
  Move         r668, r661
  Move         r669, r529
  Move         r670, r662
  MakeMap      r671, 4, r663
  // group by w.web_site_id into g
  Index        r672, r650, r489
  Str          r673, r672
  In           r674, r673, r611
  JumpIfTrue   r674, L82
  Move         r675, r672
  // from wr in web_returns
  Move         r676, r0
  Move         r677, r66
  Move         r678, r67
  Move         r679, r6
  Move         r680, r675
  Move         r681, r69
  Move         r682, r676
  Move         r683, r71
  Move         r684, r72
  MakeMap      r685, 4, r677
  SetIndex     r611, r673, r685
  Append       r686, r612, r685
  Move         r612, r686
L82:
  Index        r687, r611, r673
  Index        r688, r687, r69
  Append       r689, r688, r671
  SetIndex     r687, r69, r689
  Index        r690, r687, r71
  AddInt       r691, r690, r87
  SetIndex     r687, r71, r691
L80:
  // join w in web_site on ws.ws_web_site_sk == w.web_site_sk
  AddInt       r647, r647, r87
  Jump         L83
L79:
  // join d in date_dim on wr.wr_returned_date_sk == d.d_date_sk
  AddInt       r637, r637, r87
  Jump         L84
L78:
  // join ws in web_sales on wr.wr_item_sk == ws.ws_item_sk && wr.wr_order_number == ws.ws_order_number
  AddInt       r621, r621, r87
  Jump         L85
L76:
  // from wr in web_returns
  AddInt       r615, r615, r87
  Jump         L86
L75:
  Move         r692, r72
  Len          r693, r612
L92:
  LessInt      r694, r692, r693
  JumpIfFalse  r694, L87
  Index        r695, r612, r692
  Move         r93, r695
  // channel: "web channel",
  Const        r696, "channel"
  // id: "web_site" + str(g.key),
  Const        r697, "id"
  Index        r698, r93, r6
  Str          r699, r698
  Add          r700, r565, r699
  // sales: 0.0,
  Const        r701, "sales"
  // returns: sum(from x in g select x.wr.wr_return_amt),
  Const        r702, "returns"
  Const        r703, []
  IterPrep     r704, r93
  Len          r705, r704
  Move         r706, r72
L89:
  LessInt      r707, r706, r705
  JumpIfFalse  r707, L88
  Index        r708, r704, r706
  Move         r108, r708
  Index        r709, r108, r608
  Index        r710, r709, r609
  Append       r711, r703, r710
  Move         r703, r711
  AddInt       r706, r706, r87
  Jump         L89
L88:
  Sum          r712, r703
  // profit: 0.0,
  Const        r713, "profit"
  // profit_loss: sum(from x in g select x.wr.wr_net_loss)
  Const        r714, "profit_loss"
  Const        r715, []
  IterPrep     r716, r93
  Len          r717, r716
  Move         r718, r72
L91:
  LessInt      r719, r718, r717
  JumpIfFalse  r719, L90
  Index        r720, r716, r718
  Move         r108, r720
  Index        r721, r108, r608
  Index        r722, r721, r610
  Append       r723, r715, r722
  Move         r715, r723
  AddInt       r718, r718, r87
  Jump         L91
L90:
  Sum          r724, r715
  // channel: "web channel",
  Move         r725, r696
  Move         r726, r563
  // id: "web_site" + str(g.key),
  Move         r727, r697
  Move         r728, r700
  // sales: 0.0,
  Move         r729, r701
  Move         r730, r114
  // returns: sum(from x in g select x.wr.wr_return_amt),
  Move         r731, r702
  Move         r732, r712
  // profit: 0.0,
  Move         r733, r713
  Move         r734, r114
  // profit_loss: sum(from x in g select x.wr.wr_net_loss)
  Move         r735, r714
  Move         r736, r724
  // select {
  MakeMap      r737, 6, r725
  // from wr in web_returns
  Append       r738, r607, r737
  Move         r607, r738
  AddInt       r692, r692, r87
  Jump         L92
L87:
  // let per_channel = concat(ss union all sr, cs union all cr, ws union all wr)
  UnionAll     r739, r1, r141
  UnionAll     r740, r255, r374
  UnionAll     r741, r739, r740
  UnionAll     r742, r488, r607
  UnionAll     r743, r741, r742
  // from p in per_channel
  Const        r744, []
  // sales: sum(from x in g select x.p.sales),
  Const        r745, "p"
  // from p in per_channel
  IterPrep     r746, r743
  Len          r747, r746
  Const        r748, 0
  MakeMap      r749, 0, r0
  Move         r750, r0
L95:
  LessInt      r751, r748, r747
  JumpIfFalse  r751, L93
  Index        r752, r746, r748
  Move         r753, r752
  // group by { channel: p.channel, id: p.id } into g
  Const        r754, "channel"
  Index        r755, r753, r4
  Const        r756, "id"
  Index        r757, r753, r5
  Move         r758, r754
  Move         r759, r755
  Move         r760, r756
  Move         r761, r757
  MakeMap      r762, 2, r758
  Str          r763, r762
  In           r764, r763, r749
  JumpIfTrue   r764, L94
  Move         r765, r762
  // from p in per_channel
  Move         r766, r0
  Move         r767, r66
  Move         r768, r67
  Move         r769, r6
  Move         r770, r765
  Move         r771, r69
  Move         r772, r766
  Move         r773, r71
  Move         r774, r72
  MakeMap      r775, 4, r767
  SetIndex     r749, r763, r775
  Append       r776, r750, r775
  Move         r750, r776
L94:
  Index        r777, r749, r763
  Index        r778, r777, r69
  Append       r779, r778, r752
  SetIndex     r777, r69, r779
  Index        r780, r777, r71
  AddInt       r781, r780, r87
  SetIndex     r777, r71, r781
  AddInt       r748, r748, r87
  Jump         L95
L93:
  Move         r782, r72
  Len          r783, r750
L105:
  LessInt      r784, r782, r783
  JumpIfFalse  r784, L96
  Index        r785, r750, r782
  Move         r93, r785
  // channel: g.key.channel,
  Const        r786, "channel"
  Index        r787, r93, r6
  Index        r788, r787, r4
  // id: g.key.id,
  Const        r789, "id"
  Index        r790, r93, r6
  Index        r791, r790, r5
  // sales: sum(from x in g select x.p.sales),
  Const        r792, "sales"
  Const        r793, []
  IterPrep     r794, r93
  Len          r795, r794
  Move         r796, r72
L98:
  LessInt      r797, r796, r795
  JumpIfFalse  r797, L97
  Index        r798, r794, r796
  Move         r108, r798
  Index        r799, r108, r745
  Index        r800, r799, r7
  Append       r801, r793, r800
  Move         r793, r801
  AddInt       r796, r796, r87
  Jump         L98
L97:
  Sum          r802, r793
  // returns: sum(from x in g select x.p.returns),
  Const        r803, "returns"
  Const        r804, []
  IterPrep     r805, r93
  Len          r806, r805
  Move         r807, r72
L100:
  LessInt      r808, r807, r806
  JumpIfFalse  r808, L99
  Index        r809, r805, r807
  Move         r108, r809
  Index        r810, r108, r745
  Index        r811, r810, r10
  Append       r812, r804, r811
  Move         r804, r812
  AddInt       r807, r807, r87
  Jump         L100
L99:
  Sum          r813, r804
  // profit: sum(from x in g select x.p.profit) - sum(from x in g select x.p.profit_loss)
  Const        r814, "profit"
  Const        r815, []
  IterPrep     r816, r93
  Len          r817, r816
  Move         r818, r72
L102:
  LessInt      r819, r818, r817
  JumpIfFalse  r819, L101
  Index        r820, r816, r818
  Move         r108, r820
  Index        r821, r108, r745
  Index        r822, r821, r11
  Append       r823, r815, r822
  Move         r815, r823
  AddInt       r818, r818, r87
  Jump         L102
L101:
  Sum          r824, r815
  Const        r825, []
  IterPrep     r826, r93
  Len          r827, r826
  Move         r828, r72
L104:
  LessInt      r829, r828, r827
  JumpIfFalse  r829, L103
  Index        r830, r826, r828
  Move         r108, r830
  Index        r831, r108, r745
  Index        r832, r831, r13
  Append       r833, r825, r832
  Move         r825, r833
  AddInt       r828, r828, r87
  Jump         L104
L103:
  Sum          r834, r825
  Sub          r835, r824, r834
  // channel: g.key.channel,
  Move         r836, r786
  Move         r837, r788
  // id: g.key.id,
  Move         r838, r789
  Move         r839, r791
  // sales: sum(from x in g select x.p.sales),
  Move         r840, r792
  Move         r841, r802
  // returns: sum(from x in g select x.p.returns),
  Move         r842, r803
  Move         r843, r813
  // profit: sum(from x in g select x.p.profit) - sum(from x in g select x.p.profit_loss)
  Move         r844, r814
  Move         r845, r835
  // select {
  MakeMap      r846, 5, r836
  // sort by g.key.channel
  Index        r847, r93, r6
  Index        r848, r847, r4
  Move         r849, r848
  // from p in per_channel
  Move         r850, r846
  MakeList     r851, 2, r849
  Append       r852, r744, r851
  Move         r744, r852
  AddInt       r782, r782, r87
  Jump         L105
L96:
  // sort by g.key.channel
  Sort         r853, r744
  // from p in per_channel
  Move         r744, r853
  // json(result)
  JSON         r744
  // expect len(result) == 0
  Len          r854, r744
  EqualInt     r855, r854, r72
  Expect       r855
  Return       r0
