func main (regs=1189)
  // let store_sales = []
  Const        r0, []
  // let store_returns = []
  Const        r1, []
  // let store = []
  Const        r2, []
  // let catalog_sales = []
  Const        r3, []
  // let catalog_returns = []
  Const        r4, []
  // let catalog_page = []
  Const        r5, []
  // let web_sales = []
  Const        r6, []
  // let web_returns = []
  Const        r7, []
  // let web_site = []
  Const        r8, []
  // let date_dim = []
  Const        r9, []
  // from ss in store_sales
  Const        r10, []
  // group by s.s_store_id into g
  Const        r11, "s_store_id"
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Const        r12, "d_date"
  Const        r13, "d_date"
  // channel: "store channel",
  Const        r14, "channel"
  // id: "store" + str(g.key),
  Const        r15, "id"
  Const        r16, "key"
  // sales: sum(from x in g select x.ss.ss_ext_sales_price),
  Const        r17, "sales"
  Const        r18, "ss"
  Const        r19, "ss_ext_sales_price"
  // returns: 0.0,
  Const        r20, "returns"
  // profit: sum(from x in g select x.ss.ss_net_profit),
  Const        r21, "profit"
  Const        r22, "ss"
  Const        r23, "ss_net_profit"
  // profit_loss: 0.0
  Const        r24, "profit_loss"
  // from ss in store_sales
  MakeMap      r25, 0, r0
  Const        r26, []
  IterPrep     r28, r0
  Len          r29, r28
  Const        r30, 0
L8:
  LessInt      r31, r30, r29
  JumpIfFalse  r31, L0
  Index        r33, r28, r30
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  IterPrep     r34, r9
  Len          r35, r34
  Const        r36, 0
L7:
  LessInt      r37, r36, r35
  JumpIfFalse  r37, L1
  Index        r39, r34, r36
  Const        r40, "ss_sold_date_sk"
  Index        r41, r33, r40
  Const        r42, "d_date_sk"
  Index        r43, r39, r42
  Equal        r44, r41, r43
  JumpIfFalse  r44, L2
  // join s in store on ss.ss_store_sk == s.s_store_sk
  IterPrep     r45, r2
  Len          r46, r45
  Const        r47, 0
L6:
  LessInt      r48, r47, r46
  JumpIfFalse  r48, L2
  Index        r50, r45, r47
  Const        r51, "ss_store_sk"
  Index        r52, r33, r51
  Const        r53, "s_store_sk"
  Index        r54, r50, r53
  Equal        r55, r52, r54
  JumpIfFalse  r55, L3
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Const        r56, "d_date"
  Index        r57, r39, r56
  Const        r58, "1998-12-01"
  LessEq       r59, r58, r57
  Const        r60, "d_date"
  Index        r61, r39, r60
  Const        r62, "1998-12-15"
  LessEq       r63, r61, r62
  Move         r64, r59
  JumpIfFalse  r64, L4
  Move         r64, r63
L4:
  JumpIfFalse  r64, L3
  // from ss in store_sales
  Const        r65, "ss"
  Move         r66, r33
  Const        r67, "d"
  Move         r68, r39
  Const        r69, "s"
  Move         r70, r50
  MakeMap      r71, 3, r65
  // group by s.s_store_id into g
  Const        r72, "s_store_id"
  Index        r73, r50, r72
  Str          r74, r73
  In           r75, r74, r25
  JumpIfTrue   r75, L5
  // from ss in store_sales
  Const        r76, []
  Const        r77, "__group__"
  Const        r78, true
  Const        r79, "key"
  // group by s.s_store_id into g
  Move         r80, r73
  // from ss in store_sales
  Const        r81, "items"
  Move         r82, r76
  Const        r83, "count"
  Const        r84, 0
  Move         r85, r77
  Move         r86, r78
  Move         r87, r79
  Move         r88, r80
  Move         r89, r81
  Move         r90, r82
  Move         r91, r83
  Move         r92, r84
  MakeMap      r93, 4, r85
  SetIndex     r25, r74, r93
  Append       r26, r26, r93
L5:
  Const        r95, "items"
  Index        r96, r25, r74
  Index        r97, r96, r95
  Append       r98, r97, r71
  SetIndex     r96, r95, r98
  Const        r99, "count"
  Index        r100, r96, r99
  Const        r101, 1
  AddInt       r102, r100, r101
  SetIndex     r96, r99, r102
L3:
  // join s in store on ss.ss_store_sk == s.s_store_sk
  Const        r103, 1
  AddInt       r47, r47, r103
  Jump         L6
L2:
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  Const        r104, 1
  AddInt       r36, r36, r104
  Jump         L7
L1:
  // from ss in store_sales
  Const        r105, 1
  AddInt       r30, r30, r105
  Jump         L8
L0:
  Const        r106, 0
  Len          r108, r26
L14:
  LessInt      r109, r106, r108
  JumpIfFalse  r109, L9
  Index        r111, r26, r106
  // channel: "store channel",
  Const        r112, "channel"
  Const        r113, "store channel"
  // id: "store" + str(g.key),
  Const        r114, "id"
  Const        r115, "store"
  Const        r116, "key"
  Index        r117, r111, r116
  Str          r118, r117
  Add          r119, r115, r118
  // sales: sum(from x in g select x.ss.ss_ext_sales_price),
  Const        r120, "sales"
  Const        r121, []
  Const        r122, "ss"
  Const        r123, "ss_ext_sales_price"
  IterPrep     r124, r111
  Len          r125, r124
  Const        r126, 0
L11:
  LessInt      r128, r126, r125
  JumpIfFalse  r128, L10
  Index        r130, r124, r126
  Const        r131, "ss"
  Index        r132, r130, r131
  Const        r133, "ss_ext_sales_price"
  Index        r134, r132, r133
  Append       r121, r121, r134
  Const        r136, 1
  AddInt       r126, r126, r136
  Jump         L11
L10:
  Sum          r137, r121
  // returns: 0.0,
  Const        r138, "returns"
  Const        r139, 0
  // profit: sum(from x in g select x.ss.ss_net_profit),
  Const        r140, "profit"
  Const        r141, []
  Const        r142, "ss"
  Const        r143, "ss_net_profit"
  IterPrep     r144, r111
  Len          r145, r144
  Const        r146, 0
L13:
  LessInt      r148, r146, r145
  JumpIfFalse  r148, L12
  Index        r130, r144, r146
  Const        r150, "ss"
  Index        r151, r130, r150
  Const        r152, "ss_net_profit"
  Index        r153, r151, r152
  Append       r141, r141, r153
  Const        r155, 1
  AddInt       r146, r146, r155
  Jump         L13
L12:
  Sum          r156, r141
  // profit_loss: 0.0
  Const        r157, "profit_loss"
  Const        r158, 0
  // channel: "store channel",
  Move         r159, r112
  Move         r160, r113
  // id: "store" + str(g.key),
  Move         r161, r114
  Move         r162, r119
  // sales: sum(from x in g select x.ss.ss_ext_sales_price),
  Move         r163, r120
  Move         r164, r137
  // returns: 0.0,
  Move         r165, r138
  Move         r166, r139
  // profit: sum(from x in g select x.ss.ss_net_profit),
  Move         r167, r140
  Move         r168, r156
  // profit_loss: 0.0
  Move         r169, r157
  Move         r170, r158
  // select {
  MakeMap      r171, 6, r159
  // from ss in store_sales
  Append       r10, r10, r171
  Const        r173, 1
  AddInt       r106, r106, r173
  Jump         L14
L9:
  // from sr in store_returns
  Const        r174, []
  // group by s.s_store_id into g
  Const        r175, "s_store_id"
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Const        r176, "d_date"
  Const        r177, "d_date"
  // channel: "store channel",
  Const        r178, "channel"
  // id: "store" + str(g.key),
  Const        r179, "id"
  Const        r180, "key"
  // sales: 0.0,
  Const        r181, "sales"
  // returns: sum(from x in g select x.sr.sr_return_amt),
  Const        r182, "returns"
  Const        r183, "sr"
  Const        r184, "sr_return_amt"
  // profit: 0.0,
  Const        r185, "profit"
  // profit_loss: sum(from x in g select x.sr.sr_net_loss)
  Const        r186, "profit_loss"
  Const        r187, "sr"
  Const        r188, "sr_net_loss"
  // from sr in store_returns
  MakeMap      r189, 0, r0
  Const        r190, []
  IterPrep     r192, r1
  Len          r193, r192
  Const        r194, 0
L23:
  LessInt      r195, r194, r193
  JumpIfFalse  r195, L15
  Index        r197, r192, r194
  // join d in date_dim on sr.sr_returned_date_sk == d.d_date_sk
  IterPrep     r198, r9
  Len          r199, r198
  Const        r200, 0
L22:
  LessInt      r201, r200, r199
  JumpIfFalse  r201, L16
  Index        r203, r198, r200
  Const        r204, "sr_returned_date_sk"
  Index        r205, r197, r204
  Const        r206, "d_date_sk"
  Index        r207, r203, r206
  Equal        r208, r205, r207
  JumpIfFalse  r208, L17
  // join s in store on sr.sr_store_sk == s.s_store_sk
  IterPrep     r209, r2
  Len          r210, r209
  Const        r211, 0
L21:
  LessInt      r212, r211, r210
  JumpIfFalse  r212, L17
  Index        r214, r209, r211
  Const        r215, "sr_store_sk"
  Index        r216, r197, r215
  Const        r217, "s_store_sk"
  Index        r218, r214, r217
  Equal        r219, r216, r218
  JumpIfFalse  r219, L18
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Const        r220, "d_date"
  Index        r221, r203, r220
  Const        r222, "1998-12-01"
  LessEq       r223, r222, r221
  Const        r224, "d_date"
  Index        r225, r203, r224
  Const        r226, "1998-12-15"
  LessEq       r227, r225, r226
  Move         r228, r223
  JumpIfFalse  r228, L19
  Move         r228, r227
L19:
  JumpIfFalse  r228, L18
  // from sr in store_returns
  Const        r229, "sr"
  Move         r230, r197
  Const        r231, "d"
  Move         r232, r203
  Const        r233, "s"
  Move         r234, r214
  MakeMap      r235, 3, r229
  // group by s.s_store_id into g
  Const        r236, "s_store_id"
  Index        r237, r214, r236
  Str          r238, r237
  In           r239, r238, r189
  JumpIfTrue   r239, L20
  // from sr in store_returns
  Const        r240, []
  Const        r241, "__group__"
  Const        r242, true
  Const        r243, "key"
  // group by s.s_store_id into g
  Move         r244, r237
  // from sr in store_returns
  Const        r245, "items"
  Move         r246, r240
  Const        r247, "count"
  Const        r248, 0
  Move         r249, r241
  Move         r250, r242
  Move         r251, r243
  Move         r252, r244
  Move         r253, r245
  Move         r254, r246
  Move         r255, r247
  Move         r256, r248
  MakeMap      r257, 4, r249
  SetIndex     r189, r238, r257
  Append       r190, r190, r257
L20:
  Const        r259, "items"
  Index        r260, r189, r238
  Index        r261, r260, r259
  Append       r262, r261, r235
  SetIndex     r260, r259, r262
  Const        r263, "count"
  Index        r264, r260, r263
  Const        r265, 1
  AddInt       r266, r264, r265
  SetIndex     r260, r263, r266
L18:
  // join s in store on sr.sr_store_sk == s.s_store_sk
  Const        r267, 1
  AddInt       r211, r211, r267
  Jump         L21
L17:
  // join d in date_dim on sr.sr_returned_date_sk == d.d_date_sk
  Const        r268, 1
  AddInt       r200, r200, r268
  Jump         L22
L16:
  // from sr in store_returns
  Const        r269, 1
  AddInt       r194, r194, r269
  Jump         L23
L15:
  Const        r270, 0
  Len          r272, r190
L29:
  LessInt      r273, r270, r272
  JumpIfFalse  r273, L24
  Index        r111, r190, r270
  // channel: "store channel",
  Const        r275, "channel"
  Const        r276, "store channel"
  // id: "store" + str(g.key),
  Const        r277, "id"
  Const        r278, "store"
  Const        r279, "key"
  Index        r280, r111, r279
  Str          r281, r280
  Add          r282, r278, r281
  // sales: 0.0,
  Const        r283, "sales"
  Const        r284, 0
  // returns: sum(from x in g select x.sr.sr_return_amt),
  Const        r285, "returns"
  Const        r286, []
  Const        r287, "sr"
  Const        r288, "sr_return_amt"
  IterPrep     r289, r111
  Len          r290, r289
  Const        r291, 0
L26:
  LessInt      r293, r291, r290
  JumpIfFalse  r293, L25
  Index        r130, r289, r291
  Const        r295, "sr"
  Index        r296, r130, r295
  Const        r297, "sr_return_amt"
  Index        r298, r296, r297
  Append       r286, r286, r298
  Const        r300, 1
  AddInt       r291, r291, r300
  Jump         L26
L25:
  Sum          r301, r286
  // profit: 0.0,
  Const        r302, "profit"
  Const        r303, 0
  // profit_loss: sum(from x in g select x.sr.sr_net_loss)
  Const        r304, "profit_loss"
  Const        r305, []
  Const        r306, "sr"
  Const        r307, "sr_net_loss"
  IterPrep     r308, r111
  Len          r309, r308
  Const        r310, 0
L28:
  LessInt      r312, r310, r309
  JumpIfFalse  r312, L27
  Index        r130, r308, r310
  Const        r314, "sr"
  Index        r315, r130, r314
  Const        r316, "sr_net_loss"
  Index        r317, r315, r316
  Append       r305, r305, r317
  Const        r319, 1
  AddInt       r310, r310, r319
  Jump         L28
L27:
  Sum          r320, r305
  // channel: "store channel",
  Move         r321, r275
  Move         r322, r276
  // id: "store" + str(g.key),
  Move         r323, r277
  Move         r324, r282
  // sales: 0.0,
  Move         r325, r283
  Move         r326, r284
  // returns: sum(from x in g select x.sr.sr_return_amt),
  Move         r327, r285
  Move         r328, r301
  // profit: 0.0,
  Move         r329, r302
  Move         r330, r303
  // profit_loss: sum(from x in g select x.sr.sr_net_loss)
  Move         r331, r304
  Move         r332, r320
  // select {
  MakeMap      r333, 6, r321
  // from sr in store_returns
  Append       r174, r174, r333
  Const        r335, 1
  AddInt       r270, r270, r335
  Jump         L29
L24:
  // from cs in catalog_sales
  Const        r336, []
  // group by cp.cp_catalog_page_id into g
  Const        r337, "cp_catalog_page_id"
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Const        r338, "d_date"
  Const        r339, "d_date"
  // channel: "catalog channel",
  Const        r340, "channel"
  // id: "catalog_page" + str(g.key),
  Const        r341, "id"
  Const        r342, "key"
  // sales: sum(from x in g select x.cs.cs_ext_sales_price),
  Const        r343, "sales"
  Const        r344, "cs"
  Const        r345, "cs_ext_sales_price"
  // returns: 0.0,
  Const        r346, "returns"
  // profit: sum(from x in g select x.cs.cs_net_profit),
  Const        r347, "profit"
  Const        r348, "cs"
  Const        r349, "cs_net_profit"
  // profit_loss: 0.0
  Const        r350, "profit_loss"
  // from cs in catalog_sales
  MakeMap      r351, 0, r0
  Const        r352, []
  IterPrep     r354, r3
  Len          r355, r354
  Const        r356, 0
L38:
  LessInt      r357, r356, r355
  JumpIfFalse  r357, L30
  Index        r359, r354, r356
  // join d in date_dim on cs.cs_sold_date_sk == d.d_date_sk
  IterPrep     r360, r9
  Len          r361, r360
  Const        r362, 0
L37:
  LessInt      r363, r362, r361
  JumpIfFalse  r363, L31
  Index        r365, r360, r362
  Const        r366, "cs_sold_date_sk"
  Index        r367, r359, r366
  Const        r368, "d_date_sk"
  Index        r369, r365, r368
  Equal        r370, r367, r369
  JumpIfFalse  r370, L32
  // join cp in catalog_page on cs.cs_catalog_page_sk == cp.cp_catalog_page_sk
  IterPrep     r371, r5
  Len          r372, r371
  Const        r373, 0
L36:
  LessInt      r374, r373, r372
  JumpIfFalse  r374, L32
  Index        r376, r371, r373
  Const        r377, "cs_catalog_page_sk"
  Index        r378, r359, r377
  Const        r379, "cp_catalog_page_sk"
  Index        r380, r376, r379
  Equal        r381, r378, r380
  JumpIfFalse  r381, L33
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Const        r382, "d_date"
  Index        r383, r365, r382
  Const        r384, "1998-12-01"
  LessEq       r385, r384, r383
  Const        r386, "d_date"
  Index        r387, r365, r386
  Const        r388, "1998-12-15"
  LessEq       r389, r387, r388
  Move         r390, r385
  JumpIfFalse  r390, L34
  Move         r390, r389
L34:
  JumpIfFalse  r390, L33
  // from cs in catalog_sales
  Const        r391, "cs"
  Move         r392, r359
  Const        r393, "d"
  Move         r394, r365
  Const        r395, "cp"
  Move         r396, r376
  MakeMap      r397, 3, r391
  // group by cp.cp_catalog_page_id into g
  Const        r398, "cp_catalog_page_id"
  Index        r399, r376, r398
  Str          r400, r399
  In           r401, r400, r351
  JumpIfTrue   r401, L35
  // from cs in catalog_sales
  Const        r402, []
  Const        r403, "__group__"
  Const        r404, true
  Const        r405, "key"
  // group by cp.cp_catalog_page_id into g
  Move         r406, r399
  // from cs in catalog_sales
  Const        r407, "items"
  Move         r408, r402
  Const        r409, "count"
  Const        r410, 0
  Move         r411, r403
  Move         r412, r404
  Move         r413, r405
  Move         r414, r406
  Move         r415, r407
  Move         r416, r408
  Move         r417, r409
  Move         r418, r410
  MakeMap      r419, 4, r411
  SetIndex     r351, r400, r419
  Append       r352, r352, r419
L35:
  Const        r421, "items"
  Index        r422, r351, r400
  Index        r423, r422, r421
  Append       r424, r423, r397
  SetIndex     r422, r421, r424
  Const        r425, "count"
  Index        r426, r422, r425
  Const        r427, 1
  AddInt       r428, r426, r427
  SetIndex     r422, r425, r428
L33:
  // join cp in catalog_page on cs.cs_catalog_page_sk == cp.cp_catalog_page_sk
  Const        r429, 1
  AddInt       r373, r373, r429
  Jump         L36
L32:
  // join d in date_dim on cs.cs_sold_date_sk == d.d_date_sk
  Const        r430, 1
  AddInt       r362, r362, r430
  Jump         L37
L31:
  // from cs in catalog_sales
  Const        r431, 1
  AddInt       r356, r356, r431
  Jump         L38
L30:
  Const        r432, 0
  Len          r434, r352
L44:
  LessInt      r435, r432, r434
  JumpIfFalse  r435, L39
  Index        r111, r352, r432
  // channel: "catalog channel",
  Const        r437, "channel"
  Const        r438, "catalog channel"
  // id: "catalog_page" + str(g.key),
  Const        r439, "id"
  Const        r440, "catalog_page"
  Const        r441, "key"
  Index        r442, r111, r441
  Str          r443, r442
  Add          r444, r440, r443
  // sales: sum(from x in g select x.cs.cs_ext_sales_price),
  Const        r445, "sales"
  Const        r446, []
  Const        r447, "cs"
  Const        r448, "cs_ext_sales_price"
  IterPrep     r449, r111
  Len          r450, r449
  Const        r451, 0
L41:
  LessInt      r453, r451, r450
  JumpIfFalse  r453, L40
  Index        r130, r449, r451
  Const        r455, "cs"
  Index        r456, r130, r455
  Const        r457, "cs_ext_sales_price"
  Index        r458, r456, r457
  Append       r446, r446, r458
  Const        r460, 1
  AddInt       r451, r451, r460
  Jump         L41
L40:
  Sum          r461, r446
  // returns: 0.0,
  Const        r462, "returns"
  Const        r463, 0
  // profit: sum(from x in g select x.cs.cs_net_profit),
  Const        r464, "profit"
  Const        r465, []
  Const        r466, "cs"
  Const        r467, "cs_net_profit"
  IterPrep     r468, r111
  Len          r469, r468
  Const        r470, 0
L43:
  LessInt      r472, r470, r469
  JumpIfFalse  r472, L42
  Index        r130, r468, r470
  Const        r474, "cs"
  Index        r475, r130, r474
  Const        r476, "cs_net_profit"
  Index        r477, r475, r476
  Append       r465, r465, r477
  Const        r479, 1
  AddInt       r470, r470, r479
  Jump         L43
L42:
  Sum          r480, r465
  // profit_loss: 0.0
  Const        r481, "profit_loss"
  Const        r482, 0
  // channel: "catalog channel",
  Move         r483, r437
  Move         r484, r438
  // id: "catalog_page" + str(g.key),
  Move         r485, r439
  Move         r486, r444
  // sales: sum(from x in g select x.cs.cs_ext_sales_price),
  Move         r487, r445
  Move         r488, r461
  // returns: 0.0,
  Move         r489, r462
  Move         r490, r463
  // profit: sum(from x in g select x.cs.cs_net_profit),
  Move         r491, r464
  Move         r492, r480
  // profit_loss: 0.0
  Move         r493, r481
  Move         r494, r482
  // select {
  MakeMap      r495, 6, r483
  // from cs in catalog_sales
  Append       r336, r336, r495
  Const        r497, 1
  AddInt       r432, r432, r497
  Jump         L44
L39:
  // from cr in catalog_returns
  Const        r498, []
  // group by cp.cp_catalog_page_id into g
  Const        r499, "cp_catalog_page_id"
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Const        r500, "d_date"
  Const        r501, "d_date"
  // channel: "catalog channel",
  Const        r502, "channel"
  // id: "catalog_page" + str(g.key),
  Const        r503, "id"
  Const        r504, "key"
  // sales: 0.0,
  Const        r505, "sales"
  // returns: sum(from x in g select x.cr.cr_return_amount),
  Const        r506, "returns"
  Const        r507, "cr"
  Const        r508, "cr_return_amount"
  // profit: 0.0,
  Const        r509, "profit"
  // profit_loss: sum(from x in g select x.cr.cr_net_loss)
  Const        r510, "profit_loss"
  Const        r511, "cr"
  Const        r512, "cr_net_loss"
  // from cr in catalog_returns
  MakeMap      r513, 0, r0
  Const        r514, []
  IterPrep     r516, r4
  Len          r517, r516
  Const        r518, 0
L53:
  LessInt      r519, r518, r517
  JumpIfFalse  r519, L45
  Index        r521, r516, r518
  // join d in date_dim on cr.cr_returned_date_sk == d.d_date_sk
  IterPrep     r522, r9
  Len          r523, r522
  Const        r524, 0
L52:
  LessInt      r525, r524, r523
  JumpIfFalse  r525, L46
  Index        r527, r522, r524
  Const        r528, "cr_returned_date_sk"
  Index        r529, r521, r528
  Const        r530, "d_date_sk"
  Index        r531, r527, r530
  Equal        r532, r529, r531
  JumpIfFalse  r532, L47
  // join cp in catalog_page on cr.cr_catalog_page_sk == cp.cp_catalog_page_sk
  IterPrep     r533, r5
  Len          r534, r533
  Const        r535, 0
L51:
  LessInt      r536, r535, r534
  JumpIfFalse  r536, L47
  Index        r538, r533, r535
  Const        r539, "cr_catalog_page_sk"
  Index        r540, r521, r539
  Const        r541, "cp_catalog_page_sk"
  Index        r542, r538, r541
  Equal        r543, r540, r542
  JumpIfFalse  r543, L48
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Const        r544, "d_date"
  Index        r545, r527, r544
  Const        r546, "1998-12-01"
  LessEq       r547, r546, r545
  Const        r548, "d_date"
  Index        r549, r527, r548
  Const        r550, "1998-12-15"
  LessEq       r551, r549, r550
  Move         r552, r547
  JumpIfFalse  r552, L49
  Move         r552, r551
L49:
  JumpIfFalse  r552, L48
  // from cr in catalog_returns
  Const        r553, "cr"
  Move         r554, r521
  Const        r555, "d"
  Move         r556, r527
  Const        r557, "cp"
  Move         r558, r538
  MakeMap      r559, 3, r553
  // group by cp.cp_catalog_page_id into g
  Const        r560, "cp_catalog_page_id"
  Index        r561, r538, r560
  Str          r562, r561
  In           r563, r562, r513
  JumpIfTrue   r563, L50
  // from cr in catalog_returns
  Const        r564, []
  Const        r565, "__group__"
  Const        r566, true
  Const        r567, "key"
  // group by cp.cp_catalog_page_id into g
  Move         r568, r561
  // from cr in catalog_returns
  Const        r569, "items"
  Move         r570, r564
  Const        r571, "count"
  Const        r572, 0
  Move         r573, r565
  Move         r574, r566
  Move         r575, r567
  Move         r576, r568
  Move         r577, r569
  Move         r578, r570
  Move         r579, r571
  Move         r580, r572
  MakeMap      r581, 4, r573
  SetIndex     r513, r562, r581
  Append       r514, r514, r581
L50:
  Const        r583, "items"
  Index        r584, r513, r562
  Index        r585, r584, r583
  Append       r586, r585, r559
  SetIndex     r584, r583, r586
  Const        r587, "count"
  Index        r588, r584, r587
  Const        r589, 1
  AddInt       r590, r588, r589
  SetIndex     r584, r587, r590
L48:
  // join cp in catalog_page on cr.cr_catalog_page_sk == cp.cp_catalog_page_sk
  Const        r591, 1
  AddInt       r535, r535, r591
  Jump         L51
L47:
  // join d in date_dim on cr.cr_returned_date_sk == d.d_date_sk
  Const        r592, 1
  AddInt       r524, r524, r592
  Jump         L52
L46:
  // from cr in catalog_returns
  Const        r593, 1
  AddInt       r518, r518, r593
  Jump         L53
L45:
  Const        r594, 0
  Len          r596, r514
L59:
  LessInt      r597, r594, r596
  JumpIfFalse  r597, L54
  Index        r111, r514, r594
  // channel: "catalog channel",
  Const        r599, "channel"
  Const        r600, "catalog channel"
  // id: "catalog_page" + str(g.key),
  Const        r601, "id"
  Const        r602, "catalog_page"
  Const        r603, "key"
  Index        r604, r111, r603
  Str          r605, r604
  Add          r606, r602, r605
  // sales: 0.0,
  Const        r607, "sales"
  Const        r608, 0
  // returns: sum(from x in g select x.cr.cr_return_amount),
  Const        r609, "returns"
  Const        r610, []
  Const        r611, "cr"
  Const        r612, "cr_return_amount"
  IterPrep     r613, r111
  Len          r614, r613
  Const        r615, 0
L56:
  LessInt      r617, r615, r614
  JumpIfFalse  r617, L55
  Index        r130, r613, r615
  Const        r619, "cr"
  Index        r620, r130, r619
  Const        r621, "cr_return_amount"
  Index        r622, r620, r621
  Append       r610, r610, r622
  Const        r624, 1
  AddInt       r615, r615, r624
  Jump         L56
L55:
  Sum          r625, r610
  // profit: 0.0,
  Const        r626, "profit"
  Const        r627, 0
  // profit_loss: sum(from x in g select x.cr.cr_net_loss)
  Const        r628, "profit_loss"
  Const        r629, []
  Const        r630, "cr"
  Const        r631, "cr_net_loss"
  IterPrep     r632, r111
  Len          r633, r632
  Const        r634, 0
L58:
  LessInt      r636, r634, r633
  JumpIfFalse  r636, L57
  Index        r130, r632, r634
  Const        r638, "cr"
  Index        r639, r130, r638
  Const        r640, "cr_net_loss"
  Index        r641, r639, r640
  Append       r629, r629, r641
  Const        r643, 1
  AddInt       r634, r634, r643
  Jump         L58
L57:
  Sum          r644, r629
  // channel: "catalog channel",
  Move         r645, r599
  Move         r646, r600
  // id: "catalog_page" + str(g.key),
  Move         r647, r601
  Move         r648, r606
  // sales: 0.0,
  Move         r649, r607
  Move         r650, r608
  // returns: sum(from x in g select x.cr.cr_return_amount),
  Move         r651, r609
  Move         r652, r625
  // profit: 0.0,
  Move         r653, r626
  Move         r654, r627
  // profit_loss: sum(from x in g select x.cr.cr_net_loss)
  Move         r655, r628
  Move         r656, r644
  // select {
  MakeMap      r657, 6, r645
  // from cr in catalog_returns
  Append       r498, r498, r657
  Const        r659, 1
  AddInt       r594, r594, r659
  Jump         L59
L54:
  // from ws in web_sales
  Const        r660, []
  // group by w.web_site_id into g
  Const        r661, "web_site_id"
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Const        r662, "d_date"
  Const        r663, "d_date"
  // channel: "web channel",
  Const        r664, "channel"
  // id: "web_site" + str(g.key),
  Const        r665, "id"
  Const        r666, "key"
  // sales: sum(from x in g select x.ws.ws_ext_sales_price),
  Const        r667, "sales"
  Const        r668, "ws"
  Const        r669, "ws_ext_sales_price"
  // returns: 0.0,
  Const        r670, "returns"
  // profit: sum(from x in g select x.ws.ws_net_profit),
  Const        r671, "profit"
  Const        r672, "ws"
  Const        r673, "ws_net_profit"
  // profit_loss: 0.0
  Const        r674, "profit_loss"
  // from ws in web_sales
  MakeMap      r675, 0, r0
  Const        r676, []
  IterPrep     r678, r6
  Len          r679, r678
  Const        r680, 0
L68:
  LessInt      r681, r680, r679
  JumpIfFalse  r681, L60
  Index        r683, r678, r680
  // join d in date_dim on ws.ws_sold_date_sk == d.d_date_sk
  IterPrep     r684, r9
  Len          r685, r684
  Const        r686, 0
L67:
  LessInt      r687, r686, r685
  JumpIfFalse  r687, L61
  Index        r689, r684, r686
  Const        r690, "ws_sold_date_sk"
  Index        r691, r683, r690
  Const        r692, "d_date_sk"
  Index        r693, r689, r692
  Equal        r694, r691, r693
  JumpIfFalse  r694, L62
  // join w in web_site on ws.ws_web_site_sk == w.web_site_sk
  IterPrep     r695, r8
  Len          r696, r695
  Const        r697, 0
L66:
  LessInt      r698, r697, r696
  JumpIfFalse  r698, L62
  Index        r700, r695, r697
  Const        r701, "ws_web_site_sk"
  Index        r702, r683, r701
  Const        r703, "web_site_sk"
  Index        r704, r700, r703
  Equal        r705, r702, r704
  JumpIfFalse  r705, L63
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Const        r706, "d_date"
  Index        r707, r689, r706
  Const        r708, "1998-12-01"
  LessEq       r709, r708, r707
  Const        r710, "d_date"
  Index        r711, r689, r710
  Const        r712, "1998-12-15"
  LessEq       r713, r711, r712
  Move         r714, r709
  JumpIfFalse  r714, L64
  Move         r714, r713
L64:
  JumpIfFalse  r714, L63
  // from ws in web_sales
  Const        r715, "ws"
  Move         r716, r683
  Const        r717, "d"
  Move         r718, r689
  Const        r719, "w"
  Move         r720, r700
  MakeMap      r721, 3, r715
  // group by w.web_site_id into g
  Const        r722, "web_site_id"
  Index        r723, r700, r722
  Str          r724, r723
  In           r725, r724, r675
  JumpIfTrue   r725, L65
  // from ws in web_sales
  Const        r726, []
  Const        r727, "__group__"
  Const        r728, true
  Const        r729, "key"
  // group by w.web_site_id into g
  Move         r730, r723
  // from ws in web_sales
  Const        r731, "items"
  Move         r732, r726
  Const        r733, "count"
  Const        r734, 0
  Move         r735, r727
  Move         r736, r728
  Move         r737, r729
  Move         r738, r730
  Move         r739, r731
  Move         r740, r732
  Move         r741, r733
  Move         r742, r734
  MakeMap      r743, 4, r735
  SetIndex     r675, r724, r743
  Append       r676, r676, r743
L65:
  Const        r745, "items"
  Index        r746, r675, r724
  Index        r747, r746, r745
  Append       r748, r747, r721
  SetIndex     r746, r745, r748
  Const        r749, "count"
  Index        r750, r746, r749
  Const        r751, 1
  AddInt       r752, r750, r751
  SetIndex     r746, r749, r752
L63:
  // join w in web_site on ws.ws_web_site_sk == w.web_site_sk
  Const        r753, 1
  AddInt       r697, r697, r753
  Jump         L66
L62:
  // join d in date_dim on ws.ws_sold_date_sk == d.d_date_sk
  Const        r754, 1
  AddInt       r686, r686, r754
  Jump         L67
L61:
  // from ws in web_sales
  Const        r755, 1
  AddInt       r680, r680, r755
  Jump         L68
L60:
  Const        r756, 0
  Len          r758, r676
L74:
  LessInt      r759, r756, r758
  JumpIfFalse  r759, L69
  Index        r111, r676, r756
  // channel: "web channel",
  Const        r761, "channel"
  Const        r762, "web channel"
  // id: "web_site" + str(g.key),
  Const        r763, "id"
  Const        r764, "web_site"
  Const        r765, "key"
  Index        r766, r111, r765
  Str          r767, r766
  Add          r768, r764, r767
  // sales: sum(from x in g select x.ws.ws_ext_sales_price),
  Const        r769, "sales"
  Const        r770, []
  Const        r771, "ws"
  Const        r772, "ws_ext_sales_price"
  IterPrep     r773, r111
  Len          r774, r773
  Const        r775, 0
L71:
  LessInt      r777, r775, r774
  JumpIfFalse  r777, L70
  Index        r130, r773, r775
  Const        r779, "ws"
  Index        r780, r130, r779
  Const        r781, "ws_ext_sales_price"
  Index        r782, r780, r781
  Append       r770, r770, r782
  Const        r784, 1
  AddInt       r775, r775, r784
  Jump         L71
L70:
  Sum          r785, r770
  // returns: 0.0,
  Const        r786, "returns"
  Const        r787, 0
  // profit: sum(from x in g select x.ws.ws_net_profit),
  Const        r788, "profit"
  Const        r789, []
  Const        r790, "ws"
  Const        r791, "ws_net_profit"
  IterPrep     r792, r111
  Len          r793, r792
  Const        r794, 0
L73:
  LessInt      r796, r794, r793
  JumpIfFalse  r796, L72
  Index        r130, r792, r794
  Const        r798, "ws"
  Index        r799, r130, r798
  Const        r800, "ws_net_profit"
  Index        r801, r799, r800
  Append       r789, r789, r801
  Const        r803, 1
  AddInt       r794, r794, r803
  Jump         L73
L72:
  Sum          r804, r789
  // profit_loss: 0.0
  Const        r805, "profit_loss"
  Const        r806, 0
  // channel: "web channel",
  Move         r807, r761
  Move         r808, r762
  // id: "web_site" + str(g.key),
  Move         r809, r763
  Move         r810, r768
  // sales: sum(from x in g select x.ws.ws_ext_sales_price),
  Move         r811, r769
  Move         r812, r785
  // returns: 0.0,
  Move         r813, r786
  Move         r814, r787
  // profit: sum(from x in g select x.ws.ws_net_profit),
  Move         r815, r788
  Move         r816, r804
  // profit_loss: 0.0
  Move         r817, r805
  Move         r818, r806
  // select {
  MakeMap      r819, 6, r807
  // from ws in web_sales
  Append       r660, r660, r819
  Const        r821, 1
  AddInt       r756, r756, r821
  Jump         L74
L69:
  // from wr in web_returns
  Const        r822, []
  // group by w.web_site_id into g
  Const        r823, "web_site_id"
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Const        r824, "d_date"
  Const        r825, "d_date"
  // channel: "web channel",
  Const        r826, "channel"
  // id: "web_site" + str(g.key),
  Const        r827, "id"
  Const        r828, "key"
  // sales: 0.0,
  Const        r829, "sales"
  // returns: sum(from x in g select x.wr.wr_return_amt),
  Const        r830, "returns"
  Const        r831, "wr"
  Const        r832, "wr_return_amt"
  // profit: 0.0,
  Const        r833, "profit"
  // profit_loss: sum(from x in g select x.wr.wr_net_loss)
  Const        r834, "profit_loss"
  Const        r835, "wr"
  Const        r836, "wr_net_loss"
  // from wr in web_returns
  MakeMap      r837, 0, r0
  Const        r838, []
  IterPrep     r840, r7
  Len          r841, r840
  Const        r842, 0
L86:
  LessInt      r843, r842, r841
  JumpIfFalse  r843, L75
  Index        r845, r840, r842
  // join ws in web_sales on wr.wr_item_sk == ws.ws_item_sk && wr.wr_order_number == ws.ws_order_number
  IterPrep     r846, r6
  Len          r847, r846
  Const        r848, 0
L85:
  LessInt      r849, r848, r847
  JumpIfFalse  r849, L76
  Index        r660, r846, r848
  Const        r851, "wr_item_sk"
  Index        r852, r845, r851
  Const        r853, "ws_item_sk"
  Index        r854, r660, r853
  Equal        r855, r852, r854
  Const        r856, "wr_order_number"
  Index        r857, r845, r856
  Const        r858, "ws_order_number"
  Index        r859, r660, r858
  Equal        r860, r857, r859
  Move         r861, r855
  JumpIfFalse  r861, L77
  Move         r861, r860
L77:
  JumpIfFalse  r861, L78
  // join d in date_dim on wr.wr_returned_date_sk == d.d_date_sk
  IterPrep     r862, r9
  Len          r863, r862
  Const        r864, 0
L84:
  LessInt      r865, r864, r863
  JumpIfFalse  r865, L78
  Index        r867, r862, r864
  Const        r868, "wr_returned_date_sk"
  Index        r869, r845, r868
  Const        r870, "d_date_sk"
  Index        r871, r867, r870
  Equal        r872, r869, r871
  JumpIfFalse  r872, L79
  // join w in web_site on ws.ws_web_site_sk == w.web_site_sk
  IterPrep     r873, r8
  Len          r874, r873
  Const        r875, 0
L83:
  LessInt      r876, r875, r874
  JumpIfFalse  r876, L79
  Index        r878, r873, r875
  Const        r879, "ws_web_site_sk"
  Index        r880, r660, r879
  Const        r881, "web_site_sk"
  Index        r882, r878, r881
  Equal        r883, r880, r882
  JumpIfFalse  r883, L80
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Const        r884, "d_date"
  Index        r885, r867, r884
  Const        r886, "1998-12-01"
  LessEq       r887, r886, r885
  Const        r888, "d_date"
  Index        r889, r867, r888
  Const        r890, "1998-12-15"
  LessEq       r891, r889, r890
  Move         r892, r887
  JumpIfFalse  r892, L81
  Move         r892, r891
L81:
  JumpIfFalse  r892, L80
  // from wr in web_returns
  Const        r893, "wr"
  Move         r894, r845
  Const        r895, "ws"
  Move         r896, r660
  Const        r897, "d"
  Move         r898, r867
  Const        r899, "w"
  Move         r900, r878
  MakeMap      r901, 4, r893
  // group by w.web_site_id into g
  Const        r902, "web_site_id"
  Index        r903, r878, r902
  Str          r904, r903
  In           r905, r904, r837
  JumpIfTrue   r905, L82
  // from wr in web_returns
  Const        r906, []
  Const        r907, "__group__"
  Const        r908, true
  Const        r909, "key"
  // group by w.web_site_id into g
  Move         r910, r903
  // from wr in web_returns
  Const        r911, "items"
  Move         r912, r906
  Const        r913, "count"
  Const        r914, 0
  Move         r915, r907
  Move         r916, r908
  Move         r917, r909
  Move         r918, r910
  Move         r919, r911
  Move         r920, r912
  Move         r921, r913
  Move         r922, r914
  MakeMap      r923, 4, r915
  SetIndex     r837, r904, r923
  Append       r838, r838, r923
L82:
  Const        r925, "items"
  Index        r926, r837, r904
  Index        r927, r926, r925
  Append       r928, r927, r901
  SetIndex     r926, r925, r928
  Const        r929, "count"
  Index        r930, r926, r929
  Const        r931, 1
  AddInt       r932, r930, r931
  SetIndex     r926, r929, r932
L80:
  // join w in web_site on ws.ws_web_site_sk == w.web_site_sk
  Const        r933, 1
  AddInt       r875, r875, r933
  Jump         L83
L79:
  // join d in date_dim on wr.wr_returned_date_sk == d.d_date_sk
  Const        r934, 1
  AddInt       r864, r864, r934
  Jump         L84
L78:
  // join ws in web_sales on wr.wr_item_sk == ws.ws_item_sk && wr.wr_order_number == ws.ws_order_number
  Const        r935, 1
  AddInt       r848, r848, r935
  Jump         L85
L76:
  // from wr in web_returns
  Const        r936, 1
  AddInt       r842, r842, r936
  Jump         L86
L75:
  Const        r937, 0
  Len          r939, r838
L92:
  LessInt      r940, r937, r939
  JumpIfFalse  r940, L87
  Index        r111, r838, r937
  // channel: "web channel",
  Const        r942, "channel"
  Const        r943, "web channel"
  // id: "web_site" + str(g.key),
  Const        r944, "id"
  Const        r945, "web_site"
  Const        r946, "key"
  Index        r947, r111, r946
  Str          r948, r947
  Add          r949, r945, r948
  // sales: 0.0,
  Const        r950, "sales"
  Const        r951, 0
  // returns: sum(from x in g select x.wr.wr_return_amt),
  Const        r952, "returns"
  Const        r953, []
  Const        r954, "wr"
  Const        r955, "wr_return_amt"
  IterPrep     r956, r111
  Len          r957, r956
  Const        r958, 0
L89:
  LessInt      r960, r958, r957
  JumpIfFalse  r960, L88
  Index        r130, r956, r958
  Const        r962, "wr"
  Index        r963, r130, r962
  Const        r964, "wr_return_amt"
  Index        r965, r963, r964
  Append       r953, r953, r965
  Const        r967, 1
  AddInt       r958, r958, r967
  Jump         L89
L88:
  Sum          r968, r953
  // profit: 0.0,
  Const        r969, "profit"
  Const        r970, 0
  // profit_loss: sum(from x in g select x.wr.wr_net_loss)
  Const        r971, "profit_loss"
  Const        r972, []
  Const        r973, "wr"
  Const        r974, "wr_net_loss"
  IterPrep     r975, r111
  Len          r976, r975
  Const        r977, 0
L91:
  LessInt      r979, r977, r976
  JumpIfFalse  r979, L90
  Index        r130, r975, r977
  Const        r981, "wr"
  Index        r982, r130, r981
  Const        r983, "wr_net_loss"
  Index        r984, r982, r983
  Append       r972, r972, r984
  Const        r986, 1
  AddInt       r977, r977, r986
  Jump         L91
L90:
  Sum          r987, r972
  // channel: "web channel",
  Move         r988, r942
  Move         r989, r943
  // id: "web_site" + str(g.key),
  Move         r990, r944
  Move         r991, r949
  // sales: 0.0,
  Move         r992, r950
  Move         r993, r951
  // returns: sum(from x in g select x.wr.wr_return_amt),
  Move         r994, r952
  Move         r995, r968
  // profit: 0.0,
  Move         r996, r969
  Move         r997, r970
  // profit_loss: sum(from x in g select x.wr.wr_net_loss)
  Move         r998, r971
  Move         r999, r987
  // select {
  MakeMap      r1000, 6, r988
  // from wr in web_returns
  Append       r822, r822, r1000
  Const        r1002, 1
  AddInt       r937, r937, r1002
  Jump         L92
L87:
  // let per_channel = concat(ss union all sr, cs union all cr, ws union all wr)
  UnionAll     r1003, r10, r174
  UnionAll     r1004, r336, r498
  UnionAll     r1005, r1003, r1004
  UnionAll     r1006, r660, r822
  UnionAll     r1007, r1005, r1006
  // from p in per_channel
  Const        r1008, []
  // group by { channel: p.channel, id: p.id } into g
  Const        r1009, "channel"
  Const        r1010, "channel"
  Const        r1011, "id"
  Const        r1012, "id"
  // channel: g.key.channel,
  Const        r1013, "channel"
  Const        r1014, "key"
  Const        r1015, "channel"
  // id: g.key.id,
  Const        r1016, "id"
  Const        r1017, "key"
  Const        r1018, "id"
  // sales: sum(from x in g select x.p.sales),
  Const        r1019, "sales"
  Const        r1020, "p"
  Const        r1021, "sales"
  // returns: sum(from x in g select x.p.returns),
  Const        r1022, "returns"
  Const        r1023, "p"
  Const        r1024, "returns"
  // profit: sum(from x in g select x.p.profit) - sum(from x in g select x.p.profit_loss)
  Const        r1025, "profit"
  Const        r1026, "p"
  Const        r1027, "profit"
  Const        r1028, "p"
  Const        r1029, "profit_loss"
  // sort by g.key.channel
  Const        r1030, "key"
  Const        r1031, "channel"
  // from p in per_channel
  IterPrep     r1032, r1007
  Len          r1033, r1032
  Const        r1034, 0
  MakeMap      r1035, 0, r0
  Const        r1036, []
L95:
  LessInt      r1038, r1034, r1033
  JumpIfFalse  r1038, L93
  Index        r1039, r1032, r1034
  Move         r1040, r1039
  // group by { channel: p.channel, id: p.id } into g
  Const        r1041, "channel"
  Const        r1042, "channel"
  Index        r1043, r1040, r1042
  Const        r1044, "id"
  Const        r1045, "id"
  Index        r1046, r1040, r1045
  Move         r1047, r1041
  Move         r1048, r1043
  Move         r1049, r1044
  Move         r1050, r1046
  MakeMap      r1051, 2, r1047
  Str          r1052, r1051
  In           r1053, r1052, r1035
  JumpIfTrue   r1053, L94
  // from p in per_channel
  Const        r1054, []
  Const        r1055, "__group__"
  Const        r1056, true
  Const        r1057, "key"
  // group by { channel: p.channel, id: p.id } into g
  Move         r1058, r1051
  // from p in per_channel
  Const        r1059, "items"
  Move         r1060, r1054
  Const        r1061, "count"
  Const        r1062, 0
  Move         r1063, r1055
  Move         r1064, r1056
  Move         r1065, r1057
  Move         r1066, r1058
  Move         r1067, r1059
  Move         r1068, r1060
  Move         r1069, r1061
  Move         r1070, r1062
  MakeMap      r1071, 4, r1063
  SetIndex     r1035, r1052, r1071
  Append       r1036, r1036, r1071
L94:
  Const        r1073, "items"
  Index        r1074, r1035, r1052
  Index        r1075, r1074, r1073
  Append       r1076, r1075, r1039
  SetIndex     r1074, r1073, r1076
  Const        r1077, "count"
  Index        r1078, r1074, r1077
  Const        r1079, 1
  AddInt       r1080, r1078, r1079
  SetIndex     r1074, r1077, r1080
  Const        r1081, 1
  AddInt       r1034, r1034, r1081
  Jump         L95
L93:
  Const        r1082, 0
  Len          r1084, r1036
L105:
  LessInt      r1085, r1082, r1084
  JumpIfFalse  r1085, L96
  Index        r111, r1036, r1082
  // channel: g.key.channel,
  Const        r1087, "channel"
  Const        r1088, "key"
  Index        r1089, r111, r1088
  Const        r1090, "channel"
  Index        r1091, r1089, r1090
  // id: g.key.id,
  Const        r1092, "id"
  Const        r1093, "key"
  Index        r1094, r111, r1093
  Const        r1095, "id"
  Index        r1096, r1094, r1095
  // sales: sum(from x in g select x.p.sales),
  Const        r1097, "sales"
  Const        r1098, []
  Const        r1099, "p"
  Const        r1100, "sales"
  IterPrep     r1101, r111
  Len          r1102, r1101
  Const        r1103, 0
L98:
  LessInt      r1105, r1103, r1102
  JumpIfFalse  r1105, L97
  Index        r130, r1101, r1103
  Const        r1107, "p"
  Index        r1108, r130, r1107
  Const        r1109, "sales"
  Index        r1110, r1108, r1109
  Append       r1098, r1098, r1110
  Const        r1112, 1
  AddInt       r1103, r1103, r1112
  Jump         L98
L97:
  Sum          r1113, r1098
  // returns: sum(from x in g select x.p.returns),
  Const        r1114, "returns"
  Const        r1115, []
  Const        r1116, "p"
  Const        r1117, "returns"
  IterPrep     r1118, r111
  Len          r1119, r1118
  Const        r1120, 0
L100:
  LessInt      r1122, r1120, r1119
  JumpIfFalse  r1122, L99
  Index        r130, r1118, r1120
  Const        r1124, "p"
  Index        r1125, r130, r1124
  Const        r1126, "returns"
  Index        r1127, r1125, r1126
  Append       r1115, r1115, r1127
  Const        r1129, 1
  AddInt       r1120, r1120, r1129
  Jump         L100
L99:
  Sum          r1130, r1115
  // profit: sum(from x in g select x.p.profit) - sum(from x in g select x.p.profit_loss)
  Const        r1131, "profit"
  Const        r1132, []
  Const        r1133, "p"
  Const        r1134, "profit"
  IterPrep     r1135, r111
  Len          r1136, r1135
  Const        r1137, 0
L102:
  LessInt      r1139, r1137, r1136
  JumpIfFalse  r1139, L101
  Index        r130, r1135, r1137
  Const        r1141, "p"
  Index        r1142, r130, r1141
  Const        r1143, "profit"
  Index        r1144, r1142, r1143
  Append       r1132, r1132, r1144
  Const        r1146, 1
  AddInt       r1137, r1137, r1146
  Jump         L102
L101:
  Sum          r1147, r1132
  Const        r1148, []
  Const        r1149, "p"
  Const        r1150, "profit_loss"
  IterPrep     r1151, r111
  Len          r1152, r1151
  Const        r1153, 0
L104:
  LessInt      r1155, r1153, r1152
  JumpIfFalse  r1155, L103
  Index        r130, r1151, r1153
  Const        r1157, "p"
  Index        r1158, r130, r1157
  Const        r1159, "profit_loss"
  Index        r1160, r1158, r1159
  Append       r1148, r1148, r1160
  Const        r1162, 1
  AddInt       r1153, r1153, r1162
  Jump         L104
L103:
  Sum          r1163, r1148
  Sub          r1164, r1147, r1163
  // channel: g.key.channel,
  Move         r1165, r1087
  Move         r1166, r1091
  // id: g.key.id,
  Move         r1167, r1092
  Move         r1168, r1096
  // sales: sum(from x in g select x.p.sales),
  Move         r1169, r1097
  Move         r1170, r1113
  // returns: sum(from x in g select x.p.returns),
  Move         r1171, r1114
  Move         r1172, r1130
  // profit: sum(from x in g select x.p.profit) - sum(from x in g select x.p.profit_loss)
  Move         r1173, r1131
  Move         r1174, r1164
  // select {
  MakeMap      r1175, 5, r1165
  // sort by g.key.channel
  Const        r1176, "key"
  Index        r1177, r111, r1176
  Const        r1178, "channel"
  Index        r1180, r1177, r1178
  // from p in per_channel
  Move         r1181, r1175
  MakeList     r1182, 2, r1180
  Append       r1008, r1008, r1182
  Const        r1184, 1
  AddInt       r1082, r1082, r1184
  Jump         L105
L96:
  // sort by g.key.channel
  Sort         r1008, r1008
  // json(result)
  JSON         r1008
  // expect len(result) == 0
  Len          r1186, r1008
  Const        r1187, 0
  EqualInt     r1188, r1186, r1187
  Expect       r1188
  Return       r0
