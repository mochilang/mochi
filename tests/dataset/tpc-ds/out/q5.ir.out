func main (regs=863)
  // let store_sales = []
  Const        r0, []
  // from ss in store_sales
  Const        r1, []
  // group by s.s_store_id into g
  Const        r2, "s_store_id"
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Const        r3, "d_date"
  // channel: "store channel",
  Const        r4, "channel"
  // id: "store" + str(g.key),
  Const        r5, "id"
  Const        r6, "key"
  // sales: sum(from x in g select x.ss.ss_ext_sales_price),
  Const        r7, "sales"
  Const        r8, "ss"
  Const        r9, "ss_ext_sales_price"
  // returns: 0.0,
  Const        r10, "returns"
  // profit: sum(from x in g select x.ss.ss_net_profit),
  Const        r11, "profit"
  Const        r12, "ss_net_profit"
  // profit_loss: 0.0
  Const        r13, "profit_loss"
  // from ss in store_sales
  MakeMap      r14, 0, r0
  Const        r16, []
  Move         r15, r16
  IterPrep     r17, r0
  Len          r18, r17
  Const        r19, 0
L8:
  LessInt      r20, r19, r18
  JumpIfFalse  r20, L0
  Index        r21, r17, r19
  Move         r22, r21
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  IterPrep     r23, r0
  Len          r24, r23
  Const        r25, 0
L7:
  LessInt      r26, r25, r24
  JumpIfFalse  r26, L1
  Index        r27, r23, r25
  Move         r28, r27
  Const        r29, "ss_sold_date_sk"
  Index        r30, r22, r29
  Const        r31, "d_date_sk"
  Index        r32, r28, r31
  Equal        r33, r30, r32
  JumpIfFalse  r33, L2
  // join s in store on ss.ss_store_sk == s.s_store_sk
  IterPrep     r34, r0
  Len          r35, r34
  Const        r36, 0
L6:
  LessInt      r37, r36, r35
  JumpIfFalse  r37, L2
  Index        r38, r34, r36
  Move         r39, r38
  Const        r40, "ss_store_sk"
  Index        r41, r22, r40
  Const        r42, "s_store_sk"
  Index        r43, r39, r42
  Equal        r44, r41, r43
  JumpIfFalse  r44, L3
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Index        r45, r28, r3
  Const        r46, "1998-12-01"
  LessEq       r47, r46, r45
  Index        r48, r28, r3
  Const        r49, "1998-12-15"
  LessEq       r50, r48, r49
  Move         r51, r47
  JumpIfFalse  r51, L4
  Move         r51, r50
L4:
  JumpIfFalse  r51, L3
  // from ss in store_sales
  Move         r52, r22
  Const        r53, "d"
  Move         r54, r28
  Const        r55, "s"
  Move         r56, r39
  Move         r57, r8
  Move         r58, r52
  Move         r59, r53
  Move         r60, r54
  Move         r61, r55
  Move         r62, r56
  MakeMap      r63, 3, r57
  // group by s.s_store_id into g
  Index        r64, r39, r2
  Str          r65, r64
  In           r66, r65, r14
  JumpIfTrue   r66, L5
  // from ss in store_sales
  Const        r67, "__group__"
  Const        r68, true
  // group by s.s_store_id into g
  Move         r69, r64
  // from ss in store_sales
  Const        r70, "items"
  Move         r71, r0
  Const        r72, "count"
  Const        r73, 0
  Move         r74, r67
  Move         r75, r68
  Move         r76, r6
  Move         r77, r69
  Move         r78, r70
  Move         r79, r71
  Move         r80, r72
  Move         r81, r73
  MakeMap      r82, 4, r74
  SetIndex     r14, r65, r82
  Append       r83, r15, r82
  Move         r15, r83
L5:
  Index        r84, r14, r65
  Index        r85, r84, r70
  Append       r86, r85, r63
  SetIndex     r84, r70, r86
  Index        r87, r84, r72
  Const        r88, 1
  AddInt       r89, r87, r88
  SetIndex     r84, r72, r89
L3:
  // join s in store on ss.ss_store_sk == s.s_store_sk
  AddInt       r36, r36, r88
  Jump         L6
L2:
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  AddInt       r25, r25, r88
  Jump         L7
L1:
  // from ss in store_sales
  AddInt       r19, r19, r88
  Jump         L8
L0:
  Move         r90, r73
  Len          r91, r15
L14:
  LessInt      r92, r90, r91
  JumpIfFalse  r92, L9
  Index        r93, r15, r90
  Move         r94, r93
  // channel: "store channel",
  Const        r95, "channel"
  Const        r96, "store channel"
  // id: "store" + str(g.key),
  Const        r97, "id"
  Const        r98, "store"
  Index        r99, r94, r6
  Str          r100, r99
  Add          r101, r98, r100
  // sales: sum(from x in g select x.ss.ss_ext_sales_price),
  Const        r102, "sales"
  Const        r103, []
  IterPrep     r104, r94
  Len          r105, r104
  Move         r106, r73
L11:
  LessInt      r107, r106, r105
  JumpIfFalse  r107, L10
  Index        r108, r104, r106
  Move         r109, r108
  Index        r110, r109, r8
  Index        r111, r110, r9
  Append       r112, r103, r111
  Move         r103, r112
  AddInt       r106, r106, r88
  Jump         L11
L10:
  Sum          r113, r103
  // returns: 0.0,
  Const        r114, "returns"
  Const        r115, 0
  // profit: sum(from x in g select x.ss.ss_net_profit),
  Const        r116, "profit"
  Const        r117, []
  IterPrep     r118, r94
  Len          r119, r118
  Move         r120, r73
L13:
  LessInt      r121, r120, r119
  JumpIfFalse  r121, L12
  Index        r122, r118, r120
  Move         r109, r122
  Index        r123, r109, r8
  Index        r124, r123, r12
  Append       r125, r117, r124
  Move         r117, r125
  AddInt       r120, r120, r88
  Jump         L13
L12:
  Sum          r126, r117
  // profit_loss: 0.0
  Const        r127, "profit_loss"
  // channel: "store channel",
  Move         r128, r95
  Move         r129, r96
  // id: "store" + str(g.key),
  Move         r130, r97
  Move         r131, r101
  // sales: sum(from x in g select x.ss.ss_ext_sales_price),
  Move         r132, r102
  Move         r133, r113
  // returns: 0.0,
  Move         r134, r114
  Move         r135, r115
  // profit: sum(from x in g select x.ss.ss_net_profit),
  Move         r136, r116
  Move         r137, r126
  // profit_loss: 0.0
  Move         r138, r127
  Move         r139, r115
  // select {
  MakeMap      r140, 6, r128
  // from ss in store_sales
  Append       r141, r1, r140
  Move         r1, r141
  AddInt       r90, r90, r88
  Jump         L14
L9:
  // from sr in store_returns
  Const        r142, []
  // returns: sum(from x in g select x.sr.sr_return_amt),
  Const        r143, "sr"
  Const        r144, "sr_return_amt"
  // profit_loss: sum(from x in g select x.sr.sr_net_loss)
  Const        r145, "sr_net_loss"
  // from sr in store_returns
  MakeMap      r146, 0, r0
  Const        r148, []
  Move         r147, r148
  IterPrep     r149, r0
  Len          r150, r149
  Const        r151, 0
L23:
  LessInt      r152, r151, r150
  JumpIfFalse  r152, L15
  Index        r153, r149, r151
  Move         r154, r153
  // join d in date_dim on sr.sr_returned_date_sk == d.d_date_sk
  IterPrep     r155, r0
  Len          r156, r155
  Const        r157, 0
L22:
  LessInt      r158, r157, r156
  JumpIfFalse  r158, L16
  Index        r159, r155, r157
  Move         r160, r159
  Const        r161, "sr_returned_date_sk"
  Index        r162, r154, r161
  Index        r163, r160, r31
  Equal        r164, r162, r163
  JumpIfFalse  r164, L17
  // join s in store on sr.sr_store_sk == s.s_store_sk
  IterPrep     r165, r0
  Len          r166, r165
  Const        r167, 0
L21:
  LessInt      r168, r167, r166
  JumpIfFalse  r168, L17
  Index        r169, r165, r167
  Move         r170, r169
  Const        r171, "sr_store_sk"
  Index        r172, r154, r171
  Index        r173, r170, r42
  Equal        r174, r172, r173
  JumpIfFalse  r174, L18
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Index        r175, r160, r3
  LessEq       r176, r46, r175
  Index        r177, r160, r3
  LessEq       r178, r177, r49
  Move         r179, r176
  JumpIfFalse  r179, L19
  Move         r179, r178
L19:
  JumpIfFalse  r179, L18
  // from sr in store_returns
  Move         r180, r154
  Move         r181, r160
  Move         r182, r170
  Move         r183, r143
  Move         r184, r180
  Move         r185, r53
  Move         r186, r181
  Move         r187, r55
  Move         r188, r182
  MakeMap      r189, 3, r183
  // group by s.s_store_id into g
  Index        r190, r170, r2
  Str          r191, r190
  In           r192, r191, r146
  JumpIfTrue   r192, L20
  Move         r193, r190
  // from sr in store_returns
  Move         r194, r0
  Move         r195, r67
  Move         r196, r68
  Move         r197, r6
  Move         r198, r193
  Move         r199, r70
  Move         r200, r194
  Move         r201, r72
  Move         r202, r73
  MakeMap      r203, 4, r195
  SetIndex     r146, r191, r203
  Append       r204, r147, r203
  Move         r147, r204
L20:
  Index        r205, r146, r191
  Index        r206, r205, r70
  Append       r207, r206, r189
  SetIndex     r205, r70, r207
  Index        r208, r205, r72
  AddInt       r209, r208, r88
  SetIndex     r205, r72, r209
L18:
  // join s in store on sr.sr_store_sk == s.s_store_sk
  AddInt       r167, r167, r88
  Jump         L21
L17:
  // join d in date_dim on sr.sr_returned_date_sk == d.d_date_sk
  AddInt       r157, r157, r88
  Jump         L22
L16:
  // from sr in store_returns
  AddInt       r151, r151, r88
  Jump         L23
L15:
  Move         r210, r73
  Len          r211, r147
L29:
  LessInt      r212, r210, r211
  JumpIfFalse  r212, L24
  Index        r213, r147, r210
  Move         r94, r213
  // channel: "store channel",
  Const        r214, "channel"
  // id: "store" + str(g.key),
  Const        r215, "id"
  Index        r216, r94, r6
  Str          r217, r216
  Add          r218, r98, r217
  // sales: 0.0,
  Const        r219, "sales"
  // returns: sum(from x in g select x.sr.sr_return_amt),
  Const        r220, "returns"
  Const        r221, []
  IterPrep     r222, r94
  Len          r223, r222
  Move         r224, r73
L26:
  LessInt      r225, r224, r223
  JumpIfFalse  r225, L25
  Index        r226, r222, r224
  Move         r109, r226
  Index        r227, r109, r143
  Index        r228, r227, r144
  Append       r229, r221, r228
  Move         r221, r229
  AddInt       r224, r224, r88
  Jump         L26
L25:
  Sum          r230, r221
  // profit: 0.0,
  Const        r231, "profit"
  // profit_loss: sum(from x in g select x.sr.sr_net_loss)
  Const        r232, "profit_loss"
  Const        r233, []
  IterPrep     r234, r94
  Len          r235, r234
  Move         r236, r73
L28:
  LessInt      r237, r236, r235
  JumpIfFalse  r237, L27
  Index        r238, r234, r236
  Move         r109, r238
  Index        r239, r109, r143
  Index        r240, r239, r145
  Append       r241, r233, r240
  Move         r233, r241
  AddInt       r236, r236, r88
  Jump         L28
L27:
  Sum          r242, r233
  // channel: "store channel",
  Move         r243, r214
  Move         r244, r96
  // id: "store" + str(g.key),
  Move         r245, r215
  Move         r246, r218
  // sales: 0.0,
  Move         r247, r219
  Move         r248, r115
  // returns: sum(from x in g select x.sr.sr_return_amt),
  Move         r249, r220
  Move         r250, r230
  // profit: 0.0,
  Move         r251, r231
  Move         r252, r115
  // profit_loss: sum(from x in g select x.sr.sr_net_loss)
  Move         r253, r232
  Move         r254, r242
  // select {
  MakeMap      r255, 6, r243
  // from sr in store_returns
  Append       r256, r142, r255
  Move         r142, r256
  AddInt       r210, r210, r88
  Jump         L29
L24:
  // from cs in catalog_sales
  Const        r257, []
  // group by cp.cp_catalog_page_id into g
  Const        r258, "cp_catalog_page_id"
  // sales: sum(from x in g select x.cs.cs_ext_sales_price),
  Const        r259, "cs"
  Const        r260, "cs_ext_sales_price"
  // profit: sum(from x in g select x.cs.cs_net_profit),
  Const        r261, "cs_net_profit"
  // from cs in catalog_sales
  MakeMap      r262, 0, r0
  Const        r264, []
  Move         r263, r264
  IterPrep     r265, r0
  Len          r266, r265
  Const        r267, 0
L38:
  LessInt      r268, r267, r266
  JumpIfFalse  r268, L30
  Index        r269, r265, r267
  Move         r270, r269
  // join d in date_dim on cs.cs_sold_date_sk == d.d_date_sk
  IterPrep     r271, r0
  Len          r272, r271
  Const        r273, 0
L37:
  LessInt      r274, r273, r272
  JumpIfFalse  r274, L31
  Index        r275, r271, r273
  Move         r276, r275
  Const        r277, "cs_sold_date_sk"
  Index        r278, r270, r277
  Index        r279, r276, r31
  Equal        r280, r278, r279
  JumpIfFalse  r280, L32
  // join cp in catalog_page on cs.cs_catalog_page_sk == cp.cp_catalog_page_sk
  IterPrep     r281, r0
  Len          r282, r281
  Const        r283, 0
L36:
  LessInt      r284, r283, r282
  JumpIfFalse  r284, L32
  Index        r285, r281, r283
  Move         r286, r285
  Const        r287, "cs_catalog_page_sk"
  Index        r288, r270, r287
  Const        r289, "cp_catalog_page_sk"
  Index        r290, r286, r289
  Equal        r291, r288, r290
  JumpIfFalse  r291, L33
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Index        r292, r276, r3
  LessEq       r293, r46, r292
  Index        r294, r276, r3
  LessEq       r295, r294, r49
  Move         r296, r293
  JumpIfFalse  r296, L34
  Move         r296, r295
L34:
  JumpIfFalse  r296, L33
  // from cs in catalog_sales
  Move         r297, r270
  Move         r298, r276
  Const        r299, "cp"
  Move         r300, r286
  Move         r301, r259
  Move         r302, r297
  Move         r303, r53
  Move         r304, r298
  Move         r305, r299
  Move         r306, r300
  MakeMap      r307, 3, r301
  // group by cp.cp_catalog_page_id into g
  Index        r308, r286, r258
  Str          r309, r308
  In           r310, r309, r262
  JumpIfTrue   r310, L35
  Move         r311, r308
  // from cs in catalog_sales
  Move         r312, r0
  Move         r313, r67
  Move         r314, r68
  Move         r315, r6
  Move         r316, r311
  Move         r317, r70
  Move         r318, r312
  Move         r319, r72
  Move         r320, r73
  MakeMap      r321, 4, r313
  SetIndex     r262, r309, r321
  Append       r322, r263, r321
  Move         r263, r322
L35:
  Index        r323, r262, r309
  Index        r324, r323, r70
  Append       r325, r324, r307
  SetIndex     r323, r70, r325
  Index        r326, r323, r72
  AddInt       r327, r326, r88
  SetIndex     r323, r72, r327
L33:
  // join cp in catalog_page on cs.cs_catalog_page_sk == cp.cp_catalog_page_sk
  AddInt       r283, r283, r88
  Jump         L36
L32:
  // join d in date_dim on cs.cs_sold_date_sk == d.d_date_sk
  AddInt       r273, r273, r88
  Jump         L37
L31:
  // from cs in catalog_sales
  AddInt       r267, r267, r88
  Jump         L38
L30:
  Move         r328, r73
  Len          r329, r263
L44:
  LessInt      r330, r328, r329
  JumpIfFalse  r330, L39
  Index        r331, r263, r328
  Move         r94, r331
  // channel: "catalog channel",
  Const        r332, "channel"
  Const        r333, "catalog channel"
  // id: "catalog_page" + str(g.key),
  Const        r334, "id"
  Const        r335, "catalog_page"
  Index        r336, r94, r6
  Str          r337, r336
  Add          r338, r335, r337
  // sales: sum(from x in g select x.cs.cs_ext_sales_price),
  Const        r339, "sales"
  Const        r340, []
  IterPrep     r341, r94
  Len          r342, r341
  Move         r343, r73
L41:
  LessInt      r344, r343, r342
  JumpIfFalse  r344, L40
  Index        r345, r341, r343
  Move         r109, r345
  Index        r346, r109, r259
  Index        r347, r346, r260
  Append       r348, r340, r347
  Move         r340, r348
  AddInt       r343, r343, r88
  Jump         L41
L40:
  Sum          r349, r340
  // returns: 0.0,
  Const        r350, "returns"
  // profit: sum(from x in g select x.cs.cs_net_profit),
  Const        r351, "profit"
  Const        r352, []
  IterPrep     r353, r94
  Len          r354, r353
  Move         r355, r73
L43:
  LessInt      r356, r355, r354
  JumpIfFalse  r356, L42
  Index        r357, r353, r355
  Move         r109, r357
  Index        r358, r109, r259
  Index        r359, r358, r261
  Append       r360, r352, r359
  Move         r352, r360
  AddInt       r355, r355, r88
  Jump         L43
L42:
  Sum          r361, r352
  // profit_loss: 0.0
  Const        r362, "profit_loss"
  // channel: "catalog channel",
  Move         r363, r332
  Move         r364, r333
  // id: "catalog_page" + str(g.key),
  Move         r365, r334
  Move         r366, r338
  // sales: sum(from x in g select x.cs.cs_ext_sales_price),
  Move         r367, r339
  Move         r368, r349
  // returns: 0.0,
  Move         r369, r350
  Move         r370, r115
  // profit: sum(from x in g select x.cs.cs_net_profit),
  Move         r371, r351
  Move         r372, r361
  // profit_loss: 0.0
  Move         r373, r362
  Move         r374, r115
  // select {
  MakeMap      r375, 6, r363
  // from cs in catalog_sales
  Append       r376, r257, r375
  Move         r257, r376
  AddInt       r328, r328, r88
  Jump         L44
L39:
  // from cr in catalog_returns
  Const        r377, []
  // returns: sum(from x in g select x.cr.cr_return_amount),
  Const        r378, "cr"
  Const        r379, "cr_return_amount"
  // profit_loss: sum(from x in g select x.cr.cr_net_loss)
  Const        r380, "cr_net_loss"
  // from cr in catalog_returns
  MakeMap      r381, 0, r0
  Const        r383, []
  Move         r382, r383
  IterPrep     r384, r0
  Len          r385, r384
  Const        r386, 0
L53:
  LessInt      r387, r386, r385
  JumpIfFalse  r387, L45
  Index        r388, r384, r386
  Move         r389, r388
  // join d in date_dim on cr.cr_returned_date_sk == d.d_date_sk
  IterPrep     r390, r0
  Len          r391, r390
  Const        r392, 0
L52:
  LessInt      r393, r392, r391
  JumpIfFalse  r393, L46
  Index        r394, r390, r392
  Move         r395, r394
  Const        r396, "cr_returned_date_sk"
  Index        r397, r389, r396
  Index        r398, r395, r31
  Equal        r399, r397, r398
  JumpIfFalse  r399, L47
  // join cp in catalog_page on cr.cr_catalog_page_sk == cp.cp_catalog_page_sk
  IterPrep     r400, r0
  Len          r401, r400
  Const        r402, 0
L51:
  LessInt      r403, r402, r401
  JumpIfFalse  r403, L47
  Index        r404, r400, r402
  Move         r405, r404
  Const        r406, "cr_catalog_page_sk"
  Index        r407, r389, r406
  Index        r408, r405, r289
  Equal        r409, r407, r408
  JumpIfFalse  r409, L48
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Index        r410, r395, r3
  LessEq       r411, r46, r410
  Index        r412, r395, r3
  LessEq       r413, r412, r49
  Move         r414, r411
  JumpIfFalse  r414, L49
  Move         r414, r413
L49:
  JumpIfFalse  r414, L48
  // from cr in catalog_returns
  Move         r415, r389
  Move         r416, r395
  Move         r417, r405
  Move         r418, r378
  Move         r419, r415
  Move         r420, r53
  Move         r421, r416
  Move         r422, r299
  Move         r423, r417
  MakeMap      r424, 3, r418
  // group by cp.cp_catalog_page_id into g
  Index        r425, r405, r258
  Str          r426, r425
  In           r427, r426, r381
  JumpIfTrue   r427, L50
  Move         r428, r425
  // from cr in catalog_returns
  Move         r429, r0
  Move         r430, r67
  Move         r431, r68
  Move         r432, r6
  Move         r433, r428
  Move         r434, r70
  Move         r435, r429
  Move         r436, r72
  Move         r437, r73
  MakeMap      r438, 4, r430
  SetIndex     r381, r426, r438
  Append       r439, r382, r438
  Move         r382, r439
L50:
  Index        r440, r381, r426
  Index        r441, r440, r70
  Append       r442, r441, r424
  SetIndex     r440, r70, r442
  Index        r443, r440, r72
  AddInt       r444, r443, r88
  SetIndex     r440, r72, r444
L48:
  // join cp in catalog_page on cr.cr_catalog_page_sk == cp.cp_catalog_page_sk
  AddInt       r402, r402, r88
  Jump         L51
L47:
  // join d in date_dim on cr.cr_returned_date_sk == d.d_date_sk
  AddInt       r392, r392, r88
  Jump         L52
L46:
  // from cr in catalog_returns
  AddInt       r386, r386, r88
  Jump         L53
L45:
  Move         r445, r73
  Len          r446, r382
L59:
  LessInt      r447, r445, r446
  JumpIfFalse  r447, L54
  Index        r448, r382, r445
  Move         r94, r448
  // channel: "catalog channel",
  Const        r449, "channel"
  // id: "catalog_page" + str(g.key),
  Const        r450, "id"
  Index        r451, r94, r6
  Str          r452, r451
  Add          r453, r335, r452
  // sales: 0.0,
  Const        r454, "sales"
  // returns: sum(from x in g select x.cr.cr_return_amount),
  Const        r455, "returns"
  Const        r456, []
  IterPrep     r457, r94
  Len          r458, r457
  Move         r459, r73
L56:
  LessInt      r460, r459, r458
  JumpIfFalse  r460, L55
  Index        r461, r457, r459
  Move         r109, r461
  Index        r462, r109, r378
  Index        r463, r462, r379
  Append       r464, r456, r463
  Move         r456, r464
  AddInt       r459, r459, r88
  Jump         L56
L55:
  Sum          r465, r456
  // profit: 0.0,
  Const        r466, "profit"
  // profit_loss: sum(from x in g select x.cr.cr_net_loss)
  Const        r467, "profit_loss"
  Const        r468, []
  IterPrep     r469, r94
  Len          r470, r469
  Move         r471, r73
L58:
  LessInt      r472, r471, r470
  JumpIfFalse  r472, L57
  Index        r473, r469, r471
  Move         r109, r473
  Index        r474, r109, r378
  Index        r475, r474, r380
  Append       r476, r468, r475
  Move         r468, r476
  AddInt       r471, r471, r88
  Jump         L58
L57:
  Sum          r477, r468
  // channel: "catalog channel",
  Move         r478, r449
  Move         r479, r333
  // id: "catalog_page" + str(g.key),
  Move         r480, r450
  Move         r481, r453
  // sales: 0.0,
  Move         r482, r454
  Move         r483, r115
  // returns: sum(from x in g select x.cr.cr_return_amount),
  Move         r484, r455
  Move         r485, r465
  // profit: 0.0,
  Move         r486, r466
  Move         r487, r115
  // profit_loss: sum(from x in g select x.cr.cr_net_loss)
  Move         r488, r467
  Move         r489, r477
  // select {
  MakeMap      r490, 6, r478
  // from cr in catalog_returns
  Append       r491, r377, r490
  Move         r377, r491
  AddInt       r445, r445, r88
  Jump         L59
L54:
  // from ws in web_sales
  Const        r492, []
  // group by w.web_site_id into g
  Const        r493, "web_site_id"
  // sales: sum(from x in g select x.ws.ws_ext_sales_price),
  Const        r494, "ws"
  Const        r495, "ws_ext_sales_price"
  // profit: sum(from x in g select x.ws.ws_net_profit),
  Const        r496, "ws_net_profit"
  // from ws in web_sales
  MakeMap      r497, 0, r0
  Const        r499, []
  Move         r498, r499
  IterPrep     r500, r0
  Len          r501, r500
  Const        r502, 0
L68:
  LessInt      r503, r502, r501
  JumpIfFalse  r503, L60
  Index        r504, r500, r502
  Move         r505, r504
  // join d in date_dim on ws.ws_sold_date_sk == d.d_date_sk
  IterPrep     r506, r0
  Len          r507, r506
  Const        r508, 0
L67:
  LessInt      r509, r508, r507
  JumpIfFalse  r509, L61
  Index        r510, r506, r508
  Move         r511, r510
  Const        r512, "ws_sold_date_sk"
  Index        r513, r505, r512
  Index        r514, r511, r31
  Equal        r515, r513, r514
  JumpIfFalse  r515, L62
  // join w in web_site on ws.ws_web_site_sk == w.web_site_sk
  IterPrep     r516, r0
  Len          r517, r516
  Const        r518, 0
L66:
  LessInt      r519, r518, r517
  JumpIfFalse  r519, L62
  Index        r520, r516, r518
  Move         r521, r520
  Const        r522, "ws_web_site_sk"
  Index        r523, r505, r522
  Const        r524, "web_site_sk"
  Index        r525, r521, r524
  Equal        r526, r523, r525
  JumpIfFalse  r526, L63
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Index        r527, r511, r3
  LessEq       r528, r46, r527
  Index        r529, r511, r3
  LessEq       r530, r529, r49
  Move         r531, r528
  JumpIfFalse  r531, L64
  Move         r531, r530
L64:
  JumpIfFalse  r531, L63
  // from ws in web_sales
  Move         r532, r505
  Move         r533, r511
  Const        r534, "w"
  Move         r535, r521
  Move         r536, r494
  Move         r537, r532
  Move         r538, r53
  Move         r539, r533
  Move         r540, r534
  Move         r541, r535
  MakeMap      r542, 3, r536
  // group by w.web_site_id into g
  Index        r543, r521, r493
  Str          r544, r543
  In           r545, r544, r497
  JumpIfTrue   r545, L65
  Move         r546, r543
  // from ws in web_sales
  Move         r547, r0
  Move         r548, r67
  Move         r549, r68
  Move         r550, r6
  Move         r551, r546
  Move         r552, r70
  Move         r553, r547
  Move         r554, r72
  Move         r555, r73
  MakeMap      r556, 4, r548
  SetIndex     r497, r544, r556
  Append       r557, r498, r556
  Move         r498, r557
L65:
  Index        r558, r497, r544
  Index        r559, r558, r70
  Append       r560, r559, r542
  SetIndex     r558, r70, r560
  Index        r561, r558, r72
  AddInt       r562, r561, r88
  SetIndex     r558, r72, r562
L63:
  // join w in web_site on ws.ws_web_site_sk == w.web_site_sk
  AddInt       r518, r518, r88
  Jump         L66
L62:
  // join d in date_dim on ws.ws_sold_date_sk == d.d_date_sk
  AddInt       r508, r508, r88
  Jump         L67
L61:
  // from ws in web_sales
  AddInt       r502, r502, r88
  Jump         L68
L60:
  Move         r563, r73
  Len          r564, r498
L74:
  LessInt      r565, r563, r564
  JumpIfFalse  r565, L69
  Index        r566, r498, r563
  Move         r94, r566
  // channel: "web channel",
  Const        r567, "channel"
  Const        r568, "web channel"
  // id: "web_site" + str(g.key),
  Const        r569, "id"
  Const        r570, "web_site"
  Index        r571, r94, r6
  Str          r572, r571
  Add          r573, r570, r572
  // sales: sum(from x in g select x.ws.ws_ext_sales_price),
  Const        r574, "sales"
  Const        r575, []
  IterPrep     r576, r94
  Len          r577, r576
  Move         r578, r73
L71:
  LessInt      r579, r578, r577
  JumpIfFalse  r579, L70
  Index        r580, r576, r578
  Move         r109, r580
  Index        r581, r109, r494
  Index        r582, r581, r495
  Append       r583, r575, r582
  Move         r575, r583
  AddInt       r578, r578, r88
  Jump         L71
L70:
  Sum          r584, r575
  // returns: 0.0,
  Const        r585, "returns"
  // profit: sum(from x in g select x.ws.ws_net_profit),
  Const        r586, "profit"
  Const        r587, []
  IterPrep     r588, r94
  Len          r589, r588
  Move         r590, r73
L73:
  LessInt      r591, r590, r589
  JumpIfFalse  r591, L72
  Index        r592, r588, r590
  Move         r109, r592
  Index        r593, r109, r494
  Index        r594, r593, r496
  Append       r595, r587, r594
  Move         r587, r595
  AddInt       r590, r590, r88
  Jump         L73
L72:
  Sum          r596, r587
  // profit_loss: 0.0
  Const        r597, "profit_loss"
  // channel: "web channel",
  Move         r598, r567
  Move         r599, r568
  // id: "web_site" + str(g.key),
  Move         r600, r569
  Move         r601, r573
  // sales: sum(from x in g select x.ws.ws_ext_sales_price),
  Move         r602, r574
  Move         r603, r584
  // returns: 0.0,
  Move         r604, r585
  Move         r605, r115
  // profit: sum(from x in g select x.ws.ws_net_profit),
  Move         r606, r586
  Move         r607, r596
  // profit_loss: 0.0
  Move         r608, r597
  Move         r609, r115
  // select {
  MakeMap      r610, 6, r598
  // from ws in web_sales
  Append       r611, r492, r610
  Move         r492, r611
  AddInt       r563, r563, r88
  Jump         L74
L69:
  // from wr in web_returns
  Const        r612, []
  // returns: sum(from x in g select x.wr.wr_return_amt),
  Const        r613, "wr"
  Const        r614, "wr_return_amt"
  // profit_loss: sum(from x in g select x.wr.wr_net_loss)
  Const        r615, "wr_net_loss"
  // from wr in web_returns
  MakeMap      r616, 0, r0
  Const        r618, []
  Move         r617, r618
  IterPrep     r619, r0
  Len          r620, r619
  Const        r621, 0
L86:
  LessInt      r622, r621, r620
  JumpIfFalse  r622, L75
  Index        r623, r619, r621
  Move         r624, r623
  // join ws in web_sales on wr.wr_item_sk == ws.ws_item_sk && wr.wr_order_number == ws.ws_order_number
  IterPrep     r625, r0
  Len          r626, r625
  Const        r627, 0
L85:
  LessInt      r628, r627, r626
  JumpIfFalse  r628, L76
  Index        r629, r625, r627
  Move         r492, r629
  Const        r630, "wr_item_sk"
  Index        r631, r624, r630
  Const        r632, "ws_item_sk"
  Index        r633, r492, r632
  Equal        r634, r631, r633
  Const        r635, "wr_order_number"
  Index        r636, r624, r635
  Const        r637, "ws_order_number"
  Index        r638, r492, r637
  Equal        r639, r636, r638
  Move         r640, r634
  JumpIfFalse  r640, L77
  Move         r640, r639
L77:
  JumpIfFalse  r640, L78
  // join d in date_dim on wr.wr_returned_date_sk == d.d_date_sk
  IterPrep     r641, r0
  Len          r642, r641
  Const        r643, 0
L84:
  LessInt      r644, r643, r642
  JumpIfFalse  r644, L78
  Index        r645, r641, r643
  Move         r646, r645
  Const        r647, "wr_returned_date_sk"
  Index        r648, r624, r647
  Index        r649, r646, r31
  Equal        r650, r648, r649
  JumpIfFalse  r650, L79
  // join w in web_site on ws.ws_web_site_sk == w.web_site_sk
  IterPrep     r651, r0
  Len          r652, r651
  Const        r653, 0
L83:
  LessInt      r654, r653, r652
  JumpIfFalse  r654, L79
  Index        r655, r651, r653
  Move         r656, r655
  Index        r657, r492, r522
  Index        r658, r656, r524
  Equal        r659, r657, r658
  JumpIfFalse  r659, L80
  // where d.d_date >= "1998-12-01" && d.d_date <= "1998-12-15"
  Index        r660, r646, r3
  LessEq       r661, r46, r660
  Index        r662, r646, r3
  LessEq       r663, r662, r49
  Move         r664, r661
  JumpIfFalse  r664, L81
  Move         r664, r663
L81:
  JumpIfFalse  r664, L80
  // from wr in web_returns
  Move         r665, r624
  Move         r666, r492
  Move         r667, r646
  Move         r668, r656
  Move         r669, r613
  Move         r670, r665
  Move         r671, r494
  Move         r672, r666
  Move         r673, r53
  Move         r674, r667
  Move         r675, r534
  Move         r676, r668
  MakeMap      r677, 4, r669
  // group by w.web_site_id into g
  Index        r678, r656, r493
  Str          r679, r678
  In           r680, r679, r616
  JumpIfTrue   r680, L82
  Move         r681, r678
  // from wr in web_returns
  Move         r682, r0
  Move         r683, r67
  Move         r684, r68
  Move         r685, r6
  Move         r686, r681
  Move         r687, r70
  Move         r688, r682
  Move         r689, r72
  Move         r690, r73
  MakeMap      r691, 4, r683
  SetIndex     r616, r679, r691
  Append       r692, r617, r691
  Move         r617, r692
L82:
  Index        r693, r616, r679
  Index        r694, r693, r70
  Append       r695, r694, r677
  SetIndex     r693, r70, r695
  Index        r696, r693, r72
  AddInt       r697, r696, r88
  SetIndex     r693, r72, r697
L80:
  // join w in web_site on ws.ws_web_site_sk == w.web_site_sk
  AddInt       r653, r653, r88
  Jump         L83
L79:
  // join d in date_dim on wr.wr_returned_date_sk == d.d_date_sk
  AddInt       r643, r643, r88
  Jump         L84
L78:
  // join ws in web_sales on wr.wr_item_sk == ws.ws_item_sk && wr.wr_order_number == ws.ws_order_number
  AddInt       r627, r627, r88
  Jump         L85
L76:
  // from wr in web_returns
  AddInt       r621, r621, r88
  Jump         L86
L75:
  Move         r698, r73
  Len          r699, r617
L92:
  LessInt      r700, r698, r699
  JumpIfFalse  r700, L87
  Index        r701, r617, r698
  Move         r94, r701
  // channel: "web channel",
  Const        r702, "channel"
  // id: "web_site" + str(g.key),
  Const        r703, "id"
  Index        r704, r94, r6
  Str          r705, r704
  Add          r706, r570, r705
  // sales: 0.0,
  Const        r707, "sales"
  // returns: sum(from x in g select x.wr.wr_return_amt),
  Const        r708, "returns"
  Const        r709, []
  IterPrep     r710, r94
  Len          r711, r710
  Move         r712, r73
L89:
  LessInt      r713, r712, r711
  JumpIfFalse  r713, L88
  Index        r714, r710, r712
  Move         r109, r714
  Index        r715, r109, r613
  Index        r716, r715, r614
  Append       r717, r709, r716
  Move         r709, r717
  AddInt       r712, r712, r88
  Jump         L89
L88:
  Sum          r718, r709
  // profit: 0.0,
  Const        r719, "profit"
  // profit_loss: sum(from x in g select x.wr.wr_net_loss)
  Const        r720, "profit_loss"
  Const        r721, []
  IterPrep     r722, r94
  Len          r723, r722
  Move         r724, r73
L91:
  LessInt      r725, r724, r723
  JumpIfFalse  r725, L90
  Index        r726, r722, r724
  Move         r109, r726
  Index        r727, r109, r613
  Index        r728, r727, r615
  Append       r729, r721, r728
  Move         r721, r729
  AddInt       r724, r724, r88
  Jump         L91
L90:
  Sum          r730, r721
  // channel: "web channel",
  Move         r731, r702
  Move         r732, r568
  // id: "web_site" + str(g.key),
  Move         r733, r703
  Move         r734, r706
  // sales: 0.0,
  Move         r735, r707
  Move         r736, r115
  // returns: sum(from x in g select x.wr.wr_return_amt),
  Move         r737, r708
  Move         r738, r718
  // profit: 0.0,
  Move         r739, r719
  Move         r740, r115
  // profit_loss: sum(from x in g select x.wr.wr_net_loss)
  Move         r741, r720
  Move         r742, r730
  // select {
  MakeMap      r743, 6, r731
  // from wr in web_returns
  Append       r744, r612, r743
  Move         r612, r744
  AddInt       r698, r698, r88
  Jump         L92
L87:
  // let per_channel = concat(ss union all sr, cs union all cr, ws union all wr)
  UnionAll     r745, r1, r142
  UnionAll     r746, r257, r377
  UnionAll     r747, r745, r746
  UnionAll     r748, r492, r612
  UnionAll     r749, r747, r748
  // from p in per_channel
  Const        r750, []
  // sales: sum(from x in g select x.p.sales),
  Const        r751, "p"
  // from p in per_channel
  IterPrep     r752, r749
  Len          r753, r752
  Const        r754, 0
  MakeMap      r755, 0, r0
  Const        r757, []
  Move         r756, r757
L95:
  LessInt      r758, r754, r753
  JumpIfFalse  r758, L93
  Index        r759, r752, r754
  Move         r760, r759
  // group by { channel: p.channel, id: p.id } into g
  Const        r761, "channel"
  Index        r762, r760, r4
  Const        r763, "id"
  Index        r764, r760, r5
  Move         r765, r761
  Move         r766, r762
  Move         r767, r763
  Move         r768, r764
  MakeMap      r769, 2, r765
  Str          r770, r769
  In           r771, r770, r755
  JumpIfTrue   r771, L94
  Move         r772, r769
  // from p in per_channel
  Move         r773, r0
  Move         r774, r67
  Move         r775, r68
  Move         r776, r6
  Move         r777, r772
  Move         r778, r70
  Move         r779, r773
  Move         r780, r72
  Move         r781, r73
  MakeMap      r782, 4, r774
  SetIndex     r755, r770, r782
  Append       r783, r756, r782
  Move         r756, r783
L94:
  Index        r784, r755, r770
  Index        r785, r784, r70
  Append       r786, r785, r759
  SetIndex     r784, r70, r786
  Index        r787, r784, r72
  AddInt       r788, r787, r88
  SetIndex     r784, r72, r788
  AddInt       r754, r754, r88
  Jump         L95
L93:
  Move         r789, r73
  Len          r790, r756
L105:
  LessInt      r791, r789, r790
  JumpIfFalse  r791, L96
  Index        r792, r756, r789
  Move         r94, r792
  // channel: g.key.channel,
  Const        r793, "channel"
  Index        r794, r94, r6
  Index        r795, r794, r4
  // id: g.key.id,
  Const        r796, "id"
  Index        r797, r94, r6
  Index        r798, r797, r5
  // sales: sum(from x in g select x.p.sales),
  Const        r799, "sales"
  Const        r800, []
  IterPrep     r801, r94
  Len          r802, r801
  Move         r803, r73
L98:
  LessInt      r804, r803, r802
  JumpIfFalse  r804, L97
  Index        r805, r801, r803
  Move         r109, r805
  Index        r806, r109, r751
  Index        r807, r806, r7
  Append       r808, r800, r807
  Move         r800, r808
  AddInt       r803, r803, r88
  Jump         L98
L97:
  Sum          r809, r800
  // returns: sum(from x in g select x.p.returns),
  Const        r810, "returns"
  Const        r811, []
  IterPrep     r812, r94
  Len          r813, r812
  Move         r814, r73
L100:
  LessInt      r815, r814, r813
  JumpIfFalse  r815, L99
  Index        r816, r812, r814
  Move         r109, r816
  Index        r817, r109, r751
  Index        r818, r817, r10
  Append       r819, r811, r818
  Move         r811, r819
  AddInt       r814, r814, r88
  Jump         L100
L99:
  Sum          r820, r811
  // profit: sum(from x in g select x.p.profit) - sum(from x in g select x.p.profit_loss)
  Const        r821, "profit"
  Const        r822, []
  IterPrep     r823, r94
  Len          r824, r823
  Move         r825, r73
L102:
  LessInt      r826, r825, r824
  JumpIfFalse  r826, L101
  Index        r827, r823, r825
  Move         r109, r827
  Index        r828, r109, r751
  Index        r829, r828, r11
  Append       r830, r822, r829
  Move         r822, r830
  AddInt       r825, r825, r88
  Jump         L102
L101:
  Sum          r831, r822
  Const        r832, []
  IterPrep     r833, r94
  Len          r834, r833
  Move         r835, r73
L104:
  LessInt      r836, r835, r834
  JumpIfFalse  r836, L103
  Index        r837, r833, r835
  Move         r109, r837
  Index        r838, r109, r751
  Index        r839, r838, r13
  Append       r840, r832, r839
  Move         r832, r840
  AddInt       r835, r835, r88
  Jump         L104
L103:
  Sum          r841, r832
  Sub          r842, r831, r841
  // channel: g.key.channel,
  Move         r843, r793
  Move         r844, r795
  // id: g.key.id,
  Move         r845, r796
  Move         r846, r798
  // sales: sum(from x in g select x.p.sales),
  Move         r847, r799
  Move         r848, r809
  // returns: sum(from x in g select x.p.returns),
  Move         r849, r810
  Move         r850, r820
  // profit: sum(from x in g select x.p.profit) - sum(from x in g select x.p.profit_loss)
  Move         r851, r821
  Move         r852, r842
  // select {
  MakeMap      r853, 5, r843
  // sort by g.key.channel
  Index        r854, r94, r6
  Index        r855, r854, r4
  Move         r856, r855
  // from p in per_channel
  Move         r857, r853
  MakeList     r858, 2, r856
  Append       r859, r750, r858
  Move         r750, r859
  AddInt       r789, r789, r88
  Jump         L105
L96:
  // sort by g.key.channel
  Sort         r860, r750
  // from p in per_channel
  Move         r750, r860
  // json(result)
  JSON         r750
  // expect len(result) == 0
  Len          r861, r750
  EqualInt     r862, r861, r73
  Expect       r862
  Return       r0
