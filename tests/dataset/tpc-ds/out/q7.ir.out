func main (regs=213)
  // let store_sales = []
  Const        r0, []
  // from ss in store_sales
  Const        r1, []
  // group by { i_item_id: i.i_item_id } into g
  Const        r2, "i_item_id"
  // where cd.cd_gender == "M" &&
  Const        r3, "cd_gender"
  // cd.cd_marital_status == "S" &&
  Const        r4, "cd_marital_status"
  // cd.cd_education_status == "College" &&
  Const        r5, "cd_education_status"
  // (p.p_channel_email == "N" || p.p_channel_event == "N") &&
  Const        r6, "p_channel_email"
  Const        r7, "p_channel_event"
  // d.d_year == 1998
  Const        r8, "d_year"
  // i_item_id: g.key.i_item_id,
  Const        r9, "key"
  // agg1: avg(from x in g select x.ss.ss_quantity),
  Const        r10, "agg1"
  Const        r11, "ss"
  Const        r12, "ss_quantity"
  // agg2: avg(from x in g select x.ss.ss_list_price),
  Const        r13, "agg2"
  Const        r14, "ss_list_price"
  // agg3: avg(from x in g select x.ss.ss_coupon_amt),
  Const        r15, "agg3"
  Const        r16, "ss_coupon_amt"
  // agg4: avg(from x in g select x.ss.ss_sales_price)
  Const        r17, "agg4"
  Const        r18, "ss_sales_price"
  // from ss in store_sales
  MakeMap      r19, 0, r0
  Move         r20, r0
  IterPrep     r21, r0
  Len          r22, r21
  Const        r23, 0
L13:
  LessInt      r24, r23, r22
  JumpIfFalse  r24, L0
  Index        r25, r21, r23
  Move         r26, r25
  // join cd in customer_demographics on ss.ss_cdemo_sk == cd.cd_demo_sk
  IterPrep     r27, r0
  Len          r28, r27
  Const        r29, 0
L12:
  LessInt      r30, r29, r28
  JumpIfFalse  r30, L1
  Index        r31, r27, r29
  Move         r32, r31
  Const        r33, "ss_cdemo_sk"
  Index        r34, r26, r33
  Const        r35, "cd_demo_sk"
  Index        r36, r32, r35
  Equal        r37, r34, r36
  JumpIfFalse  r37, L2
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  IterPrep     r38, r0
  Len          r39, r38
  Const        r40, 0
L11:
  LessInt      r41, r40, r39
  JumpIfFalse  r41, L2
  Index        r42, r38, r40
  Move         r43, r42
  Const        r44, "ss_sold_date_sk"
  Index        r45, r26, r44
  Const        r46, "d_date_sk"
  Index        r47, r43, r46
  Equal        r48, r45, r47
  JumpIfFalse  r48, L3
  // join i in item on ss.ss_item_sk == i.i_item_sk
  IterPrep     r49, r0
  Len          r50, r49
  Const        r51, 0
L10:
  LessInt      r52, r51, r50
  JumpIfFalse  r52, L3
  Index        r53, r49, r51
  Move         r54, r53
  Const        r55, "ss_item_sk"
  Index        r56, r26, r55
  Const        r57, "i_item_sk"
  Index        r58, r54, r57
  Equal        r59, r56, r58
  JumpIfFalse  r59, L4
  // join p in promotion on ss.ss_promo_sk == p.p_promo_sk
  IterPrep     r60, r0
  Len          r61, r60
  Const        r62, 0
L9:
  LessInt      r63, r62, r61
  JumpIfFalse  r63, L4
  Index        r64, r60, r62
  Move         r65, r64
  Const        r66, "ss_promo_sk"
  Index        r67, r26, r66
  Const        r68, "p_promo_sk"
  Index        r69, r65, r68
  Equal        r70, r67, r69
  JumpIfFalse  r70, L5
  // where cd.cd_gender == "M" &&
  Index        r71, r32, r3
  Const        r72, "M"
  Equal        r73, r71, r72
  // cd.cd_marital_status == "S" &&
  Index        r74, r32, r4
  Const        r75, "S"
  Equal        r76, r74, r75
  // cd.cd_education_status == "College" &&
  Index        r77, r32, r5
  Const        r78, "College"
  Equal        r79, r77, r78
  // d.d_year == 1998
  Index        r80, r43, r8
  Const        r81, 1998
  Equal        r82, r80, r81
  // where cd.cd_gender == "M" &&
  Move         r83, r73
  JumpIfFalse  r83, L6
  Move         r83, r76
  // cd.cd_marital_status == "S" &&
  JumpIfFalse  r83, L6
  Move         r83, r79
  // cd.cd_education_status == "College" &&
  JumpIfFalse  r83, L6
  // (p.p_channel_email == "N" || p.p_channel_event == "N") &&
  Index        r84, r65, r6
  Const        r85, "N"
  Equal        r86, r84, r85
  Index        r87, r65, r7
  Equal        r88, r87, r85
  Move         r89, r86
  JumpIfTrue   r89, L7
  Move         r89, r88
L7:
  // cd.cd_education_status == "College" &&
  Move         r83, r89
  // (p.p_channel_email == "N" || p.p_channel_event == "N") &&
  JumpIfFalse  r83, L6
  Move         r83, r82
L6:
  // where cd.cd_gender == "M" &&
  JumpIfFalse  r83, L5
  // from ss in store_sales
  Move         r90, r26
  Const        r91, "cd"
  Move         r92, r32
  Const        r93, "d"
  Move         r94, r43
  Const        r95, "i"
  Move         r96, r54
  Const        r97, "p"
  Move         r98, r65
  Move         r99, r11
  Move         r100, r90
  Move         r101, r91
  Move         r102, r92
  Move         r103, r93
  Move         r104, r94
  Move         r105, r95
  Move         r106, r96
  Move         r107, r97
  Move         r108, r98
  MakeMap      r109, 5, r99
  // group by { i_item_id: i.i_item_id } into g
  Const        r110, "i_item_id"
  Index        r111, r54, r2
  Move         r112, r110
  Move         r113, r111
  MakeMap      r114, 1, r112
  Str          r115, r114
  In           r116, r115, r19
  JumpIfTrue   r116, L8
  // from ss in store_sales
  Const        r117, "__group__"
  Const        r118, true
  // group by { i_item_id: i.i_item_id } into g
  Move         r119, r114
  // from ss in store_sales
  Const        r120, "items"
  Move         r121, r0
  Const        r122, "count"
  Const        r123, 0
  Move         r124, r117
  Move         r125, r118
  Move         r126, r9
  Move         r127, r119
  Move         r128, r120
  Move         r129, r121
  Move         r130, r122
  Move         r131, r123
  MakeMap      r132, 4, r124
  SetIndex     r19, r115, r132
  Append       r133, r20, r132
  Move         r20, r133
L8:
  Index        r134, r19, r115
  Index        r135, r134, r120
  Append       r136, r135, r109
  SetIndex     r134, r120, r136
  Index        r137, r134, r122
  Const        r138, 1
  AddInt       r139, r137, r138
  SetIndex     r134, r122, r139
L5:
  // join p in promotion on ss.ss_promo_sk == p.p_promo_sk
  AddInt       r62, r62, r138
  Jump         L9
L4:
  // join i in item on ss.ss_item_sk == i.i_item_sk
  AddInt       r51, r51, r138
  Jump         L10
L3:
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  AddInt       r40, r40, r138
  Jump         L11
L2:
  // join cd in customer_demographics on ss.ss_cdemo_sk == cd.cd_demo_sk
  AddInt       r29, r29, r138
  Jump         L12
L1:
  // from ss in store_sales
  AddInt       r23, r23, r138
  Jump         L13
L0:
  Move         r140, r123
  Len          r141, r20
L23:
  LessInt      r142, r140, r141
  JumpIfFalse  r142, L14
  Index        r143, r20, r140
  Move         r144, r143
  // i_item_id: g.key.i_item_id,
  Const        r145, "i_item_id"
  Index        r146, r144, r9
  Index        r147, r146, r2
  // agg1: avg(from x in g select x.ss.ss_quantity),
  Const        r148, "agg1"
  Const        r149, []
  IterPrep     r150, r144
  Len          r151, r150
  Move         r152, r123
L16:
  LessInt      r153, r152, r151
  JumpIfFalse  r153, L15
  Index        r154, r150, r152
  Move         r155, r154
  Index        r156, r155, r11
  Index        r157, r156, r12
  Append       r158, r149, r157
  Move         r149, r158
  AddInt       r152, r152, r138
  Jump         L16
L15:
  Avg          r159, r149
  // agg2: avg(from x in g select x.ss.ss_list_price),
  Const        r160, "agg2"
  Const        r161, []
  IterPrep     r162, r144
  Len          r163, r162
  Move         r164, r123
L18:
  LessInt      r165, r164, r163
  JumpIfFalse  r165, L17
  Index        r166, r162, r164
  Move         r155, r166
  Index        r167, r155, r11
  Index        r168, r167, r14
  Append       r169, r161, r168
  Move         r161, r169
  AddInt       r164, r164, r138
  Jump         L18
L17:
  Avg          r170, r161
  // agg3: avg(from x in g select x.ss.ss_coupon_amt),
  Const        r171, "agg3"
  Const        r172, []
  IterPrep     r173, r144
  Len          r174, r173
  Move         r175, r123
L20:
  LessInt      r176, r175, r174
  JumpIfFalse  r176, L19
  Index        r177, r173, r175
  Move         r155, r177
  Index        r178, r155, r11
  Index        r179, r178, r16
  Append       r180, r172, r179
  Move         r172, r180
  AddInt       r175, r175, r138
  Jump         L20
L19:
  Avg          r181, r172
  // agg4: avg(from x in g select x.ss.ss_sales_price)
  Const        r182, "agg4"
  Const        r183, []
  IterPrep     r184, r144
  Len          r185, r184
  Move         r186, r123
L22:
  LessInt      r187, r186, r185
  JumpIfFalse  r187, L21
  Index        r188, r184, r186
  Move         r155, r188
  Index        r189, r155, r11
  Index        r190, r189, r18
  Append       r191, r183, r190
  Move         r183, r191
  AddInt       r186, r186, r138
  Jump         L22
L21:
  Avg          r192, r183
  // i_item_id: g.key.i_item_id,
  Move         r193, r145
  Move         r194, r147
  // agg1: avg(from x in g select x.ss.ss_quantity),
  Move         r195, r148
  Move         r196, r159
  // agg2: avg(from x in g select x.ss.ss_list_price),
  Move         r197, r160
  Move         r198, r170
  // agg3: avg(from x in g select x.ss.ss_coupon_amt),
  Move         r199, r171
  Move         r200, r181
  // agg4: avg(from x in g select x.ss.ss_sales_price)
  Move         r201, r182
  Move         r202, r192
  // select {
  MakeMap      r203, 5, r193
  // sort by g.key.i_item_id
  Index        r204, r144, r9
  Index        r205, r204, r2
  Move         r206, r205
  // from ss in store_sales
  Move         r207, r203
  MakeList     r208, 2, r206
  Append       r209, r1, r208
  Move         r1, r209
  AddInt       r140, r140, r138
  Jump         L23
L14:
  // sort by g.key.i_item_id
  Sort         r210, r1
  // from ss in store_sales
  Move         r1, r210
  // json(result)
  JSON         r1
  // expect len(result) == 0
  Len          r211, r1
  EqualInt     r212, r211, r123
  Expect       r212
  Return       r0
