func main (regs=217)
  // let store_sales = []
  Const        r0, []
  // from ss in store_sales
  Const        r1, []
  // group by { i_item_id: i.i_item_id } into g
  Const        r2, "i_item_id"
  // where cd.cd_gender == "M" &&
  Const        r3, "cd_gender"
  // cd.cd_marital_status == "S" &&
  Const        r4, "cd_marital_status"
  // cd.cd_education_status == "College" &&
  Const        r5, "cd_education_status"
  // (p.p_channel_email == "N" || p.p_channel_event == "N") &&
  Const        r6, "p_channel_email"
  Const        r7, "p_channel_event"
  // d.d_year == 1998
  Const        r8, "d_year"
  // i_item_id: g.key.i_item_id,
  Const        r9, "key"
  // agg1: avg(from x in g select x.ss.ss_quantity),
  Const        r10, "agg1"
  Const        r11, "ss"
  Const        r12, "ss_quantity"
  // agg2: avg(from x in g select x.ss.ss_list_price),
  Const        r13, "agg2"
  Const        r14, "ss_list_price"
  // agg3: avg(from x in g select x.ss.ss_coupon_amt),
  Const        r15, "agg3"
  Const        r16, "ss_coupon_amt"
  // agg4: avg(from x in g select x.ss.ss_sales_price)
  Const        r17, "agg4"
  Const        r18, "ss_sales_price"
  // from ss in store_sales
  MakeMap      r19, 0, r0
  Const        r21, []
  Move         r20, r21
  IterPrep     r22, r0
  Len          r23, r22
  Const        r24, 0
L16:
  LessInt      r25, r24, r23
  JumpIfFalse  r25, L0
  Index        r26, r22, r24
  Move         r27, r26
  // join cd in customer_demographics on ss.ss_cdemo_sk == cd.cd_demo_sk
  IterPrep     r28, r0
  Len          r29, r28
  Const        r30, 0
L15:
  LessInt      r31, r30, r29
  JumpIfFalse  r31, L1
  Index        r32, r28, r30
  Move         r33, r32
  Const        r34, "ss_cdemo_sk"
  Index        r35, r27, r34
  Const        r36, "cd_demo_sk"
  Index        r37, r33, r36
  Equal        r38, r35, r37
  JumpIfFalse  r38, L2
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  IterPrep     r39, r0
  Len          r40, r39
  Const        r41, 0
L14:
  LessInt      r42, r41, r40
  JumpIfFalse  r42, L2
  Index        r43, r39, r41
  Move         r44, r43
  Const        r45, "ss_sold_date_sk"
  Index        r46, r27, r45
  Const        r47, "d_date_sk"
  Index        r48, r44, r47
  Equal        r49, r46, r48
  JumpIfFalse  r49, L3
  // join i in item on ss.ss_item_sk == i.i_item_sk
  IterPrep     r50, r0
  Len          r51, r50
  Const        r52, 0
L13:
  LessInt      r53, r52, r51
  JumpIfFalse  r53, L3
  Index        r54, r50, r52
  Move         r55, r54
  Const        r56, "ss_item_sk"
  Index        r57, r27, r56
  Const        r58, "i_item_sk"
  Index        r59, r55, r58
  Equal        r60, r57, r59
  JumpIfFalse  r60, L4
  // join p in promotion on ss.ss_promo_sk == p.p_promo_sk
  IterPrep     r61, r0
  Len          r62, r61
  Const        r63, 0
L12:
  LessInt      r64, r63, r62
  JumpIfFalse  r64, L4
  Index        r65, r61, r63
  Move         r66, r65
  Const        r67, "ss_promo_sk"
  Index        r68, r27, r67
  Const        r69, "p_promo_sk"
  Index        r70, r66, r69
  Equal        r71, r68, r70
  JumpIfFalse  r71, L5
  // where cd.cd_gender == "M" &&
  Index        r72, r33, r3
  Const        r73, "M"
  Equal        r74, r72, r73
  // cd.cd_marital_status == "S" &&
  Index        r75, r33, r4
  Const        r76, "S"
  Equal        r77, r75, r76
  // cd.cd_education_status == "College" &&
  Index        r78, r33, r5
  Const        r79, "College"
  Equal        r80, r78, r79
  // d.d_year == 1998
  Index        r81, r44, r8
  Const        r82, 1998
  Equal        r83, r81, r82
  // where cd.cd_gender == "M" &&
  Move         r84, r74
  JumpIfFalse  r84, L6
  Move         r84, r77
L6:
  // cd.cd_marital_status == "S" &&
  Move         r85, r84
  JumpIfFalse  r85, L7
  Move         r85, r80
L7:
  // (p.p_channel_email == "N" || p.p_channel_event == "N") &&
  Index        r86, r66, r6
  Const        r87, "N"
  Equal        r88, r86, r87
  Index        r89, r66, r7
  Equal        r90, r89, r87
  Move         r91, r88
  JumpIfTrue   r91, L8
  Move         r91, r90
L8:
  // cd.cd_education_status == "College" &&
  Move         r92, r85
  JumpIfFalse  r92, L9
  Move         r92, r91
L9:
  // (p.p_channel_email == "N" || p.p_channel_event == "N") &&
  Move         r93, r92
  JumpIfFalse  r93, L10
  Move         r93, r83
L10:
  // where cd.cd_gender == "M" &&
  JumpIfFalse  r93, L5
  // from ss in store_sales
  Move         r94, r27
  Const        r95, "cd"
  Move         r96, r33
  Const        r97, "d"
  Move         r98, r44
  Const        r99, "i"
  Move         r100, r55
  Const        r101, "p"
  Move         r102, r66
  Move         r103, r11
  Move         r104, r94
  Move         r105, r95
  Move         r106, r96
  Move         r107, r97
  Move         r108, r98
  Move         r109, r99
  Move         r110, r100
  Move         r111, r101
  Move         r112, r102
  MakeMap      r113, 5, r103
  // group by { i_item_id: i.i_item_id } into g
  Const        r114, "i_item_id"
  Index        r115, r55, r2
  Move         r116, r114
  Move         r117, r115
  MakeMap      r118, 1, r116
  Str          r119, r118
  In           r120, r119, r19
  JumpIfTrue   r120, L11
  // from ss in store_sales
  Const        r121, "__group__"
  Const        r122, true
  // group by { i_item_id: i.i_item_id } into g
  Move         r123, r118
  // from ss in store_sales
  Const        r124, "items"
  Move         r125, r0
  Const        r126, "count"
  Const        r127, 0
  Move         r128, r121
  Move         r129, r122
  Move         r130, r9
  Move         r131, r123
  Move         r132, r124
  Move         r133, r125
  Move         r134, r126
  Move         r135, r127
  MakeMap      r136, 4, r128
  SetIndex     r19, r119, r136
  Append       r137, r20, r136
  Move         r20, r137
L11:
  Index        r138, r19, r119
  Index        r139, r138, r124
  Append       r140, r139, r113
  SetIndex     r138, r124, r140
  Index        r141, r138, r126
  Const        r142, 1
  AddInt       r143, r141, r142
  SetIndex     r138, r126, r143
L5:
  // join p in promotion on ss.ss_promo_sk == p.p_promo_sk
  AddInt       r63, r63, r142
  Jump         L12
L4:
  // join i in item on ss.ss_item_sk == i.i_item_sk
  AddInt       r52, r52, r142
  Jump         L13
L3:
  // join d in date_dim on ss.ss_sold_date_sk == d.d_date_sk
  AddInt       r41, r41, r142
  Jump         L14
L2:
  // join cd in customer_demographics on ss.ss_cdemo_sk == cd.cd_demo_sk
  AddInt       r30, r30, r142
  Jump         L15
L1:
  // from ss in store_sales
  AddInt       r24, r24, r142
  Jump         L16
L0:
  Move         r144, r127
  Len          r145, r20
L26:
  LessInt      r146, r144, r145
  JumpIfFalse  r146, L17
  Index        r147, r20, r144
  Move         r148, r147
  // i_item_id: g.key.i_item_id,
  Const        r149, "i_item_id"
  Index        r150, r148, r9
  Index        r151, r150, r2
  // agg1: avg(from x in g select x.ss.ss_quantity),
  Const        r152, "agg1"
  Const        r153, []
  IterPrep     r154, r148
  Len          r155, r154
  Move         r156, r127
L19:
  LessInt      r157, r156, r155
  JumpIfFalse  r157, L18
  Index        r158, r154, r156
  Move         r159, r158
  Index        r160, r159, r11
  Index        r161, r160, r12
  Append       r162, r153, r161
  Move         r153, r162
  AddInt       r156, r156, r142
  Jump         L19
L18:
  Avg          r163, r153
  // agg2: avg(from x in g select x.ss.ss_list_price),
  Const        r164, "agg2"
  Const        r165, []
  IterPrep     r166, r148
  Len          r167, r166
  Move         r168, r127
L21:
  LessInt      r169, r168, r167
  JumpIfFalse  r169, L20
  Index        r170, r166, r168
  Move         r159, r170
  Index        r171, r159, r11
  Index        r172, r171, r14
  Append       r173, r165, r172
  Move         r165, r173
  AddInt       r168, r168, r142
  Jump         L21
L20:
  Avg          r174, r165
  // agg3: avg(from x in g select x.ss.ss_coupon_amt),
  Const        r175, "agg3"
  Const        r176, []
  IterPrep     r177, r148
  Len          r178, r177
  Move         r179, r127
L23:
  LessInt      r180, r179, r178
  JumpIfFalse  r180, L22
  Index        r181, r177, r179
  Move         r159, r181
  Index        r182, r159, r11
  Index        r183, r182, r16
  Append       r184, r176, r183
  Move         r176, r184
  AddInt       r179, r179, r142
  Jump         L23
L22:
  Avg          r185, r176
  // agg4: avg(from x in g select x.ss.ss_sales_price)
  Const        r186, "agg4"
  Const        r187, []
  IterPrep     r188, r148
  Len          r189, r188
  Move         r190, r127
L25:
  LessInt      r191, r190, r189
  JumpIfFalse  r191, L24
  Index        r192, r188, r190
  Move         r159, r192
  Index        r193, r159, r11
  Index        r194, r193, r18
  Append       r195, r187, r194
  Move         r187, r195
  AddInt       r190, r190, r142
  Jump         L25
L24:
  Avg          r196, r187
  // i_item_id: g.key.i_item_id,
  Move         r197, r149
  Move         r198, r151
  // agg1: avg(from x in g select x.ss.ss_quantity),
  Move         r199, r152
  Move         r200, r163
  // agg2: avg(from x in g select x.ss.ss_list_price),
  Move         r201, r164
  Move         r202, r174
  // agg3: avg(from x in g select x.ss.ss_coupon_amt),
  Move         r203, r175
  Move         r204, r185
  // agg4: avg(from x in g select x.ss.ss_sales_price)
  Move         r205, r186
  Move         r206, r196
  // select {
  MakeMap      r207, 5, r197
  // sort by g.key.i_item_id
  Index        r208, r148, r9
  Index        r209, r208, r2
  Move         r210, r209
  // from ss in store_sales
  Move         r211, r207
  MakeList     r212, 2, r210
  Append       r213, r1, r212
  Move         r1, r213
  AddInt       r144, r144, r142
  Jump         L26
L17:
  // sort by g.key.i_item_id
  Sort         r214, r1
  // from ss in store_sales
  Move         r1, r214
  // json(result)
  JSON         r1
  // expect len(result) == 0
  Len          r215, r1
  EqualInt     r216, r215, r127
  Expect       r216
  Return       r0
