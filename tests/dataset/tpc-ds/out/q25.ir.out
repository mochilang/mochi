func main (regs=273)
  // let store_sales = [
  Const        r0, [{"ss_customer_sk": 1, "ss_item_sk": 1, "ss_net_profit": 50.0, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 1}, {"ss_customer_sk": 2, "ss_item_sk": 2, "ss_net_profit": 20.0, "ss_sold_date_sk": 1, "ss_store_sk": 1, "ss_ticket_number": 2}]
  // let store_returns = [
  Const        r1, [{"sr_customer_sk": 1, "sr_item_sk": 1, "sr_net_loss": 10.0, "sr_returned_date_sk": 2, "sr_ticket_number": 1}, {"sr_customer_sk": 2, "sr_item_sk": 2, "sr_net_loss": 5.0, "sr_returned_date_sk": 2, "sr_ticket_number": 2}]
  // let catalog_sales = [
  Const        r2, [{"cs_bill_customer_sk": 1, "cs_item_sk": 1, "cs_net_profit": 30.0, "cs_sold_date_sk": 3}, {"cs_bill_customer_sk": 2, "cs_item_sk": 2, "cs_net_profit": 15.0, "cs_sold_date_sk": 3}]
  // let date_dim = [
  Const        r3, [{"d_date_sk": 1, "d_moy": 4, "d_year": 2000}, {"d_date_sk": 2, "d_moy": 5, "d_year": 2000}, {"d_date_sk": 3, "d_moy": 6, "d_year": 2000}]
  // let store = [ { s_store_sk: 1, s_store_id: "S1", s_store_name: "Store1" } ]
  Const        r4, [{"s_store_id": "S1", "s_store_name": "Store1", "s_store_sk": 1}]
  // let item = [
  Const        r5, [{"i_item_desc": "Desc1", "i_item_id": "ITEM1", "i_item_sk": 1}, {"i_item_desc": "Desc2", "i_item_id": "ITEM2", "i_item_sk": 2}]
  // from ss in store_sales
  Const        r6, []
  // group by { item_id: i.i_item_id, item_desc: i.i_item_desc, s_store_id: s.s_store_id, s_store_name: s.s_store_name } into g
  Const        r7, "item_id"
  Const        r8, "i_item_id"
  Const        r9, "item_desc"
  Const        r10, "i_item_desc"
  Const        r11, "s_store_id"
  Const        r12, "s_store_name"
  // where d1.d_moy == 4 && d1.d_year == 2000 && d2.d_moy >= 4 && d2.d_moy <= 10 && d3.d_moy >= 4 && d3.d_moy <= 10
  Const        r13, "d_moy"
  Const        r14, "d_year"
  // i_item_id: g.key.item_id,
  Const        r15, "key"
  // store_sales_profit: sum(from x in g select x.ss_net_profit),
  Const        r16, "store_sales_profit"
  Const        r17, "ss_net_profit"
  // store_returns_loss: sum(from x in g select x.sr_net_loss),
  Const        r18, "store_returns_loss"
  Const        r19, "sr_net_loss"
  // catalog_sales_profit: sum(from x in g select x.cs_net_profit)
  Const        r20, "catalog_sales_profit"
  Const        r21, "cs_net_profit"
  // from ss in store_sales
  MakeMap      r22, 0, r0
  Const        r24, []
  Move         r23, r24
  IterPrep     r25, r0
  Len          r26, r25
  Const        r27, 0
  LessInt      r28, r27, r26
  JumpIfFalse  r28, L0
  Index        r29, r25, r27
  Move         r30, r29
  // join sr in store_returns on ss.ss_ticket_number == sr.sr_ticket_number && ss.ss_item_sk == sr.sr_item_sk
  IterPrep     r31, r1
  Len          r32, r31
  Const        r33, 0
  LessInt      r34, r33, r32
  JumpIfFalse  r34, L1
  Index        r35, r31, r33
  Move         r36, r35
  Const        r37, "ss_ticket_number"
  Index        r38, r30, r37
  Const        r39, "sr_ticket_number"
  Index        r40, r36, r39
  Equal        r41, r38, r40
  Const        r42, "ss_item_sk"
  Index        r43, r30, r42
  Const        r44, "sr_item_sk"
  Index        r45, r36, r44
  Equal        r46, r43, r45
  Move         r47, r41
  JumpIfFalse  r47, L2
  Move         r47, r46
  JumpIfFalse  r47, L3
  // join cs in catalog_sales on sr.sr_customer_sk == cs.cs_bill_customer_sk && sr.sr_item_sk == cs.cs_item_sk
  IterPrep     r48, r2
  Len          r49, r48
  Const        r50, 0
  LessInt      r51, r50, r49
  JumpIfFalse  r51, L3
  Index        r52, r48, r50
  Move         r53, r52
  Const        r54, "sr_customer_sk"
  Index        r55, r36, r54
  Const        r56, "cs_bill_customer_sk"
  Index        r57, r53, r56
  Equal        r58, r55, r57
  Const        r44, "sr_item_sk"
  Index        r59, r36, r44
  Const        r60, "cs_item_sk"
  Index        r61, r53, r60
L2:
  Equal        r62, r59, r61
  Move         r63, r58
  JumpIfFalse  r63, L4
  Move         r63, r62
L12:
  JumpIfFalse  r63, L5
  // join d1 in date_dim on d1.d_date_sk == ss.ss_sold_date_sk
  IterPrep     r64, r3
  Len          r65, r64
  Const        r66, 0
  LessInt      r67, r66, r65
  JumpIfFalse  r67, L5
  Index        r68, r64, r66
  Move         r69, r68
  Const        r70, "d_date_sk"
  Index        r71, r69, r70
  Const        r72, "ss_sold_date_sk"
  Index        r73, r30, r72
  Equal        r74, r71, r73
  JumpIfFalse  r74, L6
  // join d2 in date_dim on d2.d_date_sk == sr.sr_returned_date_sk
  IterPrep     r75, r3
  Len          r76, r75
  Const        r77, 0
L4:
  LessInt      r78, r77, r76
  JumpIfFalse  r78, L6
  Index        r79, r75, r77
  Move         r80, r79
  Const        r70, "d_date_sk"
  Index        r81, r80, r70
  Const        r82, "sr_returned_date_sk"
  Index        r83, r36, r82
  Equal        r84, r81, r83
  JumpIfFalse  r84, L7
  // join d3 in date_dim on d3.d_date_sk == cs.cs_sold_date_sk
  IterPrep     r85, r3
  Len          r86, r85
  Const        r87, 0
  LessInt      r88, r87, r86
  JumpIfFalse  r88, L7
  Index        r89, r85, r87
  Move         r90, r89
  Const        r70, "d_date_sk"
  Index        r91, r90, r70
  Const        r92, "cs_sold_date_sk"
  Index        r93, r53, r92
  Equal        r94, r91, r93
  JumpIfFalse  r94, L8
  // join s in store on s.s_store_sk == ss.ss_store_sk
  IterPrep     r95, r4
  Len          r96, r95
  Const        r97, 0
  LessInt      r98, r97, r96
  JumpIfFalse  r98, L8
  Index        r99, r95, r97
  Move         r100, r99
  Const        r101, "s_store_sk"
  Index        r102, r100, r101
  Const        r103, "ss_store_sk"
  Index        r104, r30, r103
  Equal        r105, r102, r104
  JumpIfFalse  r105, L9
  // join i in item on i.i_item_sk == ss.ss_item_sk
  IterPrep     r106, r5
  Len          r107, r106
  Const        r108, 0
  LessInt      r109, r108, r107
  JumpIfFalse  r109, L9
  Index        r110, r106, r108
  Move         r111, r110
  Const        r112, "i_item_sk"
  Index        r113, r111, r112
  Const        r42, "ss_item_sk"
  Index        r114, r30, r42
  Equal        r115, r113, r114
  JumpIfFalse  r115, L10
  // where d1.d_moy == 4 && d1.d_year == 2000 && d2.d_moy >= 4 && d2.d_moy <= 10 && d3.d_moy >= 4 && d3.d_moy <= 10
  Const        r13, "d_moy"
  Index        r116, r69, r13
  Index        r117, r80, r13
  Const        r118, 4
  LessEq       r119, r118, r117
  Index        r120, r80, r13
  Const        r121, 10
L13:
  LessEq       r122, r120, r121
  Index        r123, r90, r13
  LessEq       r124, r118, r123
  Index        r125, r90, r13
  LessEq       r126, r125, r121
  Equal        r127, r116, r118
  Const        r14, "d_year"
  Index        r128, r69, r14
  Const        r129, 2000
  Equal        r130, r128, r129
  Move         r131, r127
  JumpIfFalse  r131, L11
  Move         r131, r130
  JumpIfFalse  r131, L11
  Move         r131, r119
  JumpIfFalse  r131, L11
  Move         r131, r122
  JumpIfFalse  r131, L11
  Move         r131, r124
  JumpIfFalse  r131, L11
  Move         r131, r126
  JumpIfFalse  r131, L10
  // from ss in store_sales
  Const        r132, "ss"
  Move         r133, r30
  Const        r134, "sr"
  Move         r135, r36
  Const        r136, "cs"
  Move         r137, r53
  Const        r138, "d1"
  Move         r139, r69
  Const        r140, "d2"
  Move         r141, r80
  Const        r142, "d3"
  Move         r143, r90
  Const        r144, "s"
  Move         r145, r100
  Const        r146, "i"
  Move         r147, r111
  Move         r148, r132
  Move         r149, r133
  Move         r150, r134
  Move         r151, r135
  Move         r152, r136
  Move         r153, r137
  Move         r154, r138
L11:
  Move         r155, r139
  Move         r156, r140
  Move         r157, r141
  Move         r158, r142
  Move         r159, r143
  Move         r160, r144
  Move         r161, r145
  Move         r162, r146
  Move         r163, r147
  MakeMap      r164, 8, r148
  // group by { item_id: i.i_item_id, item_desc: i.i_item_desc, s_store_id: s.s_store_id, s_store_name: s.s_store_name } into g
  Const        r165, "item_id"
  Const        r8, "i_item_id"
  Index        r166, r111, r8
  Const        r167, "item_desc"
  Const        r10, "i_item_desc"
  Index        r168, r111, r10
  Const        r169, "s_store_id"
  Const        r11, "s_store_id"
  Index        r170, r100, r11
  Const        r171, "s_store_name"
  Const        r12, "s_store_name"
  Index        r172, r100, r12
  Move         r173, r165
  Move         r174, r166
  Move         r175, r167
  Move         r176, r168
  Move         r177, r169
  Move         r178, r170
  Move         r179, r171
  Move         r180, r172
  MakeMap      r181, 4, r173
  Str          r182, r181
  In           r183, r182, r22
  JumpIfTrue   r183, L12
  // from ss in store_sales
  Const        r24, []
  Const        r184, "__group__"
  Const        r185, true
  Const        r15, "key"
  // group by { item_id: i.i_item_id, item_desc: i.i_item_desc, s_store_id: s.s_store_id, s_store_name: s.s_store_name } into g
  Move         r186, r181
  // from ss in store_sales
  Const        r187, "items"
  Move         r188, r24
  Const        r189, "count"
  Const        r190, 0
  Move         r191, r184
  Move         r192, r185
  Move         r193, r15
  Move         r194, r186
  Move         r195, r187
  Move         r196, r188
  Move         r197, r189
  Move         r198, r190
  MakeMap      r199, 4, r191
  SetIndex     r22, r182, r199
  Append       r200, r23, r199
  Move         r23, r200
  Index        r201, r22, r182
  Index        r202, r201, r187
  Append       r203, r202, r164
  SetIndex     r201, r187, r203
  Index        r204, r201, r189
  Const        r205, 1
  AddInt       r206, r204, r205
  SetIndex     r201, r189, r206
  // join i in item on i.i_item_sk == ss.ss_item_sk
  AddInt       r108, r108, r205
  Jump         L13
L10:
  // from ss in store_sales
  LessInt      r209, r207, r208
  JumpIfFalse  r209, L14
  Index        r210, r23, r207
L9:
  Move         r211, r210
  // i_item_id: g.key.item_id,
  Const        r212, "i_item_id"
  Const        r15, "key"
L8:
  Index        r213, r211, r15
  Const        r7, "item_id"
  Index        r214, r213, r7
L7:
  // i_item_desc: g.key.item_desc,
  Const        r215, "i_item_desc"
  Index        r216, r211, r15
  Const        r9, "item_desc"
L6:
  Index        r217, r216, r9
  // s_store_id: g.key.s_store_id,
  Const        r218, "s_store_id"
  Index        r219, r211, r15
L5:
  Const        r11, "s_store_id"
  Index        r220, r219, r11
  // s_store_name: g.key.s_store_name,
  Const        r221, "s_store_name"
L3:
  Index        r222, r211, r15
  Const        r12, "s_store_name"
  Index        r223, r222, r12
L1:
  // store_sales_profit: sum(from x in g select x.ss_net_profit),
  Const        r224, "store_sales_profit"
  Const        r225, []
  Const        r17, "ss_net_profit"
L0:
  IterPrep     r226, r211
  Len          r227, r226
  Const        r190, 0
L17:
  Move         r228, r190
  LessInt      r229, r228, r227
  JumpIfFalse  r229, L15
  Index        r230, r226, r228
  Move         r231, r230
  Const        r17, "ss_net_profit"
  Index        r232, r231, r17
  Append       r233, r225, r232
  Move         r225, r233
  Const        r205, 1
  AddInt       r228, r228, r205
  // store_returns_loss: sum(from x in g select x.sr_net_loss),
  Sum          r244, r236
  // catalog_sales_profit: sum(from x in g select x.cs_net_profit)
  Const        r245, "catalog_sales_profit"
  Const        r246, []
  Const        r21, "cs_net_profit"
  IterPrep     r247, r211
  Len          r248, r247
  Const        r190, 0
  Move         r249, r190
  LessInt      r250, r249, r248
  JumpIfFalse  r250, L16
  Index        r251, r247, r249
L15:
  Move         r231, r251
  Const        r21, "cs_net_profit"
  Index        r252, r231, r21
  Append       r253, r246, r252
  Move         r246, r253
  Const        r205, 1
  AddInt       r249, r249, r205
  // from ss in store_sales
  AddInt       r207, r207, r205
  Jump         L17
