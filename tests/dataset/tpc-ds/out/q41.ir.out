func main (regs=46)
  // let item = [
  Const        r0, [{"category": "Women", "color": "blue", "manufact": 1, "manufact_id": 100, "product_name": "Blue Shirt", "size": "M", "units": "pack"}, {"category": "Women", "color": "red", "manufact": 1, "manufact_id": 120, "product_name": "Red Dress", "size": "M", "units": "pack"}, {"category": "Men", "color": "black", "manufact": 2, "manufact_id": 200, "product_name": "Pants", "size": "L", "units": "pair"}]
  // let lower = 100
  Const        r1, 100
  // from i1 in item
  Const        r2, []
  // where i1.manufact_id >= lower && i1.manufact_id <= lower + 40 &&
  Const        r3, "manufact_id"
  // count(from i2 in item where i2.manufact == i1.manufact && i2.category == i1.category select i2) > 1
  Const        r4, "manufact"
  Const        r5, "category"
  // select i1.product_name
  Const        r6, "product_name"
  // from i1 in item
  IterPrep     r7, r0
  Len          r8, r7
  Const        r10, 0
  Move         r9, r10
L7:
  LessInt      r11, r9, r8
  JumpIfFalse  r11, L0
  Index        r13, r7, r9
  // where i1.manufact_id >= lower && i1.manufact_id <= lower + 40 &&
  Index        r14, r13, r3
  Const        r15, 40
  Const        r16, 140
  LessEq       r17, r1, r14
  Index        r18, r13, r3
  LessEq       r19, r18, r16
  // count(from i2 in item where i2.manufact == i1.manufact && i2.category == i1.category select i2) > 1
  Const        r20, []
  IterPrep     r21, r0
  Len          r22, r21
  Move         r23, r10
L4:
  LessInt      r24, r23, r22
  JumpIfFalse  r24, L1
  Index        r26, r21, r23
  Index        r27, r26, r4
  Index        r28, r13, r4
  Equal        r29, r27, r28
  Index        r30, r26, r5
  Index        r31, r13, r5
  Equal        r32, r30, r31
  JumpIfFalse  r29, L2
  Move         r29, r32
L2:
  JumpIfFalse  r29, L3
  Append       r20, r20, r26
L3:
  Const        r34, 1
  AddInt       r23, r23, r34
  Jump         L4
L1:
  Count        r35, r20
  LessInt      r36, r34, r35
  // where i1.manufact_id >= lower && i1.manufact_id <= lower + 40 &&
  JumpIfFalse  r17, L5
  Move         r17, r19
  JumpIfFalse  r17, L5
  Move         r17, r36
L5:
  JumpIfFalse  r17, L6
  // select i1.product_name
  Index        r37, r13, r6
  // order by i1.product_name
  Index        r39, r13, r6
  // from i1 in item
  Move         r40, r37
  MakeList     r41, 2, r39
  Append       r2, r2, r41
L6:
  AddInt       r9, r9, r34
  Jump         L7
L0:
  // order by i1.product_name
  Sort         r2, r2
  // json(result)
  JSON         r2
  // expect result == ["Blue Shirt", "Red Dress"]
  Const        r44, ["Blue Shirt", "Red Dress"]
  Equal        r45, r2, r44
  Expect       r45
  Return       r0
