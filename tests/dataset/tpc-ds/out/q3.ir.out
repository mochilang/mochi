func main (regs=161)
  // let date_dim = []
  Const        r0, []
  // from dt in date_dim
  Const        r1, []
  // group by { d_year: dt.d_year, brand_id: i.i_brand_id, brand: i.i_brand } into g
  Const        r2, "d_year"
  Const        r3, "brand_id"
  Const        r4, "i_brand_id"
  Const        r5, "brand"
  Const        r6, "i_brand"
  // where i.i_manufact_id == 100 && dt.d_moy == 12
  Const        r7, "i_manufact_id"
  Const        r8, "d_moy"
  // d_year: g.key.d_year,
  Const        r9, "key"
  // sum_agg: sum(from x in g select x.ss.ss_ext_sales_price)
  Const        r10, "sum_agg"
  Const        r11, "ss"
  Const        r12, "ss_ext_sales_price"
  // from dt in date_dim
  MakeMap      r13, 0, r0
  Move         r14, r0
  IterPrep     r15, r0
  Len          r16, r15
  Const        r17, 0
L8:
  LessInt      r18, r17, r16
  JumpIfFalse  r18, L0
  Index        r19, r15, r17
  Move         r20, r19
  // join ss in store_sales on dt.d_date_sk == ss.ss_sold_date_sk
  IterPrep     r21, r0
  Len          r22, r21
  Const        r23, 0
L7:
  LessInt      r24, r23, r22
  JumpIfFalse  r24, L1
  Index        r25, r21, r23
  Move         r26, r25
  Const        r27, "d_date_sk"
  Index        r28, r20, r27
  Const        r29, "ss_sold_date_sk"
  Index        r30, r26, r29
  Equal        r31, r28, r30
  JumpIfFalse  r31, L2
  // join i in item on ss.ss_item_sk == i.i_item_sk
  IterPrep     r32, r0
  Len          r33, r32
  Const        r34, 0
L6:
  LessInt      r35, r34, r33
  JumpIfFalse  r35, L2
  Index        r36, r32, r34
  Move         r37, r36
  Const        r38, "ss_item_sk"
  Index        r39, r26, r38
  Const        r40, "i_item_sk"
  Index        r41, r37, r40
  Equal        r42, r39, r41
  JumpIfFalse  r42, L3
  // where i.i_manufact_id == 100 && dt.d_moy == 12
  Index        r43, r37, r7
  Const        r44, 100
  Equal        r45, r43, r44
  Index        r46, r20, r8
  Const        r47, 12
  Equal        r48, r46, r47
  Move         r49, r45
  JumpIfFalse  r49, L4
  Move         r49, r48
L4:
  JumpIfFalse  r49, L3
  // from dt in date_dim
  Const        r50, "dt"
  Move         r51, r20
  Move         r52, r26
  Const        r53, "i"
  Move         r54, r37
  Move         r55, r50
  Move         r56, r51
  Move         r57, r11
  Move         r58, r52
  Move         r59, r53
  Move         r60, r54
  MakeMap      r61, 3, r55
  // group by { d_year: dt.d_year, brand_id: i.i_brand_id, brand: i.i_brand } into g
  Const        r62, "d_year"
  Index        r63, r20, r2
  Const        r64, "brand_id"
  Index        r65, r37, r4
  Const        r66, "brand"
  Index        r67, r37, r6
  Move         r68, r62
  Move         r69, r63
  Move         r70, r64
  Move         r71, r65
  Move         r72, r66
  Move         r73, r67
  MakeMap      r74, 3, r68
  Str          r75, r74
  In           r76, r75, r13
  JumpIfTrue   r76, L5
  // from dt in date_dim
  Const        r77, "__group__"
  Const        r78, true
  // group by { d_year: dt.d_year, brand_id: i.i_brand_id, brand: i.i_brand } into g
  Move         r79, r74
  // from dt in date_dim
  Const        r80, "items"
  Move         r81, r0
  Const        r82, "count"
  Const        r83, 0
  Move         r84, r77
  Move         r85, r78
  Move         r86, r9
  Move         r87, r79
  Move         r88, r80
  Move         r89, r81
  Move         r90, r82
  Move         r91, r83
  MakeMap      r92, 4, r84
  SetIndex     r13, r75, r92
  Append       r93, r14, r92
  Move         r14, r93
L5:
  Index        r94, r13, r75
  Index        r95, r94, r80
  Append       r96, r95, r61
  SetIndex     r94, r80, r96
  Index        r97, r94, r82
  Const        r98, 1
  AddInt       r99, r97, r98
  SetIndex     r94, r82, r99
L3:
  // join i in item on ss.ss_item_sk == i.i_item_sk
  AddInt       r34, r34, r98
  Jump         L6
L2:
  // join ss in store_sales on dt.d_date_sk == ss.ss_sold_date_sk
  AddInt       r23, r23, r98
  Jump         L7
L1:
  // from dt in date_dim
  AddInt       r17, r17, r98
  Jump         L8
L0:
  Move         r100, r83
  Len          r101, r14
L14:
  LessInt      r102, r100, r101
  JumpIfFalse  r102, L9
  Index        r103, r14, r100
  Move         r104, r103
  // d_year: g.key.d_year,
  Const        r105, "d_year"
  Index        r106, r104, r9
  Index        r107, r106, r2
  // brand_id: g.key.brand_id,
  Const        r108, "brand_id"
  Index        r109, r104, r9
  Index        r110, r109, r3
  // brand: g.key.brand,
  Const        r111, "brand"
  Index        r112, r104, r9
  Index        r113, r112, r5
  // sum_agg: sum(from x in g select x.ss.ss_ext_sales_price)
  Const        r114, "sum_agg"
  Const        r115, []
  IterPrep     r116, r104
  Len          r117, r116
  Move         r118, r83
L11:
  LessInt      r119, r118, r117
  JumpIfFalse  r119, L10
  Index        r120, r116, r118
  Move         r121, r120
  Index        r122, r121, r11
  Index        r123, r122, r12
  Append       r124, r115, r123
  Move         r115, r124
  AddInt       r118, r118, r98
  Jump         L11
L10:
  Sum          r125, r115
  // d_year: g.key.d_year,
  Move         r126, r105
  Move         r127, r107
  // brand_id: g.key.brand_id,
  Move         r128, r108
  Move         r129, r110
  // brand: g.key.brand,
  Move         r130, r111
  Move         r131, r113
  // sum_agg: sum(from x in g select x.ss.ss_ext_sales_price)
  Move         r132, r114
  Move         r133, r125
  // select {
  MakeMap      r134, 4, r126
  // sort by [g.key.d_year,
  Index        r135, r104, r9
  Index        r136, r135, r2
  Move         r137, r136
  // -sum(from x in g select x.ss.ss_ext_sales_price),
  Const        r138, []
  IterPrep     r139, r104
  Len          r140, r139
  Move         r141, r83
L13:
  LessInt      r142, r141, r140
  JumpIfFalse  r142, L12
  Index        r143, r139, r141
  Move         r121, r143
  Index        r144, r121, r11
  Index        r145, r144, r12
  Append       r146, r138, r145
  Move         r138, r146
  AddInt       r141, r141, r98
  Jump         L13
L12:
  Sum          r147, r138
  Neg          r148, r147
  Move         r149, r148
  // g.key.brand_id]
  Index        r150, r104, r9
  Index        r151, r150, r3
  Move         r152, r151
  // sort by [g.key.d_year,
  MakeList     r153, 3, r137
  Move         r154, r153
  // from dt in date_dim
  Move         r155, r134
  MakeList     r156, 2, r154
  Append       r157, r1, r156
  Move         r1, r157
  AddInt       r100, r100, r98
  Jump         L14
L9:
  // sort by [g.key.d_year,
  Sort         r158, r1
  // from dt in date_dim
  Move         r1, r158
  // json(result)
  JSON         r1
  // expect len(result) == 0
  Len          r159, r1
  EqualInt     r160, r159, r83
  Expect       r160
  Return       r0
