func main (regs=224)
  // let store_sales = [ {item: 1, price: 10.0} ]
  Const        r0, [{"item": 1, "price": 10.0}]
  // let catalog_sales = [ {item: 1, price: 20.0} ]
  Const        r1, [{"item": 1, "price": 20.0}]
  // let web_sales = [ {item: 1, price: 30.0} ]
  Const        r2, [{"item": 1, "price": 30.0}]
  // let ss = from s in store_sales group by s.item into g select {item: g.key, total: sum(from x in g select x.price)}
  Const        r3, []
  Const        r4, "item"
  Const        r5, "key"
  Const        r6, "total"
  Const        r7, "price"
  IterPrep     r8, r0
  Len          r9, r8
  Const        r10, 0
  MakeMap      r11, 0, r0
  Const        r13, []
  Move         r12, r13
  LessInt      r14, r10, r9
L2:
  JumpIfFalse  r14, L0
  Index        r15, r8, r10
  Move         r16, r15
  Const        r4, "item"
  Index        r17, r16, r4
  Str          r18, r17
  In           r19, r18, r11
  JumpIfTrue   r19, L1
  Const        r13, []
  Const        r20, "__group__"
  Const        r21, true
  Const        r5, "key"
  Move         r22, r17
  Const        r23, "items"
  Move         r24, r13
  Const        r25, "count"
  Const        r26, 0
  Move         r27, r20
  Move         r28, r21
  Move         r29, r5
  Move         r30, r22
  Move         r31, r23
  Move         r32, r24
  Move         r33, r25
  Move         r34, r26
  MakeMap      r35, 4, r27
  SetIndex     r11, r18, r35
  Append       r36, r12, r35
  Move         r12, r36
  Index        r37, r11, r18
L1:
  Index        r38, r37, r23
  Append       r39, r38, r15
  SetIndex     r37, r23, r39
  Index        r40, r37, r25
  Const        r41, 1
  AddInt       r42, r40, r41
  SetIndex     r37, r25, r42
  AddInt       r10, r10, r41
  Jump         L2
L0:
  JumpIfFalse  r45, L3
  Index        r46, r12, r43
  Move         r47, r46
L6:
  Const        r48, "item"
  Const        r5, "key"
  Index        r49, r47, r5
  Const        r50, "total"
  Const        r51, []
  Const        r7, "price"
  IterPrep     r52, r47
  Len          r53, r52
  Const        r26, 0
  Move         r54, r26
  LessInt      r55, r54, r53
  JumpIfFalse  r55, L4
  Index        r56, r52, r54
  Move         r57, r56
L5:
  Const        r7, "price"
  Index        r58, r57, r7
  Append       r59, r51, r58
  Move         r51, r59
  Const        r41, 1
  AddInt       r54, r54, r41
  Jump         L5
L4:
  Move         r64, r60
  MakeMap      r65, 2, r61
  Append       r66, r3, r65
  Move         r3, r66
  Const        r41, 1
  AddInt       r43, r43, r41
  Jump         L6
L3:
  // let cs = from s in catalog_sales group by s.item into g select {item: g.key, total: sum(from x in g select x.price)}
  Const        r7, "price"
  IterPrep     r68, r1
  Len          r69, r68
  Const        r70, 0
  MakeMap      r71, 0, r0
  Const        r13, []
  Move         r72, r13
  LessInt      r73, r70, r69
  JumpIfFalse  r73, L7
  Index        r74, r68, r70
  Move         r16, r74
  Const        r4, "item"
L9:
  Index        r75, r16, r4
  Str          r76, r75
  In           r77, r76, r71
  JumpIfTrue   r77, L8
  Const        r13, []
  Const        r20, "__group__"
  Const        r21, true
  Const        r5, "key"
  Move         r78, r75
  Const        r23, "items"
  Move         r79, r13
  Const        r25, "count"
  Const        r26, 0
  Move         r80, r20
  Move         r81, r21
  Move         r82, r5
  Move         r83, r78
  Move         r84, r23
  Move         r85, r79
  Move         r86, r25
  Move         r87, r26
  MakeMap      r88, 4, r80
  SetIndex     r71, r76, r88
  Append       r89, r72, r88
  Move         r72, r89
  Index        r90, r71, r76
  Index        r91, r90, r23
  Append       r92, r91, r74
  SetIndex     r90, r23, r92
  Index        r93, r90, r25
L8:
  Const        r41, 1
  AddInt       r94, r93, r41
  SetIndex     r90, r25, r94
  AddInt       r70, r70, r41
  Jump         L9
L7:
  Const        r5, "key"
  Index        r100, r47, r5
  Const        r101, "total"
L12:
  Const        r102, []
  Const        r7, "price"
  IterPrep     r103, r47
  Len          r104, r103
  Const        r26, 0
  Move         r105, r26
  LessInt      r106, r105, r104
  JumpIfFalse  r106, L10
  Index        r107, r103, r105
  Move         r57, r107
  Const        r7, "price"
  Index        r108, r57, r7
  Append       r109, r102, r108
  Move         r102, r109
L11:
  Const        r41, 1
  AddInt       r105, r105, r41
  Jump         L11
L10:
  Const        r41, 1
  AddInt       r95, r95, r41
  Jump         L12
