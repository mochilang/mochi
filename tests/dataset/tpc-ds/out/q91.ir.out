func main (regs=225)
  // let call_center = [
  Const        r0, [{"cc_call_center_id": "CC1", "cc_call_center_sk": 1, "cc_manager": "Alice", "cc_name": "Main"}]
  // let catalog_returns = [
  Const        r1, [{"cr_call_center_sk": 1, "cr_net_loss": 10.0, "cr_returned_date_sk": 1, "cr_returning_customer_sk": 1}]
  // let date_dim = [{d_date_sk: 1, d_year: 2001, d_moy: 5}]
  Const        r2, [{"d_date_sk": 1, "d_moy": 5, "d_year": 2001}]
  // let customer = [
  Const        r3, [{"c_current_addr_sk": 1, "c_current_cdemo_sk": 1, "c_current_hdemo_sk": 1, "c_customer_sk": 1}]
  // let customer_demographics = [{cd_demo_sk: 1, cd_marital_status: "M", cd_education_status: "Unknown"}]
  Const        r4, [{"cd_demo_sk": 1, "cd_education_status": "Unknown", "cd_marital_status": "M"}]
  // let household_demographics = [{hd_demo_sk: 1, hd_buy_potential: "1001-5000"}]
  Const        r5, [{"hd_buy_potential": "1001-5000", "hd_demo_sk": 1}]
  // let customer_address = [{ca_address_sk: 1, ca_gmt_offset: -6}]
  Const        r6, [{"ca_address_sk": 1, "ca_gmt_offset": -6}]
  // from cc in call_center
  Const        r7, []
  // group by {id: cc.cc_call_center_id, name: cc.cc_name, mgr: cc.cc_manager} into g
  Const        r8, "id"
  Const        r9, "cc_call_center_id"
  Const        r10, "name"
  Const        r11, "cc_name"
  Const        r12, "mgr"
  Const        r13, "cc_manager"
  // where d.d_year == 2001 && d.d_moy == 5 &&
  Const        r14, "d_year"
  Const        r15, "d_moy"
  // cd.cd_marital_status == "M" && cd.cd_education_status == "Unknown" &&
  Const        r16, "cd_marital_status"
  Const        r17, "cd_education_status"
  // hd.hd_buy_potential == "1001-5000" && ca.ca_gmt_offset == (-6)
  Const        r18, "hd_buy_potential"
  Const        r19, "ca_gmt_offset"
  // Call_Center: g.key.id,
  Const        r20, "Call_Center"
  Const        r21, "key"
  // Call_Center_Name: g.key.name,
  Const        r22, "Call_Center_Name"
  // Manager: g.key.mgr,
  Const        r23, "Manager"
  // Returns_Loss: sum(from x in g select x.cr_net_loss)
  Const        r24, "Returns_Loss"
  Const        r25, "cr_net_loss"
  // from cc in call_center
  MakeMap      r26, 0, r0
  Const        r28, []
  Move         r27, r28
  IterPrep     r29, r0
  Len          r30, r29
  Const        r31, 0
L16:
  LessInt      r32, r31, r30
  JumpIfFalse  r32, L0
  Index        r33, r29, r31
  Move         r34, r33
  // join cr in catalog_returns on cc.cc_call_center_sk == cr.cr_call_center_sk
  IterPrep     r35, r1
  Len          r36, r35
  Const        r37, 0
L15:
  LessInt      r38, r37, r36
  JumpIfFalse  r38, L1
  Index        r39, r35, r37
  Move         r40, r39
  Const        r41, "cc_call_center_sk"
  Index        r42, r34, r41
  Const        r43, "cr_call_center_sk"
  Index        r44, r40, r43
  Equal        r45, r42, r44
  JumpIfFalse  r45, L2
  // join d in date_dim on cr.cr_returned_date_sk == d.d_date_sk
  IterPrep     r46, r2
  Len          r47, r46
  Const        r48, 0
L14:
  LessInt      r49, r48, r47
  JumpIfFalse  r49, L2
  Index        r50, r46, r48
  Move         r51, r50
  Const        r52, "cr_returned_date_sk"
  Index        r53, r40, r52
  Const        r54, "d_date_sk"
  Index        r55, r51, r54
  Equal        r56, r53, r55
  JumpIfFalse  r56, L3
  // join c in customer on cr.cr_returning_customer_sk == c.c_customer_sk
  IterPrep     r57, r3
  Len          r58, r57
  Const        r59, 0
L13:
  LessInt      r60, r59, r58
  JumpIfFalse  r60, L3
  Index        r61, r57, r59
  Move         r62, r61
  Const        r63, "cr_returning_customer_sk"
  Index        r64, r40, r63
  Const        r65, "c_customer_sk"
  Index        r66, r62, r65
  Equal        r67, r64, r66
  JumpIfFalse  r67, L4
  // join cd in customer_demographics on c.c_current_cdemo_sk == cd.cd_demo_sk
  IterPrep     r68, r4
  Len          r69, r68
  Const        r70, 0
L12:
  LessInt      r71, r70, r69
  JumpIfFalse  r71, L4
  Index        r72, r68, r70
  Move         r73, r72
  Const        r74, "c_current_cdemo_sk"
  Index        r75, r62, r74
  Const        r76, "cd_demo_sk"
  Index        r77, r73, r76
  Equal        r78, r75, r77
  JumpIfFalse  r78, L5
  // join hd in household_demographics on c.c_current_hdemo_sk == hd.hd_demo_sk
  IterPrep     r79, r5
  Len          r80, r79
  Const        r81, 0
L11:
  LessInt      r82, r81, r80
  JumpIfFalse  r82, L5
  Index        r83, r79, r81
  Move         r84, r83
  Const        r85, "c_current_hdemo_sk"
  Index        r86, r62, r85
  Const        r87, "hd_demo_sk"
  Index        r88, r84, r87
  Equal        r89, r86, r88
  JumpIfFalse  r89, L6
  // join ca in customer_address on c.c_current_addr_sk == ca.ca_address_sk
  IterPrep     r90, r6
  Len          r91, r90
  Const        r92, 0
L10:
  LessInt      r93, r92, r91
  JumpIfFalse  r93, L6
  Index        r94, r90, r92
  Move         r95, r94
  Const        r96, "c_current_addr_sk"
  Index        r97, r62, r96
  Const        r98, "ca_address_sk"
  Index        r99, r95, r98
  Equal        r100, r97, r99
  JumpIfFalse  r100, L7
  // where d.d_year == 2001 && d.d_moy == 5 &&
  Index        r101, r51, r14
  Const        r102, 2001
  Equal        r103, r101, r102
  Index        r104, r51, r15
  Const        r105, 5
  Equal        r106, r104, r105
  // cd.cd_marital_status == "M" && cd.cd_education_status == "Unknown" &&
  Index        r107, r73, r16
  Const        r108, "M"
  Equal        r109, r107, r108
  Index        r110, r73, r17
  Const        r111, "Unknown"
  Equal        r112, r110, r111
  // hd.hd_buy_potential == "1001-5000" && ca.ca_gmt_offset == (-6)
  Index        r113, r84, r18
  Const        r114, "1001-5000"
  Equal        r115, r113, r114
  Index        r116, r95, r19
  Const        r117, -6
  Equal        r118, r116, r117
  // where d.d_year == 2001 && d.d_moy == 5 &&
  Move         r119, r103
  JumpIfFalse  r119, L8
  Move         r119, r106
  JumpIfFalse  r119, L8
  Move         r119, r109
  // cd.cd_marital_status == "M" && cd.cd_education_status == "Unknown" &&
  JumpIfFalse  r119, L8
  Move         r119, r112
  JumpIfFalse  r119, L8
  Move         r119, r115
  // hd.hd_buy_potential == "1001-5000" && ca.ca_gmt_offset == (-6)
  JumpIfFalse  r119, L8
  Move         r119, r118
L8:
  // where d.d_year == 2001 && d.d_moy == 5 &&
  JumpIfFalse  r119, L7
  // from cc in call_center
  Const        r120, "cc"
  Move         r121, r34
  Const        r122, "cr"
  Move         r123, r40
  Const        r124, "d"
  Move         r125, r51
  Const        r126, "c"
  Move         r127, r62
  Const        r128, "cd"
  Move         r129, r73
  Const        r130, "hd"
  Move         r131, r84
  Const        r132, "ca"
  Move         r133, r95
  Move         r134, r120
  Move         r135, r121
  Move         r136, r122
  Move         r137, r123
  Move         r138, r124
  Move         r139, r125
  Move         r140, r126
  Move         r141, r127
  Move         r142, r128
  Move         r143, r129
  Move         r144, r130
  Move         r145, r131
  Move         r146, r132
  Move         r147, r133
  MakeMap      r148, 7, r134
  // group by {id: cc.cc_call_center_id, name: cc.cc_name, mgr: cc.cc_manager} into g
  Const        r149, "id"
  Index        r150, r34, r9
  Const        r151, "name"
  Index        r152, r34, r11
  Const        r153, "mgr"
  Index        r154, r34, r13
  Move         r155, r149
  Move         r156, r150
  Move         r157, r151
  Move         r158, r152
  Move         r159, r153
  Move         r160, r154
  MakeMap      r161, 3, r155
  Str          r162, r161
  In           r163, r162, r26
  JumpIfTrue   r163, L9
  // from cc in call_center
  Const        r164, "__group__"
  Const        r165, true
  // group by {id: cc.cc_call_center_id, name: cc.cc_name, mgr: cc.cc_manager} into g
  Move         r166, r161
  // from cc in call_center
  Const        r167, "items"
  Move         r168, r28
  Const        r169, "count"
  Const        r170, 0
  Move         r171, r164
  Move         r172, r165
  Move         r173, r21
  Move         r174, r166
  Move         r175, r167
  Move         r176, r168
  Move         r177, r169
  Move         r178, r170
  MakeMap      r179, 4, r171
  SetIndex     r26, r162, r179
  Append       r180, r27, r179
  Move         r27, r180
L9:
  Index        r181, r26, r162
  Index        r182, r181, r167
  Append       r183, r182, r148
  SetIndex     r181, r167, r183
  Index        r184, r181, r169
  Const        r185, 1
  AddInt       r186, r184, r185
  SetIndex     r181, r169, r186
L7:
  // join ca in customer_address on c.c_current_addr_sk == ca.ca_address_sk
  AddInt       r92, r92, r185
  Jump         L10
L6:
  // join hd in household_demographics on c.c_current_hdemo_sk == hd.hd_demo_sk
  AddInt       r81, r81, r185
  Jump         L11
L5:
  // join cd in customer_demographics on c.c_current_cdemo_sk == cd.cd_demo_sk
  AddInt       r70, r70, r185
  Jump         L12
L4:
  // join c in customer on cr.cr_returning_customer_sk == c.c_customer_sk
  AddInt       r59, r59, r185
  Jump         L13
L3:
  // join d in date_dim on cr.cr_returned_date_sk == d.d_date_sk
  AddInt       r48, r48, r185
  Jump         L14
L2:
  // join cr in catalog_returns on cc.cc_call_center_sk == cr.cr_call_center_sk
  AddInt       r37, r37, r185
  Jump         L15
L1:
  // from cc in call_center
  AddInt       r31, r31, r185
  Jump         L16
L0:
  Move         r187, r170
  Len          r188, r27
L20:
  LessInt      r189, r187, r188
  JumpIfFalse  r189, L17
  Index        r190, r27, r187
  Move         r191, r190
  // Call_Center: g.key.id,
  Const        r192, "Call_Center"
  Index        r193, r191, r21
  Index        r194, r193, r8
  // Call_Center_Name: g.key.name,
  Const        r195, "Call_Center_Name"
  Index        r196, r191, r21
  Index        r197, r196, r10
  // Manager: g.key.mgr,
  Const        r198, "Manager"
  Index        r199, r191, r21
  Index        r200, r199, r12
  // Returns_Loss: sum(from x in g select x.cr_net_loss)
  Const        r201, "Returns_Loss"
  Const        r202, []
  IterPrep     r203, r191
  Len          r204, r203
  Move         r205, r170
L19:
  LessInt      r206, r205, r204
  JumpIfFalse  r206, L18
  Index        r207, r203, r205
  Move         r208, r207
  Index        r209, r208, r25
  Append       r210, r202, r209
  Move         r202, r210
  AddInt       r205, r205, r185
  Jump         L19
L18:
  Sum          r211, r202
  // Call_Center: g.key.id,
  Move         r212, r192
  Move         r213, r194
  // Call_Center_Name: g.key.name,
  Move         r214, r195
  Move         r215, r197
  // Manager: g.key.mgr,
  Move         r216, r198
  Move         r217, r200
  // Returns_Loss: sum(from x in g select x.cr_net_loss)
  Move         r218, r201
  Move         r219, r211
  // select {
  MakeMap      r220, 4, r212
  // from cc in call_center
  Append       r221, r7, r220
  Move         r7, r221
  AddInt       r187, r187, r185
  Jump         L20
L17:
  // let result = first(
  First        r222, r7
  // json(result)
  JSON         r222
  // expect result == {
  Const        r223, {"Call_Center": "CC1", "Call_Center_Name": "Main", "Manager": "Alice", "Returns_Loss": 10.0}
  Equal        r224, r222, r223
  Expect       r224
  Return       r0
