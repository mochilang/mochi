func main (regs=222)
  // let store_sales = [ { ss_sold_date_sk: 1, ss_item_sk: 1, ss_customer_sk: 1, ss_store_sk: 1, ss_ext_sales_price: 100.0 } ]
  Const        r0, [{"ss_customer_sk": 1, "ss_ext_sales_price": 100.0, "ss_item_sk": 1, "ss_sold_date_sk": 1, "ss_store_sk": 1}]
  // let date_dim = [ { d_date_sk: 1, d_year: 1999, d_moy: 11 } ]
  Const        r1, [{"d_date_sk": 1, "d_moy": 11, "d_year": 1999}]
  // let item = [ { i_item_sk: 1, i_brand_id: 1, i_brand: "B1", i_manufact_id: 1, i_manufact: "M1", i_manager_id: 10 } ]
  Const        r2, [{"i_brand": "B1", "i_brand_id": 1, "i_item_sk": 1, "i_manager_id": 10, "i_manufact": "M1", "i_manufact_id": 1}]
  // let customer = [ { c_customer_sk: 1, c_current_addr_sk: 1 } ]
  Const        r3, [{"c_current_addr_sk": 1, "c_customer_sk": 1}]
  // let customer_address = [ { ca_address_sk: 1, ca_zip: "11111" } ]
  Const        r4, [{"ca_address_sk": 1, "ca_zip": "11111"}]
  // let store = [ { s_store_sk: 1, s_zip: "99999" } ]
  Const        r5, [{"s_store_sk": 1, "s_zip": "99999"}]
  // from d in date_dim
  Const        r6, []
  // group by { brand: i.i_brand, brand_id: i.i_brand_id, man_id: i.i_manufact_id, man: i.i_manufact } into g
  Const        r7, "brand"
  Const        r8, "i_brand"
  Const        r9, "brand_id"
  Const        r10, "i_brand_id"
  Const        r11, "man_id"
  Const        r12, "i_manufact_id"
  Const        r13, "man"
  Const        r14, "i_manufact"
  // where d.d_moy == 11 && d.d_year == 1999
  Const        r15, "d_moy"
  Const        r16, "d_year"
  // select { i_brand: g.key.brand, i_brand_id: g.key.brand_id, i_manufact_id: g.key.man_id, i_manufact: g.key.man, ext_price: sum(from x in g select x.ss_ext_sales_price) }
  Const        r8, "i_brand"
  Const        r17, "key"
  Const        r7, "brand"
  Const        r10, "i_brand_id"
  Const        r17, "key"
  Const        r9, "brand_id"
  Const        r12, "i_manufact_id"
  Const        r17, "key"
  Const        r11, "man_id"
  Const        r14, "i_manufact"
  Const        r17, "key"
  Const        r13, "man"
  Const        r18, "ext_price"
  Const        r19, "ss_ext_sales_price"
  // sort by [g.key.brand]
  Const        r17, "key"
  Const        r7, "brand"
  // from d in date_dim
  MakeMap      r20, 0, r0
  Const        r22, []
  Move         r21, r22
  IterPrep     r23, r1
  Len          r24, r23
  Const        r25, 0
L16:
  LessInt      r26, r25, r24
  JumpIfFalse  r26, L0
  Index        r27, r23, r25
  Move         r28, r27
  // join ss in store_sales on ss.ss_sold_date_sk == d.d_date_sk
  IterPrep     r29, r0
  Len          r30, r29
  Const        r31, 0
L15:
  LessInt      r32, r31, r30
  JumpIfFalse  r32, L1
  Index        r33, r29, r31
  Move         r34, r33
  Const        r35, "ss_sold_date_sk"
  Index        r36, r34, r35
  Const        r37, "d_date_sk"
  Index        r38, r28, r37
  Equal        r39, r36, r38
  JumpIfFalse  r39, L2
  // join i in item on ss.ss_item_sk == i.i_item_sk && i.i_manager_id == 10
  IterPrep     r40, r2
  Len          r41, r40
  Const        r42, 0
L14:
  LessInt      r43, r42, r41
  JumpIfFalse  r43, L2
  Index        r44, r40, r42
  Move         r45, r44
  Const        r46, "ss_item_sk"
  Index        r47, r34, r46
  Const        r48, "i_item_sk"
  Index        r49, r45, r48
  Equal        r50, r47, r49
  Const        r51, "i_manager_id"
  Index        r52, r45, r51
  Const        r53, 10
  Equal        r54, r52, r53
  Move         r55, r50
  JumpIfFalse  r55, L3
  Move         r55, r54
L3:
  JumpIfFalse  r55, L4
  // join c in customer on ss.ss_customer_sk == c.c_customer_sk
  IterPrep     r56, r3
  Len          r57, r56
  Const        r58, 0
L13:
  LessInt      r59, r58, r57
  JumpIfFalse  r59, L4
  Index        r60, r56, r58
  Move         r61, r60
  Const        r62, "ss_customer_sk"
  Index        r63, r34, r62
  Const        r64, "c_customer_sk"
  Index        r65, r61, r64
  Equal        r66, r63, r65
  JumpIfFalse  r66, L5
  // join ca in customer_address on c.c_current_addr_sk == ca.ca_address_sk
  IterPrep     r67, r4
  Len          r68, r67
  Const        r69, 0
L12:
  LessInt      r70, r69, r68
  JumpIfFalse  r70, L5
  Index        r71, r67, r69
  Move         r72, r71
  Const        r73, "c_current_addr_sk"
  Index        r74, r61, r73
  Const        r75, "ca_address_sk"
  Index        r76, r72, r75
  Equal        r77, r74, r76
  JumpIfFalse  r77, L6
  // join s in store on ss.ss_store_sk == s.s_store_sk && substr(ca.ca_zip,0,5) != substr(s.s_zip,0,5)
  IterPrep     r78, r5
  Len          r79, r78
  Const        r80, 0
L11:
  LessInt      r81, r80, r79
  JumpIfFalse  r81, L6
  Index        r82, r78, r80
  Move         r83, r82
  Const        r84, "ss_store_sk"
  Index        r85, r34, r84
  Const        r86, "s_store_sk"
  Index        r87, r83, r86
  Equal        r88, r85, r87
  Const        r89, "ca_zip"
  Index        r90, r72, r89
  Const        r91, 0
  Const        r92, 5
  Slice        r93, r90, r91, r92
  Const        r94, "s_zip"
  Index        r95, r83, r94
  Const        r91, 0
  Const        r92, 5
  Slice        r96, r95, r91, r92
  NotEqual     r97, r93, r96
  Move         r98, r88
  JumpIfFalse  r98, L7
  Move         r98, r97
L7:
  JumpIfFalse  r98, L8
  // where d.d_moy == 11 && d.d_year == 1999
  Const        r15, "d_moy"
  Index        r99, r28, r15
  Const        r100, 11
  Equal        r101, r99, r100
  Const        r16, "d_year"
  Index        r102, r28, r16
  Const        r103, 1999
  Equal        r104, r102, r103
  Move         r105, r101
  JumpIfFalse  r105, L9
  Move         r105, r104
L9:
  JumpIfFalse  r105, L8
  // from d in date_dim
  Const        r106, "d"
  Move         r107, r28
  Const        r108, "ss"
  Move         r109, r34
  Const        r110, "i"
  Move         r111, r45
  Const        r112, "c"
  Move         r113, r61
  Const        r114, "ca"
  Move         r115, r72
  Const        r116, "s"
  Move         r117, r83
  Move         r118, r106
  Move         r119, r107
  Move         r120, r108
  Move         r121, r109
  Move         r122, r110
  Move         r123, r111
  Move         r124, r112
  Move         r125, r113
  Move         r126, r114
  Move         r127, r115
  Move         r128, r116
  Move         r129, r117
  MakeMap      r130, 6, r118
  // group by { brand: i.i_brand, brand_id: i.i_brand_id, man_id: i.i_manufact_id, man: i.i_manufact } into g
  Const        r131, "brand"
  Const        r8, "i_brand"
  Index        r132, r45, r8
  Const        r133, "brand_id"
  Const        r10, "i_brand_id"
  Index        r134, r45, r10
  Const        r135, "man_id"
  Const        r12, "i_manufact_id"
  Index        r136, r45, r12
  Const        r137, "man"
  Const        r14, "i_manufact"
  Index        r138, r45, r14
  Move         r139, r131
  Move         r140, r132
  Move         r141, r133
  Move         r142, r134
  Move         r143, r135
  Move         r144, r136
  Move         r145, r137
  Move         r146, r138
  MakeMap      r147, 4, r139
  Str          r148, r147
  In           r149, r148, r20
  JumpIfTrue   r149, L10
  // from d in date_dim
  Const        r22, []
  Const        r150, "__group__"
  Const        r151, true
  Const        r17, "key"
  // group by { brand: i.i_brand, brand_id: i.i_brand_id, man_id: i.i_manufact_id, man: i.i_manufact } into g
  Move         r152, r147
  // from d in date_dim
  Const        r153, "items"
  Move         r154, r22
  Const        r155, "count"
  Const        r91, 0
  Move         r156, r150
  Move         r157, r151
  Move         r158, r17
  Move         r159, r152
  Move         r160, r153
  Move         r161, r154
  Move         r162, r155
  Move         r163, r91
  MakeMap      r164, 4, r156
  SetIndex     r20, r148, r164
  Append       r165, r21, r164
  Move         r21, r165
L10:
  Const        r153, "items"
  Index        r166, r20, r148
  Index        r167, r166, r153
  Append       r168, r167, r130
  SetIndex     r166, r153, r168
  Const        r155, "count"
  Index        r169, r166, r155
  Const        r170, 1
  AddInt       r171, r169, r170
  SetIndex     r166, r155, r171
L8:
  // join s in store on ss.ss_store_sk == s.s_store_sk && substr(ca.ca_zip,0,5) != substr(s.s_zip,0,5)
  Const        r170, 1
  AddInt       r80, r80, r170
  Jump         L11
L6:
  // join ca in customer_address on c.c_current_addr_sk == ca.ca_address_sk
  Const        r170, 1
  AddInt       r69, r69, r170
  Jump         L12
L5:
  // join c in customer on ss.ss_customer_sk == c.c_customer_sk
  Const        r170, 1
  AddInt       r58, r58, r170
  Jump         L13
L4:
  // join i in item on ss.ss_item_sk == i.i_item_sk && i.i_manager_id == 10
  Const        r170, 1
  AddInt       r42, r42, r170
  Jump         L14
L2:
  // join ss in store_sales on ss.ss_sold_date_sk == d.d_date_sk
  Const        r170, 1
  AddInt       r31, r31, r170
  Jump         L15
L1:
  // from d in date_dim
  Const        r170, 1
  AddInt       r25, r25, r170
  Jump         L16
L0:
  Const        r91, 0
  Move         r172, r91
  Len          r173, r21
L20:
  LessInt      r174, r172, r173
  JumpIfFalse  r174, L17
  Index        r175, r21, r172
  Move         r176, r175
  // select { i_brand: g.key.brand, i_brand_id: g.key.brand_id, i_manufact_id: g.key.man_id, i_manufact: g.key.man, ext_price: sum(from x in g select x.ss_ext_sales_price) }
  Const        r177, "i_brand"
  Const        r17, "key"
  Index        r178, r176, r17
  Const        r7, "brand"
  Index        r179, r178, r7
  Const        r180, "i_brand_id"
  Const        r17, "key"
  Index        r181, r176, r17
  Const        r9, "brand_id"
  Index        r182, r181, r9
  Const        r183, "i_manufact_id"
  Const        r17, "key"
  Index        r184, r176, r17
  Const        r11, "man_id"
  Index        r185, r184, r11
  Const        r186, "i_manufact"
  Const        r17, "key"
  Index        r187, r176, r17
  Const        r13, "man"
  Index        r188, r187, r13
  Const        r189, "ext_price"
  Const        r190, []
  Const        r19, "ss_ext_sales_price"
  IterPrep     r191, r176
  Len          r192, r191
  Const        r91, 0
  Move         r193, r91
L19:
  LessInt      r194, r193, r192
  JumpIfFalse  r194, L18
  Index        r195, r191, r193
  Move         r196, r195
  Const        r19, "ss_ext_sales_price"
  Index        r197, r196, r19
  Append       r198, r190, r197
  Move         r190, r198
  Const        r170, 1
  AddInt       r193, r193, r170
  Jump         L19
L18:
  Sum          r199, r190
  Move         r200, r177
  Move         r201, r179
  Move         r202, r180
  Move         r203, r182
  Move         r204, r183
  Move         r205, r185
  Move         r206, r186
  Move         r207, r188
  Move         r208, r189
  Move         r209, r199
  MakeMap      r210, 5, r200
  // sort by [g.key.brand]
  Const        r17, "key"
  Index        r214, r176, r17
  Const        r7, "brand"
  Index        r215, r214, r7
  Move         r213, r215
  MakeList     r216, 1, r213
  Move         r211, r216
  // from d in date_dim
  Move         r212, r210
  MakeList     r217, 2, r211
  Append       r218, r6, r217
  Move         r6, r218
  Const        r170, 1
  AddInt       r172, r172, r170
  Jump         L20
L17:
  // sort by [g.key.brand]
  Sort         r219, r6
  // from d in date_dim
  Move         r6, r219
  // json(result)
  JSON         r6
  // expect result == [ { i_brand: "B1", i_brand_id: 1, i_manufact_id: 1, i_manufact: "M1", ext_price: 100.0 } ]
  Const        r220, [{"ext_price": 100.0, "i_brand": "B1", "i_brand_id": 1, "i_manufact": "M1", "i_manufact_id": 1}]
  Equal        r221, r6, r220
  Expect       r221
  Return       r0
