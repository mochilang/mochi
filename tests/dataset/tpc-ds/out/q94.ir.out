func main (regs=117)
  // let web_sales = [
  Const        r0, [{"ws_ext_ship_cost": 2, "ws_net_profit": 5, "ws_order_number": 1, "ws_ship_addr_sk": 1, "ws_ship_date_sk": 1, "ws_warehouse_sk": 1, "ws_web_site_sk": 1}, {"ws_ext_ship_cost": 1, "ws_net_profit": 3, "ws_order_number": 2, "ws_ship_addr_sk": 1, "ws_ship_date_sk": 1, "ws_warehouse_sk": 2, "ws_web_site_sk": 1}]
  // let web_returns = [{wr_order_number: 2}]
  Const        r1, [{"wr_order_number": 2}]
  // let date_dim = [{d_date_sk: 1, d_date: "2001-02-01"}]
  Const        r2, [{"d_date": "2001-02-01", "d_date_sk": 1}]
  // let customer_address = [{ca_address_sk: 1, ca_state: "CA"}]
  Const        r3, [{"ca_address_sk": 1, "ca_state": "CA"}]
  // let web_site = [{web_site_sk: 1, web_company_name: "pri"}]
  Const        r4, [{"web_company_name": "pri", "web_site_sk": 1}]
  // from ws in web_sales
  Const        r5, []
  // where ca.ca_state == "CA" && w.web_company_name == "pri" &&
  Const        r6, "ca_state"
  Const        r7, "web_company_name"
  // exists(from wr in web_returns where wr.wr_order_number == ws.ws_order_number select wr) == false
  Const        r8, "wr_order_number"
  Const        r9, "ws_order_number"
  // from ws in web_sales
  IterPrep     r10, r0
  Len          r11, r10
  Const        r13, 0
  Move         r12, r13
L13:
  LessInt      r14, r12, r11
  JumpIfFalse  r14, L0
  Index        r15, r10, r12
  Move         r16, r15
  // join d in date_dim on ws.ws_ship_date_sk == d.d_date_sk
  IterPrep     r17, r2
  Len          r18, r17
  Const        r19, "ws_ship_date_sk"
  Const        r20, "d_date_sk"
  Move         r21, r13
L12:
  LessInt      r22, r21, r18
  JumpIfFalse  r22, L1
  Index        r23, r17, r21
  Move         r24, r23
  Index        r25, r16, r19
  Index        r26, r24, r20
  Equal        r27, r25, r26
  JumpIfFalse  r27, L2
  // join ca in customer_address on ws.ws_ship_addr_sk == ca.ca_address_sk
  IterPrep     r28, r3
  Len          r29, r28
  Const        r30, "ws_ship_addr_sk"
  Const        r31, "ca_address_sk"
  Move         r32, r13
L11:
  LessInt      r33, r32, r29
  JumpIfFalse  r33, L2
  Index        r34, r28, r32
  Move         r35, r34
  Index        r36, r16, r30
  Index        r37, r35, r31
  Equal        r38, r36, r37
  JumpIfFalse  r38, L3
  // join w in web_site on ws.ws_web_site_sk == w.web_site_sk
  IterPrep     r39, r4
  Len          r40, r39
  Const        r41, "ws_web_site_sk"
  Const        r42, "web_site_sk"
  Move         r43, r13
L10:
  LessInt      r44, r43, r40
  JumpIfFalse  r44, L3
  Index        r45, r39, r43
  Move         r46, r45
  Index        r47, r16, r41
  Index        r48, r46, r42
  Equal        r49, r47, r48
  JumpIfFalse  r49, L4
  // where ca.ca_state == "CA" && w.web_company_name == "pri" &&
  Index        r50, r35, r6
  Const        r51, "CA"
  Equal        r52, r50, r51
  Index        r53, r46, r7
  Const        r54, "pri"
  Equal        r55, r53, r54
  // exists(from wr in web_returns where wr.wr_order_number == ws.ws_order_number select wr) == false
  Const        r56, []
  IterPrep     r57, r1
  Len          r58, r57
  Move         r59, r13
L7:
  LessInt      r60, r59, r58
  JumpIfFalse  r60, L5
  Index        r61, r57, r59
  Move         r62, r61
  Index        r63, r62, r8
  Index        r64, r16, r9
  Equal        r65, r63, r64
  JumpIfFalse  r65, L6
  Append       r66, r56, r62
  Move         r56, r66
L6:
  Const        r67, 1
  AddInt       r59, r59, r67
  Jump         L7
L5:
  Exists       r68, r56
  Const        r69, false
  Equal        r70, r68, r69
  // where ca.ca_state == "CA" && w.web_company_name == "pri" &&
  Move         r71, r52
  JumpIfFalse  r71, L8
  Move         r71, r55
L8:
  Move         r72, r71
  JumpIfFalse  r72, L9
  Move         r72, r70
L9:
  JumpIfFalse  r72, L4
  // from ws in web_sales
  Append       r73, r5, r16
  Move         r5, r73
L4:
  // join w in web_site on ws.ws_web_site_sk == w.web_site_sk
  Add          r43, r43, r67
  Jump         L10
L3:
  // join ca in customer_address on ws.ws_ship_addr_sk == ca.ca_address_sk
  Add          r32, r32, r67
  Jump         L11
L2:
  // join d in date_dim on ws.ws_ship_date_sk == d.d_date_sk
  Add          r21, r21, r67
  Jump         L12
L1:
  // from ws in web_sales
  AddInt       r12, r12, r67
  Jump         L13
L0:
  // order_count: len(distinct(from x in filtered select x.ws_order_number)),
  Const        r74, "order_count"
  Const        r75, []
  IterPrep     r76, r5
  Len          r77, r76
  Move         r78, r13
L15:
  LessInt      r79, r78, r77
  JumpIfFalse  r79, L14
  Index        r80, r76, r78
  Move         r81, r80
  Index        r82, r81, r9
  Append       r83, r75, r82
  Move         r75, r83
  AddInt       r78, r78, r67
  Jump         L15
L14:
  Distinct     84,75,0,0
  Len          r85, r84
  // total_shipping_cost: sum(from x in filtered select x.ws_ext_ship_cost),
  Const        r86, "total_shipping_cost"
  Const        r87, []
  Const        r88, "ws_ext_ship_cost"
  IterPrep     r89, r5
  Len          r90, r89
  Move         r91, r13
L17:
  LessInt      r92, r91, r90
  JumpIfFalse  r92, L16
  Index        r93, r89, r91
  Move         r81, r93
  Index        r94, r81, r88
  Append       r95, r87, r94
  Move         r87, r95
  AddInt       r91, r91, r67
  Jump         L17
L16:
  Sum          r96, r87
  // total_net_profit: sum(from x in filtered select x.ws_net_profit)
  Const        r97, "total_net_profit"
  Const        r98, []
  Const        r99, "ws_net_profit"
  IterPrep     r100, r5
  Len          r101, r100
  Move         r102, r13
L19:
  LessInt      r103, r102, r101
  JumpIfFalse  r103, L18
  Index        r104, r100, r102
  Move         r81, r104
  Index        r105, r81, r99
  Append       r106, r98, r105
  Move         r98, r106
  AddInt       r102, r102, r67
  Jump         L19
L18:
  Sum          r107, r98
  // order_count: len(distinct(from x in filtered select x.ws_order_number)),
  Move         r108, r74
  Move         r109, r85
  // total_shipping_cost: sum(from x in filtered select x.ws_ext_ship_cost),
  Move         r110, r86
  Move         r111, r96
  // total_net_profit: sum(from x in filtered select x.ws_net_profit)
  Move         r112, r97
  Move         r113, r107
  // let result = {
  MakeMap      r114, 3, r108
  // json(result)
  JSON         r114
  // expect result == {order_count: 1, total_shipping_cost: 2.0, total_net_profit: 5.0}
  Const        r115, {"order_count": 1, "total_net_profit": 5, "total_shipping_cost": 2}
  Equal        r116, r114, r115
  Expect       r116
  Return       r0

  // fun distinct(xs: list<any>): list<any> {
func distinct (regs=14)
  // var out = []
  Const        r1, []
  Move         r2, r1
  // for x in xs {
  IterPrep     r3, r0
  Len          r4, r3
  Const        r5, 0
L2:
  Less         r6, r5, r4
  JumpIfFalse  r6, L0
  Index        r7, r3, r5
  Move         r8, r7
  // if !contains(out, x) {
  Not          r10, r9
  JumpIfFalse  r10, L1
  // out = append(out, x)
  Append       r11, r2, r8
  Move         r2, r11
L1:
  // for x in xs {
  Const        r12, 1
  Add          r13, r5, r12
  Move         r5, r13
  Jump         L2
L0:
  // return out
  Return       r2
