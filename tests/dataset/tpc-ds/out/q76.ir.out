func main (regs=302)
  // let date_dim = [
  Const        r0, [{"d_date_sk": 1, "d_qoy": 1, "d_year": 1998}]
  // let item = [
  Const        r1, [{"i_category": "CatA", "i_item_sk": 1}, {"i_category": "CatB", "i_item_sk": 2}, {"i_category": "CatC", "i_item_sk": 3}]
  // let store_sales = [
  Const        r2, [{"ss_customer_sk": nil, "ss_ext_sales_price": 10, "ss_item_sk": 1, "ss_sold_date_sk": 1}]
  // let web_sales = [
  Const        r3, [{"ws_bill_customer_sk": nil, "ws_ext_sales_price": 15, "ws_item_sk": 2, "ws_sold_date_sk": 1}]
  // let catalog_sales = [
  Const        r4, [{"cs_bill_customer_sk": nil, "cs_ext_sales_price": 20, "cs_item_sk": 3, "cs_sold_date_sk": 1}]
  // from ss in store_sales
  Const        r5, []
  // where ss.ss_customer_sk == null
  Const        r6, "ss_customer_sk"
  // select { channel: "store", col_name: ss.ss_customer_sk, d_year: d.d_year, d_qoy: d.d_qoy, i_category: i.i_category, ext_sales_price: ss.ss_ext_sales_price }
  Const        r7, "channel"
  Const        r8, "col_name"
  Const        r9, "d_year"
  Const        r10, "d_qoy"
  Const        r11, "i_category"
  Const        r12, "ext_sales_price"
  Const        r13, "ss_ext_sales_price"
  // from ss in store_sales
  IterPrep     r14, r2
  Len          r15, r14
  Const        r17, 0
  Move         r16, r17
L6:
  LessInt      r18, r16, r15
  JumpIfFalse  r18, L0
  Index        r19, r14, r16
  Move         r20, r19
  // join i in item on i.i_item_sk == ss.ss_item_sk
  IterPrep     r21, r1
  Len          r22, r21
  Const        r23, "i_item_sk"
  Const        r24, "ss_item_sk"
  Move         r25, r17
L5:
  LessInt      r26, r25, r22
  JumpIfFalse  r26, L1
  Index        r27, r21, r25
  Move         r28, r27
  Index        r29, r28, r23
  Index        r30, r20, r24
  Equal        r31, r29, r30
  JumpIfFalse  r31, L2
  // join d in date_dim on d.d_date_sk == ss.ss_sold_date_sk
  IterPrep     r32, r0
  Len          r33, r32
  Const        r34, "d_date_sk"
  Const        r35, "ss_sold_date_sk"
  Move         r36, r17
L4:
  LessInt      r37, r36, r33
  JumpIfFalse  r37, L2
  Index        r38, r32, r36
  Move         r39, r38
  Index        r40, r39, r34
  Index        r41, r20, r35
  Equal        r42, r40, r41
  JumpIfFalse  r42, L3
  // where ss.ss_customer_sk == null
  Index        r43, r20, r6
  Const        r44, nil
  Equal        r45, r43, r44
  JumpIfFalse  r45, L3
  // select { channel: "store", col_name: ss.ss_customer_sk, d_year: d.d_year, d_qoy: d.d_qoy, i_category: i.i_category, ext_sales_price: ss.ss_ext_sales_price }
  Const        r46, "channel"
  Const        r47, "store"
  Const        r48, "col_name"
  Index        r49, r20, r6
  Const        r50, "d_year"
  Index        r51, r39, r9
  Const        r52, "d_qoy"
  Index        r53, r39, r10
  Const        r54, "i_category"
  Index        r55, r28, r11
  Const        r56, "ext_sales_price"
  Index        r57, r20, r13
  Move         r58, r46
  Move         r59, r47
  Move         r60, r48
  Move         r61, r49
  Move         r62, r50
  Move         r63, r51
  Move         r64, r52
  Move         r65, r53
  Move         r66, r54
  Move         r67, r55
  Move         r68, r56
  Move         r69, r57
  MakeMap      r70, 6, r58
  // from ss in store_sales
  Append       r71, r5, r70
  Move         r5, r71
L3:
  // join d in date_dim on d.d_date_sk == ss.ss_sold_date_sk
  Const        r72, 1
  Add          r36, r36, r72
  Jump         L4
L2:
  // join i in item on i.i_item_sk == ss.ss_item_sk
  Add          r25, r25, r72
  Jump         L5
L1:
  // from ss in store_sales
  AddInt       r16, r16, r72
  Jump         L6
L0:
  // from ws in web_sales
  Const        r73, []
  // where ws.ws_bill_customer_sk == null
  Const        r74, "ws_bill_customer_sk"
  // select { channel: "web", col_name: ws.ws_bill_customer_sk, d_year: d.d_year, d_qoy: d.d_qoy, i_category: i.i_category, ext_sales_price: ws.ws_ext_sales_price }
  Const        r75, "ws_ext_sales_price"
  // from ws in web_sales
  IterPrep     r76, r3
  Len          r77, r76
  Move         r78, r17
L13:
  LessInt      r79, r78, r77
  JumpIfFalse  r79, L7
  Index        r80, r76, r78
  Move         r81, r80
  // join i in item on i.i_item_sk == ws.ws_item_sk
  IterPrep     r82, r1
  Len          r83, r82
  Const        r84, "ws_item_sk"
  Move         r85, r17
L12:
  LessInt      r86, r85, r83
  JumpIfFalse  r86, L8
  Index        r87, r82, r85
  Move         r28, r87
  Index        r88, r28, r23
  Index        r89, r81, r84
  Equal        r90, r88, r89
  JumpIfFalse  r90, L9
  // join d in date_dim on d.d_date_sk == ws.ws_sold_date_sk
  IterPrep     r91, r0
  Len          r92, r91
  Const        r93, "ws_sold_date_sk"
  Move         r94, r17
L11:
  LessInt      r95, r94, r92
  JumpIfFalse  r95, L9
  Index        r96, r91, r94
  Move         r39, r96
  Index        r97, r39, r34
  Index        r98, r81, r93
  Equal        r99, r97, r98
  JumpIfFalse  r99, L10
  // where ws.ws_bill_customer_sk == null
  Index        r100, r81, r74
  Equal        r101, r100, r44
  JumpIfFalse  r101, L10
  // select { channel: "web", col_name: ws.ws_bill_customer_sk, d_year: d.d_year, d_qoy: d.d_qoy, i_category: i.i_category, ext_sales_price: ws.ws_ext_sales_price }
  Const        r102, "channel"
  Const        r103, "web"
  Const        r104, "col_name"
  Index        r105, r81, r74
  Const        r106, "d_year"
  Index        r107, r39, r9
  Const        r108, "d_qoy"
  Index        r109, r39, r10
  Const        r110, "i_category"
  Index        r111, r28, r11
  Const        r112, "ext_sales_price"
  Index        r113, r81, r75
  Move         r114, r102
  Move         r115, r103
  Move         r116, r104
  Move         r117, r105
  Move         r118, r106
  Move         r119, r107
  Move         r120, r108
  Move         r121, r109
  Move         r122, r110
  Move         r123, r111
  Move         r124, r112
  Move         r125, r113
  MakeMap      r126, 6, r114
  // from ws in web_sales
  Append       r127, r73, r126
  Move         r73, r127
L10:
  // join d in date_dim on d.d_date_sk == ws.ws_sold_date_sk
  Add          r94, r94, r72
  Jump         L11
L9:
  // join i in item on i.i_item_sk == ws.ws_item_sk
  Add          r85, r85, r72
  Jump         L12
L8:
  // from ws in web_sales
  AddInt       r78, r78, r72
  Jump         L13
L7:
  // from cs in catalog_sales
  Const        r128, []
  // where cs.cs_bill_customer_sk == null
  Const        r129, "cs_bill_customer_sk"
  // select { channel: "catalog", col_name: cs.cs_bill_customer_sk, d_year: d.d_year, d_qoy: d.d_qoy, i_category: i.i_category, ext_sales_price: cs.cs_ext_sales_price }
  Const        r130, "cs_ext_sales_price"
  // from cs in catalog_sales
  IterPrep     r131, r4
  Len          r132, r131
  Move         r133, r17
L20:
  LessInt      r134, r133, r132
  JumpIfFalse  r134, L14
  Index        r135, r131, r133
  Move         r136, r135
  // join i in item on i.i_item_sk == cs.cs_item_sk
  IterPrep     r137, r1
  Len          r138, r137
  Const        r139, "cs_item_sk"
  Move         r140, r17
L19:
  LessInt      r141, r140, r138
  JumpIfFalse  r141, L15
  Index        r142, r137, r140
  Move         r28, r142
  Index        r143, r28, r23
  Index        r144, r136, r139
  Equal        r145, r143, r144
  JumpIfFalse  r145, L16
  // join d in date_dim on d.d_date_sk == cs.cs_sold_date_sk
  IterPrep     r146, r0
  Len          r147, r146
  Const        r148, "cs_sold_date_sk"
  Move         r149, r17
L18:
  LessInt      r150, r149, r147
  JumpIfFalse  r150, L16
  Index        r151, r146, r149
  Move         r39, r151
  Index        r152, r39, r34
  Index        r153, r136, r148
  Equal        r154, r152, r153
  JumpIfFalse  r154, L17
  // where cs.cs_bill_customer_sk == null
  Index        r155, r136, r129
  Equal        r156, r155, r44
  JumpIfFalse  r156, L17
  // select { channel: "catalog", col_name: cs.cs_bill_customer_sk, d_year: d.d_year, d_qoy: d.d_qoy, i_category: i.i_category, ext_sales_price: cs.cs_ext_sales_price }
  Const        r157, "channel"
  Const        r158, "catalog"
  Const        r159, "col_name"
  Index        r160, r136, r129
  Const        r161, "d_year"
  Index        r162, r39, r9
  Const        r163, "d_qoy"
  Index        r164, r39, r10
  Const        r165, "i_category"
  Index        r166, r28, r11
  Const        r167, "ext_sales_price"
  Index        r168, r136, r130
  Move         r169, r157
  Move         r170, r158
  Move         r171, r159
  Move         r172, r160
  Move         r173, r161
  Move         r174, r162
  Move         r175, r163
  Move         r176, r164
  Move         r177, r165
  Move         r178, r166
  Move         r179, r167
  Move         r180, r168
  MakeMap      r181, 6, r169
  // from cs in catalog_sales
  Append       r182, r128, r181
  Move         r128, r182
L17:
  // join d in date_dim on d.d_date_sk == cs.cs_sold_date_sk
  Add          r149, r149, r72
  Jump         L18
L16:
  // join i in item on i.i_item_sk == cs.cs_item_sk
  Add          r140, r140, r72
  Jump         L19
L15:
  // from cs in catalog_sales
  AddInt       r133, r133, r72
  Jump         L20
L14:
  // let all_rows = concat(store_part, web_part, catalog_part)
  UnionAll     r183, r5, r73
  UnionAll     r184, r183, r128
  // from r in all_rows
  Const        r185, []
  // channel: g.key.channel,
  Const        r186, "key"
  // sales_cnt: count(g),
  Const        r187, "sales_cnt"
  // sales_amt: sum(from x in g select x.r.ext_sales_price)
  Const        r188, "sales_amt"
  Const        r189, "r"
  // from r in all_rows
  IterPrep     r190, r184
  Len          r191, r190
  Const        r192, 0
  MakeMap      r193, 0, r0
  Const        r195, []
  Move         r194, r195
L23:
  LessInt      r196, r192, r191
  JumpIfFalse  r196, L21
  Index        r197, r190, r192
  Move         r198, r197
  // group by { channel: r.channel, col_name: r.col_name, d_year: r.d_year, d_qoy: r.d_qoy, i_category: r.i_category } into g
  Const        r199, "channel"
  Index        r200, r198, r7
  Const        r201, "col_name"
  Index        r202, r198, r8
  Const        r203, "d_year"
  Index        r204, r198, r9
  Const        r205, "d_qoy"
  Index        r206, r198, r10
  Const        r207, "i_category"
  Index        r208, r198, r11
  Move         r209, r199
  Move         r210, r200
  Move         r211, r201
  Move         r212, r202
  Move         r213, r203
  Move         r214, r204
  Move         r215, r205
  Move         r216, r206
  Move         r217, r207
  Move         r218, r208
  MakeMap      r219, 5, r209
  Str          r220, r219
  In           r221, r220, r193
  JumpIfTrue   r221, L22
  // from r in all_rows
  Const        r222, []
  Const        r223, "__group__"
  Const        r224, true
  // group by { channel: r.channel, col_name: r.col_name, d_year: r.d_year, d_qoy: r.d_qoy, i_category: r.i_category } into g
  Move         r225, r219
  // from r in all_rows
  Const        r226, "items"
  Move         r227, r222
  Const        r228, "count"
  Move         r229, r223
  Move         r230, r224
  Move         r231, r186
  Move         r232, r225
  Move         r233, r226
  Move         r234, r227
  Move         r235, r228
  Move         r236, r17
  MakeMap      r237, 4, r229
  SetIndex     r193, r220, r237
  Append       r238, r194, r237
  Move         r194, r238
L22:
  Index        r239, r193, r220
  Index        r240, r239, r226
  Append       r241, r240, r197
  SetIndex     r239, r226, r241
  Index        r242, r239, r228
  AddInt       r243, r242, r72
  SetIndex     r239, r228, r243
  AddInt       r192, r192, r72
  Jump         L23
L21:
  Move         r244, r17
  Len          r245, r194
L27:
  LessInt      r246, r244, r245
  JumpIfFalse  r246, L24
  Index        r247, r194, r244
  Move         r248, r247
  // channel: g.key.channel,
  Const        r249, "channel"
  Index        r250, r248, r186
  Index        r251, r250, r7
  // col_name: g.key.col_name,
  Const        r252, "col_name"
  Index        r253, r248, r186
  Index        r254, r253, r8
  // d_year: g.key.d_year,
  Const        r255, "d_year"
  Index        r256, r248, r186
  Index        r257, r256, r9
  // d_qoy: g.key.d_qoy,
  Const        r258, "d_qoy"
  Index        r259, r248, r186
  Index        r260, r259, r10
  // i_category: g.key.i_category,
  Const        r261, "i_category"
  Index        r262, r248, r186
  Index        r263, r262, r11
  // sales_cnt: count(g),
  Const        r264, "sales_cnt"
  Index        r265, r248, r228
  // sales_amt: sum(from x in g select x.r.ext_sales_price)
  Const        r266, "sales_amt"
  Const        r267, []
  IterPrep     r268, r248
  Len          r269, r268
  Move         r270, r17
L26:
  LessInt      r271, r270, r269
  JumpIfFalse  r271, L25
  Index        r272, r268, r270
  Move         r273, r272
  Index        r274, r273, r189
  Index        r275, r274, r12
  Append       r276, r267, r275
  Move         r267, r276
  AddInt       r270, r270, r72
  Jump         L26
L25:
  Sum          r277, r267
  // channel: g.key.channel,
  Move         r278, r249
  Move         r279, r251
  // col_name: g.key.col_name,
  Move         r280, r252
  Move         r281, r254
  // d_year: g.key.d_year,
  Move         r282, r255
  Move         r283, r257
  // d_qoy: g.key.d_qoy,
  Move         r284, r258
  Move         r285, r260
  // i_category: g.key.i_category,
  Move         r286, r261
  Move         r287, r263
  // sales_cnt: count(g),
  Move         r288, r264
  Move         r289, r265
  // sales_amt: sum(from x in g select x.r.ext_sales_price)
  Move         r290, r266
  Move         r291, r277
  // select {
  MakeMap      r292, 7, r278
  // sort by g.key.channel
  Index        r293, r248, r186
  Index        r294, r293, r7
  Move         r295, r294
  // from r in all_rows
  Move         r296, r292
  MakeList     r297, 2, r295
  Append       r298, r185, r297
  Move         r185, r298
  AddInt       r244, r244, r72
  Jump         L27
L24:
  // sort by g.key.channel
  Sort         r299, r185
  // from r in all_rows
  Move         r185, r299
  // json(result)
  JSON         r185
  // expect result == [
  Const        r300, [{"channel": "store", "col_name": nil, "d_qoy": 1, "d_year": 1998, "i_category": "CatA", "sales_amt": 10, "sales_cnt": 1}, {"channel": "web", "col_name": nil, "d_qoy": 1, "d_year": 1998, "i_category": "CatB", "sales_amt": 15, "sales_cnt": 1}, {"channel": "catalog", "col_name": nil, "d_qoy": 1, "d_year": 1998, "i_category": "CatC", "sales_amt": 20, "sales_cnt": 1}]
  Equal        r301, r185, r300
  Expect       r301
  Return       r0
