func main (regs=47)
  // let store_sales = [
  Const        r0, [{"price": 20, "ret": 5}, {"price": 10, "ret": 2}, {"price": 5, "ret": 0}]
  // let catalog_sales = [
  Const        r1, [{"price": 15, "ret": 3}, {"price": 8, "ret": 1}]
  // let web_sales = [
  Const        r2, [{"price": 25, "ret": 5}, {"price": 15, "ret": 8}, {"price": 8, "ret": 2}]
  // sum(from s in store_sales select s.price - s.ret) +
  Const        r3, []
  Const        r4, "price"
  Const        r5, "ret"
  IterPrep     r6, r0
  Len          r7, r6
  Const        r9, 0
  Move         r8, r9
L1:
  LessInt      r10, r8, r7
  JumpIfFalse  r10, L0
  Index        r12, r6, r8
  Index        r13, r12, r4
  Index        r14, r12, r5
  Sub          r15, r13, r14
  Append       r3, r3, r15
  Const        r17, 1
  AddInt       r8, r8, r17
  Jump         L1
L0:
  Sum          r18, r3
  // sum(from c in catalog_sales select c.price - c.ret) +
  Const        r19, []
  IterPrep     r20, r1
  Len          r21, r20
  Move         r22, r9
L3:
  LessInt      r23, r22, r21
  JumpIfFalse  r23, L2
  Index        r25, r20, r22
  Index        r26, r25, r4
  Index        r27, r25, r5
  Sub          r28, r26, r27
  Append       r19, r19, r28
  AddInt       r22, r22, r17
  Jump         L3
L2:
  Sum          r30, r19
  // sum(from s in store_sales select s.price - s.ret) +
  Add          r31, r18, r30
  // sum(from w in web_sales select w.price - w.ret)
  Const        r32, []
  IterPrep     r33, r2
  Len          r34, r33
  Move         r35, r9
L5:
  LessInt      r36, r35, r34
  JumpIfFalse  r36, L4
  Index        r38, r33, r35
  Index        r39, r38, r4
  Index        r40, r38, r5
  Sub          r41, r39, r40
  Append       r32, r32, r41
  AddInt       r35, r35, r17
  Jump         L5
L4:
  Sum          r43, r32
  // sum(from c in catalog_sales select c.price - c.ret) +
  Add          r44, r31, r43
  // json(total_profit)
  JSON         r44
  // expect total_profit == 80.0
  Const        r45, 80
  EqualFloat   r46, r44, r45
  Expect       r46
  Return       r0
