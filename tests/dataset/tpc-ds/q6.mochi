// Minimal schema for TPC-DS Q6
let customer_address = []
let customer = []
let store_sales = []
let date_dim = []
let item = []

// Month sequence for May 1999
let target_month_seq = max(
  from d in date_dim
  where d.d_year == 1999 && d.d_moy == 5
  select d.d_month_seq
)

// Query counting customers by state for items priced above average
let result =
  from a in customer_address
  join c in customer on a.ca_address_sk == c.c_current_addr_sk
  join s in store_sales on c.c_customer_sk == s.ss_customer_sk
  join d in date_dim on s.ss_sold_date_sk == d.d_date_sk
  join i in item on s.ss_item_sk == i.i_item_sk
  where d.d_month_seq == target_month_seq &&
        i.i_current_price > 1.2 * avg(
          from j in item
          where j.i_category == i.i_category
          select j.i_current_price
        )
  group by a.ca_state into g
  having count(g) >= 10
  sort by [count(g), g.key]
  take 100
  select { state: g.key, cnt: count(g) }

json(result)

test "TPCDS Q6 empty" {
  expect len(result) == 0
}
