// Catalog sales averages by item and location

type CatalogSale { cs_quantity: int, cs_list_price: float, cs_coupon_amt: float, cs_sales_price: float, cs_net_profit: float,
  cs_bill_cdemo_sk: int, cs_bill_customer_sk: int, cs_sold_date_sk: int, cs_item_sk: int }
type CustomerDemographics { cd_demo_sk: int, cd_gender: string, cd_education_status: string, cd_dep_count: int }
type Customer { c_customer_sk: int, c_current_cdemo_sk: int, c_current_addr_sk: int, c_birth_year: int, c_birth_month: int }
type CustomerAddress { ca_address_sk: int, ca_country: string, ca_state: string, ca_county: string }
type DateDim { d_date_sk: int, d_year: int }
type Item { i_item_sk: int, i_item_id: string }

let catalog_sales = [ { cs_quantity: 1, cs_list_price: 10.0, cs_coupon_amt: 1.0, cs_sales_price: 9.0, cs_net_profit: 2.0,
                       cs_bill_cdemo_sk: 1, cs_bill_customer_sk: 1, cs_sold_date_sk: 1, cs_item_sk: 1 } ]
let customer_demographics = [ { cd_demo_sk: 1, cd_gender: "M", cd_education_status: "College", cd_dep_count: 2 },
                              { cd_demo_sk: 2, cd_gender: "F", cd_education_status: "College", cd_dep_count: 2 } ]
let customer = [ { c_customer_sk: 1, c_current_cdemo_sk: 2, c_current_addr_sk: 1, c_birth_year: 1980, c_birth_month: 1 } ]
let customer_address = [ { ca_address_sk: 1, ca_country: "US", ca_state: "CA", ca_county: "County1" } ]
let date_dim = [ { d_date_sk: 1, d_year: 1999 } ]
let item = [ { i_item_sk: 1, i_item_id: "I1" } ]

let joined =
  from cs in catalog_sales
  join cd1 in customer_demographics on cs.cs_bill_cdemo_sk == cd1.cd_demo_sk && cd1.cd_gender == "M" && cd1.cd_education_status == "College"
  join c in customer on cs.cs_bill_customer_sk == c.c_customer_sk
  join cd2 in customer_demographics on c.c_current_cdemo_sk == cd2.cd_demo_sk
  join ca in customer_address on c.c_current_addr_sk == ca.ca_address_sk
  join d in date_dim on cs.cs_sold_date_sk == d.d_date_sk && d.d_year == 1999
  join i in item on cs.cs_item_sk == i.i_item_sk
  select { i_item_id: i.i_item_id, ca_country: ca.ca_country, ca_state: ca.ca_state, ca_county: ca.ca_county,
           q: cs.cs_quantity, lp: cs.cs_list_price, cp: cs.cs_coupon_amt, sp: cs.cs_sales_price, np: cs.cs_net_profit, by: c.c_birth_year, dep: cd1.cd_dep_count }

let result =
  from j in joined
  group by { i_item_id: j.i_item_id, ca_country: j.ca_country, ca_state: j.ca_state, ca_county: j.ca_county } into g
  select {
    i_item_id: g.key.i_item_id,
    ca_country: g.key.ca_country,
    ca_state: g.key.ca_state,
    ca_county: g.key.ca_county,
    agg1: avg(from x in g select x.q),
    agg2: avg(from x in g select x.lp),
    agg3: avg(from x in g select x.cp),
    agg4: avg(from x in g select x.sp),
    agg5: avg(from x in g select x.np),
    agg6: avg(from x in g select x.by),
    agg7: avg(from x in g select x.dep)
  }

json(result)

test "TPCDS Q18 averages" {
  expect result == [ { i_item_id: "I1", ca_country: "US", ca_state: "CA", ca_county: "County1",
                       agg1: 1.0, agg2: 10.0, agg3: 1.0, agg4: 9.0, agg5: 2.0, agg6: 1980.0, agg7: 2.0 } ]
}
