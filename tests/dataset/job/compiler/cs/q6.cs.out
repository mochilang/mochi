// Generated by Mochi C# compiler
using System;
using System.Collections.Generic;
using System.IO;
using System.Net.Http;
using System.Text;
using System.Web;
using System.Linq;

public class Program
{
    static void test_Q6_finds_marvel_movie_with_Robert_Downey()
    {
        expect((result == new Dictionary<string, string>[] { new Dictionary<string, string> { { "movie_keyword", "marvel-cinematic-universe" }, { "actor_name", "Downey Robert Jr." }, { "marvel_movie", "Iron Man 3" } } }));
    }

    public static void Main()
    {
        Dictionary<string, long>[] cast_info = new Dictionary<string, long>[] { new Dictionary<string, long> { { "movie_id", 1L }, { "person_id", 101L } }, new Dictionary<string, long> { { "movie_id", 2L }, { "person_id", 102L } } };
        var keyword = new Dictionary<string, dynamic>[] { new Dictionary<string, dynamic> { { "id", 100L }, { "keyword", "marvel-cinematic-universe" } }, new Dictionary<string, dynamic> { { "id", 200L }, { "keyword", "other" } } };
        Dictionary<string, long>[] movie_keyword = new Dictionary<string, long>[] { new Dictionary<string, long> { { "movie_id", 1L }, { "keyword_id", 100L } }, new Dictionary<string, long> { { "movie_id", 2L }, { "keyword_id", 200L } } };
        var name = new Dictionary<string, dynamic>[] { new Dictionary<string, dynamic> { { "id", 101L }, { "name", "Downey Robert Jr." } }, new Dictionary<string, dynamic> { { "id", 102L }, { "name", "Chris Evans" } } };
        var title = new Dictionary<string, dynamic>[] { new Dictionary<string, dynamic> { { "id", 1L }, { "title", "Iron Man 3" }, { "production_year", 2013L } }, new Dictionary<string, dynamic> { { "id", 2L }, { "title", "Old Movie" }, { "production_year", 2000L } } };
        var result = new Func<List<Dictionary<string, dynamic>>>(() =>
        {
            var _res = new List<Dictionary<string, dynamic>>();
            foreach (var ci in cast_info)
            {
                foreach (var mk in movie_keyword)
                {
                    if (!((ci.movie_id == mk.movie_id))) continue;
                    foreach (var k in keyword)
                    {
                        if (!((mk.keyword_id == k.id))) continue;
                        if (!((k.keyword == "marvel-cinematic-universe"))) continue;
                        foreach (var n in name)
                        {
                            if (!((ci.person_id == n.id))) continue;
                            if (!(Convert.ToString(n.name).Contains("Downey"))) continue;
                            if (!(Convert.ToString(n.name).Contains("Robert"))) continue;
                            foreach (var t in title)
                            {
                                if (!((ci.movie_id == t.id))) continue;
                                if (!((t.production_year > 2010L))) continue;
                                _res.Add(new Dictionary<string, dynamic> { { "movie_keyword", k.keyword }, { "actor_name", n.name }, { "marvel_movie", t.title } });
                            }
                        }
                    }
                }
            }
            return _res;
        })();
        Console.WriteLine(JsonSerializer.Serialize(result));
        test_Q6_finds_marvel_movie_with_Robert_Downey();
    }
    static void expect(bool cond)
    {
        if (!cond) throw new Exception("expect failed");
    }

}
