// Generated by Mochi C# compiler
using System;
using System.Collections.Generic;
using System.IO;
using System.Net.Http;
using System.Text;
using System.Web;
using System.Linq;

public class Program
{
    static void test_Q2_finds_earliest_title_for_German_companies_with_character_keyword()
    {
        expect((result == "Der Film"));
    }

    public static void Main()
    {
        var company_name = new Dictionary<string, dynamic>[] { new Dictionary<string, dynamic> { { "id", 1L }, { "country_code", "[de]" } }, new Dictionary<string, dynamic> { { "id", 2L }, { "country_code", "[us]" } } };
        var keyword = new Dictionary<string, dynamic>[] { new Dictionary<string, dynamic> { { "id", 1L }, { "keyword", "character-name-in-title" } }, new Dictionary<string, dynamic> { { "id", 2L }, { "keyword", "other" } } };
        Dictionary<string, long>[] movie_companies = new Dictionary<string, long>[] { new Dictionary<string, long> { { "movie_id", 100L }, { "company_id", 1L } }, new Dictionary<string, long> { { "movie_id", 200L }, { "company_id", 2L } } };
        Dictionary<string, long>[] movie_keyword = new Dictionary<string, long>[] { new Dictionary<string, long> { { "movie_id", 100L }, { "keyword_id", 1L } }, new Dictionary<string, long> { { "movie_id", 200L }, { "keyword_id", 2L } } };
        var title = new Dictionary<string, dynamic>[] { new Dictionary<string, dynamic> { { "id", 100L }, { "title", "Der Film" } }, new Dictionary<string, dynamic> { { "id", 200L }, { "title", "Other Movie" } } };
        var titles = new Func<List<dynamic>>(() =>
        {
            var _res = new List<dynamic>();
            foreach (var cn in company_name)
            {
                if (!((cn.country_code == "[de]"))) continue;
                foreach (var mc in movie_companies)
                {
                    if (!((mc.company_id == cn.id))) continue;
                    foreach (var t in title)
                    {
                        if (!((mc.movie_id == t.id))) continue;
                        foreach (var mk in movie_keyword)
                        {
                            if (!((mk.movie_id == t.id))) continue;
                            foreach (var k in keyword)
                            {
                                if (!((mk.keyword_id == k.id))) continue;
                                if (!((k.keyword == "character-name-in-title"))) continue;
                                if ((mc.movie_id == mk.movie_id))
                                {
                                    _res.Add(t.title);
                                }
                            }
                        }
                    }
                }
            }
            return _res;
        })();
        var result = min(titles);
        Console.WriteLine(JsonSerializer.Serialize(result));
        test_Q2_finds_earliest_title_for_German_companies_with_character_keyword();
    }
    static void expect(bool cond)
    {
        if (!cond) throw new Exception("expect failed");
    }

}
