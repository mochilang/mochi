// Generated by Mochi compiler v0.10.25 on 2025-07-13T13:02:31Z
fun min(list: List<Any?>): Any? {
    if (list.isEmpty()) return 0
    var m = list[0]
    for (n in list) {
        if ((n as Comparable<Any?>) < (m as Comparable<Any?>)) m = n
    }
    return m
}

fun String.starts_with(prefix: String): Boolean = this.startsWith(prefix)

fun json(v: Any?) {
    println(toJson(v))
}

fun toJson(v: Any?): String = when (v) {
    null -> "null"
    is String -> "\"" + v.replace("\"", "\\\"") + "\""
    is Boolean, is Number -> v.toString()
    is Map<*, *> -> v.entries.joinToString(prefix = "{", postfix = "}") { toJson(it.key.toString()) + ":" + toJson(it.value) }
    is Iterable<*> -> v.joinToString(prefix = "[", postfix = "]") { toJson(it) }
    else -> toJson(v.toString())
}
// Code generated from q2.mochi

data class Company_name(var id: Int, var country_code: String)

data class Keyword(var id: Int, var keyword: String)

data class Movie_companie(var movie_id: Int, var company_id: Int)

data class Movie_keyword(var movie_id: Int, var keyword_id: Int)

data class Title(var id: Int, var title: String)

val company_name = mutableListOf(Company_name(id = 1, country_code = "[de]"), Company_name(id = 2, country_code = "[us]"))

val keyword = mutableListOf(Keyword(id = 1, keyword = "character-name-in-title"), Keyword(id = 2, keyword = "other"))

val movie_companies = mutableListOf(Movie_companie(movie_id = 100, company_id = 1), Movie_companie(movie_id = 200, company_id = 2))

val movie_keyword = mutableListOf(Movie_keyword(movie_id = 100, keyword_id = 1), Movie_keyword(movie_id = 200, keyword_id = 2))

val title = mutableListOf(Title(id = 100, title = "Der Film"), Title(id = 200, title = "Other Movie"))

val titles = run {
    val __res = mutableListOf<String>()
    for (cn in company_name) {
        for (mc in movie_companies) {
            if (mc.company_id == cn.id) {
                for (t in title) {
                    if (mc.movie_id == t.id) {
                        for (mk in movie_keyword) {
                            if (mk.movie_id == t.id) {
                                for (k in keyword) {
                                    if (mk.keyword_id == k.id) {
                                        if (cn.country_code == "[de]" && k.keyword == "character-name-in-title" && mc.movie_id == mk.movie_id) {
                                            __res.add(t.title)
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    __res
}

val result = min(titles)

fun main() {
    json(result)
    check(result == "Der Film")
}
