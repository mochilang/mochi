:- style_check(-singleton).
to_list(Str, L) :-
    string(Str), !,
    string_chars(Str, L).
to_list(L, L).


contains(Container, Item, Res) :-
    is_dict(Container), !, (get_dict(Item, Container, _) -> Res = true ; Res = false).
contains(List, Item, Res) :-
    string(List), !, string_chars(List, Chars), (member(Item, Chars) -> Res = true ; Res = false).
contains(List, Item, Res) :- (member(Item, List) -> Res = true ; Res = false).


expect(Cond) :- (Cond -> true ; throw(error('expect failed'))).


:- use_module(library(http/json)).
json(V) :- json_write_dict(current_output, V), nl.


test_p_q6_finds_marvel_movie_with_robert_downey :-
    dict_create(_V0, map, [movie_keyword-"marvel-cinematic-universe", actor_name-"Downey Robert Jr.", marvel_movie-"Iron Man 3"]),
    expect(Result = [_V0])    ,
    true.

    main :-
    dict_create(_V1, map, [movie_id-1, person_id-101]),
    dict_create(_V2, map, [movie_id-2, person_id-102]),
    Cast_info = [_V1, _V2],
    dict_create(_V3, map, [id-100, keyword-"marvel-cinematic-universe"]),
    dict_create(_V4, map, [id-200, keyword-"other"]),
    Keyword = [_V3, _V4],
    dict_create(_V5, map, [movie_id-1, keyword_id-100]),
    dict_create(_V6, map, [movie_id-2, keyword_id-200]),
    Movie_keyword = [_V5, _V6],
    dict_create(_V7, map, [id-101, name-"Downey Robert Jr."]),
    dict_create(_V8, map, [id-102, name-"Chris Evans"]),
    Name = [_V7, _V8],
    dict_create(_V9, map, [id-1, title-"Iron Man 3", production_year-2013]),
    dict_create(_V10, map, [id-2, title-"Old Movie", production_year-2000]),
    Title = [_V9, _V10],
    to_list(Cast_info, _V21),
    to_list(Movie_keyword, _V24),
    to_list(Keyword, _V27),
    to_list(Name, _V30),
    to_list(Title, _V33),
    findall(_V34, (member(Ci, _V21), member(Mk, _V24), get_dict(movie_id, Ci, _V22), get_dict(movie_id, Mk, _V23), _V22 = _V23, member(K, _V27), get_dict(keyword_id, Mk, _V25), get_dict(id, K, _V26), _V25 = _V26, member(N, _V30), get_dict(person_id, Ci, _V28), get_dict(id, N, _V29), _V28 = _V29, member(T, _V33), get_dict(movie_id, Ci, _V31), get_dict(id, T, _V32), _V31 = _V32, get_dict(keyword, K, _V15), get_dict(name, N, _V16), contains(_V16, "Downey", _V17), get_dict(name, N, _V18), contains(_V18, "Robert", _V19), get_dict(production_year, T, _V20), (((_V15 = "marvel-cinematic-universe", _V17), _V19), _V20 > 2010), get_dict(keyword, K, _V11), get_dict(name, N, _V12), get_dict(title, T, _V13), dict_create(_V14, map, [movie_keyword-_V11, actor_name-_V12, marvel_movie-_V13]), _V34 = _V14), _V35),
    Result = _V35,
    json(Result),
    test_p_q6_finds_marvel_movie_with_robert_downey
    .
:- initialization(main, main).
