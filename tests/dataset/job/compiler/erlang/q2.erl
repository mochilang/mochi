#!/usr/bin/env escript
% Generated by Mochi compiler v0.10.25 on 2025-07-13T11:51:57Z
% q2.erl - generated from q2.mochi

main(_) ->
    Company_name = [#{id => 1, country_code => "[de]"}, #{id => 2, country_code => "[us]"}],
    Keyword = [#{id => 1, keyword => "character-name-in-title"}, #{id => 2, keyword => "other"}],
    Movie_companies = [#{movie_id => 100, company_id => 1}, #{movie_id => 200, company_id => 2}],
    Movie_keyword = [#{movie_id => 100, keyword_id => 1}, #{movie_id => 200, keyword_id => 2}],
    Title = [#{id => 100, title => "Der Film"}, #{id => 200, title => "Other Movie"}],
    Titles = [maps:get(title, T) || Cn <- Company_name, Mc <- Movie_companies, T <- Title, Mk <- Movie_keyword, K <- Keyword, (maps:get(company_id, Mc) == maps:get(id, Cn)), (maps:get(movie_id, Mc) == maps:get(id, T)), (maps:get(movie_id, Mk) == maps:get(id, T)), (maps:get(keyword_id, Mk) == maps:get(id, K)), (((((maps:get(country_code, Cn) == "[de]") andalso maps:get(keyword, K)) == "character-name-in-title") andalso maps:get(movie_id, Mc)) == maps:get(movie_id, Mk))],
    Result = lists:min(Titles),
    mochi_json(Result),
    (case (Result == "Der Film") of true -> ok; _ -> erlang:error(test_failed) end).

mochi_escape_json([]) -> [];
mochi_escape_json([H|T]) ->
    E = case H of
        $\ -> "\\";
        $" -> "\"";
        _ -> [H]
    end,
    E ++ mochi_escape_json(T).

mochi_to_json(true) -> "true";
mochi_to_json(false) -> "false";
mochi_to_json(V) when is_integer(V); is_float(V) -> lists:flatten(io_lib:format("~p", [V]));
mochi_to_json(V) when is_binary(V) -> "\"" ++ mochi_escape_json(binary_to_list(V)) ++ "\"";
mochi_to_json(V) when is_list(V), (V =:= [] orelse is_integer(hd(V))) -> "\"" ++ mochi_escape_json(V) ++ "\"";
mochi_to_json(V) when is_list(V) -> "[" ++ lists:join(",", [mochi_to_json(X) || X <- V]) ++ "]";
mochi_to_json(V) when is_map(V) -> "{" ++ lists:join(",", ["\"" ++ atom_to_list(K) ++ "\":" ++ mochi_to_json(Val) || {K,Val} <- maps:to_list(V)]) ++ "}".

mochi_json(V) -> io:format("~s
", [mochi_to_json(V)]).
