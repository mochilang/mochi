# Generated by Mochi compiler v0.10.25 on 2025-07-13T13:07:06Z
require 'ostruct'

def _json(v)
  require 'json'
  obj = v
  if v.is_a?(Array)
    obj = v.map { |it| it.respond_to?(:to_h) ? it.to_h : it }
  elsif v.respond_to?(:to_h)
    obj = v.to_h
  end
  puts(JSON.generate(obj))
end
def _min(v)
  list = nil
  if v.respond_to?(:Items)
    list = v.Items
  elsif v.is_a?(Array)
    list = v
  elsif v.respond_to?(:to_a)
    list = v.to_a
  end
  return 0 if !list || list.empty?
  list.min
end

$company_name = [OpenStruct.new(id: 1, name: "Euro Films", country_code: "[de]"), OpenStruct.new(id: 2, name: "US Films", country_code: "[us]")]
$company_type = [OpenStruct.new(id: 1, kind: "production")]
$info_type = [OpenStruct.new(id: 10, info: "countries"), OpenStruct.new(id: 20, info: "rating")]
$keyword = [OpenStruct.new(id: 1, keyword: "murder"), OpenStruct.new(id: 2, keyword: "comedy")]
$kind_type = [OpenStruct.new(id: 100, kind: "movie"), OpenStruct.new(id: 200, kind: "episode")]
$movie_companies = [OpenStruct.new(movie_id: 10, company_id: 1, company_type_id: 1, note: "release (2009) (worldwide)"), OpenStruct.new(movie_id: 20, company_id: 2, company_type_id: 1, note: "release (2007) (USA)")]
$movie_info = [OpenStruct.new(movie_id: 10, info_type_id: 10, info: "Germany"), OpenStruct.new(movie_id: 20, info_type_id: 10, info: "USA")]
$movie_info_idx = [OpenStruct.new(movie_id: 10, info_type_id: 20, info: 6.5), OpenStruct.new(movie_id: 20, info_type_id: 20, info: 7.8)]
$movie_keyword = [OpenStruct.new(movie_id: 10, keyword_id: 1), OpenStruct.new(movie_id: 20, keyword_id: 2)]
$title = [OpenStruct.new(id: 10, kind_id: 100, production_year: 2009, title: "Violent Western"), OpenStruct.new(id: 20, kind_id: 100, production_year: 2007, title: "Old Western")]
$rows = (begin
	_res = []
	for cn in $company_name
		for mc in $movie_companies
			if (cn.id == mc.company_id)
				for ct in $company_type
					if (ct.id == mc.company_type_id)
						for t in $title
							if (t.id == mc.movie_id)
								for mk in $movie_keyword
									if (mk.movie_id == t.id)
										for k in $keyword
											if (k.id == mk.keyword_id)
												for mi in $movie_info
													if (mi.movie_id == t.id)
														for it1 in $info_type
															if (it1.id == mi.info_type_id)
																for mi_idx in $movie_info_idx
																	if (mi_idx.movie_id == t.id)
																		for it2 in $info_type
																			if (it2.id == mi_idx.info_type_id)
																				for kt in $kind_type
																					if (kt.id == t.kind_id)
																						if (((((((((((((((((((((((((((cn.country_code != "[us]") && (it1.info == "countries")) && (it2.info == "rating")) && (((((k.keyword == "murder") || (k.keyword == "murder-in-title")) || (k.keyword == "blood")) || (k.keyword == "violence")))) && (((kt.kind == "movie") || (kt.kind == "episode")))) && ((mc.note.include?("(USA)")) == false)) && (mc.note.include?("(200"))) && (((((mi.info == "Germany") || (mi.info == "German")) || (mi.info == "USA")) || (mi.info == "American")))) && (mi_idx.info < 7.0)) && (t.production_year > 2008)) && (kt.id == t.kind_id)) && (t.id == mi.movie_id)) && (t.id == mk.movie_id)) && (t.id == mi_idx.movie_id)) && (t.id == mc.movie_id)) && (mk.movie_id == mi.movie_id)) && (mk.movie_id == mi_idx.movie_id)) && (mk.movie_id == mc.movie_id)) && (mi.movie_id == mi_idx.movie_id)) && (mi.movie_id == mc.movie_id)) && (mc.movie_id == mi_idx.movie_id)) && (k.id == mk.keyword_id)) && (it1.id == mi.info_type_id)) && (it2.id == mi_idx.info_type_id)) && (ct.id == mc.company_type_id)) && (cn.id == mc.company_id)))
																							_res << OpenStruct.new(company: cn.name, rating: mi_idx.info, title: t.title)
																						end
																					end
																				end
																			end
																		end
																	end
																end
															end
														end
													end
												end
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
	_res
end)
$result = [OpenStruct.new(movie_company: _min((($rows)).map { |r| r.company }), rating: _min((($rows)).map { |r| r.rating }), western_violent_movie: _min((($rows)).map { |r| r.title }))]
_json($result)
raise "expect failed" unless ($result == [OpenStruct.new(movie_company: "Euro Films", rating: 6.5, western_violent_movie: "Violent Western")])
