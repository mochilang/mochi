# Generated by Mochi compiler v0.10.25 on 2025-07-13T13:07:07Z
require 'ostruct'

def _json(v)
  require 'json'
  obj = v
  if v.is_a?(Array)
    obj = v.map { |it| it.respond_to?(:to_h) ? it.to_h : it }
  elsif v.respond_to?(:to_h)
    obj = v.to_h
  end
  puts(JSON.generate(obj))
end
def _min(v)
  list = nil
  if v.respond_to?(:Items)
    list = v.Items
  elsif v.is_a?(Array)
    list = v
  elsif v.respond_to?(:to_a)
    list = v.to_a
  end
  return 0 if !list || list.empty?
  list.min
end

$complete_cast = [OpenStruct.new(movie_id: 1, subject_id: 1, status_id: 2), OpenStruct.new(movie_id: 2, subject_id: 1, status_id: 2)]
$comp_cast_type = [OpenStruct.new(id: 1, kind: "cast"), OpenStruct.new(id: 2, kind: "complete")]
$char_name = [OpenStruct.new(id: 1, name: "Spider-Man"), OpenStruct.new(id: 2, name: "Villain")]
$cast_info = [OpenStruct.new(movie_id: 1, person_role_id: 1, person_id: 1), OpenStruct.new(movie_id: 2, person_role_id: 2, person_id: 2)]
$info_type = [OpenStruct.new(id: 1, info: "rating")]
$keyword = [OpenStruct.new(id: 1, keyword: "superhero"), OpenStruct.new(id: 2, keyword: "comedy")]
$kind_type = [OpenStruct.new(id: 1, kind: "movie")]
$movie_info_idx = [OpenStruct.new(movie_id: 1, info_type_id: 1, info: 8.5), OpenStruct.new(movie_id: 2, info_type_id: 1, info: 6.5)]
$movie_keyword = [OpenStruct.new(movie_id: 1, keyword_id: 1), OpenStruct.new(movie_id: 2, keyword_id: 2)]
$name = [OpenStruct.new(id: 1, name: "Actor One"), OpenStruct.new(id: 2, name: "Actor Two")]
$title = [OpenStruct.new(id: 1, kind_id: 1, production_year: 2005, title: "Hero Movie"), OpenStruct.new(id: 2, kind_id: 1, production_year: 1999, title: "Old Film")]
$allowed_keywords = ["superhero", "marvel-comics", "based-on-comic", "tv-special", "fight", "violence", "magnet", "web", "claw", "laser"]
$rows = (begin
	_res = []
	for cc in $complete_cast
		for cct1 in $comp_cast_type
			if (cct1.id == cc.subject_id)
				for cct2 in $comp_cast_type
					if (cct2.id == cc.status_id)
						for ci in $cast_info
							if (ci.movie_id == cc.movie_id)
								for chn in $char_name
									if (chn.id == ci.person_role_id)
										for n in $name
											if (n.id == ci.person_id)
												for t in $title
													if (t.id == ci.movie_id)
														for kt in $kind_type
															if (kt.id == t.kind_id)
																for mk in $movie_keyword
																	if (mk.movie_id == t.id)
																		for k in $keyword
																			if (k.id == mk.keyword_id)
																				for mi_idx in $movie_info_idx
																					if (mi_idx.movie_id == t.id)
																						for it2 in $info_type
																							if (it2.id == mi_idx.info_type_id)
																								if (((((((((cct1.kind == "cast") && (cct2.kind.include?("complete"))) && (chn.name != nil)) && (((chn.name.include?("man")) || (chn.name.include?("Man"))))) && (it2.info == "rating")) && (($allowed_keywords.include?(k.keyword)))) && (kt.kind == "movie")) && (mi_idx.info > 7.0)) && (t.production_year > 2000))
																									_res << OpenStruct.new(character: chn.name, rating: mi_idx.info, actor: n.name, movie: t.title)
																								end
																							end
																						end
																					end
																				end
																			end
																		end
																	end
																end
															end
														end
													end
												end
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
	_res
end)
$result = [OpenStruct.new(character_name: _min((($rows)).map { |r| r.character }), rating: _min((($rows)).map { |r| r.rating }), playing_actor: _min((($rows)).map { |r| r.actor }), complete_hero_movie: _min((($rows)).map { |r| r.movie }))]
_json($result)
raise "expect failed" unless ($result == [OpenStruct.new(character_name: "Spider-Man", rating: 8.5, playing_actor: "Actor One", complete_hero_movie: "Hero Movie")])
