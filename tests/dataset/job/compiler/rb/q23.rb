# Generated by Mochi compiler v0.10.25 on 2025-07-13T13:07:07Z
require 'ostruct'

def _json(v)
  require 'json'
  obj = v
  if v.is_a?(Array)
    obj = v.map { |it| it.respond_to?(:to_h) ? it.to_h : it }
  elsif v.respond_to?(:to_h)
    obj = v.to_h
  end
  puts(JSON.generate(obj))
end
def _min(v)
  list = nil
  if v.respond_to?(:Items)
    list = v.Items
  elsif v.is_a?(Array)
    list = v
  elsif v.respond_to?(:to_a)
    list = v.to_a
  end
  return 0 if !list || list.empty?
  list.min
end

$complete_cast = [OpenStruct.new(movie_id: 1, status_id: 1), OpenStruct.new(movie_id: 2, status_id: 2)]
$comp_cast_type = [OpenStruct.new(id: 1, kind: "complete+verified"), OpenStruct.new(id: 2, kind: "partial")]
$company_name = [OpenStruct.new(id: 1, country_code: "[us]"), OpenStruct.new(id: 2, country_code: "[gb]")]
$company_type = [OpenStruct.new(id: 1), OpenStruct.new(id: 2)]
$info_type = [OpenStruct.new(id: 1, info: "release dates"), OpenStruct.new(id: 2, info: "other")]
$keyword = [OpenStruct.new(id: 1, keyword: "internet"), OpenStruct.new(id: 2, keyword: "other")]
$kind_type = [OpenStruct.new(id: 1, kind: "movie"), OpenStruct.new(id: 2, kind: "series")]
$movie_companies = [OpenStruct.new(movie_id: 1, company_id: 1, company_type_id: 1), OpenStruct.new(movie_id: 2, company_id: 2, company_type_id: 2)]
$movie_info = [OpenStruct.new(movie_id: 1, info_type_id: 1, note: "internet release", info: "USA: May 2005"), OpenStruct.new(movie_id: 2, info_type_id: 1, note: "theater", info: "USA: April 1998")]
$movie_keyword = [OpenStruct.new(movie_id: 1, keyword_id: 1), OpenStruct.new(movie_id: 2, keyword_id: 2)]
$title = [OpenStruct.new(id: 1, kind_id: 1, production_year: 2005, title: "Web Movie"), OpenStruct.new(id: 2, kind_id: 1, production_year: 1998, title: "Old Movie")]
$matches = (begin
	_res = []
	for cc in $complete_cast
		for cct1 in $comp_cast_type
			if (cct1.id == cc.status_id)
				for t in $title
					if (t.id == cc.movie_id)
						for kt in $kind_type
							if (kt.id == t.kind_id)
								for mi in $movie_info
									if (mi.movie_id == t.id)
										for it1 in $info_type
											if (it1.id == mi.info_type_id)
												for mk in $movie_keyword
													if (mk.movie_id == t.id)
														for k in $keyword
															if (k.id == mk.keyword_id)
																for mc in $movie_companies
																	if (mc.movie_id == t.id)
																		for cn in $company_name
																			if (cn.id == mc.company_id)
																				for ct in $company_type
																					if (ct.id == mc.company_type_id)
																						if (((((((cct1.kind == "complete+verified") && (cn.country_code == "[us]")) && (it1.info == "release dates")) && (kt.kind == "movie")) && (mi.note.include?("internet"))) && (((mi.info.include?("USA:")) && (((mi.info.include?("199")) || (mi.info.include?("200"))))))) && (t.production_year > 2000))
																							_res << OpenStruct.new(movie_kind: kt.kind, complete_us_internet_movie: t.title)
																						end
																					end
																				end
																			end
																		end
																	end
																end
															end
														end
													end
												end
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
	_res
end)
$result = [OpenStruct.new(movie_kind: _min((($matches)).map { |r| r.movie_kind }), complete_us_internet_movie: _min((($matches)).map { |r| r.complete_us_internet_movie }))]
_json($result)
raise "expect failed" unless ($result == [OpenStruct.new(movie_kind: "movie", complete_us_internet_movie: "Web Movie")])
