# Generated by Mochi compiler v0.10.25 on 2025-07-13T12:52:36Z
require 'ostruct'

def _json(v)
  require 'json'
  obj = v
  if v.is_a?(Array)
    obj = v.map { |it| it.respond_to?(:to_h) ? it.to_h : it }
  elsif v.respond_to?(:to_h)
    obj = v.to_h
  end
  puts(JSON.generate(obj))
end
def _min(v)
  list = nil
  if v.respond_to?(:Items)
    list = v.Items
  elsif v.is_a?(Array)
    list = v
  elsif v.respond_to?(:to_a)
    list = v.to_a
  end
  return 0 if !list || list.empty?
  list.min
end

$info_type = [OpenStruct.new(id: 1, info: "countries"), OpenStruct.new(id: 2, info: "rating")]
$keyword = [OpenStruct.new(id: 1, keyword: "murder"), OpenStruct.new(id: 2, keyword: "blood"), OpenStruct.new(id: 3, keyword: "romance")]
$kind_type = [OpenStruct.new(id: 1, kind: "movie")]
$title = [OpenStruct.new(id: 1, kind_id: 1, production_year: 2012, title: "A Dark Movie"), OpenStruct.new(id: 2, kind_id: 1, production_year: 2013, title: "Brutal Blood"), OpenStruct.new(id: 3, kind_id: 1, production_year: 2008, title: "Old Film")]
$movie_info = [OpenStruct.new(movie_id: 1, info_type_id: 1, info: "Sweden"), OpenStruct.new(movie_id: 2, info_type_id: 1, info: "USA"), OpenStruct.new(movie_id: 3, info_type_id: 1, info: "USA")]
$movie_info_idx = [OpenStruct.new(movie_id: 1, info_type_id: 2, info: 7.0), OpenStruct.new(movie_id: 2, info_type_id: 2, info: 7.5), OpenStruct.new(movie_id: 3, info_type_id: 2, info: 9.1)]
$movie_keyword = [OpenStruct.new(movie_id: 1, keyword_id: 1), OpenStruct.new(movie_id: 2, keyword_id: 2), OpenStruct.new(movie_id: 3, keyword_id: 3)]
$allowed_keywords = ["murder", "murder-in-title", "blood", "violence"]
$allowed_countries = ["Sweden", "Norway", "Germany", "Denmark", "Swedish", "Denish", "Norwegian", "German", "USA", "American"]
$matches = (begin
	_res = []
	for it1 in $info_type
		for it2 in $info_type
			for k in $keyword
				for kt in $kind_type
					for mi in $movie_info
						for mi_idx in $movie_info_idx
							for mk in $movie_keyword
								for t in $title
									if ((((((((((((((((((it1.info == "countries") && (it2.info == "rating")) && (($allowed_keywords.include?(k.keyword)))) && (kt.kind == "movie")) && (($allowed_countries.include?(mi.info)))) && (mi_idx.info < 8.5)) && (t.production_year > 2010)) && (kt.id == t.kind_id)) && (t.id == mi.movie_id)) && (t.id == mk.movie_id)) && (t.id == mi_idx.movie_id)) && (mk.movie_id == mi.movie_id)) && (mk.movie_id == mi_idx.movie_id)) && (mi.movie_id == mi_idx.movie_id)) && (k.id == mk.keyword_id)) && (it1.id == mi.info_type_id)) && (it2.id == mi_idx.info_type_id)))
										_res << OpenStruct.new(rating: mi_idx.info, title: t.title)
									end
								end
							end
						end
					end
				end
			end
		end
	end
	_res
end)
$result = OpenStruct.new(rating: _min((($matches)).map { |x| x.rating }), northern_dark_movie: _min((($matches)).map { |x| x.title }))
_json($result)
raise "expect failed" unless ($result == OpenStruct.new(rating: 7.0, northern_dark_movie: "A Dark Movie"))
