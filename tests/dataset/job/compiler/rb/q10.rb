# Generated by Mochi compiler v0.10.25 on 2025-07-13T11:54:51Z
require 'ostruct'

def _json(v)
  require 'json'
  obj = v
  if v.is_a?(Array)
    obj = v.map { |it| it.respond_to?(:to_h) ? it.to_h : it }
  elsif v.respond_to?(:to_h)
    obj = v.to_h
  end
  puts(JSON.generate(obj))
end
def _min(v)
  list = nil
  if v.respond_to?(:Items)
    list = v.Items
  elsif v.is_a?(Array)
    list = v
  elsif v.respond_to?(:to_a)
    list = v.to_a
  end
  return 0 if !list || list.empty?
  list.min
end

$char_name = [OpenStruct.new(id: 1, name: "Ivan"), OpenStruct.new(id: 2, name: "Alex")]
$cast_info = [OpenStruct.new(movie_id: 10, person_role_id: 1, role_id: 1, note: "Soldier (voice) (uncredited)"), OpenStruct.new(movie_id: 11, person_role_id: 2, role_id: 1, note: "(voice)")]
$company_name = [OpenStruct.new(id: 1, country_code: "[ru]"), OpenStruct.new(id: 2, country_code: "[us]")]
$company_type = [OpenStruct.new(id: 1), OpenStruct.new(id: 2)]
$movie_companies = [OpenStruct.new(movie_id: 10, company_id: 1, company_type_id: 1), OpenStruct.new(movie_id: 11, company_id: 2, company_type_id: 1)]
$role_type = [OpenStruct.new(id: 1, role: "actor"), OpenStruct.new(id: 2, role: "director")]
$title = [OpenStruct.new(id: 10, title: "Vodka Dreams", production_year: 2006), OpenStruct.new(id: 11, title: "Other Film", production_year: 2004)]
$matches = (begin
	_res = []
	for chn in $char_name
		for ci in $cast_info
			if (chn.id == ci.person_role_id)
				for rt in $role_type
					if (rt.id == ci.role_id)
						for t in $title
							if (t.id == ci.movie_id)
								for mc in $movie_companies
									if (mc.movie_id == t.id)
										for cn in $company_name
											if (cn.id == mc.company_id)
												for ct in $company_type
													if (ct.id == mc.company_type_id)
														if (((((ci.note.include?("(voice)")) && (ci.note.include?("(uncredited)"))) && (cn.country_code == "[ru]")) && (rt.role == "actor")) && (t.production_year > 2005))
															_res << OpenStruct.new(character: chn.name, movie: t.title)
														end
													end
												end
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
	_res
end)
$result = [OpenStruct.new(uncredited_voiced_character: _min((($matches)).map { |x| x.character }), russian_movie: _min((($matches)).map { |x| x.movie }))]
_json($result)
raise "expect failed" unless ($result == [OpenStruct.new(uncredited_voiced_character: "Ivan", russian_movie: "Vodka Dreams")])
