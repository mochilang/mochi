# Generated by Mochi compiler v0.10.25 on 2025-07-13T13:07:08Z
require 'ostruct'

def _json(v)
  require 'json'
  obj = v
  if v.is_a?(Array)
    obj = v.map { |it| it.respond_to?(:to_h) ? it.to_h : it }
  elsif v.respond_to?(:to_h)
    obj = v.to_h
  end
  puts(JSON.generate(obj))
end
def _min(v)
  list = nil
  if v.respond_to?(:Items)
    list = v.Items
  elsif v.is_a?(Array)
    list = v
  elsif v.respond_to?(:to_a)
    list = v.to_a
  end
  return 0 if !list || list.empty?
  list.min
end

$comp_cast_type = [OpenStruct.new(id: 1, kind: "crew"), OpenStruct.new(id: 2, kind: "complete+verified"), OpenStruct.new(id: 3, kind: "partial")]
$complete_cast = [OpenStruct.new(movie_id: 1, subject_id: 1, status_id: 3), OpenStruct.new(movie_id: 2, subject_id: 1, status_id: 2)]
$company_name = [OpenStruct.new(id: 1, name: "Euro Films Ltd.", country_code: "[gb]"), OpenStruct.new(id: 2, name: "US Studios", country_code: "[us]")]
$company_type = [OpenStruct.new(id: 1), OpenStruct.new(id: 2)]
$movie_companies = [OpenStruct.new(movie_id: 1, company_id: 1, company_type_id: 1, note: "production (2005) (UK)"), OpenStruct.new(movie_id: 2, company_id: 2, company_type_id: 1, note: "production (USA)")]
$info_type = [OpenStruct.new(id: 1, info: "countries"), OpenStruct.new(id: 2, info: "rating")]
$keyword = [OpenStruct.new(id: 1, keyword: "blood"), OpenStruct.new(id: 2, keyword: "romance")]
$kind_type = [OpenStruct.new(id: 1, kind: "movie"), OpenStruct.new(id: 2, kind: "episode")]
$movie_info = [OpenStruct.new(movie_id: 1, info_type_id: 1, info: "Germany"), OpenStruct.new(movie_id: 2, info_type_id: 1, info: "USA")]
$movie_info_idx = [OpenStruct.new(movie_id: 1, info_type_id: 2, info: 7.2), OpenStruct.new(movie_id: 2, info_type_id: 2, info: 9.0)]
$movie_keyword = [OpenStruct.new(movie_id: 1, keyword_id: 1), OpenStruct.new(movie_id: 2, keyword_id: 2)]
$title = [OpenStruct.new(id: 1, kind_id: 1, production_year: 2005, title: "Dark Euro Film"), OpenStruct.new(id: 2, kind_id: 1, production_year: 2005, title: "US Film")]
$allowed_keywords = ["murder", "murder-in-title", "blood", "violence"]
$allowed_countries = ["Sweden", "Norway", "Germany", "Denmark", "Swedish", "Danish", "Norwegian", "German", "USA", "American"]
$matches = (begin
	_res = []
	for cc in $complete_cast
		for cct1 in $comp_cast_type
			if (cct1.id == cc.subject_id)
				for cct2 in $comp_cast_type
					if (cct2.id == cc.status_id)
						for mc in $movie_companies
							if (mc.movie_id == cc.movie_id)
								for cn in $company_name
									if (cn.id == mc.company_id)
										for ct in $company_type
											if (ct.id == mc.company_type_id)
												for mk in $movie_keyword
													if (mk.movie_id == cc.movie_id)
														for k in $keyword
															if (k.id == mk.keyword_id)
																for mi in $movie_info
																	if (mi.movie_id == cc.movie_id)
																		for it1 in $info_type
																			if (it1.id == mi.info_type_id)
																				for mi_idx in $movie_info_idx
																					if (mi_idx.movie_id == cc.movie_id)
																						for it2 in $info_type
																							if (it2.id == mi_idx.info_type_id)
																								for t in $title
																									if (t.id == cc.movie_id)
																										for kt in $kind_type
																											if (kt.id == t.kind_id)
																												if (((((((((((((cct1.kind == "crew") && (cct2.kind != "complete+verified")) && (cn.country_code != "[us]")) && (it1.info == "countries")) && (it2.info == "rating")) && (($allowed_keywords.include?(k.keyword)))) && ((["movie", "episode"].include?(kt.kind)))) && ((mc.note.include?("(USA)")) == false)) && (mc.note.include?("(200"))) && (($allowed_countries.include?(mi.info)))) && (mi_idx.info < 8.5)) && (t.production_year > 2000)))
																													_res << OpenStruct.new(company: cn.name, rating: mi_idx.info, title: t.title)
																												end
																											end
																										end
																									end
																								end
																							end
																						end
																					end
																				end
																			end
																		end
																	end
																end
															end
														end
													end
												end
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
	_res
end)
$result = OpenStruct.new(movie_company: _min((($matches)).map { |x| x.company }), rating: _min((($matches)).map { |x| x.rating }), complete_euro_dark_movie: _min((($matches)).map { |x| x.title }))
_json($result)
raise "expect failed" unless ($result == OpenStruct.new(movie_company: "Euro Films Ltd.", rating: 7.2, complete_euro_dark_movie: "Dark Euro Film"))
