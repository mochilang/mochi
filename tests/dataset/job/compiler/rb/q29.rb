# Generated by Mochi compiler v0.10.25 on 2025-07-13T13:07:08Z
require 'ostruct'

def _json(v)
  require 'json'
  obj = v
  if v.is_a?(Array)
    obj = v.map { |it| it.respond_to?(:to_h) ? it.to_h : it }
  elsif v.respond_to?(:to_h)
    obj = v.to_h
  end
  puts(JSON.generate(obj))
end
def _min(v)
  list = nil
  if v.respond_to?(:Items)
    list = v.Items
  elsif v.is_a?(Array)
    list = v
  elsif v.respond_to?(:to_a)
    list = v.to_a
  end
  return 0 if !list || list.empty?
  list.min
end

$aka_name = [OpenStruct.new(person_id: 1), OpenStruct.new(person_id: 2)]
$complete_cast = [OpenStruct.new(movie_id: 1, subject_id: 1, status_id: 2), OpenStruct.new(movie_id: 2, subject_id: 1, status_id: 2)]
$comp_cast_type = [OpenStruct.new(id: 1, kind: "cast"), OpenStruct.new(id: 2, kind: "complete+verified"), OpenStruct.new(id: 3, kind: "other")]
$char_name = [OpenStruct.new(id: 1, name: "Queen"), OpenStruct.new(id: 2, name: "Princess")]
$cast_info = [OpenStruct.new(movie_id: 1, person_id: 1, role_id: 1, person_role_id: 1, note: "(voice)"), OpenStruct.new(movie_id: 2, person_id: 2, role_id: 1, person_role_id: 2, note: "(voice)")]
$company_name = [OpenStruct.new(id: 1, country_code: "[us]"), OpenStruct.new(id: 2, country_code: "[uk]")]
$info_type = [OpenStruct.new(id: 1, info: "release dates"), OpenStruct.new(id: 2, info: "trivia"), OpenStruct.new(id: 3, info: "other")]
$keyword = [OpenStruct.new(id: 1, keyword: "computer-animation"), OpenStruct.new(id: 2, keyword: "action")]
$movie_companies = [OpenStruct.new(movie_id: 1, company_id: 1), OpenStruct.new(movie_id: 2, company_id: 2)]
$movie_info = [OpenStruct.new(movie_id: 1, info_type_id: 1, info: "USA:2004"), OpenStruct.new(movie_id: 2, info_type_id: 1, info: "USA:1995")]
$movie_keyword = [OpenStruct.new(movie_id: 1, keyword_id: 1), OpenStruct.new(movie_id: 2, keyword_id: 2)]
$name = [OpenStruct.new(id: 1, name: "Angela Aniston", gender: "f"), OpenStruct.new(id: 2, name: "Bob Brown", gender: "m")]
$person_info = [OpenStruct.new(person_id: 1, info_type_id: 2), OpenStruct.new(person_id: 2, info_type_id: 2)]
$role_type = [OpenStruct.new(id: 1, role: "actress"), OpenStruct.new(id: 2, role: "actor")]
$title = [OpenStruct.new(id: 1, title: "Shrek 2", production_year: 2004), OpenStruct.new(id: 2, title: "Old Film", production_year: 1999)]
$matches = (begin
	_res = []
	for an in $aka_name
		for cc in $complete_cast
			for cct1 in $comp_cast_type
				for cct2 in $comp_cast_type
					for chn in $char_name
						for ci in $cast_info
							for cn in $company_name
								for it in $info_type
									for it3 in $info_type
										for k in $keyword
											for mc in $movie_companies
												for mi in $movie_info
													for mk in $movie_keyword
														for n in $name
															for pi in $person_info
																for rt in $role_type
																	for t in $title
																		if ((((((((((((((((((((((((((((((((((((((((((((cct1.kind == "cast") && (cct2.kind == "complete+verified")) && (chn.name == "Queen")) && ((((ci.note == "(voice)") || (ci.note == "(voice) (uncredited)")) || (ci.note == "(voice: English version)")))) && (cn.country_code == "[us]")) && (it.info == "release dates")) && (it3.info == "trivia")) && (k.keyword == "computer-animation")) && (((mi.info.start_with?("Japan:200")) || (mi.info.start_with?("USA:200"))))) && (n.gender == "f")) && (n.name.include?("An"))) && (rt.role == "actress")) && (t.title == "Shrek 2")) && (t.production_year >= 2000)) && (t.production_year <= 2010)) && (t.id == mi.movie_id)) && (t.id == mc.movie_id)) && (t.id == ci.movie_id)) && (t.id == mk.movie_id)) && (t.id == cc.movie_id)) && (mc.movie_id == ci.movie_id)) && (mc.movie_id == mi.movie_id)) && (mc.movie_id == mk.movie_id)) && (mc.movie_id == cc.movie_id)) && (mi.movie_id == ci.movie_id)) && (mi.movie_id == mk.movie_id)) && (mi.movie_id == cc.movie_id)) && (ci.movie_id == mk.movie_id)) && (ci.movie_id == cc.movie_id)) && (mk.movie_id == cc.movie_id)) && (cn.id == mc.company_id)) && (it.id == mi.info_type_id)) && (n.id == ci.person_id)) && (rt.id == ci.role_id)) && (n.id == an.person_id)) && (ci.person_id == an.person_id)) && (chn.id == ci.person_role_id)) && (n.id == pi.person_id)) && (ci.person_id == pi.person_id)) && (it3.id == pi.info_type_id)) && (k.id == mk.keyword_id)) && (cct1.id == cc.subject_id)) && (cct2.id == cc.status_id)))
																			_res << OpenStruct.new(voiced_char: chn.name, voicing_actress: n.name, voiced_animation: t.title)
																		end
																	end
																end
															end
														end
													end
												end
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
	_res
end)
$result = [OpenStruct.new(voiced_char: _min((($matches)).map { |x| x.voiced_char }), voicing_actress: _min((($matches)).map { |x| x.voicing_actress }), voiced_animation: _min((($matches)).map { |x| x.voiced_animation }))]
_json($result)
raise "expect failed" unless ($result == [OpenStruct.new(voiced_char: "Queen", voicing_actress: "Angela Aniston", voiced_animation: "Shrek 2")])
