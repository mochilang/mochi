require "ostruct"

def _json(v)
  require "json"
  obj = v
  if v.is_a?(Array)
    obj = v.map { |it| it.respond_to?(:to_h) ? it.to_h : it }
  elsif v.respond_to?(:to_h)
    obj = v.to_h
  end
  puts(JSON.generate(obj))
end

cast_info = [OpenStruct.new(movie_id: 1, person_id: 101), OpenStruct.new(movie_id: 2, person_id: 102)]
keyword = [OpenStruct.new(id: 100, keyword: "marvel-cinematic-universe"), OpenStruct.new(id: 200, keyword: "other")]
movie_keyword = [OpenStruct.new(movie_id: 1, keyword_id: 100), OpenStruct.new(movie_id: 2, keyword_id: 200)]
name = [OpenStruct.new(id: 101, name: "Downey Robert Jr."), OpenStruct.new(id: 102, name: "Chris Evans")]
title = [OpenStruct.new(id: 1, title: "Iron Man 3", production_year: 2013), OpenStruct.new(id: 2, title: "Old Movie", production_year: 2000)]
result = (begin
  _res = []
  for ci in cast_info
    for mk in movie_keyword
      if ci.movie_id == mk.movie_id
        for k in keyword
          if mk.keyword_id == k.id
            for n in name
              if ci.person_id == n.id
                for t in title
                  if ci.movie_id == t.id
                    if (k.keyword == "marvel-cinematic-universe") && n.name.include?("Downey") && n.name.include?("Robert") && (t.production_year > 2010)
                      _res << OpenStruct.new(movie_keyword: k.keyword, actor_name: n.name, marvel_movie: t.title)
                    end
                  end
                end
              end
            end
          end
        end
      end
    end
  end
  _res
end)
_json(result)
raise "expect failed" unless result == [OpenStruct.new(movie_keyword: "marvel-cinematic-universe", actor_name: "Downey Robert Jr.", marvel_movie: "Iron Man 3")]

