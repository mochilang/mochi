# Generated by Mochi compiler v0.10.25 on 2025-07-13T11:54:51Z
require 'ostruct'

def _json(v)
  require 'json'
  obj = v
  if v.is_a?(Array)
    obj = v.map { |it| it.respond_to?(:to_h) ? it.to_h : it }
  elsif v.respond_to?(:to_h)
    obj = v.to_h
  end
  puts(JSON.generate(obj))
end
def _min(v)
  list = nil
  if v.respond_to?(:Items)
    list = v.Items
  elsif v.is_a?(Array)
    list = v
  elsif v.respond_to?(:to_a)
    list = v.to_a
  end
  return 0 if !list || list.empty?
  list.min
end

$aka_name = [OpenStruct.new(person_id: 1, name: "A. N. G."), OpenStruct.new(person_id: 2, name: "J. D.")]
$char_name = [OpenStruct.new(id: 10, name: "Angel"), OpenStruct.new(id: 20, name: "Devil")]
$cast_info = [OpenStruct.new(person_id: 1, person_role_id: 10, movie_id: 100, role_id: 1000, note: "(voice)"), OpenStruct.new(person_id: 2, person_role_id: 20, movie_id: 200, role_id: 1000, note: "(voice)")]
$company_name = [OpenStruct.new(id: 100, country_code: "[us]"), OpenStruct.new(id: 200, country_code: "[gb]")]
$movie_companies = [OpenStruct.new(movie_id: 100, company_id: 100, note: "ACME Studios (USA)"), OpenStruct.new(movie_id: 200, company_id: 200, note: "Maple Films")]
$name = [OpenStruct.new(id: 1, name: "Angela Smith", gender: "f"), OpenStruct.new(id: 2, name: "John Doe", gender: "m")]
$role_type = [OpenStruct.new(id: 1000, role: "actress"), OpenStruct.new(id: 2000, role: "actor")]
$title = [OpenStruct.new(id: 100, title: "Famous Film", production_year: 2010), OpenStruct.new(id: 200, title: "Old Movie", production_year: 1999)]
$matches = (begin
	_res = []
	for an in $aka_name
		for n in $name
			if (an.person_id == n.id)
				for ci in $cast_info
					if (ci.person_id == n.id)
						for chn in $char_name
							if (chn.id == ci.person_role_id)
								for t in $title
									if (t.id == ci.movie_id)
										for mc in $movie_companies
											if (mc.movie_id == t.id)
												for cn in $company_name
													if (cn.id == mc.company_id)
														for rt in $role_type
															if (rt.id == ci.role_id)
																if (((((((((["(voice)", "(voice: Japanese version)", "(voice) (uncredited)", "(voice: English version)"].include?(ci.note))) && (cn.country_code == "[us]")) && (((mc.note.include?("(USA)")) || (mc.note.include?("(worldwide)"))))) && (n.gender == "f")) && (n.name.include?("Ang"))) && (rt.role == "actress")) && (t.production_year >= 2005)) && (t.production_year <= 2015))
																	_res << OpenStruct.new(alt: an.name, character: chn.name, movie: t.title)
																end
															end
														end
													end
												end
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
	_res
end)
$result = [OpenStruct.new(alternative_name: _min((($matches)).map { |x| x.alt }), character_name: _min((($matches)).map { |x| x.character }), movie: _min((($matches)).map { |x| x.movie }))]
_json($result)
raise "expect failed" unless ($result == [OpenStruct.new(alternative_name: "A. N. G.", character_name: "Angel", movie: "Famous Film")])
