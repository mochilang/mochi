# Generated by Mochi compiler v0.10.25 on 2025-07-13T11:54:51Z
require 'ostruct'

def _json(v)
  require 'json'
  obj = v
  if v.is_a?(Array)
    obj = v.map { |it| it.respond_to?(:to_h) ? it.to_h : it }
  elsif v.respond_to?(:to_h)
    obj = v.to_h
  end
  puts(JSON.generate(obj))
end
def _min(v)
  list = nil
  if v.respond_to?(:Items)
    list = v.Items
  elsif v.is_a?(Array)
    list = v
  elsif v.respond_to?(:to_a)
    list = v.to_a
  end
  return 0 if !list || list.empty?
  list.min
end

$aka_name = [OpenStruct.new(person_id: 1, name: "Y. S.")]
$cast_info = [OpenStruct.new(person_id: 1, movie_id: 10, note: "(voice: English version)", role_id: 1000)]
$company_name = [OpenStruct.new(id: 50, country_code: "[jp]")]
$movie_companies = [OpenStruct.new(movie_id: 10, company_id: 50, note: "Studio (Japan)")]
$name = [OpenStruct.new(id: 1, name: "Yoko Ono"), OpenStruct.new(id: 2, name: "Yuichi")]
$role_type = [OpenStruct.new(id: 1000, role: "actress")]
$title = [OpenStruct.new(id: 10, title: "Dubbed Film")]
$eligible = (begin
	_res = []
	for an1 in $aka_name
		for n1 in $name
			if (n1.id == an1.person_id)
				for ci in $cast_info
					if (ci.person_id == an1.person_id)
						for t in $title
							if (t.id == ci.movie_id)
								for mc in $movie_companies
									if (mc.movie_id == ci.movie_id)
										for cn in $company_name
											if (cn.id == mc.company_id)
												for rt in $role_type
													if (rt.id == ci.role_id)
														if (((((((ci.note == "(voice: English version)") && (cn.country_code == "[jp]")) && (mc.note.include?("(Japan)"))) && ((!(mc.note.include?("(USA)"))))) && (n1.name.include?("Yo"))) && ((!(n1.name.include?("Yu"))))) && (rt.role == "actress"))
															_res << OpenStruct.new(pseudonym: an1.name, movie_title: t.title)
														end
													end
												end
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
	_res
end)
$result = [OpenStruct.new(actress_pseudonym: _min((($eligible)).map { |x| x.pseudonym }), japanese_movie_dubbed: _min((($eligible)).map { |x| x.movie_title }))]
_json($result)
raise "expect failed" unless ($result == [OpenStruct.new(actress_pseudonym: "Y. S.", japanese_movie_dubbed: "Dubbed Film")])
