# Generated by Mochi compiler v0.10.25 on 2025-07-13T13:07:08Z
require 'ostruct'

def _json(v)
  require 'json'
  obj = v
  if v.is_a?(Array)
    obj = v.map { |it| it.respond_to?(:to_h) ? it.to_h : it }
  elsif v.respond_to?(:to_h)
    obj = v.to_h
  end
  puts(JSON.generate(obj))
end
def _min(v)
  list = nil
  if v.respond_to?(:Items)
    list = v.Items
  elsif v.is_a?(Array)
    list = v
  elsif v.respond_to?(:to_a)
    list = v.to_a
  end
  return 0 if !list || list.empty?
  list.min
end

$comp_cast_type = [OpenStruct.new(id: 1, kind: "cast"), OpenStruct.new(id: 2, kind: "complete+verified"), OpenStruct.new(id: 3, kind: "crew")]
$complete_cast = [OpenStruct.new(movie_id: 1, subject_id: 1, status_id: 2), OpenStruct.new(movie_id: 2, subject_id: 3, status_id: 2)]
$cast_info = [OpenStruct.new(movie_id: 1, person_id: 10, note: "(writer)"), OpenStruct.new(movie_id: 2, person_id: 11, note: "(actor)")]
$info_type = [OpenStruct.new(id: 1, info: "genres"), OpenStruct.new(id: 2, info: "votes")]
$keyword = [OpenStruct.new(id: 1, keyword: "murder"), OpenStruct.new(id: 2, keyword: "comedy")]
$movie_info = [OpenStruct.new(movie_id: 1, info_type_id: 1, info: "Horror"), OpenStruct.new(movie_id: 2, info_type_id: 1, info: "Comedy")]
$movie_info_idx = [OpenStruct.new(movie_id: 1, info_type_id: 2, info: 2000), OpenStruct.new(movie_id: 2, info_type_id: 2, info: 150)]
$movie_keyword = [OpenStruct.new(movie_id: 1, keyword_id: 1), OpenStruct.new(movie_id: 2, keyword_id: 2)]
$name = [OpenStruct.new(id: 10, name: "John Writer", gender: "m"), OpenStruct.new(id: 11, name: "Jane Actor", gender: "f")]
$title = [OpenStruct.new(id: 1, title: "Violent Horror", production_year: 2005), OpenStruct.new(id: 2, title: "Old Comedy", production_year: 1995)]
$violent_keywords = ["murder", "violence", "blood", "gore", "death", "female-nudity", "hospital"]
$writer_notes = ["(writer)", "(head writer)", "(written by)", "(story)", "(story editor)"]
$matches = (begin
	_res = []
	for cc in $complete_cast
		for cct1 in $comp_cast_type
			if (cct1.id == cc.subject_id)
				for cct2 in $comp_cast_type
					if (cct2.id == cc.status_id)
						for ci in $cast_info
							if (ci.movie_id == cc.movie_id)
								for mi in $movie_info
									if (mi.movie_id == cc.movie_id)
										for mi_idx in $movie_info_idx
											if (mi_idx.movie_id == cc.movie_id)
												for mk in $movie_keyword
													if (mk.movie_id == cc.movie_id)
														for it1 in $info_type
															if (it1.id == mi.info_type_id)
																for it2 in $info_type
																	if (it2.id == mi_idx.info_type_id)
																		for k in $keyword
																			if (k.id == mk.keyword_id)
																				for n in $name
																					if (n.id == ci.person_id)
																						for t in $title
																							if (t.id == cc.movie_id)
																								if ((((((((((["cast", "crew"].include?(cct1.kind))) && (cct2.kind == "complete+verified")) && (($writer_notes.include?(ci.note)))) && (it1.info == "genres")) && (it2.info == "votes")) && (($violent_keywords.include?(k.keyword)))) && ((["Horror", "Thriller"].include?(mi.info)))) && (n.gender == "m")) && (t.production_year > 2000))
																									_res << OpenStruct.new(budget: mi.info, votes: mi_idx.info, writer: n.name, movie: t.title)
																								end
																							end
																						end
																					end
																				end
																			end
																		end
																	end
																end
															end
														end
													end
												end
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
	_res
end)
$result = [OpenStruct.new(movie_budget: _min((($matches)).map { |x| x.budget }), movie_votes: _min((($matches)).map { |x| x.votes }), writer: _min((($matches)).map { |x| x.writer }), complete_violent_movie: _min((($matches)).map { |x| x.movie }))]
_json($result)
raise "expect failed" unless ($result == [OpenStruct.new(movie_budget: "Horror", movie_votes: 2000, writer: "John Writer", complete_violent_movie: "Violent Horror")])
