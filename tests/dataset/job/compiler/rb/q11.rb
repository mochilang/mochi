# Generated by Mochi compiler v0.10.25 on 2025-07-13T12:52:34Z
require 'ostruct'

def _json(v)
  require 'json'
  obj = v
  if v.is_a?(Array)
    obj = v.map { |it| it.respond_to?(:to_h) ? it.to_h : it }
  elsif v.respond_to?(:to_h)
    obj = v.to_h
  end
  puts(JSON.generate(obj))
end
def _min(v)
  list = nil
  if v.respond_to?(:Items)
    list = v.Items
  elsif v.is_a?(Array)
    list = v
  elsif v.respond_to?(:to_a)
    list = v.to_a
  end
  return 0 if !list || list.empty?
  list.min
end

$company_name = [OpenStruct.new(id: 1, name: "Best Film Co", country_code: "[us]"), OpenStruct.new(id: 2, name: "Warner Studios", country_code: "[de]"), OpenStruct.new(id: 3, name: "Polish Films", country_code: "[pl]")]
$company_type = [OpenStruct.new(id: 1, kind: "production companies"), OpenStruct.new(id: 2, kind: "distributors")]
$keyword = [OpenStruct.new(id: 1, keyword: "sequel"), OpenStruct.new(id: 2, keyword: "thriller")]
$link_type = [OpenStruct.new(id: 1, link: "follow-up"), OpenStruct.new(id: 2, link: "follows from"), OpenStruct.new(id: 3, link: "remake")]
$movie_companies = [OpenStruct.new(movie_id: 10, company_id: 1, company_type_id: 1, note: nil), OpenStruct.new(movie_id: 20, company_id: 2, company_type_id: 1, note: nil), OpenStruct.new(movie_id: 30, company_id: 3, company_type_id: 1, note: nil)]
$movie_keyword = [OpenStruct.new(movie_id: 10, keyword_id: 1), OpenStruct.new(movie_id: 20, keyword_id: 1), OpenStruct.new(movie_id: 20, keyword_id: 2), OpenStruct.new(movie_id: 30, keyword_id: 1)]
$movie_link = [OpenStruct.new(movie_id: 10, link_type_id: 1), OpenStruct.new(movie_id: 20, link_type_id: 2), OpenStruct.new(movie_id: 30, link_type_id: 3)]
$title = [OpenStruct.new(id: 10, production_year: 1960, title: "Alpha"), OpenStruct.new(id: 20, production_year: 1970, title: "Beta"), OpenStruct.new(id: 30, production_year: 1985, title: "Polish Movie")]
$matches = (begin
	_res = []
	for cn in $company_name
		for mc in $movie_companies
			if (mc.company_id == cn.id)
				for ct in $company_type
					if (ct.id == mc.company_type_id)
						for t in $title
							if (t.id == mc.movie_id)
								for mk in $movie_keyword
									if (mk.movie_id == t.id)
										for k in $keyword
											if (k.id == mk.keyword_id)
												for ml in $movie_link
													if (ml.movie_id == t.id)
														for lt in $link_type
															if (lt.id == ml.link_type_id)
																if (((((((((((cn.country_code != "[pl]") && (((cn.name.include?("Film")) || (cn.name.include?("Warner"))))) && (ct.kind == "production companies")) && (k.keyword == "sequel")) && (lt.link.include?("follow"))) && (mc.note == nil)) && (t.production_year >= 1950)) && (t.production_year <= 2000)) && (ml.movie_id == mk.movie_id)) && (ml.movie_id == mc.movie_id)) && (mk.movie_id == mc.movie_id))
																	_res << OpenStruct.new(company: cn.name, link: lt.link, title: t.title)
																end
															end
														end
													end
												end
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
	_res
end)
$result = [OpenStruct.new(from_company: _min((($matches)).map { |x| x.company }), movie_link_type: _min((($matches)).map { |x| x.link }), non_polish_sequel_movie: _min((($matches)).map { |x| x.title }))]
_json($result)
raise "expect failed" unless ($result == [OpenStruct.new(from_company: "Best Film Co", movie_link_type: "follow-up", non_polish_sequel_movie: "Alpha")])
