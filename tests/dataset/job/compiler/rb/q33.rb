# Generated by Mochi compiler v0.10.25 on 2025-07-13T13:07:09Z
require 'ostruct'

def _json(v)
  require 'json'
  obj = v
  if v.is_a?(Array)
    obj = v.map { |it| it.respond_to?(:to_h) ? it.to_h : it }
  elsif v.respond_to?(:to_h)
    obj = v.to_h
  end
  puts(JSON.generate(obj))
end
def _min(v)
  list = nil
  if v.respond_to?(:Items)
    list = v.Items
  elsif v.is_a?(Array)
    list = v
  elsif v.respond_to?(:to_a)
    list = v.to_a
  end
  return 0 if !list || list.empty?
  list.min
end

$company_name = [OpenStruct.new(id: 1, name: "US Studio", country_code: "[us]"), OpenStruct.new(id: 2, name: "GB Studio", country_code: "[gb]")]
$info_type = [OpenStruct.new(id: 1, info: "rating"), OpenStruct.new(id: 2, info: "other")]
$kind_type = [OpenStruct.new(id: 1, kind: "tv series"), OpenStruct.new(id: 2, kind: "movie")]
$link_type = [OpenStruct.new(id: 1, link: "follows"), OpenStruct.new(id: 2, link: "remake of")]
$movie_companies = [OpenStruct.new(movie_id: 10, company_id: 1), OpenStruct.new(movie_id: 20, company_id: 2)]
$movie_info_idx = [OpenStruct.new(movie_id: 10, info_type_id: 1, info: "7.0"), OpenStruct.new(movie_id: 20, info_type_id: 1, info: "2.5")]
$movie_link = [OpenStruct.new(movie_id: 10, linked_movie_id: 20, link_type_id: 1)]
$title = [OpenStruct.new(id: 10, title: "Series A", kind_id: 1, production_year: 2004), OpenStruct.new(id: 20, title: "Series B", kind_id: 1, production_year: 2006)]
$rows = (begin
	_res = []
	for cn1 in $company_name
		for mc1 in $movie_companies
			if (cn1.id == mc1.company_id)
				for t1 in $title
					if (t1.id == mc1.movie_id)
						for mi_idx1 in $movie_info_idx
							if (mi_idx1.movie_id == t1.id)
								for it1 in $info_type
									if (it1.id == mi_idx1.info_type_id)
										for kt1 in $kind_type
											if (kt1.id == t1.kind_id)
												for ml in $movie_link
													if (ml.movie_id == t1.id)
														for t2 in $title
															if (t2.id == ml.linked_movie_id)
																for mi_idx2 in $movie_info_idx
																	if (mi_idx2.movie_id == t2.id)
																		for it2 in $info_type
																			if (it2.id == mi_idx2.info_type_id)
																				for kt2 in $kind_type
																					if (kt2.id == t2.kind_id)
																						for mc2 in $movie_companies
																							if (mc2.movie_id == t2.id)
																								for cn2 in $company_name
																									if (cn2.id == mc2.company_id)
																										for lt in $link_type
																											if (lt.id == ml.link_type_id)
																												if (((((((((cn1.country_code == "[us]") && (it1.info == "rating")) && (it2.info == "rating")) && (kt1.kind == "tv series")) && (kt2.kind == "tv series")) && ((((lt.link == "sequel") || (lt.link == "follows")) || (lt.link == "followed by")))) && (mi_idx2.info < "3.0")) && (t2.production_year >= 2005)) && (t2.production_year <= 2008))
																													_res << OpenStruct.new(first_company: cn1.name, second_company: cn2.name, first_rating: mi_idx1.info, second_rating: mi_idx2.info, first_movie: t1.title, second_movie: t2.title)
																												end
																											end
																										end
																									end
																								end
																							end
																						end
																					end
																				end
																			end
																		end
																	end
																end
															end
														end
													end
												end
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
	_res
end)
$result = [OpenStruct.new(first_company: _min((($rows)).map { |r| r.first_company }), second_company: _min((($rows)).map { |r| r.second_company }), first_rating: _min((($rows)).map { |r| r.first_rating }), second_rating: _min((($rows)).map { |r| r.second_rating }), first_movie: _min((($rows)).map { |r| r.first_movie }), second_movie: _min((($rows)).map { |r| r.second_movie }))]
_json($result)
raise "expect failed" unless ($result == [OpenStruct.new(first_company: "US Studio", second_company: "GB Studio", first_rating: "7.0", second_rating: "2.5", first_movie: "Series A", second_movie: "Series B")])
