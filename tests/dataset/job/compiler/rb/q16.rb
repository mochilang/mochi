# Generated by Mochi compiler v0.10.25 on 2025-07-13T12:52:37Z
require 'ostruct'

def _json(v)
  require 'json'
  obj = v
  if v.is_a?(Array)
    obj = v.map { |it| it.respond_to?(:to_h) ? it.to_h : it }
  elsif v.respond_to?(:to_h)
    obj = v.to_h
  end
  puts(JSON.generate(obj))
end
def _min(v)
  list = nil
  if v.respond_to?(:Items)
    list = v.Items
  elsif v.is_a?(Array)
    list = v
  elsif v.respond_to?(:to_a)
    list = v.to_a
  end
  return 0 if !list || list.empty?
  list.min
end

$aka_name = [OpenStruct.new(person_id: 1, name: "Alpha"), OpenStruct.new(person_id: 2, name: "Beta")]
$cast_info = [OpenStruct.new(person_id: 1, movie_id: 101), OpenStruct.new(person_id: 2, movie_id: 102)]
$company_name = [OpenStruct.new(id: 1, country_code: "[us]"), OpenStruct.new(id: 2, country_code: "[de]")]
$keyword = [OpenStruct.new(id: 1, keyword: "character-name-in-title"), OpenStruct.new(id: 2, keyword: "other")]
$movie_companies = [OpenStruct.new(movie_id: 101, company_id: 1), OpenStruct.new(movie_id: 102, company_id: 2)]
$movie_keyword = [OpenStruct.new(movie_id: 101, keyword_id: 1), OpenStruct.new(movie_id: 102, keyword_id: 2)]
$name = [OpenStruct.new(id: 1), OpenStruct.new(id: 2)]
$title = [OpenStruct.new(id: 101, title: "Hero Bob", episode_nr: 60), OpenStruct.new(id: 102, title: "Other Show", episode_nr: 40)]
$rows = (begin
	_res = []
	for an in $aka_name
		for n in $name
			if (n.id == an.person_id)
				for ci in $cast_info
					if (ci.person_id == n.id)
						for t in $title
							if (t.id == ci.movie_id)
								for mk in $movie_keyword
									if (mk.movie_id == t.id)
										for k in $keyword
											if (k.id == mk.keyword_id)
												for mc in $movie_companies
													if (mc.movie_id == t.id)
														for cn in $company_name
															if (cn.id == mc.company_id)
																if ((((cn.country_code == "[us]") && (k.keyword == "character-name-in-title")) && (t.episode_nr >= 50)) && (t.episode_nr < 100))
																	_res << OpenStruct.new(pseudonym: an.name, series: t.title)
																end
															end
														end
													end
												end
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
	_res
end)
$result = [OpenStruct.new(cool_actor_pseudonym: _min((($rows)).map { |r| r.pseudonym }), series_named_after_char: _min((($rows)).map { |r| r.series }))]
_json($result)
raise "expect failed" unless ($result == [OpenStruct.new(cool_actor_pseudonym: "Alpha", series_named_after_char: "Hero Bob")])
