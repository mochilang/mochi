from __future__ import annotations
import dataclasses
import json


@dataclasses.dataclass
class Auto1:
    voiced_char_name: str
    voicing_actress_name: str
    voiced_action_movie_jap_eng: str

    def __getitem__(self, key):
        return getattr(self, key)


@dataclasses.dataclass
class Auto10:
    movie_id: int
    keyword_id: int

    def __getitem__(self, key):
        return getattr(self, key)


@dataclasses.dataclass
class Auto11:
    id: int
    name: str
    gender: str

    def __getitem__(self, key):
        return getattr(self, key)


@dataclasses.dataclass
class Auto12:
    id: int
    role: str

    def __getitem__(self, key):
        return getattr(self, key)


@dataclasses.dataclass
class Auto13:
    id: int
    title: str
    production_year: int

    def __getitem__(self, key):
        return getattr(self, key)


@dataclasses.dataclass
class Auto2:
    person_id: int

    def __getitem__(self, key):
        return getattr(self, key)


@dataclasses.dataclass
class Auto3:
    id: int
    name: str

    def __getitem__(self, key):
        return getattr(self, key)


@dataclasses.dataclass
class Auto4:
    movie_id: int
    person_id: int
    person_role_id: int
    role_id: int
    note: str

    def __getitem__(self, key):
        return getattr(self, key)


@dataclasses.dataclass
class Auto5:
    id: int
    country_code: str

    def __getitem__(self, key):
        return getattr(self, key)


@dataclasses.dataclass
class Auto6:
    id: int
    info: str

    def __getitem__(self, key):
        return getattr(self, key)


@dataclasses.dataclass
class Auto7:
    id: int
    keyword: str

    def __getitem__(self, key):
        return getattr(self, key)


@dataclasses.dataclass
class Auto8:
    movie_id: int
    company_id: int

    def __getitem__(self, key):
        return getattr(self, key)


@dataclasses.dataclass
class Auto9:
    movie_id: int
    info_type_id: int
    info: str

    def __getitem__(self, key):
        return getattr(self, key)


from typing import Any, TypeVar, Generic, Callable

T = TypeVar("T")
K = TypeVar("K")


def _min(v):
    if hasattr(v, "Items"):
        v = v.Items
    if not isinstance(v, list):
        raise Exception("min() expects list or group")
    vals = [it for it in v if it is not None]
    if not vals:
        return 0
    return min(vals)


def test_Q24_finds_voiced_action_movie_with_actress_named_An():
    assert result == [
        Auto1(
            voiced_char_name="Hero Character",
            voicing_actress_name="Ann Actress",
            voiced_action_movie_jap_eng="Heroic Adventure",
        )
    ]


aka_name = [Auto2(person_id=1)]
char_name = [Auto3(id=1, name="Hero Character")]
cast_info = [
    Auto4(movie_id=1, person_id=1, person_role_id=1, role_id=1, note="(voice)")
]
company_name = [Auto5(id=1, country_code="[us]")]
info_type = [Auto6(id=1, info="release dates")]
keyword = [Auto7(id=1, keyword="hero")]
movie_companies = [Auto8(movie_id=1, company_id=1)]
movie_info = [Auto9(movie_id=1, info_type_id=1, info="Japan: Feb 2015")]
movie_keyword = [Auto10(movie_id=1, keyword_id=1)]
name = [Auto11(id=1, name="Ann Actress", gender="f")]
role_type = [Auto12(id=1, role="actress")]
title = [Auto13(id=1, title="Heroic Adventure", production_year=2015)]
matches = [
    Auto1(
        voiced_char_name=chn["name"],
        voicing_actress_name=n["name"],
        voiced_action_movie_jap_eng=t["title"],
    )
    for an in aka_name
    for chn in char_name
    for ci in cast_info
    for cn in company_name
    for it in info_type
    for k in keyword
    for mc in movie_companies
    for mi in movie_info
    for mk in movie_keyword
    for n in name
    for rt in role_type
    for t in title
    if (
        (
            (
                (
                    (
                        (
                            (
                                (
                                    (
                                        (
                                            (
                                                (
                                                    (
                                                        (
                                                            (
                                                                (
                                                                    (
                                                                        (
                                                                            (
                                                                                (
                                                                                    (
                                                                                        (
                                                                                            (
                                                                                                (
                                                                                                    (
                                                                                                        (
                                                                                                            ci[
                                                                                                                "note"
                                                                                                            ]
                                                                                                            in [
                                                                                                                "(voice)",
                                                                                                                "(voice: Japanese version)",
                                                                                                                "(voice) (uncredited)",
                                                                                                                "(voice: English version)",
                                                                                                            ]
                                                                                                            and cn[
                                                                                                                "country_code"
                                                                                                            ]
                                                                                                            == "[us]"
                                                                                                        )
                                                                                                        and it[
                                                                                                            "info"
                                                                                                        ]
                                                                                                        == "release dates"
                                                                                                    )
                                                                                                    and k[
                                                                                                        "keyword"
                                                                                                    ]
                                                                                                    in [
                                                                                                        "hero",
                                                                                                        "martial-arts",
                                                                                                        "hand-to-hand-combat",
                                                                                                    ]
                                                                                                )
                                                                                                and mi[
                                                                                                    "info"
                                                                                                ]
                                                                                                != None
                                                                                            )
                                                                                            and (
                                                                                                str(
                                                                                                    mi[
                                                                                                        "info"
                                                                                                    ]
                                                                                                ).startswith(
                                                                                                    "Japan:"
                                                                                                )
                                                                                                and "201"
                                                                                                in mi[
                                                                                                    "info"
                                                                                                ]
                                                                                                or (
                                                                                                    str(
                                                                                                        mi[
                                                                                                            "info"
                                                                                                        ]
                                                                                                    ).startswith(
                                                                                                        "USA:"
                                                                                                    )
                                                                                                    and "201"
                                                                                                    in mi[
                                                                                                        "info"
                                                                                                    ]
                                                                                                )
                                                                                            )
                                                                                        )
                                                                                        and n[
                                                                                            "gender"
                                                                                        ]
                                                                                        == "f"
                                                                                    )
                                                                                    and "An"
                                                                                    in n[
                                                                                        "name"
                                                                                    ]
                                                                                )
                                                                                and rt[
                                                                                    "role"
                                                                                ]
                                                                                == "actress"
                                                                            )
                                                                            and t[
                                                                                "production_year"
                                                                            ]
                                                                            > 2010
                                                                        )
                                                                        and t["id"]
                                                                        == mi[
                                                                            "movie_id"
                                                                        ]
                                                                    )
                                                                    and t["id"]
                                                                    == mc["movie_id"]
                                                                )
                                                                and t["id"]
                                                                == ci["movie_id"]
                                                            )
                                                            and t["id"]
                                                            == mk["movie_id"]
                                                        )
                                                        and mc["movie_id"]
                                                        == ci["movie_id"]
                                                    )
                                                    and mc["movie_id"] == mi["movie_id"]
                                                )
                                                and mc["movie_id"] == mk["movie_id"]
                                            )
                                            and mi["movie_id"] == ci["movie_id"]
                                        )
                                        and mi["movie_id"] == mk["movie_id"]
                                    )
                                    and ci["movie_id"] == mk["movie_id"]
                                )
                                and cn["id"] == mc["company_id"]
                            )
                            and it["id"] == mi["info_type_id"]
                        )
                        and n["id"] == ci["person_id"]
                    )
                    and rt["id"] == ci["role_id"]
                )
                and n["id"] == an["person_id"]
            )
            and ci["person_id"] == an["person_id"]
        )
        and chn["id"] == ci["person_role_id"]
    )
    and k["id"] == mk["keyword_id"]
]
result = [
    Auto1(
        voiced_char_name=_min([x.voiced_char_name for x in matches]),
        voicing_actress_name=_min([x.voicing_actress_name for x in matches]),
        voiced_action_movie_jap_eng=_min(
            [x.voiced_action_movie_jap_eng for x in matches]
        ),
    )
]
print(json.dumps(result, default=lambda o: vars(o)))
test_Q24_finds_voiced_action_movie_with_actress_named_An()