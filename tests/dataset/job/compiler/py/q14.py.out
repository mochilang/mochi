from __future__ import annotations
import json
from typing import Any, TypeVar, Generic, Callable

T = TypeVar("T")
K = TypeVar("K")


def _min(v):
    if hasattr(v, "Items"):
        v = v.Items
    if not isinstance(v, list):
        raise Exception("min() expects list or group")
    vals = [it for it in v if it is not None]
    if not vals:
        return 0
    return min(vals)


def test_Q14_selects_minimal_rating_and_title_for_dark_movies():
    assert result == {"rating": 7.0, "northern_dark_movie": "A Dark Movie"}


info_type = [{"id": 1, "info": "countries"}, {"id": 2, "info": "rating"}]
keyword = [
    {"id": 1, "keyword": "murder"},
    {"id": 2, "keyword": "blood"},
    {"id": 3, "keyword": "romance"},
]
kind_type = [{"id": 1, "kind": "movie"}]
title = [
    {"id": 1, "kind_id": 1, "production_year": 2012, "title": "A Dark Movie"},
    {"id": 2, "kind_id": 1, "production_year": 2013, "title": "Brutal Blood"},
    {"id": 3, "kind_id": 1, "production_year": 2008, "title": "Old Film"},
]
movie_info = [
    {"movie_id": 1, "info_type_id": 1, "info": "Sweden"},
    {"movie_id": 2, "info_type_id": 1, "info": "USA"},
    {"movie_id": 3, "info_type_id": 1, "info": "USA"},
]
movie_info_idx = [
    {"movie_id": 1, "info_type_id": 2, "info": 7.0},
    {"movie_id": 2, "info_type_id": 2, "info": 7.5},
    {"movie_id": 3, "info_type_id": 2, "info": 9.1},
]
movie_keyword = [
    {"movie_id": 1, "keyword_id": 1},
    {"movie_id": 2, "keyword_id": 2},
    {"movie_id": 3, "keyword_id": 3},
]
allowed_keywords = ["murder", "murder-in-title", "blood", "violence"]
allowed_countries = [
    "Sweden",
    "Norway",
    "Germany",
    "Denmark",
    "Swedish",
    "Denish",
    "Norwegian",
    "German",
    "USA",
    "American",
]
matches = [
    {"rating": mi_idx["info"], "title": t["title"]}
    for it1 in info_type
    for it2 in info_type
    for k in keyword
    for kt in kind_type
    for mi in movie_info
    for mi_idx in movie_info_idx
    for mk in movie_keyword
    for t in title
    if (
        (
            (
                (
                    (
                        (
                            (
                                (
                                    (
                                        (
                                            (
                                                (
                                                    (
                                                        (
                                                            (
                                                                it1["info"]
                                                                == "countries"
                                                                and it2["info"]
                                                                == "rating"
                                                            )
                                                            and k["keyword"]
                                                            in allowed_keywords
                                                        )
                                                        and kt["kind"] == "movie"
                                                    )
                                                    and mi["info"] in allowed_countries
                                                )
                                                and mi_idx["info"] < 8.5
                                            )
                                            and t["production_year"] > 2010
                                        )
                                        and kt["id"] == t["kind_id"]
                                    )
                                    and t["id"] == mi["movie_id"]
                                )
                                and t["id"] == mk["movie_id"]
                            )
                            and t["id"] == mi_idx["movie_id"]
                        )
                        and mk["movie_id"] == mi["movie_id"]
                    )
                    and mk["movie_id"] == mi_idx["movie_id"]
                )
                and mi["movie_id"] == mi_idx["movie_id"]
            )
            and k["id"] == mk["keyword_id"]
        )
        and it1["id"] == mi["info_type_id"]
    )
    and it2["id"] == mi_idx["info_type_id"]
]
result = {
    "rating": _min([x["rating"] for x in matches]),
    "northern_dark_movie": _min([x["title"] for x in matches]),
}
print(json.dumps(result, default=lambda o: vars(o)))
test_Q14_selects_minimal_rating_and_title_for_dark_movies()