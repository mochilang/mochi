// Generated by Mochi compiler v0.10.25 on 2025-07-13T11:24:31Z
object q2 {
  case class CompanyName(id: Int, country_code: String)
  case class Keyword(id: Int, keyword: String)
  case class MovieCompanie(movie_id: Int, company_id: Int)
  case class MovieKeyword(movie_id: Int, keyword_id: Int)
  case class Title(id: Int, title: String)

  def _to_json(v: Any): String = v match {
    case null => "null"
    case s: String => "\"" + s.replace(\"\\\", \"\\\\\").replace(\"\"\", \"\\\"\") + "\""
    case b: Boolean => b.toString
    case i: Int => i.toString
    case l: Long => l.toString
    case d: Double => d.toString
    case m: scala.collection.Map[_, _] => m.map{ case (k, v2) => "\"" + k.toString.replace(\"\"", \"\\\"\") + "\":" + _to_json(v2) }.mkString("{", ",", "}")
    case seq: Iterable[_] => seq.map(_to_json).mkString("[", ",", "]")
    case other => "\"" + other.toString.replace(\"\\\", \"\\\\\").replace(\"\"", \"\\\"\") + "\""
  }

  def main(args: Array[String]): Unit = {
    val company_name = List(CompanyName(id = 1, country_code = "[de]"), CompanyName(id = 2, country_code = "[us]"))
    val keyword = List(Keyword(id = 1, keyword = "character-name-in-title"), Keyword(id = 2, keyword = "other"))
    val movie_companies = List(MovieCompanie(movie_id = 100, company_id = 1), MovieCompanie(movie_id = 200, company_id = 2))
    val movie_keyword = List(MovieKeyword(movie_id = 100, keyword_id = 1), MovieKeyword(movie_id = 200, keyword_id = 2))
    val title = List(Title(id = 100, title = "Der Film"), Title(id = 200, title = "Other Movie"))
    val titles = for { cn <- company_name; mc <- movie_companies; if (mc.company_id).asInstanceOf[Int] == cn.id; t <- title; if mc.movie_id == (t.id).asInstanceOf[Int]; mk <- movie_keyword; if (mk.movie_id).asInstanceOf[Int] == t.id; k <- keyword; if mk.keyword_id == (k.id).asInstanceOf[Int]; if cn.country_code == "[de]" && k.keyword == "character-name-in-title" && mc.movie_id == mk.movie_id } yield t.title
    val result = titles.min
    println(_to_json(result))
    assert(result == "Der Film")
  }
}
