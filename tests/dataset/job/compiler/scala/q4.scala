// Generated by Mochi compiler v0.10.25 on 2025-07-13T11:24:32Z
object q4 {
  case class InfoType(id: Int, info: String)
  case class Keyword(id: Int, keyword: String)
  case class MovieInfoIdx(movie_id: Int, info_type_id: Int, info: String)
  case class MovieKeyword(movie_id: Int, keyword_id: Int)
  case class Result(rating: String, movie_title: String)
  case class Row(rating: String, title: String)
  case class Title(id: Int, title: String, production_year: Int)

  def main(args: Array[String]): Unit = {
    val info_type = List(InfoType(id = 1, info = "rating"), InfoType(id = 2, info = "other"))
    val keyword = List(Keyword(id = 1, keyword = "great sequel"), Keyword(id = 2, keyword = "prequel"))
    val title = List(Title(id = 10, title = "Alpha Movie", production_year = 2006), Title(id = 20, title = "Beta Film", production_year = 2007), Title(id = 30, title = "Old Film", production_year = 2004))
    val movie_keyword = List(MovieKeyword(movie_id = 10, keyword_id = 1), MovieKeyword(movie_id = 20, keyword_id = 1), MovieKeyword(movie_id = 30, keyword_id = 1))
    val movie_info_idx = List(MovieInfoIdx(movie_id = 10, info_type_id = 1, info = "6.2"), MovieInfoIdx(movie_id = 20, info_type_id = 1, info = "7.8"), MovieInfoIdx(movie_id = 30, info_type_id = 1, info = "4.5"))
    val rows = for { it <- info_type; mi <- movie_info_idx; if it.id == (mi.info_type_id).asInstanceOf[Int]; t <- title; if (t.id).asInstanceOf[Int] == mi.movie_id; mk <- movie_keyword; if (mk.movie_id).asInstanceOf[Int] == t.id; k <- keyword; if (k.id).asInstanceOf[Int] == mk.keyword_id; if it.info == "rating" && k.keyword.contains("sequel") && mi.info > "5.0" && t.production_year > 2005 && mk.movie_id == mi.movie_id } yield Row(rating = mi.info, title = t.title)
    val result = List(Map("rating" -> (for { r <- rows } yield r.rating).min, "movie_title" -> (for { r <- rows } yield r.title).min))
    println(scala.util.parsing.json.JSONArray(result.asInstanceOf[List[Any]]).toString())
    assert(result == List(Result(rating = "6.2", movie_title = "Alpha Movie")))
  }
}
