" Generated by Mochi compiler v0.10.25 on 2025-07-13T14:24:44Z
"
| company_type info_type title movie_companies movie_info_idx filtered result |
company_type := {Dictionary from:{'id'->1. 'kind'->'production companies'}. Dictionary from:{'id'->2. 'kind'->'distributors'}}.
info_type := {Dictionary from:{'id'->10. 'info'->'top 250 rank'}. Dictionary from:{'id'->20. 'info'->'bottom 10 rank'}}.
title := {Dictionary from:{'id'->100. title->'Good Movie'. 'production_year'->1995}. Dictionary from:{'id'->200. title->'Bad Movie'. 'production_year'->2000}}.
movie_companies := {Dictionary from:{'movie_id'->100. 'company_type_id'->1. 'note'->'ACME (co-production)'}. Dictionary from:{'movie_id'->200. 'company_type_id'->1. 'note'->'MGM (as Metro-Goldwyn-Mayer Pictures)'}}.
movie_info_idx := {Dictionary from:{'movie_id'->100. 'info_type_id'->10}. Dictionary from:{'movie_id'->200. 'info_type_id'->20}}.
filtered := [ | tmp |
  tmp := OrderedCollection new.
  company_type do: [:ct |
    movie_companies do: [:mc |
      title do: [:t |
        movie_info_idx do: [:mi |
          info_type do: [:it |
            (((((((((((((ct at: 'kind') = ('production companies'))) and: [(((it at: 'info') = ('top 250 rank')))])) and: [((mc at: 'note' at: 'contains') value: ('(as Metro-Goldwyn-Mayer Pictures)') not)])) and: [((((mc at: 'note' at: 'contains') value: '(co-production)') or: [((mc at: 'note' at: 'contains') value: '(presents)')]))]) and: [(ct.id = mc.company_type_id)]) and: [(t.id = mc.movie_id)]) and: [(mi.movie_id = t.id)]) and: [(it.id = mi.info_type_id)])) ifTrue: [
              tmp add: Dictionary from:{'note'->mc at: 'note'. title->t at: 'title'. 'year'->t at: 'production_year'}.
            ].
          ].
        ].
      ].
    ].
  ].
  tmp
] value.
result := Dictionary from:{'production_note'->([ | tmp |
  tmp := OrderedCollection new.
  filtered do: [:r |
    tmp add: r at: 'note'.
  ].
  tmp
] value min). 'movie_title'->([ | tmp |
  tmp := OrderedCollection new.
  filtered do: [:r |
    tmp add: r at: 'title'.
  ].
  tmp
] value min). 'movie_year'->([ | tmp |
  tmp := OrderedCollection new.
  filtered do: [:r |
    tmp add: r at: 'year'.
  ].
  tmp
] value min)}.
json value: {result}.
((result = (Dictionary from:{'production_note'->'ACME (co-production)'. 'movie_title'->'Good Movie'. 'movie_year'->1995}))) ifTrue: [Transcript show:'ok'; cr] ifFalse: [Transcript show:'fail'; cr].
