" Generated by Mochi compiler v0.10.25 on 2025-07-13T14:24:44Z
"
| char_name cast_info company_name company_type movie_companies role_type title matches result |
char_name := {Dictionary from:{'id'->1. 'name'->'Ivan'}. Dictionary from:{'id'->2. 'name'->'Alex'}}.
cast_info := {Dictionary from:{'movie_id'->10. 'person_role_id'->1. 'role_id'->1. 'note'->'Soldier (voice) (uncredited)'}. Dictionary from:{'movie_id'->11. 'person_role_id'->2. 'role_id'->1. 'note'->'(voice)'}}.
company_name := {Dictionary from:{'id'->1. 'country_code'->'[ru]'}. Dictionary from:{'id'->2. 'country_code'->'[us]'}}.
company_type := {Dictionary from:{'id'->1}. Dictionary from:{'id'->2}}.
movie_companies := {Dictionary from:{'movie_id'->10. 'company_id'->1. 'company_type_id'->1}. Dictionary from:{'movie_id'->11. 'company_id'->2. 'company_type_id'->1}}.
role_type := {Dictionary from:{'id'->1. 'role'->'actor'}. Dictionary from:{'id'->2. 'role'->'director'}}.
title := {Dictionary from:{'id'->10. title->'Vodka Dreams'. 'production_year'->2006}. Dictionary from:{'id'->11. title->'Other Film'. 'production_year'->2004}}.
matches := [ | tmp |
  tmp := OrderedCollection new.
  char_name do: [:chn |
    cast_info do: [:ci |
      role_type do: [:rt |
        title do: [:t |
          movie_companies do: [:mc |
            company_name do: [:cn |
              company_type do: [:ct |
                ((((((((((((((((ci at: 'note' at: 'contains') value: '(voice)') and: [((ci at: 'note' at: 'contains') value: '(uncredited)')])) and: [(((cn at: 'country_code') = '[ru]'))])) and: [(((rt at: 'role') = 'actor'))])) and: [(((t at: 'production_year') > 2005))]) and: [(chn.id = ci.person_role_id)]) and: [(rt.id = ci.role_id)]) and: [(t.id = ci.movie_id)]) and: [(mc.movie_id = t.id)]) and: [(cn.id = mc.company_id)]) and: [(ct.id = mc.company_type_id)])) ifTrue: [
                  tmp add: Dictionary from:{'character'->chn at: 'name'. 'movie'->t at: 'title'}.
                ].
              ].
            ].
          ].
        ].
      ].
    ].
  ].
  tmp
] value.
result := {Dictionary from:{'uncredited_voiced_character'->([ | tmp |
  tmp := OrderedCollection new.
  matches do: [:x |
    tmp add: x at: 'character'.
  ].
  tmp
] value min). 'russian_movie'->([ | tmp |
  tmp := OrderedCollection new.
  matches do: [:x |
    tmp add: x at: 'movie'.
  ].
  tmp
] value min)}}.
json value: result.
((result = ({Dictionary from:{'uncredited_voiced_character'->'Ivan'. 'russian_movie'->'Vodka Dreams'}}))) ifTrue: [Transcript show:'ok'; cr] ifFalse: [Transcript show:'fail'; cr].
