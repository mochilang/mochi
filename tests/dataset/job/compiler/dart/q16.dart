// Generated by Mochi compiler v0.10.25 on 2025-07-13T13:10:04Z
import 'dart:io';
import 'dart:convert';

var aka_name = [{'person_id': 1, 'name': 'Alpha'}, {'person_id': 2, 'name': 'Beta'}];

var cast_info = [{'person_id': 1, 'movie_id': 101}, {'person_id': 2, 'movie_id': 102}];

var company_name = [{'id': 1, 'country_code': '[us]'}, {'id': 2, 'country_code': '[de]'}];

var keyword = [{'id': 1, 'keyword': 'character-name-in-title'}, {'id': 2, 'keyword': 'other'}];

var movie_companies = [{'movie_id': 101, 'company_id': 1}, {'movie_id': 102, 'company_id': 2}];

var movie_keyword = [{'movie_id': 101, 'keyword_id': 1}, {'movie_id': 102, 'keyword_id': 2}];

var name = [{'id': 1}, {'id': 2}];

var title = [{'id': 101, 'title': 'Hero Bob', 'episode_nr': 60}, {'id': 102, 'title': 'Other Show', 'episode_nr': 40}];

var rows = (() {
  var _q0 = <dynamic>[];
  for (var an in aka_name) {
    for (var n in name) {
      if (!(n['id'] == an['person_id'])) continue;
      for (var ci in cast_info) {
        if (!(ci['person_id'] == n['id'])) continue;
        for (var t in title) {
          if (!(t['id'] == ci['movie_id'])) continue;
          for (var mk in movie_keyword) {
            if (!(mk['movie_id'] == t['id'])) continue;
            for (var k in keyword) {
              if (!(k['id'] == mk['keyword_id'])) continue;
              for (var mc in movie_companies) {
                if (!(mc['movie_id'] == t['id'])) continue;
                for (var cn in company_name) {
                  if (!(cn['id'] == mc['company_id'])) continue;
                  if (!(cn['country_code'] == '[us]' && k['keyword'] == 'character-name-in-title' && t['episode_nr'].toString().compareTo(50.toString()) >= 0 && t['episode_nr'].toString().compareTo(100.toString()) < 0)) continue;
                  _q0.add({'pseudonym': an['name'], 'series': t['title']});
                }
              }
            }
          }
        }
      }
    }
  }
  return _q0;
})();

var result = [{'cool_actor_pseudonym': (() { var _t2 = (() {
  var _q1 = <dynamic>[];
  for (var r in rows) {
    _q1.add(r['pseudonym']);
  }
  return _q1;
})(); return _min(_t2); })(), 'series_named_after_char': (() { var _t4 = (() {
  var _q3 = <dynamic>[];
  for (var r in rows) {
    _q3.add(r['series']);
  }
  return _q3;
})(); return _min(_t4); })()}];

void main() {
  print(jsonEncode(result));
}

bool _equal(dynamic a, dynamic b) {
    if (a is List && b is List) {
        if (a.length != b.length) return false;
        for (var i = 0; i < a.length; i++) { if (!_equal(a[i], b[i])) return false; }
        return true;
    }
    if (a is Map && b is Map) {
        if (a.length != b.length) return false;
        for (var k in a.keys) { if (!b.containsKey(k) || !_equal(a[k], b[k])) return false; }
        return true;
    }
    return a == b;
}

String _formatDuration(Duration d) {
    if (d.inMicroseconds < 1000) return '${d.inMicroseconds}Âµs';
    if (d.inMilliseconds < 1000) return '${d.inMilliseconds}ms';
    return '${(d.inMilliseconds/1000).toStringAsFixed(2)}s';
}

void _json(dynamic v) {
    print(jsonEncode(v));
}


dynamic _min(dynamic v) {
    List<dynamic>? list;
    if (v is List) list = v;
    else if (v is Map && v['items'] is List) list = (v['items'] as List);
    else if (v is Map && v['Items'] is List) list = (v['Items'] as List);
    else { try { var it = (v as dynamic).items; if (it is List) list = it; } catch (_) {} }
    if (list == null || list.isEmpty) return 0;
    var m = list[0];
    for (var n in list) { if ((n as Comparable).compareTo(m) < 0) m = n; }
    return m;
}

bool _runTest(String name, void Function() f) {
    stdout.write('   test $name ...');
    var start = DateTime.now();
    try {
        f();
        var d = DateTime.now().difference(start);
        stdout.writeln(' ok (${_formatDuration(d)})');
        return true;
    } catch (e) {
        var d = DateTime.now().difference(start);
        stdout.writeln(' fail $e (${_formatDuration(d)})');
        return false;
    }
}
