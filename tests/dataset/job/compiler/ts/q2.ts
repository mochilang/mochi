// Generated by Mochi compiler v0.10.25 on 2025-07-15T03:38:41Z
// Source: /workspace/mochi/tests/dataset/job/q2.mochi

let company_name: Record<string, any>[];
let keyword: Record<string, any>[];
let movie_companies: { [key: string]: number }[];
let movie_keyword: { [key: string]: number }[];
let result: any;
let title: Record<string, any>[];
let titles: any[];

function test_Q2_finds_earliest_title_for_German_companies_with_character_keyword(): void {
  if (!(result == "Der Film")) throw new Error("expect failed");
}

function main(): void {
  company_name = [
    {
      "id": 1,
      "country_code": "[de]",
    },
    {
      "id": 2,
      "country_code": "[us]",
    },
  ];
  keyword = [
    {
      "id": 1,
      "keyword": "character-name-in-title",
    },
    {
      "id": 2,
      "keyword": "other",
    },
  ];
  movie_companies = [
    {
      "movie_id": 100,
      "company_id": 1,
    },
    {
      "movie_id": 200,
      "company_id": 2,
    },
  ];
  movie_keyword = [
    {
      "movie_id": 100,
      "keyword_id": 1,
    },
    {
      "movie_id": 200,
      "keyword_id": 2,
    },
  ];
  title = [
    {
      "id": 100,
      "title": "Der Film",
    },
    {
      "id": 200,
      "title": "Other Movie",
    },
  ];
  titles = (() => {
    const _src = company_name;
    const _res = [];
    for (const cn of _src) {
      for (const mc of movie_companies) {
        if (!(mc.company_id == cn.id)) continue;
        for (const t of title) {
          if (!(mc.movie_id == t.id)) continue;
          for (const mk of movie_keyword) {
            if (!(mk.movie_id == t.id)) continue;
            for (const k of keyword) {
              if (!(mk.keyword_id == k.id)) continue;
              if (
                !(((cn.country_code == "[de]") &&
                  (k.keyword == "character-name-in-title")) &&
                  (mc.movie_id == mk.movie_id))
              ) continue;
              _res.push(t.title);
            }
          }
        }
      }
    }
    return _res;
  })();
  result = _min(titles);
  console.log(_json(result));
  test_Q2_finds_earliest_title_for_German_companies_with_character_keyword();
}
function _json(v: any): string {
  function _sort(x: any): any {
    if (Array.isArray(x)) return x.map(_sort);
    if (x && typeof x === "object") {
      const keys = Object.keys(x).sort();
      const o: any = {};
      for (const k of keys) o[k] = _sort(x[k]);
      return o;
    }
    return x;
  }
  return JSON.stringify(_sort(v), null, 2);
}

function _min(v: any): any {
  let list: any[] | null = null;
  if (Array.isArray(v)) list = v;
  else if (v && typeof v === "object") {
    if (Array.isArray((v as any).items)) list = (v as any).items;
    else if (Array.isArray((v as any).Items)) list = (v as any).Items;
  }
  if (!list || list.length === 0) return 0;
  let m: any = list[0];
  if (typeof m === "string") {
    for (const s of list) if (typeof s === "string" && s < m) m = s;
    return m;
  }
  let mv = Number(m);
  for (const n of list) {
    const num = Number(n);
    if (num < mv) mv = num;
  }
  return mv;
}

main();
