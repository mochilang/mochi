; Generated by Mochi compiler v0.10.25 on 2025-07-13T11:49:05Z
(ns main)

(defn _equal [a b]
  (cond
    (and (sequential? a) (sequential? b))
      (and (= (count a) (count b)) (every? true? (map _equal a b)))
    (and (map? a) (map? b))
      (and (= (count a) (count b))
           (every? (fn [k] (_equal (get a k) (get b k))) (keys a)))
    (and (number? a) (number? b))
      (= (double a) (double b))
    :else
      (= a b)))

(defn _escape_json [s]
  (-> s
      (clojure.string/replace "\\" "\\\\")
      (clojure.string/replace "\"" "\\\"")))

(defn _to_json [v]
  (cond
    (nil? v) "null"
    (string? v) (str "\"" (_escape_json v) "\"")
    (number? v) (str v)
    (boolean? v) (str v)
    (sequential? v) (str "[" (clojure.string/join "," (map _to_json v)) "]")
    (map? v) (str "{" (clojure.string/join "," (map (fn [[k val]]
                                        (str "\"" (_escape_json (name k)) "\":" (_to_json val))) v)) "}")
    :else (str "\"" (_escape_json (str v)) "\"")))

(defn _json [v]
  (println (_to_json v)))

(declare company_name company_type info_type movie_companies movie_info movie_info_idx title result)

(defn test_Q12_finds_high_rated_US_drama_or_horror_with_company []
  (assert (_equal result [{:movie_company "Best Pictures" :rating 8.3 :drama_horror_movie "Great Drama"}]) "expect failed")
)

(defn -main []
  (def company_name [{:id 1 :name "Best Pictures" :country_code "[us]"} {:id 2 :name "Foreign Films" :country_code "[uk]"}]) ;; list of
  (def company_type [{:id 10 :kind "production companies"} {:id 20 :kind "distributors"}]) ;; list of
  (def info_type [{:id 100 :info "genres"} {:id 200 :info "rating"}]) ;; list of
  (def movie_companies [{:movie_id 1000 :company_id 1 :company_type_id 10} {:movie_id 2000 :company_id 2 :company_type_id 10}]) ;; list of
  (def movie_info [{:movie_id 1000 :info_type_id 100 :info "Drama"} {:movie_id 2000 :info_type_id 100 :info "Horror"}]) ;; list of
  (def movie_info_idx [{:movie_id 1000 :info_type_id 200 :info 8.3} {:movie_id 2000 :info_type_id 200 :info 7.5}]) ;; list of
  (def title [{:id 1000 :production_year 2006 :title "Great Drama"} {:id 2000 :production_year 2007 :title "Low Rated"}]) ;; list of
  (def result (vec (->> (for [cn company_name mc movie_companies :when (_equal (:company_id mc) (:id cn)) ct company_type :when (_equal (:id ct) (:company_type_id mc)) t title :when (_equal (:id t) (:movie_id mc)) mi movie_info :when (_equal (:movie_id mi) (:id t)) it1 info_type :when (_equal (:id it1) (:info_type_id mi)) mi_idx movie_info_idx :when (_equal (:movie_id mi_idx) (:id t)) it2 info_type :when (_equal (:id it2) (:info_type_id mi_idx)) :when (and (and (and (and (and (and (and (_equal (:country_code cn) "[us]") (_equal (:kind ct) "production companies")) (_equal (:info it1) "genres")) (_equal (:info it2) "rating")) (or (_equal (:info mi) "Drama") (_equal (:info mi) "Horror"))) (> (:info mi_idx) 8.0)) (>= (:production_year t) 2005)) (<= (:production_year t) 2008))] {:movie_company (:name cn) :rating (:info mi_idx) :drama_horror_movie (:title t)})))) ;; list of
  (_json result)
  (test_Q12_finds_high_rated_US_drama_or_horror_with_company)
)

(-main)
