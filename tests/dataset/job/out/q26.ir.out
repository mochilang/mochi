func main (regs=578)
  // let complete_cast = [
  Const        r0, [{"movie_id": 1, "status_id": 2, "subject_id": 1}, {"movie_id": 2, "status_id": 2, "subject_id": 1}]
  // let comp_cast_type = [
  Const        r1, [{"id": 1, "kind": "cast"}, {"id": 2, "kind": "complete"}]
  // let char_name = [
  Const        r2, [{"id": 1, "name": "Spider-Man"}, {"id": 2, "name": "Villain"}]
  // let cast_info = [
  Const        r3, [{"movie_id": 1, "person_id": 1, "person_role_id": 1}, {"movie_id": 2, "person_id": 2, "person_role_id": 2}]
  // let info_type = [
  Const        r4, [{"id": 1, "info": "rating"}]
  // let keyword = [
  Const        r5, [{"id": 1, "keyword": "superhero"}, {"id": 2, "keyword": "comedy"}]
  // let kind_type = [
  Const        r6, [{"id": 1, "kind": "movie"}]
  // let movie_info_idx = [
  Const        r7, [{"info": 8.5, "info_type_id": 1, "movie_id": 1}, {"info": 6.5, "info_type_id": 1, "movie_id": 2}]
  // let movie_keyword = [
  Const        r8, [{"keyword_id": 1, "movie_id": 1}, {"keyword_id": 2, "movie_id": 2}]
  // let name = [
  Const        r9, [{"id": 1, "name": "Actor One"}, {"id": 2, "name": "Actor Two"}]
  // let title = [
  Const        r10, [{"id": 1, "kind_id": 1, "production_year": 2005, "title": "Hero Movie"}, {"id": 2, "kind_id": 1, "production_year": 1999, "title": "Old Film"}]
  // let allowed_keywords = [
  Const        r11, ["superhero", "marvel-comics", "based-on-comic", "tv-special", "fight", "violence", "magnet", "web", "claw", "laser"]
  // from cc in complete_cast
  Const        r12, []
  // where cct1.kind == "cast" &&
  Const        r13, "kind"
  // cct2.kind.contains("complete") &&
  Const        r14, "kind"
  Const        r15, "contains"
  // chn.name != null &&
  Const        r16, "name"
  // (chn.name.contains("man") || chn.name.contains("Man")) &&
  Const        r17, "name"
  Const        r18, "contains"
  Const        r19, "name"
  Const        r20, "contains"
  // it2.info == "rating" &&
  Const        r21, "info"
  // (k.keyword in allowed_keywords) &&
  Const        r22, "keyword"
  // kt.kind == "movie" &&
  Const        r23, "kind"
  // mi_idx.info > 7.0 &&
  Const        r24, "info"
  // t.production_year > 2000
  Const        r25, "production_year"
  // character: chn.name,
  Const        r26, "character"
  Const        r27, "name"
  // rating: mi_idx.info,
  Const        r28, "rating"
  Const        r29, "info"
  // actor: n.name,
  Const        r30, "actor"
  Const        r31, "name"
  // movie: t.title
  Const        r32, "movie"
  Const        r33, "title"
  // from cc in complete_cast
  IterPrep     r34, r0
  Len          r35, r34
  Const        r36, 0
L32:
  LessInt      r38, r36, r35
  JumpIfFalse  r38, L0
  Index        r40, r34, r36
  // join cct1 in comp_cast_type on cct1.id == cc.subject_id
  IterPrep     r41, r1
  Len          r42, r41
  Const        r43, "id"
  Const        r44, "subject_id"
  // where cct1.kind == "cast" &&
  Const        r45, "kind"
  // cct2.kind.contains("complete") &&
  Const        r46, "kind"
  Const        r47, "contains"
  // chn.name != null &&
  Const        r48, "name"
  // (chn.name.contains("man") || chn.name.contains("Man")) &&
  Const        r49, "name"
  Const        r50, "contains"
  Const        r51, "name"
  Const        r52, "contains"
  // it2.info == "rating" &&
  Const        r53, "info"
  // (k.keyword in allowed_keywords) &&
  Const        r54, "keyword"
  // kt.kind == "movie" &&
  Const        r55, "kind"
  // mi_idx.info > 7.0 &&
  Const        r56, "info"
  // t.production_year > 2000
  Const        r57, "production_year"
  // character: chn.name,
  Const        r58, "character"
  Const        r59, "name"
  // rating: mi_idx.info,
  Const        r60, "rating"
  Const        r61, "info"
  // actor: n.name,
  Const        r62, "actor"
  Const        r63, "name"
  // movie: t.title
  Const        r64, "movie"
  Const        r65, "title"
  // join cct1 in comp_cast_type on cct1.id == cc.subject_id
  Const        r66, 0
L31:
  LessInt      r68, r66, r42
  JumpIfFalse  r68, L1
  Index        r70, r41, r66
  Const        r71, "id"
  Index        r72, r70, r71
  Const        r73, "subject_id"
  Index        r74, r40, r73
  Equal        r75, r72, r74
  JumpIfFalse  r75, L2
  // join cct2 in comp_cast_type on cct2.id == cc.status_id
  IterPrep     r76, r1
  Len          r77, r76
  Const        r78, "id"
  Const        r79, "status_id"
  // where cct1.kind == "cast" &&
  Const        r80, "kind"
  // cct2.kind.contains("complete") &&
  Const        r81, "kind"
  Const        r82, "contains"
  // chn.name != null &&
  Const        r83, "name"
  // (chn.name.contains("man") || chn.name.contains("Man")) &&
  Const        r84, "name"
  Const        r85, "contains"
  Const        r86, "name"
  Const        r87, "contains"
  // it2.info == "rating" &&
  Const        r88, "info"
  // (k.keyword in allowed_keywords) &&
  Const        r89, "keyword"
  // kt.kind == "movie" &&
  Const        r90, "kind"
  // mi_idx.info > 7.0 &&
  Const        r91, "info"
  // t.production_year > 2000
  Const        r92, "production_year"
  // character: chn.name,
  Const        r93, "character"
  Const        r94, "name"
  // rating: mi_idx.info,
  Const        r95, "rating"
  Const        r96, "info"
  // actor: n.name,
  Const        r97, "actor"
  Const        r98, "name"
  // movie: t.title
  Const        r99, "movie"
  Const        r100, "title"
  // join cct2 in comp_cast_type on cct2.id == cc.status_id
  Const        r101, 0
L30:
  LessInt      r103, r101, r77
  JumpIfFalse  r103, L2
  Index        r105, r76, r101
  Const        r106, "id"
  Index        r107, r105, r106
  Const        r108, "status_id"
  Index        r109, r40, r108
  Equal        r110, r107, r109
  JumpIfFalse  r110, L3
  // join ci in cast_info on ci.movie_id == cc.movie_id
  IterPrep     r111, r3
  Len          r112, r111
  Const        r113, "movie_id"
  Const        r114, "movie_id"
  // where cct1.kind == "cast" &&
  Const        r115, "kind"
  // cct2.kind.contains("complete") &&
  Const        r116, "kind"
  Const        r117, "contains"
  // chn.name != null &&
  Const        r118, "name"
  // (chn.name.contains("man") || chn.name.contains("Man")) &&
  Const        r119, "name"
  Const        r120, "contains"
  Const        r121, "name"
  Const        r122, "contains"
  // it2.info == "rating" &&
  Const        r123, "info"
  // (k.keyword in allowed_keywords) &&
  Const        r124, "keyword"
  // kt.kind == "movie" &&
  Const        r125, "kind"
  // mi_idx.info > 7.0 &&
  Const        r126, "info"
  // t.production_year > 2000
  Const        r127, "production_year"
  // character: chn.name,
  Const        r128, "character"
  Const        r129, "name"
  // rating: mi_idx.info,
  Const        r130, "rating"
  Const        r131, "info"
  // actor: n.name,
  Const        r132, "actor"
  Const        r133, "name"
  // movie: t.title
  Const        r134, "movie"
  Const        r135, "title"
  // join ci in cast_info on ci.movie_id == cc.movie_id
  Const        r136, 0
L29:
  LessInt      r138, r136, r112
  JumpIfFalse  r138, L3
  Index        r140, r111, r136
  Const        r141, "movie_id"
  Index        r142, r140, r141
  Const        r143, "movie_id"
  Index        r144, r40, r143
  Equal        r145, r142, r144
  JumpIfFalse  r145, L4
  // join chn in char_name on chn.id == ci.person_role_id
  IterPrep     r146, r2
  Len          r147, r146
  Const        r148, "id"
  Const        r149, "person_role_id"
  // where cct1.kind == "cast" &&
  Const        r150, "kind"
  // cct2.kind.contains("complete") &&
  Const        r151, "kind"
  Const        r152, "contains"
  // chn.name != null &&
  Const        r153, "name"
  // (chn.name.contains("man") || chn.name.contains("Man")) &&
  Const        r154, "name"
  Const        r155, "contains"
  Const        r156, "name"
  Const        r157, "contains"
  // it2.info == "rating" &&
  Const        r158, "info"
  // (k.keyword in allowed_keywords) &&
  Const        r159, "keyword"
  // kt.kind == "movie" &&
  Const        r160, "kind"
  // mi_idx.info > 7.0 &&
  Const        r161, "info"
  // t.production_year > 2000
  Const        r162, "production_year"
  // character: chn.name,
  Const        r163, "character"
  Const        r164, "name"
  // rating: mi_idx.info,
  Const        r165, "rating"
  Const        r166, "info"
  // actor: n.name,
  Const        r167, "actor"
  Const        r168, "name"
  // movie: t.title
  Const        r169, "movie"
  Const        r170, "title"
  // join chn in char_name on chn.id == ci.person_role_id
  Const        r171, 0
L28:
  LessInt      r173, r171, r147
  JumpIfFalse  r173, L4
  Index        r175, r146, r171
  Const        r176, "id"
  Index        r177, r175, r176
  Const        r178, "person_role_id"
  Index        r179, r140, r178
  Equal        r180, r177, r179
  JumpIfFalse  r180, L5
  // join n in name on n.id == ci.person_id
  IterPrep     r181, r9
  Len          r182, r181
  Const        r183, "id"
  Const        r184, "person_id"
  // where cct1.kind == "cast" &&
  Const        r185, "kind"
  // cct2.kind.contains("complete") &&
  Const        r186, "kind"
  Const        r187, "contains"
  // chn.name != null &&
  Const        r188, "name"
  // (chn.name.contains("man") || chn.name.contains("Man")) &&
  Const        r189, "name"
  Const        r190, "contains"
  Const        r191, "name"
  Const        r192, "contains"
  // it2.info == "rating" &&
  Const        r193, "info"
  // (k.keyword in allowed_keywords) &&
  Const        r194, "keyword"
  // kt.kind == "movie" &&
  Const        r195, "kind"
  // mi_idx.info > 7.0 &&
  Const        r196, "info"
  // t.production_year > 2000
  Const        r197, "production_year"
  // character: chn.name,
  Const        r198, "character"
  Const        r199, "name"
  // rating: mi_idx.info,
  Const        r200, "rating"
  Const        r201, "info"
  // actor: n.name,
  Const        r202, "actor"
  Const        r203, "name"
  // movie: t.title
  Const        r204, "movie"
  Const        r205, "title"
  // join n in name on n.id == ci.person_id
  Const        r206, 0
L27:
  LessInt      r208, r206, r182
  JumpIfFalse  r208, L5
  Index        r210, r181, r206
  Const        r211, "id"
  Index        r212, r210, r211
  Const        r213, "person_id"
  Index        r214, r140, r213
  Equal        r215, r212, r214
  JumpIfFalse  r215, L6
  // join t in title on t.id == ci.movie_id
  IterPrep     r216, r10
  Len          r217, r216
  Const        r218, "id"
  Const        r219, "movie_id"
  // where cct1.kind == "cast" &&
  Const        r220, "kind"
  // cct2.kind.contains("complete") &&
  Const        r221, "kind"
  Const        r222, "contains"
  // chn.name != null &&
  Const        r223, "name"
  // (chn.name.contains("man") || chn.name.contains("Man")) &&
  Const        r224, "name"
  Const        r225, "contains"
  Const        r226, "name"
  Const        r227, "contains"
  // it2.info == "rating" &&
  Const        r228, "info"
  // (k.keyword in allowed_keywords) &&
  Const        r229, "keyword"
  // kt.kind == "movie" &&
  Const        r230, "kind"
  // mi_idx.info > 7.0 &&
  Const        r231, "info"
  // t.production_year > 2000
  Const        r232, "production_year"
  // character: chn.name,
  Const        r233, "character"
  Const        r234, "name"
  // rating: mi_idx.info,
  Const        r235, "rating"
  Const        r236, "info"
  // actor: n.name,
  Const        r237, "actor"
  Const        r238, "name"
  // movie: t.title
  Const        r239, "movie"
  Const        r240, "title"
  // join t in title on t.id == ci.movie_id
  Const        r241, 0
L26:
  LessInt      r243, r241, r217
  JumpIfFalse  r243, L6
  Index        r245, r216, r241
  Const        r246, "id"
  Index        r247, r245, r246
  Const        r248, "movie_id"
  Index        r249, r140, r248
  Equal        r250, r247, r249
  JumpIfFalse  r250, L7
  // join kt in kind_type on kt.id == t.kind_id
  IterPrep     r251, r6
  Len          r252, r251
  Const        r253, "id"
  Const        r254, "kind_id"
  // where cct1.kind == "cast" &&
  Const        r255, "kind"
  // cct2.kind.contains("complete") &&
  Const        r256, "kind"
  Const        r257, "contains"
  // chn.name != null &&
  Const        r258, "name"
  // (chn.name.contains("man") || chn.name.contains("Man")) &&
  Const        r259, "name"
  Const        r260, "contains"
  Const        r261, "name"
  Const        r262, "contains"
  // it2.info == "rating" &&
  Const        r263, "info"
  // (k.keyword in allowed_keywords) &&
  Const        r264, "keyword"
  // kt.kind == "movie" &&
  Const        r265, "kind"
  // mi_idx.info > 7.0 &&
  Const        r266, "info"
  // t.production_year > 2000
  Const        r267, "production_year"
  // character: chn.name,
  Const        r268, "character"
  Const        r269, "name"
  // rating: mi_idx.info,
  Const        r270, "rating"
  Const        r271, "info"
  // actor: n.name,
  Const        r272, "actor"
  Const        r273, "name"
  // movie: t.title
  Const        r274, "movie"
  Const        r275, "title"
  // join kt in kind_type on kt.id == t.kind_id
  Const        r276, 0
L25:
  LessInt      r278, r276, r252
  JumpIfFalse  r278, L7
  Index        r280, r251, r276
  Const        r281, "id"
  Index        r282, r280, r281
  Const        r283, "kind_id"
  Index        r284, r245, r283
  Equal        r285, r282, r284
  JumpIfFalse  r285, L8
  // join mk in movie_keyword on mk.movie_id == t.id
  IterPrep     r286, r8
  Len          r287, r286
  Const        r288, "movie_id"
  Const        r289, "id"
  // where cct1.kind == "cast" &&
  Const        r290, "kind"
  // cct2.kind.contains("complete") &&
  Const        r291, "kind"
  Const        r292, "contains"
  // chn.name != null &&
  Const        r293, "name"
  // (chn.name.contains("man") || chn.name.contains("Man")) &&
  Const        r294, "name"
  Const        r295, "contains"
  Const        r296, "name"
  Const        r297, "contains"
  // it2.info == "rating" &&
  Const        r298, "info"
  // (k.keyword in allowed_keywords) &&
  Const        r299, "keyword"
  // kt.kind == "movie" &&
  Const        r300, "kind"
  // mi_idx.info > 7.0 &&
  Const        r301, "info"
  // t.production_year > 2000
  Const        r302, "production_year"
  // character: chn.name,
  Const        r303, "character"
  Const        r304, "name"
  // rating: mi_idx.info,
  Const        r305, "rating"
  Const        r306, "info"
  // actor: n.name,
  Const        r307, "actor"
  Const        r308, "name"
  // movie: t.title
  Const        r309, "movie"
  Const        r310, "title"
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r311, 0
L24:
  LessInt      r313, r311, r287
  JumpIfFalse  r313, L8
  Index        r315, r286, r311
  Const        r316, "movie_id"
  Index        r317, r315, r316
  Const        r318, "id"
  Index        r319, r245, r318
  Equal        r320, r317, r319
  JumpIfFalse  r320, L9
  // join k in keyword on k.id == mk.keyword_id
  IterPrep     r321, r5
  Len          r322, r321
  Const        r323, "id"
  Const        r324, "keyword_id"
  // where cct1.kind == "cast" &&
  Const        r325, "kind"
  // cct2.kind.contains("complete") &&
  Const        r326, "kind"
  Const        r327, "contains"
  // chn.name != null &&
  Const        r328, "name"
  // (chn.name.contains("man") || chn.name.contains("Man")) &&
  Const        r329, "name"
  Const        r330, "contains"
  Const        r331, "name"
  Const        r332, "contains"
  // it2.info == "rating" &&
  Const        r333, "info"
  // (k.keyword in allowed_keywords) &&
  Const        r334, "keyword"
  // kt.kind == "movie" &&
  Const        r335, "kind"
  // mi_idx.info > 7.0 &&
  Const        r336, "info"
  // t.production_year > 2000
  Const        r337, "production_year"
  // character: chn.name,
  Const        r338, "character"
  Const        r339, "name"
  // rating: mi_idx.info,
  Const        r340, "rating"
  Const        r341, "info"
  // actor: n.name,
  Const        r342, "actor"
  Const        r343, "name"
  // movie: t.title
  Const        r344, "movie"
  Const        r345, "title"
  // join k in keyword on k.id == mk.keyword_id
  Const        r346, 0
L23:
  LessInt      r348, r346, r322
  JumpIfFalse  r348, L9
  Index        r350, r321, r346
  Const        r351, "id"
  Index        r352, r350, r351
  Const        r353, "keyword_id"
  Index        r354, r315, r353
  Equal        r355, r352, r354
  JumpIfFalse  r355, L10
  // join mi_idx in movie_info_idx on mi_idx.movie_id == t.id
  IterPrep     r356, r7
  Len          r357, r356
  Const        r358, "movie_id"
  Const        r359, "id"
  // where cct1.kind == "cast" &&
  Const        r360, "kind"
  // cct2.kind.contains("complete") &&
  Const        r361, "kind"
  Const        r362, "contains"
  // chn.name != null &&
  Const        r363, "name"
  // (chn.name.contains("man") || chn.name.contains("Man")) &&
  Const        r364, "name"
  Const        r365, "contains"
  Const        r366, "name"
  Const        r367, "contains"
  // it2.info == "rating" &&
  Const        r368, "info"
  // (k.keyword in allowed_keywords) &&
  Const        r369, "keyword"
  // kt.kind == "movie" &&
  Const        r370, "kind"
  // mi_idx.info > 7.0 &&
  Const        r371, "info"
  // t.production_year > 2000
  Const        r372, "production_year"
  // character: chn.name,
  Const        r373, "character"
  Const        r374, "name"
  // rating: mi_idx.info,
  Const        r375, "rating"
  Const        r376, "info"
  // actor: n.name,
  Const        r377, "actor"
  Const        r378, "name"
  // movie: t.title
  Const        r379, "movie"
  Const        r380, "title"
  // join mi_idx in movie_info_idx on mi_idx.movie_id == t.id
  Const        r381, 0
L22:
  LessInt      r383, r381, r357
  JumpIfFalse  r383, L10
  Index        r385, r356, r381
  Const        r386, "movie_id"
  Index        r387, r385, r386
  Const        r388, "id"
  Index        r389, r245, r388
  Equal        r390, r387, r389
  JumpIfFalse  r390, L11
  // join it2 in info_type on it2.id == mi_idx.info_type_id
  IterPrep     r391, r4
  Len          r392, r391
  Const        r393, "id"
  Const        r394, "info_type_id"
  // where cct1.kind == "cast" &&
  Const        r395, "kind"
  // cct2.kind.contains("complete") &&
  Const        r396, "kind"
  Const        r397, "contains"
  // chn.name != null &&
  Const        r398, "name"
  // (chn.name.contains("man") || chn.name.contains("Man")) &&
  Const        r399, "name"
  Const        r400, "contains"
  Const        r401, "name"
  Const        r402, "contains"
  // it2.info == "rating" &&
  Const        r403, "info"
  // (k.keyword in allowed_keywords) &&
  Const        r404, "keyword"
  // kt.kind == "movie" &&
  Const        r405, "kind"
  // mi_idx.info > 7.0 &&
  Const        r406, "info"
  // t.production_year > 2000
  Const        r407, "production_year"
  // character: chn.name,
  Const        r408, "character"
  Const        r409, "name"
  // rating: mi_idx.info,
  Const        r410, "rating"
  Const        r411, "info"
  // actor: n.name,
  Const        r412, "actor"
  Const        r413, "name"
  // movie: t.title
  Const        r414, "movie"
  Const        r415, "title"
  // join it2 in info_type on it2.id == mi_idx.info_type_id
  Const        r416, 0
L21:
  LessInt      r418, r416, r392
  JumpIfFalse  r418, L11
  Index        r420, r391, r416
  Const        r421, "id"
  Index        r422, r420, r421
  Const        r423, "info_type_id"
  Index        r424, r385, r423
  Equal        r425, r422, r424
  JumpIfFalse  r425, L12
  // where cct1.kind == "cast" &&
  Const        r426, "kind"
  Index        r427, r70, r426
  // mi_idx.info > 7.0 &&
  Const        r428, "info"
  Index        r429, r385, r428
  Const        r430, 7
  LessFloat    r431, r430, r429
  // t.production_year > 2000
  Const        r432, "production_year"
  Index        r433, r245, r432
  Const        r434, 2000
  Less         r435, r434, r433
  // where cct1.kind == "cast" &&
  Const        r436, "cast"
  Equal        r437, r427, r436
  // chn.name != null &&
  Const        r438, "name"
  Index        r439, r175, r438
  Const        r440, nil
  NotEqual     r441, r439, r440
  // it2.info == "rating" &&
  Const        r442, "info"
  Index        r443, r420, r442
  Const        r444, "rating"
  Equal        r445, r443, r444
  // kt.kind == "movie" &&
  Const        r446, "kind"
  Index        r447, r280, r446
  Const        r448, "movie"
  Equal        r449, r447, r448
  // where cct1.kind == "cast" &&
  Move         r450, r437
  JumpIfFalse  r450, L13
  Const        r451, "kind"
  Index        r452, r105, r451
  // cct2.kind.contains("complete") &&
  Const        r453, "complete"
  In           r455, r453, r452
L13:
  JumpIfFalse  r455, L14
L14:
  // chn.name != null &&
  Move         r456, r441
  JumpIfFalse  r456, L15
  Const        r457, "name"
  Index        r458, r175, r457
  // (chn.name.contains("man") || chn.name.contains("Man")) &&
  Const        r459, "man"
  In           r461, r459, r458
  JumpIfTrue   r461, L15
  Const        r462, "name"
  Index        r463, r175, r462
  Const        r464, "Man"
  In           r461, r464, r463
L15:
  Move         r466, r461
  JumpIfFalse  r466, L16
L16:
  // it2.info == "rating" &&
  Move         r467, r445
  JumpIfFalse  r467, L17
  // (k.keyword in allowed_keywords) &&
  Const        r468, "keyword"
  Index        r469, r350, r468
  In           r471, r469, r11
L17:
  JumpIfFalse  r471, L18
L18:
  // kt.kind == "movie" &&
  Move         r472, r449
  JumpIfFalse  r472, L19
L19:
  // mi_idx.info > 7.0 &&
  Move         r473, r431
  JumpIfFalse  r473, L20
  Move         r473, r435
L20:
  // where cct1.kind == "cast" &&
  JumpIfFalse  r473, L12
  // character: chn.name,
  Const        r474, "character"
  Const        r475, "name"
  Index        r476, r175, r475
  // rating: mi_idx.info,
  Const        r477, "rating"
  Const        r478, "info"
  Index        r479, r385, r478
  // actor: n.name,
  Const        r480, "actor"
  Const        r481, "name"
  Index        r482, r210, r481
  // movie: t.title
  Const        r483, "movie"
  Const        r484, "title"
  Index        r485, r245, r484
  // character: chn.name,
  Move         r486, r474
  Move         r487, r476
  // rating: mi_idx.info,
  Move         r488, r477
  Move         r489, r479
  // actor: n.name,
  Move         r490, r480
  Move         r491, r482
  // movie: t.title
  Move         r492, r483
  Move         r493, r485
  // select {
  MakeMap      r494, 4, r486
  // from cc in complete_cast
  Append       r12, r12, r494
L12:
  // join it2 in info_type on it2.id == mi_idx.info_type_id
  Const        r496, 1
  Add          r416, r416, r496
  Jump         L21
L11:
  // join mi_idx in movie_info_idx on mi_idx.movie_id == t.id
  Const        r497, 1
  Add          r381, r381, r497
  Jump         L22
L10:
  // join k in keyword on k.id == mk.keyword_id
  Const        r498, 1
  Add          r346, r346, r498
  Jump         L23
L9:
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r499, 1
  Add          r311, r311, r499
  Jump         L24
L8:
  // join kt in kind_type on kt.id == t.kind_id
  Const        r500, 1
  Add          r276, r276, r500
  Jump         L25
L7:
  // join t in title on t.id == ci.movie_id
  Const        r501, 1
  Add          r241, r241, r501
  Jump         L26
L6:
  // join n in name on n.id == ci.person_id
  Const        r502, 1
  Add          r206, r206, r502
  Jump         L27
L5:
  // join chn in char_name on chn.id == ci.person_role_id
  Const        r503, 1
  Add          r171, r171, r503
  Jump         L28
L4:
  // join ci in cast_info on ci.movie_id == cc.movie_id
  Const        r504, 1
  Add          r136, r136, r504
  Jump         L29
L3:
  // join cct2 in comp_cast_type on cct2.id == cc.status_id
  Const        r505, 1
  Add          r101, r101, r505
  Jump         L30
L2:
  // join cct1 in comp_cast_type on cct1.id == cc.subject_id
  Const        r506, 1
  Add          r66, r66, r506
  Jump         L31
L1:
  // from cc in complete_cast
  Const        r507, 1
  AddInt       r36, r36, r507
  Jump         L32
L0:
  // character_name: min(from r in rows select r.character),
  Const        r508, "character_name"
  Const        r509, []
  Const        r510, "character"
  IterPrep     r511, r12
  Len          r512, r511
  Const        r513, 0
L34:
  LessInt      r515, r513, r512
  JumpIfFalse  r515, L33
  Index        r517, r511, r513
  Const        r518, "character"
  Index        r519, r517, r518
  Append       r509, r509, r519
  Const        r521, 1
  AddInt       r513, r513, r521
  Jump         L34
L33:
  Min          r522, r509
  // rating: min(from r in rows select r.rating),
  Const        r523, "rating"
  Const        r524, []
  Const        r525, "rating"
  IterPrep     r526, r12
  Len          r527, r526
  Const        r528, 0
L36:
  LessInt      r530, r528, r527
  JumpIfFalse  r530, L35
  Index        r517, r526, r528
  Const        r532, "rating"
  Index        r533, r517, r532
  Append       r524, r524, r533
  Const        r535, 1
  AddInt       r528, r528, r535
  Jump         L36
L35:
  Min          r536, r524
  // playing_actor: min(from r in rows select r.actor),
  Const        r537, "playing_actor"
  Const        r538, []
  Const        r539, "actor"
  IterPrep     r540, r12
  Len          r541, r540
  Const        r542, 0
L38:
  LessInt      r544, r542, r541
  JumpIfFalse  r544, L37
  Index        r517, r540, r542
  Const        r546, "actor"
  Index        r547, r517, r546
  Append       r538, r538, r547
  Const        r549, 1
  AddInt       r542, r542, r549
  Jump         L38
L37:
  Min          r550, r538
  // complete_hero_movie: min(from r in rows select r.movie)
  Const        r551, "complete_hero_movie"
  Const        r552, []
  Const        r553, "movie"
  IterPrep     r554, r12
  Len          r555, r554
  Const        r556, 0
L40:
  LessInt      r558, r556, r555
  JumpIfFalse  r558, L39
  Index        r517, r554, r556
  Const        r560, "movie"
  Index        r561, r517, r560
  Append       r552, r552, r561
  Const        r563, 1
  AddInt       r556, r556, r563
  Jump         L40
L39:
  Min          r564, r552
  // character_name: min(from r in rows select r.character),
  Move         r565, r508
  Move         r566, r522
  // rating: min(from r in rows select r.rating),
  Move         r567, r523
  Move         r568, r536
  // playing_actor: min(from r in rows select r.actor),
  Move         r569, r537
  Move         r570, r550
  // complete_hero_movie: min(from r in rows select r.movie)
  Move         r571, r551
  Move         r572, r564
  // {
  MakeMap      r574, 4, r565
  // let result = [
  MakeList     r575, 1, r574
  // json(result)
  JSON         r575
  // expect result == [
  Const        r576, [{"character_name": "Spider-Man", "complete_hero_movie": "Hero Movie", "playing_actor": "Actor One", "rating": 8.5}]
  Equal        r577, r575, r576
  Expect       r577
  Return       r0
