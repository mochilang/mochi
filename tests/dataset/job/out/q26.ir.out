func main (regs=235)
  // let complete_cast = [
  Const        r0, [{"movie_id": 1, "status_id": 2, "subject_id": 1}, {"movie_id": 2, "status_id": 2, "subject_id": 1}]
  // let comp_cast_type = [
  Const        r1, [{"id": 1, "kind": "cast"}, {"id": 2, "kind": "complete"}]
  // let char_name = [
  Const        r2, [{"id": 1, "name": "Spider-Man"}, {"id": 2, "name": "Villain"}]
  // let cast_info = [
  Const        r3, [{"movie_id": 1, "person_id": 1, "person_role_id": 1}, {"movie_id": 2, "person_id": 2, "person_role_id": 2}]
  // let info_type = [
  Const        r4, [{"id": 1, "info": "rating"}]
  // let keyword = [
  Const        r5, [{"id": 1, "keyword": "superhero"}, {"id": 2, "keyword": "comedy"}]
  // let kind_type = [
  Const        r6, [{"id": 1, "kind": "movie"}]
  // let movie_info_idx = [
  Const        r7, [{"info": 8.5, "info_type_id": 1, "movie_id": 1}, {"info": 6.5, "info_type_id": 1, "movie_id": 2}]
  // let movie_keyword = [
  Const        r8, [{"keyword_id": 1, "movie_id": 1}, {"keyword_id": 2, "movie_id": 2}]
  // let name = [
  Const        r9, [{"id": 1, "name": "Actor One"}, {"id": 2, "name": "Actor Two"}]
  // let title = [
  Const        r10, [{"id": 1, "kind_id": 1, "production_year": 2005, "title": "Hero Movie"}, {"id": 2, "kind_id": 1, "production_year": 1999, "title": "Old Film"}]
  // let allowed_keywords = [
  Const        r11, ["superhero", "marvel-comics", "based-on-comic", "tv-special", "fight", "violence", "magnet", "web", "claw", "laser"]
  // from cc in complete_cast
  Const        r12, []
  // where cct1.kind == "cast" &&
  Const        r13, "kind"
  // chn.name != null &&
  Const        r15, "name"
  // it2.info == "rating" &&
  Const        r16, "info"
  // (k.keyword in allowed_keywords) &&
  Const        r17, "keyword"
  // t.production_year > 2000
  Const        r18, "production_year"
  // character: chn.name,
  Const        r19, "character"
  // rating: mi_idx.info,
  Const        r20, "rating"
  // actor: n.name,
  Const        r21, "actor"
  // movie: t.title
  Const        r22, "movie"
  Const        r23, "title"
  // from cc in complete_cast
  IterPrep     r24, r0
  Len          r25, r24
  Const        r27, 0
  Move         r26, r27
L32:
  LessInt      r28, r26, r25
  JumpIfFalse  r28, L0
  Index        r30, r24, r26
  // join cct1 in comp_cast_type on cct1.id == cc.subject_id
  IterPrep     r31, r1
  Len          r32, r31
  Const        r33, "id"
  Const        r34, "subject_id"
  Move         r35, r27
L31:
  LessInt      r36, r35, r32
  JumpIfFalse  r36, L1
  Index        r38, r31, r35
  Index        r39, r38, r33
  Index        r40, r30, r34
  Equal        r41, r39, r40
  JumpIfFalse  r41, L2
  // join cct2 in comp_cast_type on cct2.id == cc.status_id
  IterPrep     r42, r1
  Len          r43, r42
  Const        r44, "status_id"
  Move         r45, r27
L30:
  LessInt      r46, r45, r43
  JumpIfFalse  r46, L2
  Index        r48, r42, r45
  Index        r49, r48, r33
  Index        r50, r30, r44
  Equal        r51, r49, r50
  JumpIfFalse  r51, L3
  // join ci in cast_info on ci.movie_id == cc.movie_id
  IterPrep     r52, r3
  Len          r53, r52
  Const        r54, "movie_id"
  Move         r55, r27
L29:
  LessInt      r56, r55, r53
  JumpIfFalse  r56, L3
  Index        r58, r52, r55
  Index        r59, r58, r54
  Index        r60, r30, r54
  Equal        r61, r59, r60
  JumpIfFalse  r61, L4
  // join chn in char_name on chn.id == ci.person_role_id
  IterPrep     r62, r2
  Len          r63, r62
  Const        r64, "person_role_id"
  Move         r65, r27
L28:
  LessInt      r66, r65, r63
  JumpIfFalse  r66, L4
  Index        r68, r62, r65
  Index        r69, r68, r33
  Index        r70, r58, r64
  Equal        r71, r69, r70
  JumpIfFalse  r71, L5
  // join n in name on n.id == ci.person_id
  IterPrep     r72, r9
  Len          r73, r72
  Const        r74, "person_id"
  Move         r75, r27
L27:
  LessInt      r76, r75, r73
  JumpIfFalse  r76, L5
  Index        r78, r72, r75
  Index        r79, r78, r33
  Index        r80, r58, r74
  Equal        r81, r79, r80
  JumpIfFalse  r81, L6
  // join t in title on t.id == ci.movie_id
  IterPrep     r82, r10
  Len          r83, r82
  Move         r84, r27
L26:
  LessInt      r85, r84, r83
  JumpIfFalse  r85, L6
  Index        r87, r82, r84
  Index        r88, r87, r33
  Index        r89, r58, r54
  Equal        r90, r88, r89
  JumpIfFalse  r90, L7
  // join kt in kind_type on kt.id == t.kind_id
  IterPrep     r91, r6
  Len          r92, r91
  Const        r93, "kind_id"
  Move         r94, r27
L25:
  LessInt      r95, r94, r92
  JumpIfFalse  r95, L7
  Index        r97, r91, r94
  Index        r98, r97, r33
  Index        r99, r87, r93
  Equal        r100, r98, r99
  JumpIfFalse  r100, L8
  // join mk in movie_keyword on mk.movie_id == t.id
  IterPrep     r101, r8
  Len          r102, r101
  Move         r103, r27
L24:
  LessInt      r104, r103, r102
  JumpIfFalse  r104, L8
  Index        r106, r101, r103
  Index        r107, r106, r54
  Index        r108, r87, r33
  Equal        r109, r107, r108
  JumpIfFalse  r109, L9
  // join k in keyword on k.id == mk.keyword_id
  IterPrep     r110, r5
  Len          r111, r110
  Const        r112, "keyword_id"
  Move         r113, r27
L23:
  LessInt      r114, r113, r111
  JumpIfFalse  r114, L9
  Index        r116, r110, r113
  Index        r117, r116, r33
  Index        r118, r106, r112
  Equal        r119, r117, r118
  JumpIfFalse  r119, L10
  // join mi_idx in movie_info_idx on mi_idx.movie_id == t.id
  IterPrep     r120, r7
  Len          r121, r120
  Move         r122, r27
L22:
  LessInt      r123, r122, r121
  JumpIfFalse  r123, L10
  Index        r125, r120, r122
  Index        r126, r125, r54
  Index        r127, r87, r33
  Equal        r128, r126, r127
  JumpIfFalse  r128, L11
  // join it2 in info_type on it2.id == mi_idx.info_type_id
  IterPrep     r129, r4
  Len          r130, r129
  Const        r131, "info_type_id"
  Move         r132, r27
L21:
  LessInt      r133, r132, r130
  JumpIfFalse  r133, L11
  Index        r135, r129, r132
  Index        r136, r135, r33
  Index        r137, r125, r131
  Equal        r138, r136, r137
  JumpIfFalse  r138, L12
  // where cct1.kind == "cast" &&
  Index        r139, r38, r13
  // mi_idx.info > 7.0 &&
  Index        r140, r125, r16
  Const        r141, 7
  LessFloat    r142, r141, r140
  // t.production_year > 2000
  Index        r143, r87, r18
  Const        r144, 2000
  Less         r145, r144, r143
  // where cct1.kind == "cast" &&
  Const        r146, "cast"
  Equal        r147, r139, r146
  // chn.name != null &&
  Index        r148, r68, r15
  Const        r149, nil
  NotEqual     r150, r148, r149
  // it2.info == "rating" &&
  Index        r151, r135, r16
  Equal        r152, r151, r20
  // kt.kind == "movie" &&
  Index        r153, r97, r13
  Equal        r154, r153, r22
  // where cct1.kind == "cast" &&
  Move         r155, r147
  JumpIfFalse  r155, L13
  Index        r156, r48, r13
  // cct2.kind.contains("complete") &&
  Const        r157, "complete"
  In           r159, r157, r156
L13:
  JumpIfFalse  r159, L14
L14:
  // chn.name != null &&
  Move         r160, r150
  JumpIfFalse  r160, L15
  Index        r161, r68, r15
  // (chn.name.contains("man") || chn.name.contains("Man")) &&
  Const        r162, "man"
  In           r164, r162, r161
  JumpIfTrue   r164, L15
  Index        r165, r68, r15
  Const        r166, "Man"
  In           r164, r166, r165
L15:
  Move         r168, r164
  JumpIfFalse  r168, L16
L16:
  // it2.info == "rating" &&
  Move         r169, r152
  JumpIfFalse  r169, L17
  // (k.keyword in allowed_keywords) &&
  Index        r170, r116, r17
  In           r172, r170, r11
L17:
  JumpIfFalse  r172, L18
L18:
  // kt.kind == "movie" &&
  Move         r173, r154
  JumpIfFalse  r173, L19
L19:
  // mi_idx.info > 7.0 &&
  Move         r174, r142
  JumpIfFalse  r174, L20
  Move         r174, r145
L20:
  // where cct1.kind == "cast" &&
  JumpIfFalse  r174, L12
  // select {
  MakeMap      r183, 4, r19
  // from cc in complete_cast
  Append       r12, r12, r183
L12:
  // join it2 in info_type on it2.id == mi_idx.info_type_id
  Const        r185, 1
  Add          r132, r132, r185
  Jump         L21
L11:
  // join mi_idx in movie_info_idx on mi_idx.movie_id == t.id
  Add          r122, r122, r185
  Jump         L22
L10:
  // join k in keyword on k.id == mk.keyword_id
  Add          r113, r113, r185
  Jump         L23
L9:
  // join mk in movie_keyword on mk.movie_id == t.id
  Add          r103, r103, r185
  Jump         L24
L8:
  // join kt in kind_type on kt.id == t.kind_id
  Add          r94, r94, r185
  Jump         L25
L7:
  // join t in title on t.id == ci.movie_id
  Add          r84, r84, r185
  Jump         L26
L6:
  // join n in name on n.id == ci.person_id
  Add          r75, r75, r185
  Jump         L27
L5:
  // join chn in char_name on chn.id == ci.person_role_id
  Add          r65, r65, r185
  Jump         L28
L4:
  // join ci in cast_info on ci.movie_id == cc.movie_id
  Add          r55, r55, r185
  Jump         L29
L3:
  // join cct2 in comp_cast_type on cct2.id == cc.status_id
  Add          r45, r45, r185
  Jump         L30
L2:
  // join cct1 in comp_cast_type on cct1.id == cc.subject_id
  Jump         L31
L1:
  // from cc in complete_cast
  AddInt       r26, r26, r185
  Jump         L32
L0:
  // character_name: min(from r in rows select r.character),
  Const        r186, "character_name"
  Const        r187, []
  IterPrep     r188, r12
  Len          r189, r188
  Move         r190, r27
L34:
  LessInt      r191, r190, r189
  JumpIfFalse  r191, L33
  Index        r192, r188, r190
  Move         r193, r192
  Index        r194, r193, r19
  Append       r187, r187, r194
  AddInt       r190, r190, r185
  Jump         L34
L33:
  // rating: min(from r in rows select r.rating),
  Const        r197, []
  IterPrep     r198, r12
  Len          r199, r198
  Move         r200, r27
L36:
  LessInt      r201, r200, r199
  JumpIfFalse  r201, L35
  Index        r193, r198, r200
  Index        r203, r193, r20
  Append       r197, r197, r203
  AddInt       r200, r200, r185
  Jump         L36
L35:
  // playing_actor: min(from r in rows select r.actor),
  Const        r207, []
  IterPrep     r208, r12
  Len          r209, r208
  Move         r210, r27
L38:
  LessInt      r211, r210, r209
  JumpIfFalse  r211, L37
  Index        r193, r208, r210
  Index        r213, r193, r21
  Append       r207, r207, r213
  AddInt       r210, r210, r185
  Jump         L38
L37:
  // complete_hero_movie: min(from r in rows select r.movie)
  Const        r217, []
  IterPrep     r218, r12
  Len          r219, r218
  Move         r220, r27
L40:
  LessInt      r221, r220, r219
  JumpIfFalse  r221, L39
  Index        r193, r218, r220
  Index        r223, r193, r22
  Append       r217, r217, r223
  AddInt       r220, r220, r185
  Jump         L40
L39:
  // {
  MakeMap      r231, 4, r186
  // let result = [
  MakeList     r232, 1, r231
  // json(result)
  JSON         r232
  // expect result == [
  Const        r233, [{"character_name": "Spider-Man", "complete_hero_movie": "Hero Movie", "playing_actor": "Actor One", "rating": 8.5}]
  Equal        r234, r232, r233
  Expect       r234
  Return       r0
