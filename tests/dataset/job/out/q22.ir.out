func main (regs=1021)
  // let company_name = [
  Const        r0, [{"country_code": "[de]", "id": 1, "name": "Euro Films"}, {"country_code": "[us]", "id": 2, "name": "US Films"}]
  // let company_type = [
  Const        r1, [{"id": 1, "kind": "production"}]
  // let info_type = [
  Const        r2, [{"id": 10, "info": "countries"}, {"id": 20, "info": "rating"}]
  // let keyword = [
  Const        r3, [{"id": 1, "keyword": "murder"}, {"id": 2, "keyword": "comedy"}]
  // let kind_type = [
  Const        r4, [{"id": 100, "kind": "movie"}, {"id": 200, "kind": "episode"}]
  // let movie_companies = [
  Const        r5, [{"company_id": 1, "company_type_id": 1, "movie_id": 10, "note": "release (2009) (worldwide)"}, {"company_id": 2, "company_type_id": 1, "movie_id": 20, "note": "release (2007) (USA)"}]
  // let movie_info = [
  Const        r6, [{"info": "Germany", "info_type_id": 10, "movie_id": 10}, {"info": "USA", "info_type_id": 10, "movie_id": 20}]
  // let movie_info_idx = [
  Const        r7, [{"info": 6.5, "info_type_id": 20, "movie_id": 10}, {"info": 7.8, "info_type_id": 20, "movie_id": 20}]
  // let movie_keyword = [
  Const        r8, [{"keyword_id": 1, "movie_id": 10}, {"keyword_id": 2, "movie_id": 20}]
  // let title = [
  Const        r9, [{"id": 10, "kind_id": 100, "production_year": 2009, "title": "Violent Western"}, {"id": 20, "kind_id": 100, "production_year": 2007, "title": "Old Western"}]
  // from cn in company_name
  Const        r10, []
  // cn.country_code != "[us]" &&
  Const        r11, "country_code"
  // it1.info == "countries" &&
  Const        r12, "info"
  // it2.info == "rating" &&
  Const        r13, "info"
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  Const        r14, "keyword"
  Const        r15, "keyword"
  Const        r16, "keyword"
  Const        r17, "keyword"
  // (kt.kind == "movie" || kt.kind == "episode") &&
  Const        r18, "kind"
  Const        r19, "kind"
  // mc.note.contains("(USA)") == false &&
  Const        r20, "note"
  Const        r21, "contains"
  // mc.note.contains("(200") &&
  Const        r22, "note"
  Const        r23, "contains"
  // (mi.info == "Germany" || mi.info == "German" || mi.info == "USA" || mi.info == "American") &&
  Const        r24, "info"
  Const        r25, "info"
  Const        r26, "info"
  Const        r27, "info"
  // mi_idx.info < 7.0 &&
  Const        r28, "info"
  // t.production_year > 2008 &&
  Const        r29, "production_year"
  // kt.id == t.kind_id &&
  Const        r30, "id"
  Const        r31, "kind_id"
  // t.id == mi.movie_id &&
  Const        r32, "id"
  Const        r33, "movie_id"
  // t.id == mk.movie_id &&
  Const        r34, "id"
  Const        r35, "movie_id"
  // t.id == mi_idx.movie_id &&
  Const        r36, "id"
  Const        r37, "movie_id"
  // t.id == mc.movie_id &&
  Const        r38, "id"
  Const        r39, "movie_id"
  // mk.movie_id == mi.movie_id &&
  Const        r40, "movie_id"
  Const        r41, "movie_id"
  // mk.movie_id == mi_idx.movie_id &&
  Const        r42, "movie_id"
  Const        r43, "movie_id"
  // mk.movie_id == mc.movie_id &&
  Const        r44, "movie_id"
  Const        r45, "movie_id"
  // mi.movie_id == mi_idx.movie_id &&
  Const        r46, "movie_id"
  Const        r47, "movie_id"
  // mi.movie_id == mc.movie_id &&
  Const        r48, "movie_id"
  Const        r49, "movie_id"
  // mc.movie_id == mi_idx.movie_id &&
  Const        r50, "movie_id"
  Const        r51, "movie_id"
  // k.id == mk.keyword_id &&
  Const        r52, "id"
  Const        r53, "keyword_id"
  // it1.id == mi.info_type_id &&
  Const        r54, "id"
  Const        r55, "info_type_id"
  // it2.id == mi_idx.info_type_id &&
  Const        r56, "id"
  Const        r57, "info_type_id"
  // ct.id == mc.company_type_id &&
  Const        r58, "id"
  Const        r59, "company_type_id"
  // cn.id == mc.company_id
  Const        r60, "id"
  Const        r61, "company_id"
  // select { company: cn.name, rating: mi_idx.info, title: t.title }
  Const        r62, "company"
  Const        r63, "name"
  Const        r64, "rating"
  Const        r65, "info"
  Const        r66, "title"
  Const        r67, "title"
  // from cn in company_name
  IterPrep     r68, r0
  Len          r69, r68
  Const        r71, 0
  Move         r70, r71
L26:
  LessInt      r72, r70, r69
  JumpIfFalse  r72, L0
  Index        r73, r68, r70
  Move         r74, r73
  // join mc in movie_companies on cn.id == mc.company_id
  IterPrep     r75, r5
  Len          r76, r75
  Const        r77, "id"
  Const        r78, "company_id"
  // cn.country_code != "[us]" &&
  Const        r79, "country_code"
  // it1.info == "countries" &&
  Const        r80, "info"
  // it2.info == "rating" &&
  Const        r81, "info"
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  Const        r82, "keyword"
  Const        r83, "keyword"
  Const        r84, "keyword"
  Const        r85, "keyword"
  // (kt.kind == "movie" || kt.kind == "episode") &&
  Const        r86, "kind"
  Const        r87, "kind"
  // mc.note.contains("(USA)") == false &&
  Const        r88, "note"
  Const        r89, "contains"
  // mc.note.contains("(200") &&
  Const        r90, "note"
  Const        r91, "contains"
  // (mi.info == "Germany" || mi.info == "German" || mi.info == "USA" || mi.info == "American") &&
  Const        r92, "info"
  Const        r93, "info"
  Const        r94, "info"
  Const        r95, "info"
  // mi_idx.info < 7.0 &&
  Const        r96, "info"
  // t.production_year > 2008 &&
  Const        r97, "production_year"
  // kt.id == t.kind_id &&
  Const        r98, "id"
  Const        r99, "kind_id"
  // t.id == mi.movie_id &&
  Const        r100, "id"
  Const        r101, "movie_id"
  // t.id == mk.movie_id &&
  Const        r102, "id"
  Const        r103, "movie_id"
  // t.id == mi_idx.movie_id &&
  Const        r104, "id"
  Const        r105, "movie_id"
  // t.id == mc.movie_id &&
  Const        r106, "id"
  Const        r107, "movie_id"
  // mk.movie_id == mi.movie_id &&
  Const        r108, "movie_id"
  Const        r109, "movie_id"
  // mk.movie_id == mi_idx.movie_id &&
  Const        r110, "movie_id"
  Const        r111, "movie_id"
  // mk.movie_id == mc.movie_id &&
  Const        r112, "movie_id"
  Const        r113, "movie_id"
  // mi.movie_id == mi_idx.movie_id &&
  Const        r114, "movie_id"
  Const        r115, "movie_id"
  // mi.movie_id == mc.movie_id &&
  Const        r116, "movie_id"
  Const        r117, "movie_id"
  // mc.movie_id == mi_idx.movie_id &&
  Const        r118, "movie_id"
  Const        r119, "movie_id"
  // k.id == mk.keyword_id &&
  Const        r120, "id"
  Const        r121, "keyword_id"
  // it1.id == mi.info_type_id &&
  Const        r122, "id"
  Const        r123, "info_type_id"
  // it2.id == mi_idx.info_type_id &&
  Const        r124, "id"
  Const        r125, "info_type_id"
  // ct.id == mc.company_type_id &&
  Const        r126, "id"
  Const        r127, "company_type_id"
  // cn.id == mc.company_id
  Const        r128, "id"
  Const        r129, "company_id"
  // select { company: cn.name, rating: mi_idx.info, title: t.title }
  Const        r130, "company"
  Const        r131, "name"
  Const        r132, "rating"
  Const        r133, "info"
  Const        r134, "title"
  Const        r135, "title"
  // join mc in movie_companies on cn.id == mc.company_id
  Const        r137, 0
  Move         r136, r137
L25:
  LessInt      r138, r136, r76
  JumpIfFalse  r138, L1
  Index        r139, r75, r136
  Move         r140, r139
  Const        r141, "id"
  Index        r142, r74, r141
  Const        r143, "company_id"
  Index        r144, r140, r143
  Equal        r145, r142, r144
  JumpIfFalse  r145, L2
  // join ct in company_type on ct.id == mc.company_type_id
  IterPrep     r146, r1
  Len          r147, r146
  Const        r148, "id"
  Const        r149, "company_type_id"
  // cn.country_code != "[us]" &&
  Const        r150, "country_code"
  // it1.info == "countries" &&
  Const        r151, "info"
  // it2.info == "rating" &&
  Const        r152, "info"
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  Const        r153, "keyword"
  Const        r154, "keyword"
  Const        r155, "keyword"
  Const        r156, "keyword"
  // (kt.kind == "movie" || kt.kind == "episode") &&
  Const        r157, "kind"
  Const        r158, "kind"
  // mc.note.contains("(USA)") == false &&
  Const        r159, "note"
  Const        r160, "contains"
  // mc.note.contains("(200") &&
  Const        r161, "note"
  Const        r162, "contains"
  // (mi.info == "Germany" || mi.info == "German" || mi.info == "USA" || mi.info == "American") &&
  Const        r163, "info"
  Const        r164, "info"
  Const        r165, "info"
  Const        r166, "info"
  // mi_idx.info < 7.0 &&
  Const        r167, "info"
  // t.production_year > 2008 &&
  Const        r168, "production_year"
  // kt.id == t.kind_id &&
  Const        r169, "id"
  Const        r170, "kind_id"
  // t.id == mi.movie_id &&
  Const        r171, "id"
  Const        r172, "movie_id"
  // t.id == mk.movie_id &&
  Const        r173, "id"
  Const        r174, "movie_id"
  // t.id == mi_idx.movie_id &&
  Const        r175, "id"
  Const        r176, "movie_id"
  // t.id == mc.movie_id &&
  Const        r177, "id"
  Const        r178, "movie_id"
  // mk.movie_id == mi.movie_id &&
  Const        r179, "movie_id"
  Const        r180, "movie_id"
  // mk.movie_id == mi_idx.movie_id &&
  Const        r181, "movie_id"
  Const        r182, "movie_id"
  // mk.movie_id == mc.movie_id &&
  Const        r183, "movie_id"
  Const        r184, "movie_id"
  // mi.movie_id == mi_idx.movie_id &&
  Const        r185, "movie_id"
  Const        r186, "movie_id"
  // mi.movie_id == mc.movie_id &&
  Const        r187, "movie_id"
  Const        r188, "movie_id"
  // mc.movie_id == mi_idx.movie_id &&
  Const        r189, "movie_id"
  Const        r190, "movie_id"
  // k.id == mk.keyword_id &&
  Const        r191, "id"
  Const        r192, "keyword_id"
  // it1.id == mi.info_type_id &&
  Const        r193, "id"
  Const        r194, "info_type_id"
  // it2.id == mi_idx.info_type_id &&
  Const        r195, "id"
  Const        r196, "info_type_id"
  // ct.id == mc.company_type_id &&
  Const        r197, "id"
  Const        r198, "company_type_id"
  // cn.id == mc.company_id
  Const        r199, "id"
  Const        r200, "company_id"
  // select { company: cn.name, rating: mi_idx.info, title: t.title }
  Const        r201, "company"
  Const        r202, "name"
  Const        r203, "rating"
  Const        r204, "info"
  Const        r205, "title"
  Const        r206, "title"
  // join ct in company_type on ct.id == mc.company_type_id
  Const        r208, 0
  Move         r207, r208
L24:
  LessInt      r209, r207, r147
  JumpIfFalse  r209, L2
  Index        r210, r146, r207
  Move         r211, r210
  Const        r212, "id"
  Index        r213, r211, r212
  Const        r214, "company_type_id"
  Index        r215, r140, r214
  Equal        r216, r213, r215
  JumpIfFalse  r216, L3
  // join t in title on t.id == mc.movie_id
  IterPrep     r217, r9
  Len          r218, r217
  Const        r219, "id"
  Const        r220, "movie_id"
  // cn.country_code != "[us]" &&
  Const        r221, "country_code"
  // it1.info == "countries" &&
  Const        r222, "info"
  // it2.info == "rating" &&
  Const        r223, "info"
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  Const        r224, "keyword"
  Const        r225, "keyword"
  Const        r226, "keyword"
  Const        r227, "keyword"
  // (kt.kind == "movie" || kt.kind == "episode") &&
  Const        r228, "kind"
  Const        r229, "kind"
  // mc.note.contains("(USA)") == false &&
  Const        r230, "note"
  Const        r231, "contains"
  // mc.note.contains("(200") &&
  Const        r232, "note"
  Const        r233, "contains"
  // (mi.info == "Germany" || mi.info == "German" || mi.info == "USA" || mi.info == "American") &&
  Const        r234, "info"
  Const        r235, "info"
  Const        r236, "info"
  Const        r237, "info"
  // mi_idx.info < 7.0 &&
  Const        r238, "info"
  // t.production_year > 2008 &&
  Const        r239, "production_year"
  // kt.id == t.kind_id &&
  Const        r240, "id"
  Const        r241, "kind_id"
  // t.id == mi.movie_id &&
  Const        r242, "id"
  Const        r243, "movie_id"
  // t.id == mk.movie_id &&
  Const        r244, "id"
  Const        r245, "movie_id"
  // t.id == mi_idx.movie_id &&
  Const        r246, "id"
  Const        r247, "movie_id"
  // t.id == mc.movie_id &&
  Const        r248, "id"
  Const        r249, "movie_id"
  // mk.movie_id == mi.movie_id &&
  Const        r250, "movie_id"
  Const        r251, "movie_id"
  // mk.movie_id == mi_idx.movie_id &&
  Const        r252, "movie_id"
  Const        r253, "movie_id"
  // mk.movie_id == mc.movie_id &&
  Const        r254, "movie_id"
  Const        r255, "movie_id"
  // mi.movie_id == mi_idx.movie_id &&
  Const        r256, "movie_id"
  Const        r257, "movie_id"
  // mi.movie_id == mc.movie_id &&
  Const        r258, "movie_id"
  Const        r259, "movie_id"
  // mc.movie_id == mi_idx.movie_id &&
  Const        r260, "movie_id"
  Const        r261, "movie_id"
  // k.id == mk.keyword_id &&
  Const        r262, "id"
  Const        r263, "keyword_id"
  // it1.id == mi.info_type_id &&
  Const        r264, "id"
  Const        r265, "info_type_id"
  // it2.id == mi_idx.info_type_id &&
  Const        r266, "id"
  Const        r267, "info_type_id"
  // ct.id == mc.company_type_id &&
  Const        r268, "id"
  Const        r269, "company_type_id"
  // cn.id == mc.company_id
  Const        r270, "id"
  Const        r271, "company_id"
  // select { company: cn.name, rating: mi_idx.info, title: t.title }
  Const        r272, "company"
  Const        r273, "name"
  Const        r274, "rating"
  Const        r275, "info"
  Const        r276, "title"
  Const        r277, "title"
  // join t in title on t.id == mc.movie_id
  Const        r279, 0
  Move         r278, r279
L23:
  LessInt      r280, r278, r218
  JumpIfFalse  r280, L3
  Index        r281, r217, r278
  Move         r282, r281
  Const        r283, "id"
  Index        r284, r282, r283
  Const        r285, "movie_id"
  Index        r286, r140, r285
  Equal        r287, r284, r286
  JumpIfFalse  r287, L4
  // join mk in movie_keyword on mk.movie_id == t.id
  IterPrep     r288, r8
  Len          r289, r288
  Const        r290, "movie_id"
  Const        r291, "id"
  // cn.country_code != "[us]" &&
  Const        r292, "country_code"
  // it1.info == "countries" &&
  Const        r293, "info"
  // it2.info == "rating" &&
  Const        r294, "info"
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  Const        r295, "keyword"
  Const        r296, "keyword"
  Const        r297, "keyword"
  Const        r298, "keyword"
  // (kt.kind == "movie" || kt.kind == "episode") &&
  Const        r299, "kind"
  Const        r300, "kind"
  // mc.note.contains("(USA)") == false &&
  Const        r301, "note"
  Const        r302, "contains"
  // mc.note.contains("(200") &&
  Const        r303, "note"
  Const        r304, "contains"
  // (mi.info == "Germany" || mi.info == "German" || mi.info == "USA" || mi.info == "American") &&
  Const        r305, "info"
  Const        r306, "info"
  Const        r307, "info"
  Const        r308, "info"
  // mi_idx.info < 7.0 &&
  Const        r309, "info"
  // t.production_year > 2008 &&
  Const        r310, "production_year"
  // kt.id == t.kind_id &&
  Const        r311, "id"
  Const        r312, "kind_id"
  // t.id == mi.movie_id &&
  Const        r313, "id"
  Const        r314, "movie_id"
  // t.id == mk.movie_id &&
  Const        r315, "id"
  Const        r316, "movie_id"
  // t.id == mi_idx.movie_id &&
  Const        r317, "id"
  Const        r318, "movie_id"
  // t.id == mc.movie_id &&
  Const        r319, "id"
  Const        r320, "movie_id"
  // mk.movie_id == mi.movie_id &&
  Const        r321, "movie_id"
  Const        r322, "movie_id"
  // mk.movie_id == mi_idx.movie_id &&
  Const        r323, "movie_id"
  Const        r324, "movie_id"
  // mk.movie_id == mc.movie_id &&
  Const        r325, "movie_id"
  Const        r326, "movie_id"
  // mi.movie_id == mi_idx.movie_id &&
  Const        r327, "movie_id"
  Const        r328, "movie_id"
  // mi.movie_id == mc.movie_id &&
  Const        r329, "movie_id"
  Const        r330, "movie_id"
  // mc.movie_id == mi_idx.movie_id &&
  Const        r331, "movie_id"
  Const        r332, "movie_id"
  // k.id == mk.keyword_id &&
  Const        r333, "id"
  Const        r334, "keyword_id"
  // it1.id == mi.info_type_id &&
  Const        r335, "id"
  Const        r336, "info_type_id"
  // it2.id == mi_idx.info_type_id &&
  Const        r337, "id"
  Const        r338, "info_type_id"
  // ct.id == mc.company_type_id &&
  Const        r339, "id"
  Const        r340, "company_type_id"
  // cn.id == mc.company_id
  Const        r341, "id"
  Const        r342, "company_id"
  // select { company: cn.name, rating: mi_idx.info, title: t.title }
  Const        r343, "company"
  Const        r344, "name"
  Const        r345, "rating"
  Const        r346, "info"
  Const        r347, "title"
  Const        r348, "title"
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r350, 0
  Move         r349, r350
L22:
  LessInt      r351, r349, r289
  JumpIfFalse  r351, L4
  Index        r352, r288, r349
  Move         r353, r352
  Const        r354, "movie_id"
  Index        r355, r353, r354
  Const        r356, "id"
  Index        r357, r282, r356
  Equal        r358, r355, r357
  JumpIfFalse  r358, L5
  // join k in keyword on k.id == mk.keyword_id
  IterPrep     r359, r3
  Len          r360, r359
  Const        r361, "id"
  Const        r362, "keyword_id"
  // cn.country_code != "[us]" &&
  Const        r363, "country_code"
  // it1.info == "countries" &&
  Const        r364, "info"
  // it2.info == "rating" &&
  Const        r365, "info"
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  Const        r366, "keyword"
  Const        r367, "keyword"
  Const        r368, "keyword"
  Const        r369, "keyword"
  // (kt.kind == "movie" || kt.kind == "episode") &&
  Const        r370, "kind"
  Const        r371, "kind"
  // mc.note.contains("(USA)") == false &&
  Const        r372, "note"
  Const        r373, "contains"
  // mc.note.contains("(200") &&
  Const        r374, "note"
  Const        r375, "contains"
  // (mi.info == "Germany" || mi.info == "German" || mi.info == "USA" || mi.info == "American") &&
  Const        r376, "info"
  Const        r377, "info"
  Const        r378, "info"
  Const        r379, "info"
  // mi_idx.info < 7.0 &&
  Const        r380, "info"
  // t.production_year > 2008 &&
  Const        r381, "production_year"
  // kt.id == t.kind_id &&
  Const        r382, "id"
  Const        r383, "kind_id"
  // t.id == mi.movie_id &&
  Const        r384, "id"
  Const        r385, "movie_id"
  // t.id == mk.movie_id &&
  Const        r386, "id"
  Const        r387, "movie_id"
  // t.id == mi_idx.movie_id &&
  Const        r388, "id"
  Const        r389, "movie_id"
  // t.id == mc.movie_id &&
  Const        r390, "id"
  Const        r391, "movie_id"
  // mk.movie_id == mi.movie_id &&
  Const        r392, "movie_id"
  Const        r393, "movie_id"
  // mk.movie_id == mi_idx.movie_id &&
  Const        r394, "movie_id"
  Const        r395, "movie_id"
  // mk.movie_id == mc.movie_id &&
  Const        r396, "movie_id"
  Const        r397, "movie_id"
  // mi.movie_id == mi_idx.movie_id &&
  Const        r398, "movie_id"
  Const        r399, "movie_id"
  // mi.movie_id == mc.movie_id &&
  Const        r400, "movie_id"
  Const        r401, "movie_id"
  // mc.movie_id == mi_idx.movie_id &&
  Const        r402, "movie_id"
  Const        r403, "movie_id"
  // k.id == mk.keyword_id &&
  Const        r404, "id"
  Const        r405, "keyword_id"
  // it1.id == mi.info_type_id &&
  Const        r406, "id"
  Const        r407, "info_type_id"
  // it2.id == mi_idx.info_type_id &&
  Const        r408, "id"
  Const        r409, "info_type_id"
  // ct.id == mc.company_type_id &&
  Const        r410, "id"
  Const        r411, "company_type_id"
  // cn.id == mc.company_id
  Const        r412, "id"
  Const        r413, "company_id"
  // select { company: cn.name, rating: mi_idx.info, title: t.title }
  Const        r414, "company"
  Const        r415, "name"
  Const        r416, "rating"
  Const        r417, "info"
  Const        r418, "title"
  Const        r419, "title"
  // join k in keyword on k.id == mk.keyword_id
  Const        r421, 0
  Move         r420, r421
L21:
  LessInt      r422, r420, r360
  JumpIfFalse  r422, L5
  Index        r423, r359, r420
  Move         r424, r423
  Const        r425, "id"
  Index        r426, r424, r425
  Const        r427, "keyword_id"
  Index        r428, r353, r427
  Equal        r429, r426, r428
  JumpIfFalse  r429, L6
  // join mi in movie_info on mi.movie_id == t.id
  IterPrep     r430, r6
  Len          r431, r430
  Const        r432, "movie_id"
  Const        r433, "id"
  // cn.country_code != "[us]" &&
  Const        r434, "country_code"
  // it1.info == "countries" &&
  Const        r435, "info"
  // it2.info == "rating" &&
  Const        r436, "info"
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  Const        r437, "keyword"
  Const        r438, "keyword"
  Const        r439, "keyword"
  Const        r440, "keyword"
  // (kt.kind == "movie" || kt.kind == "episode") &&
  Const        r441, "kind"
  Const        r442, "kind"
  // mc.note.contains("(USA)") == false &&
  Const        r443, "note"
  Const        r444, "contains"
  // mc.note.contains("(200") &&
  Const        r445, "note"
  Const        r446, "contains"
  // (mi.info == "Germany" || mi.info == "German" || mi.info == "USA" || mi.info == "American") &&
  Const        r447, "info"
  Const        r448, "info"
  Const        r449, "info"
  Const        r450, "info"
  // mi_idx.info < 7.0 &&
  Const        r451, "info"
  // t.production_year > 2008 &&
  Const        r452, "production_year"
  // kt.id == t.kind_id &&
  Const        r453, "id"
  Const        r454, "kind_id"
  // t.id == mi.movie_id &&
  Const        r455, "id"
  Const        r456, "movie_id"
  // t.id == mk.movie_id &&
  Const        r457, "id"
  Const        r458, "movie_id"
  // t.id == mi_idx.movie_id &&
  Const        r459, "id"
  Const        r460, "movie_id"
  // t.id == mc.movie_id &&
  Const        r461, "id"
  Const        r462, "movie_id"
  // mk.movie_id == mi.movie_id &&
  Const        r463, "movie_id"
  Const        r464, "movie_id"
  // mk.movie_id == mi_idx.movie_id &&
  Const        r465, "movie_id"
  Const        r466, "movie_id"
  // mk.movie_id == mc.movie_id &&
  Const        r467, "movie_id"
  Const        r468, "movie_id"
  // mi.movie_id == mi_idx.movie_id &&
  Const        r469, "movie_id"
  Const        r470, "movie_id"
  // mi.movie_id == mc.movie_id &&
  Const        r471, "movie_id"
  Const        r472, "movie_id"
  // mc.movie_id == mi_idx.movie_id &&
  Const        r473, "movie_id"
  Const        r474, "movie_id"
  // k.id == mk.keyword_id &&
  Const        r475, "id"
  Const        r476, "keyword_id"
  // it1.id == mi.info_type_id &&
  Const        r477, "id"
  Const        r478, "info_type_id"
  // it2.id == mi_idx.info_type_id &&
  Const        r479, "id"
  Const        r480, "info_type_id"
  // ct.id == mc.company_type_id &&
  Const        r481, "id"
  Const        r482, "company_type_id"
  // cn.id == mc.company_id
  Const        r483, "id"
  Const        r484, "company_id"
  // select { company: cn.name, rating: mi_idx.info, title: t.title }
  Const        r485, "company"
  Const        r486, "name"
  Const        r487, "rating"
  Const        r488, "info"
  Const        r489, "title"
  Const        r490, "title"
  // join mi in movie_info on mi.movie_id == t.id
  Const        r492, 0
  Move         r491, r492
L20:
  LessInt      r493, r491, r431
  JumpIfFalse  r493, L6
  Index        r494, r430, r491
  Move         r495, r494
  Const        r496, "movie_id"
  Index        r497, r495, r496
  Const        r498, "id"
  Index        r499, r282, r498
  Equal        r500, r497, r499
  JumpIfFalse  r500, L7
  // join it1 in info_type on it1.id == mi.info_type_id
  IterPrep     r501, r2
  Len          r502, r501
  Const        r503, "id"
  Const        r504, "info_type_id"
  // cn.country_code != "[us]" &&
  Const        r505, "country_code"
  // it1.info == "countries" &&
  Const        r506, "info"
  // it2.info == "rating" &&
  Const        r507, "info"
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  Const        r508, "keyword"
  Const        r509, "keyword"
  Const        r510, "keyword"
  Const        r511, "keyword"
  // (kt.kind == "movie" || kt.kind == "episode") &&
  Const        r512, "kind"
  Const        r513, "kind"
  // mc.note.contains("(USA)") == false &&
  Const        r514, "note"
  Const        r515, "contains"
  // mc.note.contains("(200") &&
  Const        r516, "note"
  Const        r517, "contains"
  // (mi.info == "Germany" || mi.info == "German" || mi.info == "USA" || mi.info == "American") &&
  Const        r518, "info"
  Const        r519, "info"
  Const        r520, "info"
  Const        r521, "info"
  // mi_idx.info < 7.0 &&
  Const        r522, "info"
  // t.production_year > 2008 &&
  Const        r523, "production_year"
  // kt.id == t.kind_id &&
  Const        r524, "id"
  Const        r525, "kind_id"
  // t.id == mi.movie_id &&
  Const        r526, "id"
  Const        r527, "movie_id"
  // t.id == mk.movie_id &&
  Const        r528, "id"
  Const        r529, "movie_id"
  // t.id == mi_idx.movie_id &&
  Const        r530, "id"
  Const        r531, "movie_id"
  // t.id == mc.movie_id &&
  Const        r532, "id"
  Const        r533, "movie_id"
  // mk.movie_id == mi.movie_id &&
  Const        r534, "movie_id"
  Const        r535, "movie_id"
  // mk.movie_id == mi_idx.movie_id &&
  Const        r536, "movie_id"
  Const        r537, "movie_id"
  // mk.movie_id == mc.movie_id &&
  Const        r538, "movie_id"
  Const        r539, "movie_id"
  // mi.movie_id == mi_idx.movie_id &&
  Const        r540, "movie_id"
  Const        r541, "movie_id"
  // mi.movie_id == mc.movie_id &&
  Const        r542, "movie_id"
  Const        r543, "movie_id"
  // mc.movie_id == mi_idx.movie_id &&
  Const        r544, "movie_id"
  Const        r545, "movie_id"
  // k.id == mk.keyword_id &&
  Const        r546, "id"
  Const        r547, "keyword_id"
  // it1.id == mi.info_type_id &&
  Const        r548, "id"
  Const        r549, "info_type_id"
  // it2.id == mi_idx.info_type_id &&
  Const        r550, "id"
  Const        r551, "info_type_id"
  // ct.id == mc.company_type_id &&
  Const        r552, "id"
  Const        r553, "company_type_id"
  // cn.id == mc.company_id
  Const        r554, "id"
  Const        r555, "company_id"
  // select { company: cn.name, rating: mi_idx.info, title: t.title }
  Const        r556, "company"
  Const        r557, "name"
  Const        r558, "rating"
  Const        r559, "info"
  Const        r560, "title"
  Const        r561, "title"
  // join it1 in info_type on it1.id == mi.info_type_id
  Const        r563, 0
  Move         r562, r563
L19:
  LessInt      r564, r562, r502
  JumpIfFalse  r564, L7
  Index        r565, r501, r562
  Move         r566, r565
  Const        r567, "id"
  Index        r568, r566, r567
  Const        r569, "info_type_id"
  Index        r570, r495, r569
  Equal        r571, r568, r570
  JumpIfFalse  r571, L8
  // join mi_idx in movie_info_idx on mi_idx.movie_id == t.id
  IterPrep     r572, r7
  Len          r573, r572
  Const        r574, "movie_id"
  Const        r575, "id"
  // cn.country_code != "[us]" &&
  Const        r576, "country_code"
  // it1.info == "countries" &&
  Const        r577, "info"
  // it2.info == "rating" &&
  Const        r578, "info"
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  Const        r579, "keyword"
  Const        r580, "keyword"
  Const        r581, "keyword"
  Const        r582, "keyword"
  // (kt.kind == "movie" || kt.kind == "episode") &&
  Const        r583, "kind"
  Const        r584, "kind"
  // mc.note.contains("(USA)") == false &&
  Const        r585, "note"
  Const        r586, "contains"
  // mc.note.contains("(200") &&
  Const        r587, "note"
  Const        r588, "contains"
  // (mi.info == "Germany" || mi.info == "German" || mi.info == "USA" || mi.info == "American") &&
  Const        r589, "info"
  Const        r590, "info"
  Const        r591, "info"
  Const        r592, "info"
  // mi_idx.info < 7.0 &&
  Const        r593, "info"
  // t.production_year > 2008 &&
  Const        r594, "production_year"
  // kt.id == t.kind_id &&
  Const        r595, "id"
  Const        r596, "kind_id"
  // t.id == mi.movie_id &&
  Const        r597, "id"
  Const        r598, "movie_id"
  // t.id == mk.movie_id &&
  Const        r599, "id"
  Const        r600, "movie_id"
  // t.id == mi_idx.movie_id &&
  Const        r601, "id"
  Const        r602, "movie_id"
  // t.id == mc.movie_id &&
  Const        r603, "id"
  Const        r604, "movie_id"
  // mk.movie_id == mi.movie_id &&
  Const        r605, "movie_id"
  Const        r606, "movie_id"
  // mk.movie_id == mi_idx.movie_id &&
  Const        r607, "movie_id"
  Const        r608, "movie_id"
  // mk.movie_id == mc.movie_id &&
  Const        r609, "movie_id"
  Const        r610, "movie_id"
  // mi.movie_id == mi_idx.movie_id &&
  Const        r611, "movie_id"
  Const        r612, "movie_id"
  // mi.movie_id == mc.movie_id &&
  Const        r613, "movie_id"
  Const        r614, "movie_id"
  // mc.movie_id == mi_idx.movie_id &&
  Const        r615, "movie_id"
  Const        r616, "movie_id"
  // k.id == mk.keyword_id &&
  Const        r617, "id"
  Const        r618, "keyword_id"
  // it1.id == mi.info_type_id &&
  Const        r619, "id"
  Const        r620, "info_type_id"
  // it2.id == mi_idx.info_type_id &&
  Const        r621, "id"
  Const        r622, "info_type_id"
  // ct.id == mc.company_type_id &&
  Const        r623, "id"
  Const        r624, "company_type_id"
  // cn.id == mc.company_id
  Const        r625, "id"
  Const        r626, "company_id"
  // select { company: cn.name, rating: mi_idx.info, title: t.title }
  Const        r627, "company"
  Const        r628, "name"
  Const        r629, "rating"
  Const        r630, "info"
  Const        r631, "title"
  Const        r632, "title"
  // join mi_idx in movie_info_idx on mi_idx.movie_id == t.id
  Const        r634, 0
  Move         r633, r634
L18:
  LessInt      r635, r633, r573
  JumpIfFalse  r635, L8
  Index        r636, r572, r633
  Move         r637, r636
  Const        r638, "movie_id"
  Index        r639, r637, r638
  Const        r640, "id"
  Index        r641, r282, r640
  Equal        r642, r639, r641
  JumpIfFalse  r642, L9
  // join it2 in info_type on it2.id == mi_idx.info_type_id
  IterPrep     r643, r2
  Len          r644, r643
  Const        r645, "id"
  Const        r646, "info_type_id"
  // cn.country_code != "[us]" &&
  Const        r647, "country_code"
  // it1.info == "countries" &&
  Const        r648, "info"
  // it2.info == "rating" &&
  Const        r649, "info"
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  Const        r650, "keyword"
  Const        r651, "keyword"
  Const        r652, "keyword"
  Const        r653, "keyword"
  // (kt.kind == "movie" || kt.kind == "episode") &&
  Const        r654, "kind"
  Const        r655, "kind"
  // mc.note.contains("(USA)") == false &&
  Const        r656, "note"
  Const        r657, "contains"
  // mc.note.contains("(200") &&
  Const        r658, "note"
  Const        r659, "contains"
  // (mi.info == "Germany" || mi.info == "German" || mi.info == "USA" || mi.info == "American") &&
  Const        r660, "info"
  Const        r661, "info"
  Const        r662, "info"
  Const        r663, "info"
  // mi_idx.info < 7.0 &&
  Const        r664, "info"
  // t.production_year > 2008 &&
  Const        r665, "production_year"
  // kt.id == t.kind_id &&
  Const        r666, "id"
  Const        r667, "kind_id"
  // t.id == mi.movie_id &&
  Const        r668, "id"
  Const        r669, "movie_id"
  // t.id == mk.movie_id &&
  Const        r670, "id"
  Const        r671, "movie_id"
  // t.id == mi_idx.movie_id &&
  Const        r672, "id"
  Const        r673, "movie_id"
  // t.id == mc.movie_id &&
  Const        r674, "id"
  Const        r675, "movie_id"
  // mk.movie_id == mi.movie_id &&
  Const        r676, "movie_id"
  Const        r677, "movie_id"
  // mk.movie_id == mi_idx.movie_id &&
  Const        r678, "movie_id"
  Const        r679, "movie_id"
  // mk.movie_id == mc.movie_id &&
  Const        r680, "movie_id"
  Const        r681, "movie_id"
  // mi.movie_id == mi_idx.movie_id &&
  Const        r682, "movie_id"
  Const        r683, "movie_id"
  // mi.movie_id == mc.movie_id &&
  Const        r684, "movie_id"
  Const        r685, "movie_id"
  // mc.movie_id == mi_idx.movie_id &&
  Const        r686, "movie_id"
  Const        r687, "movie_id"
  // k.id == mk.keyword_id &&
  Const        r688, "id"
  Const        r689, "keyword_id"
  // it1.id == mi.info_type_id &&
  Const        r690, "id"
  Const        r691, "info_type_id"
  // it2.id == mi_idx.info_type_id &&
  Const        r692, "id"
  Const        r693, "info_type_id"
  // ct.id == mc.company_type_id &&
  Const        r694, "id"
  Const        r695, "company_type_id"
  // cn.id == mc.company_id
  Const        r696, "id"
  Const        r697, "company_id"
  // select { company: cn.name, rating: mi_idx.info, title: t.title }
  Const        r698, "company"
  Const        r699, "name"
  Const        r700, "rating"
  Const        r701, "info"
  Const        r702, "title"
  Const        r703, "title"
  // join it2 in info_type on it2.id == mi_idx.info_type_id
  Const        r705, 0
  Move         r704, r705
L17:
  LessInt      r706, r704, r644
  JumpIfFalse  r706, L9
  Index        r707, r643, r704
  Move         r708, r707
  Const        r709, "id"
  Index        r710, r708, r709
  Const        r711, "info_type_id"
  Index        r712, r637, r711
  Equal        r713, r710, r712
  JumpIfFalse  r713, L10
  // join kt in kind_type on kt.id == t.kind_id
  IterPrep     r714, r4
  Len          r715, r714
  Const        r716, "id"
  Const        r717, "kind_id"
  // cn.country_code != "[us]" &&
  Const        r718, "country_code"
  // it1.info == "countries" &&
  Const        r719, "info"
  // it2.info == "rating" &&
  Const        r720, "info"
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  Const        r721, "keyword"
  Const        r722, "keyword"
  Const        r723, "keyword"
  Const        r724, "keyword"
  // (kt.kind == "movie" || kt.kind == "episode") &&
  Const        r725, "kind"
  Const        r726, "kind"
  // mc.note.contains("(USA)") == false &&
  Const        r727, "note"
  Const        r728, "contains"
  // mc.note.contains("(200") &&
  Const        r729, "note"
  Const        r730, "contains"
  // (mi.info == "Germany" || mi.info == "German" || mi.info == "USA" || mi.info == "American") &&
  Const        r731, "info"
  Const        r732, "info"
  Const        r733, "info"
  Const        r734, "info"
  // mi_idx.info < 7.0 &&
  Const        r735, "info"
  // t.production_year > 2008 &&
  Const        r736, "production_year"
  // kt.id == t.kind_id &&
  Const        r737, "id"
  Const        r738, "kind_id"
  // t.id == mi.movie_id &&
  Const        r739, "id"
  Const        r740, "movie_id"
  // t.id == mk.movie_id &&
  Const        r741, "id"
  Const        r742, "movie_id"
  // t.id == mi_idx.movie_id &&
  Const        r743, "id"
  Const        r744, "movie_id"
  // t.id == mc.movie_id &&
  Const        r745, "id"
  Const        r746, "movie_id"
  // mk.movie_id == mi.movie_id &&
  Const        r747, "movie_id"
  Const        r748, "movie_id"
  // mk.movie_id == mi_idx.movie_id &&
  Const        r749, "movie_id"
  Const        r750, "movie_id"
  // mk.movie_id == mc.movie_id &&
  Const        r751, "movie_id"
  Const        r752, "movie_id"
  // mi.movie_id == mi_idx.movie_id &&
  Const        r753, "movie_id"
  Const        r754, "movie_id"
  // mi.movie_id == mc.movie_id &&
  Const        r755, "movie_id"
  Const        r756, "movie_id"
  // mc.movie_id == mi_idx.movie_id &&
  Const        r757, "movie_id"
  Const        r758, "movie_id"
  // k.id == mk.keyword_id &&
  Const        r759, "id"
  Const        r760, "keyword_id"
  // it1.id == mi.info_type_id &&
  Const        r761, "id"
  Const        r762, "info_type_id"
  // it2.id == mi_idx.info_type_id &&
  Const        r763, "id"
  Const        r764, "info_type_id"
  // ct.id == mc.company_type_id &&
  Const        r765, "id"
  Const        r766, "company_type_id"
  // cn.id == mc.company_id
  Const        r767, "id"
  Const        r768, "company_id"
  // select { company: cn.name, rating: mi_idx.info, title: t.title }
  Const        r769, "company"
  Const        r770, "name"
  Const        r771, "rating"
  Const        r772, "info"
  Const        r773, "title"
  Const        r774, "title"
  // join kt in kind_type on kt.id == t.kind_id
  Const        r776, 0
  Move         r775, r776
L16:
  LessInt      r777, r775, r715
  JumpIfFalse  r777, L10
  Index        r778, r714, r775
  Move         r779, r778
  Const        r780, "id"
  Index        r781, r779, r780
  Const        r782, "kind_id"
  Index        r783, r282, r782
  Equal        r784, r781, r783
  JumpIfFalse  r784, L11
  // cn.country_code != "[us]" &&
  Const        r785, "country_code"
  Index        r786, r74, r785
  // mi_idx.info < 7.0 &&
  Const        r787, "info"
  Index        r788, r637, r787
  Const        r789, 7
  LessFloat    r790, r788, r789
  // t.production_year > 2008 &&
  Const        r791, "production_year"
  Index        r792, r282, r791
  Const        r793, 2008
  Less         r794, r793, r792
  // cn.country_code != "[us]" &&
  Const        r795, "[us]"
  NotEqual     r796, r786, r795
  // it1.info == "countries" &&
  Const        r797, "info"
  Index        r798, r566, r797
  Const        r799, "countries"
  Equal        r800, r798, r799
  // it2.info == "rating" &&
  Const        r801, "info"
  Index        r802, r708, r801
  Const        r803, "rating"
  Equal        r804, r802, r803
  Const        r805, "note"
  Index        r806, r140, r805
  // mc.note.contains("(USA)") == false &&
  Const        r807, "(USA)"
  In           r808, r807, r806
  Const        r809, false
  Equal        r810, r808, r809
  // kt.id == t.kind_id &&
  Const        r811, "id"
  Index        r812, r779, r811
  Const        r813, "kind_id"
  Index        r814, r282, r813
  Equal        r815, r812, r814
  // t.id == mi.movie_id &&
  Const        r816, "id"
  Index        r817, r282, r816
  Const        r818, "movie_id"
  Index        r819, r495, r818
  Equal        r820, r817, r819
  // t.id == mk.movie_id &&
  Const        r821, "id"
  Index        r822, r282, r821
  Const        r823, "movie_id"
  Index        r824, r353, r823
  Equal        r825, r822, r824
  // t.id == mi_idx.movie_id &&
  Const        r826, "id"
  Index        r827, r282, r826
  Const        r828, "movie_id"
  Index        r829, r637, r828
  Equal        r830, r827, r829
  // t.id == mc.movie_id &&
  Const        r831, "id"
  Index        r832, r282, r831
  Const        r833, "movie_id"
  Index        r834, r140, r833
  Equal        r835, r832, r834
  // mk.movie_id == mi.movie_id &&
  Const        r836, "movie_id"
  Index        r837, r353, r836
  Const        r838, "movie_id"
  Index        r839, r495, r838
  Equal        r840, r837, r839
  // mk.movie_id == mi_idx.movie_id &&
  Const        r841, "movie_id"
  Index        r842, r353, r841
  Const        r843, "movie_id"
  Index        r844, r637, r843
  Equal        r845, r842, r844
  // mk.movie_id == mc.movie_id &&
  Const        r846, "movie_id"
  Index        r847, r353, r846
  Const        r848, "movie_id"
  Index        r849, r140, r848
  Equal        r850, r847, r849
  // mi.movie_id == mi_idx.movie_id &&
  Const        r851, "movie_id"
  Index        r852, r495, r851
  Const        r853, "movie_id"
  Index        r854, r637, r853
  Equal        r855, r852, r854
  // mi.movie_id == mc.movie_id &&
  Const        r856, "movie_id"
  Index        r857, r495, r856
  Const        r858, "movie_id"
  Index        r859, r140, r858
  Equal        r860, r857, r859
  // mc.movie_id == mi_idx.movie_id &&
  Const        r861, "movie_id"
  Index        r862, r140, r861
  Const        r863, "movie_id"
  Index        r864, r637, r863
  Equal        r865, r862, r864
  // k.id == mk.keyword_id &&
  Const        r866, "id"
  Index        r867, r424, r866
  Const        r868, "keyword_id"
  Index        r869, r353, r868
  Equal        r870, r867, r869
  // it1.id == mi.info_type_id &&
  Const        r871, "id"
  Index        r872, r566, r871
  Const        r873, "info_type_id"
  Index        r874, r495, r873
  Equal        r875, r872, r874
  // it2.id == mi_idx.info_type_id &&
  Const        r876, "id"
  Index        r877, r708, r876
  Const        r878, "info_type_id"
  Index        r879, r637, r878
  Equal        r880, r877, r879
  // ct.id == mc.company_type_id &&
  Const        r881, "id"
  Index        r882, r211, r881
  Const        r883, "company_type_id"
  Index        r884, r140, r883
  Equal        r885, r882, r884
  // cn.id == mc.company_id
  Const        r886, "id"
  Index        r887, r74, r886
  Const        r888, "company_id"
  Index        r889, r140, r888
  Equal        r890, r887, r889
  // cn.country_code != "[us]" &&
  Move         r891, r796
  JumpIfFalse  r891, L12
  Move         r891, r800
  // it1.info == "countries" &&
  JumpIfFalse  r891, L12
  Move         r891, r804
  // it2.info == "rating" &&
  JumpIfFalse  r891, L12
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  Const        r892, "keyword"
  Index        r893, r424, r892
  Const        r894, "murder"
  Equal        r895, r893, r894
  Const        r896, "keyword"
  Index        r897, r424, r896
  Const        r898, "murder-in-title"
  Equal        r899, r897, r898
  Const        r900, "keyword"
  Index        r901, r424, r900
  Const        r902, "blood"
  Equal        r903, r901, r902
  Const        r904, "keyword"
  Index        r905, r424, r904
  Const        r906, "violence"
  Equal        r907, r905, r906
  Move         r908, r895
  JumpIfTrue   r908, L13
  Move         r908, r899
  JumpIfTrue   r908, L13
  Move         r908, r903
  JumpIfTrue   r908, L13
  Move         r908, r907
L13:
  // it2.info == "rating" &&
  Move         r891, r908
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  JumpIfFalse  r891, L12
  // (kt.kind == "movie" || kt.kind == "episode") &&
  Const        r909, "kind"
  Index        r910, r779, r909
  Const        r911, "movie"
  Equal        r912, r910, r911
  Const        r913, "kind"
  Index        r914, r779, r913
  Const        r915, "episode"
  Equal        r916, r914, r915
  Move         r917, r912
  JumpIfTrue   r917, L14
  Move         r917, r916
L14:
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  Move         r891, r917
  // (kt.kind == "movie" || kt.kind == "episode") &&
  JumpIfFalse  r891, L12
  Move         r891, r810
  // mc.note.contains("(USA)") == false &&
  JumpIfFalse  r891, L12
  Const        r918, "note"
  Index        r919, r140, r918
  // mc.note.contains("(200") &&
  Const        r920, "(200"
  In           r921, r920, r919
  // mc.note.contains("(USA)") == false &&
  Move         r891, r921
  // mc.note.contains("(200") &&
  JumpIfFalse  r891, L12
  // (mi.info == "Germany" || mi.info == "German" || mi.info == "USA" || mi.info == "American") &&
  Const        r922, "info"
  Index        r923, r495, r922
  Const        r924, "Germany"
  Equal        r925, r923, r924
  Const        r926, "info"
  Index        r927, r495, r926
  Const        r928, "German"
  Equal        r929, r927, r928
  Const        r930, "info"
  Index        r931, r495, r930
  Const        r932, "USA"
  Equal        r933, r931, r932
  Const        r934, "info"
  Index        r935, r495, r934
  Const        r936, "American"
  Equal        r937, r935, r936
  Move         r938, r925
  JumpIfTrue   r938, L15
  Move         r938, r929
  JumpIfTrue   r938, L15
  Move         r938, r933
  JumpIfTrue   r938, L15
  Move         r938, r937
L15:
  // mc.note.contains("(200") &&
  Move         r891, r938
  // (mi.info == "Germany" || mi.info == "German" || mi.info == "USA" || mi.info == "American") &&
  JumpIfFalse  r891, L12
  Move         r891, r790
  // mi_idx.info < 7.0 &&
  JumpIfFalse  r891, L12
  Move         r891, r794
  // t.production_year > 2008 &&
  JumpIfFalse  r891, L12
  Move         r891, r815
  // kt.id == t.kind_id &&
  JumpIfFalse  r891, L12
  Move         r891, r820
  // t.id == mi.movie_id &&
  JumpIfFalse  r891, L12
  Move         r891, r825
  // t.id == mk.movie_id &&
  JumpIfFalse  r891, L12
  Move         r891, r830
  // t.id == mi_idx.movie_id &&
  JumpIfFalse  r891, L12
  Move         r891, r835
  // t.id == mc.movie_id &&
  JumpIfFalse  r891, L12
  Move         r891, r840
  // mk.movie_id == mi.movie_id &&
  JumpIfFalse  r891, L12
  Move         r891, r845
  // mk.movie_id == mi_idx.movie_id &&
  JumpIfFalse  r891, L12
  Move         r891, r850
  // mk.movie_id == mc.movie_id &&
  JumpIfFalse  r891, L12
  Move         r891, r855
  // mi.movie_id == mi_idx.movie_id &&
  JumpIfFalse  r891, L12
  Move         r891, r860
  // mi.movie_id == mc.movie_id &&
  JumpIfFalse  r891, L12
  Move         r891, r865
  // mc.movie_id == mi_idx.movie_id &&
  JumpIfFalse  r891, L12
  Move         r891, r870
  // k.id == mk.keyword_id &&
  JumpIfFalse  r891, L12
  Move         r891, r875
  // it1.id == mi.info_type_id &&
  JumpIfFalse  r891, L12
  Move         r891, r880
  // it2.id == mi_idx.info_type_id &&
  JumpIfFalse  r891, L12
  Move         r891, r885
  // ct.id == mc.company_type_id &&
  JumpIfFalse  r891, L12
  Move         r891, r890
L12:
  // where (
  JumpIfFalse  r891, L11
  // select { company: cn.name, rating: mi_idx.info, title: t.title }
  Const        r939, "company"
  Const        r940, "name"
  Index        r941, r74, r940
  Const        r942, "rating"
  Const        r943, "info"
  Index        r944, r637, r943
  Const        r945, "title"
  Const        r946, "title"
  Index        r947, r282, r946
  Move         r948, r939
  Move         r949, r941
  Move         r950, r942
  Move         r951, r944
  Move         r952, r945
  Move         r953, r947
  MakeMap      r954, 3, r948
  // from cn in company_name
  Append       r955, r10, r954
  Move         r10, r955
L11:
  // join kt in kind_type on kt.id == t.kind_id
  Const        r956, 1
  Add          r775, r775, r956
  Jump         L16
L10:
  // join it2 in info_type on it2.id == mi_idx.info_type_id
  Const        r957, 1
  Add          r704, r704, r957
  Jump         L17
L9:
  // join mi_idx in movie_info_idx on mi_idx.movie_id == t.id
  Const        r958, 1
  Add          r633, r633, r958
  Jump         L18
L8:
  // join it1 in info_type on it1.id == mi.info_type_id
  Const        r959, 1
  Add          r562, r562, r959
  Jump         L19
L7:
  // join mi in movie_info on mi.movie_id == t.id
  Const        r960, 1
  Add          r491, r491, r960
  Jump         L20
L6:
  // join k in keyword on k.id == mk.keyword_id
  Const        r961, 1
  Add          r420, r420, r961
  Jump         L21
L5:
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r962, 1
  Add          r349, r349, r962
  Jump         L22
L4:
  // join t in title on t.id == mc.movie_id
  Const        r963, 1
  Add          r278, r278, r963
  Jump         L23
L3:
  // join ct in company_type on ct.id == mc.company_type_id
  Const        r964, 1
  Add          r207, r207, r964
  Jump         L24
L2:
  // join mc in movie_companies on cn.id == mc.company_id
  Const        r965, 1
  Add          r136, r136, r965
  Jump         L25
L1:
  // from cn in company_name
  Const        r966, 1
  AddInt       r70, r70, r966
  Jump         L26
L0:
  // movie_company: min(from r in rows select r.company),
  Const        r967, "movie_company"
  Const        r968, []
  Const        r969, "company"
  IterPrep     r970, r10
  Len          r971, r970
  Const        r973, 0
  Move         r972, r973
L28:
  LessInt      r974, r972, r971
  JumpIfFalse  r974, L27
  Index        r975, r970, r972
  Move         r976, r975
  Const        r977, "company"
  Index        r978, r976, r977
  Append       r979, r968, r978
  Move         r968, r979
  Const        r980, 1
  AddInt       r972, r972, r980
  Jump         L28
L27:
  Min          r981, r968
  // rating: min(from r in rows select r.rating),
  Const        r982, "rating"
  Const        r983, []
  Const        r984, "rating"
  IterPrep     r985, r10
  Len          r986, r985
  Const        r988, 0
  Move         r987, r988
L30:
  LessInt      r989, r987, r986
  JumpIfFalse  r989, L29
  Index        r990, r985, r987
  Move         r976, r990
  Const        r991, "rating"
  Index        r992, r976, r991
  Append       r993, r983, r992
  Move         r983, r993
  Const        r994, 1
  AddInt       r987, r987, r994
  Jump         L30
L29:
  Min          r995, r983
  // western_violent_movie: min(from r in rows select r.title)
  Const        r996, "western_violent_movie"
  Const        r997, []
  Const        r998, "title"
  IterPrep     r999, r10
  Len          r1000, r999
  Const        r1002, 0
  Move         r1001, r1002
L32:
  LessInt      r1003, r1001, r1000
  JumpIfFalse  r1003, L31
  Index        r1004, r999, r1001
  Move         r976, r1004
  Const        r1005, "title"
  Index        r1006, r976, r1005
  Append       r1007, r997, r1006
  Move         r997, r1007
  Const        r1008, 1
  AddInt       r1001, r1001, r1008
  Jump         L32
L31:
  Min          r1009, r997
  // movie_company: min(from r in rows select r.company),
  Move         r1010, r967
  Move         r1011, r981
  // rating: min(from r in rows select r.rating),
  Move         r1012, r982
  Move         r1013, r995
  // western_violent_movie: min(from r in rows select r.title)
  Move         r1014, r996
  Move         r1015, r1009
  // {
  MakeMap      r1016, 3, r1010
  Move         r1017, r1016
  // let result = [
  MakeList     r1018, 1, r1017
  // json(result)
  JSON         r1018
  // expect result == [
  Const        r1019, [{"movie_company": "Euro Films", "rating": 6.5, "western_violent_movie": "Violent Western"}]
  Equal        r1020, r1018, r1019
  Expect       r1020
  Return       r0
