func main (regs=287)
  // let company_name = [
  Const        r0, [{"country_code": "[de]", "id": 1, "name": "Euro Films"}, {"country_code": "[us]", "id": 2, "name": "US Films"}]
  // let company_type = [
  Const        r1, [{"id": 1, "kind": "production"}]
  // let info_type = [
  Const        r2, [{"id": 10, "info": "countries"}, {"id": 20, "info": "rating"}]
  // let keyword = [
  Const        r3, [{"id": 1, "keyword": "murder"}, {"id": 2, "keyword": "comedy"}]
  // let kind_type = [
  Const        r4, [{"id": 100, "kind": "movie"}, {"id": 200, "kind": "episode"}]
  // let movie_companies = [
  Const        r5, [{"company_id": 1, "company_type_id": 1, "movie_id": 10, "note": "release (2009) (worldwide)"}, {"company_id": 2, "company_type_id": 1, "movie_id": 20, "note": "release (2007) (USA)"}]
  // let movie_info = [
  Const        r6, [{"info": "Germany", "info_type_id": 10, "movie_id": 10}, {"info": "USA", "info_type_id": 10, "movie_id": 20}]
  // let movie_info_idx = [
  Const        r7, [{"info": 6.5, "info_type_id": 20, "movie_id": 10}, {"info": 7.8, "info_type_id": 20, "movie_id": 20}]
  // let movie_keyword = [
  Const        r8, [{"keyword_id": 1, "movie_id": 10}, {"keyword_id": 2, "movie_id": 20}]
  // let title = [
  Const        r9, [{"id": 10, "kind_id": 100, "production_year": 2009, "title": "Violent Western"}, {"id": 20, "kind_id": 100, "production_year": 2007, "title": "Old Western"}]
  // from cn in company_name
  Const        r10, []
  // cn.country_code != "[us]" &&
  Const        r11, "country_code"
  // it1.info == "countries" &&
  Const        r12, "info"
  // it2.info == "rating" &&
  Const        r12, "info"
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  Const        r13, "keyword"
  Const        r13, "keyword"
  Const        r13, "keyword"
  Const        r13, "keyword"
  // (kt.kind == "movie" || kt.kind == "episode") &&
  Const        r14, "kind"
  Const        r14, "kind"
  // mc.note.contains("(USA)") == false &&
  Const        r15, "note"
  Const        r16, "contains"
  // mc.note.contains("(200") &&
  Const        r15, "note"
  Const        r16, "contains"
  // (mi.info == "Germany" || mi.info == "German" || mi.info == "USA" || mi.info == "American") &&
  Const        r12, "info"
  Const        r12, "info"
  Const        r12, "info"
  Const        r12, "info"
  // mi_idx.info < 7.0 &&
  Const        r12, "info"
  // t.production_year > 2008 &&
  Const        r17, "production_year"
  // kt.id == t.kind_id &&
  Const        r18, "id"
  Const        r19, "kind_id"
  // t.id == mi.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mk.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mi_idx.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mc.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // mk.movie_id == mi.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mk.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mk.movie_id == mc.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mi.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mi.movie_id == mc.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mc.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // k.id == mk.keyword_id &&
  Const        r18, "id"
  Const        r21, "keyword_id"
  // it1.id == mi.info_type_id &&
  Const        r18, "id"
  Const        r22, "info_type_id"
  // it2.id == mi_idx.info_type_id &&
  Const        r18, "id"
  Const        r22, "info_type_id"
  // ct.id == mc.company_type_id &&
  Const        r18, "id"
  Const        r23, "company_type_id"
  // cn.id == mc.company_id
  Const        r18, "id"
  Const        r24, "company_id"
  // select { company: cn.name, rating: mi_idx.info, title: t.title }
  Const        r25, "company"
  Const        r26, "name"
  Const        r27, "rating"
  Const        r12, "info"
  Const        r28, "title"
  Const        r28, "title"
  // from cn in company_name
  IterPrep     r29, r0
  Len          r30, r29
  Const        r32, 0
  Move         r31, r32
L26:
  LessInt      r33, r31, r30
  JumpIfFalse  r33, L0
  Index        r34, r29, r31
  Move         r35, r34
  // join mc in movie_companies on cn.id == mc.company_id
  IterPrep     r36, r5
  Len          r37, r36
  Const        r18, "id"
  Const        r24, "company_id"
  // cn.country_code != "[us]" &&
  Const        r11, "country_code"
  // it1.info == "countries" &&
  Const        r12, "info"
  // it2.info == "rating" &&
  Const        r12, "info"
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  Const        r13, "keyword"
  Const        r13, "keyword"
  Const        r13, "keyword"
  Const        r13, "keyword"
  // (kt.kind == "movie" || kt.kind == "episode") &&
  Const        r14, "kind"
  Const        r14, "kind"
  // mc.note.contains("(USA)") == false &&
  Const        r15, "note"
  Const        r16, "contains"
  // mc.note.contains("(200") &&
  Const        r15, "note"
  Const        r16, "contains"
  // (mi.info == "Germany" || mi.info == "German" || mi.info == "USA" || mi.info == "American") &&
  Const        r12, "info"
  Const        r12, "info"
  Const        r12, "info"
  Const        r12, "info"
  // mi_idx.info < 7.0 &&
  Const        r12, "info"
  // t.production_year > 2008 &&
  Const        r17, "production_year"
  // kt.id == t.kind_id &&
  Const        r18, "id"
  Const        r19, "kind_id"
  // t.id == mi.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mk.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mi_idx.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mc.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // mk.movie_id == mi.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mk.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mk.movie_id == mc.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mi.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mi.movie_id == mc.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mc.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // k.id == mk.keyword_id &&
  Const        r18, "id"
  Const        r21, "keyword_id"
  // it1.id == mi.info_type_id &&
  Const        r18, "id"
  Const        r22, "info_type_id"
  // it2.id == mi_idx.info_type_id &&
  Const        r18, "id"
  Const        r22, "info_type_id"
  // ct.id == mc.company_type_id &&
  Const        r18, "id"
  Const        r23, "company_type_id"
  // cn.id == mc.company_id
  Const        r18, "id"
  Const        r24, "company_id"
  // select { company: cn.name, rating: mi_idx.info, title: t.title }
  Const        r25, "company"
  Const        r26, "name"
  Const        r27, "rating"
  Const        r12, "info"
  Const        r28, "title"
  Const        r28, "title"
  // join mc in movie_companies on cn.id == mc.company_id
  Const        r32, 0
  Move         r38, r32
L25:
  LessInt      r39, r38, r37
  JumpIfFalse  r39, L1
  Index        r40, r36, r38
  Move         r41, r40
  Const        r18, "id"
  Index        r42, r35, r18
  Const        r24, "company_id"
  Index        r43, r41, r24
  Equal        r44, r42, r43
  JumpIfFalse  r44, L2
  // join ct in company_type on ct.id == mc.company_type_id
  IterPrep     r45, r1
  Len          r46, r45
  Const        r18, "id"
  Const        r23, "company_type_id"
  // cn.country_code != "[us]" &&
  Const        r11, "country_code"
  // it1.info == "countries" &&
  Const        r12, "info"
  // it2.info == "rating" &&
  Const        r12, "info"
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  Const        r13, "keyword"
  Const        r13, "keyword"
  Const        r13, "keyword"
  Const        r13, "keyword"
  // (kt.kind == "movie" || kt.kind == "episode") &&
  Const        r14, "kind"
  Const        r14, "kind"
  // mc.note.contains("(USA)") == false &&
  Const        r15, "note"
  Const        r16, "contains"
  // mc.note.contains("(200") &&
  Const        r15, "note"
  Const        r16, "contains"
  // (mi.info == "Germany" || mi.info == "German" || mi.info == "USA" || mi.info == "American") &&
  Const        r12, "info"
  Const        r12, "info"
  Const        r12, "info"
  Const        r12, "info"
  // mi_idx.info < 7.0 &&
  Const        r12, "info"
  // t.production_year > 2008 &&
  Const        r17, "production_year"
  // kt.id == t.kind_id &&
  Const        r18, "id"
  Const        r19, "kind_id"
  // t.id == mi.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mk.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mi_idx.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mc.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // mk.movie_id == mi.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mk.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mk.movie_id == mc.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mi.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mi.movie_id == mc.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mc.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // k.id == mk.keyword_id &&
  Const        r18, "id"
  Const        r21, "keyword_id"
  // it1.id == mi.info_type_id &&
  Const        r18, "id"
  Const        r22, "info_type_id"
  // it2.id == mi_idx.info_type_id &&
  Const        r18, "id"
  Const        r22, "info_type_id"
  // ct.id == mc.company_type_id &&
  Const        r18, "id"
  Const        r23, "company_type_id"
  // cn.id == mc.company_id
  Const        r18, "id"
  Const        r24, "company_id"
  // select { company: cn.name, rating: mi_idx.info, title: t.title }
  Const        r25, "company"
  Const        r26, "name"
  Const        r27, "rating"
  Const        r12, "info"
  Const        r28, "title"
  Const        r28, "title"
  // join ct in company_type on ct.id == mc.company_type_id
  Const        r32, 0
  Move         r47, r32
L24:
  LessInt      r48, r47, r46
  JumpIfFalse  r48, L2
  Index        r49, r45, r47
  Move         r50, r49
  Const        r18, "id"
  Index        r51, r50, r18
  Const        r23, "company_type_id"
  Index        r52, r41, r23
  Equal        r53, r51, r52
  JumpIfFalse  r53, L3
  // join t in title on t.id == mc.movie_id
  IterPrep     r54, r9
  Len          r55, r54
  Const        r18, "id"
  Const        r20, "movie_id"
  // cn.country_code != "[us]" &&
  Const        r11, "country_code"
  // it1.info == "countries" &&
  Const        r12, "info"
  // it2.info == "rating" &&
  Const        r12, "info"
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  Const        r13, "keyword"
  Const        r13, "keyword"
  Const        r13, "keyword"
  Const        r13, "keyword"
  // (kt.kind == "movie" || kt.kind == "episode") &&
  Const        r14, "kind"
  Const        r14, "kind"
  // mc.note.contains("(USA)") == false &&
  Const        r15, "note"
  Const        r16, "contains"
  // mc.note.contains("(200") &&
  Const        r15, "note"
  Const        r16, "contains"
  // (mi.info == "Germany" || mi.info == "German" || mi.info == "USA" || mi.info == "American") &&
  Const        r12, "info"
  Const        r12, "info"
  Const        r12, "info"
  Const        r12, "info"
  // mi_idx.info < 7.0 &&
  Const        r12, "info"
  // t.production_year > 2008 &&
  Const        r17, "production_year"
  // kt.id == t.kind_id &&
  Const        r18, "id"
  Const        r19, "kind_id"
  // t.id == mi.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mk.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mi_idx.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mc.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // mk.movie_id == mi.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mk.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mk.movie_id == mc.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mi.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mi.movie_id == mc.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mc.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // k.id == mk.keyword_id &&
  Const        r18, "id"
  Const        r21, "keyword_id"
  // it1.id == mi.info_type_id &&
  Const        r18, "id"
  Const        r22, "info_type_id"
  // it2.id == mi_idx.info_type_id &&
  Const        r18, "id"
  Const        r22, "info_type_id"
  // ct.id == mc.company_type_id &&
  Const        r18, "id"
  Const        r23, "company_type_id"
  // cn.id == mc.company_id
  Const        r18, "id"
  Const        r24, "company_id"
  // select { company: cn.name, rating: mi_idx.info, title: t.title }
  Const        r25, "company"
  Const        r26, "name"
  Const        r27, "rating"
  Const        r12, "info"
  Const        r28, "title"
  Const        r28, "title"
  // join t in title on t.id == mc.movie_id
  Const        r32, 0
  Move         r56, r32
L23:
  LessInt      r57, r56, r55
  JumpIfFalse  r57, L3
  Index        r58, r54, r56
  Move         r59, r58
  Const        r18, "id"
  Index        r60, r59, r18
  Const        r20, "movie_id"
  Index        r61, r41, r20
  Equal        r62, r60, r61
  JumpIfFalse  r62, L4
  // join mk in movie_keyword on mk.movie_id == t.id
  IterPrep     r63, r8
  Len          r64, r63
  Const        r20, "movie_id"
  Const        r18, "id"
  // cn.country_code != "[us]" &&
  Const        r11, "country_code"
  // it1.info == "countries" &&
  Const        r12, "info"
  // it2.info == "rating" &&
  Const        r12, "info"
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  Const        r13, "keyword"
  Const        r13, "keyword"
  Const        r13, "keyword"
  Const        r13, "keyword"
  // (kt.kind == "movie" || kt.kind == "episode") &&
  Const        r14, "kind"
  Const        r14, "kind"
  // mc.note.contains("(USA)") == false &&
  Const        r15, "note"
  Const        r16, "contains"
  // mc.note.contains("(200") &&
  Const        r15, "note"
  Const        r16, "contains"
  // (mi.info == "Germany" || mi.info == "German" || mi.info == "USA" || mi.info == "American") &&
  Const        r12, "info"
  Const        r12, "info"
  Const        r12, "info"
  Const        r12, "info"
  // mi_idx.info < 7.0 &&
  Const        r12, "info"
  // t.production_year > 2008 &&
  Const        r17, "production_year"
  // kt.id == t.kind_id &&
  Const        r18, "id"
  Const        r19, "kind_id"
  // t.id == mi.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mk.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mi_idx.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mc.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // mk.movie_id == mi.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mk.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mk.movie_id == mc.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mi.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mi.movie_id == mc.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mc.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // k.id == mk.keyword_id &&
  Const        r18, "id"
  Const        r21, "keyword_id"
  // it1.id == mi.info_type_id &&
  Const        r18, "id"
  Const        r22, "info_type_id"
  // it2.id == mi_idx.info_type_id &&
  Const        r18, "id"
  Const        r22, "info_type_id"
  // ct.id == mc.company_type_id &&
  Const        r18, "id"
  Const        r23, "company_type_id"
  // cn.id == mc.company_id
  Const        r18, "id"
  Const        r24, "company_id"
  // select { company: cn.name, rating: mi_idx.info, title: t.title }
  Const        r25, "company"
  Const        r26, "name"
  Const        r27, "rating"
  Const        r12, "info"
  Const        r28, "title"
  Const        r28, "title"
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r32, 0
  Move         r65, r32
L22:
  LessInt      r66, r65, r64
  JumpIfFalse  r66, L4
  Index        r67, r63, r65
  Move         r68, r67
  Const        r20, "movie_id"
  Index        r69, r68, r20
  Const        r18, "id"
  Index        r70, r59, r18
  Equal        r71, r69, r70
  JumpIfFalse  r71, L5
  // join k in keyword on k.id == mk.keyword_id
  IterPrep     r72, r3
  Len          r73, r72
  Const        r18, "id"
  Const        r21, "keyword_id"
  // cn.country_code != "[us]" &&
  Const        r11, "country_code"
  // it1.info == "countries" &&
  Const        r12, "info"
  // it2.info == "rating" &&
  Const        r12, "info"
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  Const        r13, "keyword"
  Const        r13, "keyword"
  Const        r13, "keyword"
  Const        r13, "keyword"
  // (kt.kind == "movie" || kt.kind == "episode") &&
  Const        r14, "kind"
  Const        r14, "kind"
  // mc.note.contains("(USA)") == false &&
  Const        r15, "note"
  Const        r16, "contains"
  // mc.note.contains("(200") &&
  Const        r15, "note"
  Const        r16, "contains"
  // (mi.info == "Germany" || mi.info == "German" || mi.info == "USA" || mi.info == "American") &&
  Const        r12, "info"
  Const        r12, "info"
  Const        r12, "info"
  Const        r12, "info"
  // mi_idx.info < 7.0 &&
  Const        r12, "info"
  // t.production_year > 2008 &&
  Const        r17, "production_year"
  // kt.id == t.kind_id &&
  Const        r18, "id"
  Const        r19, "kind_id"
  // t.id == mi.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mk.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mi_idx.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mc.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // mk.movie_id == mi.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mk.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mk.movie_id == mc.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mi.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mi.movie_id == mc.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mc.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // k.id == mk.keyword_id &&
  Const        r18, "id"
  Const        r21, "keyword_id"
  // it1.id == mi.info_type_id &&
  Const        r18, "id"
  Const        r22, "info_type_id"
  // it2.id == mi_idx.info_type_id &&
  Const        r18, "id"
  Const        r22, "info_type_id"
  // ct.id == mc.company_type_id &&
  Const        r18, "id"
  Const        r23, "company_type_id"
  // cn.id == mc.company_id
  Const        r18, "id"
  Const        r24, "company_id"
  // select { company: cn.name, rating: mi_idx.info, title: t.title }
  Const        r25, "company"
  Const        r26, "name"
  Const        r27, "rating"
  Const        r12, "info"
  Const        r28, "title"
  Const        r28, "title"
  // join k in keyword on k.id == mk.keyword_id
  Const        r32, 0
  Move         r74, r32
L21:
  LessInt      r75, r74, r73
  JumpIfFalse  r75, L5
  Index        r76, r72, r74
  Move         r77, r76
  Const        r18, "id"
  Index        r78, r77, r18
  Const        r21, "keyword_id"
  Index        r79, r68, r21
  Equal        r80, r78, r79
  JumpIfFalse  r80, L6
  // join mi in movie_info on mi.movie_id == t.id
  IterPrep     r81, r6
  Len          r82, r81
  Const        r20, "movie_id"
  Const        r18, "id"
  // cn.country_code != "[us]" &&
  Const        r11, "country_code"
  // it1.info == "countries" &&
  Const        r12, "info"
  // it2.info == "rating" &&
  Const        r12, "info"
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  Const        r13, "keyword"
  Const        r13, "keyword"
  Const        r13, "keyword"
  Const        r13, "keyword"
  // (kt.kind == "movie" || kt.kind == "episode") &&
  Const        r14, "kind"
  Const        r14, "kind"
  // mc.note.contains("(USA)") == false &&
  Const        r15, "note"
  Const        r16, "contains"
  // mc.note.contains("(200") &&
  Const        r15, "note"
  Const        r16, "contains"
  // (mi.info == "Germany" || mi.info == "German" || mi.info == "USA" || mi.info == "American") &&
  Const        r12, "info"
  Const        r12, "info"
  Const        r12, "info"
  Const        r12, "info"
  // mi_idx.info < 7.0 &&
  Const        r12, "info"
  // t.production_year > 2008 &&
  Const        r17, "production_year"
  // kt.id == t.kind_id &&
  Const        r18, "id"
  Const        r19, "kind_id"
  // t.id == mi.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mk.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mi_idx.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mc.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // mk.movie_id == mi.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mk.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mk.movie_id == mc.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mi.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mi.movie_id == mc.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mc.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // k.id == mk.keyword_id &&
  Const        r18, "id"
  Const        r21, "keyword_id"
  // it1.id == mi.info_type_id &&
  Const        r18, "id"
  Const        r22, "info_type_id"
  // it2.id == mi_idx.info_type_id &&
  Const        r18, "id"
  Const        r22, "info_type_id"
  // ct.id == mc.company_type_id &&
  Const        r18, "id"
  Const        r23, "company_type_id"
  // cn.id == mc.company_id
  Const        r18, "id"
  Const        r24, "company_id"
  // select { company: cn.name, rating: mi_idx.info, title: t.title }
  Const        r25, "company"
  Const        r26, "name"
  Const        r27, "rating"
  Const        r12, "info"
  Const        r28, "title"
  Const        r28, "title"
  // join mi in movie_info on mi.movie_id == t.id
  Const        r32, 0
  Move         r83, r32
L20:
  LessInt      r84, r83, r82
  JumpIfFalse  r84, L6
  Index        r85, r81, r83
  Move         r86, r85
  Const        r20, "movie_id"
  Index        r87, r86, r20
  Const        r18, "id"
  Index        r88, r59, r18
  Equal        r89, r87, r88
  JumpIfFalse  r89, L7
  // join it1 in info_type on it1.id == mi.info_type_id
  IterPrep     r90, r2
  Len          r91, r90
  Const        r18, "id"
  Const        r22, "info_type_id"
  // cn.country_code != "[us]" &&
  Const        r11, "country_code"
  // it1.info == "countries" &&
  Const        r12, "info"
  // it2.info == "rating" &&
  Const        r12, "info"
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  Const        r13, "keyword"
  Const        r13, "keyword"
  Const        r13, "keyword"
  Const        r13, "keyword"
  // (kt.kind == "movie" || kt.kind == "episode") &&
  Const        r14, "kind"
  Const        r14, "kind"
  // mc.note.contains("(USA)") == false &&
  Const        r15, "note"
  Const        r16, "contains"
  // mc.note.contains("(200") &&
  Const        r15, "note"
  Const        r16, "contains"
  // (mi.info == "Germany" || mi.info == "German" || mi.info == "USA" || mi.info == "American") &&
  Const        r12, "info"
  Const        r12, "info"
  Const        r12, "info"
  Const        r12, "info"
  // mi_idx.info < 7.0 &&
  Const        r12, "info"
  // t.production_year > 2008 &&
  Const        r17, "production_year"
  // kt.id == t.kind_id &&
  Const        r18, "id"
  Const        r19, "kind_id"
  // t.id == mi.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mk.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mi_idx.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mc.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // mk.movie_id == mi.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mk.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mk.movie_id == mc.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mi.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mi.movie_id == mc.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mc.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // k.id == mk.keyword_id &&
  Const        r18, "id"
  Const        r21, "keyword_id"
  // it1.id == mi.info_type_id &&
  Const        r18, "id"
  Const        r22, "info_type_id"
  // it2.id == mi_idx.info_type_id &&
  Const        r18, "id"
  Const        r22, "info_type_id"
  // ct.id == mc.company_type_id &&
  Const        r18, "id"
  Const        r23, "company_type_id"
  // cn.id == mc.company_id
  Const        r18, "id"
  Const        r24, "company_id"
  // select { company: cn.name, rating: mi_idx.info, title: t.title }
  Const        r25, "company"
  Const        r26, "name"
  Const        r27, "rating"
  Const        r12, "info"
  Const        r28, "title"
  Const        r28, "title"
  // join it1 in info_type on it1.id == mi.info_type_id
  Const        r32, 0
  Move         r92, r32
L19:
  LessInt      r93, r92, r91
  JumpIfFalse  r93, L7
  Index        r94, r90, r92
  Move         r95, r94
  Const        r18, "id"
  Index        r96, r95, r18
  Const        r22, "info_type_id"
  Index        r97, r86, r22
  Equal        r98, r96, r97
  JumpIfFalse  r98, L8
  // join mi_idx in movie_info_idx on mi_idx.movie_id == t.id
  IterPrep     r99, r7
  Len          r100, r99
  Const        r20, "movie_id"
  Const        r18, "id"
  // cn.country_code != "[us]" &&
  Const        r11, "country_code"
  // it1.info == "countries" &&
  Const        r12, "info"
  // it2.info == "rating" &&
  Const        r12, "info"
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  Const        r13, "keyword"
  Const        r13, "keyword"
  Const        r13, "keyword"
  Const        r13, "keyword"
  // (kt.kind == "movie" || kt.kind == "episode") &&
  Const        r14, "kind"
  Const        r14, "kind"
  // mc.note.contains("(USA)") == false &&
  Const        r15, "note"
  Const        r16, "contains"
  // mc.note.contains("(200") &&
  Const        r15, "note"
  Const        r16, "contains"
  // (mi.info == "Germany" || mi.info == "German" || mi.info == "USA" || mi.info == "American") &&
  Const        r12, "info"
  Const        r12, "info"
  Const        r12, "info"
  Const        r12, "info"
  // mi_idx.info < 7.0 &&
  Const        r12, "info"
  // t.production_year > 2008 &&
  Const        r17, "production_year"
  // kt.id == t.kind_id &&
  Const        r18, "id"
  Const        r19, "kind_id"
  // t.id == mi.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mk.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mi_idx.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mc.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // mk.movie_id == mi.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mk.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mk.movie_id == mc.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mi.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mi.movie_id == mc.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mc.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // k.id == mk.keyword_id &&
  Const        r18, "id"
  Const        r21, "keyword_id"
  // it1.id == mi.info_type_id &&
  Const        r18, "id"
  Const        r22, "info_type_id"
  // it2.id == mi_idx.info_type_id &&
  Const        r18, "id"
  Const        r22, "info_type_id"
  // ct.id == mc.company_type_id &&
  Const        r18, "id"
  Const        r23, "company_type_id"
  // cn.id == mc.company_id
  Const        r18, "id"
  Const        r24, "company_id"
  // select { company: cn.name, rating: mi_idx.info, title: t.title }
  Const        r25, "company"
  Const        r26, "name"
  Const        r27, "rating"
  Const        r12, "info"
  Const        r28, "title"
  Const        r28, "title"
  // join mi_idx in movie_info_idx on mi_idx.movie_id == t.id
  Const        r32, 0
  Move         r101, r32
L18:
  LessInt      r102, r101, r100
  JumpIfFalse  r102, L8
  Index        r103, r99, r101
  Move         r104, r103
  Const        r20, "movie_id"
  Index        r105, r104, r20
  Const        r18, "id"
  Index        r106, r59, r18
  Equal        r107, r105, r106
  JumpIfFalse  r107, L9
  // join it2 in info_type on it2.id == mi_idx.info_type_id
  IterPrep     r108, r2
  Len          r109, r108
  Const        r18, "id"
  Const        r22, "info_type_id"
  // cn.country_code != "[us]" &&
  Const        r11, "country_code"
  // it1.info == "countries" &&
  Const        r12, "info"
  // it2.info == "rating" &&
  Const        r12, "info"
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  Const        r13, "keyword"
  Const        r13, "keyword"
  Const        r13, "keyword"
  Const        r13, "keyword"
  // (kt.kind == "movie" || kt.kind == "episode") &&
  Const        r14, "kind"
  Const        r14, "kind"
  // mc.note.contains("(USA)") == false &&
  Const        r15, "note"
  Const        r16, "contains"
  // mc.note.contains("(200") &&
  Const        r15, "note"
  Const        r16, "contains"
  // (mi.info == "Germany" || mi.info == "German" || mi.info == "USA" || mi.info == "American") &&
  Const        r12, "info"
  Const        r12, "info"
  Const        r12, "info"
  Const        r12, "info"
  // mi_idx.info < 7.0 &&
  Const        r12, "info"
  // t.production_year > 2008 &&
  Const        r17, "production_year"
  // kt.id == t.kind_id &&
  Const        r18, "id"
  Const        r19, "kind_id"
  // t.id == mi.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mk.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mi_idx.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mc.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // mk.movie_id == mi.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mk.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mk.movie_id == mc.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mi.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mi.movie_id == mc.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mc.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // k.id == mk.keyword_id &&
  Const        r18, "id"
  Const        r21, "keyword_id"
  // it1.id == mi.info_type_id &&
  Const        r18, "id"
  Const        r22, "info_type_id"
  // it2.id == mi_idx.info_type_id &&
  Const        r18, "id"
  Const        r22, "info_type_id"
  // ct.id == mc.company_type_id &&
  Const        r18, "id"
  Const        r23, "company_type_id"
  // cn.id == mc.company_id
  Const        r18, "id"
  Const        r24, "company_id"
  // select { company: cn.name, rating: mi_idx.info, title: t.title }
  Const        r25, "company"
  Const        r26, "name"
  Const        r27, "rating"
  Const        r12, "info"
  Const        r28, "title"
  Const        r28, "title"
  // join it2 in info_type on it2.id == mi_idx.info_type_id
  Const        r32, 0
  Move         r110, r32
L17:
  LessInt      r111, r110, r109
  JumpIfFalse  r111, L9
  Index        r112, r108, r110
  Move         r113, r112
  Const        r18, "id"
  Index        r114, r113, r18
  Const        r22, "info_type_id"
  Index        r115, r104, r22
  Equal        r116, r114, r115
  JumpIfFalse  r116, L10
  // join kt in kind_type on kt.id == t.kind_id
  IterPrep     r117, r4
  Len          r118, r117
  Const        r18, "id"
  Const        r19, "kind_id"
  // cn.country_code != "[us]" &&
  Const        r11, "country_code"
  // it1.info == "countries" &&
  Const        r12, "info"
  // it2.info == "rating" &&
  Const        r12, "info"
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  Const        r13, "keyword"
  Const        r13, "keyword"
  Const        r13, "keyword"
  Const        r13, "keyword"
  // (kt.kind == "movie" || kt.kind == "episode") &&
  Const        r14, "kind"
  Const        r14, "kind"
  // mc.note.contains("(USA)") == false &&
  Const        r15, "note"
  Const        r16, "contains"
  // mc.note.contains("(200") &&
  Const        r15, "note"
  Const        r16, "contains"
  // (mi.info == "Germany" || mi.info == "German" || mi.info == "USA" || mi.info == "American") &&
  Const        r12, "info"
  Const        r12, "info"
  Const        r12, "info"
  Const        r12, "info"
  // mi_idx.info < 7.0 &&
  Const        r12, "info"
  // t.production_year > 2008 &&
  Const        r17, "production_year"
  // kt.id == t.kind_id &&
  Const        r18, "id"
  Const        r19, "kind_id"
  // t.id == mi.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mk.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mi_idx.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // t.id == mc.movie_id &&
  Const        r18, "id"
  Const        r20, "movie_id"
  // mk.movie_id == mi.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mk.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mk.movie_id == mc.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mi.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mi.movie_id == mc.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // mc.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Const        r20, "movie_id"
  // k.id == mk.keyword_id &&
  Const        r18, "id"
  Const        r21, "keyword_id"
  // it1.id == mi.info_type_id &&
  Const        r18, "id"
  Const        r22, "info_type_id"
  // it2.id == mi_idx.info_type_id &&
  Const        r18, "id"
  Const        r22, "info_type_id"
  // ct.id == mc.company_type_id &&
  Const        r18, "id"
  Const        r23, "company_type_id"
  // cn.id == mc.company_id
  Const        r18, "id"
  Const        r24, "company_id"
  // select { company: cn.name, rating: mi_idx.info, title: t.title }
  Const        r25, "company"
  Const        r26, "name"
  Const        r27, "rating"
  Const        r12, "info"
  Const        r28, "title"
  Const        r28, "title"
  // join kt in kind_type on kt.id == t.kind_id
  Const        r32, 0
  Move         r119, r32
L16:
  LessInt      r120, r119, r118
  JumpIfFalse  r120, L10
  Index        r121, r117, r119
  Move         r122, r121
  Const        r18, "id"
  Index        r123, r122, r18
  Const        r19, "kind_id"
  Index        r124, r59, r19
  Equal        r125, r123, r124
  JumpIfFalse  r125, L11
  // cn.country_code != "[us]" &&
  Const        r11, "country_code"
  Index        r126, r35, r11
  // mi_idx.info < 7.0 &&
  Const        r12, "info"
  Index        r127, r104, r12
  Const        r128, 7.0
  LessFloat    r129, r127, r128
  // t.production_year > 2008 &&
  Const        r17, "production_year"
  Index        r130, r59, r17
  Const        r131, 2008
  Less         r132, r131, r130
  // cn.country_code != "[us]" &&
  Const        r133, "[us]"
  NotEqual     r134, r126, r133
  // it1.info == "countries" &&
  Const        r12, "info"
  Index        r135, r95, r12
  Const        r136, "countries"
  Equal        r137, r135, r136
  // it2.info == "rating" &&
  Const        r12, "info"
  Index        r138, r113, r12
  Const        r27, "rating"
  Equal        r139, r138, r27
  Const        r15, "note"
  Index        r140, r41, r15
  // mc.note.contains("(USA)") == false &&
  Const        r141, "(USA)"
  In           r142, r141, r140
  Const        r143, false
  Equal        r144, r142, r143
  // kt.id == t.kind_id &&
  Const        r18, "id"
  Index        r145, r122, r18
  Const        r19, "kind_id"
  Index        r146, r59, r19
  Equal        r147, r145, r146
  // t.id == mi.movie_id &&
  Const        r18, "id"
  Index        r148, r59, r18
  Const        r20, "movie_id"
  Index        r149, r86, r20
  Equal        r150, r148, r149
  // t.id == mk.movie_id &&
  Const        r18, "id"
  Index        r151, r59, r18
  Const        r20, "movie_id"
  Index        r152, r68, r20
  Equal        r153, r151, r152
  // t.id == mi_idx.movie_id &&
  Const        r18, "id"
  Index        r154, r59, r18
  Const        r20, "movie_id"
  Index        r155, r104, r20
  Equal        r156, r154, r155
  // t.id == mc.movie_id &&
  Const        r18, "id"
  Index        r157, r59, r18
  Const        r20, "movie_id"
  Index        r158, r41, r20
  Equal        r159, r157, r158
  // mk.movie_id == mi.movie_id &&
  Const        r20, "movie_id"
  Index        r160, r68, r20
  Const        r20, "movie_id"
  Index        r161, r86, r20
  Equal        r162, r160, r161
  // mk.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Index        r163, r68, r20
  Const        r20, "movie_id"
  Index        r164, r104, r20
  Equal        r165, r163, r164
  // mk.movie_id == mc.movie_id &&
  Const        r20, "movie_id"
  Index        r166, r68, r20
  Const        r20, "movie_id"
  Index        r167, r41, r20
  Equal        r168, r166, r167
  // mi.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Index        r169, r86, r20
  Const        r20, "movie_id"
  Index        r170, r104, r20
  Equal        r171, r169, r170
  // mi.movie_id == mc.movie_id &&
  Const        r20, "movie_id"
  Index        r172, r86, r20
  Const        r20, "movie_id"
  Index        r173, r41, r20
  Equal        r174, r172, r173
  // mc.movie_id == mi_idx.movie_id &&
  Const        r20, "movie_id"
  Index        r175, r41, r20
  Const        r20, "movie_id"
  Index        r176, r104, r20
  Equal        r177, r175, r176
  // k.id == mk.keyword_id &&
  Const        r18, "id"
  Index        r178, r77, r18
  Const        r21, "keyword_id"
  Index        r179, r68, r21
  Equal        r180, r178, r179
  // it1.id == mi.info_type_id &&
  Const        r18, "id"
  Index        r181, r95, r18
  Const        r22, "info_type_id"
  Index        r182, r86, r22
  Equal        r183, r181, r182
  // it2.id == mi_idx.info_type_id &&
  Const        r18, "id"
  Index        r184, r113, r18
  Const        r22, "info_type_id"
  Index        r185, r104, r22
  Equal        r186, r184, r185
  // ct.id == mc.company_type_id &&
  Const        r18, "id"
  Index        r187, r50, r18
  Const        r23, "company_type_id"
  Index        r188, r41, r23
  Equal        r189, r187, r188
  // cn.id == mc.company_id
  Const        r18, "id"
  Index        r190, r35, r18
  Const        r24, "company_id"
  Index        r191, r41, r24
  Equal        r192, r190, r191
  // cn.country_code != "[us]" &&
  Move         r193, r134
  JumpIfFalse  r193, L12
  Move         r193, r137
  // it1.info == "countries" &&
  JumpIfFalse  r193, L12
  Move         r193, r139
  // it2.info == "rating" &&
  JumpIfFalse  r193, L12
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  Const        r13, "keyword"
  Index        r194, r77, r13
  Const        r195, "murder"
  Equal        r196, r194, r195
  Const        r13, "keyword"
  Index        r197, r77, r13
  Const        r198, "murder-in-title"
  Equal        r199, r197, r198
  Const        r13, "keyword"
  Index        r200, r77, r13
  Const        r201, "blood"
  Equal        r202, r200, r201
  Const        r13, "keyword"
  Index        r203, r77, r13
  Const        r204, "violence"
  Equal        r205, r203, r204
  Move         r206, r196
  JumpIfTrue   r206, L13
  Move         r206, r199
  JumpIfTrue   r206, L13
  Move         r206, r202
  JumpIfTrue   r206, L13
  Move         r206, r205
L13:
  // it2.info == "rating" &&
  Move         r193, r206
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  JumpIfFalse  r193, L12
  // (kt.kind == "movie" || kt.kind == "episode") &&
  Const        r14, "kind"
  Index        r207, r122, r14
  Const        r208, "movie"
  Equal        r209, r207, r208
  Const        r14, "kind"
  Index        r210, r122, r14
  Const        r211, "episode"
  Equal        r212, r210, r211
  Move         r213, r209
  JumpIfTrue   r213, L14
  Move         r213, r212
L14:
  // (k.keyword == "murder" || k.keyword == "murder-in-title" || k.keyword == "blood" || k.keyword == "violence") &&
  Move         r193, r213
  // (kt.kind == "movie" || kt.kind == "episode") &&
  JumpIfFalse  r193, L12
  Move         r193, r144
  // mc.note.contains("(USA)") == false &&
  JumpIfFalse  r193, L12
  Const        r15, "note"
  Index        r214, r41, r15
  // mc.note.contains("(200") &&
  Const        r215, "(200"
  In           r216, r215, r214
  // mc.note.contains("(USA)") == false &&
  Move         r193, r216
  // mc.note.contains("(200") &&
  JumpIfFalse  r193, L12
  // (mi.info == "Germany" || mi.info == "German" || mi.info == "USA" || mi.info == "American") &&
  Const        r12, "info"
  Index        r217, r86, r12
  Const        r218, "Germany"
  Equal        r219, r217, r218
  Const        r12, "info"
  Index        r220, r86, r12
  Const        r221, "German"
  Equal        r222, r220, r221
  Const        r12, "info"
  Index        r223, r86, r12
  Const        r224, "USA"
  Equal        r225, r223, r224
  Const        r12, "info"
  Index        r226, r86, r12
  Const        r227, "American"
  Equal        r228, r226, r227
  Move         r229, r219
  JumpIfTrue   r229, L15
  Move         r229, r222
  JumpIfTrue   r229, L15
  Move         r229, r225
  JumpIfTrue   r229, L15
  Move         r229, r228
L15:
  // mc.note.contains("(200") &&
  Move         r193, r229
  // (mi.info == "Germany" || mi.info == "German" || mi.info == "USA" || mi.info == "American") &&
  JumpIfFalse  r193, L12
  Move         r193, r129
  // mi_idx.info < 7.0 &&
  JumpIfFalse  r193, L12
  Move         r193, r132
  // t.production_year > 2008 &&
  JumpIfFalse  r193, L12
  Move         r193, r147
  // kt.id == t.kind_id &&
  JumpIfFalse  r193, L12
  Move         r193, r150
  // t.id == mi.movie_id &&
  JumpIfFalse  r193, L12
  Move         r193, r153
  // t.id == mk.movie_id &&
  JumpIfFalse  r193, L12
  Move         r193, r156
  // t.id == mi_idx.movie_id &&
  JumpIfFalse  r193, L12
  Move         r193, r159
  // t.id == mc.movie_id &&
  JumpIfFalse  r193, L12
  Move         r193, r162
  // mk.movie_id == mi.movie_id &&
  JumpIfFalse  r193, L12
  Move         r193, r165
  // mk.movie_id == mi_idx.movie_id &&
  JumpIfFalse  r193, L12
  Move         r193, r168
  // mk.movie_id == mc.movie_id &&
  JumpIfFalse  r193, L12
  Move         r193, r171
  // mi.movie_id == mi_idx.movie_id &&
  JumpIfFalse  r193, L12
  Move         r193, r174
  // mi.movie_id == mc.movie_id &&
  JumpIfFalse  r193, L12
  Move         r193, r177
  // mc.movie_id == mi_idx.movie_id &&
  JumpIfFalse  r193, L12
  Move         r193, r180
  // k.id == mk.keyword_id &&
  JumpIfFalse  r193, L12
  Move         r193, r183
  // it1.id == mi.info_type_id &&
  JumpIfFalse  r193, L12
  Move         r193, r186
  // it2.id == mi_idx.info_type_id &&
  JumpIfFalse  r193, L12
  Move         r193, r189
  // ct.id == mc.company_type_id &&
  JumpIfFalse  r193, L12
  Move         r193, r192
L12:
  // where (
  JumpIfFalse  r193, L11
  // select { company: cn.name, rating: mi_idx.info, title: t.title }
  Const        r230, "company"
  Const        r26, "name"
  Index        r231, r35, r26
  Const        r232, "rating"
  Const        r12, "info"
  Index        r233, r104, r12
  Const        r234, "title"
  Const        r28, "title"
  Index        r235, r59, r28
  Move         r236, r230
  Move         r237, r231
  Move         r238, r232
  Move         r239, r233
  Move         r240, r234
  Move         r241, r235
  MakeMap      r242, 3, r236
  // from cn in company_name
  Append       r243, r10, r242
  Move         r10, r243
L11:
  // join kt in kind_type on kt.id == t.kind_id
  Const        r244, 1
  Add          r119, r119, r244
  Jump         L16
L10:
  // join it2 in info_type on it2.id == mi_idx.info_type_id
  Const        r244, 1
  Add          r110, r110, r244
  Jump         L17
L9:
  // join mi_idx in movie_info_idx on mi_idx.movie_id == t.id
  Const        r244, 1
  Add          r101, r101, r244
  Jump         L18
L8:
  // join it1 in info_type on it1.id == mi.info_type_id
  Const        r244, 1
  Add          r92, r92, r244
  Jump         L19
L7:
  // join mi in movie_info on mi.movie_id == t.id
  Const        r244, 1
  Add          r83, r83, r244
  Jump         L20
L6:
  // join k in keyword on k.id == mk.keyword_id
  Const        r244, 1
  Add          r74, r74, r244
  Jump         L21
L5:
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r244, 1
  Add          r65, r65, r244
  Jump         L22
L4:
  // join t in title on t.id == mc.movie_id
  Const        r244, 1
  Add          r56, r56, r244
  Jump         L23
L3:
  // join ct in company_type on ct.id == mc.company_type_id
  Const        r244, 1
  Add          r47, r47, r244
  Jump         L24
L2:
  // join mc in movie_companies on cn.id == mc.company_id
  Const        r244, 1
  Add          r38, r38, r244
  Jump         L25
L1:
  // from cn in company_name
  Const        r244, 1
  AddInt       r31, r31, r244
  Jump         L26
L0:
  // movie_company: min(from r in rows select r.company),
  Const        r246, "movie_company"
  Const        r247, []
  Const        r25, "company"
  IterPrep     r248, r10
  Len          r249, r248
  Const        r32, 0
  Move         r250, r32
L28:
  LessInt      r251, r250, r249
  JumpIfFalse  r251, L27
  Index        r252, r248, r250
  Move         r253, r252
  Const        r25, "company"
  Index        r254, r253, r25
  Append       r255, r247, r254
  Move         r247, r255
  Const        r244, 1
  AddInt       r250, r250, r244
  Jump         L28
L27:
  Min          r256, r247
  // rating: min(from r in rows select r.rating),
  Const        r257, "rating"
  Const        r258, []
  Const        r27, "rating"
  IterPrep     r259, r10
  Len          r260, r259
  Const        r32, 0
  Move         r261, r32
L30:
  LessInt      r262, r261, r260
  JumpIfFalse  r262, L29
  Index        r263, r259, r261
  Move         r253, r263
  Const        r27, "rating"
  Index        r264, r253, r27
  Append       r265, r258, r264
  Move         r258, r265
  Const        r244, 1
  AddInt       r261, r261, r244
  Jump         L30
L29:
  Min          r266, r258
  // western_violent_movie: min(from r in rows select r.title)
  Const        r267, "western_violent_movie"
  Const        r268, []
  Const        r28, "title"
  IterPrep     r269, r10
  Len          r270, r269
  Const        r32, 0
  Move         r271, r32
L32:
  LessInt      r272, r271, r270
  JumpIfFalse  r272, L31
  Index        r273, r269, r271
  Move         r253, r273
  Const        r28, "title"
  Index        r274, r253, r28
  Append       r275, r268, r274
  Move         r268, r275
  Const        r244, 1
  AddInt       r271, r271, r244
  Jump         L32
L31:
  Min          r276, r268
  // movie_company: min(from r in rows select r.company),
  Move         r277, r246
  Move         r278, r256
  // rating: min(from r in rows select r.rating),
  Move         r279, r257
  Move         r280, r266
  // western_violent_movie: min(from r in rows select r.title)
  Move         r281, r267
  Move         r282, r276
  // {
  MakeMap      r283, 3, r277
  Move         r245, r283
  // let result = [
  MakeList     r284, 1, r245
  // json(result)
  JSON         r284
  // expect result == [
  Const        r285, [{"movie_company": "Euro Films", "rating": 6.5, "western_violent_movie": "Violent Western"}]
  Equal        r286, r284, r285
  Expect       r286
  Return       r0
