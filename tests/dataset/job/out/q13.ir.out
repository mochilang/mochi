func main (regs=44)
  // let company_name = [
  Const        r0, [{"country_code": "[de]", "id": 1}, {"country_code": "[us]", "id": 2}]
L17:
  // let company_type = [
  Const        r1, [{"id": 1, "kind": "production companies"}, {"id": 2, "kind": "distributors"}]
L4:
  // let info_type = [
  Const        r2, [{"id": 1, "info": "rating"}, {"id": 2, "info": "release dates"}]
L15:
  // let kind_type = [
  Const        r3, [{"id": 1, "kind": "movie"}, {"id": 2, "kind": "video"}]
L14:
  // let title = [
  Const        r4, [{"id": 10, "kind_id": 1, "title": "Alpha"}, {"id": 20, "kind_id": 1, "title": "Beta"}, {"id": 30, "kind_id": 2, "title": "Gamma"}]
L3:
  // let movie_companies = [
  Const        r5, [{"company_id": 1, "company_type_id": 1, "movie_id": 10}, {"company_id": 1, "company_type_id": 1, "movie_id": 20}, {"company_id": 2, "company_type_id": 1, "movie_id": 30}]
L6:
  // let movie_info = [
  Const        r6, [{"info": "1997-05-10", "info_type_id": 2, "movie_id": 10}, {"info": "1998-03-20", "info_type_id": 2, "movie_id": 20}, {"info": "1999-07-30", "info_type_id": 2, "movie_id": 30}]
L0:
  // let movie_info_idx = [
  Const        r7, [{"info": "6.0", "info_type_id": 1, "movie_id": 10}, {"info": "7.5", "info_type_id": 1, "movie_id": 20}, {"info": "5.5", "info_type_id": 1, "movie_id": 30}]
  // from cn in company_name
  Const        r8, []
  // where cn.country_code == "[de]" &&
  Const        r9, "country_code"
L1:
  // ct.kind == "production companies" &&
  Const        r10, "kind"
L16:
  // it.info == "rating" &&
  Const        r11, "info"
L5:
  // it2.info == "release dates" &&
  Const        r12, "info"
  // kt.kind == "movie"
  Const        r13, "kind"
L10:
  // release_date: mi.info,
  Const        r14, "release_date"
  Const        r15, "info"
  // rating: miidx.info,
  Const        r16, "rating"
L19:
  Const        r17, "info"
L8:
  // german_movie: t.title
  Const        r18, "german_movie"
  Const        r19, "title"
L13:
  // from cn in company_name
  IterPrep     r20, r0
L18:
  Len          r21, r20
L20:
  Const        r22, 0
  LessInt      r23, r22, r21
  JumpIfFalse  r23, L0
  Index        r24, r20, r22
L11:
  // join mc in movie_companies on mc.company_id == cn.id
  IterPrep     r25, r5
  Len          r26, r25
L9:
  Const        r27, "company_id"
  Const        r28, "id"
L7:
  // where cn.country_code == "[de]" &&
  Const        r29, "country_code"
L12:
  // ct.kind == "production companies" &&
  Const        r30, "kind"
  // it.info == "rating" &&
  Const        r31, "info"
  // it2.info == "release dates" &&
  Const        r9, "info"
  // kt.kind == "movie"
  Const        r10, "kind"
  // release_date: mi.info,
  Const        r11, "release_date"
L2:
  Const        r12, "info"
  // rating: miidx.info,
  Const        r13, "rating"
  Const        r14, "info"
  // german_movie: t.title
  Const        r15, "german_movie"
  Const        r16, "title"
  // join mc in movie_companies on mc.company_id == cn.id
  Const        r17, 0
  LessInt      r18, r17, r26
  JumpIfFalse  r18, L1
  Index        r19, r25, r17
  Const        r21, "company_id"
  Index        r23, r19, r21
  Const        r20, "id"
  Index        r5, r24, r20
  Equal        r27, r23, r5
  JumpIfFalse  r27, L2
  // join ct in company_type on ct.id == mc.company_type_id
  IterPrep     r28, r1
  Len          r29, r28
  Const        r30, "id"
  Const        r31, "company_type_id"
  // where cn.country_code == "[de]" &&
  Const        r9, "country_code"
  // ct.kind == "production companies" &&
  Const        r10, "kind"
  // it.info == "rating" &&
  Const        r11, "info"
  // it2.info == "release dates" &&
  Const        r12, "info"
  // kt.kind == "movie"
  Const        r13, "kind"
  // release_date: mi.info,
  Const        r14, "release_date"
  Const        r15, "info"
  // rating: miidx.info,
  Const        r16, "rating"
  Const        r26, "info"
  // german_movie: t.title
  Const        r18, "german_movie"
  Const        r25, "title"
  // join ct in company_type on ct.id == mc.company_type_id
  Const        r21, 0
  LessInt      r20, r21, r29
  JumpIfFalse  r20, L2
  Index        r23, r28, r21
  Const        r5, "id"
  Index        r27, r23, r5
  Const        r1, "company_type_id"
  Index        r30, r19, r1
  Equal        r31, r27, r30
  JumpIfFalse  r31, L3
  // join t in title on t.id == mc.movie_id
  IterPrep     r9, r4
  Len          r10, r9
  Const        r11, "id"
  Const        r12, "movie_id"
  // where cn.country_code == "[de]" &&
  Const        r13, "country_code"
  // ct.kind == "production companies" &&
  Const        r14, "kind"
  // it.info == "rating" &&
  Const        r15, "info"
  // it2.info == "release dates" &&
  Const        r16, "info"
  // kt.kind == "movie"
  Const        r26, "kind"
  // release_date: mi.info,
  Const        r18, "release_date"
  Const        r25, "info"
  // rating: miidx.info,
  Const        r29, "rating"
  Const        r20, "info"
  // german_movie: t.title
  Const        r28, "german_movie"
  Const        r5, "title"
  // join t in title on t.id == mc.movie_id
  Const        r1, 0
  LessInt      r27, r1, r10
  JumpIfFalse  r27, L3
  Index        r30, r9, r1
  Const        r31, "id"
  Index        r4, r30, r31
  Const        r11, "movie_id"
  Index        r12, r19, r11
  Equal        r13, r4, r12
  JumpIfFalse  r13, L4
  // join kt in kind_type on kt.id == t.kind_id
  IterPrep     r14, r3
  Len          r15, r14
  Const        r16, "id"
  Const        r26, "kind_id"
  // where cn.country_code == "[de]" &&
  Const        r18, "country_code"
  // ct.kind == "production companies" &&
  Const        r25, "kind"
  // it.info == "rating" &&
  Const        r29, "info"
  // it2.info == "release dates" &&
  Const        r20, "info"
  // kt.kind == "movie"
  Const        r28, "kind"
  // release_date: mi.info,
  Const        r5, "release_date"
  Const        r10, "info"
  // rating: miidx.info,
  Const        r27, "rating"
  Const        r9, "info"
  // german_movie: t.title
  Const        r31, "german_movie"
  Const        r19, "title"
  // join kt in kind_type on kt.id == t.kind_id
  Const        r11, 0
  LessInt      r4, r11, r15
  JumpIfFalse  r4, L4
  Index        r12, r14, r11
  Const        r13, "id"
  Index        r3, r12, r13
  Const        r16, "kind_id"
  Index        r26, r30, r16
  Equal        r18, r3, r26
  JumpIfFalse  r18, L5
  // join mi in movie_info on mi.movie_id == t.id
  IterPrep     r25, r6
  Len          r29, r25
  Const        r20, "movie_id"
  Const        r28, "id"
  // where cn.country_code == "[de]" &&
  Const        r5, "country_code"
  // ct.kind == "production companies" &&
  Const        r10, "kind"
  // it.info == "rating" &&
  Const        r27, "info"
  // it2.info == "release dates" &&
  Const        r9, "info"
  // kt.kind == "movie"
  Const        r31, "kind"
  // release_date: mi.info,
  Const        r19, "release_date"
  Const        r15, "info"
  // rating: miidx.info,
  Const        r4, "rating"
  Const        r14, "info"
  // german_movie: t.title
  Const        r13, "german_movie"
  Const        r16, "title"
  // join mi in movie_info on mi.movie_id == t.id
  Const        r3, 0
  LessInt      r26, r3, r29
  JumpIfFalse  r26, L5
  Index        r18, r25, r3
  Const        r6, "movie_id"
  Index        r20, r18, r6
  Const        r28, "id"
  Index        r5, r30, r28
  Equal        r10, r20, r5
  JumpIfFalse  r10, L6
  // join it2 in info_type on it2.id == mi.info_type_id
  IterPrep     r27, r2
  Len          r9, r27
  Const        r31, "id"
  Const        r19, "info_type_id"
  // where cn.country_code == "[de]" &&
  Const        r15, "country_code"
  // ct.kind == "production companies" &&
  Const        r4, "kind"
  // it.info == "rating" &&
  Const        r14, "info"
  // it2.info == "release dates" &&
  Const        r13, "info"
  // kt.kind == "movie"
  Const        r16, "kind"
  // release_date: mi.info,
  Const        r29, "release_date"
  Const        r26, "info"
  // rating: miidx.info,
  Const        r25, "rating"
  Const        r6, "info"
  // german_movie: t.title
  Const        r28, "german_movie"
  Const        r20, "title"
  // join it2 in info_type on it2.id == mi.info_type_id
  Const        r5, 0
  LessInt      r10, r5, r9
  JumpIfFalse  r10, L6
  Index        r31, r27, r5
  Const        r19, "id"
  Index        r15, r31, r19
  Const        r4, "info_type_id"
  Index        r14, r18, r4
  Equal        r13, r15, r14
  JumpIfFalse  r13, L7
  // join miidx in movie_info_idx on miidx.movie_id == t.id
  IterPrep     r16, r7
  Len          r29, r16
  Const        r26, "movie_id"
  Const        r25, "id"
  // where cn.country_code == "[de]" &&
  Const        r6, "country_code"
  // ct.kind == "production companies" &&
  Const        r28, "kind"
  // it.info == "rating" &&
  Const        r20, "info"
  // it2.info == "release dates" &&
  Const        r9, "info"
  // kt.kind == "movie"
  Const        r10, "kind"
  // release_date: mi.info,
  Const        r27, "release_date"
  Const        r19, "info"
  // rating: miidx.info,
  Const        r4, "rating"
  Const        r15, "info"
  // german_movie: t.title
  Const        r14, "german_movie"
  Const        r13, "title"
  // join miidx in movie_info_idx on miidx.movie_id == t.id
  Const        r7, 0
  LessInt      r26, r7, r29
  JumpIfFalse  r26, L7
  Index        r25, r16, r7
  Const        r6, "movie_id"
  Index        r28, r25, r6
  Const        r20, "id"
  Index        r9, r30, r20
  Equal        r10, r28, r9
  JumpIfFalse  r10, L8
  // join it in info_type on it.id == miidx.info_type_id
  IterPrep     r27, r2
  Len          r19, r27
  Const        r4, "id"
  Const        r15, "info_type_id"
  // where cn.country_code == "[de]" &&
  Const        r14, "country_code"
  // ct.kind == "production companies" &&
  Const        r13, "kind"
  // it.info == "rating" &&
  Const        r29, "info"
  // it2.info == "release dates" &&
  Const        r26, "info"
  // kt.kind == "movie"
  Const        r16, "kind"
  // release_date: mi.info,
  Const        r6, "release_date"
  Const        r20, "info"
  // rating: miidx.info,
  Const        r28, "rating"
  Const        r9, "info"
  // german_movie: t.title
  Const        r10, "german_movie"
  Const        r2, "title"
  // join it in info_type on it.id == miidx.info_type_id
  Const        r4, 0
  LessInt      r15, r4, r19
  JumpIfFalse  r15, L8
  Index        r14, r27, r4
  Const        r13, "id"
  Index        r29, r14, r13
  Const        r26, "info_type_id"
  Index        r16, r25, r26
  Equal        r6, r29, r16
  JumpIfFalse  r6, L9
  // where cn.country_code == "[de]" &&
  Const        r20, "country_code"
  Index        r28, r24, r20
  Const        r9, "[de]"
  Equal        r10, r28, r9
  // ct.kind == "production companies" &&
  Const        r2, "kind"
  Index        r19, r23, r2
  Const        r15, "production companies"
  Equal        r27, r19, r15
  // it.info == "rating" &&
  Const        r13, "info"
  Index        r26, r14, r13
  Const        r29, "rating"
  Equal        r16, r26, r29
  // it2.info == "release dates" &&
  Const        r6, "info"
  Index        r24, r31, r6
  Const        r20, "release dates"
  Equal        r28, r24, r20
  // kt.kind == "movie"
  Const        r9, "kind"
  Index        r23, r12, r9
  Const        r2, "movie"
  Equal        r19, r23, r2
  // where cn.country_code == "[de]" &&
  Move         r15, r10
  JumpIfFalse  r15, L10
  // ct.kind == "production companies" &&
  Move         r14, r27
  JumpIfFalse  r14, L11
  // it.info == "rating" &&
  Move         r13, r16
  JumpIfFalse  r13, L12
  // it2.info == "release dates" &&
  Move         r26, r28
  JumpIfFalse  r26, L13
  Move         r26, r19
  // where cn.country_code == "[de]" &&
  JumpIfFalse  r26, L9
  // release_date: mi.info,
  Const        r29, "release_date"
  Const        r31, "info"
  Index        r6, r18, r31
  // rating: miidx.info,
  Const        r24, "rating"
  Const        r20, "info"
  Index        r12, r25, r20
  // german_movie: t.title
  Const        r9, "german_movie"
  Const        r23, "title"
  Index        r2, r30, r23
  // release_date: mi.info,
  Move         r32, r29
  Move         r33, r6
  // rating: miidx.info,
  Move         r34, r24
  Move         r35, r12
  // german_movie: t.title
  Move         r36, r9
  Move         r37, r2
  // select {
  MakeMap      r10, 3, r32
  // from cn in company_name
  Append       r8, r8, r10
  // join it in info_type on it.id == miidx.info_type_id
  Const        r15, 1
  Add          r4, r4, r15
  Jump         L14
  // join miidx in movie_info_idx on miidx.movie_id == t.id
  Const        r27, 1
  Add          r7, r7, r27
  Jump         L0
  // join it2 in info_type on it2.id == mi.info_type_id
  Const        r14, 1
  Add          r5, r5, r14
  Jump         L3
  // join mi in movie_info on mi.movie_id == t.id
  Const        r16, 1
  Add          r3, r3, r16
  Jump         L15
  // join kt in kind_type on kt.id == t.kind_id
  Const        r13, 1
  Add          r11, r11, r13
  Jump         L16
  // join t in title on t.id == mc.movie_id
  Const        r28, 1
  Add          r1, r1, r28
  Jump         L17
  // join ct in company_type on ct.id == mc.company_type_id
  Const        r19, 1
  Add          r21, r21, r19
  Jump         L18
  // join mc in movie_companies on mc.company_id == cn.id
  Const        r26, 1
  Add          r17, r17, r26
  Jump         L19
  // from cn in company_name
  Const        r18, 1
  AddInt       r22, r22, r18
  Jump         L12
  // release_date: (from x in candidates sort by x.release_date select x.release_date)[0],
  Const        r25, "release_date"
  Const        r20, []
  Const        r30, "release_date"
  Const        r23, "release_date"
  IterPrep     r29, r8
  Len          r6, r29
  Const        r24, 0
  LessInt      r12, r24, r6
  JumpIfFalse  r12, L20
  Index        r9, r29, r24
  Const        r2, "release_date"
  Index        r32, r9, r2
  Const        r33, "release_date"
  Index        r34, r9, r33
  Move         r35, r32
  MakeList     r36, 2, r34
  Append       r20, r20, r36
  Const        r37, 1
  AddInt       r24, r24, r37
  Jump         L1
  Sort         r20, r20
  Const        r4, 0
  Index        r15, r20, r4
  // rating: (from x in candidates sort by x.rating select x.rating)[0],
  Const        r7, "rating"
  Const        r27, []
  Const        r5, "rating"
  Const        r14, "rating"
  IterPrep     r3, r8
  Len          r16, r3
  Const        r11, 0
  LessInt      r13, r11, r16
  JumpIfFalse  r13, L13
  Index        r9, r3, r11
  Const        r1, "rating"
  Index        r28, r9, r1
  Const        r21, "rating"
  Index        r34, r9, r21
  Move         r35, r28
  MakeList     r19, 2, r34
  Append       r27, r27, r19
  Const        r17, 1
  AddInt       r11, r11, r17
  Jump         L11
  Sort         r27, r27
  Const        r22, 0
  Index        r18, r27, r22
  // german_movie: (from x in candidates sort by x.german_movie select x.german_movie)[0]
  Const        r31, "german_movie"
  Const        r30, []
  Const        r23, "german_movie"
  Const        r6, "german_movie"
  IterPrep     r12, r8
  Len          r29, r12
  Const        r2, 0
L22:
  LessInt      r26, r2, r29
  JumpIfFalse  r26, L21
  Index        r9, r12, r2
  Const        r32, "german_movie"
  Index        r33, r9, r32
  Const        r36, "german_movie"
  Index        r34, r9, r36
  Move         r35, r33
  MakeList     r24, 2, r34
  Append       r30, r30, r24
  Const        r37, 1
  AddInt       r2, r2, r37
  Jump         L22
L21:
  Sort         r30, r30
  Const        r10, 0
  Index        r20, r30, r10
  // release_date: (from x in candidates sort by x.release_date select x.release_date)[0],
  Move         r38, r25
  Move         r39, r15
  // rating: (from x in candidates sort by x.rating select x.rating)[0],
  Move         r40, r7
  Move         r41, r18
  // german_movie: (from x in candidates sort by x.german_movie select x.german_movie)[0]
  Move         r42, r31
  Move         r43, r20
  // let result = {
  MakeMap      r4, 3, r38
  // json(result)
  JSON         r4
  // expect result == {
  Const        r5, {"german_movie": "Alpha", "rating": "6.0", "release_date": "1997-05-10"}
  Equal        r14, r4, r5
  Expect       r14
  Return       r0
