func main (regs=190)
  // let company_name = [
  Const        r0, [{"country_code": "[us]", "id": 1, "name": "Best Film Co"}, {"country_code": "[de]", "id": 2, "name": "Warner Studios"}, {"country_code": "[pl]", "id": 3, "name": "Polish Films"}]
  // let company_type = [
  Const        r1, [{"id": 1, "kind": "production companies"}, {"id": 2, "kind": "distributors"}]
  // let keyword = [
  Const        r2, [{"id": 1, "keyword": "sequel"}, {"id": 2, "keyword": "thriller"}]
  // let link_type = [
  Const        r3, [{"id": 1, "link": "follow-up"}, {"id": 2, "link": "follows from"}, {"id": 3, "link": "remake"}]
  // let movie_companies = [
  Const        r4, [{"company_id": 1, "company_type_id": 1, "movie_id": 10, "note": nil}, {"company_id": 2, "company_type_id": 1, "movie_id": 20, "note": nil}, {"company_id": 3, "company_type_id": 1, "movie_id": 30, "note": nil}]
  // let movie_keyword = [
  Const        r5, [{"keyword_id": 1, "movie_id": 10}, {"keyword_id": 1, "movie_id": 20}, {"keyword_id": 2, "movie_id": 20}, {"keyword_id": 1, "movie_id": 30}]
  // let movie_link = [
  Const        r6, [{"link_type_id": 1, "movie_id": 10}, {"link_type_id": 2, "movie_id": 20}, {"link_type_id": 3, "movie_id": 30}]
  // let title = [
  Const        r7, [{"id": 10, "production_year": 1960, "title": "Alpha"}, {"id": 20, "production_year": 1970, "title": "Beta"}, {"id": 30, "production_year": 1985, "title": "Polish Movie"}]
  // from cn in company_name
  Const        r8, []
  // where cn.country_code != "[pl]" &&
  Const        r9, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r10, "name"
  Const        r11, "contains"
  // ct.kind == "production companies" &&
  Const        r12, "kind"
  // k.keyword == "sequel" &&
  Const        r13, "keyword"
  // lt.link.contains("follow") &&
  Const        r14, "link"
  // mc.note == null &&
  Const        r15, "note"
  // t.production_year >= 1950 && t.production_year <= 2000 &&
  Const        r16, "production_year"
  // ml.movie_id == mk.movie_id &&
  Const        r17, "movie_id"
  // select { company: cn.name, link: lt.link, title: t.title }
  Const        r18, "company"
  Const        r19, "title"
  // from cn in company_name
  IterPrep     r20, r0
  Len          r21, r20
  Const        r23, 0
  Move         r22, r23
  LessInt      r24, r22, r21
  JumpIfFalse  r24, L0
  Index        r25, r20, r22
  Move         r26, r25
  // join mc in movie_companies on mc.company_id == cn.id
  IterPrep     r27, r4
  Len          r28, r27
  Const        r29, "company_id"
  Const        r30, "id"
  // where cn.country_code != "[pl]" &&
  Const        r9, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r10, "name"
  Const        r11, "contains"
  // ct.kind == "production companies" &&
  Const        r12, "kind"
  // k.keyword == "sequel" &&
  Const        r13, "keyword"
  // lt.link.contains("follow") &&
  Const        r14, "link"
  // mc.note == null &&
  Const        r15, "note"
  // t.production_year >= 1950 && t.production_year <= 2000 &&
  Const        r16, "production_year"
  // ml.movie_id == mk.movie_id &&
  Const        r17, "movie_id"
  // select { company: cn.name, link: lt.link, title: t.title }
  Const        r18, "company"
  Const        r19, "title"
  // join mc in movie_companies on mc.company_id == cn.id
  Const        r23, 0
  Move         r31, r23
  LessInt      r32, r31, r28
  JumpIfFalse  r32, L1
  Index        r33, r27, r31
  Move         r34, r33
  Const        r29, "company_id"
  Index        r35, r34, r29
  Const        r30, "id"
  Index        r36, r26, r30
  Equal        r37, r35, r36
  JumpIfFalse  r37, L2
  // join ct in company_type on ct.id == mc.company_type_id
  IterPrep     r38, r1
  Len          r39, r38
  Const        r30, "id"
  Const        r40, "company_type_id"
  // where cn.country_code != "[pl]" &&
  Const        r9, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r10, "name"
  Const        r11, "contains"
  // ct.kind == "production companies" &&
  Const        r12, "kind"
  // k.keyword == "sequel" &&
  Const        r13, "keyword"
  // lt.link.contains("follow") &&
  Const        r14, "link"
  // mc.note == null &&
  Const        r15, "note"
  // t.production_year >= 1950 && t.production_year <= 2000 &&
  Const        r16, "production_year"
  // ml.movie_id == mk.movie_id &&
  Const        r17, "movie_id"
  // select { company: cn.name, link: lt.link, title: t.title }
  Const        r18, "company"
  Const        r19, "title"
  // join ct in company_type on ct.id == mc.company_type_id
  Const        r23, 0
  Move         r41, r23
  LessInt      r42, r41, r39
  JumpIfFalse  r42, L2
  Index        r43, r38, r41
  Move         r44, r43
  Const        r30, "id"
  Index        r45, r44, r30
  Const        r40, "company_type_id"
  Index        r46, r34, r40
  Equal        r47, r45, r46
  JumpIfFalse  r47, L3
  // join t in title on t.id == mc.movie_id
  IterPrep     r48, r7
  Len          r49, r48
  Const        r30, "id"
  Const        r17, "movie_id"
  // where cn.country_code != "[pl]" &&
  Const        r9, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r10, "name"
  Const        r11, "contains"
  // ct.kind == "production companies" &&
  Const        r12, "kind"
  // k.keyword == "sequel" &&
  Const        r13, "keyword"
  // lt.link.contains("follow") &&
  Const        r14, "link"
  // mc.note == null &&
  Const        r15, "note"
  // t.production_year >= 1950 && t.production_year <= 2000 &&
  Const        r16, "production_year"
  // select { company: cn.name, link: lt.link, title: t.title }
  Const        r18, "company"
  Const        r19, "title"
  // join t in title on t.id == mc.movie_id
  Const        r23, 0
  Move         r50, r23
  LessInt      r51, r50, r49
  JumpIfFalse  r51, L3
  Index        r52, r48, r50
  Move         r53, r52
  Const        r30, "id"
  Index        r54, r53, r30
  Const        r17, "movie_id"
  Index        r55, r34, r17
  Equal        r56, r54, r55
  JumpIfFalse  r56, L4
  // join mk in movie_keyword on mk.movie_id == t.id
  IterPrep     r57, r5
  Len          r58, r57
  Const        r17, "movie_id"
  Const        r30, "id"
  // where cn.country_code != "[pl]" &&
  Const        r9, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r10, "name"
  Const        r11, "contains"
  // ct.kind == "production companies" &&
  Const        r12, "kind"
  // k.keyword == "sequel" &&
  Const        r13, "keyword"
  // lt.link.contains("follow") &&
  Const        r14, "link"
  // mc.note == null &&
  Const        r15, "note"
  // t.production_year >= 1950 && t.production_year <= 2000 &&
  Const        r16, "production_year"
  // select { company: cn.name, link: lt.link, title: t.title }
  Const        r18, "company"
  Const        r19, "title"
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r23, 0
  Move         r59, r23
  LessInt      r60, r59, r58
  JumpIfFalse  r60, L4
  Index        r61, r57, r59
  Move         r62, r61
  Const        r17, "movie_id"
  Index        r63, r62, r17
  Const        r30, "id"
  Index        r64, r53, r30
  Equal        r65, r63, r64
  JumpIfFalse  r65, L5
  // join k in keyword on k.id == mk.keyword_id
  IterPrep     r66, r2
  Len          r67, r66
  Const        r30, "id"
  Const        r68, "keyword_id"
  // where cn.country_code != "[pl]" &&
  Const        r9, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r10, "name"
  Const        r11, "contains"
  // ct.kind == "production companies" &&
  Const        r12, "kind"
  // k.keyword == "sequel" &&
  Const        r13, "keyword"
  // lt.link.contains("follow") &&
  Const        r14, "link"
  // mc.note == null &&
  Const        r15, "note"
  // t.production_year >= 1950 && t.production_year <= 2000 &&
  Const        r16, "production_year"
  // ml.movie_id == mk.movie_id &&
  Const        r17, "movie_id"
  // select { company: cn.name, link: lt.link, title: t.title }
  Const        r18, "company"
  Const        r19, "title"
  // join k in keyword on k.id == mk.keyword_id
  Const        r23, 0
  Move         r69, r23
  LessInt      r70, r69, r67
  JumpIfFalse  r70, L5
  Index        r71, r66, r69
  Move         r72, r71
  Const        r30, "id"
  Index        r73, r72, r30
  Const        r68, "keyword_id"
  Index        r74, r62, r68
  Equal        r75, r73, r74
  JumpIfFalse  r75, L6
  // join ml in movie_link on ml.movie_id == t.id
  IterPrep     r76, r6
  Len          r77, r76
  Const        r17, "movie_id"
  Const        r30, "id"
  // where cn.country_code != "[pl]" &&
  Const        r9, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r10, "name"
  Const        r11, "contains"
  // ct.kind == "production companies" &&
  Const        r12, "kind"
  // k.keyword == "sequel" &&
  Const        r13, "keyword"
  // lt.link.contains("follow") &&
  Const        r14, "link"
  // mc.note == null &&
  Const        r15, "note"
  // t.production_year >= 1950 && t.production_year <= 2000 &&
  Const        r16, "production_year"
  // select { company: cn.name, link: lt.link, title: t.title }
  Const        r18, "company"
  Const        r19, "title"
  // join ml in movie_link on ml.movie_id == t.id
  Const        r23, 0
  Move         r78, r23
  LessInt      r79, r78, r77
  JumpIfFalse  r79, L6
  Index        r80, r76, r78
  Move         r81, r80
  Const        r17, "movie_id"
  Index        r82, r81, r17
  Const        r30, "id"
  Index        r83, r53, r30
  Equal        r84, r82, r83
  JumpIfFalse  r84, L7
  // join lt in link_type on lt.id == ml.link_type_id
  IterPrep     r85, r3
  Len          r86, r85
  Const        r30, "id"
  Const        r87, "link_type_id"
L11:
  // where cn.country_code != "[pl]" &&
  Const        r9, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r10, "name"
  Const        r11, "contains"
  // ct.kind == "production companies" &&
  Const        r12, "kind"
  // k.keyword == "sequel" &&
  Const        r13, "keyword"
  // lt.link.contains("follow") &&
  Const        r14, "link"
  // mc.note == null &&
  Const        r15, "note"
  // t.production_year >= 1950 && t.production_year <= 2000 &&
  Const        r16, "production_year"
  // ml.movie_id == mk.movie_id &&
  Const        r17, "movie_id"
  // select { company: cn.name, link: lt.link, title: t.title }
  Const        r18, "company"
  Const        r19, "title"
  // join lt in link_type on lt.id == ml.link_type_id
  Const        r23, 0
  Move         r88, r23
  LessInt      r89, r88, r86
  JumpIfFalse  r89, L7
  Index        r90, r85, r88
  Move         r91, r90
  Const        r30, "id"
  Index        r92, r91, r30
  Const        r87, "link_type_id"
  Index        r93, r81, r87
  Equal        r94, r92, r93
  JumpIfFalse  r94, L8
  // where cn.country_code != "[pl]" &&
  Const        r9, "country_code"
  Index        r95, r26, r9
  // t.production_year >= 1950 && t.production_year <= 2000 &&
  Const        r16, "production_year"
  Index        r96, r53, r16
  Const        r97, 1950
  LessEq       r98, r97, r96
  Index        r99, r53, r16
  Const        r100, 2000
  LessEq       r101, r99, r100
  // where cn.country_code != "[pl]" &&
  Const        r102, "[pl]"
  NotEqual     r103, r95, r102
  // ct.kind == "production companies" &&
  Const        r12, "kind"
  Index        r104, r44, r12
  Const        r105, "production companies"
  Equal        r106, r104, r105
  // k.keyword == "sequel" &&
  Const        r13, "keyword"
  Index        r107, r72, r13
  Const        r108, "sequel"
  Equal        r109, r107, r108
  // mc.note == null &&
  Const        r15, "note"
  Index        r110, r34, r15
  Const        r111, nil
  Equal        r112, r110, r111
  // ml.movie_id == mk.movie_id &&
  Const        r17, "movie_id"
  Index        r113, r81, r17
  Index        r114, r62, r17
  Equal        r115, r113, r114
  // ml.movie_id == mc.movie_id &&
  Index        r116, r81, r17
  Index        r117, r34, r17
  Equal        r118, r116, r117
  // mk.movie_id == mc.movie_id
  Index        r119, r62, r17
  Index        r120, r34, r17
  Equal        r121, r119, r120
  // where cn.country_code != "[pl]" &&
  Move         r122, r103
  JumpIfFalse  r122, L9
  Const        r10, "name"
  Index        r123, r26, r10
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r124, "Film"
  In           r125, r124, r123
  Move         r126, r125
  JumpIfTrue   r126, L10
  Const        r10, "name"
  Index        r127, r26, r10
  Const        r128, "Warner"
  In           r129, r128, r127
  Move         r126, r129
  // where cn.country_code != "[pl]" &&
  Move         r122, r126
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  JumpIfFalse  r122, L9
  Move         r122, r106
  // ct.kind == "production companies" &&
  JumpIfFalse  r122, L9
  Move         r122, r109
  // k.keyword == "sequel" &&
  JumpIfFalse  r122, L9
  Const        r14, "link"
  Index        r130, r91, r14
  // lt.link.contains("follow") &&
  Const        r131, "follow"
  In           r132, r131, r130
  // k.keyword == "sequel" &&
  Move         r122, r132
  // lt.link.contains("follow") &&
  JumpIfFalse  r122, L9
  Move         r122, r112
  // mc.note == null &&
  JumpIfFalse  r122, L9
  Move         r122, r98
  // t.production_year >= 1950 && t.production_year <= 2000 &&
  JumpIfFalse  r122, L9
  Move         r122, r101
  JumpIfFalse  r122, L9
  Move         r122, r115
  // ml.movie_id == mk.movie_id &&
  JumpIfFalse  r122, L9
  Move         r122, r118
  // ml.movie_id == mc.movie_id &&
  JumpIfFalse  r122, L9
  Move         r122, r121
  // where cn.country_code != "[pl]" &&
  JumpIfFalse  r122, L8
  // select { company: cn.name, link: lt.link, title: t.title }
  Const        r133, "company"
  Const        r10, "name"
  Index        r134, r26, r10
  Const        r135, "link"
  Const        r14, "link"
  Index        r136, r91, r14
  Const        r137, "title"
  Const        r19, "title"
  Index        r138, r53, r19
  Move         r139, r133
  Move         r140, r134
  Move         r141, r135
  Move         r142, r136
  Move         r143, r137
  Move         r144, r138
  MakeMap      r145, 3, r139
  // from cn in company_name
  Append       r146, r8, r145
  Move         r8, r146
  // join lt in link_type on lt.id == ml.link_type_id
  Const        r147, 1
  Add          r88, r88, r147
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r147, 1
  Add          r59, r59, r147
  Jump         L11
L10:
  // non_polish_sequel_movie: min(from x in matches select x.title)
  Index        r176, r172, r174
  Move         r156, r176
  Const        r19, "title"
  Index        r177, r156, r19
  Append       r178, r171, r177
  Move         r171, r178
  Const        r147, 1
  AddInt       r174, r174, r147
  Jump         L12
L9:
  Return       r0
