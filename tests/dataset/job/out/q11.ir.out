func main (regs=41)
  // let company_name = [
  Const        r0, [{"country_code": "[us]", "id": 1, "name": "Best Film Co"}, {"country_code": "[de]", "id": 2, "name": "Warner Studios"}, {"country_code": "[pl]", "id": 3, "name": "Polish Films"}]
  // let company_type = [
  Const        r1, [{"id": 1, "kind": "production companies"}, {"id": 2, "kind": "distributors"}]
L0:
  // let keyword = [
  Const        r2, [{"id": 1, "keyword": "sequel"}, {"id": 2, "keyword": "thriller"}]
L2:
  // let link_type = [
  Const        r3, [{"id": 1, "link": "follow-up"}, {"id": 2, "link": "follows from"}, {"id": 3, "link": "remake"}]
L1:
  // let movie_companies = [
  Const        r4, [{"company_id": 1, "company_type_id": 1, "movie_id": 10, "note": nil}, {"company_id": 2, "company_type_id": 1, "movie_id": 20, "note": nil}, {"company_id": 3, "company_type_id": 1, "movie_id": 30, "note": nil}]
L20:
  // let movie_keyword = [
  Const        r5, [{"keyword_id": 1, "movie_id": 10}, {"keyword_id": 1, "movie_id": 20}, {"keyword_id": 2, "movie_id": 20}, {"keyword_id": 1, "movie_id": 30}]
L5:
  // let movie_link = [
  Const        r6, [{"link_type_id": 1, "movie_id": 10}, {"link_type_id": 2, "movie_id": 20}, {"link_type_id": 3, "movie_id": 30}]
L16:
  // let title = [
  Const        r7, [{"id": 10, "production_year": 1960, "title": "Alpha"}, {"id": 20, "production_year": 1970, "title": "Beta"}, {"id": 30, "production_year": 1985, "title": "Polish Movie"}]
  // from cn in company_name
  Const        r8, []
L19:
  // where cn.country_code != "[pl]" &&
  Const        r9, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r10, "name"
  Const        r11, "contains"
L18:
  Const        r12, "name"
L15:
  Const        r13, "contains"
  // ct.kind == "production companies" &&
  Const        r14, "kind"
  // k.keyword == "sequel" &&
  Const        r15, "keyword"
L7:
  // lt.link.contains("follow") &&
  Const        r16, "link"
  Const        r17, "contains"
L8:
  // mc.note == null &&
  Const        r18, "note"
L17:
  // t.production_year >= 1950 && t.production_year <= 2000 &&
  Const        r19, "production_year"
L9:
  Const        r20, "production_year"
L12:
  // ml.movie_id == mk.movie_id &&
  Const        r21, "movie_id"
  Const        r22, "movie_id"
  // ml.movie_id == mc.movie_id &&
  Const        r23, "movie_id"
L14:
  Const        r24, "movie_id"
L13:
  // mk.movie_id == mc.movie_id
  Const        r25, "movie_id"
L6:
  Const        r26, "movie_id"
L10:
  // select { company: cn.name, link: lt.link, title: t.title }
  Const        r27, "company"
L11:
  Const        r28, "name"
L4:
  Const        r9, "link"
  Const        r10, "link"
L21:
  Const        r11, "title"
L3:
  Const        r12, "title"
  // from cn in company_name
  IterPrep     r13, r0
  Len          r14, r13
  Const        r15, 0
  LessInt      r16, r15, r14
  JumpIfFalse  r16, L0
  Index        r17, r13, r15
  // join mc in movie_companies on mc.company_id == cn.id
  IterPrep     r18, r4
L23:
  Len          r19, r18
  Const        r20, "company_id"
  Const        r21, "id"
  // where cn.country_code != "[pl]" &&
  Const        r22, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r23, "name"
  Const        r24, "contains"
  Const        r25, "name"
  Const        r26, "contains"
  // ct.kind == "production companies" &&
  Const        r27, "kind"
  // k.keyword == "sequel" &&
  Const        r28, "keyword"
  // lt.link.contains("follow") &&
  Const        r9, "link"
  Const        r10, "contains"
  // mc.note == null &&
  Const        r11, "note"
  // t.production_year >= 1950 && t.production_year <= 2000 &&
  Const        r12, "production_year"
  Const        r14, "production_year"
  // ml.movie_id == mk.movie_id &&
  Const        r16, "movie_id"
  Const        r13, "movie_id"
  // ml.movie_id == mc.movie_id &&
  Const        r4, "movie_id"
  Const        r20, "movie_id"
  // mk.movie_id == mc.movie_id
  Const        r21, "movie_id"
  Const        r22, "movie_id"
  // select { company: cn.name, link: lt.link, title: t.title }
  Const        r23, "company"
  Const        r24, "name"
  Const        r25, "link"
  Const        r26, "link"
  Const        r27, "title"
  Const        r28, "title"
  // join mc in movie_companies on mc.company_id == cn.id
  Const        r9, 0
  LessInt      r10, r9, r19
  JumpIfFalse  r10, L1
  Index        r11, r18, r9
  Const        r12, "company_id"
  Index        r14, r11, r12
  Const        r16, "id"
  Index        r13, r17, r16
  Equal        r4, r14, r13
  JumpIfFalse  r4, L0
  // join ct in company_type on ct.id == mc.company_type_id
  IterPrep     r20, r1
  Len          r21, r20
  Const        r22, "id"
  Const        r23, "company_type_id"
  // where cn.country_code != "[pl]" &&
  Const        r24, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r25, "name"
  Const        r26, "contains"
  Const        r27, "name"
  Const        r28, "contains"
  // ct.kind == "production companies" &&
  Const        r19, "kind"
  // k.keyword == "sequel" &&
  Const        r10, "keyword"
  // lt.link.contains("follow") &&
  Const        r18, "link"
  Const        r12, "contains"
  // mc.note == null &&
  Const        r16, "note"
  // t.production_year >= 1950 && t.production_year <= 2000 &&
  Const        r14, "production_year"
  Const        r13, "production_year"
  // ml.movie_id == mk.movie_id &&
  Const        r4, "movie_id"
  Const        r1, "movie_id"
  // ml.movie_id == mc.movie_id &&
  Const        r22, "movie_id"
  Const        r23, "movie_id"
  // mk.movie_id == mc.movie_id
  Const        r24, "movie_id"
  Const        r25, "movie_id"
  // select { company: cn.name, link: lt.link, title: t.title }
  Const        r26, "company"
  Const        r27, "name"
  Const        r28, "link"
  Const        r19, "link"
  Const        r10, "title"
  Const        r18, "title"
  // join ct in company_type on ct.id == mc.company_type_id
  Const        r12, 0
  LessInt      r16, r12, r21
  JumpIfFalse  r16, L0
  Index        r14, r20, r12
  Const        r13, "id"
  Index        r4, r14, r13
  Const        r1, "company_type_id"
  Index        r22, r11, r1
  Equal        r23, r4, r22
  JumpIfFalse  r23, L2
  // join t in title on t.id == mc.movie_id
  IterPrep     r24, r7
  Len          r25, r24
  Const        r26, "id"
  Const        r27, "movie_id"
  // where cn.country_code != "[pl]" &&
  Const        r28, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r19, "name"
  Const        r10, "contains"
  Const        r18, "name"
  Const        r21, "contains"
  // ct.kind == "production companies" &&
  Const        r16, "kind"
  // k.keyword == "sequel" &&
  Const        r20, "keyword"
  // lt.link.contains("follow") &&
  Const        r13, "link"
  Const        r1, "contains"
  // mc.note == null &&
  Const        r4, "note"
  // t.production_year >= 1950 && t.production_year <= 2000 &&
  Const        r22, "production_year"
  Const        r23, "production_year"
  // ml.movie_id == mk.movie_id &&
  Const        r7, "movie_id"
  Const        r26, "movie_id"
  // ml.movie_id == mc.movie_id &&
  Const        r27, "movie_id"
  Const        r28, "movie_id"
  // mk.movie_id == mc.movie_id
  Const        r19, "movie_id"
  Const        r10, "movie_id"
  // select { company: cn.name, link: lt.link, title: t.title }
  Const        r18, "company"
  Const        r21, "name"
  Const        r16, "link"
  Const        r20, "link"
  Const        r13, "title"
  Const        r1, "title"
  // join t in title on t.id == mc.movie_id
  Const        r4, 0
  LessInt      r22, r4, r25
  JumpIfFalse  r22, L2
  Index        r23, r24, r4
  Const        r7, "id"
  Index        r26, r23, r7
  Const        r27, "movie_id"
  Index        r28, r11, r27
  Equal        r19, r26, r28
  JumpIfFalse  r19, L3
  // join mk in movie_keyword on mk.movie_id == t.id
  IterPrep     r10, r5
  Len          r18, r10
  Const        r21, "movie_id"
  Const        r16, "id"
  // where cn.country_code != "[pl]" &&
  Const        r20, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r13, "name"
  Const        r1, "contains"
  Const        r25, "name"
  Const        r22, "contains"
  // ct.kind == "production companies" &&
  Const        r24, "kind"
  // k.keyword == "sequel" &&
  Const        r7, "keyword"
  // lt.link.contains("follow") &&
  Const        r27, "link"
  Const        r26, "contains"
  // mc.note == null &&
  Const        r28, "note"
  // t.production_year >= 1950 && t.production_year <= 2000 &&
  Const        r19, "production_year"
  Const        r5, "production_year"
  // ml.movie_id == mk.movie_id &&
  Const        r21, "movie_id"
  Const        r16, "movie_id"
  // ml.movie_id == mc.movie_id &&
  Const        r20, "movie_id"
  Const        r13, "movie_id"
  // mk.movie_id == mc.movie_id
  Const        r1, "movie_id"
  Const        r25, "movie_id"
  // select { company: cn.name, link: lt.link, title: t.title }
  Const        r22, "company"
  Const        r24, "name"
  Const        r7, "link"
  Const        r27, "link"
  Const        r26, "title"
  Const        r28, "title"
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r19, 0
  LessInt      r5, r19, r18
  JumpIfFalse  r5, L3
  Index        r21, r10, r19
  Const        r16, "movie_id"
  Index        r20, r21, r16
  Const        r13, "id"
  Index        r1, r23, r13
  Equal        r25, r20, r1
  JumpIfFalse  r25, L4
  // join k in keyword on k.id == mk.keyword_id
  IterPrep     r22, r2
  Len          r24, r22
  Const        r7, "id"
  Const        r27, "keyword_id"
  // where cn.country_code != "[pl]" &&
  Const        r26, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r28, "name"
  Const        r18, "contains"
  Const        r5, "name"
  Const        r10, "contains"
  // ct.kind == "production companies" &&
  Const        r16, "kind"
  // k.keyword == "sequel" &&
  Const        r13, "keyword"
  // lt.link.contains("follow") &&
  Const        r20, "link"
  Const        r1, "contains"
  // mc.note == null &&
  Const        r25, "note"
  // t.production_year >= 1950 && t.production_year <= 2000 &&
  Const        r2, "production_year"
  Const        r7, "production_year"
  // ml.movie_id == mk.movie_id &&
  Const        r27, "movie_id"
  Const        r26, "movie_id"
  // ml.movie_id == mc.movie_id &&
  Const        r28, "movie_id"
  Const        r18, "movie_id"
  // mk.movie_id == mc.movie_id
  Const        r5, "movie_id"
  Const        r10, "movie_id"
  // select { company: cn.name, link: lt.link, title: t.title }
  Const        r16, "company"
  Const        r13, "name"
  Const        r20, "link"
  Const        r1, "link"
  Const        r25, "title"
  Const        r2, "title"
  // join k in keyword on k.id == mk.keyword_id
  Const        r7, 0
  LessInt      r27, r7, r24
  JumpIfFalse  r27, L4
  Index        r26, r22, r7
  Const        r28, "id"
  Index        r18, r26, r28
  Const        r5, "keyword_id"
  Index        r10, r21, r5
  Equal        r16, r18, r10
  JumpIfFalse  r16, L5
  // join ml in movie_link on ml.movie_id == t.id
  IterPrep     r13, r6
  Len          r20, r13
  Const        r1, "movie_id"
  Const        r25, "id"
  // where cn.country_code != "[pl]" &&
  Const        r2, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r24, "name"
  Const        r27, "contains"
  Const        r22, "name"
  Const        r28, "contains"
  // ct.kind == "production companies" &&
  Const        r5, "kind"
  // k.keyword == "sequel" &&
  Const        r18, "keyword"
  // lt.link.contains("follow") &&
  Const        r10, "link"
  Const        r16, "contains"
  // mc.note == null &&
  Const        r6, "note"
  // t.production_year >= 1950 && t.production_year <= 2000 &&
  Const        r1, "production_year"
  Const        r25, "production_year"
  // ml.movie_id == mk.movie_id &&
  Const        r2, "movie_id"
  Const        r24, "movie_id"
  // ml.movie_id == mc.movie_id &&
  Const        r27, "movie_id"
  Const        r22, "movie_id"
  // mk.movie_id == mc.movie_id
  Const        r28, "movie_id"
  Const        r5, "movie_id"
  // select { company: cn.name, link: lt.link, title: t.title }
  Const        r18, "company"
  Const        r10, "name"
  Const        r16, "link"
  Const        r6, "link"
  Const        r1, "title"
  Const        r25, "title"
  // join ml in movie_link on ml.movie_id == t.id
  Const        r2, 0
  LessInt      r24, r2, r20
  JumpIfFalse  r24, L5
  Index        r27, r13, r2
  Const        r22, "movie_id"
  Index        r28, r27, r22
  Const        r5, "id"
  Index        r18, r23, r5
  Equal        r10, r28, r18
  JumpIfFalse  r10, L6
  // join lt in link_type on lt.id == ml.link_type_id
  IterPrep     r16, r3
  Len          r6, r16
  Const        r1, "id"
  Const        r25, "link_type_id"
  // where cn.country_code != "[pl]" &&
  Const        r20, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r24, "name"
  Const        r13, "contains"
  Const        r22, "name"
  Const        r5, "contains"
  // ct.kind == "production companies" &&
  Const        r28, "kind"
  // k.keyword == "sequel" &&
  Const        r18, "keyword"
  // lt.link.contains("follow") &&
  Const        r10, "link"
  Const        r3, "contains"
  // mc.note == null &&
  Const        r1, "note"
  // t.production_year >= 1950 && t.production_year <= 2000 &&
  Const        r25, "production_year"
  Const        r20, "production_year"
  // ml.movie_id == mk.movie_id &&
  Const        r24, "movie_id"
  Const        r13, "movie_id"
  // ml.movie_id == mc.movie_id &&
  Const        r22, "movie_id"
  Const        r5, "movie_id"
  // mk.movie_id == mc.movie_id
  Const        r28, "movie_id"
  Const        r18, "movie_id"
  // select { company: cn.name, link: lt.link, title: t.title }
  Const        r10, "company"
  Const        r3, "name"
  Const        r1, "link"
  Const        r25, "link"
  Const        r20, "title"
  Const        r24, "title"
  // join lt in link_type on lt.id == ml.link_type_id
  Const        r13, 0
  LessInt      r22, r13, r6
  JumpIfFalse  r22, L6
  Index        r5, r16, r13
  Const        r28, "id"
  Index        r18, r5, r28
  Const        r10, "link_type_id"
  Index        r3, r27, r10
  Equal        r1, r18, r3
  JumpIfFalse  r1, L7
  // where cn.country_code != "[pl]" &&
  Const        r25, "country_code"
  Index        r20, r17, r25
  // t.production_year >= 1950 && t.production_year <= 2000 &&
  Const        r24, "production_year"
  Index        r6, r23, r24
  Const        r22, 1950
  LessEq       r16, r22, r6
  Const        r28, "production_year"
  Index        r10, r23, r28
  Const        r18, 2000
  LessEq       r3, r10, r18
  // where cn.country_code != "[pl]" &&
  Const        r1, "[pl]"
  NotEqual     r25, r20, r1
  // ct.kind == "production companies" &&
  Const        r24, "kind"
  Index        r6, r14, r24
  Const        r22, "production companies"
  Equal        r28, r6, r22
  // k.keyword == "sequel" &&
  Const        r10, "keyword"
  Index        r18, r26, r10
  Const        r20, "sequel"
  Equal        r1, r18, r20
  // mc.note == null &&
  Const        r14, "note"
  Index        r24, r11, r14
  Const        r6, nil
  Equal        r22, r24, r6
  // ml.movie_id == mk.movie_id &&
  Const        r26, "movie_id"
  Index        r10, r27, r26
  Const        r18, "movie_id"
  Index        r20, r21, r18
  Equal        r14, r10, r20
  // ml.movie_id == mc.movie_id &&
  Const        r24, "movie_id"
  Index        r6, r27, r24
  Const        r26, "movie_id"
  Index        r18, r11, r26
  Equal        r10, r6, r18
  // mk.movie_id == mc.movie_id
  Const        r20, "movie_id"
  Index        r27, r21, r20
  Const        r24, "movie_id"
  Index        r26, r11, r24
  Equal        r6, r27, r26
  // where cn.country_code != "[pl]" &&
  Move         r18, r25
  JumpIfFalse  r18, L8
  Const        r21, "name"
  Index        r20, r17, r21
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r11, "Film"
  In           r24, r11, r20
  JumpIfTrue   r24, L8
  Const        r27, "name"
  Index        r26, r17, r27
  Const        r25, "Warner"
  In           r24, r25, r26
  Move         r18, r24
  JumpIfFalse  r18, L9
  // ct.kind == "production companies" &&
  Move         r21, r28
  JumpIfFalse  r21, L10
  // k.keyword == "sequel" &&
  Move         r20, r1
  JumpIfFalse  r20, L11
  Const        r11, "link"
  Index        r27, r5, r11
  // lt.link.contains("follow") &&
  Const        r26, "follow"
  In           r25, r26, r27
  JumpIfFalse  r25, L12
  // mc.note == null &&
  Move         r24, r22
  JumpIfFalse  r24, L9
  // t.production_year >= 1950 && t.production_year <= 2000 &&
  Move         r18, r16
  JumpIfFalse  r18, L10
  Move         r28, r3
  JumpIfFalse  r28, L13
  // ml.movie_id == mk.movie_id &&
  Move         r21, r14
  JumpIfFalse  r21, L14
  // ml.movie_id == mc.movie_id &&
  Move         r1, r10
  JumpIfFalse  r1, L4
  Move         r1, r6
  // where cn.country_code != "[pl]" &&
  JumpIfFalse  r1, L7
  // select { company: cn.name, link: lt.link, title: t.title }
  Const        r20, "company"
  Const        r11, "name"
  Index        r27, r17, r11
  Const        r26, "link"
  Const        r25, "link"
  Index        r22, r5, r25
  Const        r24, "title"
  Const        r16, "title"
  Index        r18, r23, r16
  Move         r29, r20
  Move         r30, r27
  Move         r31, r26
  Move         r32, r22
  Move         r33, r24
  Move         r34, r18
  MakeMap      r3, 3, r29
  // from cn in company_name
  Append       r8, r8, r3
  // join lt in link_type on lt.id == ml.link_type_id
  Const        r28, 1
  Add          r13, r13, r28
  Jump         L15
  // join ml in movie_link on ml.movie_id == t.id
  Const        r14, 1
  Add          r2, r2, r14
  Jump         L0
  // join k in keyword on k.id == mk.keyword_id
  Const        r21, 1
  Add          r7, r7, r21
  Jump         L16
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r10, 1
  Add          r19, r19, r10
  Jump         L17
  // join t in title on t.id == mc.movie_id
  Const        r6, 1
  Add          r4, r4, r6
  Jump         L1
  // join ct in company_type on ct.id == mc.company_type_id
  Const        r1, 1
  Add          r12, r12, r1
  Jump         L18
  // join mc in movie_companies on mc.company_id == cn.id
  Const        r17, 1
  Add          r9, r9, r17
  Jump         L19
  // from cn in company_name
  Const        r11, 1
  AddInt       r15, r15, r11
  Jump         L20
  // from_company: min(from x in matches select x.company),
  Const        r25, "from_company"
  Const        r23, []
  Const        r16, "company"
  IterPrep     r20, r8
  Len          r27, r20
  Const        r26, 0
  LessInt      r22, r26, r27
  JumpIfFalse  r22, L20
  Index        r24, r20, r26
  Const        r18, "company"
  Index        r29, r24, r18
  Append       r23, r23, r29
  Const        r30, 1
  AddInt       r26, r26, r30
  Jump         L21
  Min          r32, r23
  // movie_link_type: min(from x in matches select x.link),
  Const        r33, "movie_link_type"
  Const        r34, []
  Const        r3, "link"
  IterPrep     r13, r8
  Len          r28, r13
  Const        r2, 0
  LessInt      r14, r2, r28
  JumpIfFalse  r14, L22
  Index        r24, r13, r2
  Const        r7, "link"
  Index        r21, r24, r7
  Append       r34, r34, r21
  Const        r19, 1
  AddInt       r2, r2, r19
  Jump         L23
L22:
  Min          r10, r34
  // non_polish_sequel_movie: min(from x in matches select x.title)
  Const        r4, "non_polish_sequel_movie"
  Const        r6, []
  Const        r12, "title"
  IterPrep     r31, r8
  Len          r1, r31
  Const        r9, 0
L25:
  LessInt      r17, r9, r1
  JumpIfFalse  r17, L24
  Index        r24, r31, r9
  Const        r15, "title"
  Index        r11, r24, r15
  Append       r6, r6, r11
  Const        r5, 1
  AddInt       r9, r9, r5
  Jump         L25
L24:
  Min          r16, r6
  // from_company: min(from x in matches select x.company),
  Move         r35, r25
  Move         r36, r32
  // movie_link_type: min(from x in matches select x.link),
  Move         r37, r33
  Move         r38, r10
  // non_polish_sequel_movie: min(from x in matches select x.title)
  Move         r39, r4
  Move         r40, r16
  // {
  MakeMap      r27, 3, r35
  // let result = [
  MakeList     r22, 1, r27
  // json(result)
  JSON         r22
  // expect result == [
  Const        r20, [{"from_company": "Best Film Co", "movie_link_type": "follow-up", "non_polish_sequel_movie": "Alpha"}]
  Equal        r18, r22, r20
  Expect       r18
  Return       r0
