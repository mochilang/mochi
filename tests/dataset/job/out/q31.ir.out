func main (regs=477)
  // let cast_info = [
  Const        r0, [{"movie_id": 1, "note": "(writer)", "person_id": 1}, {"movie_id": 2, "note": "(story)", "person_id": 2}, {"movie_id": 3, "note": "(writer)", "person_id": 3}]
  // let company_name = [
  Const        r1, [{"id": 1, "name": "Lionsgate Pictures"}, {"id": 2, "name": "Other Studio"}]
  // let info_type = [
  Const        r2, [{"id": 10, "info": "genres"}, {"id": 20, "info": "votes"}]
  // let keyword = [
  Const        r3, [{"id": 100, "keyword": "murder"}, {"id": 200, "keyword": "comedy"}]
  // let movie_companies = [
  Const        r4, [{"company_id": 1, "movie_id": 1}, {"company_id": 1, "movie_id": 2}, {"company_id": 2, "movie_id": 3}]
  // let movie_info = [
  Const        r5, [{"info": "Horror", "info_type_id": 10, "movie_id": 1}, {"info": "Thriller", "info_type_id": 10, "movie_id": 2}, {"info": "Comedy", "info_type_id": 10, "movie_id": 3}]
  // let movie_info_idx = [
  Const        r6, [{"info": 1000, "info_type_id": 20, "movie_id": 1}, {"info": 800, "info_type_id": 20, "movie_id": 2}, {"info": 500, "info_type_id": 20, "movie_id": 3}]
  // let movie_keyword = [
  Const        r7, [{"keyword_id": 100, "movie_id": 1}, {"keyword_id": 100, "movie_id": 2}, {"keyword_id": 200, "movie_id": 3}]
  // let name = [
  Const        r8, [{"gender": "m", "id": 1, "name": "Arthur"}, {"gender": "m", "id": 2, "name": "Bob"}, {"gender": "f", "id": 3, "name": "Carla"}]
  // let title = [
  Const        r9, [{"id": 1, "title": "Alpha Horror"}, {"id": 2, "title": "Beta Blood"}, {"id": 3, "title": "Gamma Comedy"}]
  // from ci in cast_info
  Const        r10, []
  // where ci.note in [
  Const        r11, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r12, "name"
  Const        r13, "starts_with"
  // it1.info == "genres" &&
  Const        r14, "info"
  // it2.info == "votes" &&
  Const        r15, "info"
  // k.keyword in [
  Const        r16, "keyword"
  // mi.info in ["Horror", "Thriller"] &&
  Const        r17, "info"
  // n.gender == "m"
  Const        r18, "gender"
  // movie_budget: mi.info,
  Const        r19, "movie_budget"
  Const        r20, "info"
  // movie_votes: mi_idx.info,
  Const        r21, "movie_votes"
  Const        r22, "info"
  // writer: n.name,
  Const        r23, "writer"
  Const        r24, "name"
  // violent_liongate_movie: t.title
  Const        r25, "violent_liongate_movie"
  Const        r26, "title"
  // from ci in cast_info
  IterPrep     r27, r0
  Len          r28, r27
  Const        r29, 0
L28:
  LessInt      r31, r29, r28
  JumpIfFalse  r31, L0
  Index        r33, r27, r29
  // join n in name on n.id == ci.person_id
  IterPrep     r34, r8
  Len          r35, r34
  Const        r36, "id"
  Const        r37, "person_id"
  // where ci.note in [
  Const        r38, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r39, "name"
  Const        r40, "starts_with"
  // it1.info == "genres" &&
  Const        r41, "info"
  // it2.info == "votes" &&
  Const        r42, "info"
  // k.keyword in [
  Const        r43, "keyword"
  // mi.info in ["Horror", "Thriller"] &&
  Const        r44, "info"
  // n.gender == "m"
  Const        r45, "gender"
  // movie_budget: mi.info,
  Const        r46, "movie_budget"
  Const        r47, "info"
  // movie_votes: mi_idx.info,
  Const        r48, "movie_votes"
  Const        r49, "info"
  // writer: n.name,
  Const        r50, "writer"
  Const        r51, "name"
  // violent_liongate_movie: t.title
  Const        r52, "violent_liongate_movie"
  Const        r53, "title"
  // join n in name on n.id == ci.person_id
  Const        r54, 0
L27:
  LessInt      r56, r54, r35
  JumpIfFalse  r56, L1
  Index        r58, r34, r54
  Const        r59, "id"
  Index        r60, r58, r59
  Const        r61, "person_id"
  Index        r62, r33, r61
  Equal        r63, r60, r62
  JumpIfFalse  r63, L2
  // join t in title on t.id == ci.movie_id
  IterPrep     r64, r9
  Len          r65, r64
  Const        r66, "id"
  Const        r67, "movie_id"
  // where ci.note in [
  Const        r68, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r69, "name"
  Const        r70, "starts_with"
  // it1.info == "genres" &&
  Const        r71, "info"
  // it2.info == "votes" &&
  Const        r72, "info"
  // k.keyword in [
  Const        r73, "keyword"
  // mi.info in ["Horror", "Thriller"] &&
  Const        r74, "info"
  // n.gender == "m"
  Const        r75, "gender"
  // movie_budget: mi.info,
  Const        r76, "movie_budget"
  Const        r77, "info"
  // movie_votes: mi_idx.info,
  Const        r78, "movie_votes"
  Const        r79, "info"
  // writer: n.name,
  Const        r80, "writer"
  Const        r81, "name"
  // violent_liongate_movie: t.title
  Const        r82, "violent_liongate_movie"
  Const        r83, "title"
  // join t in title on t.id == ci.movie_id
  Const        r84, 0
L26:
  LessInt      r86, r84, r65
  JumpIfFalse  r86, L2
  Index        r88, r64, r84
  Const        r89, "id"
  Index        r90, r88, r89
  Const        r91, "movie_id"
  Index        r92, r33, r91
  Equal        r93, r90, r92
  JumpIfFalse  r93, L3
  // join mi in movie_info on mi.movie_id == t.id
  IterPrep     r94, r5
  Len          r95, r94
  Const        r96, "movie_id"
  Const        r97, "id"
  // where ci.note in [
  Const        r98, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r99, "name"
  Const        r100, "starts_with"
  // it1.info == "genres" &&
  Const        r101, "info"
  // it2.info == "votes" &&
  Const        r102, "info"
  // k.keyword in [
  Const        r103, "keyword"
  // mi.info in ["Horror", "Thriller"] &&
  Const        r104, "info"
  // n.gender == "m"
  Const        r105, "gender"
  // movie_budget: mi.info,
  Const        r106, "movie_budget"
  Const        r107, "info"
  // movie_votes: mi_idx.info,
  Const        r108, "movie_votes"
  Const        r109, "info"
  // writer: n.name,
  Const        r110, "writer"
  Const        r111, "name"
  // violent_liongate_movie: t.title
  Const        r112, "violent_liongate_movie"
  Const        r113, "title"
  // join mi in movie_info on mi.movie_id == t.id
  Const        r114, 0
L25:
  LessInt      r116, r114, r95
  JumpIfFalse  r116, L3
  Index        r118, r94, r114
  Const        r119, "movie_id"
  Index        r120, r118, r119
  Const        r121, "id"
  Index        r122, r88, r121
  Equal        r123, r120, r122
  JumpIfFalse  r123, L4
  // join mi_idx in movie_info_idx on mi_idx.movie_id == t.id
  IterPrep     r124, r6
  Len          r125, r124
  Const        r126, "movie_id"
  Const        r127, "id"
  // where ci.note in [
  Const        r128, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r129, "name"
  Const        r130, "starts_with"
  // it1.info == "genres" &&
  Const        r131, "info"
  // it2.info == "votes" &&
  Const        r132, "info"
  // k.keyword in [
  Const        r133, "keyword"
  // mi.info in ["Horror", "Thriller"] &&
  Const        r134, "info"
  // n.gender == "m"
  Const        r135, "gender"
  // movie_budget: mi.info,
  Const        r136, "movie_budget"
  Const        r137, "info"
  // movie_votes: mi_idx.info,
  Const        r138, "movie_votes"
  Const        r139, "info"
  // writer: n.name,
  Const        r140, "writer"
  Const        r141, "name"
  // violent_liongate_movie: t.title
  Const        r142, "violent_liongate_movie"
  Const        r143, "title"
  // join mi_idx in movie_info_idx on mi_idx.movie_id == t.id
  Const        r144, 0
L24:
  LessInt      r146, r144, r125
  JumpIfFalse  r146, L4
  Index        r148, r124, r144
  Const        r149, "movie_id"
  Index        r150, r148, r149
  Const        r151, "id"
  Index        r152, r88, r151
  Equal        r153, r150, r152
  JumpIfFalse  r153, L5
  // join mk in movie_keyword on mk.movie_id == t.id
  IterPrep     r154, r7
  Len          r155, r154
  Const        r156, "movie_id"
  Const        r157, "id"
  // where ci.note in [
  Const        r158, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r159, "name"
  Const        r160, "starts_with"
  // it1.info == "genres" &&
  Const        r161, "info"
  // it2.info == "votes" &&
  Const        r162, "info"
  // k.keyword in [
  Const        r163, "keyword"
  // mi.info in ["Horror", "Thriller"] &&
  Const        r164, "info"
  // n.gender == "m"
  Const        r165, "gender"
  // movie_budget: mi.info,
  Const        r166, "movie_budget"
  Const        r167, "info"
  // movie_votes: mi_idx.info,
  Const        r168, "movie_votes"
  Const        r169, "info"
  // writer: n.name,
  Const        r170, "writer"
  Const        r171, "name"
  // violent_liongate_movie: t.title
  Const        r172, "violent_liongate_movie"
  Const        r173, "title"
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r174, 0
L23:
  LessInt      r176, r174, r155
  JumpIfFalse  r176, L5
  Index        r178, r154, r174
  Const        r179, "movie_id"
  Index        r180, r178, r179
  Const        r181, "id"
  Index        r182, r88, r181
  Equal        r183, r180, r182
  JumpIfFalse  r183, L6
  // join k in keyword on k.id == mk.keyword_id
  IterPrep     r184, r3
  Len          r185, r184
  Const        r186, "id"
  Const        r187, "keyword_id"
  // where ci.note in [
  Const        r188, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r189, "name"
  Const        r190, "starts_with"
  // it1.info == "genres" &&
  Const        r191, "info"
  // it2.info == "votes" &&
  Const        r192, "info"
  // k.keyword in [
  Const        r193, "keyword"
  // mi.info in ["Horror", "Thriller"] &&
  Const        r194, "info"
  // n.gender == "m"
  Const        r195, "gender"
  // movie_budget: mi.info,
  Const        r196, "movie_budget"
  Const        r197, "info"
  // movie_votes: mi_idx.info,
  Const        r198, "movie_votes"
  Const        r199, "info"
  // writer: n.name,
  Const        r200, "writer"
  Const        r201, "name"
  // violent_liongate_movie: t.title
  Const        r202, "violent_liongate_movie"
  Const        r203, "title"
  // join k in keyword on k.id == mk.keyword_id
  Const        r204, 0
L22:
  LessInt      r206, r204, r185
  JumpIfFalse  r206, L6
  Index        r208, r184, r204
  Const        r209, "id"
  Index        r210, r208, r209
  Const        r211, "keyword_id"
  Index        r212, r178, r211
  Equal        r213, r210, r212
  JumpIfFalse  r213, L7
  // join mc in movie_companies on mc.movie_id == t.id
  IterPrep     r214, r4
  Len          r215, r214
  Const        r216, "movie_id"
  Const        r217, "id"
  // where ci.note in [
  Const        r218, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r219, "name"
  Const        r220, "starts_with"
  // it1.info == "genres" &&
  Const        r221, "info"
  // it2.info == "votes" &&
  Const        r222, "info"
  // k.keyword in [
  Const        r223, "keyword"
  // mi.info in ["Horror", "Thriller"] &&
  Const        r224, "info"
  // n.gender == "m"
  Const        r225, "gender"
  // movie_budget: mi.info,
  Const        r226, "movie_budget"
  Const        r227, "info"
  // movie_votes: mi_idx.info,
  Const        r228, "movie_votes"
  Const        r229, "info"
  // writer: n.name,
  Const        r230, "writer"
  Const        r231, "name"
  // violent_liongate_movie: t.title
  Const        r232, "violent_liongate_movie"
  Const        r233, "title"
  // join mc in movie_companies on mc.movie_id == t.id
  Const        r234, 0
L21:
  LessInt      r236, r234, r215
  JumpIfFalse  r236, L7
  Index        r238, r214, r234
  Const        r239, "movie_id"
  Index        r240, r238, r239
  Const        r241, "id"
  Index        r242, r88, r241
  Equal        r243, r240, r242
  JumpIfFalse  r243, L8
  // join cn in company_name on cn.id == mc.company_id
  IterPrep     r244, r1
  Len          r245, r244
  Const        r246, "id"
  Const        r247, "company_id"
  // where ci.note in [
  Const        r248, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r249, "name"
  Const        r250, "starts_with"
  // it1.info == "genres" &&
  Const        r251, "info"
  // it2.info == "votes" &&
  Const        r252, "info"
  // k.keyword in [
  Const        r253, "keyword"
  // mi.info in ["Horror", "Thriller"] &&
  Const        r254, "info"
  // n.gender == "m"
  Const        r255, "gender"
  // movie_budget: mi.info,
  Const        r256, "movie_budget"
  Const        r257, "info"
  // movie_votes: mi_idx.info,
  Const        r258, "movie_votes"
  Const        r259, "info"
  // writer: n.name,
  Const        r260, "writer"
  Const        r261, "name"
  // violent_liongate_movie: t.title
  Const        r262, "violent_liongate_movie"
  Const        r263, "title"
  // join cn in company_name on cn.id == mc.company_id
  Const        r264, 0
L20:
  LessInt      r266, r264, r245
  JumpIfFalse  r266, L8
  Index        r268, r244, r264
  Const        r269, "id"
  Index        r270, r268, r269
  Const        r271, "company_id"
  Index        r272, r238, r271
  Equal        r273, r270, r272
  JumpIfFalse  r273, L9
  // join it1 in info_type on it1.id == mi.info_type_id
  IterPrep     r274, r2
  Len          r275, r274
  Const        r276, "id"
  Const        r277, "info_type_id"
  // where ci.note in [
  Const        r278, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r279, "name"
  Const        r280, "starts_with"
  // it1.info == "genres" &&
  Const        r281, "info"
  // it2.info == "votes" &&
  Const        r282, "info"
  // k.keyword in [
  Const        r283, "keyword"
  // mi.info in ["Horror", "Thriller"] &&
  Const        r284, "info"
  // n.gender == "m"
  Const        r285, "gender"
  // movie_budget: mi.info,
  Const        r286, "movie_budget"
  Const        r287, "info"
  // movie_votes: mi_idx.info,
  Const        r288, "movie_votes"
  Const        r289, "info"
  // writer: n.name,
  Const        r290, "writer"
  Const        r291, "name"
  // violent_liongate_movie: t.title
  Const        r292, "violent_liongate_movie"
  Const        r293, "title"
  // join it1 in info_type on it1.id == mi.info_type_id
  Const        r294, 0
L19:
  LessInt      r296, r294, r275
  JumpIfFalse  r296, L9
  Index        r298, r274, r294
  Const        r299, "id"
  Index        r300, r298, r299
  Const        r301, "info_type_id"
  Index        r302, r118, r301
  Equal        r303, r300, r302
  JumpIfFalse  r303, L10
  // join it2 in info_type on it2.id == mi_idx.info_type_id
  IterPrep     r304, r2
  Len          r305, r304
  Const        r306, "id"
  Const        r307, "info_type_id"
  // where ci.note in [
  Const        r308, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r309, "name"
  Const        r310, "starts_with"
  // it1.info == "genres" &&
  Const        r311, "info"
  // it2.info == "votes" &&
  Const        r312, "info"
  // k.keyword in [
  Const        r313, "keyword"
  // mi.info in ["Horror", "Thriller"] &&
  Const        r314, "info"
  // n.gender == "m"
  Const        r315, "gender"
  // movie_budget: mi.info,
  Const        r316, "movie_budget"
  Const        r317, "info"
  // movie_votes: mi_idx.info,
  Const        r318, "movie_votes"
  Const        r319, "info"
  // writer: n.name,
  Const        r320, "writer"
  Const        r321, "name"
  // violent_liongate_movie: t.title
  Const        r322, "violent_liongate_movie"
  Const        r323, "title"
  // join it2 in info_type on it2.id == mi_idx.info_type_id
  Const        r324, 0
L18:
  LessInt      r326, r324, r305
  JumpIfFalse  r326, L10
  Index        r328, r304, r324
  Const        r329, "id"
  Index        r330, r328, r329
  Const        r331, "info_type_id"
  Index        r332, r148, r331
  Equal        r333, r330, r332
  JumpIfFalse  r333, L11
  // where ci.note in [
  Const        r334, "note"
  Index        r335, r33, r334
  Const        r336, ["(writer)", "(head writer)", "(written by)", "(story)", "(story editor)"]
  In           r337, r335, r336
  // it1.info == "genres" &&
  Const        r338, "info"
  Index        r339, r298, r338
  Const        r340, "genres"
  Equal        r341, r339, r340
  // it2.info == "votes" &&
  Const        r342, "info"
  Index        r343, r328, r342
  Const        r344, "votes"
  Equal        r345, r343, r344
  // k.keyword in [
  Const        r346, "keyword"
  Index        r347, r208, r346
  Const        r348, ["murder", "violence", "blood", "gore", "death", "female-nudity", "hospital"]
  In           r349, r347, r348
  // mi.info in ["Horror", "Thriller"] &&
  Const        r350, "info"
  Index        r351, r118, r350
  Const        r352, ["Horror", "Thriller"]
  In           r353, r351, r352
  // n.gender == "m"
  Const        r354, "gender"
  Index        r355, r58, r354
  Const        r356, "m"
  Equal        r357, r355, r356
  // ] &&
  Move         r358, r337
  JumpIfFalse  r358, L12
  Const        r359, "name"
  Index        r360, r268, r359
  // cn.name.starts_with("Lionsgate") &&
  Const        r361, "Lionsgate"
  Const        r362, 0
  Const        r363, 9
  Len          r364, r360
  LessEq       r365, r363, r364
  JumpIfFalse  r365, L13
  Slice        r367, r360, r362, r363
  Equal        r366, r367, r361
  Jump         L12
L13:
  Const        r369, false
  // it1.info == "genres" &&
  Move         r370, r341
  JumpIfFalse  r370, L14
L14:
  // it2.info == "votes" &&
  Move         r371, r345
  JumpIfFalse  r371, L15
L15:
  // ] &&
  Move         r372, r349
  JumpIfFalse  r372, L16
L16:
  // mi.info in ["Horror", "Thriller"] &&
  Move         r373, r353
  JumpIfFalse  r373, L17
  Move         r373, r357
L17:
  // where ci.note in [
  JumpIfFalse  r373, L11
  // movie_budget: mi.info,
  Const        r374, "movie_budget"
  Const        r375, "info"
  Index        r376, r118, r375
  // movie_votes: mi_idx.info,
  Const        r377, "movie_votes"
  Const        r378, "info"
  Index        r379, r148, r378
  // writer: n.name,
  Const        r380, "writer"
  Const        r381, "name"
  Index        r382, r58, r381
  // violent_liongate_movie: t.title
  Const        r383, "violent_liongate_movie"
  Const        r384, "title"
  Index        r385, r88, r384
  // movie_budget: mi.info,
  Move         r386, r374
  Move         r387, r376
  // movie_votes: mi_idx.info,
  Move         r388, r377
  Move         r389, r379
  // writer: n.name,
  Move         r390, r380
  Move         r391, r382
  // violent_liongate_movie: t.title
  Move         r392, r383
  Move         r393, r385
  // select {
  MakeMap      r394, 4, r386
  // from ci in cast_info
  Append       r10, r10, r394
L11:
  // join it2 in info_type on it2.id == mi_idx.info_type_id
  Const        r396, 1
  Add          r324, r324, r396
  Jump         L18
L10:
  // join it1 in info_type on it1.id == mi.info_type_id
  Const        r397, 1
  Add          r294, r294, r397
  Jump         L19
L9:
  // join cn in company_name on cn.id == mc.company_id
  Const        r398, 1
  Add          r264, r264, r398
  Jump         L20
L8:
  // join mc in movie_companies on mc.movie_id == t.id
  Const        r399, 1
  Add          r234, r234, r399
  Jump         L21
L7:
  // join k in keyword on k.id == mk.keyword_id
  Const        r400, 1
  Add          r204, r204, r400
  Jump         L22
L6:
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r401, 1
  Add          r174, r174, r401
  Jump         L23
L5:
  // join mi_idx in movie_info_idx on mi_idx.movie_id == t.id
  Const        r402, 1
  Add          r144, r144, r402
  Jump         L24
L4:
  // join mi in movie_info on mi.movie_id == t.id
  Const        r403, 1
  Add          r114, r114, r403
  Jump         L25
L3:
  // join t in title on t.id == ci.movie_id
  Const        r404, 1
  Add          r84, r84, r404
  Jump         L26
L2:
  // join n in name on n.id == ci.person_id
  Const        r405, 1
  Add          r54, r54, r405
  Jump         L27
L1:
  // from ci in cast_info
  Const        r406, 1
  AddInt       r29, r29, r406
  Jump         L28
L0:
  // movie_budget: min(from r in matches select r.movie_budget),
  Const        r407, "movie_budget"
  Const        r408, []
  Const        r409, "movie_budget"
  IterPrep     r410, r10
  Len          r411, r410
  Const        r412, 0
L30:
  LessInt      r414, r412, r411
  JumpIfFalse  r414, L29
  Index        r416, r410, r412
  Const        r417, "movie_budget"
  Index        r418, r416, r417
  Append       r408, r408, r418
  Const        r420, 1
  AddInt       r412, r412, r420
  Jump         L30
L29:
  Min          r421, r408
  // movie_votes: min(from r in matches select r.movie_votes),
  Const        r422, "movie_votes"
  Const        r423, []
  Const        r424, "movie_votes"
  IterPrep     r425, r10
  Len          r426, r425
  Const        r427, 0
L32:
  LessInt      r429, r427, r426
  JumpIfFalse  r429, L31
  Index        r416, r425, r427
  Const        r431, "movie_votes"
  Index        r432, r416, r431
  Append       r423, r423, r432
  Const        r434, 1
  AddInt       r427, r427, r434
  Jump         L32
L31:
  Min          r435, r423
  // writer: min(from r in matches select r.writer),
  Const        r436, "writer"
  Const        r437, []
  Const        r438, "writer"
  IterPrep     r439, r10
  Len          r440, r439
  Const        r441, 0
L34:
  LessInt      r443, r441, r440
  JumpIfFalse  r443, L33
  Index        r416, r439, r441
  Const        r445, "writer"
  Index        r446, r416, r445
  Append       r437, r437, r446
  Const        r448, 1
  AddInt       r441, r441, r448
  Jump         L34
L33:
  Min          r449, r437
  // violent_liongate_movie: min(from r in matches select r.violent_liongate_movie)
  Const        r450, "violent_liongate_movie"
  Const        r451, []
  Const        r452, "violent_liongate_movie"
  IterPrep     r453, r10
  Len          r454, r453
  Const        r455, 0
L36:
  LessInt      r457, r455, r454
  JumpIfFalse  r457, L35
  Index        r416, r453, r455
  Const        r459, "violent_liongate_movie"
  Index        r460, r416, r459
  Append       r451, r451, r460
  Const        r462, 1
  AddInt       r455, r455, r462
  Jump         L36
L35:
  Min          r463, r451
  // movie_budget: min(from r in matches select r.movie_budget),
  Move         r464, r407
  Move         r465, r421
  // movie_votes: min(from r in matches select r.movie_votes),
  Move         r466, r422
  Move         r467, r435
  // writer: min(from r in matches select r.writer),
  Move         r468, r436
  Move         r469, r449
  // violent_liongate_movie: min(from r in matches select r.violent_liongate_movie)
  Move         r470, r450
  Move         r471, r463
  // {
  MakeMap      r473, 4, r464
  // let result = [
  MakeList     r474, 1, r473
  // json(result)
  JSON         r474
  // expect result == [
  Const        r475, [{"movie_budget": "Horror", "movie_votes": 800, "violent_liongate_movie": "Alpha Horror", "writer": "Arthur"}]
  Equal        r476, r474, r475
  Expect       r476
  Return       r0
