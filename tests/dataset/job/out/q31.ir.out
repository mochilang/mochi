func main (regs=50)
  // let cast_info = [
  Const        r0, [{"movie_id": 1, "note": "(writer)", "person_id": 1}, {"movie_id": 2, "note": "(story)", "person_id": 2}, {"movie_id": 3, "note": "(writer)", "person_id": 3}]
L11:
  // let company_name = [
  Const        r1, [{"id": 1, "name": "Lionsgate Pictures"}, {"id": 2, "name": "Other Studio"}]
L1:
  // let info_type = [
  Const        r2, [{"id": 10, "info": "genres"}, {"id": 20, "info": "votes"}]
L26:
  // let keyword = [
  Const        r3, [{"id": 100, "keyword": "murder"}, {"id": 200, "keyword": "comedy"}]
L9:
  // let movie_companies = [
  Const        r4, [{"company_id": 1, "movie_id": 1}, {"company_id": 1, "movie_id": 2}, {"company_id": 2, "movie_id": 3}]
L20:
  // let movie_info = [
  Const        r5, [{"info": "Horror", "info_type_id": 10, "movie_id": 1}, {"info": "Thriller", "info_type_id": 10, "movie_id": 2}, {"info": "Comedy", "info_type_id": 10, "movie_id": 3}]
L15:
  // let movie_info_idx = [
  Const        r6, [{"info": 1000, "info_type_id": 20, "movie_id": 1}, {"info": 800, "info_type_id": 20, "movie_id": 2}, {"info": 500, "info_type_id": 20, "movie_id": 3}]
L0:
  // let movie_keyword = [
  Const        r7, [{"keyword_id": 100, "movie_id": 1}, {"keyword_id": 100, "movie_id": 2}, {"keyword_id": 200, "movie_id": 3}]
  // let name = [
  Const        r8, [{"gender": "m", "id": 1, "name": "Arthur"}, {"gender": "m", "id": 2, "name": "Bob"}, {"gender": "f", "id": 3, "name": "Carla"}]
L24:
  // let title = [
  Const        r9, [{"id": 1, "title": "Alpha Horror"}, {"id": 2, "title": "Beta Blood"}, {"id": 3, "title": "Gamma Comedy"}]
  // from ci in cast_info
  Const        r10, []
  // where ci.note in [
  Const        r11, "note"
L21:
  // cn.name.starts_with("Lionsgate") &&
  Const        r12, "name"
L2:
  Const        r13, "starts_with"
L13:
  // it1.info == "genres" &&
  Const        r14, "info"
L16:
  // it2.info == "votes" &&
  Const        r15, "info"
  // k.keyword in [
  Const        r16, "keyword"
L22:
  // mi.info in ["Horror", "Thriller"] &&
  Const        r17, "info"
  // n.gender == "m"
  Const        r18, "gender"
  // movie_budget: mi.info,
  Const        r19, "movie_budget"
L10:
  Const        r20, "info"
L18:
  // movie_votes: mi_idx.info,
  Const        r21, "movie_votes"
L8:
  Const        r22, "info"
  // writer: n.name,
  Const        r23, "writer"
L19:
  Const        r24, "name"
L17:
  // violent_liongate_movie: t.title
  Const        r25, "violent_liongate_movie"
L7:
  Const        r26, "title"
L25:
  // from ci in cast_info
  IterPrep     r27, r0
  Len          r28, r27
  Const        r29, 0
L23:
  LessInt      r30, r29, r28
L3:
  JumpIfFalse  r30, L0
L14:
  Index        r31, r27, r29
  // join n in name on n.id == ci.person_id
  IterPrep     r32, r8
  Len          r33, r32
L6:
  Const        r11, "id"
  Const        r12, "person_id"
L27:
  // where ci.note in [
  Const        r13, "note"
L5:
  // cn.name.starts_with("Lionsgate") &&
  Const        r14, "name"
  Const        r15, "starts_with"
  // it1.info == "genres" &&
  Const        r16, "info"
L4:
  // it2.info == "votes" &&
  Const        r17, "info"
  // k.keyword in [
  Const        r18, "keyword"
  // mi.info in ["Horror", "Thriller"] &&
  Const        r19, "info"
  // n.gender == "m"
  Const        r20, "gender"
L28:
  // movie_budget: mi.info,
  Const        r21, "movie_budget"
  Const        r22, "info"
  // movie_votes: mi_idx.info,
  Const        r23, "movie_votes"
  Const        r24, "info"
  // writer: n.name,
  Const        r25, "writer"
  Const        r26, "name"
  // violent_liongate_movie: t.title
  Const        r28, "violent_liongate_movie"
  Const        r30, "title"
  // join n in name on n.id == ci.person_id
  Const        r27, 0
  LessInt      r8, r27, r33
  JumpIfFalse  r8, L1
  Index        r11, r32, r27
  Const        r12, "id"
  Index        r13, r11, r12
  Const        r14, "person_id"
  Index        r15, r31, r14
  Equal        r16, r13, r15
  JumpIfFalse  r16, L2
  // join t in title on t.id == ci.movie_id
  IterPrep     r17, r9
  Len          r18, r17
  Const        r19, "id"
  Const        r20, "movie_id"
  // where ci.note in [
  Const        r21, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r22, "name"
  Const        r23, "starts_with"
  // it1.info == "genres" &&
  Const        r24, "info"
  // it2.info == "votes" &&
  Const        r25, "info"
  // k.keyword in [
  Const        r26, "keyword"
  // mi.info in ["Horror", "Thriller"] &&
  Const        r28, "info"
  // n.gender == "m"
  Const        r30, "gender"
  // movie_budget: mi.info,
  Const        r33, "movie_budget"
  Const        r8, "info"
  // movie_votes: mi_idx.info,
  Const        r32, "movie_votes"
  Const        r12, "info"
  // writer: n.name,
  Const        r14, "writer"
  Const        r13, "name"
  // violent_liongate_movie: t.title
  Const        r15, "violent_liongate_movie"
  Const        r16, "title"
  // join t in title on t.id == ci.movie_id
  Const        r9, 0
  LessInt      r19, r9, r18
  JumpIfFalse  r19, L2
  Index        r20, r17, r9
  Const        r21, "id"
  Index        r22, r20, r21
  Const        r23, "movie_id"
  Index        r24, r31, r23
  Equal        r25, r22, r24
  JumpIfFalse  r25, L3
  // join mi in movie_info on mi.movie_id == t.id
  IterPrep     r26, r5
  Len          r28, r26
  Const        r30, "movie_id"
  Const        r33, "id"
  // where ci.note in [
  Const        r8, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r32, "name"
  Const        r12, "starts_with"
  // it1.info == "genres" &&
  Const        r14, "info"
  // it2.info == "votes" &&
  Const        r13, "info"
  // k.keyword in [
  Const        r15, "keyword"
  // mi.info in ["Horror", "Thriller"] &&
  Const        r16, "info"
  // n.gender == "m"
  Const        r18, "gender"
  // movie_budget: mi.info,
  Const        r19, "movie_budget"
  Const        r17, "info"
  // movie_votes: mi_idx.info,
  Const        r21, "movie_votes"
  Const        r23, "info"
  // writer: n.name,
  Const        r22, "writer"
  Const        r24, "name"
  // violent_liongate_movie: t.title
  Const        r25, "violent_liongate_movie"
  Const        r5, "title"
  // join mi in movie_info on mi.movie_id == t.id
  Const        r30, 0
  LessInt      r33, r30, r28
  JumpIfFalse  r33, L3
  Index        r8, r26, r30
  Const        r32, "movie_id"
  Index        r12, r8, r32
  Const        r14, "id"
  Index        r13, r20, r14
  Equal        r15, r12, r13
  JumpIfFalse  r15, L4
  // join mi_idx in movie_info_idx on mi_idx.movie_id == t.id
  IterPrep     r16, r6
  Len          r18, r16
  Const        r19, "movie_id"
  Const        r17, "id"
  // where ci.note in [
  Const        r21, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r23, "name"
  Const        r22, "starts_with"
  // it1.info == "genres" &&
  Const        r24, "info"
  // it2.info == "votes" &&
  Const        r25, "info"
  // k.keyword in [
  Const        r5, "keyword"
  // mi.info in ["Horror", "Thriller"] &&
  Const        r28, "info"
  // n.gender == "m"
  Const        r33, "gender"
  // movie_budget: mi.info,
  Const        r26, "movie_budget"
  Const        r32, "info"
  // movie_votes: mi_idx.info,
  Const        r14, "movie_votes"
  Const        r12, "info"
  // writer: n.name,
  Const        r13, "writer"
  Const        r15, "name"
  // violent_liongate_movie: t.title
  Const        r6, "violent_liongate_movie"
  Const        r19, "title"
  // join mi_idx in movie_info_idx on mi_idx.movie_id == t.id
  Const        r17, 0
  LessInt      r21, r17, r18
  JumpIfFalse  r21, L4
  Index        r23, r16, r17
  Const        r22, "movie_id"
  Index        r24, r23, r22
  Const        r25, "id"
  Index        r5, r20, r25
  Equal        r28, r24, r5
  JumpIfFalse  r28, L5
  // join mk in movie_keyword on mk.movie_id == t.id
  IterPrep     r33, r7
  Len          r26, r33
  Const        r32, "movie_id"
  Const        r14, "id"
  // where ci.note in [
  Const        r12, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r13, "name"
  Const        r15, "starts_with"
  // it1.info == "genres" &&
  Const        r6, "info"
  // it2.info == "votes" &&
  Const        r19, "info"
  // k.keyword in [
  Const        r18, "keyword"
  // mi.info in ["Horror", "Thriller"] &&
  Const        r21, "info"
  // n.gender == "m"
  Const        r16, "gender"
  // movie_budget: mi.info,
  Const        r22, "movie_budget"
  Const        r25, "info"
  // movie_votes: mi_idx.info,
  Const        r24, "movie_votes"
  Const        r5, "info"
  // writer: n.name,
  Const        r28, "writer"
  Const        r7, "name"
  // violent_liongate_movie: t.title
  Const        r32, "violent_liongate_movie"
  Const        r14, "title"
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r12, 0
  LessInt      r13, r12, r26
  JumpIfFalse  r13, L5
  Index        r15, r33, r12
  Const        r6, "movie_id"
  Index        r19, r15, r6
  Const        r18, "id"
  Index        r21, r20, r18
  Equal        r16, r19, r21
  JumpIfFalse  r16, L6
  // join k in keyword on k.id == mk.keyword_id
  IterPrep     r22, r3
  Len          r25, r22
  Const        r24, "id"
  Const        r5, "keyword_id"
  // where ci.note in [
  Const        r28, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r7, "name"
  Const        r32, "starts_with"
  // it1.info == "genres" &&
  Const        r14, "info"
  // it2.info == "votes" &&
  Const        r26, "info"
  // k.keyword in [
  Const        r13, "keyword"
  // mi.info in ["Horror", "Thriller"] &&
  Const        r33, "info"
  // n.gender == "m"
  Const        r6, "gender"
  // movie_budget: mi.info,
  Const        r18, "movie_budget"
  Const        r19, "info"
  // movie_votes: mi_idx.info,
  Const        r21, "movie_votes"
  Const        r16, "info"
  // writer: n.name,
  Const        r3, "writer"
  Const        r24, "name"
  // violent_liongate_movie: t.title
  Const        r5, "violent_liongate_movie"
  Const        r28, "title"
  // join k in keyword on k.id == mk.keyword_id
  Const        r7, 0
  LessInt      r32, r7, r25
  JumpIfFalse  r32, L6
  Index        r14, r22, r7
  Const        r26, "id"
  Index        r13, r14, r26
  Const        r33, "keyword_id"
  Index        r6, r15, r33
  Equal        r18, r13, r6
  JumpIfFalse  r18, L7
  // join mc in movie_companies on mc.movie_id == t.id
  IterPrep     r19, r4
  Len          r21, r19
  Const        r16, "movie_id"
  Const        r3, "id"
  // where ci.note in [
  Const        r24, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r5, "name"
  Const        r28, "starts_with"
  // it1.info == "genres" &&
  Const        r25, "info"
  // it2.info == "votes" &&
  Const        r32, "info"
  // k.keyword in [
  Const        r22, "keyword"
  // mi.info in ["Horror", "Thriller"] &&
  Const        r26, "info"
  // n.gender == "m"
  Const        r15, "gender"
  // movie_budget: mi.info,
  Const        r33, "movie_budget"
  Const        r13, "info"
  // movie_votes: mi_idx.info,
  Const        r6, "movie_votes"
  Const        r18, "info"
  // writer: n.name,
  Const        r4, "writer"
  Const        r16, "name"
  // violent_liongate_movie: t.title
  Const        r3, "violent_liongate_movie"
  Const        r24, "title"
  // join mc in movie_companies on mc.movie_id == t.id
  Const        r5, 0
  LessInt      r28, r5, r21
  JumpIfFalse  r28, L7
  Index        r25, r19, r5
  Const        r32, "movie_id"
  Index        r22, r25, r32
  Const        r26, "id"
  Index        r15, r20, r26
  Equal        r33, r22, r15
  JumpIfFalse  r33, L8
  // join cn in company_name on cn.id == mc.company_id
  IterPrep     r13, r1
  Len          r6, r13
  Const        r18, "id"
  Const        r4, "company_id"
  // where ci.note in [
  Const        r16, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r3, "name"
  Const        r24, "starts_with"
  // it1.info == "genres" &&
  Const        r21, "info"
  // it2.info == "votes" &&
  Const        r28, "info"
  // k.keyword in [
  Const        r19, "keyword"
  // mi.info in ["Horror", "Thriller"] &&
  Const        r32, "info"
  // n.gender == "m"
  Const        r26, "gender"
  // movie_budget: mi.info,
  Const        r22, "movie_budget"
  Const        r15, "info"
  // movie_votes: mi_idx.info,
  Const        r33, "movie_votes"
  Const        r1, "info"
  // writer: n.name,
  Const        r18, "writer"
  Const        r4, "name"
  // violent_liongate_movie: t.title
  Const        r16, "violent_liongate_movie"
  Const        r3, "title"
  // join cn in company_name on cn.id == mc.company_id
  Const        r24, 0
  LessInt      r21, r24, r6
  JumpIfFalse  r21, L8
  Index        r28, r13, r24
  Const        r19, "id"
  Index        r32, r28, r19
  Const        r26, "company_id"
  Index        r22, r25, r26
  Equal        r15, r32, r22
  JumpIfFalse  r15, L9
  // join it1 in info_type on it1.id == mi.info_type_id
  IterPrep     r33, r2
  Len          r1, r33
  Const        r18, "id"
  Const        r4, "info_type_id"
  // where ci.note in [
  Const        r16, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r3, "name"
  Const        r6, "starts_with"
  // it1.info == "genres" &&
  Const        r21, "info"
  // it2.info == "votes" &&
  Const        r13, "info"
  // k.keyword in [
  Const        r19, "keyword"
  // mi.info in ["Horror", "Thriller"] &&
  Const        r25, "info"
  // n.gender == "m"
  Const        r26, "gender"
  // movie_budget: mi.info,
  Const        r32, "movie_budget"
  Const        r22, "info"
  // movie_votes: mi_idx.info,
  Const        r15, "movie_votes"
  Const        r18, "info"
  // writer: n.name,
  Const        r4, "writer"
  Const        r16, "name"
  // violent_liongate_movie: t.title
  Const        r3, "violent_liongate_movie"
  Const        r6, "title"
  // join it1 in info_type on it1.id == mi.info_type_id
  Const        r21, 0
  LessInt      r13, r21, r1
  JumpIfFalse  r13, L9
  Index        r19, r33, r21
  Const        r25, "id"
  Index        r26, r19, r25
  Const        r32, "info_type_id"
  Index        r22, r8, r32
  Equal        r15, r26, r22
  JumpIfFalse  r15, L10
  // join it2 in info_type on it2.id == mi_idx.info_type_id
  IterPrep     r18, r2
  Len          r4, r18
  Const        r16, "id"
  Const        r3, "info_type_id"
  // where ci.note in [
  Const        r6, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r1, "name"
  Const        r13, "starts_with"
  // it1.info == "genres" &&
  Const        r33, "info"
  // it2.info == "votes" &&
  Const        r25, "info"
  // k.keyword in [
  Const        r32, "keyword"
  // mi.info in ["Horror", "Thriller"] &&
  Const        r26, "info"
  // n.gender == "m"
  Const        r22, "gender"
  // movie_budget: mi.info,
  Const        r15, "movie_budget"
  Const        r2, "info"
  // movie_votes: mi_idx.info,
  Const        r16, "movie_votes"
  Const        r3, "info"
  // writer: n.name,
  Const        r6, "writer"
  Const        r1, "name"
  // violent_liongate_movie: t.title
  Const        r13, "violent_liongate_movie"
  Const        r33, "title"
  // join it2 in info_type on it2.id == mi_idx.info_type_id
  Const        r25, 0
  LessInt      r32, r25, r4
  JumpIfFalse  r32, L10
  Index        r26, r18, r25
  Const        r22, "id"
  Index        r15, r26, r22
  Const        r2, "info_type_id"
  Index        r16, r23, r2
  Equal        r3, r15, r16
  JumpIfFalse  r3, L11
  // where ci.note in [
  Const        r6, "note"
  Index        r1, r31, r6
  Const        r13, ["(writer)", "(head writer)", "(written by)", "(story)", "(story editor)"]
  In           r33, r1, r13
  // it1.info == "genres" &&
  Const        r4, "info"
  Index        r32, r19, r4
  Const        r18, "genres"
  Equal        r22, r32, r18
  // it2.info == "votes" &&
  Const        r2, "info"
  Index        r15, r26, r2
  Const        r16, "votes"
  Equal        r3, r15, r16
  // k.keyword in [
  Const        r31, "keyword"
  Index        r6, r14, r31
  Const        r1, ["murder", "violence", "blood", "gore", "death", "female-nudity", "hospital"]
  In           r13, r6, r1
  // mi.info in ["Horror", "Thriller"] &&
  Const        r19, "info"
  Index        r4, r8, r19
  Const        r32, ["Horror", "Thriller"]
  In           r18, r4, r32
  // n.gender == "m"
  Const        r26, "gender"
  Index        r2, r11, r26
  Const        r15, "m"
  Equal        r16, r2, r15
  // ] &&
  Move         r14, r33
  JumpIfFalse  r14, L12
  Const        r31, "name"
  Index        r6, r28, r31
  // cn.name.starts_with("Lionsgate") &&
  Const        r1, "Lionsgate"
  Const        r19, 0
  Const        r4, 9
  Len          r32, r6
  LessEq       r26, r4, r32
  JumpIfFalse  r26, L13
  Slice        r2, r6, r19, r4
  Equal        r15, r2, r1
  Jump         L12
  Const        r33, false
  // it1.info == "genres" &&
  Move         r14, r22
  JumpIfFalse  r14, L14
  // it2.info == "votes" &&
  Move         r28, r3
  JumpIfFalse  r28, L15
  // ] &&
  Move         r31, r13
  JumpIfFalse  r31, L9
  // mi.info in ["Horror", "Thriller"] &&
  Move         r32, r18
  JumpIfFalse  r32, L16
  Move         r32, r16
  // where ci.note in [
  JumpIfFalse  r32, L11
  // movie_budget: mi.info,
  Const        r26, "movie_budget"
  Const        r6, "info"
  Index        r19, r8, r6
  // movie_votes: mi_idx.info,
  Const        r4, "movie_votes"
  Const        r1, "info"
  Index        r2, r23, r1
  // writer: n.name,
  Const        r15, "writer"
  Const        r33, "name"
  Index        r22, r11, r33
  // violent_liongate_movie: t.title
  Const        r14, "violent_liongate_movie"
  Const        r3, "title"
  Index        r28, r20, r3
  // movie_budget: mi.info,
  Move         r34, r26
  Move         r35, r19
  // movie_votes: mi_idx.info,
  Move         r36, r4
  Move         r37, r2
  // writer: n.name,
  Move         r38, r15
  Move         r39, r22
  // violent_liongate_movie: t.title
  Move         r40, r14
  Move         r41, r28
  // select {
  MakeMap      r13, 4, r34
  // from ci in cast_info
  Append       r10, r10, r13
  // join it2 in info_type on it2.id == mi_idx.info_type_id
  Const        r31, 1
  Add          r25, r25, r31
  Jump         L17
  // join it1 in info_type on it1.id == mi.info_type_id
  Const        r18, 1
  Add          r21, r21, r18
  Jump         L18
  // join cn in company_name on cn.id == mc.company_id
  Const        r16, 1
  Add          r24, r24, r16
  Jump         L19
  // join mc in movie_companies on mc.movie_id == t.id
  Const        r32, 1
  Add          r5, r5, r32
  Jump         L20
  // join k in keyword on k.id == mk.keyword_id
  Const        r8, 1
  Add          r7, r7, r8
  Jump         L0
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r6, 1
  Add          r12, r12, r6
  Jump         L21
  // join mi_idx in movie_info_idx on mi_idx.movie_id == t.id
  Const        r23, 1
  Add          r17, r17, r23
  Jump         L22
  // join mi in movie_info on mi.movie_id == t.id
  Const        r1, 1
  Add          r30, r30, r1
  Jump         L23
  // join t in title on t.id == ci.movie_id
  Const        r11, 1
  Add          r9, r9, r11
  Jump         L24
  // join n in name on n.id == ci.person_id
  Const        r33, 1
  Add          r27, r27, r33
  Jump         L25
  // from ci in cast_info
  Const        r20, 1
  AddInt       r29, r29, r20
  Jump         L26
  // movie_budget: min(from r in matches select r.movie_budget),
  Const        r26, "movie_budget"
  Const        r19, []
  Const        r4, "movie_budget"
  IterPrep     r2, r10
  Len          r15, r2
  Const        r22, 0
  LessInt      r14, r22, r15
  JumpIfFalse  r14, L10
  Index        r28, r2, r22
  Const        r34, "movie_budget"
  Index        r35, r28, r34
  Append       r19, r19, r35
  Const        r36, 1
  AddInt       r22, r22, r36
  Jump         L27
  Min          r38, r19
  // movie_votes: min(from r in matches select r.movie_votes),
  Const        r39, "movie_votes"
  Const        r40, []
  Const        r41, "movie_votes"
  IterPrep     r13, r10
  Len          r25, r13
  Const        r31, 0
  LessInt      r21, r31, r25
  JumpIfFalse  r21, L28
  Index        r28, r13, r31
  Const        r18, "movie_votes"
  Index        r24, r28, r18
  Append       r40, r40, r24
  Const        r16, 1
  AddInt       r31, r31, r16
  Jump         L20
  Min          r32, r40
  // writer: min(from r in matches select r.writer),
  Const        r7, "writer"
  Const        r8, []
  Const        r12, "writer"
  IterPrep     r6, r10
  Len          r17, r6
  Const        r23, 0
  LessInt      r30, r23, r17
  JumpIfFalse  r30, L29
  Index        r28, r6, r23
  Const        r1, "writer"
  Index        r9, r28, r1
  Append       r8, r8, r9
  Const        r11, 1
  AddInt       r23, r23, r11
  Jump         L25
L29:
  Min          r33, r8
  // violent_liongate_movie: min(from r in matches select r.violent_liongate_movie)
  Const        r29, "violent_liongate_movie"
  Const        r20, []
  Const        r3, "violent_liongate_movie"
  IterPrep     r4, r10
  Len          r15, r4
  Const        r14, 0
L31:
  LessInt      r2, r14, r15
  JumpIfFalse  r2, L30
  Index        r28, r4, r14
  Const        r34, "violent_liongate_movie"
  Index        r35, r28, r34
  Append       r20, r20, r35
  Const        r22, 1
  AddInt       r14, r14, r22
  Jump         L31
L30:
  Min          r36, r20
  // movie_budget: min(from r in matches select r.movie_budget),
  Move         r42, r26
  Move         r43, r38
  // movie_votes: min(from r in matches select r.movie_votes),
  Move         r44, r39
  Move         r45, r32
  // writer: min(from r in matches select r.writer),
  Move         r46, r7
  Move         r47, r33
  // violent_liongate_movie: min(from r in matches select r.violent_liongate_movie)
  Move         r48, r29
  Move         r49, r36
  // {
  MakeMap      r37, 4, r42
  // let result = [
  MakeList     r27, 1, r37
  // json(result)
  JSON         r27
  // expect result == [
  Const        r19, [{"movie_budget": "Horror", "movie_votes": 800, "violent_liongate_movie": "Alpha Horror", "writer": "Arthur"}]
  Equal        r41, r27, r19
  Expect       r41
  Return       r0
