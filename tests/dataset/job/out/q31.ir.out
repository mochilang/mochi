func main (regs=226)
  // let cast_info = [
  Const        r0, [{"movie_id": 1, "note": "(writer)", "person_id": 1}, {"movie_id": 2, "note": "(story)", "person_id": 2}, {"movie_id": 3, "note": "(writer)", "person_id": 3}]
  // let company_name = [
  Const        r1, [{"id": 1, "name": "Lionsgate Pictures"}, {"id": 2, "name": "Other Studio"}]
  // let info_type = [
  Const        r2, [{"id": 10, "info": "genres"}, {"id": 20, "info": "votes"}]
  // let keyword = [
  Const        r3, [{"id": 100, "keyword": "murder"}, {"id": 200, "keyword": "comedy"}]
  // let movie_companies = [
  Const        r4, [{"company_id": 1, "movie_id": 1}, {"company_id": 1, "movie_id": 2}, {"company_id": 2, "movie_id": 3}]
  // let movie_info = [
  Const        r5, [{"info": "Horror", "info_type_id": 10, "movie_id": 1}, {"info": "Thriller", "info_type_id": 10, "movie_id": 2}, {"info": "Comedy", "info_type_id": 10, "movie_id": 3}]
  // let movie_info_idx = [
  Const        r6, [{"info": 1000, "info_type_id": 20, "movie_id": 1}, {"info": 800, "info_type_id": 20, "movie_id": 2}, {"info": 500, "info_type_id": 20, "movie_id": 3}]
  // let movie_keyword = [
  Const        r7, [{"keyword_id": 100, "movie_id": 1}, {"keyword_id": 100, "movie_id": 2}, {"keyword_id": 200, "movie_id": 3}]
  // let name = [
  Const        r8, [{"gender": "m", "id": 1, "name": "Arthur"}, {"gender": "m", "id": 2, "name": "Bob"}, {"gender": "f", "id": 3, "name": "Carla"}]
  // let title = [
  Const        r9, [{"id": 1, "title": "Alpha Horror"}, {"id": 2, "title": "Beta Blood"}, {"id": 3, "title": "Gamma Comedy"}]
  // from ci in cast_info
  Const        r10, []
  // where ci.note in [
  Const        r11, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r12, "name"
  Const        r13, "starts_with"
  // it1.info == "genres" &&
  Const        r14, "info"
  // k.keyword in [
  Const        r15, "keyword"
  // n.gender == "m"
  Const        r16, "gender"
  // movie_budget: mi.info,
  Const        r17, "movie_budget"
  // movie_votes: mi_idx.info,
  Const        r18, "movie_votes"
  // writer: n.name,
  Const        r19, "writer"
  // violent_liongate_movie: t.title
  Const        r20, "violent_liongate_movie"
  Const        r21, "title"
  // from ci in cast_info
  IterPrep     r22, r0
  Len          r23, r22
  Const        r25, 0
  Move         r24, r25
  LessInt      r26, r24, r23
  JumpIfFalse  r26, L0
  Index        r27, r22, r24
  Move         r28, r27
  // join n in name on n.id == ci.person_id
  IterPrep     r29, r8
  Len          r30, r29
  Const        r31, "id"
  Const        r32, "person_id"
  // where ci.note in [
  Const        r11, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r12, "name"
  Const        r13, "starts_with"
  // it1.info == "genres" &&
  Const        r14, "info"
  // k.keyword in [
  Const        r15, "keyword"
  // n.gender == "m"
  Const        r16, "gender"
  // movie_budget: mi.info,
  Const        r17, "movie_budget"
  // movie_votes: mi_idx.info,
  Const        r18, "movie_votes"
  // writer: n.name,
  Const        r19, "writer"
  // violent_liongate_movie: t.title
  Const        r20, "violent_liongate_movie"
  Const        r21, "title"
  // join n in name on n.id == ci.person_id
  Const        r25, 0
  Move         r33, r25
  LessInt      r34, r33, r30
  JumpIfFalse  r34, L1
  Index        r35, r29, r33
  Move         r36, r35
  Const        r31, "id"
  Index        r37, r36, r31
  Const        r32, "person_id"
  Index        r38, r28, r32
  Equal        r39, r37, r38
  JumpIfFalse  r39, L2
  // join t in title on t.id == ci.movie_id
  IterPrep     r40, r9
  Len          r41, r40
  Const        r31, "id"
  Const        r42, "movie_id"
  // where ci.note in [
  Const        r11, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r12, "name"
  Const        r13, "starts_with"
  // it1.info == "genres" &&
  Const        r14, "info"
  // k.keyword in [
  Const        r15, "keyword"
  // n.gender == "m"
  Const        r16, "gender"
  // movie_budget: mi.info,
  Const        r17, "movie_budget"
  // movie_votes: mi_idx.info,
  Const        r18, "movie_votes"
  // writer: n.name,
  Const        r19, "writer"
  // violent_liongate_movie: t.title
  Const        r20, "violent_liongate_movie"
  Const        r21, "title"
  // join t in title on t.id == ci.movie_id
  Const        r25, 0
  Move         r43, r25
  LessInt      r44, r43, r41
  JumpIfFalse  r44, L2
  Index        r45, r40, r43
  Move         r46, r45
  Const        r31, "id"
  Index        r47, r46, r31
  Const        r42, "movie_id"
  Index        r48, r28, r42
  Equal        r49, r47, r48
  JumpIfFalse  r49, L3
  // join mi in movie_info on mi.movie_id == t.id
  IterPrep     r50, r5
  Len          r51, r50
  Const        r42, "movie_id"
  Const        r31, "id"
  // where ci.note in [
  Const        r11, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r12, "name"
  Const        r13, "starts_with"
  // it1.info == "genres" &&
  Const        r14, "info"
  // k.keyword in [
  Const        r15, "keyword"
  // n.gender == "m"
  Const        r16, "gender"
  // movie_budget: mi.info,
  Const        r17, "movie_budget"
  // movie_votes: mi_idx.info,
  Const        r18, "movie_votes"
  // writer: n.name,
  Const        r19, "writer"
  // violent_liongate_movie: t.title
  Const        r20, "violent_liongate_movie"
  Const        r21, "title"
  // join mi in movie_info on mi.movie_id == t.id
  Const        r25, 0
  Move         r52, r25
  LessInt      r53, r52, r51
  JumpIfFalse  r53, L3
  Index        r54, r50, r52
  Move         r55, r54
  Const        r42, "movie_id"
  Index        r56, r55, r42
  Const        r31, "id"
  Index        r57, r46, r31
  Equal        r58, r56, r57
  JumpIfFalse  r58, L4
  // join mi_idx in movie_info_idx on mi_idx.movie_id == t.id
  IterPrep     r59, r6
  Len          r60, r59
  Const        r42, "movie_id"
  Const        r31, "id"
  // where ci.note in [
  Const        r11, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r12, "name"
  Const        r13, "starts_with"
  // it1.info == "genres" &&
  Const        r14, "info"
  // k.keyword in [
  Const        r15, "keyword"
  // n.gender == "m"
  Const        r16, "gender"
L14:
  // movie_budget: mi.info,
  Const        r17, "movie_budget"
  // movie_votes: mi_idx.info,
  Const        r18, "movie_votes"
  // writer: n.name,
  Const        r19, "writer"
  // violent_liongate_movie: t.title
  Const        r20, "violent_liongate_movie"
  Const        r21, "title"
  // join mi_idx in movie_info_idx on mi_idx.movie_id == t.id
  Const        r25, 0
  Move         r61, r25
  LessInt      r62, r61, r60
  JumpIfFalse  r62, L4
  Index        r63, r59, r61
  Move         r64, r63
  Const        r42, "movie_id"
  Index        r65, r64, r42
  Const        r31, "id"
  Index        r66, r46, r31
  Equal        r67, r65, r66
  JumpIfFalse  r67, L5
  // join mk in movie_keyword on mk.movie_id == t.id
  IterPrep     r68, r7
  Len          r69, r68
  Const        r42, "movie_id"
  Const        r31, "id"
  // where ci.note in [
  Const        r11, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r12, "name"
  Const        r13, "starts_with"
  // it1.info == "genres" &&
  Const        r14, "info"
  // k.keyword in [
  Const        r15, "keyword"
  // n.gender == "m"
  Const        r16, "gender"
  // movie_budget: mi.info,
  Const        r17, "movie_budget"
  // movie_votes: mi_idx.info,
  Const        r18, "movie_votes"
  // writer: n.name,
  Const        r19, "writer"
  // violent_liongate_movie: t.title
  Const        r20, "violent_liongate_movie"
  Const        r21, "title"
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r25, 0
  Move         r70, r25
  LessInt      r71, r70, r69
  JumpIfFalse  r71, L5
  Index        r72, r68, r70
  Move         r73, r72
  Const        r42, "movie_id"
  Index        r74, r73, r42
  Const        r31, "id"
  Index        r75, r46, r31
  Equal        r76, r74, r75
  JumpIfFalse  r76, L6
  // join k in keyword on k.id == mk.keyword_id
  IterPrep     r77, r3
  Len          r78, r77
  Const        r31, "id"
  Const        r79, "keyword_id"
  // where ci.note in [
  Const        r11, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r12, "name"
  Const        r13, "starts_with"
  // it1.info == "genres" &&
  Const        r14, "info"
  // k.keyword in [
  Const        r15, "keyword"
  // n.gender == "m"
  Const        r16, "gender"
  // movie_budget: mi.info,
  Const        r17, "movie_budget"
  // movie_votes: mi_idx.info,
  Const        r18, "movie_votes"
  // writer: n.name,
  Const        r19, "writer"
  // violent_liongate_movie: t.title
  Const        r20, "violent_liongate_movie"
  Const        r21, "title"
  // join k in keyword on k.id == mk.keyword_id
  Const        r25, 0
  Move         r80, r25
  LessInt      r81, r80, r78
  JumpIfFalse  r81, L6
  Index        r82, r77, r80
  Move         r83, r82
  Const        r31, "id"
  Index        r84, r83, r31
  Const        r79, "keyword_id"
  Index        r85, r73, r79
  Equal        r86, r84, r85
  JumpIfFalse  r86, L7
  // join mc in movie_companies on mc.movie_id == t.id
  IterPrep     r87, r4
  Len          r88, r87
  Const        r42, "movie_id"
  Const        r31, "id"
  // where ci.note in [
  Const        r11, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r12, "name"
  Const        r13, "starts_with"
  // it1.info == "genres" &&
  Const        r14, "info"
  // k.keyword in [
  Const        r15, "keyword"
  // n.gender == "m"
  Const        r16, "gender"
  // movie_budget: mi.info,
  Const        r17, "movie_budget"
  // movie_votes: mi_idx.info,
  Const        r18, "movie_votes"
  // writer: n.name,
  Const        r19, "writer"
  // violent_liongate_movie: t.title
  Const        r20, "violent_liongate_movie"
  Const        r21, "title"
  // join mc in movie_companies on mc.movie_id == t.id
  Const        r25, 0
  Move         r89, r25
  LessInt      r90, r89, r88
  JumpIfFalse  r90, L7
  Index        r91, r87, r89
  Move         r92, r91
  Const        r42, "movie_id"
  Index        r93, r92, r42
  Const        r31, "id"
  Index        r94, r46, r31
  Equal        r95, r93, r94
  JumpIfFalse  r95, L8
  // join cn in company_name on cn.id == mc.company_id
  IterPrep     r96, r1
  Len          r97, r96
  Const        r31, "id"
  Const        r98, "company_id"
  // where ci.note in [
  Const        r11, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r12, "name"
  Const        r13, "starts_with"
  // it1.info == "genres" &&
  Const        r14, "info"
  // k.keyword in [
  Const        r15, "keyword"
  // n.gender == "m"
  Const        r16, "gender"
  // movie_budget: mi.info,
  Const        r17, "movie_budget"
  // movie_votes: mi_idx.info,
  Const        r18, "movie_votes"
  // writer: n.name,
  Const        r19, "writer"
  // violent_liongate_movie: t.title
  Const        r20, "violent_liongate_movie"
  Const        r21, "title"
  // join cn in company_name on cn.id == mc.company_id
  Const        r25, 0
  Move         r99, r25
  LessInt      r100, r99, r97
  JumpIfFalse  r100, L8
  Index        r101, r96, r99
  Move         r102, r101
  Const        r31, "id"
  Index        r103, r102, r31
  Const        r98, "company_id"
  Index        r104, r92, r98
  Equal        r105, r103, r104
  JumpIfFalse  r105, L9
  // join it1 in info_type on it1.id == mi.info_type_id
  IterPrep     r106, r2
  Len          r107, r106
  Const        r31, "id"
  Const        r108, "info_type_id"
  // where ci.note in [
  Const        r11, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r12, "name"
  Const        r13, "starts_with"
  // it1.info == "genres" &&
  Const        r14, "info"
  // k.keyword in [
  Const        r15, "keyword"
  // n.gender == "m"
  Const        r16, "gender"
  // movie_budget: mi.info,
  Const        r17, "movie_budget"
  // movie_votes: mi_idx.info,
  Const        r18, "movie_votes"
  // writer: n.name,
  Const        r19, "writer"
  // violent_liongate_movie: t.title
  Const        r20, "violent_liongate_movie"
  Const        r21, "title"
  // join it1 in info_type on it1.id == mi.info_type_id
  Const        r25, 0
  Move         r109, r25
  LessInt      r110, r109, r107
  JumpIfFalse  r110, L9
  Index        r111, r106, r109
  Move         r112, r111
  Const        r31, "id"
  Index        r113, r112, r31
  Const        r108, "info_type_id"
  Index        r114, r55, r108
  Equal        r115, r113, r114
  JumpIfFalse  r115, L10
  // join it2 in info_type on it2.id == mi_idx.info_type_id
  IterPrep     r116, r2
  Len          r117, r116
  Const        r31, "id"
  Const        r108, "info_type_id"
  // where ci.note in [
  Const        r11, "note"
  // cn.name.starts_with("Lionsgate") &&
  Const        r12, "name"
  Const        r13, "starts_with"
  // it1.info == "genres" &&
  Const        r14, "info"
  // k.keyword in [
  Const        r15, "keyword"
  // n.gender == "m"
  Const        r16, "gender"
  // movie_budget: mi.info,
  Const        r17, "movie_budget"
  // movie_votes: mi_idx.info,
  Const        r18, "movie_votes"
  // writer: n.name,
  Const        r19, "writer"
  // violent_liongate_movie: t.title
  Const        r20, "violent_liongate_movie"
  Const        r21, "title"
  // join it2 in info_type on it2.id == mi_idx.info_type_id
  Const        r25, 0
  Move         r118, r25
  LessInt      r119, r118, r117
  JumpIfFalse  r119, L10
  Index        r120, r116, r118
  Move         r121, r120
  Const        r31, "id"
  Index        r122, r121, r31
  Const        r108, "info_type_id"
  Index        r123, r64, r108
  Equal        r124, r122, r123
  JumpIfFalse  r124, L11
  // where ci.note in [
  Const        r11, "note"
  Index        r125, r28, r11
  Const        r126, ["(writer)", "(head writer)", "(written by)", "(story)", "(story editor)"]
  In           r127, r125, r126
  // it1.info == "genres" &&
  Const        r14, "info"
  Index        r128, r112, r14
  Const        r129, "genres"
  Equal        r130, r128, r129
  // it2.info == "votes" &&
  Index        r131, r121, r14
  Const        r132, "votes"
  Equal        r133, r131, r132
  // k.keyword in [
  Const        r15, "keyword"
  Index        r134, r83, r15
  Const        r135, ["murder", "violence", "blood", "gore", "death", "female-nudity", "hospital"]
  In           r136, r134, r135
  // mi.info in ["Horror", "Thriller"] &&
  Index        r137, r55, r14
  Const        r138, ["Horror", "Thriller"]
  In           r139, r137, r138
  // n.gender == "m"
  Const        r16, "gender"
  Index        r140, r36, r16
  Const        r141, "m"
  Equal        r142, r140, r141
  // ] &&
  Move         r143, r127
  JumpIfFalse  r143, L12
  Const        r12, "name"
  Index        r144, r102, r12
  // cn.name.starts_with("Lionsgate") &&
  Const        r145, "Lionsgate"
  Const        r146, 0
  Const        r147, 9
  Len          r148, r144
  LessEq       r149, r147, r148
  JumpIfFalse  r149, L13
  Slice        r151, r144, r146, r147
  Equal        r152, r151, r145
  Move         r150, r152
  Jump         L14
L13:
  // join mi in movie_info on mi.movie_id == t.id
  Add          r52, r52, r171
  Jump         L14
L12:
  // movie_budget: min(from r in matches select r.movie_budget),
  Const        r174, []
  Const        r17, "movie_budget"
  IterPrep     r175, r10
  Len          r176, r175
  Const        r25, 0
  Move         r177, r25
  LessInt      r178, r177, r176
  JumpIfFalse  r178, L15
  Index        r179, r175, r177
  Move         r180, r179
  Const        r17, "movie_budget"
  Index        r181, r180, r17
  Append       r182, r174, r181
  Move         r174, r182
  Const        r171, 1
  AddInt       r177, r177, r171
  Jump         L16
L11:
  // movie_votes: min(from r in matches select r.movie_votes),
  Move         r188, r25
  LessInt      r189, r188, r187
  JumpIfFalse  r189, L17
L10:
  Index        r190, r186, r188
  Move         r180, r190
  Const        r18, "movie_votes"
L9:
  Index        r191, r180, r18
  Append       r192, r185, r191
  Move         r185, r192
L8:
  Const        r171, 1
  AddInt       r188, r188, r171
  Jump         L18
L7:
  Min          r193, r185
  // writer: min(from r in matches select r.writer),
  Const        r194, "writer"
  Const        r195, []
L6:
  Const        r19, "writer"
  IterPrep     r196, r10
  Len          r197, r196
L5:
  Const        r25, 0
  Move         r198, r25
  LessInt      r199, r198, r197
L4:
  JumpIfFalse  r199, L19
  Index        r200, r196, r198
  Move         r180, r200
L3:
  Const        r19, "writer"
  Index        r201, r180, r19
  Append       r202, r195, r201
L2:
  Move         r195, r202
  Const        r171, 1
  AddInt       r198, r198, r171
  Jump         L1
L0:
  // violent_liongate_movie: min(from r in matches select r.violent_liongate_movie)
  Const        r205, []
  Const        r20, "violent_liongate_movie"
  IterPrep     r206, r10
  Len          r207, r206
  Const        r25, 0
  Move         r208, r25
  LessInt      r209, r208, r207
L16:
  JumpIfFalse  r209, L20
  Index        r210, r206, r208
  Move         r180, r210
  Const        r20, "violent_liongate_movie"
  Index        r211, r180, r20
  Append       r212, r205, r211
  Move         r205, r212
  Const        r171, 1
  AddInt       r208, r208, r171
  Jump         L21
L15:
  // movie_budget: min(from r in matches select r.movie_budget),
  Move         r214, r173
  Move         r215, r183
  // movie_votes: min(from r in matches select r.movie_votes),
  Move         r216, r184
  Move         r217, r193
  // writer: min(from r in matches select r.writer),
  Move         r218, r194
  Move         r219, r203
  // violent_liongate_movie: min(from r in matches select r.violent_liongate_movie)
  Move         r220, r204
  Move         r221, r213
L18:
  // {
  MakeMap      r222, 4, r214
  Move         r172, r222
  // let result = [
  MakeList     r223, 1, r172
  // json(result)
  JSON         r223
  // expect result == [
  Const        r224, [{"movie_budget": "Horror", "movie_votes": 800, "violent_liongate_movie": "Alpha Horror", "writer": "Arthur"}]
  Equal        r225, r223, r224
  Expect       r225
  Return       r0
