func main (regs=22)
  // let company_name = [
  Const        r0, [{"country_code": "[de]", "id": 1}, {"country_code": "[us]", "id": 2}]
  // let keyword = [
  Const        r1, [{"id": 1, "keyword": "character-name-in-title"}, {"id": 2, "keyword": "other"}]
  // let movie_companies = [
  Const        r2, [{"company_id": 1, "movie_id": 100}, {"company_id": 2, "movie_id": 200}]
  // let movie_keyword = [
  Const        r3, [{"keyword_id": 1, "movie_id": 100}, {"keyword_id": 2, "movie_id": 200}]
  // let title = [
  Const        r4, [{"id": 100, "title": "Der Film"}, {"id": 200, "title": "Other Movie"}]
L6:
  // from cn in company_name
  Const        r5, []
  // where cn.country_code == "[de]" &&
  Const        r6, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r7, "keyword"
  // mc.movie_id == mk.movie_id
  Const        r8, "movie_id"
  // select t.title
  Const        r9, "title"
  // from cn in company_name
  IterPrep     r10, r0
  Len          r11, r10
  Const        r12, 0
  Move         r13, r12
L11:
  LessInt      r14, r13, r11
  JumpIfFalse  r14, L0
  Index        r11, r10, r13
  // join mc in movie_companies on mc.company_id == cn.id
  IterPrep     r10, r2
L10:
  Len          r2, r10
L9:
  Const        r15, "company_id"
  Const        r16, "id"
L8:
  Move         r17, r12
  LessInt      r18, r17, r2
  JumpIfFalse  r18, L1
  Index        r2, r10, r17
  Index        r10, r2, r15
  Index        r15, r11, r16
  Equal        r19, r10, r15
  JumpIfFalse  r19, L2
  // join t in title on mc.movie_id == t.id
  IterPrep     r19, r4
  Len          r4, r19
  Move         r15, r12
  LessInt      r10, r15, r4
  JumpIfFalse  r10, L2
  Index        r10, r19, r15
  Index        r19, r2, r8
  Index        r4, r10, r16
  Equal        r20, r19, r4
  JumpIfFalse  r20, L3
  // join mk in movie_keyword on mk.movie_id == t.id
  IterPrep     r20, r3
  Len          r3, r20
  Move         r4, r12
  LessInt      r19, r4, r3
  JumpIfFalse  r19, L3
  Index        r19, r20, r4
  Index        r20, r19, r8
  Index        r3, r10, r16
  Equal        r21, r20, r3
  JumpIfFalse  r21, L4
  // join k in keyword on mk.keyword_id == k.id
  IterPrep     r21, r1
  Len          r1, r21
  Const        r3, "keyword_id"
  Move         r20, r12
  LessInt      r12, r20, r1
  JumpIfFalse  r12, L4
  Index        r12, r21, r20
  Index        r21, r19, r3
  Index        r3, r12, r16
  Equal        r16, r21, r3
  JumpIfFalse  r16, L5
  // where cn.country_code == "[de]" &&
  Index        r16, r11, r6
  Const        r11, "[de]"
  Equal        r6, r16, r11
  // k.keyword == "character-name-in-title" &&
  Index        r11, r12, r7
  Const        r12, "character-name-in-title"
  Equal        r7, r11, r12
  // mc.movie_id == mk.movie_id
  Index        r12, r2, r8
  Index        r2, r19, r8
  Equal        r8, r12, r2
  // where cn.country_code == "[de]" &&
  Move         r2, r6
  JumpIfFalse  r2, L6
  // k.keyword == "character-name-in-title" &&
  Move         r2, r7
  JumpIfFalse  r2, L7
  Move         r2, r8
L7:
  // where cn.country_code == "[de]" &&
  JumpIfFalse  r2, L5
  // select t.title
  Index        r2, r10, r9
  // from cn in company_name
  Append       r5, r5, r2
L5:
  // join k in keyword on mk.keyword_id == k.id
  Const        r2, 1
  Add          r20, r20, r2
  Jump         L8
L4:
  // join mk in movie_keyword on mk.movie_id == t.id
  Add          r4, r4, r2
  Jump         L9
L3:
  // join t in title on mc.movie_id == t.id
  Add          r15, r15, r2
  Jump         L8
L2:
  // join mc in movie_companies on mc.company_id == cn.id
  Add          r17, r17, r2
  Jump         L10
L1:
  // from cn in company_name
  AddInt       r13, r13, r2
  Jump         L11
L0:
  // let result = min(titles)
  Min          r21, r5
  // json(result)
  JSON         r21
  // expect result == "Der Film"
  Const        r5, "Der Film"
  Equal        r2, r21, r5
  Expect       r2
  Return       r0
