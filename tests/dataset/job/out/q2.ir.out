func main (regs=72)
  // let company_name = [
  Const        r0, [{"country_code": "[de]", "id": 1}, {"country_code": "[us]", "id": 2}]
  // let keyword = [
  Const        r1, [{"id": 1, "keyword": "character-name-in-title"}, {"id": 2, "keyword": "other"}]
  // let movie_companies = [
  Const        r2, [{"company_id": 1, "movie_id": 100}, {"company_id": 2, "movie_id": 200}]
  // let movie_keyword = [
  Const        r3, [{"keyword_id": 1, "movie_id": 100}, {"keyword_id": 2, "movie_id": 200}]
  // let title = [
  Const        r4, [{"id": 100, "title": "Der Film"}, {"id": 200, "title": "Other Movie"}]
  // from cn in company_name
  Const        r5, []
  // where cn.country_code == "[de]" &&
  Const        r6, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r7, "keyword"
  // mc.movie_id == mk.movie_id
  Const        r8, "movie_id"
  // select t.title
  Const        r9, "title"
  // from cn in company_name
  IterPrep     r10, r0
  Len          r11, r10
  Const        r13, 0
  Move         r12, r13
L11:
  LessInt      r14, r12, r11
  JumpIfFalse  r14, L0
  Index        r16, r10, r12
  // join mc in movie_companies on mc.company_id == cn.id
  IterPrep     r17, r2
  Len          r18, r17
  Const        r19, "company_id"
  Const        r20, "id"
  Move         r21, r13
L10:
  LessInt      r22, r21, r18
  JumpIfFalse  r22, L1
  Index        r24, r17, r21
  Index        r25, r24, r19
  Index        r26, r16, r20
  Equal        r27, r25, r26
  JumpIfFalse  r27, L2
  // join t in title on mc.movie_id == t.id
  IterPrep     r28, r4
  Len          r29, r28
  Move         r30, r13
L9:
  LessInt      r31, r30, r29
  JumpIfFalse  r31, L2
  Index        r33, r28, r30
  Index        r34, r24, r8
  Index        r35, r33, r20
  Equal        r36, r34, r35
  JumpIfFalse  r36, L3
  // join mk in movie_keyword on mk.movie_id == t.id
  IterPrep     r37, r3
  Len          r38, r37
  Move         r39, r13
L8:
  LessInt      r40, r39, r38
  JumpIfFalse  r40, L3
  Index        r42, r37, r39
  Index        r43, r42, r8
  Index        r44, r33, r20
  Equal        r45, r43, r44
  JumpIfFalse  r45, L4
  // join k in keyword on mk.keyword_id == k.id
  IterPrep     r46, r1
  Len          r47, r46
  Const        r48, "keyword_id"
  Move         r49, r13
L7:
  LessInt      r50, r49, r47
  JumpIfFalse  r50, L4
  Index        r52, r46, r49
  Index        r53, r42, r48
  Index        r54, r52, r20
  Equal        r55, r53, r54
  JumpIfFalse  r55, L5
  // where cn.country_code == "[de]" &&
  Index        r56, r16, r6
  Const        r57, "[de]"
  Equal        r58, r56, r57
  // k.keyword == "character-name-in-title" &&
  Index        r59, r52, r7
  Const        r60, "character-name-in-title"
  Equal        r61, r59, r60
  // mc.movie_id == mk.movie_id
  Index        r62, r24, r8
  Index        r63, r42, r8
  Equal        r64, r62, r63
  // where cn.country_code == "[de]" &&
  Move         r65, r58
  JumpIfFalse  r65, L6
  Move         r65, r61
  // k.keyword == "character-name-in-title" &&
  JumpIfFalse  r65, L6
  Move         r65, r64
L6:
  // where cn.country_code == "[de]" &&
  JumpIfFalse  r65, L5
  // select t.title
  Index        r66, r33, r9
  // from cn in company_name
  Append       r5, r5, r66
L5:
  // join k in keyword on mk.keyword_id == k.id
  Const        r68, 1
  Add          r49, r49, r68
  Jump         L7
L4:
  // join mk in movie_keyword on mk.movie_id == t.id
  Add          r39, r39, r68
  Jump         L8
L3:
  // join t in title on mc.movie_id == t.id
  Add          r30, r30, r68
  Jump         L9
L2:
  // join mc in movie_companies on mc.company_id == cn.id
  Add          r21, r21, r68
  Jump         L10
L1:
  // from cn in company_name
  AddInt       r12, r12, r68
  Jump         L11
L0:
  // let result = min(titles)
  Min          r69, r5
  // json(result)
  JSON         r69
  // expect result == "Der Film"
  Const        r70, "Der Film"
  Equal        r71, r69, r70
  Expect       r71
  Return       r0
