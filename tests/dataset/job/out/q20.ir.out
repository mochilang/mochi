func main (regs=198)
  // let comp_cast_type = [
  Const        r0, [{"id": 1, "kind": "cast"}, {"id": 2, "kind": "complete cast"}]
  Move         r1, r0
  // let char_name = [
  Const        r2, [{"id": 1, "name": "Tony Stark"}, {"id": 2, "name": "Sherlock Holmes"}]
  Move         r3, r2
  // let complete_cast = [
  Const        r4, [{"movie_id": 1, "status_id": 2, "subject_id": 1}, {"movie_id": 2, "status_id": 2, "subject_id": 1}]
  Move         r5, r4
  // let name = [
  Const        r6, [{"id": 1, "name": "Robert Downey Jr."}, {"id": 2, "name": "Another Actor"}]
  Move         r7, r6
  // let cast_info = [
  Const        r8, [{"movie_id": 1, "person_id": 1, "person_role_id": 1}, {"movie_id": 2, "person_id": 2, "person_role_id": 2}]
  Move         r9, r8
  // let keyword = [
  Const        r10, [{"id": 10, "keyword": "superhero"}, {"id": 20, "keyword": "romance"}]
  Move         r11, r10
  // let movie_keyword = [
  Const        r12, [{"keyword_id": 10, "movie_id": 1}, {"keyword_id": 20, "movie_id": 2}]
  Move         r13, r12
  // let kind_type = [
  Const        r14, [{"id": 1, "kind": "movie"}]
  Move         r15, r14
  // let title = [
  Const        r16, [{"id": 1, "kind_id": 1, "production_year": 2008, "title": "Iron Man"}, {"id": 2, "kind_id": 1, "production_year": 1940, "title": "Old Hero"}]
  Move         r17, r16
  // from cc in complete_cast
  Const        r18, []
  IterPrep     r19, r5
  Len          r20, r19
  Const        r21, 0
L27:
  Less         r22, r21, r20
  JumpIfFalse  r22, L0
  Index        r23, r19, r21
  Move         r24, r23
  // join cct1 in comp_cast_type on cct1.id == cc.subject_id
  IterPrep     r25, r1
  Len          r26, r25
  Const        r27, 0
L26:
  Less         r28, r27, r26
  JumpIfFalse  r28, L1
  Index        r29, r25, r27
  Move         r30, r29
  Const        r31, "id"
  Index        r32, r30, r31
  Const        r33, "subject_id"
  Index        r34, r24, r33
  Equal        r35, r32, r34
  JumpIfFalse  r35, L2
  // join cct2 in comp_cast_type on cct2.id == cc.status_id
  IterPrep     r36, r1
  Len          r37, r36
  Const        r38, 0
L25:
  Less         r39, r38, r37
  JumpIfFalse  r39, L2
  Index        r40, r36, r38
  Move         r41, r40
  Const        r42, "id"
  Index        r43, r41, r42
  Const        r44, "status_id"
  Index        r45, r24, r44
  Equal        r46, r43, r45
  JumpIfFalse  r46, L3
  // join ci in cast_info on ci.movie_id == cc.movie_id
  IterPrep     r47, r9
  Len          r48, r47
  Const        r49, 0
L24:
  Less         r50, r49, r48
  JumpIfFalse  r50, L3
  Index        r51, r47, r49
  Move         r52, r51
  Const        r53, "movie_id"
  Index        r54, r52, r53
  Const        r55, "movie_id"
  Index        r56, r24, r55
  Equal        r57, r54, r56
  JumpIfFalse  r57, L4
  // join chn in char_name on chn.id == ci.person_role_id
  IterPrep     r58, r3
  Len          r59, r58
  Const        r60, 0
L23:
  Less         r61, r60, r59
  JumpIfFalse  r61, L4
  Index        r62, r58, r60
  Move         r63, r62
  Const        r64, "id"
  Index        r65, r63, r64
  Const        r66, "person_role_id"
  Index        r67, r52, r66
  Equal        r68, r65, r67
  JumpIfFalse  r68, L5
  // join n in name on n.id == ci.person_id
  IterPrep     r69, r7
  Len          r70, r69
  Const        r71, 0
L22:
  Less         r72, r71, r70
  JumpIfFalse  r72, L5
  Index        r73, r69, r71
  Move         r74, r73
  Const        r75, "id"
  Index        r76, r74, r75
  Const        r77, "person_id"
  Index        r78, r52, r77
  Equal        r79, r76, r78
  JumpIfFalse  r79, L6
  // join mk in movie_keyword on mk.movie_id == cc.movie_id
  IterPrep     r80, r13
  Len          r81, r80
  Const        r82, 0
L21:
  Less         r83, r82, r81
  JumpIfFalse  r83, L6
  Index        r84, r80, r82
  Move         r85, r84
  Const        r86, "movie_id"
  Index        r87, r85, r86
  Const        r88, "movie_id"
  Index        r89, r24, r88
  Equal        r90, r87, r89
  JumpIfFalse  r90, L7
  // join k in keyword on k.id == mk.keyword_id
  IterPrep     r91, r11
  Len          r92, r91
  Const        r93, 0
L20:
  Less         r94, r93, r92
  JumpIfFalse  r94, L7
  Index        r95, r91, r93
  Move         r96, r95
  Const        r97, "id"
  Index        r98, r96, r97
  Const        r99, "keyword_id"
  Index        r100, r85, r99
  Equal        r101, r98, r100
  JumpIfFalse  r101, L8
  // join t in title on t.id == cc.movie_id
  IterPrep     r102, r17
  Len          r103, r102
  Const        r104, 0
L19:
  Less         r105, r104, r103
  JumpIfFalse  r105, L8
  Index        r106, r102, r104
  Move         r107, r106
  Const        r108, "id"
  Index        r109, r107, r108
  Const        r110, "movie_id"
  Index        r111, r24, r110
  Equal        r112, r109, r111
  JumpIfFalse  r112, L9
  // join kt in kind_type on kt.id == t.kind_id
  IterPrep     r113, r15
  Len          r114, r113
  Const        r115, 0
L18:
  Less         r116, r115, r114
  JumpIfFalse  r116, L9
  Index        r117, r113, r115
  Move         r118, r117
  Const        r119, "id"
  Index        r120, r118, r119
  Const        r121, "kind_id"
  Index        r122, r107, r121
  Equal        r123, r120, r122
  JumpIfFalse  r123, L10
  // where cct1.kind == "cast" &&
  Const        r124, "kind"
  Index        r125, r30, r124
  // t.production_year > 1950
  Const        r126, "production_year"
  Index        r127, r107, r126
  Const        r128, 1950
  Less         r129, r128, r127
  // where cct1.kind == "cast" &&
  Const        r130, "cast"
  Equal        r131, r125, r130
  // k.keyword in [
  Const        r132, "keyword"
  Index        r133, r96, r132
  Const        r134, ["superhero", "sequel", "second-part", "marvel-comics", "based-on-comic", "tv-special", "fight", "violence"]
  In           r135, r133, r134
  // kt.kind == "movie" &&
  Const        r136, "kind"
  Index        r137, r118, r136
  Const        r138, "movie"
  Equal        r139, r137, r138
  // where cct1.kind == "cast" &&
  Move         r140, r131
  JumpIfFalse  r140, L11
  Const        r141, "kind"
  Index        r142, r41, r141
  // cct2.kind.contains("complete") &&
  Const        r143, "complete"
  In           r144, r143, r142
  // where cct1.kind == "cast" &&
  Move         r140, r144
L11:
  // cct2.kind.contains("complete") &&
  Move         r145, r140
  JumpIfFalse  r145, L12
  Const        r146, "name"
  Index        r147, r63, r146
  // (!chn.name.contains("Sherlock")) &&
  Const        r148, "Sherlock"
  In           r149, r148, r147
  Not          r150, r149
  // cct2.kind.contains("complete") &&
  Move         r145, r150
L12:
  // (!chn.name.contains("Sherlock")) &&
  Move         r151, r145
  JumpIfFalse  r151, L13
  Const        r152, "name"
  Index        r153, r63, r152
  // (chn.name.contains("Tony Stark") || chn.name.contains("Iron Man")) &&
  Const        r154, "Tony Stark"
  In           r155, r154, r153
  Move         r156, r155
  JumpIfTrue   r156, L14
  Const        r157, "name"
  Index        r158, r63, r157
  Const        r159, "Iron Man"
  In           r160, r159, r158
  Move         r156, r160
L14:
  // (!chn.name.contains("Sherlock")) &&
  Move         r151, r156
L13:
  // (chn.name.contains("Tony Stark") || chn.name.contains("Iron Man")) &&
  Move         r161, r151
  JumpIfFalse  r161, L15
  Move         r161, r135
L15:
  // ] &&
  Move         r162, r161
  JumpIfFalse  r162, L16
  Move         r162, r139
L16:
  // kt.kind == "movie" &&
  Move         r163, r162
  JumpIfFalse  r163, L17
  Move         r163, r129
L17:
  // where cct1.kind == "cast" &&
  JumpIfFalse  r163, L10
  // select t.title
  Const        r164, "title"
  Index        r165, r107, r164
  // from cc in complete_cast
  Append       r166, r18, r165
  Move         r18, r166
L10:
  // join kt in kind_type on kt.id == t.kind_id
  Const        r167, 1
  Add          r168, r115, r167
  Move         r115, r168
  Jump         L18
L9:
  // join t in title on t.id == cc.movie_id
  Const        r169, 1
  Add          r170, r104, r169
  Move         r104, r170
  Jump         L19
L8:
  // join k in keyword on k.id == mk.keyword_id
  Const        r171, 1
  Add          r172, r93, r171
  Move         r93, r172
  Jump         L20
L7:
  // join mk in movie_keyword on mk.movie_id == cc.movie_id
  Const        r173, 1
  Add          r174, r82, r173
  Move         r82, r174
  Jump         L21
L6:
  // join n in name on n.id == ci.person_id
  Const        r175, 1
  Add          r176, r71, r175
  Move         r71, r176
  Jump         L22
L5:
  // join chn in char_name on chn.id == ci.person_role_id
  Const        r177, 1
  Add          r178, r60, r177
  Move         r60, r178
  Jump         L23
L4:
  // join ci in cast_info on ci.movie_id == cc.movie_id
  Const        r179, 1
  Add          r180, r49, r179
  Move         r49, r180
  Jump         L24
L3:
  // join cct2 in comp_cast_type on cct2.id == cc.status_id
  Const        r181, 1
  Add          r182, r38, r181
  Move         r38, r182
  Jump         L25
L2:
  // join cct1 in comp_cast_type on cct1.id == cc.subject_id
  Const        r183, 1
  Add          r184, r27, r183
  Move         r27, r184
  Jump         L26
L1:
  // from cc in complete_cast
  Const        r185, 1
  Add          r186, r21, r185
  Move         r21, r186
  Jump         L27
L0:
  // let matches =
  Move         r187, r18
  // let result = [ { complete_downey_ironman_movie: min(matches) } ]
  Const        r188, "complete_downey_ironman_movie"
  Min          r189, r187
  Move         r190, r188
  Move         r191, r189
  MakeMap      r192, 1, r190
  Move         r193, r192
  MakeList     r194, 1, r193
  Move         r195, r194
  // json(result)
  JSON         r195
  // expect result == [ { complete_downey_ironman_movie: "Iron Man" } ]
  Const        r196, [{"complete_downey_ironman_movie": "Iron Man"}]
  Equal        r197, r195, r196
  Expect       r197
  Return       r0
