func main (regs=27)
  // let comp_cast_type = [
  Const        r0, [{"id": 1, "kind": "cast"}, {"id": 2, "kind": "complete cast"}]
L18:
  // let char_name = [
  Const        r1, [{"id": 1, "name": "Tony Stark"}, {"id": 2, "name": "Sherlock Holmes"}]
  // let complete_cast = [
  Const        r2, [{"movie_id": 1, "status_id": 2, "subject_id": 1}, {"movie_id": 2, "status_id": 2, "subject_id": 1}]
  // let name = [
  Const        r3, [{"id": 1, "name": "Robert Downey Jr."}, {"id": 2, "name": "Another Actor"}]
L15:
  // let cast_info = [
  Const        r4, [{"movie_id": 1, "person_id": 1, "person_role_id": 1}, {"movie_id": 2, "person_id": 2, "person_role_id": 2}]
L12:
  // let keyword = [
  Const        r5, [{"id": 10, "keyword": "superhero"}, {"id": 20, "keyword": "romance"}]
L16:
  // let movie_keyword = [
  Const        r6, [{"keyword_id": 10, "movie_id": 1}, {"keyword_id": 20, "movie_id": 2}]
L11:
  // let kind_type = [
  Const        r7, [{"id": 1, "kind": "movie"}]
L9:
  // let title = [
  Const        r8, [{"id": 1, "kind_id": 1, "production_year": 2008, "title": "Iron Man"}, {"id": 2, "kind_id": 1, "production_year": 1940, "title": "Old Hero"}]
  // from cc in complete_cast
  Const        r9, []
  // where cct1.kind == "cast" &&
  Const        r10, "kind"
L13:
  // cct2.kind.contains("complete") &&
  Const        r11, "kind"
L14:
  Const        r12, "contains"
L7:
  // (!chn.name.contains("Sherlock")) &&
  Const        r13, "name"
L22:
  Const        r14, "contains"
L17:
  // (chn.name.contains("Tony Stark") || chn.name.contains("Iron Man")) &&
  Const        r15, "name"
L10:
  Const        r16, "contains"
L19:
  Const        r17, "name"
L21:
  Const        r18, "contains"
L8:
  // k.keyword in [
  Const        r19, "keyword"
  // kt.kind == "movie" &&
  Const        r20, "kind"
L20:
  // t.production_year > 1950
  Const        r21, "production_year"
  // select t.title
  Const        r22, "title"
  // from cc in complete_cast
  IterPrep     r23, r2
L6:
  Len          r24, r23
  Const        r10, 0
  LessInt      r11, r10, r24
  JumpIfFalse  r11, L0
  Index        r12, r23, r10
  // join cct1 in comp_cast_type on cct1.id == cc.subject_id
  IterPrep     r13, r0
  Len          r14, r13
  Const        r15, "id"
  Const        r16, "subject_id"
  // where cct1.kind == "cast" &&
  Const        r17, "kind"
  // cct2.kind.contains("complete") &&
  Const        r18, "kind"
  Const        r19, "contains"
  // (!chn.name.contains("Sherlock")) &&
  Const        r20, "name"
  Const        r21, "contains"
  // (chn.name.contains("Tony Stark") || chn.name.contains("Iron Man")) &&
  Const        r22, "name"
  Const        r2, "contains"
  Const        r24, "name"
  Const        r11, "contains"
  // k.keyword in [
  Const        r23, "keyword"
  // kt.kind == "movie" &&
  Const        r15, "kind"
  // t.production_year > 1950
  Const        r16, "production_year"
  // select t.title
  Const        r17, "title"
  // join cct1 in comp_cast_type on cct1.id == cc.subject_id
  Const        r18, 0
  LessInt      r19, r18, r14
  JumpIfFalse  r19, L1
  Index        r20, r13, r18
  Const        r21, "id"
  Index        r22, r20, r21
  Const        r2, "subject_id"
  Index        r24, r12, r2
  Equal        r11, r22, r24
  JumpIfFalse  r11, L2
  // join cct2 in comp_cast_type on cct2.id == cc.status_id
  IterPrep     r23, r0
  Len          r15, r23
  Const        r16, "id"
  Const        r17, "status_id"
  // where cct1.kind == "cast" &&
  Const        r14, "kind"
  // cct2.kind.contains("complete") &&
  Const        r19, "kind"
  Const        r13, "contains"
  // (!chn.name.contains("Sherlock")) &&
  Const        r21, "name"
  Const        r2, "contains"
  // (chn.name.contains("Tony Stark") || chn.name.contains("Iron Man")) &&
  Const        r22, "name"
  Const        r24, "contains"
  Const        r11, "name"
  Const        r16, "contains"
  // k.keyword in [
  Const        r17, "keyword"
  // kt.kind == "movie" &&
  Const        r14, "kind"
  // t.production_year > 1950
  Const        r19, "production_year"
  // select t.title
  Const        r13, "title"
  // join cct2 in comp_cast_type on cct2.id == cc.status_id
  Const        r21, 0
  LessInt      r2, r21, r15
  JumpIfFalse  r2, L2
  Index        r22, r23, r21
  Const        r24, "id"
  Index        r11, r22, r24
  Const        r16, "status_id"
  Index        r17, r12, r16
  Equal        r14, r11, r17
  JumpIfFalse  r14, L3
  // join ci in cast_info on ci.movie_id == cc.movie_id
  IterPrep     r19, r4
  Len          r13, r19
  Const        r15, "movie_id"
  Const        r2, "movie_id"
  // where cct1.kind == "cast" &&
  Const        r23, "kind"
  // cct2.kind.contains("complete") &&
  Const        r24, "kind"
  Const        r16, "contains"
  // (!chn.name.contains("Sherlock")) &&
  Const        r11, "name"
  Const        r17, "contains"
  // (chn.name.contains("Tony Stark") || chn.name.contains("Iron Man")) &&
  Const        r14, "name"
  Const        r4, "contains"
  Const        r15, "name"
  Const        r2, "contains"
  // k.keyword in [
  Const        r23, "keyword"
  // kt.kind == "movie" &&
  Const        r24, "kind"
  // t.production_year > 1950
  Const        r16, "production_year"
  // select t.title
  Const        r11, "title"
  // join ci in cast_info on ci.movie_id == cc.movie_id
  Const        r17, 0
  LessInt      r14, r17, r13
  JumpIfFalse  r14, L3
  Index        r4, r19, r17
  Const        r15, "movie_id"
  Index        r2, r4, r15
  Const        r23, "movie_id"
  Index        r24, r12, r23
  Equal        r16, r2, r24
  JumpIfFalse  r16, L4
  // join chn in char_name on chn.id == ci.person_role_id
  IterPrep     r11, r1
  Len          r13, r11
  Const        r14, "id"
  Const        r19, "person_role_id"
  // where cct1.kind == "cast" &&
  Const        r15, "kind"
  // cct2.kind.contains("complete") &&
  Const        r23, "kind"
  Const        r2, "contains"
  // (!chn.name.contains("Sherlock")) &&
  Const        r24, "name"
  Const        r16, "contains"
  // (chn.name.contains("Tony Stark") || chn.name.contains("Iron Man")) &&
  Const        r1, "name"
  Const        r14, "contains"
  Const        r19, "name"
  Const        r15, "contains"
  // k.keyword in [
  Const        r23, "keyword"
  // kt.kind == "movie" &&
  Const        r2, "kind"
  // t.production_year > 1950
  Const        r24, "production_year"
  // select t.title
  Const        r16, "title"
  // join chn in char_name on chn.id == ci.person_role_id
  Const        r1, 0
  LessInt      r14, r1, r13
  JumpIfFalse  r14, L4
  Index        r19, r11, r1
  Const        r15, "id"
  Index        r23, r19, r15
  Const        r2, "person_role_id"
  Index        r24, r4, r2
  Equal        r16, r23, r24
  JumpIfFalse  r16, L5
  // join n in name on n.id == ci.person_id
  IterPrep     r13, r3
  Len          r14, r13
  Const        r11, "id"
  Const        r15, "person_id"
  // where cct1.kind == "cast" &&
  Const        r2, "kind"
  // cct2.kind.contains("complete") &&
  Const        r23, "kind"
  Const        r24, "contains"
  // (!chn.name.contains("Sherlock")) &&
  Const        r16, "name"
  Const        r3, "contains"
  // (chn.name.contains("Tony Stark") || chn.name.contains("Iron Man")) &&
  Const        r11, "name"
  Const        r15, "contains"
  Const        r2, "name"
  Const        r23, "contains"
  // k.keyword in [
  Const        r24, "keyword"
  // kt.kind == "movie" &&
  Const        r16, "kind"
  // t.production_year > 1950
  Const        r3, "production_year"
  // select t.title
  Const        r11, "title"
  // join n in name on n.id == ci.person_id
  Const        r15, 0
  LessInt      r2, r15, r14
  JumpIfFalse  r2, L5
  Index        r23, r13, r15
  Const        r24, "id"
  Index        r16, r23, r24
  Const        r3, "person_id"
  Index        r11, r4, r3
  Equal        r14, r16, r11
  JumpIfFalse  r14, L6
  // join mk in movie_keyword on mk.movie_id == cc.movie_id
  IterPrep     r2, r6
  Len          r13, r2
  Const        r23, "movie_id"
  Const        r24, "movie_id"
  // where cct1.kind == "cast" &&
  Const        r4, "kind"
  // cct2.kind.contains("complete") &&
  Const        r3, "kind"
  Const        r16, "contains"
  // (!chn.name.contains("Sherlock")) &&
  Const        r11, "name"
  Const        r14, "contains"
  // (chn.name.contains("Tony Stark") || chn.name.contains("Iron Man")) &&
  Const        r6, "name"
  Const        r23, "contains"
  Const        r24, "name"
  Const        r4, "contains"
  // k.keyword in [
  Const        r3, "keyword"
  // kt.kind == "movie" &&
  Const        r16, "kind"
  // t.production_year > 1950
  Const        r11, "production_year"
  // select t.title
  Const        r14, "title"
  // join mk in movie_keyword on mk.movie_id == cc.movie_id
  Const        r6, 0
  LessInt      r23, r6, r13
  JumpIfFalse  r23, L6
  Index        r24, r2, r6
  Const        r4, "movie_id"
  Index        r3, r24, r4
  Const        r16, "movie_id"
  Index        r11, r12, r16
  Equal        r14, r3, r11
  JumpIfFalse  r14, L7
  // join k in keyword on k.id == mk.keyword_id
  IterPrep     r13, r5
  Len          r23, r13
  Const        r2, "id"
  Const        r4, "keyword_id"
  // where cct1.kind == "cast" &&
  Const        r16, "kind"
  // cct2.kind.contains("complete") &&
  Const        r3, "kind"
  Const        r11, "contains"
  // (!chn.name.contains("Sherlock")) &&
  Const        r14, "name"
  Const        r5, "contains"
  // (chn.name.contains("Tony Stark") || chn.name.contains("Iron Man")) &&
  Const        r2, "name"
  Const        r4, "contains"
  Const        r16, "name"
  Const        r3, "contains"
  // k.keyword in [
  Const        r11, "keyword"
  // kt.kind == "movie" &&
  Const        r14, "kind"
  // t.production_year > 1950
  Const        r5, "production_year"
  // select t.title
  Const        r2, "title"
  // join k in keyword on k.id == mk.keyword_id
  Const        r4, 0
  LessInt      r16, r4, r23
  JumpIfFalse  r16, L7
  Index        r3, r13, r4
  Const        r11, "id"
  Index        r14, r3, r11
  Const        r5, "keyword_id"
  Index        r2, r24, r5
  Equal        r23, r14, r2
  JumpIfFalse  r23, L8
  // join t in title on t.id == cc.movie_id
  IterPrep     r16, r8
  Len          r13, r16
  Const        r11, "id"
  Const        r24, "movie_id"
  // where cct1.kind == "cast" &&
  Const        r5, "kind"
  // cct2.kind.contains("complete") &&
  Const        r14, "kind"
  Const        r2, "contains"
  // (!chn.name.contains("Sherlock")) &&
  Const        r23, "name"
  Const        r8, "contains"
  // (chn.name.contains("Tony Stark") || chn.name.contains("Iron Man")) &&
  Const        r11, "name"
  Const        r24, "contains"
  Const        r5, "name"
  Const        r14, "contains"
  // k.keyword in [
  Const        r2, "keyword"
  // kt.kind == "movie" &&
  Const        r23, "kind"
  // t.production_year > 1950
  Const        r8, "production_year"
  // select t.title
  Const        r11, "title"
  // join t in title on t.id == cc.movie_id
  Const        r24, 0
  LessInt      r5, r24, r13
  JumpIfFalse  r5, L8
  Index        r14, r16, r24
  Const        r2, "id"
  Index        r23, r14, r2
  Const        r8, "movie_id"
  Index        r11, r12, r8
  Equal        r13, r23, r11
  JumpIfFalse  r13, L9
  // join kt in kind_type on kt.id == t.kind_id
  IterPrep     r5, r7
  Len          r16, r5
  Const        r2, "id"
  Const        r12, "kind_id"
  // where cct1.kind == "cast" &&
  Const        r8, "kind"
  // cct2.kind.contains("complete") &&
  Const        r23, "kind"
  Const        r11, "contains"
  // (!chn.name.contains("Sherlock")) &&
  Const        r13, "name"
  Const        r7, "contains"
  // (chn.name.contains("Tony Stark") || chn.name.contains("Iron Man")) &&
  Const        r2, "name"
  Const        r12, "contains"
  Const        r8, "name"
  Const        r23, "contains"
  // k.keyword in [
  Const        r11, "keyword"
  // kt.kind == "movie" &&
  Const        r13, "kind"
  // t.production_year > 1950
  Const        r7, "production_year"
  // select t.title
  Const        r2, "title"
  // join kt in kind_type on kt.id == t.kind_id
  Const        r12, 0
  LessInt      r8, r12, r16
  JumpIfFalse  r8, L9
  Index        r23, r5, r12
  Const        r11, "id"
  Index        r13, r23, r11
  Const        r7, "kind_id"
  Index        r2, r14, r7
  Equal        r16, r13, r2
  JumpIfFalse  r16, L7
  // where cct1.kind == "cast" &&
  Const        r8, "kind"
  Index        r5, r20, r8
  // t.production_year > 1950
  Const        r11, "production_year"
  Index        r7, r14, r11
  Const        r13, 1950
  Less         r2, r13, r7
  // where cct1.kind == "cast" &&
  Const        r16, "cast"
  Equal        r20, r5, r16
  // k.keyword in [
  Const        r8, "keyword"
  Index        r11, r3, r8
  Const        r7, ["superhero", "sequel", "second-part", "marvel-comics", "based-on-comic", "tv-special", "fight", "violence"]
  In           r13, r11, r7
  // kt.kind == "movie" &&
  Const        r5, "kind"
  Index        r16, r23, r5
  Const        r3, "movie"
  Equal        r8, r16, r3
  // where cct1.kind == "cast" &&
  Move         r11, r20
  JumpIfFalse  r11, L10
  Const        r7, "kind"
  Index        r23, r22, r7
  // cct2.kind.contains("complete") &&
  Const        r5, "complete"
  In           r16, r5, r23
  JumpIfFalse  r16, L11
  Const        r3, "name"
  Index        r20, r19, r3
  // (!chn.name.contains("Sherlock")) &&
  Const        r11, "Sherlock"
  In           r22, r11, r20
  Not          r7, r22
  JumpIfFalse  r7, L11
  Const        r23, "name"
  Index        r5, r19, r23
  // (chn.name.contains("Tony Stark") || chn.name.contains("Iron Man")) &&
  Const        r16, "Tony Stark"
  In           r3, r16, r5
  JumpIfTrue   r3, L11
  Const        r20, "name"
  Index        r11, r19, r20
  Const        r22, "Iron Man"
  In           r3, r22, r11
  Move         r7, r3
  JumpIfFalse  r7, L12
  // ] &&
  Move         r23, r13
  JumpIfFalse  r23, L8
  // kt.kind == "movie" &&
  Move         r5, r8
  JumpIfFalse  r5, L13
  Move         r5, r2
  // where cct1.kind == "cast" &&
  JumpIfFalse  r5, L7
  // select t.title
  Const        r16, "title"
  Index        r19, r14, r16
  // from cc in complete_cast
  Append       r9, r9, r19
  // join kt in kind_type on kt.id == t.kind_id
  Const        r20, 1
  Add          r12, r12, r20
  Jump         L14
  // join t in title on t.id == cc.movie_id
  Const        r11, 1
  Add          r24, r24, r11
  Jump         L6
  // join k in keyword on k.id == mk.keyword_id
  Const        r22, 1
  Add          r4, r4, r22
  Jump         L15
  // join mk in movie_keyword on mk.movie_id == cc.movie_id
  Const        r3, 1
  Add          r6, r6, r3
  Jump         L16
  // join n in name on n.id == ci.person_id
  Const        r7, 1
  Add          r15, r15, r7
  Jump         L17
L5:
  // join chn in char_name on chn.id == ci.person_role_id
  Const        r13, 1
  Add          r1, r1, r13
  Jump         L18
L4:
  // join ci in cast_info on ci.movie_id == cc.movie_id
  Const        r23, 1
  Add          r17, r17, r23
  Jump         L19
L3:
  // join cct2 in comp_cast_type on cct2.id == cc.status_id
  Const        r2, 1
  Add          r21, r21, r2
  Jump         L20
L2:
  // join cct1 in comp_cast_type on cct1.id == cc.subject_id
  Const        r8, 1
  Add          r18, r18, r8
  Jump         L21
L1:
  // from cc in complete_cast
  Const        r5, 1
  AddInt       r10, r10, r5
  Jump         L22
L0:
  // let result = [ { complete_downey_ironman_movie: min(matches) } ]
  Const        r16, "complete_downey_ironman_movie"
  Min          r19, r9
  Move         r25, r16
  Move         r26, r19
  MakeMap      r12, 1, r25
  MakeList     r20, 1, r12
  // json(result)
  JSON         r20
  // expect result == [ { complete_downey_ironman_movie: "Iron Man" } ]
  Const        r24, [{"complete_downey_ironman_movie": "Iron Man"}]
  Equal        r11, r20, r24
  Expect       r11
  Return       r0
