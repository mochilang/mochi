func main (regs=374)
  // let aka_title = [
  Const        r0, [{"movie_id": 1}, {"movie_id": 2}]
  // let company_name = [
  Const        r1, [{"country_code": "[us]", "id": 1}, {"country_code": "[gb]", "id": 2}]
  // let company_type = [
  Const        r2, [{"id": 10}, {"id": 20}]
  // let info_type = [
  Const        r3, [{"id": 5, "info": "release dates"}, {"id": 6, "info": "other"}]
  // let keyword = [
  Const        r4, [{"id": 100}, {"id": 200}]
  // let movie_companies = [
  Const        r5, [{"company_id": 1, "company_type_id": 10, "movie_id": 1, "note": "release (2005) (worldwide)"}, {"company_id": 2, "company_type_id": 20, "movie_id": 2, "note": "release (1999) (worldwide)"}]
  // let movie_info = [
  Const        r6, [{"info": "USA: March 2005", "info_type_id": 5, "movie_id": 1, "note": "internet"}, {"info": "USA: May 1999", "info_type_id": 5, "movie_id": 2, "note": "theater"}]
  // let movie_keyword = [
  Const        r7, [{"keyword_id": 100, "movie_id": 1}, {"keyword_id": 200, "movie_id": 2}]
  // let title = [
  Const        r8, [{"id": 1, "production_year": 2005, "title": "Example Movie"}, {"id": 2, "production_year": 1999, "title": "Old Movie"}]
  // from t in title
  Const        r9, []
  // where cn.country_code == "[us]" &&
  Const        r10, "country_code"
  // it1.info == "release dates" &&
  Const        r11, "info"
  // mc.note.contains("200") &&
  Const        r12, "note"
  Const        r13, "contains"
  // mc.note.contains("worldwide") &&
  Const        r14, "note"
  Const        r15, "contains"
  // mi.note.contains("internet") &&
  Const        r16, "note"
  Const        r17, "contains"
  // mi.info.contains("USA:") &&
  Const        r18, "info"
  Const        r19, "contains"
  // mi.info.contains("200") &&
  Const        r20, "info"
  Const        r21, "contains"
  // t.production_year > 2000
  Const        r22, "production_year"
  // select { release_date: mi.info, internet_movie: t.title }
  Const        r23, "release_date"
  Const        r24, "info"
  Const        r25, "internet_movie"
  Const        r26, "title"
  // from t in title
  IterPrep     r27, r8
  Len          r28, r27
  Const        r30, 0
  Move         r29, r30
L19:
  LessInt      r31, r29, r28
  JumpIfFalse  r31, L0
  Index        r32, r27, r29
  Move         r33, r32
  // join at in aka_title on at.movie_id == t.id
  IterPrep     r34, r0
  Len          r35, r34
  Const        r36, "movie_id"
  Const        r37, "id"
  // where cn.country_code == "[us]" &&
  Const        r38, "country_code"
  // it1.info == "release dates" &&
  Const        r39, "info"
  // mc.note.contains("200") &&
  Const        r40, "note"
  Const        r41, "contains"
  // mc.note.contains("worldwide") &&
  Const        r42, "note"
  Const        r43, "contains"
  // mi.note.contains("internet") &&
  Const        r44, "note"
  Const        r45, "contains"
  // mi.info.contains("USA:") &&
  Const        r46, "info"
  Const        r47, "contains"
  // mi.info.contains("200") &&
  Const        r48, "info"
  Const        r49, "contains"
  // t.production_year > 2000
  Const        r50, "production_year"
  // select { release_date: mi.info, internet_movie: t.title }
  Const        r51, "release_date"
  Const        r52, "info"
  Const        r53, "internet_movie"
  Const        r54, "title"
  // join at in aka_title on at.movie_id == t.id
  Const        r56, 0
  Move         r55, r56
L18:
  LessInt      r57, r55, r35
  JumpIfFalse  r57, L1
  Index        r58, r34, r55
  Move         r59, r58
  Const        r60, "movie_id"
  Index        r61, r59, r60
  Const        r62, "id"
  Index        r63, r33, r62
  Equal        r64, r61, r63
  JumpIfFalse  r64, L2
  // join mi in movie_info on mi.movie_id == t.id
  IterPrep     r65, r6
  Len          r66, r65
  Const        r67, "movie_id"
  Const        r68, "id"
  // where cn.country_code == "[us]" &&
  Const        r69, "country_code"
  // it1.info == "release dates" &&
  Const        r70, "info"
  // mc.note.contains("200") &&
  Const        r71, "note"
  Const        r72, "contains"
  // mc.note.contains("worldwide") &&
  Const        r73, "note"
  Const        r74, "contains"
  // mi.note.contains("internet") &&
  Const        r75, "note"
  Const        r76, "contains"
  // mi.info.contains("USA:") &&
  Const        r77, "info"
  Const        r78, "contains"
  // mi.info.contains("200") &&
  Const        r79, "info"
  Const        r80, "contains"
  // t.production_year > 2000
  Const        r81, "production_year"
  // select { release_date: mi.info, internet_movie: t.title }
  Const        r82, "release_date"
  Const        r83, "info"
  Const        r84, "internet_movie"
  Const        r85, "title"
  // join mi in movie_info on mi.movie_id == t.id
  Const        r87, 0
  Move         r86, r87
L17:
  LessInt      r88, r86, r66
  JumpIfFalse  r88, L2
  Index        r89, r65, r86
  Move         r90, r89
  Const        r91, "movie_id"
  Index        r92, r90, r91
  Const        r93, "id"
  Index        r94, r33, r93
  Equal        r95, r92, r94
  JumpIfFalse  r95, L3
  // join mk in movie_keyword on mk.movie_id == t.id
  IterPrep     r96, r7
  Len          r97, r96
  Const        r98, "movie_id"
  Const        r99, "id"
  // where cn.country_code == "[us]" &&
  Const        r100, "country_code"
  // it1.info == "release dates" &&
  Const        r101, "info"
  // mc.note.contains("200") &&
  Const        r102, "note"
  Const        r103, "contains"
  // mc.note.contains("worldwide") &&
  Const        r104, "note"
  Const        r105, "contains"
  // mi.note.contains("internet") &&
  Const        r106, "note"
  Const        r107, "contains"
  // mi.info.contains("USA:") &&
  Const        r108, "info"
  Const        r109, "contains"
  // mi.info.contains("200") &&
  Const        r110, "info"
  Const        r111, "contains"
  // t.production_year > 2000
  Const        r112, "production_year"
  // select { release_date: mi.info, internet_movie: t.title }
  Const        r113, "release_date"
  Const        r114, "info"
  Const        r115, "internet_movie"
  Const        r116, "title"
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r118, 0
  Move         r117, r118
L16:
  LessInt      r119, r117, r97
  JumpIfFalse  r119, L3
  Index        r120, r96, r117
  Move         r121, r120
  Const        r122, "movie_id"
  Index        r123, r121, r122
  Const        r124, "id"
  Index        r125, r33, r124
  Equal        r126, r123, r125
  JumpIfFalse  r126, L4
  // join mc in movie_companies on mc.movie_id == t.id
  IterPrep     r127, r5
  Len          r128, r127
  Const        r129, "movie_id"
  Const        r130, "id"
  // where cn.country_code == "[us]" &&
  Const        r131, "country_code"
  // it1.info == "release dates" &&
  Const        r132, "info"
  // mc.note.contains("200") &&
  Const        r133, "note"
  Const        r134, "contains"
  // mc.note.contains("worldwide") &&
  Const        r135, "note"
  Const        r136, "contains"
  // mi.note.contains("internet") &&
  Const        r137, "note"
  Const        r138, "contains"
  // mi.info.contains("USA:") &&
  Const        r139, "info"
  Const        r140, "contains"
  // mi.info.contains("200") &&
  Const        r141, "info"
  Const        r142, "contains"
  // t.production_year > 2000
  Const        r143, "production_year"
  // select { release_date: mi.info, internet_movie: t.title }
  Const        r144, "release_date"
  Const        r145, "info"
  Const        r146, "internet_movie"
  Const        r147, "title"
  // join mc in movie_companies on mc.movie_id == t.id
  Const        r149, 0
  Move         r148, r149
L15:
  LessInt      r150, r148, r128
  JumpIfFalse  r150, L4
  Index        r151, r127, r148
  Move         r152, r151
  Const        r153, "movie_id"
  Index        r154, r152, r153
  Const        r155, "id"
  Index        r156, r33, r155
  Equal        r157, r154, r156
  JumpIfFalse  r157, L5
  // join k in keyword on k.id == mk.keyword_id
  IterPrep     r158, r4
  Len          r159, r158
  Const        r160, "id"
  Const        r161, "keyword_id"
  // where cn.country_code == "[us]" &&
  Const        r162, "country_code"
  // it1.info == "release dates" &&
  Const        r163, "info"
  // mc.note.contains("200") &&
  Const        r164, "note"
  Const        r165, "contains"
  // mc.note.contains("worldwide") &&
  Const        r166, "note"
  Const        r167, "contains"
  // mi.note.contains("internet") &&
  Const        r168, "note"
  Const        r169, "contains"
  // mi.info.contains("USA:") &&
  Const        r170, "info"
  Const        r171, "contains"
  // mi.info.contains("200") &&
  Const        r172, "info"
  Const        r173, "contains"
  // t.production_year > 2000
  Const        r174, "production_year"
  // select { release_date: mi.info, internet_movie: t.title }
  Const        r175, "release_date"
  Const        r176, "info"
  Const        r177, "internet_movie"
  Const        r178, "title"
  // join k in keyword on k.id == mk.keyword_id
  Const        r180, 0
  Move         r179, r180
L14:
  LessInt      r181, r179, r159
  JumpIfFalse  r181, L5
  Index        r182, r158, r179
  Move         r183, r182
  Const        r184, "id"
  Index        r185, r183, r184
  Const        r186, "keyword_id"
  Index        r187, r121, r186
  Equal        r188, r185, r187
  JumpIfFalse  r188, L6
  // join it1 in info_type on it1.id == mi.info_type_id
  IterPrep     r189, r3
  Len          r190, r189
  Const        r191, "id"
  Const        r192, "info_type_id"
  // where cn.country_code == "[us]" &&
  Const        r193, "country_code"
  // it1.info == "release dates" &&
  Const        r194, "info"
  // mc.note.contains("200") &&
  Const        r195, "note"
  Const        r196, "contains"
  // mc.note.contains("worldwide") &&
  Const        r197, "note"
  Const        r198, "contains"
  // mi.note.contains("internet") &&
  Const        r199, "note"
  Const        r200, "contains"
  // mi.info.contains("USA:") &&
  Const        r201, "info"
  Const        r202, "contains"
  // mi.info.contains("200") &&
  Const        r203, "info"
  Const        r204, "contains"
  // t.production_year > 2000
  Const        r205, "production_year"
  // select { release_date: mi.info, internet_movie: t.title }
  Const        r206, "release_date"
  Const        r207, "info"
  Const        r208, "internet_movie"
  Const        r209, "title"
  // join it1 in info_type on it1.id == mi.info_type_id
  Const        r211, 0
  Move         r210, r211
L13:
  LessInt      r212, r210, r190
  JumpIfFalse  r212, L6
  Index        r213, r189, r210
  Move         r214, r213
  Const        r215, "id"
  Index        r216, r214, r215
  Const        r217, "info_type_id"
  Index        r218, r90, r217
  Equal        r219, r216, r218
  JumpIfFalse  r219, L7
  // join cn in company_name on cn.id == mc.company_id
  IterPrep     r220, r1
  Len          r221, r220
  Const        r222, "id"
  Const        r223, "company_id"
  // where cn.country_code == "[us]" &&
  Const        r224, "country_code"
  // it1.info == "release dates" &&
  Const        r225, "info"
  // mc.note.contains("200") &&
  Const        r226, "note"
  Const        r227, "contains"
  // mc.note.contains("worldwide") &&
  Const        r228, "note"
  Const        r229, "contains"
  // mi.note.contains("internet") &&
  Const        r230, "note"
  Const        r231, "contains"
  // mi.info.contains("USA:") &&
  Const        r232, "info"
  Const        r233, "contains"
  // mi.info.contains("200") &&
  Const        r234, "info"
  Const        r235, "contains"
  // t.production_year > 2000
  Const        r236, "production_year"
  // select { release_date: mi.info, internet_movie: t.title }
  Const        r237, "release_date"
  Const        r238, "info"
  Const        r239, "internet_movie"
  Const        r240, "title"
  // join cn in company_name on cn.id == mc.company_id
  Const        r242, 0
  Move         r241, r242
L12:
  LessInt      r243, r241, r221
  JumpIfFalse  r243, L7
  Index        r244, r220, r241
  Move         r245, r244
  Const        r246, "id"
  Index        r247, r245, r246
  Const        r248, "company_id"
  Index        r249, r152, r248
  Equal        r250, r247, r249
  JumpIfFalse  r250, L8
  // join ct in company_type on ct.id == mc.company_type_id
  IterPrep     r251, r2
  Len          r252, r251
  Const        r253, "id"
  Const        r254, "company_type_id"
  // where cn.country_code == "[us]" &&
  Const        r255, "country_code"
  // it1.info == "release dates" &&
  Const        r256, "info"
  // mc.note.contains("200") &&
  Const        r257, "note"
  Const        r258, "contains"
  // mc.note.contains("worldwide") &&
  Const        r259, "note"
  Const        r260, "contains"
  // mi.note.contains("internet") &&
  Const        r261, "note"
  Const        r262, "contains"
  // mi.info.contains("USA:") &&
  Const        r263, "info"
  Const        r264, "contains"
  // mi.info.contains("200") &&
  Const        r265, "info"
  Const        r266, "contains"
  // t.production_year > 2000
  Const        r267, "production_year"
  // select { release_date: mi.info, internet_movie: t.title }
  Const        r268, "release_date"
  Const        r269, "info"
  Const        r270, "internet_movie"
  Const        r271, "title"
  // join ct in company_type on ct.id == mc.company_type_id
  Const        r273, 0
  Move         r272, r273
L11:
  LessInt      r274, r272, r252
  JumpIfFalse  r274, L8
  Index        r275, r251, r272
  Move         r276, r275
  Const        r277, "id"
  Index        r278, r276, r277
  Const        r279, "company_type_id"
  Index        r280, r152, r279
  Equal        r281, r278, r280
  JumpIfFalse  r281, L9
  // where cn.country_code == "[us]" &&
  Const        r282, "country_code"
  Index        r283, r245, r282
  // t.production_year > 2000
  Const        r284, "production_year"
  Index        r285, r33, r284
  Const        r286, 2000
  Less         r287, r286, r285
  // where cn.country_code == "[us]" &&
  Const        r288, "[us]"
  Equal        r289, r283, r288
  // it1.info == "release dates" &&
  Const        r290, "info"
  Index        r291, r214, r290
  Const        r292, "release dates"
  Equal        r293, r291, r292
  // where cn.country_code == "[us]" &&
  Move         r294, r289
  JumpIfFalse  r294, L10
  Move         r294, r293
  // it1.info == "release dates" &&
  JumpIfFalse  r294, L10
  Const        r295, "note"
  Index        r296, r152, r295
  // mc.note.contains("200") &&
  Const        r297, "200"
  In           r298, r297, r296
  // it1.info == "release dates" &&
  Move         r294, r298
  // mc.note.contains("200") &&
  JumpIfFalse  r294, L10
  Const        r299, "note"
  Index        r300, r152, r299
  // mc.note.contains("worldwide") &&
  Const        r301, "worldwide"
  In           r302, r301, r300
  // mc.note.contains("200") &&
  Move         r294, r302
  // mc.note.contains("worldwide") &&
  JumpIfFalse  r294, L10
  Const        r303, "note"
  Index        r304, r90, r303
  // mi.note.contains("internet") &&
  Const        r305, "internet"
  In           r306, r305, r304
  // mc.note.contains("worldwide") &&
  Move         r294, r306
  // mi.note.contains("internet") &&
  JumpIfFalse  r294, L10
  Const        r307, "info"
  Index        r308, r90, r307
  // mi.info.contains("USA:") &&
  Const        r309, "USA:"
  In           r310, r309, r308
  // mi.note.contains("internet") &&
  Move         r294, r310
  // mi.info.contains("USA:") &&
  JumpIfFalse  r294, L10
  Const        r311, "info"
  Index        r312, r90, r311
  // mi.info.contains("200") &&
  Const        r313, "200"
  In           r314, r313, r312
  // mi.info.contains("USA:") &&
  Move         r294, r314
  // mi.info.contains("200") &&
  JumpIfFalse  r294, L10
  Move         r294, r287
L10:
  // where cn.country_code == "[us]" &&
  JumpIfFalse  r294, L9
  // select { release_date: mi.info, internet_movie: t.title }
  Const        r315, "release_date"
  Const        r316, "info"
  Index        r317, r90, r316
  Const        r318, "internet_movie"
  Const        r319, "title"
  Index        r320, r33, r319
  Move         r321, r315
  Move         r322, r317
  Move         r323, r318
  Move         r324, r320
  MakeMap      r325, 2, r321
  // from t in title
  Append       r326, r9, r325
  Move         r9, r326
L9:
  // join ct in company_type on ct.id == mc.company_type_id
  Const        r327, 1
  Add          r272, r272, r327
  Jump         L11
L8:
  // join cn in company_name on cn.id == mc.company_id
  Const        r328, 1
  Add          r241, r241, r328
  Jump         L12
L7:
  // join it1 in info_type on it1.id == mi.info_type_id
  Const        r329, 1
  Add          r210, r210, r329
  Jump         L13
L6:
  // join k in keyword on k.id == mk.keyword_id
  Const        r330, 1
  Add          r179, r179, r330
  Jump         L14
L5:
  // join mc in movie_companies on mc.movie_id == t.id
  Const        r331, 1
  Add          r148, r148, r331
  Jump         L15
L4:
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r332, 1
  Add          r117, r117, r332
  Jump         L16
L3:
  // join mi in movie_info on mi.movie_id == t.id
  Const        r333, 1
  Add          r86, r86, r333
  Jump         L17
L2:
  // join at in aka_title on at.movie_id == t.id
  Const        r334, 1
  Add          r55, r55, r334
  Jump         L18
L1:
  // from t in title
  Const        r335, 1
  AddInt       r29, r29, r335
  Jump         L19
L0:
  // release_date: min(from r in rows select r.release_date),
  Const        r336, "release_date"
  Const        r337, []
  Const        r338, "release_date"
  IterPrep     r339, r9
  Len          r340, r339
  Const        r342, 0
  Move         r341, r342
L21:
  LessInt      r343, r341, r340
  JumpIfFalse  r343, L20
  Index        r344, r339, r341
  Move         r345, r344
  Const        r346, "release_date"
  Index        r347, r345, r346
  Append       r348, r337, r347
  Move         r337, r348
  Const        r349, 1
  AddInt       r341, r341, r349
  Jump         L21
L20:
  Min          r350, r337
  // internet_movie: min(from r in rows select r.internet_movie)
  Const        r351, "internet_movie"
  Const        r352, []
  Const        r353, "internet_movie"
  IterPrep     r354, r9
  Len          r355, r354
  Const        r357, 0
  Move         r356, r357
L23:
  LessInt      r358, r356, r355
  JumpIfFalse  r358, L22
  Index        r359, r354, r356
  Move         r345, r359
  Const        r360, "internet_movie"
  Index        r361, r345, r360
  Append       r362, r352, r361
  Move         r352, r362
  Const        r363, 1
  AddInt       r356, r356, r363
  Jump         L23
L22:
  Min          r364, r352
  // release_date: min(from r in rows select r.release_date),
  Move         r365, r336
  Move         r366, r350
  // internet_movie: min(from r in rows select r.internet_movie)
  Move         r367, r351
  Move         r368, r364
  // {
  MakeMap      r369, 2, r365
  Move         r370, r369
  // let result = [
  MakeList     r371, 1, r370
  // json(result)
  JSON         r371
  // expect result == [
  Const        r372, [{"internet_movie": "Example Movie", "release_date": "USA: March 2005"}]
  Equal        r373, r371, r372
  Expect       r373
  Return       r0
