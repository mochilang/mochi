func main (regs=38)
  // let aka_title = [
  Const        r0, [{"movie_id": 1}, {"movie_id": 2}]
  // let company_name = [
  Const        r1, [{"country_code": "[us]", "id": 1}, {"country_code": "[gb]", "id": 2}]
L1:
  // let company_type = [
  Const        r2, [{"id": 10}, {"id": 20}]
L7:
  // let info_type = [
  Const        r3, [{"id": 5, "info": "release dates"}, {"id": 6, "info": "other"}]
  // let keyword = [
  Const        r4, [{"id": 100}, {"id": 200}]
L5:
  // let movie_companies = [
  Const        r5, [{"company_id": 1, "company_type_id": 10, "movie_id": 1, "note": "release (2005) (worldwide)"}, {"company_id": 2, "company_type_id": 20, "movie_id": 2, "note": "release (1999) (worldwide)"}]
L6:
  // let movie_info = [
  Const        r6, [{"info": "USA: March 2005", "info_type_id": 5, "movie_id": 1, "note": "internet"}, {"info": "USA: May 1999", "info_type_id": 5, "movie_id": 2, "note": "theater"}]
  // let movie_keyword = [
  Const        r7, [{"keyword_id": 100, "movie_id": 1}, {"keyword_id": 200, "movie_id": 2}]
  // let title = [
  Const        r8, [{"id": 1, "production_year": 2005, "title": "Example Movie"}, {"id": 2, "production_year": 1999, "title": "Old Movie"}]
  // from t in title
  Const        r9, []
L2:
  // where cn.country_code == "[us]" &&
  Const        r10, "country_code"
  // it1.info == "release dates" &&
  Const        r11, "info"
L10:
  // mc.note.contains("200") &&
  Const        r12, "note"
L11:
  Const        r13, "contains"
L12:
  // mc.note.contains("worldwide") &&
  Const        r14, "note"
L13:
  Const        r15, "contains"
L3:
  // mi.note.contains("internet") &&
  Const        r16, "note"
L8:
  Const        r17, "contains"
  // mi.info.contains("USA:") &&
  Const        r18, "info"
L17:
  Const        r19, "contains"
L14:
  // mi.info.contains("200") &&
  Const        r20, "info"
  Const        r21, "contains"
L9:
  // t.production_year > 2000
  Const        r22, "production_year"
L15:
  // select { release_date: mi.info, internet_movie: t.title }
  Const        r23, "release_date"
  Const        r24, "info"
  Const        r25, "internet_movie"
L4:
  Const        r26, "title"
L0:
  // from t in title
  IterPrep     r27, r8
L16:
  Len          r28, r27
  Const        r29, 0
  LessInt      r10, r29, r28
  JumpIfFalse  r10, L0
  Index        r11, r27, r29
L18:
  // join at in aka_title on at.movie_id == t.id
  IterPrep     r12, r0
  Len          r13, r12
  Const        r14, "movie_id"
  Const        r15, "id"
  // where cn.country_code == "[us]" &&
  Const        r16, "country_code"
  // it1.info == "release dates" &&
  Const        r17, "info"
  // mc.note.contains("200") &&
  Const        r18, "note"
  Const        r19, "contains"
  // mc.note.contains("worldwide") &&
  Const        r20, "note"
  Const        r21, "contains"
  // mi.note.contains("internet") &&
  Const        r22, "note"
  Const        r23, "contains"
  // mi.info.contains("USA:") &&
  Const        r24, "info"
  Const        r25, "contains"
  // mi.info.contains("200") &&
  Const        r26, "info"
  Const        r8, "contains"
  // t.production_year > 2000
  Const        r28, "production_year"
  // select { release_date: mi.info, internet_movie: t.title }
  Const        r10, "release_date"
  Const        r27, "info"
  Const        r14, "internet_movie"
  Const        r15, "title"
  // join at in aka_title on at.movie_id == t.id
  Const        r16, 0
  LessInt      r17, r16, r13
  JumpIfFalse  r17, L1
  Index        r18, r12, r16
  Const        r19, "movie_id"
  Index        r20, r18, r19
  Const        r21, "id"
  Index        r22, r11, r21
  Equal        r23, r20, r22
  JumpIfFalse  r23, L2
  // join mi in movie_info on mi.movie_id == t.id
  IterPrep     r24, r6
  Len          r25, r24
  Const        r26, "movie_id"
  Const        r8, "id"
  // where cn.country_code == "[us]" &&
  Const        r28, "country_code"
  // it1.info == "release dates" &&
  Const        r10, "info"
  // mc.note.contains("200") &&
  Const        r27, "note"
  Const        r14, "contains"
  // mc.note.contains("worldwide") &&
  Const        r15, "note"
  Const        r13, "contains"
  // mi.note.contains("internet") &&
  Const        r17, "note"
  Const        r12, "contains"
  // mi.info.contains("USA:") &&
  Const        r18, "info"
  Const        r19, "contains"
  // mi.info.contains("200") &&
  Const        r21, "info"
  Const        r20, "contains"
  // t.production_year > 2000
  Const        r22, "production_year"
  // select { release_date: mi.info, internet_movie: t.title }
  Const        r23, "release_date"
  Const        r6, "info"
  Const        r26, "internet_movie"
  Const        r8, "title"
  // join mi in movie_info on mi.movie_id == t.id
  Const        r28, 0
  LessInt      r10, r28, r25
  JumpIfFalse  r10, L2
  Index        r27, r24, r28
  Const        r14, "movie_id"
  Index        r15, r27, r14
  Const        r13, "id"
  Index        r17, r11, r13
  Equal        r12, r15, r17
  JumpIfFalse  r12, L3
  // join mk in movie_keyword on mk.movie_id == t.id
  IterPrep     r18, r7
  Len          r19, r18
  Const        r21, "movie_id"
  Const        r20, "id"
  // where cn.country_code == "[us]" &&
  Const        r22, "country_code"
  // it1.info == "release dates" &&
  Const        r23, "info"
  // mc.note.contains("200") &&
  Const        r6, "note"
  Const        r26, "contains"
  // mc.note.contains("worldwide") &&
  Const        r8, "note"
  Const        r25, "contains"
  // mi.note.contains("internet") &&
  Const        r10, "note"
  Const        r24, "contains"
  // mi.info.contains("USA:") &&
  Const        r14, "info"
  Const        r13, "contains"
  // mi.info.contains("200") &&
  Const        r15, "info"
  Const        r17, "contains"
  // t.production_year > 2000
  Const        r12, "production_year"
  // select { release_date: mi.info, internet_movie: t.title }
  Const        r7, "release_date"
  Const        r21, "info"
  Const        r20, "internet_movie"
  Const        r22, "title"
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r23, 0
  LessInt      r6, r23, r19
  JumpIfFalse  r6, L3
  Index        r26, r18, r23
  Const        r8, "movie_id"
  Index        r25, r26, r8
  Const        r10, "id"
  Index        r24, r11, r10
  Equal        r14, r25, r24
  JumpIfFalse  r14, L4
  // join mc in movie_companies on mc.movie_id == t.id
  IterPrep     r13, r5
  Len          r15, r13
  Const        r17, "movie_id"
  Const        r12, "id"
  // where cn.country_code == "[us]" &&
  Const        r7, "country_code"
  // it1.info == "release dates" &&
  Const        r21, "info"
  // mc.note.contains("200") &&
  Const        r20, "note"
  Const        r22, "contains"
  // mc.note.contains("worldwide") &&
  Const        r19, "note"
  Const        r6, "contains"
  // mi.note.contains("internet") &&
  Const        r18, "note"
  Const        r8, "contains"
  // mi.info.contains("USA:") &&
  Const        r10, "info"
  Const        r25, "contains"
  // mi.info.contains("200") &&
  Const        r24, "info"
  Const        r14, "contains"
  // t.production_year > 2000
  Const        r5, "production_year"
  // select { release_date: mi.info, internet_movie: t.title }
  Const        r17, "release_date"
  Const        r12, "info"
  Const        r7, "internet_movie"
  Const        r21, "title"
  // join mc in movie_companies on mc.movie_id == t.id
  Const        r20, 0
  LessInt      r22, r20, r15
  JumpIfFalse  r22, L4
  Index        r19, r13, r20
  Const        r6, "movie_id"
  Index        r18, r19, r6
  Const        r8, "id"
  Index        r10, r11, r8
  Equal        r25, r18, r10
  JumpIfFalse  r25, L5
  // join k in keyword on k.id == mk.keyword_id
  IterPrep     r24, r4
  Len          r14, r24
  Const        r5, "id"
  Const        r17, "keyword_id"
  // where cn.country_code == "[us]" &&
  Const        r12, "country_code"
  // it1.info == "release dates" &&
  Const        r7, "info"
  // mc.note.contains("200") &&
  Const        r21, "note"
  Const        r15, "contains"
  // mc.note.contains("worldwide") &&
  Const        r22, "note"
  Const        r13, "contains"
  // mi.note.contains("internet") &&
  Const        r6, "note"
  Const        r8, "contains"
  // mi.info.contains("USA:") &&
  Const        r18, "info"
  Const        r10, "contains"
  // mi.info.contains("200") &&
  Const        r25, "info"
  Const        r4, "contains"
  // t.production_year > 2000
  Const        r5, "production_year"
  // select { release_date: mi.info, internet_movie: t.title }
  Const        r17, "release_date"
  Const        r12, "info"
  Const        r7, "internet_movie"
  Const        r21, "title"
  // join k in keyword on k.id == mk.keyword_id
  Const        r15, 0
  LessInt      r22, r15, r14
  JumpIfFalse  r22, L5
  Index        r13, r24, r15
  Const        r6, "id"
  Index        r8, r13, r6
  Const        r18, "keyword_id"
  Index        r10, r26, r18
  Equal        r25, r8, r10
  JumpIfFalse  r25, L6
  // join it1 in info_type on it1.id == mi.info_type_id
  IterPrep     r4, r3
  Len          r5, r4
  Const        r17, "id"
  Const        r12, "info_type_id"
  // where cn.country_code == "[us]" &&
  Const        r7, "country_code"
  // it1.info == "release dates" &&
  Const        r21, "info"
  // mc.note.contains("200") &&
  Const        r14, "note"
  Const        r22, "contains"
  // mc.note.contains("worldwide") &&
  Const        r24, "note"
  Const        r13, "contains"
  // mi.note.contains("internet") &&
  Const        r6, "note"
  Const        r26, "contains"
  // mi.info.contains("USA:") &&
  Const        r18, "info"
  Const        r8, "contains"
  // mi.info.contains("200") &&
  Const        r10, "info"
  Const        r25, "contains"
  // t.production_year > 2000
  Const        r3, "production_year"
  // select { release_date: mi.info, internet_movie: t.title }
  Const        r17, "release_date"
  Const        r12, "info"
  Const        r7, "internet_movie"
  Const        r21, "title"
  // join it1 in info_type on it1.id == mi.info_type_id
  Const        r14, 0
  LessInt      r22, r14, r5
  JumpIfFalse  r22, L6
  Index        r24, r4, r14
  Const        r13, "id"
  Index        r6, r24, r13
  Const        r26, "info_type_id"
  Index        r18, r27, r26
  Equal        r8, r6, r18
  JumpIfFalse  r8, L0
  // join cn in company_name on cn.id == mc.company_id
  IterPrep     r10, r1
  Len          r25, r10
  Const        r3, "id"
  Const        r17, "company_id"
  // where cn.country_code == "[us]" &&
  Const        r12, "country_code"
  // it1.info == "release dates" &&
  Const        r7, "info"
  // mc.note.contains("200") &&
  Const        r21, "note"
  Const        r5, "contains"
  // mc.note.contains("worldwide") &&
  Const        r22, "note"
  Const        r4, "contains"
  // mi.note.contains("internet") &&
  Const        r13, "note"
  Const        r26, "contains"
  // mi.info.contains("USA:") &&
  Const        r6, "info"
  Const        r18, "contains"
  // mi.info.contains("200") &&
  Const        r8, "info"
  Const        r1, "contains"
  // t.production_year > 2000
  Const        r3, "production_year"
  // select { release_date: mi.info, internet_movie: t.title }
  Const        r17, "release_date"
  Const        r12, "info"
  Const        r7, "internet_movie"
  Const        r21, "title"
  // join cn in company_name on cn.id == mc.company_id
  Const        r5, 0
  LessInt      r22, r5, r25
  JumpIfFalse  r22, L0
  Index        r4, r10, r5
  Const        r13, "id"
  Index        r26, r4, r13
  Const        r6, "company_id"
  Index        r18, r19, r6
  Equal        r8, r26, r18
  JumpIfFalse  r8, L7
  // join ct in company_type on ct.id == mc.company_type_id
  IterPrep     r1, r2
  Len          r3, r1
  Const        r17, "id"
  Const        r12, "company_type_id"
  // where cn.country_code == "[us]" &&
  Const        r7, "country_code"
  // it1.info == "release dates" &&
  Const        r21, "info"
  // mc.note.contains("200") &&
  Const        r25, "note"
  Const        r22, "contains"
  // mc.note.contains("worldwide") &&
  Const        r10, "note"
  Const        r13, "contains"
  // mi.note.contains("internet") &&
  Const        r6, "note"
  Const        r26, "contains"
  // mi.info.contains("USA:") &&
  Const        r18, "info"
  Const        r8, "contains"
  // mi.info.contains("200") &&
  Const        r2, "info"
  Const        r17, "contains"
  // t.production_year > 2000
  Const        r12, "production_year"
  // select { release_date: mi.info, internet_movie: t.title }
  Const        r7, "release_date"
  Const        r21, "info"
  Const        r25, "internet_movie"
  Const        r22, "title"
  // join ct in company_type on ct.id == mc.company_type_id
  Const        r10, 0
  LessInt      r13, r10, r3
  JumpIfFalse  r13, L7
  Index        r6, r1, r10
  Const        r26, "id"
  Index        r18, r6, r26
  Const        r8, "company_type_id"
  Index        r2, r19, r8
  Equal        r17, r18, r2
  JumpIfFalse  r17, L8
  // where cn.country_code == "[us]" &&
  Const        r12, "country_code"
  Index        r7, r4, r12
  // t.production_year > 2000
  Const        r21, "production_year"
  Index        r25, r11, r21
  Const        r22, 2000
  Less         r3, r22, r25
  // where cn.country_code == "[us]" &&
  Const        r13, "[us]"
  Equal        r1, r7, r13
  // it1.info == "release dates" &&
  Const        r6, "info"
  Index        r26, r24, r6
  Const        r8, "release dates"
  Equal        r18, r26, r8
  // where cn.country_code == "[us]" &&
  Move         r2, r1
  JumpIfFalse  r2, L8
  // it1.info == "release dates" &&
  Move         r17, r18
  JumpIfFalse  r17, L9
  Const        r4, "note"
  Index        r12, r19, r4
  // mc.note.contains("200") &&
  Const        r21, "200"
  In           r25, r21, r12
  JumpIfFalse  r25, L6
  Const        r22, "note"
  Index        r7, r19, r22
  // mc.note.contains("worldwide") &&
  Const        r13, "worldwide"
  In           r24, r13, r7
  JumpIfFalse  r24, L1
  Const        r6, "note"
  Index        r26, r27, r6
  // mi.note.contains("internet") &&
  Const        r8, "internet"
  In           r1, r8, r26
  JumpIfFalse  r1, L10
  Const        r2, "info"
  Index        r18, r27, r2
  // mi.info.contains("USA:") &&
  Const        r17, "USA:"
  In           r4, r17, r18
  JumpIfFalse  r4, L9
  Const        r12, "info"
  Index        r21, r27, r12
  // mi.info.contains("200") &&
  Const        r25, "200"
  In           r19, r25, r21
  JumpIfFalse  r19, L11
  Move         r19, r3
  // where cn.country_code == "[us]" &&
  JumpIfFalse  r19, L8
  // select { release_date: mi.info, internet_movie: t.title }
  Const        r22, "release_date"
  Const        r7, "info"
  Index        r13, r27, r7
  Const        r24, "internet_movie"
  Const        r6, "title"
  Index        r26, r11, r6
  Move         r30, r22
  Move         r31, r13
  Move         r32, r24
  Move         r33, r26
  MakeMap      r8, 2, r30
  // from t in title
  Append       r9, r9, r8
  // join ct in company_type on ct.id == mc.company_type_id
  Const        r1, 1
  Add          r10, r10, r1
  Jump         L2
  // join cn in company_name on cn.id == mc.company_id
  Const        r2, 1
  Add          r5, r5, r2
  Jump         L5
  // join it1 in info_type on it1.id == mi.info_type_id
  Const        r18, 1
  Add          r14, r14, r18
  Jump         L12
  // join k in keyword on k.id == mk.keyword_id
  Const        r17, 1
  Add          r15, r15, r17
  Jump         L13
  // join mc in movie_companies on mc.movie_id == t.id
  Const        r4, 1
  Add          r20, r20, r4
  Jump         L14
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r12, 1
  Add          r23, r23, r12
  Jump         L15
  // join mi in movie_info on mi.movie_id == t.id
  Const        r3, 1
  Add          r28, r28, r3
  Jump         L16
  // join at in aka_title on at.movie_id == t.id
  Const        r21, 1
  Add          r16, r16, r21
  Jump         L3
  // from t in title
  Const        r25, 1
  AddInt       r29, r29, r25
  Jump         L17
  // release_date: min(from r in rows select r.release_date),
  Const        r27, "release_date"
  Const        r7, []
  Const        r11, "release_date"
  IterPrep     r6, r9
  Len          r22, r6
  Const        r13, 0
  LessInt      r24, r13, r22
  JumpIfFalse  r24, L16
  Index        r26, r6, r13
  Const        r30, "release_date"
  Index        r31, r26, r30
  Append       r7, r7, r31
  Const        r32, 1
  AddInt       r13, r13, r32
  Jump         L18
  Min          r8, r7
  // internet_movie: min(from r in rows select r.internet_movie)
  Const        r10, "internet_movie"
  Const        r1, []
  Const        r5, "internet_movie"
  IterPrep     r2, r9
  Len          r14, r2
  Const        r18, 0
L20:
  LessInt      r15, r18, r14
  JumpIfFalse  r15, L19
  Index        r26, r2, r18
  Const        r17, "internet_movie"
  Index        r20, r26, r17
  Append       r1, r1, r20
  Const        r33, 1
  AddInt       r18, r18, r33
  Jump         L20
L19:
  Min          r4, r1
  // release_date: min(from r in rows select r.release_date),
  Move         r34, r27
  Move         r35, r8
  // internet_movie: min(from r in rows select r.internet_movie)
  Move         r36, r10
  Move         r37, r4
  // {
  MakeMap      r23, 2, r34
  // let result = [
  MakeList     r12, 1, r23
  // json(result)
  JSON         r12
  // expect result == [
  Const        r28, [{"internet_movie": "Example Movie", "release_date": "USA: March 2005"}]
  Equal        r3, r12, r28
  Expect       r3
  Return       r0
