func main (regs=91)
  // let cast_info = [
  Const        r0, [{"movie_id": 1, "person_id": 101}, {"movie_id": 2, "person_id": 102}]
  // let keyword = [
  Const        r1, [{"id": 100, "keyword": "marvel-cinematic-universe"}, {"id": 200, "keyword": "other"}]
  // let movie_keyword = [
  Const        r2, [{"keyword_id": 100, "movie_id": 1}, {"keyword_id": 200, "movie_id": 2}]
  // let name = [
  Const        r3, [{"id": 101, "name": "Downey Robert Jr."}, {"id": 102, "name": "Chris Evans"}]
  // let title = [
  Const        r4, [{"id": 1, "production_year": 2013, "title": "Iron Man 3"}, {"id": 2, "production_year": 2000, "title": "Old Movie"}]
  // from ci in cast_info
  Const        r5, []
  // k.keyword == "marvel-cinematic-universe" &&
  Const        r6, "keyword"
  // n.name.contains("Downey") &&
  Const        r7, "name"
  Const        r8, "contains"
  // n.name.contains("Robert") &&
  Const        r7, "name"
  Const        r8, "contains"
  // t.production_year > 2010
  Const        r9, "production_year"
  // movie_keyword: k.keyword,
  Const        r10, "movie_keyword"
  Const        r6, "keyword"
  // actor_name: n.name,
  Const        r11, "actor_name"
  Const        r7, "name"
  // marvel_movie: t.title
  Const        r12, "marvel_movie"
  Const        r13, "title"
  // from ci in cast_info
  IterPrep     r14, r0
  Len          r15, r14
  Const        r17, 0
  Move         r16, r17
L11:
  LessInt      r18, r16, r15
  JumpIfFalse  r18, L0
  Index        r19, r14, r16
  Move         r20, r19
  // join mk in movie_keyword on ci.movie_id == mk.movie_id
  IterPrep     r21, r2
  Len          r22, r21
  Const        r23, "movie_id"
  Const        r23, "movie_id"
  // k.keyword == "marvel-cinematic-universe" &&
  Const        r6, "keyword"
  // n.name.contains("Downey") &&
  Const        r7, "name"
  Const        r8, "contains"
  // n.name.contains("Robert") &&
  Const        r7, "name"
  Const        r8, "contains"
  // t.production_year > 2010
  Const        r9, "production_year"
  // movie_keyword: k.keyword,
  Const        r10, "movie_keyword"
  Const        r6, "keyword"
  // actor_name: n.name,
  Const        r11, "actor_name"
  Const        r7, "name"
  // marvel_movie: t.title
  Const        r12, "marvel_movie"
  Const        r13, "title"
  // join mk in movie_keyword on ci.movie_id == mk.movie_id
  Const        r17, 0
  Move         r24, r17
L10:
  LessInt      r25, r24, r22
  JumpIfFalse  r25, L1
  Index        r26, r21, r24
  Move         r27, r26
  Const        r23, "movie_id"
  Index        r28, r20, r23
  Const        r23, "movie_id"
  Index        r29, r27, r23
  Equal        r30, r28, r29
  JumpIfFalse  r30, L2
  // join k in keyword on mk.keyword_id == k.id
  IterPrep     r31, r1
  Len          r32, r31
  Const        r33, "keyword_id"
  Const        r34, "id"
  // k.keyword == "marvel-cinematic-universe" &&
  Const        r6, "keyword"
  // n.name.contains("Downey") &&
  Const        r7, "name"
  Const        r8, "contains"
  // n.name.contains("Robert") &&
  Const        r7, "name"
  Const        r8, "contains"
  // t.production_year > 2010
  Const        r9, "production_year"
  // movie_keyword: k.keyword,
  Const        r10, "movie_keyword"
  Const        r6, "keyword"
  // actor_name: n.name,
  Const        r11, "actor_name"
  Const        r7, "name"
  // marvel_movie: t.title
  Const        r12, "marvel_movie"
  Const        r13, "title"
  // join k in keyword on mk.keyword_id == k.id
  Const        r17, 0
  Move         r35, r17
L9:
  LessInt      r36, r35, r32
  JumpIfFalse  r36, L2
  Index        r37, r31, r35
  Move         r38, r37
  Const        r33, "keyword_id"
  Index        r39, r27, r33
  Const        r34, "id"
  Index        r40, r38, r34
  Equal        r41, r39, r40
  JumpIfFalse  r41, L3
  // join n in name on ci.person_id == n.id
  IterPrep     r42, r3
  Len          r43, r42
  Const        r44, "person_id"
  Const        r34, "id"
  // k.keyword == "marvel-cinematic-universe" &&
  Const        r6, "keyword"
  // n.name.contains("Downey") &&
  Const        r7, "name"
  Const        r8, "contains"
  // n.name.contains("Robert") &&
  Const        r7, "name"
  Const        r8, "contains"
  // t.production_year > 2010
  Const        r9, "production_year"
  // movie_keyword: k.keyword,
  Const        r10, "movie_keyword"
  Const        r6, "keyword"
  // actor_name: n.name,
  Const        r11, "actor_name"
  Const        r7, "name"
  // marvel_movie: t.title
  Const        r12, "marvel_movie"
  Const        r13, "title"
  // join n in name on ci.person_id == n.id
  Const        r17, 0
  Move         r45, r17
L8:
  LessInt      r46, r45, r43
  JumpIfFalse  r46, L3
  Index        r47, r42, r45
  Move         r48, r47
  Const        r44, "person_id"
  Index        r49, r20, r44
  Const        r34, "id"
  Index        r50, r48, r34
  Equal        r51, r49, r50
  JumpIfFalse  r51, L4
  // join t in title on ci.movie_id == t.id
  IterPrep     r52, r4
  Len          r53, r52
  Const        r23, "movie_id"
  Const        r34, "id"
  // k.keyword == "marvel-cinematic-universe" &&
  Const        r6, "keyword"
  // n.name.contains("Downey") &&
  Const        r7, "name"
  Const        r8, "contains"
  // n.name.contains("Robert") &&
  Const        r7, "name"
  Const        r8, "contains"
  // t.production_year > 2010
  Const        r9, "production_year"
  // movie_keyword: k.keyword,
  Const        r10, "movie_keyword"
  Const        r6, "keyword"
  // actor_name: n.name,
  Const        r11, "actor_name"
  Const        r7, "name"
  // marvel_movie: t.title
  Const        r12, "marvel_movie"
  Const        r13, "title"
  // join t in title on ci.movie_id == t.id
  Const        r17, 0
  Move         r54, r17
L7:
  LessInt      r55, r54, r53
  JumpIfFalse  r55, L4
  Index        r56, r52, r54
  Move         r57, r56
  Const        r23, "movie_id"
  Index        r58, r20, r23
  Const        r34, "id"
  Index        r59, r57, r34
  Equal        r60, r58, r59
  JumpIfFalse  r60, L5
  // k.keyword == "marvel-cinematic-universe" &&
  Const        r6, "keyword"
  Index        r61, r38, r6
  // t.production_year > 2010
  Const        r9, "production_year"
  Index        r62, r57, r9
  Const        r63, 2010
  Less         r64, r63, r62
  // k.keyword == "marvel-cinematic-universe" &&
  Const        r65, "marvel-cinematic-universe"
  Equal        r66, r61, r65
  Move         r67, r66
  JumpIfFalse  r67, L6
  Const        r7, "name"
  Index        r68, r48, r7
  // n.name.contains("Downey") &&
  Const        r69, "Downey"
  In           r70, r69, r68
  // k.keyword == "marvel-cinematic-universe" &&
  Move         r67, r70
  // n.name.contains("Downey") &&
  JumpIfFalse  r67, L6
  Const        r7, "name"
  Index        r71, r48, r7
  // n.name.contains("Robert") &&
  Const        r72, "Robert"
  In           r73, r72, r71
  // n.name.contains("Downey") &&
  Move         r67, r73
  // n.name.contains("Robert") &&
  JumpIfFalse  r67, L6
  Move         r67, r64
L6:
  // k.keyword == "marvel-cinematic-universe" &&
  JumpIfFalse  r67, L5
  // movie_keyword: k.keyword,
  Const        r74, "movie_keyword"
  Const        r6, "keyword"
  Index        r75, r38, r6
  // actor_name: n.name,
  Const        r76, "actor_name"
  Const        r7, "name"
  Index        r77, r48, r7
  // marvel_movie: t.title
  Const        r78, "marvel_movie"
  Const        r13, "title"
  Index        r79, r57, r13
  // movie_keyword: k.keyword,
  Move         r80, r74
  Move         r81, r75
  // actor_name: n.name,
  Move         r82, r76
  Move         r83, r77
  // marvel_movie: t.title
  Move         r84, r78
  Move         r85, r79
  // select {
  MakeMap      r86, 3, r80
  // from ci in cast_info
  Append       r87, r5, r86
  Move         r5, r87
L5:
  // join t in title on ci.movie_id == t.id
  Const        r88, 1
  Add          r54, r54, r88
  Jump         L7
L4:
  // join n in name on ci.person_id == n.id
  Const        r88, 1
  Add          r45, r45, r88
  Jump         L8
L3:
  // join k in keyword on mk.keyword_id == k.id
  Const        r88, 1
  Add          r35, r35, r88
  Jump         L9
L2:
  // join mk in movie_keyword on ci.movie_id == mk.movie_id
  Const        r88, 1
  Add          r24, r24, r88
  Jump         L10
L1:
  // from ci in cast_info
  Const        r88, 1
  AddInt       r16, r16, r88
  Jump         L11
L0:
  // json(result)
  JSON         r5
  // expect result == [
  Const        r89, [{"actor_name": "Downey Robert Jr.", "marvel_movie": "Iron Man 3", "movie_keyword": "marvel-cinematic-universe"}]
  Equal        r90, r5, r89
  Expect       r90
  Return       r0
