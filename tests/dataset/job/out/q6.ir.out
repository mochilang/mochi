func main (regs=170)
  // let cast_info = [
  Const        r0, [{"movie_id": 1, "person_id": 101}, {"movie_id": 2, "person_id": 102}]
  // let keyword = [
  Const        r1, [{"id": 100, "keyword": "marvel-cinematic-universe"}, {"id": 200, "keyword": "other"}]
  // let movie_keyword = [
  Const        r2, [{"keyword_id": 100, "movie_id": 1}, {"keyword_id": 200, "movie_id": 2}]
  // let name = [
  Const        r3, [{"id": 101, "name": "Downey Robert Jr."}, {"id": 102, "name": "Chris Evans"}]
  // let title = [
  Const        r4, [{"id": 1, "production_year": 2013, "title": "Iron Man 3"}, {"id": 2, "production_year": 2000, "title": "Old Movie"}]
  // from ci in cast_info
  Const        r5, []
  // k.keyword == "marvel-cinematic-universe" &&
  Const        r6, "keyword"
  // n.name.contains("Downey") &&
  Const        r7, "name"
  Const        r8, "contains"
  // n.name.contains("Robert") &&
  Const        r9, "name"
  Const        r10, "contains"
  // t.production_year > 2010
  Const        r11, "production_year"
  // movie_keyword: k.keyword,
  Const        r12, "movie_keyword"
  Const        r13, "keyword"
  // actor_name: n.name,
  Const        r14, "actor_name"
  Const        r15, "name"
  // marvel_movie: t.title
  Const        r16, "marvel_movie"
  Const        r17, "title"
  // from ci in cast_info
  IterPrep     r18, r0
  Len          r19, r18
  Const        r21, 0
  Move         r20, r21
L11:
  LessInt      r22, r20, r19
  JumpIfFalse  r22, L0
  Index        r23, r18, r20
  Move         r24, r23
  // join mk in movie_keyword on ci.movie_id == mk.movie_id
  IterPrep     r25, r2
  Len          r26, r25
  Const        r27, "movie_id"
  Const        r28, "movie_id"
  // k.keyword == "marvel-cinematic-universe" &&
  Const        r29, "keyword"
  // n.name.contains("Downey") &&
  Const        r30, "name"
  Const        r31, "contains"
  // n.name.contains("Robert") &&
  Const        r32, "name"
  Const        r33, "contains"
  // t.production_year > 2010
  Const        r34, "production_year"
  // movie_keyword: k.keyword,
  Const        r35, "movie_keyword"
  Const        r36, "keyword"
  // actor_name: n.name,
  Const        r37, "actor_name"
  Const        r38, "name"
  // marvel_movie: t.title
  Const        r39, "marvel_movie"
  Const        r40, "title"
  // join mk in movie_keyword on ci.movie_id == mk.movie_id
  Const        r42, 0
  Move         r41, r42
L10:
  LessInt      r43, r41, r26
  JumpIfFalse  r43, L1
  Index        r44, r25, r41
  Move         r45, r44
  Const        r46, "movie_id"
  Index        r47, r24, r46
  Const        r48, "movie_id"
  Index        r49, r45, r48
  Equal        r50, r47, r49
  JumpIfFalse  r50, L2
  // join k in keyword on mk.keyword_id == k.id
  IterPrep     r51, r1
  Len          r52, r51
  Const        r53, "keyword_id"
  Const        r54, "id"
  // k.keyword == "marvel-cinematic-universe" &&
  Const        r55, "keyword"
  // n.name.contains("Downey") &&
  Const        r56, "name"
  Const        r57, "contains"
  // n.name.contains("Robert") &&
  Const        r58, "name"
  Const        r59, "contains"
  // t.production_year > 2010
  Const        r60, "production_year"
  // movie_keyword: k.keyword,
  Const        r61, "movie_keyword"
  Const        r62, "keyword"
  // actor_name: n.name,
  Const        r63, "actor_name"
  Const        r64, "name"
  // marvel_movie: t.title
  Const        r65, "marvel_movie"
  Const        r66, "title"
  // join k in keyword on mk.keyword_id == k.id
  Const        r68, 0
  Move         r67, r68
L9:
  LessInt      r69, r67, r52
  JumpIfFalse  r69, L2
  Index        r70, r51, r67
  Move         r71, r70
  Const        r72, "keyword_id"
  Index        r73, r45, r72
  Const        r74, "id"
  Index        r75, r71, r74
  Equal        r76, r73, r75
  JumpIfFalse  r76, L3
  // join n in name on ci.person_id == n.id
  IterPrep     r77, r3
  Len          r78, r77
  Const        r79, "person_id"
  Const        r80, "id"
  // k.keyword == "marvel-cinematic-universe" &&
  Const        r81, "keyword"
  // n.name.contains("Downey") &&
  Const        r82, "name"
  Const        r83, "contains"
  // n.name.contains("Robert") &&
  Const        r84, "name"
  Const        r85, "contains"
  // t.production_year > 2010
  Const        r86, "production_year"
  // movie_keyword: k.keyword,
  Const        r87, "movie_keyword"
  Const        r88, "keyword"
  // actor_name: n.name,
  Const        r89, "actor_name"
  Const        r90, "name"
  // marvel_movie: t.title
  Const        r91, "marvel_movie"
  Const        r92, "title"
  // join n in name on ci.person_id == n.id
  Const        r94, 0
  Move         r93, r94
L8:
  LessInt      r95, r93, r78
  JumpIfFalse  r95, L3
  Index        r96, r77, r93
  Move         r97, r96
  Const        r98, "person_id"
  Index        r99, r24, r98
  Const        r100, "id"
  Index        r101, r97, r100
  Equal        r102, r99, r101
  JumpIfFalse  r102, L4
  // join t in title on ci.movie_id == t.id
  IterPrep     r103, r4
  Len          r104, r103
  Const        r105, "movie_id"
  Const        r106, "id"
  // k.keyword == "marvel-cinematic-universe" &&
  Const        r107, "keyword"
  // n.name.contains("Downey") &&
  Const        r108, "name"
  Const        r109, "contains"
  // n.name.contains("Robert") &&
  Const        r110, "name"
  Const        r111, "contains"
  // t.production_year > 2010
  Const        r112, "production_year"
  // movie_keyword: k.keyword,
  Const        r113, "movie_keyword"
  Const        r114, "keyword"
  // actor_name: n.name,
  Const        r115, "actor_name"
  Const        r116, "name"
  // marvel_movie: t.title
  Const        r117, "marvel_movie"
  Const        r118, "title"
  // join t in title on ci.movie_id == t.id
  Const        r120, 0
  Move         r119, r120
L7:
  LessInt      r121, r119, r104
  JumpIfFalse  r121, L4
  Index        r122, r103, r119
  Move         r123, r122
  Const        r124, "movie_id"
  Index        r125, r24, r124
  Const        r126, "id"
  Index        r127, r123, r126
  Equal        r128, r125, r127
  JumpIfFalse  r128, L5
  // k.keyword == "marvel-cinematic-universe" &&
  Const        r129, "keyword"
  Index        r130, r71, r129
  // t.production_year > 2010
  Const        r131, "production_year"
  Index        r132, r123, r131
  Const        r133, 2010
  Less         r134, r133, r132
  // k.keyword == "marvel-cinematic-universe" &&
  Const        r135, "marvel-cinematic-universe"
  Equal        r136, r130, r135
  Move         r137, r136
  JumpIfFalse  r137, L6
  Const        r138, "name"
  Index        r139, r97, r138
  // n.name.contains("Downey") &&
  Const        r140, "Downey"
  In           r141, r140, r139
  // k.keyword == "marvel-cinematic-universe" &&
  Move         r137, r141
  // n.name.contains("Downey") &&
  JumpIfFalse  r137, L6
  Const        r142, "name"
  Index        r143, r97, r142
  // n.name.contains("Robert") &&
  Const        r144, "Robert"
  In           r145, r144, r143
  // n.name.contains("Downey") &&
  Move         r137, r145
  // n.name.contains("Robert") &&
  JumpIfFalse  r137, L6
  Move         r137, r134
L6:
  // k.keyword == "marvel-cinematic-universe" &&
  JumpIfFalse  r137, L5
  // movie_keyword: k.keyword,
  Const        r146, "movie_keyword"
  Const        r147, "keyword"
  Index        r148, r71, r147
  // actor_name: n.name,
  Const        r149, "actor_name"
  Const        r150, "name"
  Index        r151, r97, r150
  // marvel_movie: t.title
  Const        r152, "marvel_movie"
  Const        r153, "title"
  Index        r154, r123, r153
  // movie_keyword: k.keyword,
  Move         r155, r146
  Move         r156, r148
  // actor_name: n.name,
  Move         r157, r149
  Move         r158, r151
  // marvel_movie: t.title
  Move         r159, r152
  Move         r160, r154
  // select {
  MakeMap      r161, 3, r155
  // from ci in cast_info
  Append       r162, r5, r161
  Move         r5, r162
L5:
  // join t in title on ci.movie_id == t.id
  Const        r163, 1
  Add          r119, r119, r163
  Jump         L7
L4:
  // join n in name on ci.person_id == n.id
  Const        r164, 1
  Add          r93, r93, r164
  Jump         L8
L3:
  // join k in keyword on mk.keyword_id == k.id
  Const        r165, 1
  Add          r67, r67, r165
  Jump         L9
L2:
  // join mk in movie_keyword on ci.movie_id == mk.movie_id
  Const        r166, 1
  Add          r41, r41, r166
  Jump         L10
L1:
  // from ci in cast_info
  Const        r167, 1
  AddInt       r20, r20, r167
  Jump         L11
L0:
  // json(result)
  JSON         r5
  // expect result == [
  Const        r168, [{"actor_name": "Downey Robert Jr.", "marvel_movie": "Iron Man 3", "movie_keyword": "marvel-cinematic-universe"}]
  Equal        r169, r5, r168
  Expect       r169
  Return       r0
