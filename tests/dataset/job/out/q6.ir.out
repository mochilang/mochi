func main (regs=23)
  // let cast_info = [
  Const        r0, [{"movie_id": 1, "person_id": 101}, {"movie_id": 2, "person_id": 102}]
L7:
  // let keyword = [
  Const        r1, [{"id": 100, "keyword": "marvel-cinematic-universe"}, {"id": 200, "keyword": "other"}]
  // let movie_keyword = [
  Const        r2, [{"keyword_id": 100, "movie_id": 1}, {"keyword_id": 200, "movie_id": 2}]
  // let name = [
  Const        r3, [{"id": 101, "name": "Downey Robert Jr."}, {"id": 102, "name": "Chris Evans"}]
  // let title = [
  Const        r4, [{"id": 1, "production_year": 2013, "title": "Iron Man 3"}, {"id": 2, "production_year": 2000, "title": "Old Movie"}]
  // from ci in cast_info
  Const        r5, []
  // k.keyword == "marvel-cinematic-universe" &&
  Const        r6, "keyword"
  // n.name.contains("Downey") &&
  Const        r7, "name"
  // t.production_year > 2010
  Const        r8, "production_year"
  // movie_keyword: k.keyword,
  Const        r9, "movie_keyword"
  // actor_name: n.name,
  Const        r10, "actor_name"
  // marvel_movie: t.title
  Const        r11, "marvel_movie"
  Const        r12, "title"
  // from ci in cast_info
  IterPrep     r13, r0
  Len          r14, r13
L11:
  Const        r15, 0
  Move         r16, r15
  LessInt      r17, r16, r14
L2:
  JumpIfFalse  r17, L0
L9:
  Index        r17, r13, r16
  // join mk in movie_keyword on ci.movie_id == mk.movie_id
  IterPrep     r13, r2
L10:
  Len          r2, r13
L8:
  Const        r14, "movie_id"
  Move         r18, r15
  LessInt      r19, r18, r2
  JumpIfFalse  r19, L1
  Index        r19, r13, r18
  Index        r18, r17, r14
  Index        r13, r19, r14
  Equal        r2, r18, r13
  JumpIfFalse  r2, L2
  // join k in keyword on mk.keyword_id == k.id
  IterPrep     r2, r1
  Len          r1, r2
  Const        r13, "keyword_id"
  Const        r18, "id"
  Move         r20, r15
  LessInt      r21, r20, r1
  JumpIfFalse  r21, L2
  Index        r1, r2, r20
  Index        r2, r19, r13
  Index        r13, r1, r18
  Equal        r19, r2, r13
  JumpIfFalse  r19, L3
  // join n in name on ci.person_id == n.id
  IterPrep     r19, r3
  Len          r3, r19
  Const        r13, "person_id"
  Move         r2, r15
  LessInt      r22, r2, r3
  JumpIfFalse  r22, L3
  Index        r22, r19, r2
  Index        r19, r17, r13
  Index        r13, r22, r18
  Equal        r3, r19, r13
  JumpIfFalse  r3, L4
  // join t in title on ci.movie_id == t.id
  IterPrep     r3, r4
  Len          r4, r3
  Move         r13, r15
  LessInt      r19, r13, r4
  JumpIfFalse  r19, L4
  Index        r19, r3, r13
  Index        r3, r17, r14
  Index        r14, r19, r18
  Equal        r18, r3, r14
  JumpIfFalse  r18, L5
  // k.keyword == "marvel-cinematic-universe" &&
  Index        r18, r1, r6
  // t.production_year > 2010
  Index        r14, r19, r8
  Const        r8, 2010
  Less         r3, r8, r14
  // k.keyword == "marvel-cinematic-universe" &&
  Const        r8, "marvel-cinematic-universe"
  Equal        r14, r18, r8
  JumpIfFalse  r14, L6
  Index        r14, r22, r7
  // n.name.contains("Downey") &&
  Const        r8, "Downey"
  In           r18, r8, r14
L6:
  JumpIfFalse  r18, L7
  Index        r18, r22, r7
  // n.name.contains("Robert") &&
  Const        r8, "Robert"
  In           r14, r8, r18
  JumpIfFalse  r14, L8
  Move         r14, r3
  // k.keyword == "marvel-cinematic-universe" &&
  JumpIfFalse  r14, L5
  // movie_keyword: k.keyword,
  Move         r14, r9
  Index        r9, r1, r6
  // actor_name: n.name,
  Move         r1, r10
  Index        r10, r22, r7
  // marvel_movie: t.title
  Move         r22, r11
  Index        r11, r19, r12
  // movie_keyword: k.keyword,
  Move         r12, r14
  Move         r14, r9
  // actor_name: n.name,
  Move         r9, r1
  Move         r1, r10
  // marvel_movie: t.title
  Move         r10, r22
  Move         r22, r11
  // select {
  MakeMap      r11, 3, r12
  // from ci in cast_info
  Append       r5, r5, r11
L5:
  // join t in title on ci.movie_id == t.id
  Const        r11, 1
  Add          r13, r13, r11
  Jump         L9
L4:
  // join n in name on ci.person_id == n.id
  Add          r2, r2, r11
  Jump         L9
L3:
  // join k in keyword on mk.keyword_id == k.id
  Add          r20, r20, r11
  Jump         L10
L1:
  // from ci in cast_info
  AddInt       r16, r16, r11
  Jump         L11
L0:
  // json(result)
  JSON         r5
  // expect result == [
  Const        r19, [{"actor_name": "Downey Robert Jr.", "marvel_movie": "Iron Man 3", "movie_keyword": "marvel-cinematic-universe"}]
  Equal        r11, r5, r19
  Expect       r11
  Return       r0
