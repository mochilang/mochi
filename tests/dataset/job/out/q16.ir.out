func main (regs=30)
  // let aka_name = [
  Const        r0, [{"name": "Alpha", "person_id": 1}, {"name": "Beta", "person_id": 2}]
  // let cast_info = [
  Const        r1, [{"movie_id": 101, "person_id": 1}, {"movie_id": 102, "person_id": 2}]
L9:
  // let company_name = [
  Const        r2, [{"country_code": "[us]", "id": 1}, {"country_code": "[de]", "id": 2}]
L16:
  // let keyword = [
  Const        r3, [{"id": 1, "keyword": "character-name-in-title"}, {"id": 2, "keyword": "other"}]
L8:
  // let movie_companies = [
  Const        r4, [{"company_id": 1, "movie_id": 101}, {"company_id": 2, "movie_id": 102}]
L10:
  // let movie_keyword = [
  Const        r5, [{"keyword_id": 1, "movie_id": 101}, {"keyword_id": 2, "movie_id": 102}]
  // let name = [
  Const        r6, [{"id": 1}, {"id": 2}]
  // let title = [
  Const        r7, [{"episode_nr": 60, "id": 101, "title": "Hero Bob"}, {"episode_nr": 40, "id": 102, "title": "Other Show"}]
  // from an in aka_name
  Const        r8, []
L11:
  // where cn.country_code == "[us]" &&
  Const        r9, "country_code"
L13:
  // k.keyword == "character-name-in-title" &&
  Const        r10, "keyword"
L15:
  // t.episode_nr >= 50 &&
  Const        r11, "episode_nr"
L14:
  // t.episode_nr < 100
  Const        r12, "episode_nr"
L0:
  // select { pseudonym: an.name, series: t.title }
  Const        r13, "pseudonym"
L3:
  Const        r14, "name"
L2:
  Const        r15, "series"
  Const        r16, "title"
L1:
  // from an in aka_name
  IterPrep     r17, r0
L7:
  Len          r18, r17
L4:
  Const        r19, 0
L12:
  LessInt      r20, r19, r18
  JumpIfFalse  r20, L0
L6:
  Index        r21, r17, r19
  // join n in name on n.id == an.person_id
  IterPrep     r9, r6
L17:
  Len          r10, r9
L5:
  Const        r11, "id"
  Const        r12, "person_id"
  // where cn.country_code == "[us]" &&
  Const        r13, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r14, "keyword"
  // t.episode_nr >= 50 &&
  Const        r15, "episode_nr"
  // t.episode_nr < 100
  Const        r16, "episode_nr"
  // select { pseudonym: an.name, series: t.title }
  Const        r18, "pseudonym"
  Const        r20, "name"
  Const        r17, "series"
  Const        r6, "title"
  // join n in name on n.id == an.person_id
  Const        r11, 0
  LessInt      r12, r11, r10
  JumpIfFalse  r12, L1
  Index        r13, r9, r11
  Const        r14, "id"
  Index        r15, r13, r14
  Const        r16, "person_id"
  Index        r18, r21, r16
  Equal        r20, r15, r18
  JumpIfFalse  r20, L2
  // join ci in cast_info on ci.person_id == n.id
  IterPrep     r17, r1
  Len          r6, r17
  Const        r10, "person_id"
  Const        r12, "id"
  // where cn.country_code == "[us]" &&
  Const        r9, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r14, "keyword"
  // t.episode_nr >= 50 &&
  Const        r16, "episode_nr"
  // t.episode_nr < 100
  Const        r15, "episode_nr"
  // select { pseudonym: an.name, series: t.title }
  Const        r18, "pseudonym"
  Const        r20, "name"
  Const        r1, "series"
  Const        r10, "title"
  // join ci in cast_info on ci.person_id == n.id
  Const        r12, 0
  LessInt      r9, r12, r6
  JumpIfFalse  r9, L2
  Index        r14, r17, r12
  Const        r16, "person_id"
  Index        r15, r14, r16
  Const        r18, "id"
  Index        r20, r13, r18
  Equal        r1, r15, r20
  JumpIfFalse  r1, L3
  // join t in title on t.id == ci.movie_id
  IterPrep     r10, r7
  Len          r6, r10
  Const        r9, "id"
  Const        r17, "movie_id"
  // where cn.country_code == "[us]" &&
  Const        r16, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r13, "keyword"
  // t.episode_nr >= 50 &&
  Const        r18, "episode_nr"
  // t.episode_nr < 100
  Const        r15, "episode_nr"
  // select { pseudonym: an.name, series: t.title }
  Const        r20, "pseudonym"
  Const        r1, "name"
  Const        r7, "series"
  Const        r9, "title"
  // join t in title on t.id == ci.movie_id
  Const        r17, 0
  LessInt      r16, r17, r6
  JumpIfFalse  r16, L3
  Index        r13, r10, r17
  Const        r18, "id"
  Index        r15, r13, r18
  Const        r20, "movie_id"
  Index        r1, r14, r20
  Equal        r7, r15, r1
  JumpIfFalse  r7, L4
  // join mk in movie_keyword on mk.movie_id == t.id
  IterPrep     r9, r5
  Len          r6, r9
  Const        r16, "movie_id"
  Const        r10, "id"
  // where cn.country_code == "[us]" &&
  Const        r18, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r14, "keyword"
  // t.episode_nr >= 50 &&
  Const        r20, "episode_nr"
  // t.episode_nr < 100
  Const        r15, "episode_nr"
  // select { pseudonym: an.name, series: t.title }
  Const        r1, "pseudonym"
  Const        r7, "name"
  Const        r5, "series"
  Const        r16, "title"
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r10, 0
  LessInt      r18, r10, r6
  JumpIfFalse  r18, L4
  Index        r14, r9, r10
  Const        r20, "movie_id"
  Index        r15, r14, r20
  Const        r1, "id"
  Index        r7, r13, r1
  Equal        r5, r15, r7
  JumpIfFalse  r5, L5
  // join k in keyword on k.id == mk.keyword_id
  IterPrep     r16, r3
  Len          r6, r16
  Const        r18, "id"
  Const        r9, "keyword_id"
  // where cn.country_code == "[us]" &&
  Const        r20, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r1, "keyword"
  // t.episode_nr >= 50 &&
  Const        r15, "episode_nr"
  // t.episode_nr < 100
  Const        r7, "episode_nr"
  // select { pseudonym: an.name, series: t.title }
  Const        r5, "pseudonym"
  Const        r3, "name"
  Const        r18, "series"
  Const        r9, "title"
  // join k in keyword on k.id == mk.keyword_id
  Const        r20, 0
  LessInt      r1, r20, r6
  JumpIfFalse  r1, L5
  Index        r15, r16, r20
  Const        r7, "id"
  Index        r5, r15, r7
  Const        r3, "keyword_id"
  Index        r18, r14, r3
  Equal        r9, r5, r18
  JumpIfFalse  r9, L6
  // join mc in movie_companies on mc.movie_id == t.id
  IterPrep     r6, r4
  Len          r1, r6
  Const        r16, "movie_id"
  Const        r7, "id"
  // where cn.country_code == "[us]" &&
  Const        r14, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r3, "keyword"
  // t.episode_nr >= 50 &&
  Const        r5, "episode_nr"
  // t.episode_nr < 100
  Const        r18, "episode_nr"
  // select { pseudonym: an.name, series: t.title }
  Const        r9, "pseudonym"
  Const        r4, "name"
  Const        r16, "series"
  Const        r7, "title"
  // join mc in movie_companies on mc.movie_id == t.id
  Const        r14, 0
  LessInt      r3, r14, r1
  JumpIfFalse  r3, L6
  Index        r5, r6, r14
  Const        r18, "movie_id"
  Index        r9, r5, r18
  Const        r4, "id"
  Index        r16, r13, r4
  Equal        r7, r9, r16
  JumpIfFalse  r7, L7
  // join cn in company_name on cn.id == mc.company_id
  IterPrep     r1, r2
  Len          r3, r1
  Const        r6, "id"
  Const        r18, "company_id"
  // where cn.country_code == "[us]" &&
  Const        r4, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r9, "keyword"
  // t.episode_nr >= 50 &&
  Const        r16, "episode_nr"
  // t.episode_nr < 100
  Const        r7, "episode_nr"
  // select { pseudonym: an.name, series: t.title }
  Const        r2, "pseudonym"
  Const        r6, "name"
  Const        r18, "series"
  Const        r4, "title"
  // join cn in company_name on cn.id == mc.company_id
  Const        r9, 0
  LessInt      r16, r9, r3
  JumpIfFalse  r16, L7
  Index        r7, r1, r9
  Const        r2, "id"
  Index        r6, r7, r2
  Const        r18, "company_id"
  Index        r4, r5, r18
  Equal        r3, r6, r4
  JumpIfFalse  r3, L8
  // where cn.country_code == "[us]" &&
  Const        r16, "country_code"
  Index        r1, r7, r16
  // t.episode_nr >= 50 &&
  Const        r2, "episode_nr"
  Index        r5, r13, r2
  Const        r18, 50
  LessEq       r6, r18, r5
  // t.episode_nr < 100
  Const        r4, "episode_nr"
  Index        r3, r13, r4
  Const        r7, 100
  Less         r16, r3, r7
  // where cn.country_code == "[us]" &&
  Const        r2, "[us]"
  Equal        r5, r1, r2
  // k.keyword == "character-name-in-title" &&
  Const        r18, "keyword"
  Index        r4, r15, r18
  Const        r3, "character-name-in-title"
  Equal        r7, r4, r3
  // where cn.country_code == "[us]" &&
  Move         r1, r5
  JumpIfFalse  r1, L9
  // k.keyword == "character-name-in-title" &&
  Move         r2, r7
  JumpIfFalse  r2, L7
  // t.episode_nr >= 50 &&
  Move         r15, r6
  JumpIfFalse  r15, L10
  Move         r15, r16
  // where cn.country_code == "[us]" &&
  JumpIfFalse  r15, L8
  // select { pseudonym: an.name, series: t.title }
  Const        r18, "pseudonym"
  Const        r4, "name"
  Index        r3, r21, r4
  Const        r5, "series"
  Const        r1, "title"
  Index        r7, r13, r1
  Move         r22, r18
  Move         r23, r3
  Move         r24, r5
  Move         r25, r7
  MakeMap      r2, 2, r22
  // from an in aka_name
  Append       r8, r8, r2
  // join cn in company_name on cn.id == mc.company_id
  Const        r6, 1
  Add          r9, r9, r6
  Jump         L11
  // join mc in movie_companies on mc.movie_id == t.id
  Const        r16, 1
  Add          r14, r14, r16
  Jump         L3
  // join k in keyword on k.id == mk.keyword_id
  Const        r15, 1
  Add          r20, r20, r15
  Jump         L12
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r21, 1
  Add          r10, r10, r21
  Jump         L13
  // join t in title on t.id == ci.movie_id
  Const        r4, 1
  Add          r17, r17, r4
  Jump         L1
  // join ci in cast_info on ci.person_id == n.id
  Const        r13, 1
  Add          r12, r12, r13
  Jump         L14
  // join n in name on n.id == an.person_id
  Const        r1, 1
  Add          r11, r11, r1
  Jump         L15
  // from an in aka_name
  Const        r18, 1
  AddInt       r19, r19, r18
  Jump         L16
  // cool_actor_pseudonym: min(from r in rows select r.pseudonym),
  Const        r5, "cool_actor_pseudonym"
  Const        r7, []
  Const        r22, "pseudonym"
  IterPrep     r23, r8
  Len          r24, r23
  Const        r25, 0
  LessInt      r2, r25, r24
  JumpIfFalse  r2, L17
  Index        r9, r23, r25
  Const        r6, "pseudonym"
  Index        r14, r9, r6
  Append       r7, r7, r14
  Const        r16, 1
  AddInt       r25, r25, r16
  Jump         L12
  Min          r15, r7
  // series_named_after_char: min(from r in rows select r.series)
  Const        r10, "series_named_after_char"
  Const        r21, []
  Const        r17, "series"
  IterPrep     r4, r8
  Len          r12, r4
  Const        r13, 0
L19:
  LessInt      r11, r13, r12
  JumpIfFalse  r11, L18
  Index        r9, r4, r13
  Const        r1, "series"
  Index        r19, r9, r1
  Append       r21, r21, r19
  Const        r18, 1
  AddInt       r13, r13, r18
  Jump         L19
L18:
  Min          r3, r21
  // cool_actor_pseudonym: min(from r in rows select r.pseudonym),
  Move         r26, r5
  Move         r27, r15
  // series_named_after_char: min(from r in rows select r.series)
  Move         r28, r10
  Move         r29, r3
  // {
  MakeMap      r22, 2, r26
  // let result = [
  MakeList     r24, 1, r22
  // json(result)
  JSON         r24
  // expect result == [
  Const        r2, [{"cool_actor_pseudonym": "Alpha", "series_named_after_char": "Hero Bob"}]
  Equal        r23, r24, r2
  Expect       r23
  Return       r0
