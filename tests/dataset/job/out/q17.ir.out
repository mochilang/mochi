func main (regs=119)
  // let cast_info = [
  Const        r0, [{"movie_id": 1, "person_id": 1}, {"movie_id": 2, "person_id": 2}]
  // let company_name = [
  Const        r1, [{"country_code": "[us]", "id": 1}, {"country_code": "[ca]", "id": 2}]
  // let keyword = [
  Const        r2, [{"id": 10, "keyword": "character-name-in-title"}, {"id": 20, "keyword": "other"}]
  // let movie_companies = [
  Const        r3, [{"company_id": 1, "movie_id": 1}, {"company_id": 2, "movie_id": 2}]
  // let movie_keyword = [
  Const        r4, [{"keyword_id": 10, "movie_id": 1}, {"keyword_id": 20, "movie_id": 2}]
  // let name = [
  Const        r5, [{"id": 1, "name": "Bob Smith"}, {"id": 2, "name": "Alice Jones"}]
  // let title = [
  Const        r6, [{"id": 1, "title": "Bob's Journey"}, {"id": 2, "title": "Foreign Film"}]
  // from n in name
  Const        r7, []
  // where cn.country_code == "[us]" &&
  Const        r8, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r9, "keyword"
  // n.name.starts_with("B") &&
  Const        r10, "name"
  Const        r11, "starts_with"
  // ci.movie_id == mk.movie_id &&
  Const        r12, "movie_id"
  Const        r12, "movie_id"
  // ci.movie_id == mc.movie_id &&
  Const        r12, "movie_id"
  Const        r12, "movie_id"
  // mc.movie_id == mk.movie_id
  Const        r12, "movie_id"
  Const        r12, "movie_id"
  // select n.name
  Const        r10, "name"
  // from n in name
  IterPrep     r13, r5
  Len          r14, r13
  Const        r16, 0
  Move         r15, r16
L17:
  LessInt      r17, r15, r14
  JumpIfFalse  r17, L0
  Index        r18, r13, r15
  Move         r19, r18
  // join ci in cast_info on ci.person_id == n.id
  IterPrep     r20, r0
  Len          r21, r20
  Const        r22, "person_id"
  Const        r23, "id"
  // where cn.country_code == "[us]" &&
  Const        r8, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r9, "keyword"
  // n.name.starts_with("B") &&
  Const        r10, "name"
  Const        r11, "starts_with"
  // ci.movie_id == mk.movie_id &&
  Const        r12, "movie_id"
  Const        r12, "movie_id"
  // ci.movie_id == mc.movie_id &&
  Const        r12, "movie_id"
  Const        r12, "movie_id"
  // mc.movie_id == mk.movie_id
  Const        r12, "movie_id"
  Const        r12, "movie_id"
  // select n.name
  Const        r10, "name"
  // join ci in cast_info on ci.person_id == n.id
  Const        r16, 0
  Move         r24, r16
L16:
  LessInt      r25, r24, r21
  JumpIfFalse  r25, L1
  Index        r26, r20, r24
  Move         r27, r26
  Const        r22, "person_id"
  Index        r28, r27, r22
  Const        r23, "id"
  Index        r29, r19, r23
  Equal        r30, r28, r29
  JumpIfFalse  r30, L2
  // join t in title on t.id == ci.movie_id
  IterPrep     r31, r6
  Len          r32, r31
  Const        r23, "id"
  Const        r12, "movie_id"
  // where cn.country_code == "[us]" &&
  Const        r8, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r9, "keyword"
  // n.name.starts_with("B") &&
  Const        r10, "name"
  Const        r11, "starts_with"
  // ci.movie_id == mk.movie_id &&
  Const        r12, "movie_id"
  Const        r12, "movie_id"
  // ci.movie_id == mc.movie_id &&
  Const        r12, "movie_id"
  Const        r12, "movie_id"
  // mc.movie_id == mk.movie_id
  Const        r12, "movie_id"
  Const        r12, "movie_id"
  // select n.name
  Const        r10, "name"
  // join t in title on t.id == ci.movie_id
  Const        r16, 0
  Move         r33, r16
L15:
  LessInt      r34, r33, r32
  JumpIfFalse  r34, L2
  Index        r35, r31, r33
  Move         r36, r35
  Const        r23, "id"
  Index        r37, r36, r23
  Const        r12, "movie_id"
  Index        r38, r27, r12
  Equal        r39, r37, r38
  JumpIfFalse  r39, L3
  // join mk in movie_keyword on mk.movie_id == t.id
  IterPrep     r40, r4
  Len          r41, r40
  Const        r12, "movie_id"
  Const        r23, "id"
  // where cn.country_code == "[us]" &&
  Const        r8, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r9, "keyword"
  // n.name.starts_with("B") &&
  Const        r10, "name"
  Const        r11, "starts_with"
  // ci.movie_id == mk.movie_id &&
  Const        r12, "movie_id"
  Const        r12, "movie_id"
  // ci.movie_id == mc.movie_id &&
  Const        r12, "movie_id"
  Const        r12, "movie_id"
  // mc.movie_id == mk.movie_id
  Const        r12, "movie_id"
  Const        r12, "movie_id"
  // select n.name
  Const        r10, "name"
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r16, 0
  Move         r42, r16
L14:
  LessInt      r43, r42, r41
  JumpIfFalse  r43, L3
  Index        r44, r40, r42
  Move         r45, r44
  Const        r12, "movie_id"
  Index        r46, r45, r12
  Const        r23, "id"
  Index        r47, r36, r23
  Equal        r48, r46, r47
  JumpIfFalse  r48, L4
  // join k in keyword on k.id == mk.keyword_id
  IterPrep     r49, r2
  Len          r50, r49
  Const        r23, "id"
  Const        r51, "keyword_id"
  // where cn.country_code == "[us]" &&
  Const        r8, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r9, "keyword"
  // n.name.starts_with("B") &&
  Const        r10, "name"
  Const        r11, "starts_with"
  // ci.movie_id == mk.movie_id &&
  Const        r12, "movie_id"
  Const        r12, "movie_id"
  // ci.movie_id == mc.movie_id &&
  Const        r12, "movie_id"
  Const        r12, "movie_id"
  // mc.movie_id == mk.movie_id
  Const        r12, "movie_id"
  Const        r12, "movie_id"
  // select n.name
  Const        r10, "name"
  // join k in keyword on k.id == mk.keyword_id
  Const        r16, 0
  Move         r52, r16
L13:
  LessInt      r53, r52, r50
  JumpIfFalse  r53, L4
  Index        r54, r49, r52
  Move         r55, r54
  Const        r23, "id"
  Index        r56, r55, r23
  Const        r51, "keyword_id"
  Index        r57, r45, r51
  Equal        r58, r56, r57
  JumpIfFalse  r58, L5
  // join mc in movie_companies on mc.movie_id == t.id
  IterPrep     r59, r3
  Len          r60, r59
  Const        r12, "movie_id"
  Const        r23, "id"
  // where cn.country_code == "[us]" &&
  Const        r8, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r9, "keyword"
  // n.name.starts_with("B") &&
  Const        r10, "name"
  Const        r11, "starts_with"
  // ci.movie_id == mk.movie_id &&
  Const        r12, "movie_id"
  Const        r12, "movie_id"
  // ci.movie_id == mc.movie_id &&
  Const        r12, "movie_id"
  Const        r12, "movie_id"
  // mc.movie_id == mk.movie_id
  Const        r12, "movie_id"
  Const        r12, "movie_id"
  // select n.name
  Const        r10, "name"
  // join mc in movie_companies on mc.movie_id == t.id
  Const        r16, 0
  Move         r61, r16
L12:
  LessInt      r62, r61, r60
  JumpIfFalse  r62, L5
  Index        r63, r59, r61
  Move         r64, r63
  Const        r12, "movie_id"
  Index        r65, r64, r12
  Const        r23, "id"
  Index        r66, r36, r23
  Equal        r67, r65, r66
  JumpIfFalse  r67, L6
  // join cn in company_name on cn.id == mc.company_id
  IterPrep     r68, r1
  Len          r69, r68
  Const        r23, "id"
  Const        r70, "company_id"
  // where cn.country_code == "[us]" &&
  Const        r8, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r9, "keyword"
  // n.name.starts_with("B") &&
  Const        r10, "name"
  Const        r11, "starts_with"
  // ci.movie_id == mk.movie_id &&
  Const        r12, "movie_id"
  Const        r12, "movie_id"
  // ci.movie_id == mc.movie_id &&
  Const        r12, "movie_id"
  Const        r12, "movie_id"
  // mc.movie_id == mk.movie_id
  Const        r12, "movie_id"
  Const        r12, "movie_id"
  // select n.name
  Const        r10, "name"
  // join cn in company_name on cn.id == mc.company_id
  Const        r16, 0
  Move         r71, r16
L11:
  LessInt      r72, r71, r69
  JumpIfFalse  r72, L6
  Index        r73, r68, r71
  Move         r74, r73
  Const        r23, "id"
  Index        r75, r74, r23
  Const        r70, "company_id"
  Index        r76, r64, r70
  Equal        r77, r75, r76
  JumpIfFalse  r77, L7
  // where cn.country_code == "[us]" &&
  Const        r8, "country_code"
  Index        r78, r74, r8
  Const        r79, "[us]"
  Equal        r80, r78, r79
  // k.keyword == "character-name-in-title" &&
  Const        r9, "keyword"
  Index        r81, r55, r9
  Const        r82, "character-name-in-title"
  Equal        r83, r81, r82
  // ci.movie_id == mk.movie_id &&
  Const        r12, "movie_id"
  Index        r84, r27, r12
  Const        r12, "movie_id"
  Index        r85, r45, r12
  Equal        r86, r84, r85
  // ci.movie_id == mc.movie_id &&
  Const        r12, "movie_id"
  Index        r87, r27, r12
  Const        r12, "movie_id"
  Index        r88, r64, r12
  Equal        r89, r87, r88
  // mc.movie_id == mk.movie_id
  Const        r12, "movie_id"
  Index        r90, r64, r12
  Const        r12, "movie_id"
  Index        r91, r45, r12
  Equal        r92, r90, r91
  // where cn.country_code == "[us]" &&
  Move         r93, r80
  JumpIfFalse  r93, L8
  Move         r93, r83
  // k.keyword == "character-name-in-title" &&
  JumpIfFalse  r93, L8
  Const        r10, "name"
  Index        r94, r19, r10
  // n.name.starts_with("B") &&
  Const        r95, "B"
  Const        r96, 0
  Len          r97, r95
  Len          r98, r94
  LessEq       r99, r97, r98
  JumpIfFalse  r99, L9
  Slice        r101, r94, r96, r97
  Equal        r102, r101, r95
  Move         r100, r102
  Jump         L10
L9:
  Const        r100, false
L10:
  // k.keyword == "character-name-in-title" &&
  Move         r93, r100
  // n.name.starts_with("B") &&
  JumpIfFalse  r93, L8
  Move         r93, r86
  // ci.movie_id == mk.movie_id &&
  JumpIfFalse  r93, L8
  Move         r93, r89
  // ci.movie_id == mc.movie_id &&
  JumpIfFalse  r93, L8
  Move         r93, r92
L8:
  // where cn.country_code == "[us]" &&
  JumpIfFalse  r93, L7
  // select n.name
  Const        r10, "name"
  Index        r103, r19, r10
  // from n in name
  Append       r104, r7, r103
  Move         r7, r104
L7:
  // join cn in company_name on cn.id == mc.company_id
  Const        r105, 1
  Add          r71, r71, r105
  Jump         L11
L6:
  // join mc in movie_companies on mc.movie_id == t.id
  Const        r105, 1
  Add          r61, r61, r105
  Jump         L12
L5:
  // join k in keyword on k.id == mk.keyword_id
  Const        r105, 1
  Add          r52, r52, r105
  Jump         L13
L4:
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r105, 1
  Add          r42, r42, r105
  Jump         L14
L3:
  // join t in title on t.id == ci.movie_id
  Const        r105, 1
  Add          r33, r33, r105
  Jump         L15
L2:
  // join ci in cast_info on ci.person_id == n.id
  Const        r105, 1
  Add          r24, r24, r105
  Jump         L16
L1:
  // from n in name
  Const        r105, 1
  AddInt       r15, r15, r105
  Jump         L17
L0:
  // member_in_charnamed_american_movie: min(matches),
  Const        r107, "member_in_charnamed_american_movie"
  Min          r108, r7
  // a1: min(matches)
  Const        r109, "a1"
  Min          r110, r7
  // member_in_charnamed_american_movie: min(matches),
  Move         r111, r107
  Move         r112, r108
  // a1: min(matches)
  Move         r113, r109
  Move         r114, r110
  // {
  MakeMap      r115, 2, r111
  Move         r106, r115
  // let result = [
  MakeList     r116, 1, r106
  // json(result)
  JSON         r116
  // expect result == [
  Const        r117, [{"a1": "Bob Smith", "member_in_charnamed_american_movie": "Bob Smith"}]
  Equal        r118, r116, r117
  Expect       r118
  Return       r0
