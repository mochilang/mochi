func main (regs=23)
  // let cast_info = [
  Const        r0, [{"movie_id": 1, "person_id": 1}, {"movie_id": 2, "person_id": 2}]
  // let company_name = [
  Const        r1, [{"country_code": "[us]", "id": 1}, {"country_code": "[ca]", "id": 2}]
L3:
  // let keyword = [
  Const        r2, [{"id": 10, "keyword": "character-name-in-title"}, {"id": 20, "keyword": "other"}]
L11:
  // let movie_companies = [
  Const        r3, [{"company_id": 1, "movie_id": 1}, {"company_id": 2, "movie_id": 2}]
L7:
  // let movie_keyword = [
  Const        r4, [{"keyword_id": 10, "movie_id": 1}, {"keyword_id": 20, "movie_id": 2}]
  // let name = [
  Const        r5, [{"id": 1, "name": "Bob Smith"}, {"id": 2, "name": "Alice Jones"}]
L6:
  // let title = [
  Const        r6, [{"id": 1, "title": "Bob's Journey"}, {"id": 2, "title": "Foreign Film"}]
L4:
  // from n in name
  Const        r7, []
L10:
  // where cn.country_code == "[us]" &&
  Const        r8, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r9, "keyword"
  // n.name.starts_with("B") &&
  Const        r10, "name"
L9:
  Const        r11, "starts_with"
L12:
  // ci.movie_id == mk.movie_id &&
  Const        r12, "movie_id"
  Const        r13, "movie_id"
L13:
  // ci.movie_id == mc.movie_id &&
  Const        r14, "movie_id"
L14:
  Const        r15, "movie_id"
  // mc.movie_id == mk.movie_id
  Const        r8, "movie_id"
  Const        r9, "movie_id"
  // select n.name
  Const        r10, "name"
  // from n in name
  IterPrep     r11, r5
L5:
  Len          r12, r11
  Const        r13, 0
  LessInt      r14, r13, r12
  JumpIfFalse  r14, L0
  Index        r15, r11, r13
  // join ci in cast_info on ci.person_id == n.id
  IterPrep     r8, r0
  Len          r9, r8
  Const        r10, "person_id"
  Const        r5, "id"
  // where cn.country_code == "[us]" &&
  Const        r12, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r14, "keyword"
  // n.name.starts_with("B") &&
  Const        r11, "name"
  Const        r10, "starts_with"
  // ci.movie_id == mk.movie_id &&
  Const        r5, "movie_id"
  Const        r12, "movie_id"
  // ci.movie_id == mc.movie_id &&
  Const        r14, "movie_id"
  Const        r11, "movie_id"
  // mc.movie_id == mk.movie_id
  Const        r10, "movie_id"
  Const        r5, "movie_id"
  // select n.name
  Const        r12, "name"
  // join ci in cast_info on ci.person_id == n.id
  Const        r14, 0
  LessInt      r11, r14, r9
  JumpIfFalse  r11, L1
  Index        r10, r8, r14
  Const        r5, "person_id"
  Index        r12, r10, r5
  Const        r9, "id"
  Index        r11, r15, r9
  Equal        r8, r12, r11
  JumpIfFalse  r8, L2
  // join t in title on t.id == ci.movie_id
  IterPrep     r5, r6
  Len          r9, r5
  Const        r12, "id"
  Const        r11, "movie_id"
  // where cn.country_code == "[us]" &&
  Const        r8, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r6, "keyword"
  // n.name.starts_with("B") &&
  Const        r12, "name"
  Const        r11, "starts_with"
  // ci.movie_id == mk.movie_id &&
  Const        r8, "movie_id"
  Const        r6, "movie_id"
  // ci.movie_id == mc.movie_id &&
  Const        r12, "movie_id"
  Const        r11, "movie_id"
  // mc.movie_id == mk.movie_id
  Const        r8, "movie_id"
  Const        r6, "movie_id"
  // select n.name
  Const        r12, "name"
  // join t in title on t.id == ci.movie_id
  Const        r11, 0
  LessInt      r8, r11, r9
  JumpIfFalse  r8, L2
  Index        r6, r5, r11
  Const        r12, "id"
  Index        r9, r6, r12
  Const        r8, "movie_id"
  Index        r5, r10, r8
  Equal        r12, r9, r5
  JumpIfFalse  r12, L3
  // join mk in movie_keyword on mk.movie_id == t.id
  IterPrep     r8, r4
  Len          r9, r8
  Const        r5, "movie_id"
  Const        r12, "id"
  // where cn.country_code == "[us]" &&
  Const        r4, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r5, "keyword"
  // n.name.starts_with("B") &&
  Const        r12, "name"
  Const        r4, "starts_with"
  // ci.movie_id == mk.movie_id &&
  Const        r5, "movie_id"
  Const        r12, "movie_id"
  // ci.movie_id == mc.movie_id &&
  Const        r4, "movie_id"
  Const        r5, "movie_id"
  // mc.movie_id == mk.movie_id
  Const        r12, "movie_id"
  Const        r4, "movie_id"
  // select n.name
  Const        r5, "name"
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r12, 0
  LessInt      r4, r12, r9
  JumpIfFalse  r4, L3
  Index        r5, r8, r12
  Const        r9, "movie_id"
  Index        r4, r5, r9
  Const        r8, "id"
  Index        r9, r6, r8
  Equal        r8, r4, r9
  JumpIfFalse  r8, L4
  // join k in keyword on k.id == mk.keyword_id
  IterPrep     r4, r2
  Len          r9, r4
  Const        r8, "id"
  Const        r2, "keyword_id"
  // where cn.country_code == "[us]" &&
  Const        r8, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r2, "keyword"
  // n.name.starts_with("B") &&
  Const        r8, "name"
  Const        r2, "starts_with"
  // ci.movie_id == mk.movie_id &&
  Const        r8, "movie_id"
  Const        r2, "movie_id"
  // ci.movie_id == mc.movie_id &&
  Const        r8, "movie_id"
  Const        r2, "movie_id"
  // mc.movie_id == mk.movie_id
  Const        r8, "movie_id"
  Const        r2, "movie_id"
  // select n.name
  Const        r8, "name"
  // join k in keyword on k.id == mk.keyword_id
  Const        r2, 0
  LessInt      r8, r2, r9
  JumpIfFalse  r8, L4
  Index        r9, r4, r2
  Const        r8, "id"
  Index        r4, r9, r8
  Const        r8, "keyword_id"
  Index        r16, r5, r8
  Equal        r8, r4, r16
  JumpIfFalse  r8, L5
  // join mc in movie_companies on mc.movie_id == t.id
  IterPrep     r4, r3
  Len          r16, r4
  Const        r8, "movie_id"
  Const        r3, "id"
  // where cn.country_code == "[us]" &&
  Const        r8, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r3, "keyword"
  // n.name.starts_with("B") &&
  Const        r8, "name"
  Const        r3, "starts_with"
  // ci.movie_id == mk.movie_id &&
  Const        r8, "movie_id"
  Const        r3, "movie_id"
  // ci.movie_id == mc.movie_id &&
  Const        r8, "movie_id"
  Const        r3, "movie_id"
  // mc.movie_id == mk.movie_id
  Const        r8, "movie_id"
  Const        r3, "movie_id"
  // select n.name
  Const        r8, "name"
  // join mc in movie_companies on mc.movie_id == t.id
  Const        r3, 0
  LessInt      r8, r3, r16
  JumpIfFalse  r8, L5
  Index        r16, r4, r3
  Const        r8, "movie_id"
  Index        r4, r16, r8
  Const        r8, "id"
  Index        r17, r6, r8
  Equal        r6, r4, r17
  JumpIfFalse  r6, L6
  // join cn in company_name on cn.id == mc.company_id
  IterPrep     r8, r1
  Len          r4, r8
  Const        r17, "id"
  Const        r6, "company_id"
  // where cn.country_code == "[us]" &&
  Const        r1, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r17, "keyword"
  // n.name.starts_with("B") &&
  Const        r6, "name"
  Const        r1, "starts_with"
  // ci.movie_id == mk.movie_id &&
  Const        r17, "movie_id"
  Const        r6, "movie_id"
  // ci.movie_id == mc.movie_id &&
  Const        r1, "movie_id"
  Const        r17, "movie_id"
  // mc.movie_id == mk.movie_id
  Const        r6, "movie_id"
  Const        r1, "movie_id"
  // select n.name
  Const        r17, "name"
  // join cn in company_name on cn.id == mc.company_id
  Const        r6, 0
  LessInt      r1, r6, r4
  JumpIfFalse  r1, L6
  Index        r17, r8, r6
  Const        r4, "id"
  Index        r1, r17, r4
  Const        r8, "company_id"
  Index        r4, r16, r8
  Equal        r8, r1, r4
  JumpIfFalse  r8, L7
  // where cn.country_code == "[us]" &&
  Const        r1, "country_code"
  Index        r4, r17, r1
  Const        r8, "[us]"
  Equal        r17, r4, r8
  // k.keyword == "character-name-in-title" &&
  Const        r1, "keyword"
  Index        r4, r9, r1
  Const        r8, "character-name-in-title"
  Equal        r9, r4, r8
  // ci.movie_id == mk.movie_id &&
  Const        r1, "movie_id"
  Index        r4, r10, r1
  Const        r8, "movie_id"
  Index        r1, r5, r8
  Equal        r8, r4, r1
  // ci.movie_id == mc.movie_id &&
  Const        r4, "movie_id"
  Index        r1, r10, r4
  Const        r10, "movie_id"
  Index        r4, r16, r10
  Equal        r10, r1, r4
  // mc.movie_id == mk.movie_id
  Const        r1, "movie_id"
  Index        r4, r16, r1
  Const        r16, "movie_id"
  Index        r1, r5, r16
  Equal        r5, r4, r1
  // where cn.country_code == "[us]" &&
  Move         r16, r17
  JumpIfFalse  r16, L7
  // k.keyword == "character-name-in-title" &&
  Move         r4, r9
  JumpIfFalse  r4, L8
  Const        r1, "name"
  Index        r17, r15, r1
  // n.name.starts_with("B") &&
  Const        r16, "B"
  Const        r9, 0
  Const        r4, 1
  Len          r1, r17
  LessEq       r18, r4, r1
  JumpIfFalse  r18, L7
  Slice        r1, r17, r9, r4
  Equal        r18, r1, r16
  Jump         L8
  Const        r17, false
  // ci.movie_id == mk.movie_id &&
  Move         r9, r8
  JumpIfFalse  r9, L9
  // ci.movie_id == mc.movie_id &&
  Move         r4, r10
  JumpIfFalse  r4, L10
  Move         r4, r5
  // where cn.country_code == "[us]" &&
  JumpIfFalse  r4, L7
  // select n.name
  Const        r16, "name"
  Index        r1, r15, r16
  // from n in name
  Append       r7, r7, r1
  // join cn in company_name on cn.id == mc.company_id
  Const        r18, 1
  Add          r6, r6, r18
  Jump         L6
  // join mc in movie_companies on mc.movie_id == t.id
  Const        r17, 1
  Add          r3, r3, r17
  Jump         L11
  // join k in keyword on k.id == mk.keyword_id
  Const        r8, 1
  Add          r2, r2, r8
  Jump         L3
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r9, 1
  Add          r12, r12, r9
  Jump         L12
  // join t in title on t.id == ci.movie_id
  Const        r10, 1
  Add          r11, r11, r10
  Jump         L9
L2:
  // join ci in cast_info on ci.person_id == n.id
  Const        r5, 1
  Add          r14, r14, r5
  Jump         L13
L1:
  // from n in name
  Const        r4, 1
  AddInt       r13, r13, r4
  Jump         L14
L0:
  // member_in_charnamed_american_movie: min(matches),
  Const        r16, "member_in_charnamed_american_movie"
  Min          r1, r7
  // a1: min(matches)
  Const        r6, "a1"
  Min          r18, r7
  // member_in_charnamed_american_movie: min(matches),
  Move         r19, r16
  Move         r20, r1
  // a1: min(matches)
  Move         r21, r6
  Move         r22, r18
  // {
  MakeMap      r3, 2, r19
  // let result = [
  MakeList     r17, 1, r3
  // json(result)
  JSON         r17
  // expect result == [
  Const        r2, [{"a1": "Bob Smith", "member_in_charnamed_american_movie": "Bob Smith"}]
  Equal        r8, r17, r2
  Expect       r8
  Return       r0
