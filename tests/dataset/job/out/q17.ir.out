func main (regs=32)
  // let cast_info = [
  Const        r0, [{"movie_id": 1, "person_id": 1}, {"movie_id": 2, "person_id": 2}]
L12:
  // let company_name = [
  Const        r1, [{"country_code": "[us]", "id": 1}, {"country_code": "[ca]", "id": 2}]
  // let keyword = [
  Const        r2, [{"id": 10, "keyword": "character-name-in-title"}, {"id": 20, "keyword": "other"}]
  // let movie_companies = [
  Const        r3, [{"company_id": 1, "movie_id": 1}, {"company_id": 2, "movie_id": 2}]
  // let movie_keyword = [
  Const        r4, [{"keyword_id": 10, "movie_id": 1}, {"keyword_id": 20, "movie_id": 2}]
L15:
  // let name = [
  Const        r5, [{"id": 1, "name": "Bob Smith"}, {"id": 2, "name": "Alice Jones"}]
  // let title = [
  Const        r6, [{"id": 1, "title": "Bob's Journey"}, {"id": 2, "title": "Foreign Film"}]
  // from n in name
  Const        r7, []
  // where cn.country_code == "[us]" &&
  Const        r8, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r9, "keyword"
  // n.name.starts_with("B") &&
  Const        r10, "name"
  Const        r11, "starts_with"
  // ci.movie_id == mk.movie_id &&
  Const        r11, "movie_id"
L11:
  // from n in name
  IterPrep     r12, r5
  Len          r5, r12
L17:
  Const        r13, 0
L16:
  Move         r14, r13
  LessInt      r15, r14, r5
  JumpIfFalse  r15, L0
  Index        r5, r12, r14
  Move         r12, r5
  // join ci in cast_info on ci.person_id == n.id
  IterPrep     r5, r0
L13:
  Len          r16, r5
  Const        r17, "person_id"
L14:
  Const        r18, "id"
  Move         r19, r13
  LessInt      r20, r19, r16
  JumpIfFalse  r20, L1
  Index        r16, r5, r19
  Move         r20, r16
  Index        r5, r20, r17
  Index        r17, r12, r18
  Equal        r21, r5, r17
  JumpIfFalse  r21, L2
  // join t in title on t.id == ci.movie_id
  IterPrep     r5, r6
  Len          r17, r5
  Move         r21, r13
  LessInt      r6, r21, r17
  JumpIfFalse  r6, L2
  Index        r17, r5, r21
  Move         r6, r17
  Index        r5, r6, r18
  Index        r17, r20, r11
  Equal        r22, r5, r17
  JumpIfFalse  r22, L3
  // join mk in movie_keyword on mk.movie_id == t.id
  IterPrep     r17, r4
  Len          r22, r17
  Move         r4, r13
  LessInt      r23, r4, r22
  JumpIfFalse  r23, L3
  Index        r22, r17, r4
  Move         r23, r22
  Index        r17, r23, r11
  Index        r22, r6, r18
  Equal        r24, r17, r22
  JumpIfFalse  r24, L4
  // join k in keyword on k.id == mk.keyword_id
  IterPrep     r17, r2
  Len          r22, r17
  Const        r2, "keyword_id"
  Move         r25, r13
  LessInt      r26, r25, r22
  JumpIfFalse  r26, L4
  Index        r22, r17, r25
  Move         r26, r22
  Index        r17, r26, r18
  Index        r22, r23, r2
  Equal        r2, r17, r22
  JumpIfFalse  r2, L5
  // join mc in movie_companies on mc.movie_id == t.id
  IterPrep     r17, r3
  Len          r22, r17
  Move         r2, r13
  LessInt      r3, r2, r22
  JumpIfFalse  r3, L5
  Index        r3, r17, r2
  Move         r17, r3
  Index        r3, r17, r11
  Index        r27, r6, r18
  Equal        r6, r3, r27
  JumpIfFalse  r6, L6
  // join cn in company_name on cn.id == mc.company_id
  IterPrep     r3, r1
  Len          r27, r3
  Const        r6, "company_id"
  Move         r1, r13
  LessInt      r13, r1, r27
  JumpIfFalse  r13, L6
  Index        r27, r3, r1
  Move         r13, r27
  Index        r3, r13, r18
  Index        r27, r17, r6
  Equal        r18, r3, r27
  JumpIfFalse  r18, L7
  // where cn.country_code == "[us]" &&
  Index        r6, r13, r8
  Const        r3, "[us]"
  Equal        r27, r6, r3
  // k.keyword == "character-name-in-title" &&
  Index        r18, r26, r9
  Const        r8, "character-name-in-title"
  Equal        r13, r18, r8
  // ci.movie_id == mk.movie_id &&
  Index        r6, r20, r11
  Index        r3, r23, r11
  Equal        r9, r6, r3
  // ci.movie_id == mc.movie_id &&
  Index        r26, r20, r11
  Index        r18, r17, r11
  Equal        r8, r26, r18
  // mc.movie_id == mk.movie_id
  Index        r6, r17, r11
  Index        r3, r23, r11
  Equal        r20, r6, r3
  // where cn.country_code == "[us]" &&
  Move         r26, r27
  JumpIfFalse  r26, L8
  Move         r26, r13
  // k.keyword == "character-name-in-title" &&
  JumpIfFalse  r26, L8
  Index        r18, r12, r10
  // n.name.starts_with("B") &&
  Const        r17, "B"
  Const        r11, 0
  Const        r23, 1
  Len          r6, r18
  LessEq       r3, r23, r6
  JumpIfFalse  r3, L9
  Slice        r27, r18, r11, r23
  Equal        r6, r27, r17
  Move         r3, r6
  Jump         L10
L9:
  Const        r3, false
L10:
  // k.keyword == "character-name-in-title" &&
  Move         r26, r3
  // n.name.starts_with("B") &&
  JumpIfFalse  r26, L8
  Move         r26, r9
  // ci.movie_id == mk.movie_id &&
  JumpIfFalse  r26, L8
  Move         r26, r8
  // ci.movie_id == mc.movie_id &&
  JumpIfFalse  r26, L8
  Move         r26, r20
L8:
  // where cn.country_code == "[us]" &&
  JumpIfFalse  r26, L7
  // select n.name
  Index        r18, r12, r10
  // from n in name
  Append       r11, r7, r18
  Move         r7, r11
L7:
  // join cn in company_name on cn.id == mc.company_id
  Const        r23, 1
  Add          r1, r1, r23
  Jump         L11
L6:
  // join mc in movie_companies on mc.movie_id == t.id
  Add          r2, r2, r23
  Jump         L12
L5:
  // join k in keyword on k.id == mk.keyword_id
  Add          r25, r25, r23
  Jump         L13
L4:
  // join mk in movie_keyword on mk.movie_id == t.id
  Add          r4, r4, r23
  Jump         L14
L3:
  // join t in title on t.id == ci.movie_id
  Add          r21, r21, r23
  Jump         L15
L2:
  // join ci in cast_info on ci.person_id == n.id
  Add          r19, r19, r23
  Jump         L16
L1:
  // from n in name
  AddInt       r14, r14, r23
  Jump         L17
L0:
  // member_in_charnamed_american_movie: min(matches),
  Const        r17, "member_in_charnamed_american_movie"
  Min          r27, r7
  // a1: min(matches)
  Const        r9, "a1"
  Min          r8, r7
  // member_in_charnamed_american_movie: min(matches),
  Move         r28, r17
  Move         r29, r27
  // a1: min(matches)
  Move         r30, r9
  Move         r31, r8
  // {
  MakeMap      r20, 2, r28
  Move         r26, r20
  // let result = [
  MakeList     r6, 1, r26
  // json(result)
  JSON         r6
  // expect result == [
  Const        r3, [{"a1": "Bob Smith", "member_in_charnamed_american_movie": "Bob Smith"}]
  Equal        r10, r6, r3
  Expect       r10
  Return       r0
