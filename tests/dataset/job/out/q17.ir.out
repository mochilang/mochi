func main (regs=233)
  // let cast_info = [
  Const        r0, [{"movie_id": 1, "person_id": 1}, {"movie_id": 2, "person_id": 2}]
  // let company_name = [
  Const        r1, [{"country_code": "[us]", "id": 1}, {"country_code": "[ca]", "id": 2}]
  // let keyword = [
  Const        r2, [{"id": 10, "keyword": "character-name-in-title"}, {"id": 20, "keyword": "other"}]
  // let movie_companies = [
  Const        r3, [{"company_id": 1, "movie_id": 1}, {"company_id": 2, "movie_id": 2}]
  // let movie_keyword = [
  Const        r4, [{"keyword_id": 10, "movie_id": 1}, {"keyword_id": 20, "movie_id": 2}]
  // let name = [
  Const        r5, [{"id": 1, "name": "Bob Smith"}, {"id": 2, "name": "Alice Jones"}]
  // let title = [
  Const        r6, [{"id": 1, "title": "Bob's Journey"}, {"id": 2, "title": "Foreign Film"}]
  // from n in name
  Const        r7, []
  // where cn.country_code == "[us]" &&
  Const        r8, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r9, "keyword"
  // n.name.starts_with("B") &&
  Const        r10, "name"
  Const        r11, "starts_with"
  // ci.movie_id == mk.movie_id &&
  Const        r12, "movie_id"
  Const        r13, "movie_id"
  // ci.movie_id == mc.movie_id &&
  Const        r14, "movie_id"
  Const        r15, "movie_id"
  // mc.movie_id == mk.movie_id
  Const        r16, "movie_id"
  Const        r17, "movie_id"
  // select n.name
  Const        r18, "name"
  // from n in name
  IterPrep     r19, r5
  Len          r20, r19
  Const        r21, 0
L17:
  LessInt      r23, r21, r20
  JumpIfFalse  r23, L0
  Index        r25, r19, r21
  // join ci in cast_info on ci.person_id == n.id
  IterPrep     r26, r0
  Len          r27, r26
  Const        r28, "person_id"
  Const        r29, "id"
  // where cn.country_code == "[us]" &&
  Const        r30, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r31, "keyword"
  // n.name.starts_with("B") &&
  Const        r32, "name"
  Const        r33, "starts_with"
  // ci.movie_id == mk.movie_id &&
  Const        r34, "movie_id"
  Const        r35, "movie_id"
  // ci.movie_id == mc.movie_id &&
  Const        r36, "movie_id"
  Const        r37, "movie_id"
  // mc.movie_id == mk.movie_id
  Const        r38, "movie_id"
  Const        r39, "movie_id"
  // select n.name
  Const        r40, "name"
  // join ci in cast_info on ci.person_id == n.id
  Const        r41, 0
L16:
  LessInt      r43, r41, r27
  JumpIfFalse  r43, L1
  Index        r45, r26, r41
  Const        r46, "person_id"
  Index        r47, r45, r46
  Const        r48, "id"
  Index        r49, r25, r48
  Equal        r50, r47, r49
  JumpIfFalse  r50, L2
  // join t in title on t.id == ci.movie_id
  IterPrep     r51, r6
  Len          r52, r51
  Const        r53, "id"
  Const        r54, "movie_id"
  // where cn.country_code == "[us]" &&
  Const        r55, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r56, "keyword"
  // n.name.starts_with("B") &&
  Const        r57, "name"
  Const        r58, "starts_with"
  // ci.movie_id == mk.movie_id &&
  Const        r59, "movie_id"
  Const        r60, "movie_id"
  // ci.movie_id == mc.movie_id &&
  Const        r61, "movie_id"
  Const        r62, "movie_id"
  // mc.movie_id == mk.movie_id
  Const        r63, "movie_id"
  Const        r64, "movie_id"
  // select n.name
  Const        r65, "name"
  // join t in title on t.id == ci.movie_id
  Const        r66, 0
L15:
  LessInt      r68, r66, r52
  JumpIfFalse  r68, L2
  Index        r70, r51, r66
  Const        r71, "id"
  Index        r72, r70, r71
  Const        r73, "movie_id"
  Index        r74, r45, r73
  Equal        r75, r72, r74
  JumpIfFalse  r75, L3
  // join mk in movie_keyword on mk.movie_id == t.id
  IterPrep     r76, r4
  Len          r77, r76
  Const        r78, "movie_id"
  Const        r79, "id"
  // where cn.country_code == "[us]" &&
  Const        r80, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r81, "keyword"
  // n.name.starts_with("B") &&
  Const        r82, "name"
  Const        r83, "starts_with"
  // ci.movie_id == mk.movie_id &&
  Const        r84, "movie_id"
  Const        r85, "movie_id"
  // ci.movie_id == mc.movie_id &&
  Const        r86, "movie_id"
  Const        r87, "movie_id"
  // mc.movie_id == mk.movie_id
  Const        r88, "movie_id"
  Const        r89, "movie_id"
  // select n.name
  Const        r90, "name"
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r91, 0
L14:
  LessInt      r93, r91, r77
  JumpIfFalse  r93, L3
  Index        r95, r76, r91
  Const        r96, "movie_id"
  Index        r97, r95, r96
  Const        r98, "id"
  Index        r99, r70, r98
  Equal        r100, r97, r99
  JumpIfFalse  r100, L4
  // join k in keyword on k.id == mk.keyword_id
  IterPrep     r101, r2
  Len          r102, r101
  Const        r103, "id"
  Const        r104, "keyword_id"
  // where cn.country_code == "[us]" &&
  Const        r105, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r106, "keyword"
  // n.name.starts_with("B") &&
  Const        r107, "name"
  Const        r108, "starts_with"
  // ci.movie_id == mk.movie_id &&
  Const        r109, "movie_id"
  Const        r110, "movie_id"
  // ci.movie_id == mc.movie_id &&
  Const        r111, "movie_id"
  Const        r112, "movie_id"
  // mc.movie_id == mk.movie_id
  Const        r113, "movie_id"
  Const        r114, "movie_id"
  // select n.name
  Const        r115, "name"
  // join k in keyword on k.id == mk.keyword_id
  Const        r116, 0
L13:
  LessInt      r118, r116, r102
  JumpIfFalse  r118, L4
  Index        r120, r101, r116
  Const        r121, "id"
  Index        r122, r120, r121
  Const        r123, "keyword_id"
  Index        r124, r95, r123
  Equal        r125, r122, r124
  JumpIfFalse  r125, L5
  // join mc in movie_companies on mc.movie_id == t.id
  IterPrep     r126, r3
  Len          r127, r126
  Const        r128, "movie_id"
  Const        r129, "id"
  // where cn.country_code == "[us]" &&
  Const        r130, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r131, "keyword"
  // n.name.starts_with("B") &&
  Const        r132, "name"
  Const        r133, "starts_with"
  // ci.movie_id == mk.movie_id &&
  Const        r134, "movie_id"
  Const        r135, "movie_id"
  // ci.movie_id == mc.movie_id &&
  Const        r136, "movie_id"
  Const        r137, "movie_id"
  // mc.movie_id == mk.movie_id
  Const        r138, "movie_id"
  Const        r139, "movie_id"
  // select n.name
  Const        r140, "name"
  // join mc in movie_companies on mc.movie_id == t.id
  Const        r141, 0
L12:
  LessInt      r143, r141, r127
  JumpIfFalse  r143, L5
  Index        r145, r126, r141
  Const        r146, "movie_id"
  Index        r147, r145, r146
  Const        r148, "id"
  Index        r149, r70, r148
  Equal        r150, r147, r149
  JumpIfFalse  r150, L6
  // join cn in company_name on cn.id == mc.company_id
  IterPrep     r151, r1
  Len          r152, r151
  Const        r153, "id"
  Const        r154, "company_id"
  // where cn.country_code == "[us]" &&
  Const        r155, "country_code"
  // k.keyword == "character-name-in-title" &&
  Const        r156, "keyword"
  // n.name.starts_with("B") &&
  Const        r157, "name"
  Const        r158, "starts_with"
  // ci.movie_id == mk.movie_id &&
  Const        r159, "movie_id"
  Const        r160, "movie_id"
  // ci.movie_id == mc.movie_id &&
  Const        r161, "movie_id"
  Const        r162, "movie_id"
  // mc.movie_id == mk.movie_id
  Const        r163, "movie_id"
  Const        r164, "movie_id"
  // select n.name
  Const        r165, "name"
  // join cn in company_name on cn.id == mc.company_id
  Const        r166, 0
L11:
  LessInt      r168, r166, r152
  JumpIfFalse  r168, L6
  Index        r170, r151, r166
  Const        r171, "id"
  Index        r172, r170, r171
  Const        r173, "company_id"
  Index        r174, r145, r173
  Equal        r175, r172, r174
  JumpIfFalse  r175, L7
  // where cn.country_code == "[us]" &&
  Const        r176, "country_code"
  Index        r177, r170, r176
  Const        r178, "[us]"
  Equal        r179, r177, r178
  // k.keyword == "character-name-in-title" &&
  Const        r180, "keyword"
  Index        r181, r120, r180
  Const        r182, "character-name-in-title"
  Equal        r183, r181, r182
  // ci.movie_id == mk.movie_id &&
  Const        r184, "movie_id"
  Index        r185, r45, r184
  Const        r186, "movie_id"
  Index        r187, r95, r186
  Equal        r188, r185, r187
  // ci.movie_id == mc.movie_id &&
  Const        r189, "movie_id"
  Index        r190, r45, r189
  Const        r191, "movie_id"
  Index        r192, r145, r191
  Equal        r193, r190, r192
  // mc.movie_id == mk.movie_id
  Const        r194, "movie_id"
  Index        r195, r145, r194
  Const        r196, "movie_id"
  Index        r197, r95, r196
  Equal        r198, r195, r197
  // where cn.country_code == "[us]" &&
  Move         r199, r179
  JumpIfFalse  r199, L8
  Move         r199, r183
  // k.keyword == "character-name-in-title" &&
  JumpIfFalse  r199, L8
  Const        r200, "name"
  Index        r201, r25, r200
  // n.name.starts_with("B") &&
  Const        r202, "B"
  Const        r203, 0
  Const        r204, 1
  Len          r205, r201
  LessEq       r206, r204, r205
  JumpIfFalse  r206, L9
  Slice        r208, r201, r203, r204
  Equal        r207, r208, r202
  Jump         L10
L9:
  // k.keyword == "character-name-in-title" &&
  Const        r199, false
L10:
  // n.name.starts_with("B") &&
  JumpIfFalse  r199, L8
  Move         r199, r188
  // ci.movie_id == mk.movie_id &&
  JumpIfFalse  r199, L8
  Move         r199, r193
  // ci.movie_id == mc.movie_id &&
  JumpIfFalse  r199, L8
  Move         r199, r198
L8:
  // where cn.country_code == "[us]" &&
  JumpIfFalse  r199, L7
  // select n.name
  Const        r210, "name"
  Index        r211, r25, r210
  // from n in name
  Append       r7, r7, r211
L7:
  // join cn in company_name on cn.id == mc.company_id
  Const        r213, 1
  Add          r166, r166, r213
  Jump         L11
L6:
  // join mc in movie_companies on mc.movie_id == t.id
  Const        r214, 1
  Add          r141, r141, r214
  Jump         L12
L5:
  // join k in keyword on k.id == mk.keyword_id
  Const        r215, 1
  Add          r116, r116, r215
  Jump         L13
L4:
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r216, 1
  Add          r91, r91, r216
  Jump         L14
L3:
  // join t in title on t.id == ci.movie_id
  Const        r217, 1
  Add          r66, r66, r217
  Jump         L15
L2:
  // join ci in cast_info on ci.person_id == n.id
  Const        r218, 1
  Add          r41, r41, r218
  Jump         L16
L1:
  // from n in name
  Const        r219, 1
  AddInt       r21, r21, r219
  Jump         L17
L0:
  // member_in_charnamed_american_movie: min(matches),
  Const        r220, "member_in_charnamed_american_movie"
  Min          r221, r7
  // a1: min(matches)
  Const        r222, "a1"
  Min          r223, r7
  // member_in_charnamed_american_movie: min(matches),
  Move         r224, r220
  Move         r225, r221
  // a1: min(matches)
  Move         r226, r222
  Move         r227, r223
  // {
  MakeMap      r229, 2, r224
  // let result = [
  MakeList     r230, 1, r229
  // json(result)
  JSON         r230
  // expect result == [
  Const        r231, [{"a1": "Bob Smith", "member_in_charnamed_american_movie": "Bob Smith"}]
  Equal        r232, r230, r231
  Expect       r232
  Return       r0
