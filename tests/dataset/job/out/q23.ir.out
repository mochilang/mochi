func main (regs=41)
  // let complete_cast = [
  Const        r0, [{"movie_id": 1, "status_id": 1}, {"movie_id": 2, "status_id": 2}]
L19:
  // let comp_cast_type = [
  Const        r1, [{"id": 1, "kind": "complete+verified"}, {"id": 2, "kind": "partial"}]
  // let company_name = [
  Const        r2, [{"country_code": "[us]", "id": 1}, {"country_code": "[gb]", "id": 2}]
L2:
  // let company_type = [
  Const        r3, [{"id": 1}, {"id": 2}]
  // let info_type = [
  Const        r4, [{"id": 1, "info": "release dates"}, {"id": 2, "info": "other"}]
  // let keyword = [
  Const        r5, [{"id": 1, "keyword": "internet"}, {"id": 2, "keyword": "other"}]
  // let kind_type = [
  Const        r6, [{"id": 1, "kind": "movie"}, {"id": 2, "kind": "series"}]
L7:
  // let movie_companies = [
  Const        r7, [{"company_id": 1, "company_type_id": 1, "movie_id": 1}, {"company_id": 2, "company_type_id": 2, "movie_id": 2}]
L8:
  // let movie_info = [
  Const        r8, [{"info": "USA: May 2005", "info_type_id": 1, "movie_id": 1, "note": "internet release"}, {"info": "USA: April 1998", "info_type_id": 1, "movie_id": 2, "note": "theater"}]
L16:
  // let movie_keyword = [
  Const        r9, [{"keyword_id": 1, "movie_id": 1}, {"keyword_id": 2, "movie_id": 2}]
L24:
  // let title = [
  Const        r10, [{"id": 1, "kind_id": 1, "production_year": 2005, "title": "Web Movie"}, {"id": 2, "kind_id": 1, "production_year": 1998, "title": "Old Movie"}]
  // from cc in complete_cast
  Const        r11, []
L13:
  // where cct1.kind == "complete+verified" &&
  Const        r12, "kind"
L17:
  // cn.country_code == "[us]" &&
  Const        r13, "country_code"
L3:
  // it1.info == "release dates" &&
  Const        r14, "info"
L0:
  // kt.kind == "movie" &&
  Const        r15, "kind"
L23:
  // mi.note.contains("internet") &&
  Const        r16, "note"
L20:
  Const        r17, "contains"
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  Const        r18, "info"
L14:
  Const        r19, "contains"
L12:
  Const        r20, "info"
L1:
  Const        r21, "contains"
L21:
  Const        r22, "info"
L10:
  Const        r23, "contains"
L4:
  // t.production_year > 2000
  Const        r24, "production_year"
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r25, "movie_kind"
L11:
  Const        r26, "kind"
L18:
  Const        r27, "complete_us_internet_movie"
L22:
  Const        r28, "title"
  // from cc in complete_cast
  IterPrep     r29, r0
L15:
  Len          r30, r29
  Const        r31, 0
L9:
  LessInt      r32, r31, r30
  JumpIfFalse  r32, L0
L6:
  Index        r12, r29, r31
  // join cct1 in comp_cast_type on cct1.id == cc.status_id
  IterPrep     r13, r1
L5:
  Len          r14, r13
  Const        r15, "id"
  Const        r16, "status_id"
  // where cct1.kind == "complete+verified" &&
  Const        r17, "kind"
  // cn.country_code == "[us]" &&
  Const        r18, "country_code"
  // it1.info == "release dates" &&
  Const        r19, "info"
  // kt.kind == "movie" &&
  Const        r20, "kind"
  // mi.note.contains("internet") &&
  Const        r21, "note"
  Const        r22, "contains"
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  Const        r23, "info"
  Const        r24, "contains"
  Const        r25, "info"
  Const        r26, "contains"
  Const        r27, "info"
  Const        r28, "contains"
  // t.production_year > 2000
  Const        r30, "production_year"
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r32, "movie_kind"
  Const        r29, "kind"
  Const        r1, "complete_us_internet_movie"
  Const        r15, "title"
  // join cct1 in comp_cast_type on cct1.id == cc.status_id
  Const        r16, 0
  LessInt      r17, r16, r14
  JumpIfFalse  r17, L1
  Index        r18, r13, r16
  Const        r19, "id"
  Index        r20, r18, r19
  Const        r21, "status_id"
  Index        r22, r12, r21
  Equal        r23, r20, r22
  JumpIfFalse  r23, L2
  // join t in title on t.id == cc.movie_id
  IterPrep     r24, r10
  Len          r25, r24
  Const        r26, "id"
  Const        r27, "movie_id"
  // where cct1.kind == "complete+verified" &&
  Const        r28, "kind"
  // cn.country_code == "[us]" &&
  Const        r30, "country_code"
  // it1.info == "release dates" &&
  Const        r32, "info"
  // kt.kind == "movie" &&
  Const        r29, "kind"
  // mi.note.contains("internet") &&
  Const        r1, "note"
  Const        r15, "contains"
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  Const        r14, "info"
  Const        r17, "contains"
  Const        r13, "info"
  Const        r19, "contains"
  Const        r21, "info"
  Const        r20, "contains"
  // t.production_year > 2000
  Const        r22, "production_year"
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r23, "movie_kind"
  Const        r10, "kind"
  Const        r26, "complete_us_internet_movie"
  Const        r27, "title"
  // join t in title on t.id == cc.movie_id
  Const        r28, 0
  LessInt      r30, r28, r25
  JumpIfFalse  r30, L2
  Index        r32, r24, r28
  Const        r29, "id"
  Index        r1, r32, r29
  Const        r15, "movie_id"
  Index        r14, r12, r15
  Equal        r17, r1, r14
  JumpIfFalse  r17, L3
  // join kt in kind_type on kt.id == t.kind_id
  IterPrep     r13, r6
  Len          r19, r13
  Const        r21, "id"
  Const        r20, "kind_id"
  // where cct1.kind == "complete+verified" &&
  Const        r22, "kind"
  // cn.country_code == "[us]" &&
  Const        r23, "country_code"
  // it1.info == "release dates" &&
  Const        r10, "info"
  // kt.kind == "movie" &&
  Const        r26, "kind"
  // mi.note.contains("internet") &&
  Const        r27, "note"
  Const        r25, "contains"
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  Const        r30, "info"
  Const        r24, "contains"
  Const        r29, "info"
  Const        r12, "contains"
  Const        r15, "info"
  Const        r1, "contains"
  // t.production_year > 2000
  Const        r14, "production_year"
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r17, "movie_kind"
  Const        r6, "kind"
  Const        r21, "complete_us_internet_movie"
  Const        r20, "title"
  // join kt in kind_type on kt.id == t.kind_id
  Const        r22, 0
  LessInt      r23, r22, r19
  JumpIfFalse  r23, L3
  Index        r10, r13, r22
  Const        r26, "id"
  Index        r27, r10, r26
  Const        r25, "kind_id"
  Index        r30, r32, r25
  Equal        r24, r27, r30
  JumpIfFalse  r24, L4
  // join mi in movie_info on mi.movie_id == t.id
  IterPrep     r29, r8
  Len          r12, r29
  Const        r15, "movie_id"
  Const        r1, "id"
  // where cct1.kind == "complete+verified" &&
  Const        r14, "kind"
  // cn.country_code == "[us]" &&
  Const        r17, "country_code"
  // it1.info == "release dates" &&
  Const        r6, "info"
  // kt.kind == "movie" &&
  Const        r21, "kind"
  // mi.note.contains("internet") &&
  Const        r20, "note"
  Const        r19, "contains"
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  Const        r23, "info"
  Const        r13, "contains"
  Const        r26, "info"
  Const        r25, "contains"
  Const        r27, "info"
  Const        r30, "contains"
  // t.production_year > 2000
  Const        r24, "production_year"
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r8, "movie_kind"
  Const        r15, "kind"
  Const        r1, "complete_us_internet_movie"
  Const        r14, "title"
  // join mi in movie_info on mi.movie_id == t.id
  Const        r17, 0
  LessInt      r6, r17, r12
  JumpIfFalse  r6, L4
  Index        r21, r29, r17
  Const        r20, "movie_id"
  Index        r19, r21, r20
  Const        r23, "id"
  Index        r13, r32, r23
  Equal        r26, r19, r13
  JumpIfFalse  r26, L5
  // join it1 in info_type on it1.id == mi.info_type_id
  IterPrep     r25, r4
  Len          r27, r25
  Const        r30, "id"
  Const        r24, "info_type_id"
  // where cct1.kind == "complete+verified" &&
  Const        r8, "kind"
  // cn.country_code == "[us]" &&
  Const        r15, "country_code"
  // it1.info == "release dates" &&
  Const        r1, "info"
  // kt.kind == "movie" &&
  Const        r14, "kind"
  // mi.note.contains("internet") &&
  Const        r12, "note"
  Const        r6, "contains"
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  Const        r29, "info"
  Const        r20, "contains"
  Const        r23, "info"
  Const        r19, "contains"
  Const        r13, "info"
  Const        r26, "contains"
  // t.production_year > 2000
  Const        r4, "production_year"
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r30, "movie_kind"
  Const        r24, "kind"
  Const        r8, "complete_us_internet_movie"
  Const        r15, "title"
  // join it1 in info_type on it1.id == mi.info_type_id
  Const        r1, 0
  LessInt      r14, r1, r27
  JumpIfFalse  r14, L5
  Index        r12, r25, r1
  Const        r6, "id"
  Index        r29, r12, r6
  Const        r20, "info_type_id"
  Index        r23, r21, r20
  Equal        r19, r29, r23
  JumpIfFalse  r19, L6
  // join mk in movie_keyword on mk.movie_id == t.id
  IterPrep     r13, r9
  Len          r26, r13
  Const        r4, "movie_id"
  Const        r30, "id"
  // where cct1.kind == "complete+verified" &&
  Const        r24, "kind"
  // cn.country_code == "[us]" &&
  Const        r8, "country_code"
  // it1.info == "release dates" &&
  Const        r15, "info"
  // kt.kind == "movie" &&
  Const        r27, "kind"
  // mi.note.contains("internet") &&
  Const        r14, "note"
  Const        r25, "contains"
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  Const        r6, "info"
  Const        r20, "contains"
  Const        r29, "info"
  Const        r23, "contains"
  Const        r19, "info"
  Const        r9, "contains"
  // t.production_year > 2000
  Const        r4, "production_year"
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r30, "movie_kind"
  Const        r24, "kind"
  Const        r8, "complete_us_internet_movie"
  Const        r15, "title"
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r27, 0
  LessInt      r14, r27, r26
  JumpIfFalse  r14, L6
  Index        r25, r13, r27
  Const        r6, "movie_id"
  Index        r20, r25, r6
  Const        r29, "id"
  Index        r23, r32, r29
  Equal        r19, r20, r23
  JumpIfFalse  r19, L7
  // join k in keyword on k.id == mk.keyword_id
  IterPrep     r9, r5
  Len          r4, r9
  Const        r30, "id"
  Const        r24, "keyword_id"
  // where cct1.kind == "complete+verified" &&
  Const        r8, "kind"
  // cn.country_code == "[us]" &&
  Const        r15, "country_code"
  // it1.info == "release dates" &&
  Const        r26, "info"
  // kt.kind == "movie" &&
  Const        r14, "kind"
  // mi.note.contains("internet") &&
  Const        r13, "note"
  Const        r6, "contains"
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  Const        r29, "info"
  Const        r20, "contains"
  Const        r23, "info"
  Const        r19, "contains"
  Const        r5, "info"
  Const        r30, "contains"
  // t.production_year > 2000
  Const        r24, "production_year"
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r8, "movie_kind"
  Const        r15, "kind"
  Const        r26, "complete_us_internet_movie"
  Const        r14, "title"
  // join k in keyword on k.id == mk.keyword_id
  Const        r13, 0
  LessInt      r6, r13, r4
  JumpIfFalse  r6, L7
  Index        r29, r9, r13
  Const        r20, "id"
  Index        r23, r29, r20
  Const        r19, "keyword_id"
  Index        r5, r25, r19
  Equal        r30, r23, r5
  JumpIfFalse  r30, L8
  // join mc in movie_companies on mc.movie_id == t.id
  IterPrep     r24, r7
  Len          r8, r24
  Const        r15, "movie_id"
  Const        r26, "id"
  // where cct1.kind == "complete+verified" &&
  Const        r14, "kind"
  // cn.country_code == "[us]" &&
  Const        r4, "country_code"
  // it1.info == "release dates" &&
  Const        r6, "info"
  // kt.kind == "movie" &&
  Const        r9, "kind"
  // mi.note.contains("internet") &&
  Const        r29, "note"
  Const        r20, "contains"
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  Const        r25, "info"
  Const        r19, "contains"
  Const        r23, "info"
  Const        r5, "contains"
  Const        r30, "info"
  Const        r7, "contains"
  // t.production_year > 2000
  Const        r15, "production_year"
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r26, "movie_kind"
  Const        r14, "kind"
  Const        r4, "complete_us_internet_movie"
  Const        r6, "title"
  // join mc in movie_companies on mc.movie_id == t.id
  Const        r9, 0
  LessInt      r29, r9, r8
  JumpIfFalse  r29, L8
  Index        r20, r24, r9
  Const        r25, "movie_id"
  Index        r19, r20, r25
  Const        r23, "id"
  Index        r5, r32, r23
  Equal        r30, r19, r5
  JumpIfFalse  r30, L9
  // join cn in company_name on cn.id == mc.company_id
  IterPrep     r7, r2
  Len          r15, r7
  Const        r26, "id"
  Const        r14, "company_id"
  // where cct1.kind == "complete+verified" &&
  Const        r4, "kind"
  // cn.country_code == "[us]" &&
  Const        r6, "country_code"
  // it1.info == "release dates" &&
  Const        r8, "info"
  // kt.kind == "movie" &&
  Const        r29, "kind"
  // mi.note.contains("internet") &&
  Const        r24, "note"
  Const        r25, "contains"
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  Const        r23, "info"
  Const        r19, "contains"
  Const        r5, "info"
  Const        r30, "contains"
  Const        r2, "info"
  Const        r26, "contains"
  // t.production_year > 2000
  Const        r14, "production_year"
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r4, "movie_kind"
  Const        r6, "kind"
  Const        r8, "complete_us_internet_movie"
  Const        r29, "title"
  // join cn in company_name on cn.id == mc.company_id
  Const        r24, 0
  LessInt      r25, r24, r15
  JumpIfFalse  r25, L9
  Index        r23, r7, r24
  Const        r19, "id"
  Index        r5, r23, r19
  Const        r30, "company_id"
  Index        r2, r20, r30
  Equal        r26, r5, r2
  JumpIfFalse  r26, L10
  // join ct in company_type on ct.id == mc.company_type_id
  IterPrep     r14, r3
  Len          r4, r14
  Const        r6, "id"
  Const        r8, "company_type_id"
  // where cct1.kind == "complete+verified" &&
  Const        r29, "kind"
  // cn.country_code == "[us]" &&
  Const        r15, "country_code"
  // it1.info == "release dates" &&
  Const        r25, "info"
  // kt.kind == "movie" &&
  Const        r7, "kind"
  // mi.note.contains("internet") &&
  Const        r19, "note"
  Const        r30, "contains"
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  Const        r5, "info"
  Const        r2, "contains"
  Const        r26, "info"
  Const        r3, "contains"
  Const        r6, "info"
  Const        r8, "contains"
  // t.production_year > 2000
  Const        r29, "production_year"
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r15, "movie_kind"
  Const        r25, "kind"
  Const        r7, "complete_us_internet_movie"
  Const        r19, "title"
  // join ct in company_type on ct.id == mc.company_type_id
  Const        r30, 0
  LessInt      r5, r30, r4
  JumpIfFalse  r5, L10
  Index        r2, r14, r30
  Const        r26, "id"
  Index        r3, r2, r26
  Const        r6, "company_type_id"
  Index        r8, r20, r6
  Equal        r29, r3, r8
  JumpIfFalse  r29, L11
  // where cct1.kind == "complete+verified" &&
  Const        r15, "kind"
  Index        r25, r18, r15
  // t.production_year > 2000
  Const        r7, "production_year"
  Index        r19, r32, r7
  Const        r4, 2000
  Less         r5, r4, r19
  // where cct1.kind == "complete+verified" &&
  Const        r14, "complete+verified"
  Equal        r2, r25, r14
  // cn.country_code == "[us]" &&
  Const        r26, "country_code"
  Index        r20, r23, r26
  Const        r6, "[us]"
  Equal        r3, r20, r6
  // it1.info == "release dates" &&
  Const        r8, "info"
  Index        r29, r12, r8
  Const        r18, "release dates"
  Equal        r15, r29, r18
  // kt.kind == "movie" &&
  Const        r7, "kind"
  Index        r19, r10, r7
  Const        r4, "movie"
  Equal        r25, r19, r4
  // where cct1.kind == "complete+verified" &&
  Move         r14, r2
  JumpIfFalse  r14, L10
  // cn.country_code == "[us]" &&
  Move         r23, r3
  JumpIfFalse  r23, L12
  // it1.info == "release dates" &&
  Move         r26, r15
  JumpIfFalse  r26, L13
  // kt.kind == "movie" &&
  Move         r20, r25
  JumpIfFalse  r20, L14
  Const        r6, "note"
  Index        r12, r21, r6
  // mi.note.contains("internet") &&
  Const        r8, "internet"
  In           r29, r8, r12
  JumpIfFalse  r29, L8
  Const        r18, "info"
  Index        r7, r21, r18
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  Const        r19, "USA:"
  In           r4, r19, r7
  JumpIfFalse  r4, L8
  Const        r2, "info"
  Index        r14, r21, r2
  Const        r3, "199"
  In           r23, r3, r14
  JumpIfTrue   r23, L8
  Const        r15, "info"
  Index        r26, r21, r15
  Const        r25, "200"
  In           r23, r25, r26
  Move         r20, r23
  JumpIfFalse  r20, L7
  Move         r20, r5
  // where cct1.kind == "complete+verified" &&
  JumpIfFalse  r20, L11
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r6, "movie_kind"
  Const        r12, "kind"
  Index        r8, r10, r12
  Const        r29, "complete_us_internet_movie"
  Const        r18, "title"
  Index        r7, r32, r18
  Move         r33, r6
  Move         r34, r8
  Move         r35, r29
  Move         r36, r7
  MakeMap      r19, 2, r33
  // from cc in complete_cast
  Append       r11, r11, r19
  // join ct in company_type on ct.id == mc.company_type_id
  Const        r4, 1
  Add          r30, r30, r4
  Jump         L15
  // join cn in company_name on cn.id == mc.company_id
  Const        r2, 1
  Add          r24, r24, r2
  Jump         L4
  // join mc in movie_companies on mc.movie_id == t.id
  Const        r14, 1
  Add          r9, r9, r14
  Jump         L16
  // join k in keyword on k.id == mk.keyword_id
  Const        r3, 1
  Add          r13, r13, r3
  Jump         L17
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r21, 1
  Add          r27, r27, r21
  Jump         L18
  // join it1 in info_type on it1.id == mi.info_type_id
  Const        r15, 1
  Add          r1, r1, r15
  Jump         L19
  // join mi in movie_info on mi.movie_id == t.id
  Const        r26, 1
  Add          r17, r17, r26
  Jump         L20
  // join kt in kind_type on kt.id == t.kind_id
  Const        r25, 1
  Add          r22, r22, r25
  Jump         L21
  // join t in title on t.id == cc.movie_id
  Const        r5, 1
  Add          r28, r28, r5
  Jump         L22
  // join cct1 in comp_cast_type on cct1.id == cc.status_id
  Const        r23, 1
  Add          r16, r16, r23
  Jump         L23
  // from cc in complete_cast
  Const        r20, 1
  AddInt       r31, r31, r20
  Jump         L24
  // movie_kind: min(from r in matches select r.movie_kind),
  Const        r12, "movie_kind"
  Const        r32, []
  Const        r18, "movie_kind"
  IterPrep     r6, r11
  Len          r8, r6
  Const        r29, 0
  LessInt      r7, r29, r8
  JumpIfFalse  r7, L25
  Index        r33, r6, r29
  Const        r34, "movie_kind"
  Index        r35, r33, r34
  Append       r32, r32, r35
  Const        r36, 1
  AddInt       r29, r29, r36
  Jump         L14
L25:
  Min          r30, r32
  // complete_us_internet_movie: min(from r in matches select r.complete_us_internet_movie)
  Const        r4, "complete_us_internet_movie"
  Const        r24, []
  Const        r2, "complete_us_internet_movie"
  IterPrep     r9, r11
  Len          r14, r9
  Const        r13, 0
L27:
  LessInt      r3, r13, r14
  JumpIfFalse  r3, L26
  Index        r33, r9, r13
  Const        r27, "complete_us_internet_movie"
  Index        r21, r33, r27
  Append       r24, r24, r21
  Const        r1, 1
  AddInt       r13, r13, r1
  Jump         L27
L26:
  Min          r15, r24
  // movie_kind: min(from r in matches select r.movie_kind),
  Move         r37, r12
  Move         r38, r30
  // complete_us_internet_movie: min(from r in matches select r.complete_us_internet_movie)
  Move         r39, r4
  Move         r40, r15
  // {
  MakeMap      r19, 2, r37
  // let result = [
  MakeList     r17, 1, r19
  // json(result)
  JSON         r17
  // expect result == [
  Const        r26, [{"complete_us_internet_movie": "Web Movie", "movie_kind": "movie"}]
  Equal        r22, r17, r26
  Expect       r22
  Return       r0
