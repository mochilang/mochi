func main (regs=197)
  // let complete_cast = [
  Const        r0, [{"movie_id": 1, "status_id": 1}, {"movie_id": 2, "status_id": 2}]
  // let comp_cast_type = [
  Const        r1, [{"id": 1, "kind": "complete+verified"}, {"id": 2, "kind": "partial"}]
  // let company_name = [
  Const        r2, [{"country_code": "[us]", "id": 1}, {"country_code": "[gb]", "id": 2}]
  // let company_type = [
  Const        r3, [{"id": 1}, {"id": 2}]
  // let info_type = [
  Const        r4, [{"id": 1, "info": "release dates"}, {"id": 2, "info": "other"}]
  // let keyword = [
  Const        r5, [{"id": 1, "keyword": "internet"}, {"id": 2, "keyword": "other"}]
  // let kind_type = [
  Const        r6, [{"id": 1, "kind": "movie"}, {"id": 2, "kind": "series"}]
  // let movie_companies = [
  Const        r7, [{"company_id": 1, "company_type_id": 1, "movie_id": 1}, {"company_id": 2, "company_type_id": 2, "movie_id": 2}]
  // let movie_info = [
  Const        r8, [{"info": "USA: May 2005", "info_type_id": 1, "movie_id": 1, "note": "internet release"}, {"info": "USA: April 1998", "info_type_id": 1, "movie_id": 2, "note": "theater"}]
  // let movie_keyword = [
  Const        r9, [{"keyword_id": 1, "movie_id": 1}, {"keyword_id": 2, "movie_id": 2}]
  // let title = [
  Const        r10, [{"id": 1, "kind_id": 1, "production_year": 2005, "title": "Web Movie"}, {"id": 2, "kind_id": 1, "production_year": 1998, "title": "Old Movie"}]
  // from cc in complete_cast
  Const        r11, []
  // where cct1.kind == "complete+verified" &&
  Const        r12, "kind"
  // cn.country_code == "[us]" &&
  Const        r13, "country_code"
  // it1.info == "release dates" &&
  Const        r14, "info"
  // kt.kind == "movie" &&
  Const        r12, "kind"
  // mi.note.contains("internet") &&
  Const        r15, "note"
  Const        r16, "contains"
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  Const        r14, "info"
  Const        r16, "contains"
  Const        r14, "info"
  Const        r16, "contains"
  Const        r14, "info"
  Const        r16, "contains"
  // t.production_year > 2000
  Const        r17, "production_year"
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r18, "movie_kind"
  Const        r12, "kind"
  Const        r19, "complete_us_internet_movie"
  Const        r20, "title"
  // from cc in complete_cast
  IterPrep     r21, r0
  Len          r22, r21
  Const        r24, 0
  Move         r23, r24
L25:
  LessInt      r25, r23, r22
  JumpIfFalse  r25, L0
  Index        r26, r21, r23
  Move         r27, r26
  // join cct1 in comp_cast_type on cct1.id == cc.status_id
  IterPrep     r28, r1
  Len          r29, r28
  Const        r30, "id"
  Const        r31, "status_id"
  // where cct1.kind == "complete+verified" &&
  Const        r12, "kind"
  // cn.country_code == "[us]" &&
  Const        r13, "country_code"
  // it1.info == "release dates" &&
  Const        r14, "info"
  // kt.kind == "movie" &&
  Const        r12, "kind"
  // mi.note.contains("internet") &&
  Const        r15, "note"
  Const        r16, "contains"
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  Const        r14, "info"
  Const        r16, "contains"
  Const        r14, "info"
  Const        r16, "contains"
  Const        r14, "info"
  Const        r16, "contains"
  // t.production_year > 2000
  Const        r17, "production_year"
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r18, "movie_kind"
  Const        r12, "kind"
  Const        r19, "complete_us_internet_movie"
  Const        r20, "title"
  // join cct1 in comp_cast_type on cct1.id == cc.status_id
  Const        r24, 0
  Move         r32, r24
L24:
  LessInt      r33, r32, r29
  JumpIfFalse  r33, L1
  Index        r34, r28, r32
  Move         r35, r34
  Const        r30, "id"
  Index        r36, r35, r30
  Const        r31, "status_id"
  Index        r37, r27, r31
  Equal        r38, r36, r37
  JumpIfFalse  r38, L2
  // join t in title on t.id == cc.movie_id
  IterPrep     r39, r10
  Len          r40, r39
  Const        r30, "id"
  Const        r41, "movie_id"
  // where cct1.kind == "complete+verified" &&
  Const        r12, "kind"
  // cn.country_code == "[us]" &&
  Const        r13, "country_code"
  // it1.info == "release dates" &&
  Const        r14, "info"
  // kt.kind == "movie" &&
  Const        r12, "kind"
  // mi.note.contains("internet") &&
  Const        r15, "note"
  Const        r16, "contains"
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  Const        r14, "info"
  Const        r16, "contains"
  Const        r14, "info"
  Const        r16, "contains"
  Const        r14, "info"
  Const        r16, "contains"
  // t.production_year > 2000
  Const        r17, "production_year"
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r18, "movie_kind"
  Const        r12, "kind"
  Const        r19, "complete_us_internet_movie"
  Const        r20, "title"
  // join t in title on t.id == cc.movie_id
  Const        r24, 0
  Move         r42, r24
L23:
  LessInt      r43, r42, r40
  JumpIfFalse  r43, L2
  Index        r44, r39, r42
  Move         r45, r44
  Const        r30, "id"
  Index        r46, r45, r30
  Const        r41, "movie_id"
  Index        r47, r27, r41
  Equal        r48, r46, r47
  JumpIfFalse  r48, L3
  // join kt in kind_type on kt.id == t.kind_id
  IterPrep     r49, r6
  Len          r50, r49
  Const        r30, "id"
  Const        r51, "kind_id"
  // where cct1.kind == "complete+verified" &&
  Const        r12, "kind"
  // cn.country_code == "[us]" &&
  Const        r13, "country_code"
  // it1.info == "release dates" &&
  Const        r14, "info"
  // kt.kind == "movie" &&
  Const        r12, "kind"
  // mi.note.contains("internet") &&
  Const        r15, "note"
  Const        r16, "contains"
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  Const        r14, "info"
  Const        r16, "contains"
  Const        r14, "info"
  Const        r16, "contains"
  Const        r14, "info"
  Const        r16, "contains"
  // t.production_year > 2000
  Const        r17, "production_year"
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r18, "movie_kind"
  Const        r12, "kind"
  Const        r19, "complete_us_internet_movie"
  Const        r20, "title"
  // join kt in kind_type on kt.id == t.kind_id
  Const        r24, 0
  Move         r52, r24
L22:
  LessInt      r53, r52, r50
  JumpIfFalse  r53, L3
  Index        r54, r49, r52
  Move         r55, r54
  Const        r30, "id"
  Index        r56, r55, r30
  Const        r51, "kind_id"
  Index        r57, r45, r51
  Equal        r58, r56, r57
  JumpIfFalse  r58, L4
  // join mi in movie_info on mi.movie_id == t.id
  IterPrep     r59, r8
  Len          r60, r59
  Const        r41, "movie_id"
  Const        r30, "id"
  // where cct1.kind == "complete+verified" &&
  Const        r12, "kind"
  // cn.country_code == "[us]" &&
  Const        r13, "country_code"
  // it1.info == "release dates" &&
  Const        r14, "info"
  // kt.kind == "movie" &&
  Const        r12, "kind"
  // mi.note.contains("internet") &&
  Const        r15, "note"
  Const        r16, "contains"
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  Const        r14, "info"
  Const        r16, "contains"
  Const        r14, "info"
  Const        r16, "contains"
  Const        r14, "info"
  Const        r16, "contains"
  // t.production_year > 2000
  Const        r17, "production_year"
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r18, "movie_kind"
  Const        r12, "kind"
  Const        r19, "complete_us_internet_movie"
  Const        r20, "title"
  // join mi in movie_info on mi.movie_id == t.id
  Const        r24, 0
  Move         r61, r24
L21:
  LessInt      r62, r61, r60
  JumpIfFalse  r62, L4
  Index        r63, r59, r61
  Move         r64, r63
  Const        r41, "movie_id"
  Index        r65, r64, r41
  Const        r30, "id"
  Index        r66, r45, r30
  Equal        r67, r65, r66
  JumpIfFalse  r67, L5
  // join it1 in info_type on it1.id == mi.info_type_id
  IterPrep     r68, r4
  Len          r69, r68
  Const        r30, "id"
  Const        r70, "info_type_id"
  // where cct1.kind == "complete+verified" &&
  Const        r12, "kind"
  // cn.country_code == "[us]" &&
  Const        r13, "country_code"
  // it1.info == "release dates" &&
  Const        r14, "info"
  // kt.kind == "movie" &&
  Const        r12, "kind"
  // mi.note.contains("internet") &&
  Const        r15, "note"
  Const        r16, "contains"
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  Const        r14, "info"
  Const        r16, "contains"
  Const        r14, "info"
  Const        r16, "contains"
  Const        r14, "info"
  Const        r16, "contains"
  // t.production_year > 2000
  Const        r17, "production_year"
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r18, "movie_kind"
  Const        r12, "kind"
  Const        r19, "complete_us_internet_movie"
  Const        r20, "title"
  // join it1 in info_type on it1.id == mi.info_type_id
  Const        r24, 0
  Move         r71, r24
L20:
  LessInt      r72, r71, r69
  JumpIfFalse  r72, L5
  Index        r73, r68, r71
  Move         r74, r73
  Const        r30, "id"
  Index        r75, r74, r30
  Const        r70, "info_type_id"
  Index        r76, r64, r70
  Equal        r77, r75, r76
  JumpIfFalse  r77, L6
  // join mk in movie_keyword on mk.movie_id == t.id
  IterPrep     r78, r9
  Len          r79, r78
  Const        r41, "movie_id"
  Const        r30, "id"
  // where cct1.kind == "complete+verified" &&
  Const        r12, "kind"
  // cn.country_code == "[us]" &&
  Const        r13, "country_code"
  // it1.info == "release dates" &&
  Const        r14, "info"
  // kt.kind == "movie" &&
  Const        r12, "kind"
  // mi.note.contains("internet") &&
  Const        r15, "note"
  Const        r16, "contains"
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  Const        r14, "info"
  Const        r16, "contains"
  Const        r14, "info"
  Const        r16, "contains"
  Const        r14, "info"
  Const        r16, "contains"
  // t.production_year > 2000
  Const        r17, "production_year"
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r18, "movie_kind"
  Const        r12, "kind"
  Const        r19, "complete_us_internet_movie"
  Const        r20, "title"
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r24, 0
  Move         r80, r24
L19:
  LessInt      r81, r80, r79
  JumpIfFalse  r81, L6
  Index        r82, r78, r80
  Move         r83, r82
  Const        r41, "movie_id"
  Index        r84, r83, r41
  Const        r30, "id"
  Index        r85, r45, r30
  Equal        r86, r84, r85
  JumpIfFalse  r86, L7
  // join k in keyword on k.id == mk.keyword_id
  IterPrep     r87, r5
  Len          r88, r87
  Const        r30, "id"
  Const        r89, "keyword_id"
  // where cct1.kind == "complete+verified" &&
  Const        r12, "kind"
  // cn.country_code == "[us]" &&
  Const        r13, "country_code"
  // it1.info == "release dates" &&
  Const        r14, "info"
  // kt.kind == "movie" &&
  Const        r12, "kind"
  // mi.note.contains("internet") &&
  Const        r15, "note"
  Const        r16, "contains"
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  Const        r14, "info"
  Const        r16, "contains"
  Const        r14, "info"
  Const        r16, "contains"
  Const        r14, "info"
  Const        r16, "contains"
  // t.production_year > 2000
  Const        r17, "production_year"
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r18, "movie_kind"
  Const        r12, "kind"
  Const        r19, "complete_us_internet_movie"
  Const        r20, "title"
  // join k in keyword on k.id == mk.keyword_id
  Const        r24, 0
  Move         r90, r24
L18:
  LessInt      r91, r90, r88
  JumpIfFalse  r91, L7
  Index        r92, r87, r90
  Move         r93, r92
  Const        r30, "id"
  Index        r94, r93, r30
  Const        r89, "keyword_id"
  Index        r95, r83, r89
  Equal        r96, r94, r95
  JumpIfFalse  r96, L8
  // join mc in movie_companies on mc.movie_id == t.id
  IterPrep     r97, r7
  Len          r98, r97
  Const        r41, "movie_id"
  Const        r30, "id"
  // where cct1.kind == "complete+verified" &&
  Const        r12, "kind"
  // cn.country_code == "[us]" &&
  Const        r13, "country_code"
  // it1.info == "release dates" &&
  Const        r14, "info"
  // kt.kind == "movie" &&
  Const        r12, "kind"
  // mi.note.contains("internet") &&
  Const        r15, "note"
  Const        r16, "contains"
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  Const        r14, "info"
  Const        r16, "contains"
  Const        r14, "info"
  Const        r16, "contains"
  Const        r14, "info"
  Const        r16, "contains"
  // t.production_year > 2000
  Const        r17, "production_year"
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r18, "movie_kind"
  Const        r12, "kind"
  Const        r19, "complete_us_internet_movie"
  Const        r20, "title"
  // join mc in movie_companies on mc.movie_id == t.id
  Const        r24, 0
  Move         r99, r24
L17:
  LessInt      r100, r99, r98
  JumpIfFalse  r100, L8
  Index        r101, r97, r99
  Move         r102, r101
  Const        r41, "movie_id"
  Index        r103, r102, r41
  Const        r30, "id"
  Index        r104, r45, r30
  Equal        r105, r103, r104
  JumpIfFalse  r105, L9
  // join cn in company_name on cn.id == mc.company_id
  IterPrep     r106, r2
  Len          r107, r106
  Const        r30, "id"
  Const        r108, "company_id"
  // where cct1.kind == "complete+verified" &&
  Const        r12, "kind"
  // cn.country_code == "[us]" &&
  Const        r13, "country_code"
  // it1.info == "release dates" &&
  Const        r14, "info"
  // kt.kind == "movie" &&
  Const        r12, "kind"
  // mi.note.contains("internet") &&
  Const        r15, "note"
  Const        r16, "contains"
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  Const        r14, "info"
  Const        r16, "contains"
  Const        r14, "info"
  Const        r16, "contains"
  Const        r14, "info"
  Const        r16, "contains"
  // t.production_year > 2000
  Const        r17, "production_year"
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r18, "movie_kind"
  Const        r12, "kind"
  Const        r19, "complete_us_internet_movie"
  Const        r20, "title"
  // join cn in company_name on cn.id == mc.company_id
  Const        r24, 0
  Move         r109, r24
L16:
  LessInt      r110, r109, r107
  JumpIfFalse  r110, L9
  Index        r111, r106, r109
  Move         r112, r111
  Const        r30, "id"
  Index        r113, r112, r30
  Const        r108, "company_id"
  Index        r114, r102, r108
  Equal        r115, r113, r114
  JumpIfFalse  r115, L10
  // join ct in company_type on ct.id == mc.company_type_id
  IterPrep     r116, r3
  Len          r117, r116
  Const        r30, "id"
  Const        r118, "company_type_id"
  // where cct1.kind == "complete+verified" &&
  Const        r12, "kind"
  // cn.country_code == "[us]" &&
  Const        r13, "country_code"
  // it1.info == "release dates" &&
  Const        r14, "info"
  // kt.kind == "movie" &&
  Const        r12, "kind"
  // mi.note.contains("internet") &&
  Const        r15, "note"
  Const        r16, "contains"
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  Const        r14, "info"
  Const        r16, "contains"
  Const        r14, "info"
  Const        r16, "contains"
  Const        r14, "info"
  Const        r16, "contains"
  // t.production_year > 2000
  Const        r17, "production_year"
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r18, "movie_kind"
  Const        r12, "kind"
  Const        r19, "complete_us_internet_movie"
  Const        r20, "title"
  // join ct in company_type on ct.id == mc.company_type_id
  Const        r24, 0
  Move         r119, r24
L15:
  LessInt      r120, r119, r117
  JumpIfFalse  r120, L10
  Index        r121, r116, r119
  Move         r122, r121
  Const        r30, "id"
  Index        r123, r122, r30
  Const        r118, "company_type_id"
  Index        r124, r102, r118
  Equal        r125, r123, r124
  JumpIfFalse  r125, L11
  // where cct1.kind == "complete+verified" &&
  Const        r12, "kind"
  Index        r126, r35, r12
  // t.production_year > 2000
  Const        r17, "production_year"
  Index        r127, r45, r17
  Const        r128, 2000
  Less         r129, r128, r127
  // where cct1.kind == "complete+verified" &&
  Const        r130, "complete+verified"
  Equal        r131, r126, r130
  // cn.country_code == "[us]" &&
  Const        r13, "country_code"
  Index        r132, r112, r13
  Const        r133, "[us]"
  Equal        r134, r132, r133
  // it1.info == "release dates" &&
  Const        r14, "info"
  Index        r135, r74, r14
  Const        r136, "release dates"
  Equal        r137, r135, r136
  // kt.kind == "movie" &&
  Const        r12, "kind"
  Index        r138, r55, r12
  Const        r139, "movie"
  Equal        r140, r138, r139
  // where cct1.kind == "complete+verified" &&
  Move         r141, r131
  JumpIfFalse  r141, L12
  Move         r141, r134
  // cn.country_code == "[us]" &&
  JumpIfFalse  r141, L12
  Move         r141, r137
  // it1.info == "release dates" &&
  JumpIfFalse  r141, L12
  Move         r141, r140
  // kt.kind == "movie" &&
  JumpIfFalse  r141, L12
  Const        r15, "note"
  Index        r142, r64, r15
  // mi.note.contains("internet") &&
  Const        r143, "internet"
  In           r144, r143, r142
  // kt.kind == "movie" &&
  Move         r141, r144
  // mi.note.contains("internet") &&
  JumpIfFalse  r141, L12
  Const        r14, "info"
  Index        r145, r64, r14
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  Const        r146, "USA:"
  In           r147, r146, r145
  Move         r148, r147
  JumpIfFalse  r148, L13
  Const        r14, "info"
  Index        r149, r64, r14
  Const        r150, "199"
  In           r151, r150, r149
  Move         r152, r151
  JumpIfTrue   r152, L14
  Const        r14, "info"
  Index        r153, r64, r14
  Const        r154, "200"
  In           r155, r154, r153
  Move         r152, r155
L14:
  Move         r148, r152
L13:
  // mi.note.contains("internet") &&
  Move         r141, r148
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  JumpIfFalse  r141, L12
  Move         r141, r129
L12:
  // where cct1.kind == "complete+verified" &&
  JumpIfFalse  r141, L11
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r156, "movie_kind"
  Const        r12, "kind"
  Index        r157, r55, r12
  Const        r158, "complete_us_internet_movie"
  Const        r20, "title"
  Index        r159, r45, r20
  Move         r160, r156
  Move         r161, r157
  Move         r162, r158
  Move         r163, r159
  MakeMap      r164, 2, r160
  // from cc in complete_cast
  Append       r165, r11, r164
  Move         r11, r165
L11:
  // join ct in company_type on ct.id == mc.company_type_id
  Const        r166, 1
  Add          r119, r119, r166
  Jump         L15
L10:
  // join cn in company_name on cn.id == mc.company_id
  Const        r166, 1
  Add          r109, r109, r166
  Jump         L16
L9:
  // join mc in movie_companies on mc.movie_id == t.id
  Const        r166, 1
  Add          r99, r99, r166
  Jump         L17
L8:
  // join k in keyword on k.id == mk.keyword_id
  Const        r166, 1
  Add          r90, r90, r166
  Jump         L18
L7:
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r166, 1
  Add          r80, r80, r166
  Jump         L19
L6:
  // join it1 in info_type on it1.id == mi.info_type_id
  Const        r166, 1
  Add          r71, r71, r166
  Jump         L20
L5:
  // join mi in movie_info on mi.movie_id == t.id
  Const        r166, 1
  Add          r61, r61, r166
  Jump         L21
L4:
  // join kt in kind_type on kt.id == t.kind_id
  Const        r166, 1
  Add          r52, r52, r166
  Jump         L22
L3:
  // join t in title on t.id == cc.movie_id
  Const        r166, 1
  Add          r42, r42, r166
  Jump         L23
L2:
  // join cct1 in comp_cast_type on cct1.id == cc.status_id
  Const        r166, 1
  Add          r32, r32, r166
  Jump         L24
L1:
  // from cc in complete_cast
  Const        r166, 1
  AddInt       r23, r23, r166
  Jump         L25
L0:
  // movie_kind: min(from r in matches select r.movie_kind),
  Const        r168, "movie_kind"
  Const        r169, []
  Const        r18, "movie_kind"
  IterPrep     r170, r11
  Len          r171, r170
  Const        r24, 0
  Move         r172, r24
L27:
  LessInt      r173, r172, r171
  JumpIfFalse  r173, L26
  Index        r174, r170, r172
  Move         r175, r174
  Const        r18, "movie_kind"
  Index        r176, r175, r18
  Append       r177, r169, r176
  Move         r169, r177
  Const        r166, 1
  AddInt       r172, r172, r166
  Jump         L27
L26:
  Min          r178, r169
  // complete_us_internet_movie: min(from r in matches select r.complete_us_internet_movie)
  Const        r179, "complete_us_internet_movie"
  Const        r180, []
  Const        r19, "complete_us_internet_movie"
  IterPrep     r181, r11
  Len          r182, r181
  Const        r24, 0
  Move         r183, r24
L29:
  LessInt      r184, r183, r182
  JumpIfFalse  r184, L28
  Index        r185, r181, r183
  Move         r175, r185
  Const        r19, "complete_us_internet_movie"
  Index        r186, r175, r19
  Append       r187, r180, r186
  Move         r180, r187
  Const        r166, 1
  AddInt       r183, r183, r166
  Jump         L29
L28:
  Min          r188, r180
  // movie_kind: min(from r in matches select r.movie_kind),
  Move         r189, r168
  Move         r190, r178
  // complete_us_internet_movie: min(from r in matches select r.complete_us_internet_movie)
  Move         r191, r179
  Move         r192, r188
  // {
  MakeMap      r193, 2, r189
  Move         r167, r193
  // let result = [
  MakeList     r194, 1, r167
  // json(result)
  JSON         r194
  // expect result == [
  Const        r195, [{"complete_us_internet_movie": "Web Movie", "movie_kind": "movie"}]
  Equal        r196, r194, r195
  Expect       r196
  Return       r0
