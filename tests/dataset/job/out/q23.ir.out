func main (regs=202)
  // let complete_cast = [
  Const        r0, [{"movie_id": 1, "status_id": 1}, {"movie_id": 2, "status_id": 2}]
  // let comp_cast_type = [
  Const        r1, [{"id": 1, "kind": "complete+verified"}, {"id": 2, "kind": "partial"}]
  // let company_name = [
  Const        r2, [{"country_code": "[us]", "id": 1}, {"country_code": "[gb]", "id": 2}]
  // let company_type = [
  Const        r3, [{"id": 1}, {"id": 2}]
  // let info_type = [
  Const        r4, [{"id": 1, "info": "release dates"}, {"id": 2, "info": "other"}]
  // let keyword = [
  Const        r5, [{"id": 1, "keyword": "internet"}, {"id": 2, "keyword": "other"}]
  // let kind_type = [
  Const        r6, [{"id": 1, "kind": "movie"}, {"id": 2, "kind": "series"}]
  // let movie_companies = [
  Const        r7, [{"company_id": 1, "company_type_id": 1, "movie_id": 1}, {"company_id": 2, "company_type_id": 2, "movie_id": 2}]
  // let movie_info = [
  Const        r8, [{"info": "USA: May 2005", "info_type_id": 1, "movie_id": 1, "note": "internet release"}, {"info": "USA: April 1998", "info_type_id": 1, "movie_id": 2, "note": "theater"}]
  // let movie_keyword = [
  Const        r9, [{"keyword_id": 1, "movie_id": 1}, {"keyword_id": 2, "movie_id": 2}]
  // let title = [
  Const        r10, [{"id": 1, "kind_id": 1, "production_year": 2005, "title": "Web Movie"}, {"id": 2, "kind_id": 1, "production_year": 1998, "title": "Old Movie"}]
  // from cc in complete_cast
  Const        r11, []
  // where cct1.kind == "complete+verified" &&
  Const        r12, "kind"
  // cn.country_code == "[us]" &&
  Const        r13, "country_code"
  // it1.info == "release dates" &&
  Const        r14, "info"
  // mi.note.contains("internet") &&
  Const        r15, "note"
  // t.production_year > 2000
  Const        r17, "production_year"
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r18, "movie_kind"
  Const        r19, "complete_us_internet_movie"
  Const        r20, "title"
  // from cc in complete_cast
  IterPrep     r21, r0
  Len          r22, r21
  Const        r24, 0
  Move         r23, r24
L28:
  LessInt      r25, r23, r22
  JumpIfFalse  r25, L0
  Index        r27, r21, r23
  // join cct1 in comp_cast_type on cct1.id == cc.status_id
  IterPrep     r28, r1
  Len          r29, r28
  Const        r30, "id"
  Const        r31, "status_id"
  Move         r32, r24
L27:
  LessInt      r33, r32, r29
  JumpIfFalse  r33, L1
  Index        r35, r28, r32
  Index        r36, r35, r30
  Index        r37, r27, r31
  Equal        r38, r36, r37
  JumpIfFalse  r38, L2
  // join t in title on t.id == cc.movie_id
  IterPrep     r39, r10
  Len          r40, r39
  Const        r41, "movie_id"
  Move         r42, r24
L26:
  LessInt      r43, r42, r40
  JumpIfFalse  r43, L2
  Index        r45, r39, r42
  Index        r46, r45, r30
  Index        r47, r27, r41
  Equal        r48, r46, r47
  JumpIfFalse  r48, L3
  // join kt in kind_type on kt.id == t.kind_id
  IterPrep     r49, r6
  Len          r50, r49
  Const        r51, "kind_id"
  Move         r52, r24
L25:
  LessInt      r53, r52, r50
  JumpIfFalse  r53, L3
  Index        r55, r49, r52
  Index        r56, r55, r30
  Index        r57, r45, r51
  Equal        r58, r56, r57
  JumpIfFalse  r58, L4
  // join mi in movie_info on mi.movie_id == t.id
  IterPrep     r59, r8
  Len          r60, r59
  Move         r61, r24
L24:
  LessInt      r62, r61, r60
  JumpIfFalse  r62, L4
  Index        r64, r59, r61
  Index        r65, r64, r41
  Index        r66, r45, r30
  Equal        r67, r65, r66
  JumpIfFalse  r67, L5
  // join it1 in info_type on it1.id == mi.info_type_id
  IterPrep     r68, r4
  Len          r69, r68
  Const        r70, "info_type_id"
  Move         r71, r24
L23:
  LessInt      r72, r71, r69
  JumpIfFalse  r72, L5
  Index        r74, r68, r71
  Index        r75, r74, r30
  Index        r76, r64, r70
  Equal        r77, r75, r76
  JumpIfFalse  r77, L6
  // join mk in movie_keyword on mk.movie_id == t.id
  IterPrep     r78, r9
  Len          r79, r78
  Move         r80, r24
L22:
  LessInt      r81, r80, r79
  JumpIfFalse  r81, L6
  Index        r83, r78, r80
  Index        r84, r83, r41
  Index        r85, r45, r30
  Equal        r86, r84, r85
  JumpIfFalse  r86, L7
  // join k in keyword on k.id == mk.keyword_id
  IterPrep     r87, r5
  Len          r88, r87
  Const        r89, "keyword_id"
  Move         r90, r24
L21:
  LessInt      r91, r90, r88
  JumpIfFalse  r91, L7
  Index        r93, r87, r90
  Index        r94, r93, r30
  Index        r95, r83, r89
  Equal        r96, r94, r95
  JumpIfFalse  r96, L8
  // join mc in movie_companies on mc.movie_id == t.id
  IterPrep     r97, r7
  Len          r98, r97
  Move         r99, r24
L20:
  LessInt      r100, r99, r98
  JumpIfFalse  r100, L8
  Index        r102, r97, r99
  Index        r103, r102, r41
  Index        r104, r45, r30
  Equal        r105, r103, r104
  JumpIfFalse  r105, L9
  // join cn in company_name on cn.id == mc.company_id
  IterPrep     r106, r2
  Len          r107, r106
  Const        r108, "company_id"
  Move         r109, r24
L19:
  LessInt      r110, r109, r107
  JumpIfFalse  r110, L9
  Index        r112, r106, r109
  Index        r113, r112, r30
  Index        r114, r102, r108
  Equal        r115, r113, r114
  JumpIfFalse  r115, L10
  // join ct in company_type on ct.id == mc.company_type_id
  IterPrep     r116, r3
  Len          r117, r116
  Const        r118, "company_type_id"
  Move         r119, r24
L18:
  LessInt      r120, r119, r117
  JumpIfFalse  r120, L10
  Index        r122, r116, r119
  Index        r123, r122, r30
  Index        r124, r102, r118
  Equal        r125, r123, r124
  JumpIfFalse  r125, L11
  // where cct1.kind == "complete+verified" &&
  Index        r126, r35, r12
  // t.production_year > 2000
  Index        r127, r45, r17
  Const        r128, 2000
  Less         r129, r128, r127
  // where cct1.kind == "complete+verified" &&
  Const        r130, "complete+verified"
  Equal        r131, r126, r130
  // cn.country_code == "[us]" &&
  Index        r132, r112, r13
  Const        r133, "[us]"
  Equal        r134, r132, r133
  // it1.info == "release dates" &&
  Index        r135, r74, r14
  Const        r136, "release dates"
  Equal        r137, r135, r136
  // kt.kind == "movie" &&
  Index        r138, r55, r12
  Const        r139, "movie"
  Equal        r140, r138, r139
  // where cct1.kind == "complete+verified" &&
  Move         r141, r131
  JumpIfFalse  r141, L12
L12:
  // cn.country_code == "[us]" &&
  Move         r142, r134
  JumpIfFalse  r142, L13
L13:
  // it1.info == "release dates" &&
  Move         r143, r137
  JumpIfFalse  r143, L14
L14:
  // kt.kind == "movie" &&
  Move         r144, r140
  JumpIfFalse  r144, L15
  Index        r145, r64, r15
  // mi.note.contains("internet") &&
  Const        r146, "internet"
  In           r148, r146, r145
L15:
  JumpIfFalse  r148, L16
  Index        r149, r64, r14
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  Const        r150, "USA:"
  In           r152, r150, r149
  JumpIfFalse  r152, L16
  Index        r153, r64, r14
  Const        r154, "199"
  In           r156, r154, r153
  JumpIfTrue   r156, L16
  Index        r157, r64, r14
  Const        r158, "200"
  In           r156, r158, r157
L16:
  Move         r160, r156
  JumpIfFalse  r160, L17
  Move         r160, r129
L17:
  // where cct1.kind == "complete+verified" &&
  JumpIfFalse  r160, L11
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r161, "movie_kind"
  Index        r162, r55, r12
  Const        r163, "complete_us_internet_movie"
  Index        r164, r45, r20
  Move         r165, r161
  Move         r166, r162
  Move         r167, r163
  Move         r168, r164
  MakeMap      r169, 2, r165
  // from cc in complete_cast
  Append       r11, r11, r169
L11:
  // join ct in company_type on ct.id == mc.company_type_id
  Const        r171, 1
  Add          r119, r119, r171
  Jump         L18
L10:
  // join cn in company_name on cn.id == mc.company_id
  Add          r109, r109, r171
  Jump         L19
L9:
  // join mc in movie_companies on mc.movie_id == t.id
  Add          r99, r99, r171
  Jump         L20
L8:
  // join k in keyword on k.id == mk.keyword_id
  Add          r90, r90, r171
  Jump         L21
L7:
  // join mk in movie_keyword on mk.movie_id == t.id
  Add          r80, r80, r171
  Jump         L22
L6:
  // join it1 in info_type on it1.id == mi.info_type_id
  Add          r71, r71, r171
  Jump         L23
L5:
  // join mi in movie_info on mi.movie_id == t.id
  Add          r61, r61, r171
  Jump         L24
L4:
  // join kt in kind_type on kt.id == t.kind_id
  Add          r52, r52, r171
  Jump         L25
L3:
  // join t in title on t.id == cc.movie_id
  Add          r42, r42, r171
  Jump         L26
L2:
  // join cct1 in comp_cast_type on cct1.id == cc.status_id
  Jump         L27
L1:
  // from cc in complete_cast
  AddInt       r23, r23, r171
  Jump         L28
L0:
  // movie_kind: min(from r in matches select r.movie_kind),
  Const        r172, "movie_kind"
  Const        r173, []
  IterPrep     r174, r11
  Len          r175, r174
  Move         r176, r24
L30:
  LessInt      r177, r176, r175
  JumpIfFalse  r177, L29
  Index        r179, r174, r176
  Index        r180, r179, r18
  Append       r173, r173, r180
  AddInt       r176, r176, r171
  Jump         L30
L29:
  Min          r182, r173
  // complete_us_internet_movie: min(from r in matches select r.complete_us_internet_movie)
  Const        r183, "complete_us_internet_movie"
  Const        r184, []
  IterPrep     r185, r11
  Len          r186, r185
  Move         r187, r24
L32:
  LessInt      r188, r187, r186
  JumpIfFalse  r188, L31
  Index        r179, r185, r187
  Index        r190, r179, r19
  Append       r184, r184, r190
  AddInt       r187, r187, r171
  Jump         L32
L31:
  Min          r192, r184
  // movie_kind: min(from r in matches select r.movie_kind),
  Move         r193, r172
  Move         r194, r182
  // complete_us_internet_movie: min(from r in matches select r.complete_us_internet_movie)
  Move         r195, r183
  Move         r196, r192
  // {
  MakeMap      r198, 2, r193
  // let result = [
  MakeList     r199, 1, r198
  // json(result)
  JSON         r199
  // expect result == [
  Const        r200, [{"complete_us_internet_movie": "Web Movie", "movie_kind": "movie"}]
  Equal        r201, r199, r200
  Expect       r201
  Return       r0
