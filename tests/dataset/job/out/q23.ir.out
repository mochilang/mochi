func main (regs=38)
  // let complete_cast = [
  Const        r0, [{"movie_id": 1, "status_id": 1}, {"movie_id": 2, "status_id": 2}]
L6:
  // let comp_cast_type = [
  Const        r1, [{"id": 1, "kind": "complete+verified"}, {"id": 2, "kind": "partial"}]
L13:
  // let company_name = [
  Const        r2, [{"country_code": "[us]", "id": 1}, {"country_code": "[gb]", "id": 2}]
L14:
  // let company_type = [
  Const        r3, [{"id": 1}, {"id": 2}]
  // let info_type = [
  Const        r4, [{"id": 1, "info": "release dates"}, {"id": 2, "info": "other"}]
L9:
  // let keyword = [
  Const        r5, [{"id": 1, "keyword": "internet"}, {"id": 2, "keyword": "other"}]
  // let kind_type = [
  Const        r6, [{"id": 1, "kind": "movie"}, {"id": 2, "kind": "series"}]
L15:
  // let movie_companies = [
  Const        r7, [{"company_id": 1, "company_type_id": 1, "movie_id": 1}, {"company_id": 2, "company_type_id": 2, "movie_id": 2}]
L16:
  // let movie_info = [
  Const        r8, [{"info": "USA: May 2005", "info_type_id": 1, "movie_id": 1, "note": "internet release"}, {"info": "USA: April 1998", "info_type_id": 1, "movie_id": 2, "note": "theater"}]
L17:
  // let movie_keyword = [
  Const        r9, [{"keyword_id": 1, "movie_id": 1}, {"keyword_id": 2, "movie_id": 2}]
  // let title = [
  Const        r10, [{"id": 1, "kind_id": 1, "production_year": 2005, "title": "Web Movie"}, {"id": 2, "kind_id": 1, "production_year": 1998, "title": "Old Movie"}]
  // from cc in complete_cast
  Const        r11, []
  // where cct1.kind == "complete+verified" &&
  Const        r12, "kind"
  // cn.country_code == "[us]" &&
  Const        r13, "country_code"
L12:
  // it1.info == "release dates" &&
  Const        r14, "info"
L10:
  // mi.note.contains("internet") &&
  Const        r15, "note"
L7:
  // t.production_year > 2000
  Const        r16, "production_year"
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r17, "movie_kind"
  Const        r18, "complete_us_internet_movie"
  Const        r19, "title"
  // from cc in complete_cast
  IterPrep     r20, r0
  Len          r21, r20
L5:
  Const        r22, 0
L8:
  Move         r23, r22
L19:
  LessInt      r24, r23, r21
  JumpIfFalse  r24, L0
L2:
  Index        r24, r20, r23
  // join cct1 in comp_cast_type on cct1.id == cc.status_id
  IterPrep     r20, r1
  Len          r1, r20
  Const        r21, "id"
L18:
  Const        r25, "status_id"
  Move         r26, r22
  LessInt      r27, r26, r1
  JumpIfFalse  r27, L1
  Index        r27, r20, r26
  Index        r26, r27, r21
L11:
  Index        r20, r24, r25
  Equal        r25, r26, r20
  JumpIfFalse  r25, L2
  // join t in title on t.id == cc.movie_id
  IterPrep     r25, r10
  Len          r10, r25
  Const        r20, "movie_id"
  Move         r26, r22
  LessInt      r1, r26, r10
  JumpIfFalse  r1, L2
  Index        r10, r25, r26
  Index        r25, r10, r21
  Index        r28, r24, r20
  Equal        r24, r25, r28
  JumpIfFalse  r24, L3
  // join kt in kind_type on kt.id == t.kind_id
  IterPrep     r24, r6
  Len          r6, r24
  Const        r28, "kind_id"
  Move         r25, r22
  LessInt      r29, r25, r6
  JumpIfFalse  r29, L3
  Index        r29, r24, r25
  Index        r24, r29, r21
  Index        r6, r10, r28
  Equal        r28, r24, r6
  JumpIfFalse  r28, L4
  // join mi in movie_info on mi.movie_id == t.id
  IterPrep     r28, r8
  Len          r8, r28
  Move         r6, r22
  LessInt      r24, r6, r8
  JumpIfFalse  r24, L4
  Index        r24, r28, r6
  Index        r28, r24, r20
  Index        r8, r10, r21
  Equal        r30, r28, r8
  JumpIfFalse  r30, L5
  // join it1 in info_type on it1.id == mi.info_type_id
  IterPrep     r30, r4
  Len          r4, r30
  Const        r8, "info_type_id"
  Move         r28, r22
  LessInt      r31, r28, r4
  JumpIfFalse  r31, L5
  Index        r31, r30, r28
  Index        r30, r31, r21
  Index        r4, r24, r8
  Equal        r8, r30, r4
  JumpIfFalse  r8, L5
  // join mk in movie_keyword on mk.movie_id == t.id
  IterPrep     r8, r9
  Len          r9, r8
  Move         r4, r22
  LessInt      r32, r4, r9
  JumpIfFalse  r32, L5
  Index        r32, r8, r4
  Index        r8, r32, r20
  Index        r9, r10, r21
  Equal        r33, r8, r9
  JumpIfFalse  r33, L6
  // join k in keyword on k.id == mk.keyword_id
  IterPrep     r33, r5
  Len          r5, r33
  Const        r8, "keyword_id"
  Move         r34, r22
  LessInt      r35, r34, r5
  JumpIfFalse  r35, L6
  Index        r35, r33, r34
  Index        r33, r35, r21
  Index        r35, r32, r8
  Equal        r8, r33, r35
  JumpIfFalse  r8, L7
  // join mc in movie_companies on mc.movie_id == t.id
  IterPrep     r35, r7
  Len          r7, r35
  Move         r33, r22
  LessInt      r32, r33, r7
  JumpIfFalse  r32, L7
  Index        r32, r35, r33
  Index        r35, r32, r20
  Index        r20, r10, r21
  Equal        r7, r35, r20
  JumpIfFalse  r7, L5
  // join cn in company_name on cn.id == mc.company_id
  IterPrep     r7, r2
  Len          r2, r7
  Const        r20, "company_id"
  Move         r35, r22
  LessInt      r5, r35, r2
  JumpIfFalse  r5, L5
  Index        r5, r7, r35
  Index        r2, r5, r21
  Index        r36, r32, r20
  Equal        r20, r2, r36
  JumpIfFalse  r20, L5
  // join ct in company_type on ct.id == mc.company_type_id
  IterPrep     r20, r3
  Len          r3, r20
  Const        r36, "company_type_id"
  Move         r2, r22
  LessInt      r37, r2, r3
  JumpIfFalse  r37, L5
  Index        r37, r20, r2
  Index        r20, r37, r21
  Index        r37, r32, r36
  Equal        r36, r20, r37
  JumpIfFalse  r36, L8
  // where cct1.kind == "complete+verified" &&
  Index        r36, r27, r12
  // t.production_year > 2000
  Index        r27, r10, r16
  Const        r16, 2000
  Less         r37, r16, r27
  // where cct1.kind == "complete+verified" &&
  Const        r27, "complete+verified"
  Equal        r20, r36, r27
  // cn.country_code == "[us]" &&
  Index        r27, r5, r13
  Const        r5, "[us]"
  Equal        r13, r27, r5
  // it1.info == "release dates" &&
  Index        r5, r31, r14
  Const        r31, "release dates"
  Equal        r27, r5, r31
  // kt.kind == "movie" &&
  Index        r31, r29, r12
  Const        r5, "movie"
  Equal        r36, r31, r5
  // where cct1.kind == "complete+verified" &&
  Move         r5, r20
  JumpIfFalse  r5, L9
  // cn.country_code == "[us]" &&
  Move         r5, r13
  JumpIfFalse  r5, L10
  // it1.info == "release dates" &&
  Move         r5, r27
  JumpIfFalse  r5, L11
  // kt.kind == "movie" &&
  Move         r5, r36
  JumpIfFalse  r5, L12
  Index        r5, r24, r15
  // mi.note.contains("internet") &&
  Const        r15, "internet"
  In           r36, r15, r5
  JumpIfFalse  r36, L6
  Index        r36, r24, r14
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  Const        r15, "USA:"
  In           r5, r15, r36
  JumpIfFalse  r5, L6
  Index        r5, r24, r14
  Const        r15, "199"
  In           r36, r15, r5
  JumpIfTrue   r36, L6
  Index        r15, r24, r14
  Const        r14, "200"
  In           r36, r14, r15
  Move         r14, r36
  JumpIfFalse  r14, L13
  Move         r14, r37
  // where cct1.kind == "complete+verified" &&
  JumpIfFalse  r14, L8
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Move         r14, r17
  Index        r36, r29, r12
  Move         r29, r18
  Index        r12, r10, r19
  Move         r10, r14
  Move         r14, r36
  Move         r36, r29
  Move         r29, r12
  MakeMap      r12, 2, r10
  // from cc in complete_cast
  Append       r11, r11, r12
  // join ct in company_type on ct.id == mc.company_type_id
  Const        r12, 1
  Add          r2, r2, r12
  Jump         L7
  // join cn in company_name on cn.id == mc.company_id
  Add          r35, r35, r12
  Jump         L14
  // join mc in movie_companies on mc.movie_id == t.id
  Add          r33, r33, r12
  Jump         L15
  // join k in keyword on k.id == mk.keyword_id
  Add          r34, r34, r12
  Jump         L16
  // join mk in movie_keyword on mk.movie_id == t.id
  Add          r4, r4, r12
  Jump         L17
  // join it1 in info_type on it1.id == mi.info_type_id
  Add          r28, r28, r12
  Jump         L18
  // join mi in movie_info on mi.movie_id == t.id
  Add          r6, r6, r12
  Jump         L19
L4:
  // join kt in kind_type on kt.id == t.kind_id
  Add          r25, r25, r12
  Jump         L7
L3:
  // join t in title on t.id == cc.movie_id
  Add          r26, r26, r12
  Jump         L6
L1:
  // from cc in complete_cast
  AddInt       r23, r23, r12
  Jump         L5
L0:
  // movie_kind: min(from r in matches select r.movie_kind),
  Move         r16, r17
  Const        r1, []
  IterPrep     r26, r11
  Len          r23, r26
  Move         r2, r22
L21:
  LessInt      r3, r2, r23
  JumpIfFalse  r3, L20
  Index        r3, r26, r2
  Index        r26, r3, r17
  Append       r1, r1, r26
  AddInt       r2, r2, r12
  Jump         L21
L20:
  Min          r26, r1
  // complete_us_internet_movie: min(from r in matches select r.complete_us_internet_movie)
  Move         r1, r18
  Const        r2, []
  IterPrep     r17, r11
  Len          r11, r17
  Move         r23, r22
L23:
  LessInt      r22, r23, r11
  JumpIfFalse  r22, L22
  Index        r3, r17, r23
  Index        r22, r3, r18
  Append       r2, r2, r22
  AddInt       r23, r23, r12
  Jump         L23
L22:
  Min          r22, r2
  // movie_kind: min(from r in matches select r.movie_kind),
  Move         r2, r16
  Move         r16, r26
  // complete_us_internet_movie: min(from r in matches select r.complete_us_internet_movie)
  Move         r26, r1
  Move         r1, r22
  // {
  MakeMap      r22, 2, r2
  // let result = [
  MakeList     r1, 1, r22
  // json(result)
  JSON         r1
  // expect result == [
  Const        r22, [{"complete_us_internet_movie": "Web Movie", "movie_kind": "movie"}]
  Equal        r26, r1, r22
  Expect       r26
  Return       r0
