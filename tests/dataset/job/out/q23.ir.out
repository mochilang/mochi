func main (regs=51)
  // let complete_cast = [
  Const        r0, [{"movie_id": 1, "status_id": 1}, {"movie_id": 2, "status_id": 2}]
L12:
  // let comp_cast_type = [
  Const        r1, [{"id": 1, "kind": "complete+verified"}, {"id": 2, "kind": "partial"}]
  // let company_name = [
  Const        r2, [{"country_code": "[us]", "id": 1}, {"country_code": "[gb]", "id": 2}]
  // let company_type = [
  Const        r3, [{"id": 1}, {"id": 2}]
  // let info_type = [
  Const        r4, [{"id": 1, "info": "release dates"}, {"id": 2, "info": "other"}]
  // let keyword = [
  Const        r5, [{"id": 1, "keyword": "internet"}, {"id": 2, "keyword": "other"}]
L22:
  // let kind_type = [
  Const        r6, [{"id": 1, "kind": "movie"}, {"id": 2, "kind": "series"}]
L17:
  // let movie_companies = [
  Const        r7, [{"company_id": 1, "company_type_id": 1, "movie_id": 1}, {"company_id": 2, "company_type_id": 2, "movie_id": 2}]
  // let movie_info = [
  Const        r8, [{"info": "USA: May 2005", "info_type_id": 1, "movie_id": 1, "note": "internet release"}, {"info": "USA: April 1998", "info_type_id": 1, "movie_id": 2, "note": "theater"}]
L20:
  // let movie_keyword = [
  Const        r9, [{"keyword_id": 1, "movie_id": 1}, {"keyword_id": 2, "movie_id": 2}]
  // let title = [
  Const        r10, [{"id": 1, "kind_id": 1, "production_year": 2005, "title": "Web Movie"}, {"id": 2, "kind_id": 1, "production_year": 1998, "title": "Old Movie"}]
  // from cc in complete_cast
  Const        r11, []
  // where cct1.kind == "complete+verified" &&
  Const        r12, "kind"
  // cn.country_code == "[us]" &&
  Const        r13, "country_code"
  // it1.info == "release dates" &&
  Const        r14, "info"
  // mi.note.contains("internet") &&
  Const        r15, "note"
  Const        r16, "contains"
  // t.production_year > 2000
  Const        r16, "production_year"
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r17, "movie_kind"
  Const        r18, "complete_us_internet_movie"
L21:
  Const        r19, "title"
L23:
  // from cc in complete_cast
  IterPrep     r20, r0
  Len          r21, r20
  Const        r22, 0
L24:
  Move         r23, r22
  LessInt      r24, r23, r21
  JumpIfFalse  r24, L0
  Index        r21, r20, r23
L15:
  Move         r20, r21
  // join cct1 in comp_cast_type on cct1.id == cc.status_id
  IterPrep     r21, r1
  Len          r1, r21
  Const        r25, "id"
  Const        r26, "status_id"
  Move         r27, r22
  LessInt      r28, r27, r1
  JumpIfFalse  r28, L1
L16:
  Index        r1, r21, r27
L19:
  Move         r28, r1
L18:
  Index        r21, r28, r25
  Index        r29, r20, r26
  Equal        r26, r21, r29
  JumpIfFalse  r26, L2
  // join t in title on t.id == cc.movie_id
  IterPrep     r21, r10
  Len          r29, r21
  Const        r26, "movie_id"
  Move         r10, r22
  LessInt      r30, r10, r29
  JumpIfFalse  r30, L2
L14:
  Index        r29, r21, r10
L13:
  Move         r30, r29
  Index        r21, r30, r25
  Index        r29, r20, r26
  Equal        r20, r21, r29
  JumpIfFalse  r20, L3
  // join kt in kind_type on kt.id == t.kind_id
  IterPrep     r29, r6
  Len          r20, r29
  Const        r6, "kind_id"
  Move         r31, r22
  LessInt      r32, r31, r20
  JumpIfFalse  r32, L3
  Index        r20, r29, r31
  Move         r32, r20
  Index        r29, r32, r25
  Index        r20, r30, r6
  Equal        r6, r29, r20
  JumpIfFalse  r6, L4
  // join mi in movie_info on mi.movie_id == t.id
  IterPrep     r29, r8
  Len          r20, r29
  Move         r8, r22
  LessInt      r33, r8, r20
  JumpIfFalse  r33, L4
  Index        r20, r29, r8
  Move         r33, r20
  Index        r29, r33, r26
  Index        r20, r30, r25
  Equal        r34, r29, r20
  JumpIfFalse  r34, L5
  // join it1 in info_type on it1.id == mi.info_type_id
  IterPrep     r29, r4
  Len          r20, r29
  Const        r34, "info_type_id"
  Move         r4, r22
  LessInt      r35, r4, r20
  JumpIfFalse  r35, L5
  Index        r35, r29, r4
  Move         r29, r35
  Index        r35, r29, r25
  Index        r36, r33, r34
  Equal        r34, r35, r36
  JumpIfFalse  r34, L6
  // join mk in movie_keyword on mk.movie_id == t.id
  IterPrep     r35, r9
  Len          r36, r35
  Move         r34, r22
  LessInt      r9, r34, r36
  JumpIfFalse  r9, L6
  Index        r36, r35, r34
  Move         r35, r36
  Index        r36, r35, r26
  Index        r37, r30, r25
  Equal        r38, r36, r37
  JumpIfFalse  r38, L7
  // join k in keyword on k.id == mk.keyword_id
  IterPrep     r36, r5
  Len          r37, r36
  Const        r38, "keyword_id"
  Move         r5, r22
  LessInt      r39, r5, r37
  JumpIfFalse  r39, L7
  Index        r37, r36, r5
  Move         r39, r37
  Index        r36, r39, r25
  Index        r39, r35, r38
  Equal        r35, r36, r39
  JumpIfFalse  r35, L8
  // join mc in movie_companies on mc.movie_id == t.id
  IterPrep     r38, r7
  Len          r36, r38
  Move         r39, r22
  LessInt      r35, r39, r36
  JumpIfFalse  r35, L8
  Index        r7, r38, r39
  Move         r36, r7
  Index        r35, r36, r26
  Index        r38, r30, r25
  Equal        r7, r35, r38
  JumpIfFalse  r7, L9
  // join cn in company_name on cn.id == mc.company_id
  IterPrep     r26, r2
  Len          r35, r26
  Const        r7, "company_id"
  Move         r2, r22
  LessInt      r40, r2, r35
  JumpIfFalse  r40, L9
  Index        r35, r26, r2
  Move         r40, r35
  Index        r26, r40, r25
  Index        r35, r36, r7
  Equal        r7, r26, r35
  JumpIfFalse  r7, L10
  // join ct in company_type on ct.id == mc.company_type_id
  IterPrep     r26, r3
  Len          r35, r26
  Const        r3, "company_type_id"
  Move         r41, r22
  LessInt      r42, r41, r35
  JumpIfFalse  r42, L10
  Index        r35, r26, r41
  Move         r42, r35
  Index        r26, r42, r25
  Index        r35, r36, r3
  Equal        r25, r26, r35
  JumpIfFalse  r25, L11
  // where cct1.kind == "complete+verified" &&
  Index        r42, r28, r12
  // t.production_year > 2000
  Index        r36, r30, r16
  Const        r3, 2000
  Less         r26, r3, r36
  // where cct1.kind == "complete+verified" &&
  Const        r35, "complete+verified"
  Equal        r25, r42, r35
  // cn.country_code == "[us]" &&
  Index        r28, r40, r13
  Const        r16, "[us]"
  Equal        r3, r28, r16
  // it1.info == "release dates" &&
  Index        r42, r29, r14
  Const        r35, "release dates"
  Equal        r13, r42, r35
  // kt.kind == "movie" &&
  Index        r40, r32, r12
  Const        r28, "movie"
  Equal        r16, r40, r28
  // where cct1.kind == "complete+verified" &&
  Move         r29, r25
  JumpIfFalse  r29, L12
  Move         r29, r3
  // cn.country_code == "[us]" &&
  JumpIfFalse  r29, L12
  Move         r29, r13
  // it1.info == "release dates" &&
  JumpIfFalse  r29, L12
  Move         r29, r16
  // kt.kind == "movie" &&
  JumpIfFalse  r29, L12
  Index        r42, r33, r15
  // mi.note.contains("internet") &&
  Const        r35, "internet"
  In           r40, r35, r42
  // kt.kind == "movie" &&
  Move         r29, r40
  // mi.note.contains("internet") &&
  JumpIfFalse  r29, L12
  Index        r25, r33, r14
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  Const        r3, "USA:"
  In           r13, r3, r25
  Move         r16, r13
  JumpIfFalse  r16, L13
  Index        r15, r33, r14
  Const        r42, "199"
  In           r35, r42, r15
  Move         r40, r35
  JumpIfTrue   r40, L14
  Index        r25, r33, r14
  Const        r3, "200"
  In           r13, r3, r25
  Move         r40, r13
  Move         r16, r40
  // mi.note.contains("internet") &&
  Move         r29, r16
  // (mi.info.contains("USA:") && (mi.info.contains("199") || mi.info.contains("200"))) &&
  JumpIfFalse  r29, L12
  Move         r29, r26
  // where cct1.kind == "complete+verified" &&
  JumpIfFalse  r29, L11
  // select { movie_kind: kt.kind, complete_us_internet_movie: t.title }
  Const        r15, "movie_kind"
  Index        r42, r32, r12
  Const        r35, "complete_us_internet_movie"
  Index        r14, r30, r19
  Move         r43, r15
  Move         r44, r42
  Move         r45, r35
  Move         r46, r14
  MakeMap      r33, 2, r43
  // from cc in complete_cast
  Append       r26, r11, r33
  Move         r11, r26
L11:
  // join ct in company_type on ct.id == mc.company_type_id
  Const        r29, 1
  Add          r41, r41, r29
  Jump         L15
L10:
  // join cn in company_name on cn.id == mc.company_id
  Add          r2, r2, r29
  Jump         L16
L9:
  // join mc in movie_companies on mc.movie_id == t.id
  Add          r39, r39, r29
  Jump         L17
L8:
  // join k in keyword on k.id == mk.keyword_id
  Add          r5, r5, r29
  Jump         L18
L7:
  // join mk in movie_keyword on mk.movie_id == t.id
  Add          r34, r34, r29
  Jump         L19
L6:
  // join it1 in info_type on it1.id == mi.info_type_id
  Add          r4, r4, r29
  Jump         L20
L5:
  // join mi in movie_info on mi.movie_id == t.id
  Add          r8, r8, r29
  Jump         L21
L4:
  // join kt in kind_type on kt.id == t.kind_id
  Add          r31, r31, r29
  Jump         L22
L3:
  // join t in title on t.id == cc.movie_id
  Add          r10, r10, r29
  Jump         L23
L2:
  // join cct1 in comp_cast_type on cct1.id == cc.status_id
  Add          r27, r27, r29
  Jump         L12
L1:
  // from cc in complete_cast
  AddInt       r23, r23, r29
  Jump         L24
L0:
  // movie_kind: min(from r in matches select r.movie_kind),
  Const        r16, "movie_kind"
  Const        r40, []
  IterPrep     r25, r11
  Len          r3, r25
  Move         r13, r22
L26:
  LessInt      r12, r13, r3
  JumpIfFalse  r12, L25
  Index        r32, r25, r13
  Move         r19, r32
  Index        r30, r19, r17
  Append       r15, r40, r30
  Move         r40, r15
  AddInt       r13, r13, r29
  Jump         L26
L25:
  Min          r42, r40
  // complete_us_internet_movie: min(from r in matches select r.complete_us_internet_movie)
  Const        r35, "complete_us_internet_movie"
  Const        r14, []
  IterPrep     r43, r11
  Len          r44, r43
  Move         r45, r22
L28:
  LessInt      r46, r45, r44
  JumpIfFalse  r46, L27
  Index        r33, r43, r45
  Move         r19, r33
  Index        r26, r19, r18
  Append       r23, r14, r26
  Move         r14, r23
  AddInt       r45, r45, r29
  Jump         L28
L27:
  Min          r24, r14
  // movie_kind: min(from r in matches select r.movie_kind),
  Move         r47, r16
  Move         r48, r42
  // complete_us_internet_movie: min(from r in matches select r.complete_us_internet_movie)
  Move         r49, r35
  Move         r50, r24
  // {
  MakeMap      r27, 2, r47
  Move         r1, r27
  // let result = [
  MakeList     r10, 1, r1
  // json(result)
  JSON         r10
  // expect result == [
  Const        r21, [{"complete_us_internet_movie": "Web Movie", "movie_kind": "movie"}]
  Equal        r31, r10, r21
  Expect       r31
  Return       r0
