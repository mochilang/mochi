func main (regs=390)
  // let aka_name = [
  Const        r0, [{"person_id": 1}, {"person_id": 2}]
  // let complete_cast = [
  Const        r1, [{"movie_id": 1, "status_id": 2, "subject_id": 1}, {"movie_id": 2, "status_id": 2, "subject_id": 1}]
  // let comp_cast_type = [
  Const        r2, [{"id": 1, "kind": "cast"}, {"id": 2, "kind": "complete+verified"}, {"id": 3, "kind": "other"}]
  // let char_name = [
  Const        r3, [{"id": 1, "name": "Queen"}, {"id": 2, "name": "Princess"}]
  // let cast_info = [
  Const        r4, [{"movie_id": 1, "note": "(voice)", "person_id": 1, "person_role_id": 1, "role_id": 1}, {"movie_id": 2, "note": "(voice)", "person_id": 2, "person_role_id": 2, "role_id": 1}]
  // let company_name = [
  Const        r5, [{"country_code": "[us]", "id": 1}, {"country_code": "[uk]", "id": 2}]
  // let info_type = [
  Const        r6, [{"id": 1, "info": "release dates"}, {"id": 2, "info": "trivia"}, {"id": 3, "info": "other"}]
  // let keyword = [
  Const        r7, [{"id": 1, "keyword": "computer-animation"}, {"id": 2, "keyword": "action"}]
  // let movie_companies = [
  Const        r8, [{"company_id": 1, "movie_id": 1}, {"company_id": 2, "movie_id": 2}]
  // let movie_info = [
  Const        r9, [{"info": "USA:2004", "info_type_id": 1, "movie_id": 1}, {"info": "USA:1995", "info_type_id": 1, "movie_id": 2}]
  // let movie_keyword = [
  Const        r10, [{"keyword_id": 1, "movie_id": 1}, {"keyword_id": 2, "movie_id": 2}]
  // let name = [
  Const        r11, [{"gender": "f", "id": 1, "name": "Angela Aniston"}, {"gender": "m", "id": 2, "name": "Bob Brown"}]
  // let person_info = [
  Const        r12, [{"info_type_id": 2, "person_id": 1}, {"info_type_id": 2, "person_id": 2}]
  // let role_type = [
  Const        r13, [{"id": 1, "role": "actress"}, {"id": 2, "role": "actor"}]
  // let title = [
  Const        r14, [{"id": 1, "production_year": 2004, "title": "Shrek 2"}, {"id": 2, "production_year": 1999, "title": "Old Film"}]
  // from an in aka_name
  Const        r15, []
  // cct1.kind == "cast" &&
  Const        r16, "kind"
  // chn.name == "Queen" &&
  Const        r17, "name"
  // (ci.note == "(voice)" ||
  Const        r18, "note"
  // cn.country_code == "[us]" &&
  Const        r19, "country_code"
  // it.info == "release dates" &&
  Const        r20, "info"
  // k.keyword == "computer-animation" &&
  Const        r21, "keyword"
  // n.gender == "f" &&
  Const        r23, "gender"
  // rt.role == "actress" &&
  Const        r25, "role"
  // t.title == "Shrek 2" &&
  Const        r26, "title"
  // t.production_year >= 2000 &&
  Const        r27, "production_year"
  // t.id == mi.movie_id &&
  Const        r28, "id"
  Const        r29, "movie_id"
  // cn.id == mc.company_id &&
  Const        r30, "company_id"
  // it.id == mi.info_type_id &&
  Const        r31, "info_type_id"
  // n.id == ci.person_id &&
  Const        r32, "person_id"
  // rt.id == ci.role_id &&
  Const        r33, "role_id"
  // chn.id == ci.person_role_id &&
  Const        r34, "person_role_id"
  // k.id == mk.keyword_id &&
  Const        r35, "keyword_id"
  // cct1.id == cc.subject_id &&
  Const        r36, "subject_id"
  // cct2.id == cc.status_id
  Const        r37, "status_id"
  // voiced_char: chn.name,
  Const        r38, "voiced_char"
  // voicing_actress: n.name,
  Const        r39, "voicing_actress"
  // voiced_animation: t.title
  Const        r40, "voiced_animation"
  // from an in aka_name
  IterPrep     r41, r0
  Len          r42, r41
  Const        r44, 0
  Move         r43, r44
L80:
  LessInt      r45, r43, r42
  JumpIfFalse  r45, L0
  Index        r47, r41, r43
  // from cc in complete_cast
  IterPrep     r48, r1
  Len          r49, r48
  Move         r50, r44
L79:
  LessInt      r51, r50, r49
  JumpIfFalse  r51, L1
  Index        r53, r48, r50
  // from cct1 in comp_cast_type
  IterPrep     r54, r2
  Len          r55, r54
  Move         r56, r44
L78:
  LessInt      r57, r56, r55
  JumpIfFalse  r57, L2
  Index        r59, r54, r56
  // from cct2 in comp_cast_type
  IterPrep     r60, r2
  Len          r61, r60
  Move         r62, r44
L77:
  LessInt      r63, r62, r61
  JumpIfFalse  r63, L3
  Index        r65, r60, r62
  // from chn in char_name
  IterPrep     r66, r3
  Len          r67, r66
  Move         r68, r44
L76:
  LessInt      r69, r68, r67
  JumpIfFalse  r69, L4
  Index        r71, r66, r68
  // from ci in cast_info
  IterPrep     r72, r4
  Len          r73, r72
  Move         r74, r44
L75:
  LessInt      r75, r74, r73
  JumpIfFalse  r75, L5
  Index        r77, r72, r74
  // from cn in company_name
  IterPrep     r78, r5
  Len          r79, r78
  Move         r80, r44
L74:
  LessInt      r81, r80, r79
  JumpIfFalse  r81, L6
  Index        r83, r78, r80
  // from it in info_type
  IterPrep     r84, r6
  Len          r85, r84
  Move         r86, r44
L73:
  LessInt      r87, r86, r85
  JumpIfFalse  r87, L7
  Index        r89, r84, r86
  // from it3 in info_type
  IterPrep     r90, r6
  Len          r91, r90
  Move         r92, r44
L72:
  LessInt      r93, r92, r91
  JumpIfFalse  r93, L8
  Index        r95, r90, r92
  // from k in keyword
  IterPrep     r96, r7
  Len          r97, r96
  Move         r98, r44
L71:
  LessInt      r99, r98, r97
  JumpIfFalse  r99, L9
  Index        r101, r96, r98
  // from mc in movie_companies
  IterPrep     r102, r8
  Len          r103, r102
  Move         r104, r44
L70:
  LessInt      r105, r104, r103
  JumpIfFalse  r105, L10
  Index        r107, r102, r104
  // from mi in movie_info
  IterPrep     r108, r9
  Len          r109, r108
  Move         r110, r44
L69:
  LessInt      r111, r110, r109
  JumpIfFalse  r111, L11
  Index        r113, r108, r110
  // from mk in movie_keyword
  IterPrep     r114, r10
  Len          r115, r114
  Move         r116, r44
L68:
  LessInt      r117, r116, r115
  JumpIfFalse  r117, L12
  Index        r119, r114, r116
  // from n in name
  IterPrep     r120, r11
  Len          r121, r120
  Move         r122, r44
L67:
  LessInt      r123, r122, r121
  JumpIfFalse  r123, L13
  Index        r125, r120, r122
  // from pi in person_info
  IterPrep     r126, r12
  Len          r127, r126
  Move         r128, r44
L66:
  LessInt      r129, r128, r127
  JumpIfFalse  r129, L14
  Index        r131, r126, r128
  // from rt in role_type
  IterPrep     r132, r13
  Len          r133, r132
  Move         r134, r44
L65:
  LessInt      r135, r134, r133
  JumpIfFalse  r135, L15
  Index        r137, r132, r134
  // from t in title
  IterPrep     r138, r14
  Len          r139, r138
  Move         r140, r44
L64:
  LessInt      r141, r140, r139
  JumpIfFalse  r141, L16
  Index        r143, r138, r140
  // cct1.kind == "cast" &&
  Index        r144, r59, r16
  // t.production_year >= 2000 &&
  Index        r145, r143, r27
  Const        r146, 2000
  LessEq       r147, r146, r145
  // t.production_year <= 2010 &&
  Index        r148, r143, r27
  Const        r149, 2010
  LessEq       r150, r148, r149
  // cct1.kind == "cast" &&
  Const        r151, "cast"
  Equal        r152, r144, r151
  // cct2.kind == "complete+verified" &&
  Index        r153, r65, r16
  Const        r154, "complete+verified"
  Equal        r155, r153, r154
  // chn.name == "Queen" &&
  Index        r156, r71, r17
  Const        r157, "Queen"
  Equal        r158, r156, r157
  // cn.country_code == "[us]" &&
  Index        r159, r83, r19
  Const        r160, "[us]"
  Equal        r161, r159, r160
  // it.info == "release dates" &&
  Index        r162, r89, r20
  Const        r163, "release dates"
  Equal        r164, r162, r163
  // it3.info == "trivia" &&
  Index        r165, r95, r20
  Const        r166, "trivia"
  Equal        r167, r165, r166
  // k.keyword == "computer-animation" &&
  Index        r168, r101, r21
  Const        r169, "computer-animation"
  Equal        r170, r168, r169
  // n.gender == "f" &&
  Index        r171, r125, r23
  Const        r172, "f"
  Equal        r173, r171, r172
  // rt.role == "actress" &&
  Index        r174, r137, r25
  Const        r175, "actress"
  Equal        r176, r174, r175
  // t.title == "Shrek 2" &&
  Index        r177, r143, r26
  Const        r178, "Shrek 2"
  Equal        r179, r177, r178
  // t.id == mi.movie_id &&
  Index        r180, r143, r28
  Index        r181, r113, r29
  Equal        r182, r180, r181
  // t.id == mc.movie_id &&
  Index        r183, r143, r28
  Index        r184, r107, r29
  Equal        r185, r183, r184
  // t.id == ci.movie_id &&
  Index        r186, r143, r28
  Index        r187, r77, r29
  Equal        r188, r186, r187
  // t.id == mk.movie_id &&
  Index        r189, r143, r28
  Index        r190, r119, r29
  Equal        r191, r189, r190
  // t.id == cc.movie_id &&
  Index        r192, r143, r28
  Index        r193, r53, r29
  Equal        r194, r192, r193
  // mc.movie_id == ci.movie_id &&
  Index        r195, r107, r29
  Index        r196, r77, r29
  Equal        r197, r195, r196
  // mc.movie_id == mi.movie_id &&
  Index        r198, r107, r29
  Index        r199, r113, r29
  Equal        r200, r198, r199
  // mc.movie_id == mk.movie_id &&
  Index        r201, r107, r29
  Index        r202, r119, r29
  Equal        r203, r201, r202
  // mc.movie_id == cc.movie_id &&
  Index        r204, r107, r29
  Index        r205, r53, r29
  Equal        r206, r204, r205
  // mi.movie_id == ci.movie_id &&
  Index        r207, r113, r29
  Index        r208, r77, r29
  Equal        r209, r207, r208
  // mi.movie_id == mk.movie_id &&
  Index        r210, r113, r29
  Index        r211, r119, r29
  Equal        r212, r210, r211
  // mi.movie_id == cc.movie_id &&
  Index        r213, r113, r29
  Index        r214, r53, r29
  Equal        r215, r213, r214
  // ci.movie_id == mk.movie_id &&
  Index        r216, r77, r29
  Index        r217, r119, r29
  Equal        r218, r216, r217
  // ci.movie_id == cc.movie_id &&
  Index        r219, r77, r29
  Index        r220, r53, r29
  Equal        r221, r219, r220
  // mk.movie_id == cc.movie_id &&
  Index        r222, r119, r29
  Index        r223, r53, r29
  Equal        r224, r222, r223
  // cn.id == mc.company_id &&
  Index        r225, r83, r28
  Index        r226, r107, r30
  Equal        r227, r225, r226
  // it.id == mi.info_type_id &&
  Index        r228, r89, r28
  Index        r229, r113, r31
  Equal        r230, r228, r229
  // n.id == ci.person_id &&
  Index        r231, r125, r28
  Index        r232, r77, r32
  Equal        r233, r231, r232
  // rt.id == ci.role_id &&
  Index        r234, r137, r28
  Index        r235, r77, r33
  Equal        r236, r234, r235
  // n.id == an.person_id &&
  Index        r237, r125, r28
  Index        r238, r47, r32
  Equal        r239, r237, r238
  // ci.person_id == an.person_id &&
  Index        r240, r77, r32
  Index        r241, r47, r32
  Equal        r242, r240, r241
  // chn.id == ci.person_role_id &&
  Index        r243, r71, r28
  Index        r244, r77, r34
  Equal        r245, r243, r244
  // n.id == pi.person_id &&
  Index        r246, r125, r28
  Index        r247, r131, r32
  Equal        r248, r246, r247
  // ci.person_id == pi.person_id &&
  Index        r249, r77, r32
  Index        r250, r131, r32
  Equal        r251, r249, r250
  // it3.id == pi.info_type_id &&
  Index        r252, r95, r28
  Index        r253, r131, r31
  Equal        r254, r252, r253
  // k.id == mk.keyword_id &&
  Index        r255, r101, r28
  Index        r256, r119, r35
  Equal        r257, r255, r256
  // cct1.id == cc.subject_id &&
  Index        r258, r59, r28
  Index        r259, r53, r36
  Equal        r260, r258, r259
  // cct2.id == cc.status_id
  Index        r261, r65, r28
  Index        r262, r53, r37
  Equal        r263, r261, r262
  // cct1.kind == "cast" &&
  Move         r264, r152
  JumpIfFalse  r264, L17
L17:
  // cct2.kind == "complete+verified" &&
  Move         r265, r155
  JumpIfFalse  r265, L18
L18:
  // chn.name == "Queen" &&
  Move         r266, r158
  JumpIfFalse  r266, L19
  // (ci.note == "(voice)" ||
  Index        r267, r77, r18
  Const        r268, "(voice)"
  Equal        r269, r267, r268
  // ci.note == "(voice) (uncredited)" ||
  Index        r270, r77, r18
  Const        r271, "(voice) (uncredited)"
  Equal        r272, r270, r271
  // ci.note == "(voice: English version)") &&
  Index        r273, r77, r18
  Const        r274, "(voice: English version)"
  Equal        r275, r273, r274
  // (ci.note == "(voice)" ||
  Move         r276, r269
  JumpIfTrue   r276, L20
L20:
  // ci.note == "(voice) (uncredited)" ||
  Move         r277, r272
  JumpIfTrue   r277, L19
L19:
  // ci.note == "(voice: English version)") &&
  Move         r278, r275
  JumpIfFalse  r278, L21
L21:
  // cn.country_code == "[us]" &&
  Move         r279, r161
  JumpIfFalse  r279, L22
L22:
  // it.info == "release dates" &&
  Move         r280, r164
  JumpIfFalse  r280, L23
L23:
  // it3.info == "trivia" &&
  Move         r281, r167
  JumpIfFalse  r281, L24
L24:
  // k.keyword == "computer-animation" &&
  Move         r282, r170
  JumpIfFalse  r282, L25
  Index        r283, r113, r20
  // (mi.info.starts_with("Japan:200") || mi.info.starts_with("USA:200")) &&
  Const        r286, 9
  Len          r287, r283
  LessEq       r288, r286, r287
  JumpIfFalse  r288, L26
  Jump         L27
L26:
  Const        r292, false
L27:
  JumpIfTrue   r292, L25
  Index        r293, r113, r20
  Const        r296, 7
  Len          r297, r293
  LessEq       r298, r296, r297
  JumpIfFalse  r298, L28
  Jump         L25
L28:
  Const        r292, false
L25:
  Move         r302, r292
  JumpIfFalse  r302, L29
L29:
  // n.gender == "f" &&
  Move         r303, r173
  JumpIfFalse  r303, L30
  Index        r304, r125, r17
  // n.name.contains("An") &&
  Const        r305, "An"
  In           r307, r305, r304
L30:
  JumpIfFalse  r307, L31
L31:
  // rt.role == "actress" &&
  Move         r308, r176
  JumpIfFalse  r308, L32
L32:
  // t.title == "Shrek 2" &&
  Move         r309, r179
  JumpIfFalse  r309, L33
L33:
  // t.production_year >= 2000 &&
  Move         r310, r147
  JumpIfFalse  r310, L34
L34:
  // t.production_year <= 2010 &&
  Move         r311, r150
  JumpIfFalse  r311, L35
L35:
  // t.id == mi.movie_id &&
  Move         r312, r182
  JumpIfFalse  r312, L36
L36:
  // t.id == mc.movie_id &&
  Move         r313, r185
  JumpIfFalse  r313, L37
L37:
  // t.id == ci.movie_id &&
  Move         r314, r188
  JumpIfFalse  r314, L38
L38:
  // t.id == mk.movie_id &&
  Move         r315, r191
  JumpIfFalse  r315, L39
L39:
  // t.id == cc.movie_id &&
  Move         r316, r194
  JumpIfFalse  r316, L40
L40:
  // mc.movie_id == ci.movie_id &&
  Move         r317, r197
  JumpIfFalse  r317, L41
L41:
  // mc.movie_id == mi.movie_id &&
  Move         r318, r200
  JumpIfFalse  r318, L42
L42:
  // mc.movie_id == mk.movie_id &&
  Move         r319, r203
  JumpIfFalse  r319, L43
L43:
  // mc.movie_id == cc.movie_id &&
  Move         r320, r206
  JumpIfFalse  r320, L44
L44:
  // mi.movie_id == ci.movie_id &&
  Move         r321, r209
  JumpIfFalse  r321, L45
L45:
  // mi.movie_id == mk.movie_id &&
  Move         r322, r212
  JumpIfFalse  r322, L46
L46:
  // mi.movie_id == cc.movie_id &&
  Move         r323, r215
  JumpIfFalse  r323, L47
L47:
  // ci.movie_id == mk.movie_id &&
  Move         r324, r218
  JumpIfFalse  r324, L48
L48:
  // ci.movie_id == cc.movie_id &&
  Move         r325, r221
  JumpIfFalse  r325, L49
L49:
  // mk.movie_id == cc.movie_id &&
  Move         r326, r224
  JumpIfFalse  r326, L50
L50:
  // cn.id == mc.company_id &&
  Move         r327, r227
  JumpIfFalse  r327, L51
L51:
  // it.id == mi.info_type_id &&
  Move         r328, r230
  JumpIfFalse  r328, L52
L52:
  // n.id == ci.person_id &&
  Move         r329, r233
  JumpIfFalse  r329, L53
L53:
  // rt.id == ci.role_id &&
  Move         r330, r236
  JumpIfFalse  r330, L54
L54:
  // n.id == an.person_id &&
  Move         r331, r239
  JumpIfFalse  r331, L55
L55:
  // ci.person_id == an.person_id &&
  Move         r332, r242
  JumpIfFalse  r332, L56
L56:
  // chn.id == ci.person_role_id &&
  Move         r333, r245
  JumpIfFalse  r333, L57
L57:
  // n.id == pi.person_id &&
  Move         r334, r248
  JumpIfFalse  r334, L58
L58:
  // ci.person_id == pi.person_id &&
  Move         r335, r251
  JumpIfFalse  r335, L59
L59:
  // it3.id == pi.info_type_id &&
  Move         r336, r254
  JumpIfFalse  r336, L60
L60:
  // k.id == mk.keyword_id &&
  Move         r337, r257
  JumpIfFalse  r337, L61
L61:
  // cct1.id == cc.subject_id &&
  Move         r338, r260
  JumpIfFalse  r338, L62
  Move         r338, r263
L62:
  // where (
  JumpIfFalse  r338, L63
  // voiced_char: chn.name,
  Const        r339, "voiced_char"
  Index        r340, r71, r17
  // voicing_actress: n.name,
  Const        r341, "voicing_actress"
  Index        r342, r125, r17
  // voiced_animation: t.title
  Const        r343, "voiced_animation"
  Index        r344, r143, r26
  // select {
  MakeMap      r348, 3, r339
  // from an in aka_name
  Append       r15, r15, r348
L63:
  // from t in title
  Const        r350, 1
  AddInt       r140, r140, r350
  Jump         L64
L16:
  // from rt in role_type
  AddInt       r134, r134, r350
  Jump         L65
L15:
  // from pi in person_info
  AddInt       r128, r128, r350
  Jump         L66
L14:
  // from n in name
  AddInt       r122, r122, r350
  Jump         L67
L13:
  // from mk in movie_keyword
  AddInt       r116, r116, r350
  Jump         L68
L12:
  // from mi in movie_info
  AddInt       r110, r110, r350
  Jump         L69
L11:
  // from mc in movie_companies
  AddInt       r104, r104, r350
  Jump         L70
L10:
  // from k in keyword
  AddInt       r98, r98, r350
  Jump         L71
L9:
  // from it3 in info_type
  AddInt       r92, r92, r350
  Jump         L72
L8:
  // from it in info_type
  AddInt       r86, r86, r350
  Jump         L73
L7:
  // from cn in company_name
  AddInt       r80, r80, r350
  Jump         L74
L6:
  // from ci in cast_info
  AddInt       r74, r74, r350
  Jump         L75
L5:
  // from chn in char_name
  AddInt       r68, r68, r350
  Jump         L76
L4:
  // from cct2 in comp_cast_type
  AddInt       r62, r62, r350
  Jump         L77
L3:
  // from cct1 in comp_cast_type
  AddInt       r56, r56, r350
  Jump         L78
L2:
  // from cc in complete_cast
  AddInt       r50, r50, r350
  Jump         L79
L1:
  // from an in aka_name
  Jump         L80
L0:
  // voiced_char: min(from x in matches select x.voiced_char),
  Const        r351, "voiced_char"
  Const        r352, []
  IterPrep     r353, r15
  Len          r354, r353
  Move         r355, r44
L82:
  LessInt      r356, r355, r354
  JumpIfFalse  r356, L81
  Index        r358, r353, r355
  Index        r359, r358, r38
  Append       r352, r352, r359
  AddInt       r355, r355, r350
  Jump         L82
L81:
  // voicing_actress: min(from x in matches select x.voicing_actress),
  Const        r363, []
  IterPrep     r364, r15
  Len          r365, r364
  Move         r366, r44
L84:
  LessInt      r367, r366, r365
  JumpIfFalse  r367, L83
  Index        r358, r364, r366
  Index        r369, r358, r39
  Append       r363, r363, r369
  AddInt       r366, r366, r350
  Jump         L84
L83:
  // voiced_animation: min(from x in matches select x.voiced_animation)
  Const        r373, []
  IterPrep     r374, r15
  Len          r375, r374
  Move         r376, r44
L86:
  LessInt      r377, r376, r375
  JumpIfFalse  r377, L85
  Index        r358, r374, r376
  Index        r379, r358, r40
  Append       r373, r373, r379
  AddInt       r376, r376, r350
  Jump         L86
L85:
  // {
  MakeMap      r386, 3, r351
  // let result = [
  MakeList     r387, 1, r386
  // json(result)
  JSON         r387
  // expect result == [
  Const        r388, [{"voiced_animation": "Shrek 2", "voiced_char": "Queen", "voicing_actress": "Angela Aniston"}]
  Equal        r389, r387, r388
  Expect       r389
  Return       r0
