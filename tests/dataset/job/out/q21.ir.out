func main (regs=422)
  // let company_name = [
  Const        r0, [{"country_code": "[us]", "id": 1, "name": "ACME Film Works"}, {"country_code": "[pl]", "id": 2, "name": "Polish Warner"}]
  // let company_type = [
  Const        r1, [{"id": 1, "kind": "production companies"}, {"id": 2, "kind": "other"}]
  // let keyword = [
  Const        r2, [{"id": 1, "keyword": "sequel"}, {"id": 2, "keyword": "drama"}]
  // let link_type = [
  Const        r3, [{"id": 1, "link": "is follow up"}, {"id": 2, "link": "references"}]
  // let title = [
  Const        r4, [{"id": 10, "production_year": 1975, "title": "Western Return"}, {"id": 20, "production_year": 2015, "title": "Other Movie"}]
  // let movie_companies = [
  Const        r5, [{"company_id": 1, "company_type_id": 1, "movie_id": 10, "note": nil}, {"company_id": 2, "company_type_id": 1, "movie_id": 20, "note": nil}]
  // let movie_info = [
  Const        r6, [{"info": "Sweden", "movie_id": 10}, {"info": "USA", "movie_id": 20}]
  // let movie_keyword = [
  Const        r7, [{"keyword_id": 1, "movie_id": 10}, {"keyword_id": 2, "movie_id": 20}]
  // let movie_link = [
  Const        r8, [{"link_type_id": 1, "movie_id": 10}, {"link_type_id": 2, "movie_id": 20}]
  // let allowed_countries = ["Sweden", "Norway", "Germany", "Denmark", "Swedish", "Denish", "Norwegian", "German"]
  Const        r9, ["Sweden", "Norway", "Germany", "Denmark", "Swedish", "Denish", "Norwegian", "German"]
  // from cn in company_name
  Const        r10, []
  // where cn.country_code != "[pl]" &&
  Const        r11, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r12, "name"
  Const        r13, "contains"
  Const        r14, "name"
  Const        r15, "contains"
  // ct.kind == "production companies" &&
  Const        r16, "kind"
  // k.keyword == "sequel" &&
  Const        r17, "keyword"
  // lt.link.contains("follow") &&
  Const        r18, "link"
  Const        r19, "contains"
  // mc.note == null &&
  Const        r20, "note"
  // (mi.info in allowed_countries) &&
  Const        r21, "info"
  // t.production_year >= 1950 && t.production_year <= 2000
  Const        r22, "production_year"
  Const        r23, "production_year"
  // company_name: cn.name,
  Const        r24, "company_name"
  Const        r25, "name"
  // link_type: lt.link,
  Const        r26, "link_type"
  Const        r27, "link"
  // western_follow_up: t.title
  Const        r28, "western_follow_up"
  Const        r29, "title"
  // from cn in company_name
  IterPrep     r30, r0
  Len          r31, r30
  Const        r33, 0
  Move         r32, r33
L20:
  LessInt      r34, r32, r31
  JumpIfFalse  r34, L0
  Index        r35, r30, r32
  Move         r36, r35
  // join mc in movie_companies on mc.company_id == cn.id
  IterPrep     r37, r5
  Len          r38, r37
  Const        r39, "company_id"
  Const        r40, "id"
  // where cn.country_code != "[pl]" &&
  Const        r41, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r42, "name"
  Const        r43, "contains"
  Const        r44, "name"
  Const        r45, "contains"
  // ct.kind == "production companies" &&
  Const        r46, "kind"
  // k.keyword == "sequel" &&
  Const        r47, "keyword"
  // lt.link.contains("follow") &&
  Const        r48, "link"
  Const        r49, "contains"
  // mc.note == null &&
  Const        r50, "note"
  // (mi.info in allowed_countries) &&
  Const        r51, "info"
  // t.production_year >= 1950 && t.production_year <= 2000
  Const        r52, "production_year"
  Const        r53, "production_year"
  // company_name: cn.name,
  Const        r54, "company_name"
  Const        r55, "name"
  // link_type: lt.link,
  Const        r56, "link_type"
  Const        r57, "link"
  // western_follow_up: t.title
  Const        r58, "western_follow_up"
  Const        r59, "title"
  // join mc in movie_companies on mc.company_id == cn.id
  Const        r61, 0
  Move         r60, r61
L19:
  LessInt      r62, r60, r38
  JumpIfFalse  r62, L1
  Index        r63, r37, r60
  Move         r64, r63
  Const        r65, "company_id"
  Index        r66, r64, r65
  Const        r67, "id"
  Index        r68, r36, r67
  Equal        r69, r66, r68
  JumpIfFalse  r69, L2
  // join ct in company_type on ct.id == mc.company_type_id
  IterPrep     r70, r1
  Len          r71, r70
  Const        r72, "id"
  Const        r73, "company_type_id"
  // where cn.country_code != "[pl]" &&
  Const        r74, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r75, "name"
  Const        r76, "contains"
  Const        r77, "name"
  Const        r78, "contains"
  // ct.kind == "production companies" &&
  Const        r79, "kind"
  // k.keyword == "sequel" &&
  Const        r80, "keyword"
  // lt.link.contains("follow") &&
  Const        r81, "link"
  Const        r82, "contains"
  // mc.note == null &&
  Const        r83, "note"
  // (mi.info in allowed_countries) &&
  Const        r84, "info"
  // t.production_year >= 1950 && t.production_year <= 2000
  Const        r85, "production_year"
  Const        r86, "production_year"
  // company_name: cn.name,
  Const        r87, "company_name"
  Const        r88, "name"
  // link_type: lt.link,
  Const        r89, "link_type"
  Const        r90, "link"
  // western_follow_up: t.title
  Const        r91, "western_follow_up"
  Const        r92, "title"
  // join ct in company_type on ct.id == mc.company_type_id
  Const        r94, 0
  Move         r93, r94
L18:
  LessInt      r95, r93, r71
  JumpIfFalse  r95, L2
  Index        r96, r70, r93
  Move         r97, r96
  Const        r98, "id"
  Index        r99, r97, r98
  Const        r100, "company_type_id"
  Index        r101, r64, r100
  Equal        r102, r99, r101
  JumpIfFalse  r102, L3
  // join t in title on t.id == mc.movie_id
  IterPrep     r103, r4
  Len          r104, r103
  Const        r105, "id"
  Const        r106, "movie_id"
  // where cn.country_code != "[pl]" &&
  Const        r107, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r108, "name"
  Const        r109, "contains"
  Const        r110, "name"
  Const        r111, "contains"
  // ct.kind == "production companies" &&
  Const        r112, "kind"
  // k.keyword == "sequel" &&
  Const        r113, "keyword"
  // lt.link.contains("follow") &&
  Const        r114, "link"
  Const        r115, "contains"
  // mc.note == null &&
  Const        r116, "note"
  // (mi.info in allowed_countries) &&
  Const        r117, "info"
  // t.production_year >= 1950 && t.production_year <= 2000
  Const        r118, "production_year"
  Const        r119, "production_year"
  // company_name: cn.name,
  Const        r120, "company_name"
  Const        r121, "name"
  // link_type: lt.link,
  Const        r122, "link_type"
  Const        r123, "link"
  // western_follow_up: t.title
  Const        r124, "western_follow_up"
  Const        r125, "title"
  // join t in title on t.id == mc.movie_id
  Const        r127, 0
  Move         r126, r127
L17:
  LessInt      r128, r126, r104
  JumpIfFalse  r128, L3
  Index        r129, r103, r126
  Move         r130, r129
  Const        r131, "id"
  Index        r132, r130, r131
  Const        r133, "movie_id"
  Index        r134, r64, r133
  Equal        r135, r132, r134
  JumpIfFalse  r135, L4
  // join mk in movie_keyword on mk.movie_id == t.id
  IterPrep     r136, r7
  Len          r137, r136
  Const        r138, "movie_id"
  Const        r139, "id"
  // where cn.country_code != "[pl]" &&
  Const        r140, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r141, "name"
  Const        r142, "contains"
  Const        r143, "name"
  Const        r144, "contains"
  // ct.kind == "production companies" &&
  Const        r145, "kind"
  // k.keyword == "sequel" &&
  Const        r146, "keyword"
  // lt.link.contains("follow") &&
  Const        r147, "link"
  Const        r148, "contains"
  // mc.note == null &&
  Const        r149, "note"
  // (mi.info in allowed_countries) &&
  Const        r150, "info"
  // t.production_year >= 1950 && t.production_year <= 2000
  Const        r151, "production_year"
  Const        r152, "production_year"
  // company_name: cn.name,
  Const        r153, "company_name"
  Const        r154, "name"
  // link_type: lt.link,
  Const        r155, "link_type"
  Const        r156, "link"
  // western_follow_up: t.title
  Const        r157, "western_follow_up"
  Const        r158, "title"
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r160, 0
  Move         r159, r160
L16:
  LessInt      r161, r159, r137
  JumpIfFalse  r161, L4
  Index        r162, r136, r159
  Move         r163, r162
  Const        r164, "movie_id"
  Index        r165, r163, r164
  Const        r166, "id"
  Index        r167, r130, r166
  Equal        r168, r165, r167
  JumpIfFalse  r168, L5
  // join k in keyword on k.id == mk.keyword_id
  IterPrep     r169, r2
  Len          r170, r169
  Const        r171, "id"
  Const        r172, "keyword_id"
  // where cn.country_code != "[pl]" &&
  Const        r173, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r174, "name"
  Const        r175, "contains"
  Const        r176, "name"
  Const        r177, "contains"
  // ct.kind == "production companies" &&
  Const        r178, "kind"
  // k.keyword == "sequel" &&
  Const        r179, "keyword"
  // lt.link.contains("follow") &&
  Const        r180, "link"
  Const        r181, "contains"
  // mc.note == null &&
  Const        r182, "note"
  // (mi.info in allowed_countries) &&
  Const        r183, "info"
  // t.production_year >= 1950 && t.production_year <= 2000
  Const        r184, "production_year"
  Const        r185, "production_year"
  // company_name: cn.name,
  Const        r186, "company_name"
  Const        r187, "name"
  // link_type: lt.link,
  Const        r188, "link_type"
  Const        r189, "link"
  // western_follow_up: t.title
  Const        r190, "western_follow_up"
  Const        r191, "title"
  // join k in keyword on k.id == mk.keyword_id
  Const        r193, 0
  Move         r192, r193
L15:
  LessInt      r194, r192, r170
  JumpIfFalse  r194, L5
  Index        r195, r169, r192
  Move         r196, r195
  Const        r197, "id"
  Index        r198, r196, r197
  Const        r199, "keyword_id"
  Index        r200, r163, r199
  Equal        r201, r198, r200
  JumpIfFalse  r201, L6
  // join ml in movie_link on ml.movie_id == t.id
  IterPrep     r202, r8
  Len          r203, r202
  Const        r204, "movie_id"
  Const        r205, "id"
  // where cn.country_code != "[pl]" &&
  Const        r206, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r207, "name"
  Const        r208, "contains"
  Const        r209, "name"
  Const        r210, "contains"
  // ct.kind == "production companies" &&
  Const        r211, "kind"
  // k.keyword == "sequel" &&
  Const        r212, "keyword"
  // lt.link.contains("follow") &&
  Const        r213, "link"
  Const        r214, "contains"
  // mc.note == null &&
  Const        r215, "note"
  // (mi.info in allowed_countries) &&
  Const        r216, "info"
  // t.production_year >= 1950 && t.production_year <= 2000
  Const        r217, "production_year"
  Const        r218, "production_year"
  // company_name: cn.name,
  Const        r219, "company_name"
  Const        r220, "name"
  // link_type: lt.link,
  Const        r221, "link_type"
  Const        r222, "link"
  // western_follow_up: t.title
  Const        r223, "western_follow_up"
  Const        r224, "title"
  // join ml in movie_link on ml.movie_id == t.id
  Const        r226, 0
  Move         r225, r226
L14:
  LessInt      r227, r225, r203
  JumpIfFalse  r227, L6
  Index        r228, r202, r225
  Move         r229, r228
  Const        r230, "movie_id"
  Index        r231, r229, r230
  Const        r232, "id"
  Index        r233, r130, r232
  Equal        r234, r231, r233
  JumpIfFalse  r234, L7
  // join lt in link_type on lt.id == ml.link_type_id
  IterPrep     r235, r3
  Len          r236, r235
  Const        r237, "id"
  Const        r238, "link_type_id"
  // where cn.country_code != "[pl]" &&
  Const        r239, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r240, "name"
  Const        r241, "contains"
  Const        r242, "name"
  Const        r243, "contains"
  // ct.kind == "production companies" &&
  Const        r244, "kind"
  // k.keyword == "sequel" &&
  Const        r245, "keyword"
  // lt.link.contains("follow") &&
  Const        r246, "link"
  Const        r247, "contains"
  // mc.note == null &&
  Const        r248, "note"
  // (mi.info in allowed_countries) &&
  Const        r249, "info"
  // t.production_year >= 1950 && t.production_year <= 2000
  Const        r250, "production_year"
  Const        r251, "production_year"
  // company_name: cn.name,
  Const        r252, "company_name"
  Const        r253, "name"
  // link_type: lt.link,
  Const        r254, "link_type"
  Const        r255, "link"
  // western_follow_up: t.title
  Const        r256, "western_follow_up"
  Const        r257, "title"
  // join lt in link_type on lt.id == ml.link_type_id
  Const        r259, 0
  Move         r258, r259
L13:
  LessInt      r260, r258, r236
  JumpIfFalse  r260, L7
  Index        r261, r235, r258
  Move         r262, r261
  Const        r263, "id"
  Index        r264, r262, r263
  Const        r265, "link_type_id"
  Index        r266, r229, r265
  Equal        r267, r264, r266
  JumpIfFalse  r267, L8
  // join mi in movie_info on mi.movie_id == t.id
  IterPrep     r268, r6
  Len          r269, r268
  Const        r270, "movie_id"
  Const        r271, "id"
  // where cn.country_code != "[pl]" &&
  Const        r272, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r273, "name"
  Const        r274, "contains"
  Const        r275, "name"
  Const        r276, "contains"
  // ct.kind == "production companies" &&
  Const        r277, "kind"
  // k.keyword == "sequel" &&
  Const        r278, "keyword"
  // lt.link.contains("follow") &&
  Const        r279, "link"
  Const        r280, "contains"
  // mc.note == null &&
  Const        r281, "note"
  // (mi.info in allowed_countries) &&
  Const        r282, "info"
  // t.production_year >= 1950 && t.production_year <= 2000
  Const        r283, "production_year"
  Const        r284, "production_year"
  // company_name: cn.name,
  Const        r285, "company_name"
  Const        r286, "name"
  // link_type: lt.link,
  Const        r287, "link_type"
  Const        r288, "link"
  // western_follow_up: t.title
  Const        r289, "western_follow_up"
  Const        r290, "title"
  // join mi in movie_info on mi.movie_id == t.id
  Const        r292, 0
  Move         r291, r292
L12:
  LessInt      r293, r291, r269
  JumpIfFalse  r293, L8
  Index        r294, r268, r291
  Move         r295, r294
  Const        r296, "movie_id"
  Index        r297, r295, r296
  Const        r298, "id"
  Index        r299, r130, r298
  Equal        r300, r297, r299
  JumpIfFalse  r300, L9
  // where cn.country_code != "[pl]" &&
  Const        r301, "country_code"
  Index        r302, r36, r301
  // t.production_year >= 1950 && t.production_year <= 2000
  Const        r303, "production_year"
  Index        r304, r130, r303
  Const        r305, 1950
  LessEq       r306, r305, r304
  Const        r307, "production_year"
  Index        r308, r130, r307
  Const        r309, 2000
  LessEq       r310, r308, r309
  // where cn.country_code != "[pl]" &&
  Const        r311, "[pl]"
  NotEqual     r312, r302, r311
  // ct.kind == "production companies" &&
  Const        r313, "kind"
  Index        r314, r97, r313
  Const        r315, "production companies"
  Equal        r316, r314, r315
  // k.keyword == "sequel" &&
  Const        r317, "keyword"
  Index        r318, r196, r317
  Const        r319, "sequel"
  Equal        r320, r318, r319
  // mc.note == null &&
  Const        r321, "note"
  Index        r322, r64, r321
  Const        r323, nil
  Equal        r324, r322, r323
  // where cn.country_code != "[pl]" &&
  Move         r325, r312
  JumpIfFalse  r325, L10
  Const        r326, "name"
  Index        r327, r36, r326
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r328, "Film"
  In           r329, r328, r327
  Move         r330, r329
  JumpIfTrue   r330, L11
  Const        r331, "name"
  Index        r332, r36, r331
  Const        r333, "Warner"
  In           r334, r333, r332
  Move         r330, r334
L11:
  // where cn.country_code != "[pl]" &&
  Move         r325, r330
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  JumpIfFalse  r325, L10
  Move         r325, r316
  // ct.kind == "production companies" &&
  JumpIfFalse  r325, L10
  Move         r325, r320
  // k.keyword == "sequel" &&
  JumpIfFalse  r325, L10
  Const        r335, "link"
  Index        r336, r262, r335
  // lt.link.contains("follow") &&
  Const        r337, "follow"
  In           r338, r337, r336
  // k.keyword == "sequel" &&
  Move         r325, r338
  // lt.link.contains("follow") &&
  JumpIfFalse  r325, L10
  Move         r325, r324
  // mc.note == null &&
  JumpIfFalse  r325, L10
  // (mi.info in allowed_countries) &&
  Const        r339, "info"
  Index        r340, r295, r339
  In           r341, r340, r9
  // mc.note == null &&
  Move         r325, r341
  // (mi.info in allowed_countries) &&
  JumpIfFalse  r325, L10
  Move         r325, r306
  // t.production_year >= 1950 && t.production_year <= 2000
  JumpIfFalse  r325, L10
  Move         r325, r310
L10:
  // where cn.country_code != "[pl]" &&
  JumpIfFalse  r325, L9
  // company_name: cn.name,
  Const        r342, "company_name"
  Const        r343, "name"
  Index        r344, r36, r343
  // link_type: lt.link,
  Const        r345, "link_type"
  Const        r346, "link"
  Index        r347, r262, r346
  // western_follow_up: t.title
  Const        r348, "western_follow_up"
  Const        r349, "title"
  Index        r350, r130, r349
  // company_name: cn.name,
  Move         r351, r342
  Move         r352, r344
  // link_type: lt.link,
  Move         r353, r345
  Move         r354, r347
  // western_follow_up: t.title
  Move         r355, r348
  Move         r356, r350
  // select {
  MakeMap      r357, 3, r351
  // from cn in company_name
  Append       r358, r10, r357
  Move         r10, r358
L9:
  // join mi in movie_info on mi.movie_id == t.id
  Const        r359, 1
  Add          r291, r291, r359
  Jump         L12
L8:
  // join lt in link_type on lt.id == ml.link_type_id
  Const        r360, 1
  Add          r258, r258, r360
  Jump         L13
L7:
  // join ml in movie_link on ml.movie_id == t.id
  Const        r361, 1
  Add          r225, r225, r361
  Jump         L14
L6:
  // join k in keyword on k.id == mk.keyword_id
  Const        r362, 1
  Add          r192, r192, r362
  Jump         L15
L5:
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r363, 1
  Add          r159, r159, r363
  Jump         L16
L4:
  // join t in title on t.id == mc.movie_id
  Const        r364, 1
  Add          r126, r126, r364
  Jump         L17
L3:
  // join ct in company_type on ct.id == mc.company_type_id
  Const        r365, 1
  Add          r93, r93, r365
  Jump         L18
L2:
  // join mc in movie_companies on mc.company_id == cn.id
  Const        r366, 1
  Add          r60, r60, r366
  Jump         L19
L1:
  // from cn in company_name
  Const        r367, 1
  AddInt       r32, r32, r367
  Jump         L20
L0:
  // company_name: min(from r in rows select r.company_name),
  Const        r368, "company_name"
  Const        r369, []
  Const        r370, "company_name"
  IterPrep     r371, r10
  Len          r372, r371
  Const        r374, 0
  Move         r373, r374
L22:
  LessInt      r375, r373, r372
  JumpIfFalse  r375, L21
  Index        r376, r371, r373
  Move         r377, r376
  Const        r378, "company_name"
  Index        r379, r377, r378
  Append       r380, r369, r379
  Move         r369, r380
  Const        r381, 1
  AddInt       r373, r373, r381
  Jump         L22
L21:
  Min          r382, r369
  // link_type: min(from r in rows select r.link_type),
  Const        r383, "link_type"
  Const        r384, []
  Const        r385, "link_type"
  IterPrep     r386, r10
  Len          r387, r386
  Const        r389, 0
  Move         r388, r389
L24:
  LessInt      r390, r388, r387
  JumpIfFalse  r390, L23
  Index        r391, r386, r388
  Move         r377, r391
  Const        r392, "link_type"
  Index        r393, r377, r392
  Append       r394, r384, r393
  Move         r384, r394
  Const        r395, 1
  AddInt       r388, r388, r395
  Jump         L24
L23:
  Min          r396, r384
  // western_follow_up: min(from r in rows select r.western_follow_up)
  Const        r397, "western_follow_up"
  Const        r398, []
  Const        r399, "western_follow_up"
  IterPrep     r400, r10
  Len          r401, r400
  Const        r403, 0
  Move         r402, r403
L26:
  LessInt      r404, r402, r401
  JumpIfFalse  r404, L25
  Index        r405, r400, r402
  Move         r377, r405
  Const        r406, "western_follow_up"
  Index        r407, r377, r406
  Append       r408, r398, r407
  Move         r398, r408
  Const        r409, 1
  AddInt       r402, r402, r409
  Jump         L26
L25:
  Min          r410, r398
  // company_name: min(from r in rows select r.company_name),
  Move         r411, r368
  Move         r412, r382
  // link_type: min(from r in rows select r.link_type),
  Move         r413, r383
  Move         r414, r396
  // western_follow_up: min(from r in rows select r.western_follow_up)
  Move         r415, r397
  Move         r416, r410
  // {
  MakeMap      r417, 3, r411
  Move         r418, r417
  // let result = [
  MakeList     r419, 1, r418
  // json(result)
  JSON         r419
  // expect result == [
  Const        r420, [{"company_name": "ACME Film Works", "link_type": "is follow up", "western_follow_up": "Western Return"}]
  Equal        r421, r419, r420
  Expect       r421
  Return       r0
