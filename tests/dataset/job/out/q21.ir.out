func main (regs=198)
  // let company_name = [
  Const        r0, [{"country_code": "[us]", "id": 1, "name": "ACME Film Works"}, {"country_code": "[pl]", "id": 2, "name": "Polish Warner"}]
  // let company_type = [
  Const        r1, [{"id": 1, "kind": "production companies"}, {"id": 2, "kind": "other"}]
  // let keyword = [
  Const        r2, [{"id": 1, "keyword": "sequel"}, {"id": 2, "keyword": "drama"}]
  // let link_type = [
  Const        r3, [{"id": 1, "link": "is follow up"}, {"id": 2, "link": "references"}]
  // let title = [
  Const        r4, [{"id": 10, "production_year": 1975, "title": "Western Return"}, {"id": 20, "production_year": 2015, "title": "Other Movie"}]
  // let movie_companies = [
  Const        r5, [{"company_id": 1, "company_type_id": 1, "movie_id": 10, "note": nil}, {"company_id": 2, "company_type_id": 1, "movie_id": 20, "note": nil}]
  // let movie_info = [
  Const        r6, [{"info": "Sweden", "movie_id": 10}, {"info": "USA", "movie_id": 20}]
  // let movie_keyword = [
  Const        r7, [{"keyword_id": 1, "movie_id": 10}, {"keyword_id": 2, "movie_id": 20}]
  // let movie_link = [
  Const        r8, [{"link_type_id": 1, "movie_id": 10}, {"link_type_id": 2, "movie_id": 20}]
  // let allowed_countries = ["Sweden", "Norway", "Germany", "Denmark", "Swedish", "Denish", "Norwegian", "German"]
  Const        r9, ["Sweden", "Norway", "Germany", "Denmark", "Swedish", "Denish", "Norwegian", "German"]
  // from cn in company_name
  Const        r10, []
  // where cn.country_code != "[pl]" &&
  Const        r11, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r12, "name"
  Const        r13, "contains"
  Const        r12, "name"
  Const        r13, "contains"
  // ct.kind == "production companies" &&
  Const        r14, "kind"
  // k.keyword == "sequel" &&
  Const        r15, "keyword"
  // lt.link.contains("follow") &&
  Const        r16, "link"
  Const        r13, "contains"
  // mc.note == null &&
  Const        r17, "note"
  // (mi.info in allowed_countries) &&
  Const        r18, "info"
  // t.production_year >= 1950 && t.production_year <= 2000
  Const        r19, "production_year"
  Const        r19, "production_year"
  // company_name: cn.name,
  Const        r20, "company_name"
  Const        r12, "name"
  // link_type: lt.link,
  Const        r21, "link_type"
  Const        r16, "link"
  // western_follow_up: t.title
  Const        r22, "western_follow_up"
  Const        r23, "title"
  // from cn in company_name
  IterPrep     r24, r0
  Len          r25, r24
  Const        r27, 0
  Move         r26, r27
L20:
  LessInt      r28, r26, r25
  JumpIfFalse  r28, L0
  Index        r29, r24, r26
  Move         r30, r29
  // join mc in movie_companies on mc.company_id == cn.id
  IterPrep     r31, r5
  Len          r32, r31
  Const        r33, "company_id"
  Const        r34, "id"
  // where cn.country_code != "[pl]" &&
  Const        r11, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r12, "name"
  Const        r13, "contains"
  Const        r12, "name"
  Const        r13, "contains"
  // ct.kind == "production companies" &&
  Const        r14, "kind"
  // k.keyword == "sequel" &&
  Const        r15, "keyword"
  // lt.link.contains("follow") &&
  Const        r16, "link"
  Const        r13, "contains"
  // mc.note == null &&
  Const        r17, "note"
  // (mi.info in allowed_countries) &&
  Const        r18, "info"
  // t.production_year >= 1950 && t.production_year <= 2000
  Const        r19, "production_year"
  Const        r19, "production_year"
  // company_name: cn.name,
  Const        r20, "company_name"
  Const        r12, "name"
  // link_type: lt.link,
  Const        r21, "link_type"
  Const        r16, "link"
  // western_follow_up: t.title
  Const        r22, "western_follow_up"
  Const        r23, "title"
  // join mc in movie_companies on mc.company_id == cn.id
  Const        r27, 0
  Move         r35, r27
L19:
  LessInt      r36, r35, r32
  JumpIfFalse  r36, L1
  Index        r37, r31, r35
  Move         r38, r37
  Const        r33, "company_id"
  Index        r39, r38, r33
  Const        r34, "id"
  Index        r40, r30, r34
  Equal        r41, r39, r40
  JumpIfFalse  r41, L2
  // join ct in company_type on ct.id == mc.company_type_id
  IterPrep     r42, r1
  Len          r43, r42
  Const        r34, "id"
  Const        r44, "company_type_id"
  // where cn.country_code != "[pl]" &&
  Const        r11, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r12, "name"
  Const        r13, "contains"
  Const        r12, "name"
  Const        r13, "contains"
  // ct.kind == "production companies" &&
  Const        r14, "kind"
  // k.keyword == "sequel" &&
  Const        r15, "keyword"
  // lt.link.contains("follow") &&
  Const        r16, "link"
  Const        r13, "contains"
  // mc.note == null &&
  Const        r17, "note"
  // (mi.info in allowed_countries) &&
  Const        r18, "info"
  // t.production_year >= 1950 && t.production_year <= 2000
  Const        r19, "production_year"
  Const        r19, "production_year"
  // company_name: cn.name,
  Const        r20, "company_name"
  Const        r12, "name"
  // link_type: lt.link,
  Const        r21, "link_type"
  Const        r16, "link"
  // western_follow_up: t.title
  Const        r22, "western_follow_up"
  Const        r23, "title"
  // join ct in company_type on ct.id == mc.company_type_id
  Const        r27, 0
  Move         r45, r27
L18:
  LessInt      r46, r45, r43
  JumpIfFalse  r46, L2
  Index        r47, r42, r45
  Move         r48, r47
  Const        r34, "id"
  Index        r49, r48, r34
  Const        r44, "company_type_id"
  Index        r50, r38, r44
  Equal        r51, r49, r50
  JumpIfFalse  r51, L3
  // join t in title on t.id == mc.movie_id
  IterPrep     r52, r4
  Len          r53, r52
  Const        r34, "id"
  Const        r54, "movie_id"
  // where cn.country_code != "[pl]" &&
  Const        r11, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r12, "name"
  Const        r13, "contains"
  Const        r12, "name"
  Const        r13, "contains"
  // ct.kind == "production companies" &&
  Const        r14, "kind"
  // k.keyword == "sequel" &&
  Const        r15, "keyword"
  // lt.link.contains("follow") &&
  Const        r16, "link"
  Const        r13, "contains"
  // mc.note == null &&
  Const        r17, "note"
  // (mi.info in allowed_countries) &&
  Const        r18, "info"
  // t.production_year >= 1950 && t.production_year <= 2000
  Const        r19, "production_year"
  Const        r19, "production_year"
  // company_name: cn.name,
  Const        r20, "company_name"
  Const        r12, "name"
  // link_type: lt.link,
  Const        r21, "link_type"
  Const        r16, "link"
  // western_follow_up: t.title
  Const        r22, "western_follow_up"
  Const        r23, "title"
  // join t in title on t.id == mc.movie_id
  Const        r27, 0
  Move         r55, r27
L17:
  LessInt      r56, r55, r53
  JumpIfFalse  r56, L3
  Index        r57, r52, r55
  Move         r58, r57
  Const        r34, "id"
  Index        r59, r58, r34
  Const        r54, "movie_id"
  Index        r60, r38, r54
  Equal        r61, r59, r60
  JumpIfFalse  r61, L4
  // join mk in movie_keyword on mk.movie_id == t.id
  IterPrep     r62, r7
  Len          r63, r62
  Const        r54, "movie_id"
  Const        r34, "id"
  // where cn.country_code != "[pl]" &&
  Const        r11, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r12, "name"
  Const        r13, "contains"
  Const        r12, "name"
  Const        r13, "contains"
  // ct.kind == "production companies" &&
  Const        r14, "kind"
  // k.keyword == "sequel" &&
  Const        r15, "keyword"
  // lt.link.contains("follow") &&
  Const        r16, "link"
  Const        r13, "contains"
  // mc.note == null &&
  Const        r17, "note"
  // (mi.info in allowed_countries) &&
  Const        r18, "info"
  // t.production_year >= 1950 && t.production_year <= 2000
  Const        r19, "production_year"
  Const        r19, "production_year"
  // company_name: cn.name,
  Const        r20, "company_name"
  Const        r12, "name"
  // link_type: lt.link,
  Const        r21, "link_type"
  Const        r16, "link"
  // western_follow_up: t.title
  Const        r22, "western_follow_up"
  Const        r23, "title"
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r27, 0
  Move         r64, r27
L16:
  LessInt      r65, r64, r63
  JumpIfFalse  r65, L4
  Index        r66, r62, r64
  Move         r67, r66
  Const        r54, "movie_id"
  Index        r68, r67, r54
  Const        r34, "id"
  Index        r69, r58, r34
  Equal        r70, r68, r69
  JumpIfFalse  r70, L5
  // join k in keyword on k.id == mk.keyword_id
  IterPrep     r71, r2
  Len          r72, r71
  Const        r34, "id"
  Const        r73, "keyword_id"
  // where cn.country_code != "[pl]" &&
  Const        r11, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r12, "name"
  Const        r13, "contains"
  Const        r12, "name"
  Const        r13, "contains"
  // ct.kind == "production companies" &&
  Const        r14, "kind"
  // k.keyword == "sequel" &&
  Const        r15, "keyword"
  // lt.link.contains("follow") &&
  Const        r16, "link"
  Const        r13, "contains"
  // mc.note == null &&
  Const        r17, "note"
  // (mi.info in allowed_countries) &&
  Const        r18, "info"
  // t.production_year >= 1950 && t.production_year <= 2000
  Const        r19, "production_year"
  Const        r19, "production_year"
  // company_name: cn.name,
  Const        r20, "company_name"
  Const        r12, "name"
  // link_type: lt.link,
  Const        r21, "link_type"
  Const        r16, "link"
  // western_follow_up: t.title
  Const        r22, "western_follow_up"
  Const        r23, "title"
  // join k in keyword on k.id == mk.keyword_id
  Const        r27, 0
  Move         r74, r27
L15:
  LessInt      r75, r74, r72
  JumpIfFalse  r75, L5
  Index        r76, r71, r74
  Move         r77, r76
  Const        r34, "id"
  Index        r78, r77, r34
  Const        r73, "keyword_id"
  Index        r79, r67, r73
  Equal        r80, r78, r79
  JumpIfFalse  r80, L6
  // join ml in movie_link on ml.movie_id == t.id
  IterPrep     r81, r8
  Len          r82, r81
  Const        r54, "movie_id"
  Const        r34, "id"
  // where cn.country_code != "[pl]" &&
  Const        r11, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r12, "name"
  Const        r13, "contains"
  Const        r12, "name"
  Const        r13, "contains"
  // ct.kind == "production companies" &&
  Const        r14, "kind"
  // k.keyword == "sequel" &&
  Const        r15, "keyword"
  // lt.link.contains("follow") &&
  Const        r16, "link"
  Const        r13, "contains"
  // mc.note == null &&
  Const        r17, "note"
  // (mi.info in allowed_countries) &&
  Const        r18, "info"
  // t.production_year >= 1950 && t.production_year <= 2000
  Const        r19, "production_year"
  Const        r19, "production_year"
  // company_name: cn.name,
  Const        r20, "company_name"
  Const        r12, "name"
  // link_type: lt.link,
  Const        r21, "link_type"
  Const        r16, "link"
  // western_follow_up: t.title
  Const        r22, "western_follow_up"
  Const        r23, "title"
  // join ml in movie_link on ml.movie_id == t.id
  Const        r27, 0
  Move         r83, r27
L14:
  LessInt      r84, r83, r82
  JumpIfFalse  r84, L6
  Index        r85, r81, r83
  Move         r86, r85
  Const        r54, "movie_id"
  Index        r87, r86, r54
  Const        r34, "id"
  Index        r88, r58, r34
  Equal        r89, r87, r88
  JumpIfFalse  r89, L7
  // join lt in link_type on lt.id == ml.link_type_id
  IterPrep     r90, r3
  Len          r91, r90
  Const        r34, "id"
  Const        r92, "link_type_id"
  // where cn.country_code != "[pl]" &&
  Const        r11, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r12, "name"
  Const        r13, "contains"
  Const        r12, "name"
  Const        r13, "contains"
  // ct.kind == "production companies" &&
  Const        r14, "kind"
  // k.keyword == "sequel" &&
  Const        r15, "keyword"
  // lt.link.contains("follow") &&
  Const        r16, "link"
  Const        r13, "contains"
  // mc.note == null &&
  Const        r17, "note"
  // (mi.info in allowed_countries) &&
  Const        r18, "info"
  // t.production_year >= 1950 && t.production_year <= 2000
  Const        r19, "production_year"
  Const        r19, "production_year"
  // company_name: cn.name,
  Const        r20, "company_name"
  Const        r12, "name"
  // link_type: lt.link,
  Const        r21, "link_type"
  Const        r16, "link"
  // western_follow_up: t.title
  Const        r22, "western_follow_up"
  Const        r23, "title"
  // join lt in link_type on lt.id == ml.link_type_id
  Const        r27, 0
  Move         r93, r27
L13:
  LessInt      r94, r93, r91
  JumpIfFalse  r94, L7
  Index        r95, r90, r93
  Move         r96, r95
  Const        r34, "id"
  Index        r97, r96, r34
  Const        r92, "link_type_id"
  Index        r98, r86, r92
  Equal        r99, r97, r98
  JumpIfFalse  r99, L8
  // join mi in movie_info on mi.movie_id == t.id
  IterPrep     r100, r6
  Len          r101, r100
  Const        r54, "movie_id"
  Const        r34, "id"
  // where cn.country_code != "[pl]" &&
  Const        r11, "country_code"
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r12, "name"
  Const        r13, "contains"
  Const        r12, "name"
  Const        r13, "contains"
  // ct.kind == "production companies" &&
  Const        r14, "kind"
  // k.keyword == "sequel" &&
  Const        r15, "keyword"
  // lt.link.contains("follow") &&
  Const        r16, "link"
  Const        r13, "contains"
  // mc.note == null &&
  Const        r17, "note"
  // (mi.info in allowed_countries) &&
  Const        r18, "info"
  // t.production_year >= 1950 && t.production_year <= 2000
  Const        r19, "production_year"
  Const        r19, "production_year"
  // company_name: cn.name,
  Const        r20, "company_name"
  Const        r12, "name"
  // link_type: lt.link,
  Const        r21, "link_type"
  Const        r16, "link"
  // western_follow_up: t.title
  Const        r22, "western_follow_up"
  Const        r23, "title"
  // join mi in movie_info on mi.movie_id == t.id
  Const        r27, 0
  Move         r102, r27
L12:
  LessInt      r103, r102, r101
  JumpIfFalse  r103, L8
  Index        r104, r100, r102
  Move         r105, r104
  Const        r54, "movie_id"
  Index        r106, r105, r54
  Const        r34, "id"
  Index        r107, r58, r34
  Equal        r108, r106, r107
  JumpIfFalse  r108, L9
  // where cn.country_code != "[pl]" &&
  Const        r11, "country_code"
  Index        r109, r30, r11
  // t.production_year >= 1950 && t.production_year <= 2000
  Const        r19, "production_year"
  Index        r110, r58, r19
  Const        r111, 1950
  LessEq       r112, r111, r110
  Const        r19, "production_year"
  Index        r113, r58, r19
  Const        r114, 2000
  LessEq       r115, r113, r114
  // where cn.country_code != "[pl]" &&
  Const        r116, "[pl]"
  NotEqual     r117, r109, r116
  // ct.kind == "production companies" &&
  Const        r14, "kind"
  Index        r118, r48, r14
  Const        r119, "production companies"
  Equal        r120, r118, r119
  // k.keyword == "sequel" &&
  Const        r15, "keyword"
  Index        r121, r77, r15
  Const        r122, "sequel"
  Equal        r123, r121, r122
  // mc.note == null &&
  Const        r17, "note"
  Index        r124, r38, r17
  Const        r125, nil
  Equal        r126, r124, r125
  // where cn.country_code != "[pl]" &&
  Move         r127, r117
  JumpIfFalse  r127, L10
  Const        r12, "name"
  Index        r128, r30, r12
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  Const        r129, "Film"
  In           r130, r129, r128
  Move         r131, r130
  JumpIfTrue   r131, L11
  Const        r12, "name"
  Index        r132, r30, r12
  Const        r133, "Warner"
  In           r134, r133, r132
  Move         r131, r134
L11:
  // where cn.country_code != "[pl]" &&
  Move         r127, r131
  // (cn.name.contains("Film") || cn.name.contains("Warner")) &&
  JumpIfFalse  r127, L10
  Move         r127, r120
  // ct.kind == "production companies" &&
  JumpIfFalse  r127, L10
  Move         r127, r123
  // k.keyword == "sequel" &&
  JumpIfFalse  r127, L10
  Const        r16, "link"
  Index        r135, r96, r16
  // lt.link.contains("follow") &&
  Const        r136, "follow"
  In           r137, r136, r135
  // k.keyword == "sequel" &&
  Move         r127, r137
  // lt.link.contains("follow") &&
  JumpIfFalse  r127, L10
  Move         r127, r126
  // mc.note == null &&
  JumpIfFalse  r127, L10
  // (mi.info in allowed_countries) &&
  Const        r18, "info"
  Index        r138, r105, r18
  Const        r139, ["Sweden", "Norway", "Germany", "Denmark", "Swedish", "Denish", "Norwegian", "German"]
  In           r140, r138, r139
  // mc.note == null &&
  Move         r127, r140
  // (mi.info in allowed_countries) &&
  JumpIfFalse  r127, L10
  Move         r127, r112
  // t.production_year >= 1950 && t.production_year <= 2000
  JumpIfFalse  r127, L10
  Move         r127, r115
L10:
  // where cn.country_code != "[pl]" &&
  JumpIfFalse  r127, L9
  // company_name: cn.name,
  Const        r141, "company_name"
  Const        r12, "name"
  Index        r142, r30, r12
  // link_type: lt.link,
  Const        r143, "link_type"
  Const        r16, "link"
  Index        r144, r96, r16
  // western_follow_up: t.title
  Const        r145, "western_follow_up"
  Const        r23, "title"
  Index        r146, r58, r23
  // company_name: cn.name,
  Move         r147, r141
  Move         r148, r142
  // link_type: lt.link,
  Move         r149, r143
  Move         r150, r144
  // western_follow_up: t.title
  Move         r151, r145
  Move         r152, r146
  // select {
  MakeMap      r153, 3, r147
  // from cn in company_name
  Append       r154, r10, r153
  Move         r10, r154
L9:
  // join mi in movie_info on mi.movie_id == t.id
  Const        r155, 1
  Add          r102, r102, r155
  Jump         L12
L8:
  // join lt in link_type on lt.id == ml.link_type_id
  Const        r155, 1
  Add          r93, r93, r155
  Jump         L13
L7:
  // join ml in movie_link on ml.movie_id == t.id
  Const        r155, 1
  Add          r83, r83, r155
  Jump         L14
L6:
  // join k in keyword on k.id == mk.keyword_id
  Const        r155, 1
  Add          r74, r74, r155
  Jump         L15
L5:
  // join mk in movie_keyword on mk.movie_id == t.id
  Const        r155, 1
  Add          r64, r64, r155
  Jump         L16
L4:
  // join t in title on t.id == mc.movie_id
  Const        r155, 1
  Add          r55, r55, r155
  Jump         L17
L3:
  // join ct in company_type on ct.id == mc.company_type_id
  Const        r155, 1
  Add          r45, r45, r155
  Jump         L18
L2:
  // join mc in movie_companies on mc.company_id == cn.id
  Const        r155, 1
  Add          r35, r35, r155
  Jump         L19
L1:
  // from cn in company_name
  Const        r155, 1
  AddInt       r26, r26, r155
  Jump         L20
L0:
  // company_name: min(from r in rows select r.company_name),
  Const        r157, "company_name"
  Const        r158, []
  Const        r20, "company_name"
  IterPrep     r159, r10
  Len          r160, r159
  Const        r27, 0
  Move         r161, r27
L22:
  LessInt      r162, r161, r160
  JumpIfFalse  r162, L21
  Index        r163, r159, r161
  Move         r164, r163
  Const        r20, "company_name"
  Index        r165, r164, r20
  Append       r166, r158, r165
  Move         r158, r166
  Const        r155, 1
  AddInt       r161, r161, r155
  Jump         L22
L21:
  Min          r167, r158
  // link_type: min(from r in rows select r.link_type),
  Const        r168, "link_type"
  Const        r169, []
  Const        r21, "link_type"
  IterPrep     r170, r10
  Len          r171, r170
  Const        r27, 0
  Move         r172, r27
L24:
  LessInt      r173, r172, r171
  JumpIfFalse  r173, L23
  Index        r174, r170, r172
  Move         r164, r174
  Const        r21, "link_type"
  Index        r175, r164, r21
  Append       r176, r169, r175
  Move         r169, r176
  Const        r155, 1
  AddInt       r172, r172, r155
  Jump         L24
L23:
  Min          r177, r169
  // western_follow_up: min(from r in rows select r.western_follow_up)
  Const        r178, "western_follow_up"
  Const        r179, []
  Const        r22, "western_follow_up"
  IterPrep     r180, r10
  Len          r181, r180
  Const        r27, 0
  Move         r182, r27
L26:
  LessInt      r183, r182, r181
  JumpIfFalse  r183, L25
  Index        r184, r180, r182
  Move         r164, r184
  Const        r22, "western_follow_up"
  Index        r185, r164, r22
  Append       r186, r179, r185
  Move         r179, r186
  Const        r155, 1
  AddInt       r182, r182, r155
  Jump         L26
L25:
  Min          r187, r179
  // company_name: min(from r in rows select r.company_name),
  Move         r188, r157
  Move         r189, r167
  // link_type: min(from r in rows select r.link_type),
  Move         r190, r168
  Move         r191, r177
  // western_follow_up: min(from r in rows select r.western_follow_up)
  Move         r192, r178
  Move         r193, r187
  // {
  MakeMap      r194, 3, r188
  Move         r156, r194
  // let result = [
  MakeList     r195, 1, r156
  // json(result)
  JSON         r195
  // expect result == [
  Const        r196, [{"company_name": "ACME Film Works", "link_type": "is follow up", "western_follow_up": "Western Return"}]
  Equal        r197, r195, r196
  Expect       r197
  Return       r0
