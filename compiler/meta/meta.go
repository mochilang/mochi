package meta

import (
	"fmt"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func Version() string {
	root := findRepoRoot()
	if root == "" {
		return "dev"
	}
	data, err := os.ReadFile(filepath.Join(root, "VERSION"))
	if err != nil {
		return "dev"
	}
	return strings.TrimSpace(string(data))
}

func Header(prefix string) []byte {
	t := time.Now().UTC()
	ver := Version()
	return []byte(fmt.Sprintf("%s Generated by Mochi compiler v%s on %s\n",
		prefix, ver, t.Format(time.RFC3339)))
}

func findRepoRoot() string {
	dir, err := os.Getwd()
	if err != nil {
		return ""
	}
	for i := 0; i < 10; i++ {
		if _, err := os.Stat(filepath.Join(dir, "go.mod")); err == nil {
			return dir
		}
		parent := filepath.Dir(dir)
		if parent == dir {
			break
		}
		dir = parent
	}
	return ""
}
