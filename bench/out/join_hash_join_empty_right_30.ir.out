func main (regs=103)
L11:
  // var left = []
  Const        r0, []
  Move         r1, r0
  // for i in 0..30 {
  Const        r2, 0
  Const        r3, 30
  Move         r4, r2
L1:
  Less         r5, r4, r3
  JumpIfFalse  r5, L0
  // left = append(left, { id: i, val: i })
  Const        r6, "id"
  Const        r7, "val"
  Move         r8, r4
  Move         r9, r4
  MakeMap      r10, 2, r6
  Append       r1, r1, r10
  // for i in 0..30 {
  Const        r12, 1
  Add          r4, r4, r12
  Jump         L1
L0:
  // var right = []
  Const        r15, []
  // let repeat = 100
  Const        r16, 100
  // var last = 0
  Move         r17, r2
  // let start = now()
  Now          r18
  // for i in 0..repeat {
  Move         r4, r2
L19:
  Less         r19, r4, r16
  JumpIfFalse  r19, L2
  // let res = from l in left
  Const        r20, []
  IterPrep     r21, r1
  Len          r22, r21
  // join r in right on l.id == r.id
  IterPrep     r23, r15
  Len          r24, r23
  // let res = from l in left
  Const        r25, 0
  EqualInt     r26, r22, r25
  JumpIfTrue   r26, L3
  EqualInt     r27, r24, r25
  JumpIfTrue   r27, L3
  LessEq       r28, r24, r22
  JumpIfFalse  r28, L4
  // join r in right on l.id == r.id
  MakeMap      r29, 0, r0
  Const        r30, 0
L7:
  Less         r31, r30, r24
  JumpIfFalse  r31, L5
  Index        r32, r23, r30
  Move         r33, r32
  Const        r34, "id"
  Index        r35, r33, r34
  Index        r36, r29, r35
  Const        r37, nil
  NotEqual     r38, r36, r37
  JumpIfTrue   r38, L6
  MakeList     r39, 0, r0
  SetIndex     r29, r35, r39
L6:
  Index        r36, r29, r35
  Append       r40, r36, r32
  SetIndex     r29, r35, r40
  Const        r41, 1
  Add          r30, r30, r41
  Jump         L7
L5:
  // let res = from l in left
  Const        r43, 0
L10:
  Less         r44, r43, r22
  JumpIfFalse  r44, L3
  Index        r46, r21, r43
  // join r in right on l.id == r.id
  Index        r47, r46, r34
  // let res = from l in left
  Index        r48, r29, r47
  Const        r49, nil
  NotEqual     r50, r48, r49
  JumpIfFalse  r50, L8
  Len          r51, r48
  Const        r52, 0
L9:
  Less         r53, r52, r51
  JumpIfFalse  r53, L8
  // select l.val
  Const        r55, "val"
  Index        r56, r46, r55
  // let res = from l in left
  Append       r20, r20, r56
  Const        r58, 1
  Add          r52, r52, r58
  Jump         L9
L8:
  Const        r60, 1
  Add          r43, r43, r60
  Jump         L10
L3:
  Jump         L11
L4:
  MakeMap      r62, 0, r0
  Const        r63, 0
L14:
  Less         r64, r63, r22
  JumpIfFalse  r64, L12
  Index        r65, r21, r63
  // join r in right on l.id == r.id
  Index        r66, r65, r34
  // let res = from l in left
  Index        r67, r62, r66
  Const        r68, nil
  NotEqual     r69, r67, r68
  JumpIfTrue   r69, L13
  MakeList     r70, 0, r0
  SetIndex     r62, r66, r70
L13:
  Index        r67, r62, r66
  Append       r71, r67, r65
  SetIndex     r62, r66, r71
  Const        r72, 1
  Add          r63, r63, r72
  Jump         L14
L12:
  // join r in right on l.id == r.id
  Const        r74, 0
L18:
  Less         r75, r74, r24
  JumpIfFalse  r75, L15
  Index        r33, r23, r74
  Index        r77, r33, r34
  Index        r78, r62, r77
  Const        r79, nil
  NotEqual     r80, r78, r79
  JumpIfFalse  r80, L16
  Len          r81, r78
  Const        r82, 0
L17:
  Less         r83, r82, r81
  JumpIfFalse  r83, L16
  Index        r46, r78, r82
  // select l.val
  Index        r85, r46, r55
  // let res = from l in left
  Append       r20, r20, r85
  // join r in right on l.id == r.id
  Const        r87, 1
  Add          r82, r82, r87
  Jump         L17
L16:
  Const        r89, 1
  Add          r74, r74, r89
  Jump         L18
L15:
  // last = len(res)
  Len          r17, r20
  // for i in 0..repeat {
  Const        r92, 1
  Add          r4, r4, r92
  Jump         L19
L2:
  // let duration = (now() - start) / 1000
  Now          r94
  SubInt       r95, r94, r18
  Const        r96, 1000
  DivInt       r97, r95, r96
  // "duration_us": duration,
  Const        r98, "duration_us"
  // "output": last,
  Const        r99, "output"
  // "duration_us": duration,
  Move         r100, r97
  // "output": last,
  Move         r101, r17
  // json({
  MakeMap      r102, 2, r98
  JSON         r102
  Return       r0
