func main (regs=32)
  // let n = 20
  Const        r0, 20
  Move         r1, r0
  // let repeat = 100
  Const        r2, 100
  Move         r3, r2
  // var last = 0
  Const        r4, 0
  Move         r5, r4
  // let start = now()
  Now          r6
  Move         r7, r6
  // for r in 0..repeat {
  Const        r8, 0
  Move         r9, r8
L4:
  Less         r10, r9, r3
  JumpIfFalse  r10, L0
  // var count = 0
  Const        r11, 0
  Move         r12, r11
  // for i in 2..n {
  Const        r13, 2
  Move         r14, r13
L3:
  Less         r15, r14, r1
  JumpIfFalse  r15, L1
  // if is_prime(i) {
  Move         r16, r14
  Call         r17, 1, 1, r16
  JumpIfFalse  r17, L2
  // count = count + 1
  Const        r18, 1
  Add          r19, r12, r18
  Move         r12, r19
L2:
  // for i in 2..n {
  Const        r20, 1
  Add          r21, r14, r20
  Move         r14, r21
  Jump         L3
L1:
  // last = count
  Move         r5, r12
  // for r in 0..repeat {
  Const        r22, 1
  Add          r23, r9, r22
  Move         r9, r23
  Jump         L4
L0:
  // let end = now()
  Now          r24
  Move         r25, r24
  // let duration = (end - start) / 1000
  Sub          r26, r25, r7
  Const        r27, 1000
  Div          r28, r26, r27
  Move         r29, r28
  // let output = {
  Move         r31, r30
  // json(output)
  JSON         r31
  Return       r0

  // fun is_prime(n: int): bool {
func is_prime (regs=16)
  // if n < 2 { return false }
  Const        r1, 2
  Less         r2, r0, r1
  JumpIfFalse  r2, L0
  Const        r3, false
  Return       r3
L0:
  // for i in 2..(n - 1) {
  Const        r4, 2
  Const        r5, 1
  Sub          r6, r0, r5
  Move         r7, r4
L3:
  Less         r8, r7, r6
  JumpIfFalse  r8, L1
  // if n % i == 0 {
  Mod          r9, r0, r7
  Const        r10, 0
  Equal        r11, r9, r10
  JumpIfFalse  r11, L2
  // return false
  Const        r12, false
  Return       r12
L2:
  // for i in 2..(n - 1) {
  Const        r13, 1
  Add          r14, r7, r13
  Move         r7, r14
  Jump         L3
L1:
  // return true
  Const        r15, true
  Return       r15
  Return       r0

