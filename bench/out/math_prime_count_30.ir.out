func main (regs=35)
  // let n = 30
  Const        r0, 30
  Move         r1, r0
  // let repeat = 100
  Const        r2, 100
  Move         r3, r2
  // var last = 0
  Const        r4, 0
  Move         r5, r4
  // let start = now()
  Now          r6
  Move         r7, r6
  // for r in 0..repeat {
  Const        r4, 0
  Const        r2, 100
  Move         r8, r4
L4:
  LessInt      r9, r8, r2
  JumpIfFalse  r9, L0
  // var total = 0
  Const        r4, 0
  Move         r10, r4
  // for i in 2..n {
  Const        r11, 2
  Const        r0, 30
  Move         r12, r11
L3:
  LessInt      r13, r12, r0
  JumpIfFalse  r13, L1
  // if is_prime(i) {
  Move         r14, r12
  Call         r15, is_prime, r14
  JumpIfFalse  r15, L2
  // total = total + 1
  Const        r16, 1
  AddInt       r17, r10, r16
  Move         r10, r17
L2:
  // for i in 2..n {
  Const        r18, 1
  AddInt       r19, r12, r18
  Move         r12, r19
  Jump         L3
L1:
  // last = total
  Move         r5, r10
  // for r in 0..repeat {
  Const        r20, 1
  AddInt       r21, r8, r20
  Move         r8, r21
  Jump         L4
L0:
  // let end = now()
  Now          r22
  Move         r23, r22
  // let duration = (end - start) / 1000
  SubInt       r24, r23, r7
  Const        r25, 1000
  DivInt       r26, r24, r25
  Move         r27, r26
  // "duration_us": duration,
  Const        r28, "duration_us"
  // "output": last,
  Const        r29, "output"
  // "duration_us": duration,
  Move         r30, r28
  Move         r31, r27
  // "output": last,
  Move         r32, r29
  Move         r33, r5
  // json({
  MakeMap      r34, 2, r30
  JSON         r34
  Return       r0

  // fun is_prime(n: int): bool {
func is_prime (regs=20)
  // if n < 2 { return false }
  Const        r7, 2
  Less         r8, r0, r7
  JumpIfFalse  r8, L0
  Const        r9, false
  Return       r9
L0:
  // for i in 2..(n - 1) {
  Const        r7, 2
  Const        r10, 1
  Sub          r11, r0, r10
  Move         r12, r7
L3:
  LessInt      r13, r12, r11
  JumpIfFalse  r13, L1
  // if n % i == 0 {
  Mod          r14, r0, r12
  Const        r15, 0
  Equal        r16, r14, r15
  JumpIfFalse  r16, L2
  // return false
  Const        r9, false
  Return       r9
L2:
  // for i in 2..(n - 1) {
  Const        r17, 1
  AddInt       r18, r12, r17
  Move         r12, r18
  Jump         L3
L1:
  // return true
  Const        r19, true
  Return       r19
