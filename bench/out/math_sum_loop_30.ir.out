func main (regs=25)
  // let n = 30
  Const        r0, 30
  Move         r1, r0
  // let repeat = 1000
  Const        r2, 1000
  Move         r3, r2
  // var last = 0
  Const        r4, 0
  Move         r5, r4
  // let start = now()
  Now          r6
  Move         r7, r6
  // for i in 0..repeat {
  Const        r4, 0
  Const        r2, 1000
  Move         r8, r4
L1:
  LessInt      r9, r8, r2
  JumpIfFalse  r9, L0
  // last = sum_loop(n)
  Const        r0, 30
  Move         r10, r0
  Call         r11, sum_loop, r10
  Move         r5, r11
  // for i in 0..repeat {
  Const        r12, 1
  AddInt       r13, r8, r12
  Move         r8, r13
  Jump         L1
L0:
  // let duration = (now() - start) / 1000
  Now          r14
  SubInt       r15, r14, r7
  Const        r2, 1000
  DivInt       r16, r15, r2
  Move         r17, r16
  // "duration_us": duration,
  Const        r18, "duration_us"
  // "output": last,
  Const        r19, "output"
  // "duration_us": duration,
  Move         r20, r18
  Move         r21, r17
  // "output": last,
  Move         r22, r19
  Move         r23, r5
  // json({
  MakeMap      r24, 2, r20
  JSON         r24
  Return       r0

  // fun sum_loop(n: int): int {
func sum_loop (regs=14)
  // var total = 0
  Const        r6, 0
  Move         r7, r6
  // for i in 1..n {
  Const        r8, 1
  Move         r9, r8
L1:
  LessInt      r10, r9, r0
  JumpIfFalse  r10, L0
  // total = total + i
  AddInt       r11, r7, r9
  Move         r7, r11
  // for i in 1..n {
  Const        r12, 1
  AddInt       r13, r9, r12
  Move         r9, r13
  Jump         L1
L0:
  // return total
  Return       r7
