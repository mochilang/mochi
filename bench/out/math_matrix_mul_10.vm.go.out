package main
import (
	"encoding/json"
	"os"
	"mochi/runtime/vm"
)
var progData = []byte(`{"Funcs":[{"Code":[{"Op":0,"A":0,"B":0,"C":0,"D":0,"Val":{"Tag":1,"Int":10,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":23},{"Op":12,"A":1,"B":0,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":30}],"NumRegs":2,"NumParams":0,"Name":"main","Line":0},{"Code":[{"Op":14,"A":2,"B":0,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":2},{"Op":0,"A":3,"B":0,"C":0,"D":0,"Val":{"Tag":1,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":3},{"Op":15,"A":4,"B":1,"C":3,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":3},{"Op":14,"A":5,"B":4,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":3},{"Op":14,"A":4,"B":1,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":4},{"Op":0,"A":1,"B":0,"C":0,"D":0,"Val":{"Tag":5,"Int":0,"Float":0,"Str":"","Bool":false,"List":[],"Map":null,"Func":null},"Line":6},{"Op":1,"A":6,"B":3,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":7},{"Op":9,"A":7,"B":6,"C":2,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":7},{"Op":13,"A":7,"B":8,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":7},{"Op":0,"A":7,"B":0,"C":0,"D":0,"Val":{"Tag":5,"Int":0,"Float":0,"Str":"","Bool":false,"List":[],"Map":null,"Func":null},"Line":8},{"Op":1,"A":2,"B":3,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":9},{"Op":9,"A":8,"B":2,"C":5,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":9},{"Op":13,"A":8,"B":20,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":9},{"Op":9,"A":8,"B":3,"C":4,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":11},{"Op":13,"A":8,"B":15,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":11},{"Op":18,"A":4,"B":1,"C":8,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":14},{"Op":2,"A":7,"B":7,"C":4,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":14},{"Op":0,"A":4,"B":0,"C":0,"D":0,"Val":{"Tag":1,"Int":1,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":9},{"Op":2,"A":2,"B":2,"C":4,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":9},{"Op":12,"A":4,"B":0,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":9},{"Op":1,"A":4,"B":7,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":16},{"Op":18,"A":7,"B":1,"C":4,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":16},{"Op":2,"A":1,"B":1,"C":7,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":16},{"Op":0,"A":7,"B":0,"C":0,"D":0,"Val":{"Tag":1,"Int":1,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":7},{"Op":2,"A":6,"B":6,"C":7,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":7},{"Op":12,"A":7,"B":0,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":7},{"Op":26,"A":1,"B":0,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":19}],"NumRegs":9,"NumParams":2,"Name":"matmul","Line":1}],"Types":null,"file":"bench/out/tmp.mochi","source":["fun matmul(a: list\u003clist\u003cint\u003e\u003e, b: list\u003clist\u003cint\u003e\u003e): list\u003clist\u003cint\u003e\u003e {","  let n = len(a)","  let m = len(b[0])","  let p = len(b)","","  var result: list\u003clist\u003cint\u003e\u003e = []","  for i in 0..n {","    var row: list\u003cint\u003e = []","    for j in 0..m {","      var sum: int = 0","      for k in 0..p {","        sum = sum + a[i][k] * b[k][j]","      }","      row = row + [sum]","    }","    result = result + [row]","  }","  // json(result)","  return result","}","","// let size = 10","let size = 10","let repeat = 10","","// build input matrices","var a: list\u003clist\u003cint\u003e\u003e = []","for i in 0..size {","  var row: list\u003cint\u003e = []","  for j in 0..size {","    row = row + [i + j]","  }","  a = a + [row]","}","","var b: list\u003clist\u003cint\u003e\u003e = []","for i in 0..size {","  var row: list\u003cint\u003e = []","  for j in 0..size {","    row = row + [i * j]","  }","  b = b + [row]","}","","var last: list\u003clist\u003cint\u003e\u003e = []","let start = now()","for i in 0..repeat {","  last = matmul(a, b)","}","let end = now()","let duration = (end - start) / 1000","// print(start, end, end-start, duration)","","json({","  \"duration_us\": duration,","  \"output\": last[0][0], // last[0][0] type any does not support indexing","})",""]}`)
func main() {
	var p vm.Program
	if err := json.Unmarshal(progData, &p); err != nil { panic(err) }
	m := vm.New(&p, os.Stdout)
	if err := m.Run(); err != nil { panic(err) }
}
