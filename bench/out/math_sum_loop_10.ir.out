func main (regs=10)
  // let n = 10
  Const        r0, 10
L1:
  // let repeat = 1000
  Const        r1, 1000
  // var last = 0
  Const        r2, 0
  // let start = now()
  Now          r3
L0:
  // for i in 0..repeat {
  Const        r4, 0
  Less         r5, r4, r1
  JumpIfFalse  r5, L0
  // last = sum_loop(n)
  Move         r1, r0
  Call         r2, sum_loop, r1
  // for i in 0..repeat {
  Const        r5, 1
  Add          r4, r4, r5
  Jump         L1
  // let duration = (now() - start) / 1000
  Now          r4
  SubInt       r5, r4, r3
  Const        r1, 1000
  DivInt       r3, r5, r1
  // "duration_us": duration,
  Const        r4, "duration_us"
  // "output": last,
  Const        r5, "output"
  // "duration_us": duration,
  Move         r6, r4
  Move         r7, r3
  // "output": last,
  Move         r8, r5
  Move         r9, r2
  // json({
  MakeMap      r1, 2, r6
  JSON         r1
  Return       r0

  // fun sum_loop(n: int): int {
func sum_loop (regs=5)
  // var total = 0
  Const        r1, 0
L1:
  // for i in 1..n {
  Const        r2, 1
L0:
  Less         r3, r2, r0
  JumpIfFalse  r3, L0
  // total = total + i
  AddInt       r1, r1, r2
  // for i in 1..n {
  Const        r4, 1
  Add          r2, r2, r4
  Jump         L1
  // return total
  Return       r1
