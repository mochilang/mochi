# Generated by Mochi Python compiler
from __future__ import annotations

import json
import time
import typing


def matmul(a: list[list[int]], b: list[list[int]]) -> list[list[int]]:
    n = len(a)
    m = len(b[0])
    p = len(b)
    result: list[list[int]] = []
    for i in range(0, n):
        row: list[int] = []
        for j in range(0, m):
            sum: typing.Callable[[typing.Any], float] = 0
            for k in range(0, p):
                sum = sum + (a[i][k] * b[k][j])
            row = row + [sum]
        result = result + [row]
    return result


size: int = 10
repeat: int = 10
a: list[list[int]] = []
for i in range(0, size):
    row: list[int] = []
    for j in range(0, size):
        row = row + [i + j]
    a = a + [row]
b: list[list[int]] = []
for i in range(0, size):
    row: list[int] = []
    for j in range(0, size):
        row = row + [i * j]
    b = b + [row]
last: list[list[int]] = []
start: int = time.time_ns()
for i in range(0, repeat):
    last = matmul(a, b)
end: int = time.time_ns()
duration: int = int(((end - start)) / 1000)
print(
    json.dumps(
        {"duration_us": duration, "output": last[0][0]}, default=lambda o: vars(o)
    )
)
