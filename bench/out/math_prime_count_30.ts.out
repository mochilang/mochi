// Generated by Mochi TypeScript compiler

let n: number = 30

let repeat: number = 100

let last: number = 0

let start: number = performance.now() * 1000000

let end: number = performance.now() * 1000000

let duration: number = Math.trunc(((end - start)) / 1000)

let output: Record<string, number> = {"duration_us": duration, "output": last}

function is_prime(n: number) : boolean {
	if ((n < 2)) {
		return false
	}
	for (let i: number = 2; i < ((n - 1)); i++) {
		if (((n % i) == 0)) {
			return false
		}
	}
	return true
}

function main(): void {
	for (let r: number = 0; r < repeat; r++) {
		let count: number = 0
		for (let i: number = 2; i < n; i++) {
			if (is_prime(i)) {
				count = (count + 1)
			}
		}
		last = count
	}
	console.log(JSON.stringify(output))
}
main()

