// Generated by Mochi TypeScript compiler

function fib(n: number): number {
  var a = 0;
  var b = 1;
  for (let i: number = 0; i < n; i++) {
    let tmp = a + b;
    a = b;
    b = tmp;
  }
  return a;
}

let duration: number;
var last: number;
let n: number;
let repeat: number;
let start: number;

function main(): void {
  n = 20;
  repeat = 1000;
  last = 0;
  start = performance.now() * 1000000;
  for (let i: number = 0; i < repeat; i++) {
    last = fib(n);
  }
  duration = Math.trunc((performance.now() * 1000000 - start) / 1000);
  console.log(_json({
    "duration_us": duration,
    "output": last,
  }));
}
function _json(v: any): string {
  function _sort(x: any): any {
    if (Array.isArray(x)) return x.map(_sort);
    if (x && typeof x === "object") {
      const keys = Object.keys(x).sort();
      const o: any = {};
      for (const k of keys) o[k] = _sort(x[k]);
      return o;
    }
    return x;
  }
  return JSON.stringify(_sort(v));
}

main();
