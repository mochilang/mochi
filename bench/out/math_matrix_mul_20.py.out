# Code generated by Mochi transpiler.
# Version 0.10.40, generated on 2025-07-26 16:59 +0700
import json
import os
import resource
import time

import sys
sys.set_int_max_str_digits(0)


_now_seed = 0
_now_seeded = False
s = os.getenv("MOCHI_NOW_SEED")
if s and s != "":
    try:
        _now_seed = int(s)
        _now_seeded = True
    except Exception:
        pass

def _now():
    global _now_seed
    if _now_seeded:
        _now_seed = (_now_seed * 1664525 + 1013904223) % 2147483647
        return _now_seed
    return int(time.time_ns())

_bench_mem_start = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
_bench_start = _now()
def matmul(a, b):
    n = len(a)
    m = len(b[0])
    p = len(b)
    result = []
    for i in range(0, n):
        row = []
        for j in range(0, m):
            sum = 0
            for k in range(0, p):
                sum = sum + a[i][k] * b[k][j]
            row = row + [sum]
        result = result + [row]
    return result
size = 20
repeat = 10
a = []
for i in range(0, size):
    row = []
    for j in range(0, size):
        row = row + [i + j]
    a = a + [row]
b = []
for i in range(0, size):
    row = []
    for j in range(0, size):
        row = row + [i * j]
    b = b + [row]
last = []
start = _now()
for i in range(0, repeat):
    last = matmul(a, b)
end = _now()
duration = (end - start) / 1000
_bench_end = _now()
_bench_mem_end = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
print(json.dumps({"duration_us": (_bench_end - _bench_start)//1000, "memory_bytes": _bench_mem_end*1024, "name": "main"}, indent=2))
