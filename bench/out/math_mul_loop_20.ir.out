func main (regs=20)
  // let n = 20
  Const        r0, 20
  Move         r0, r0
  SetGlobal    0,0,0,0
  // let repeat = 1000
  Const        r1, 1000
  Move         r1, r1
  SetGlobal    1,1,0,0
  // var last = 0
  Const        r2, 0
  Move         r2, r2
  SetGlobal    2,2,0,0
  // let start = now()
  Now          r3
  Move         r3, r3
  SetGlobal    3,3,0,0
  // for i in 0..repeat {
  Const        r2, 0
  Const        r1, 1000
  Move         r4, r2
L1:
  LessInt      r5, r4, r1
  JumpIfFalse  r5, L0
  // last = mul(n)
  Const        r0, 20
  Move         r6, r0
  Call         r7, mul, r6
  Move         r2, r7
  SetGlobal    2,2,0,0
  // for i in 0..repeat {
  Const        r8, 1
  AddInt       r9, r4, r8
  Move         r4, r9
  Jump         L1
L0:
  // let duration = (now() - start) / 1000
  Now          r10
  SubInt       r11, r10, r3
  Const        r1, 1000
  DivInt       r12, r11, r1
  Move         r4, r12
  SetGlobal    4,4,0,0
  // "duration_us": duration,
  Const        r13, "duration_us"
  // "output": last,
  Const        r14, "output"
  // "duration_us": duration,
  Move         r15, r13
  Move         r16, r4
  // "output": last,
  Move         r17, r14
  Move         r18, r2
  // json({
  MakeMap      r19, 2, r15
  JSON         r19
  Return       r0

  // fun mul(n: int): int {
func mul (regs=13)
  // var result = 1
  Const        r6, 1
  Move         r7, r6
  // for i in 1..n {
  Const        r6, 1
  Move         r8, r6
L1:
  LessInt      r9, r8, r0
  JumpIfFalse  r9, L0
  // result = result * i
  MulInt       r10, r7, r8
  Move         r7, r10
  // for i in 1..n {
  Const        r11, 1
  AddInt       r12, r8, r11
  Move         r8, r12
  Jump         L1
L0:
  // return result
  Return       r7
