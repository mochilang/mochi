package main
import (
	"encoding/json"
	"os"
	"mochi/runtime/vm"
)
var progData = []byte(`{"Funcs":[{"Code":[{"Op":0,"A":0,"B":0,"C":0,"D":0,"Val":{"Tag":1,"Int":20,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":9},{"Op":0,"A":1,"B":0,"C":0,"D":0,"Val":{"Tag":1,"Int":1000,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":10},{"Op":0,"A":2,"B":0,"C":0,"D":0,"Val":{"Tag":1,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":11},{"Op":29,"A":3,"B":0,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":13},{"Op":0,"A":4,"B":0,"C":0,"D":0,"Val":{"Tag":1,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":14},{"Op":9,"A":5,"B":4,"C":1,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":14},{"Op":13,"A":5,"B":4,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":14},{"Op":1,"A":1,"B":0,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":15},{"Op":24,"A":2,"B":1,"C":1,"D":1,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":15},{"Op":0,"A":5,"B":0,"C":0,"D":0,"Val":{"Tag":1,"Int":1,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":14},{"Op":2,"A":4,"B":4,"C":5,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":14},{"Op":12,"A":1,"B":0,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":14},{"Op":29,"A":4,"B":0,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":17},{"Op":54,"A":5,"B":4,"C":3,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":17},{"Op":0,"A":1,"B":0,"C":0,"D":0,"Val":{"Tag":1,"Int":1000,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":17},{"Op":58,"A":3,"B":5,"C":1,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":17},{"Op":0,"A":4,"B":0,"C":0,"D":0,"Val":{"Tag":3,"Int":0,"Float":0,"Str":"duration_us","Bool":false,"List":null,"Map":null,"Func":null},"Line":21},{"Op":0,"A":5,"B":0,"C":0,"D":0,"Val":{"Tag":3,"Int":0,"Float":0,"Str":"output","Bool":false,"List":null,"Map":null,"Func":null},"Line":22},{"Op":1,"A":6,"B":4,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":21},{"Op":1,"A":7,"B":3,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":21},{"Op":1,"A":8,"B":5,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":22},{"Op":1,"A":9,"B":2,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":22},{"Op":19,"A":1,"B":2,"C":6,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":20},{"Op":30,"A":1,"B":0,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":20},{"Op":26,"A":0,"B":0,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":0}],"NumRegs":10,"NumParams":0,"Name":"main","Line":0},{"Code":[{"Op":0,"A":1,"B":0,"C":0,"D":0,"Val":{"Tag":1,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":2},{"Op":0,"A":2,"B":0,"C":0,"D":0,"Val":{"Tag":1,"Int":1,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":3},{"Op":9,"A":3,"B":2,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":3},{"Op":13,"A":3,"B":2,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":3},{"Op":52,"A":1,"B":1,"C":2,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":4},{"Op":0,"A":4,"B":0,"C":0,"D":0,"Val":{"Tag":1,"Int":1,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":3},{"Op":2,"A":2,"B":2,"C":4,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":3},{"Op":12,"A":1,"B":0,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":3},{"Op":26,"A":1,"B":0,"C":0,"D":0,"Val":{"Tag":0,"Int":0,"Float":0,"Str":"","Bool":false,"List":null,"Map":null,"Func":null},"Line":6}],"NumRegs":5,"NumParams":1,"Name":"sum_loop","Line":1}],"Types":null,"file":"bench/out/tmp.mochi","source":["fun sum_loop(n: int): int {","  var total = 0","  for i in 1..n {","    total = total + i","  }","  return total","}","","let n = 20","let repeat = 1000","var last = 0","","let start = now()","for i in 0..repeat {","  last = sum_loop(n)","}","let duration = (now() - start) / 1000","","","json({","  \"duration_us\": duration,","  \"output\": last,","})",""]}`)
func main() {
	var p vm.Program
	if err := json.Unmarshal(progData, &p); err != nil { panic(err) }
	m := vm.New(&p, os.Stdout)
	if err := m.Run(); err != nil { panic(err) }
}
