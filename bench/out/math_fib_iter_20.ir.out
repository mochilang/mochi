func main (regs=10)
  // let n = 20
  Const        r0, 20
L1:
  // let repeat = 1000
  Const        r1, 1000
  // var last = 0
  Const        r2, 0
  // let start = now()
  Now          r3
L0:
  // for i in 0..repeat {
  Const        r4, 0
  Less         r5, r4, r1
  JumpIfFalse  r5, L0
  // last = fib(n)
  Move         r1, r0
  Call         r2, fib, r1
  // for i in 0..repeat {
  Const        r5, 1
  Add          r4, r4, r5
  Jump         L1
  // let duration = (now() - start) / 1000
  Now          r4
  SubInt       r5, r4, r3
  Const        r1, 1000
  DivInt       r3, r5, r1
  // "duration_us": duration,
  Const        r4, "duration_us"
  // "output": last,
  Const        r5, "output"
  // "duration_us": duration,
  Move         r6, r4
  Move         r7, r3
  // "output": last,
  Move         r8, r5
  Move         r9, r2
  // json({
  MakeMap      r1, 1, r6
  JSON         r1
  Return       r0

  // fun fib(n: int): int {
func fib (regs=5)
  // var a = 0
  Const        r1, 0
  // var b = 1
  Const        r2, 1
  // for i in 0..n {
  Const        r3, 0
  Less         r4, r3, r0
L1:
  JumpIfFalse  r4, L0
  // let tmp = a + b
  AddInt       r4, r1, r2
  // a = b
  Move         r1, r2
  // b = tmp
  Move         r2, r4
  // for i in 0..n {
  Const        r2, 1
  Add          r3, r3, r2
  Jump         L1
L0:
  // return a
  Return       r1
