func main (regs=27)
  // let n = 20
  Const        r0, 20
  Move         r1, r0
  // let repeat = 1000
  Const        r2, 1000
  Move         r3, r2
  // var last = 0
  Const        r4, 0
  Move         r5, r4
  // let start = now()
  Now          r6
  Move         r7, r6
  // for i in 0..repeat {
  Const        r8, 0
  Move         r9, r8
L1:
  Less         r10, r9, r3
  JumpIfFalse  r10, L0
  // last = fact_rec(n)
  Move         r11, r1
  Call         r12, fact_rec, r11
  Move         r5, r12
  // for i in 0..repeat {
  Const        r13, 1
  Add          r14, r9, r13
  Move         r9, r14
  Jump         L1
L0:
  // let duration = (now() - start) / 1000
  Now          r15
  SubInt       r16, r15, r7
  Const        r17, 1000
  DivInt       r18, r16, r17
  Move         r19, r18
  // "duration_us": duration,
  Const        r20, "duration_us"
  // "output": last,
  Const        r21, "output"
  // "duration_us": duration,
  Move         r22, r20
  Move         r23, r19
  // "output": last,
  Move         r24, r21
  Move         r25, r5
  // json({
  MakeMap      r26, 2, r22
  JSON         r26
  Return       r0

  // fun fact_rec(n: int): int {
func fact_rec (regs=9)
  // if n == 0 {
  Const        r1, 0
  Equal        r2, r0, r1
  JumpIfFalse  r2, L0
  // return 1
  Const        r3, 1
  Return       r3
L0:
  // return n * fact_rec(n - 1)
  Const        r5, 1
  Sub          r6, r0, r5
  Move         r4, r6
  Call         r7, fact_rec, r4
  Mul          r8, r0, r7
  Return       r8
  Return       r0

