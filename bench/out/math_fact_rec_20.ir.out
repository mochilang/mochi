func main (regs=21)
  // let n = 20
  Const        r0, 20
  // let repeat = 1000
  Const        r1, 1000
  // var last = 0
  Const        r2, 0
  Move         r3, r2
  // let start = now()
  Now          r4
  // for i in 0..repeat {
  Const        r2, 0
  Const        r1, 1000
  Move         r5, r2
L1:
  LessInt      r6, r5, r1
  JumpIfFalse  r6, L0
  // last = fact_rec(n)
  Const        r0, 20
  Move         r7, r0
  Call         r8, fact_rec, r7
  Move         r3, r8
  // for i in 0..repeat {
  Const        r9, 1
  AddInt       r10, r5, r9
  Move         r5, r10
  Jump         L1
L0:
  // let duration = (now() - start) / 1000
  Now          r11
  SubInt       r12, r11, r4
  Const        r1, 1000
  DivFloat     r13, r12, r1
  // "duration_us": duration,
  Const        r14, "duration_us"
  // "output": last,
  Const        r15, "output"
  // "duration_us": duration,
  Move         r16, r14
  Move         r17, r13
  // "output": last,
  Move         r18, r15
  Move         r19, r3
  // json({
  MakeMap      r20, 2, r16
  JSON         r20
  Return       r0

  // fun fact_rec(n: int): int {
func fact_rec (regs=8)
  // if n == 0 {
  Const        r1, 0
  Equal        r2, r0, r1
  JumpIfFalse  r2, L0
  // return 1
  Const        r3, 1
  Return       r3
L0:
  // return n * fact_rec(n - 1)
  Const        r3, 1
  Sub          r5, r0, r3
  Move         r4, r5
  Call         r6, fact_rec, r4
  Mul          r7, r0, r6
  Return       r7
