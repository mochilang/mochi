func main (regs=13)
  // let n = 30
  Const        r0, 30
  // let start = now()
  Now          r1
  // let result = fib(n)
  Move         r2, r0
  Call         r3, fib, r2
  // let duration = (now() - start) / 1000
  Now          r4
  SubInt       r5, r4, r1
  Const        r6, 1000
  DivInt       r7, r5, r6
  // "duration_us": duration,
  Const        r8, "duration_us"
  // "output": result,
  Const        r9, "output"
  // "duration_us": duration,
  Move         r10, r7
  // "output": result,
  Move         r11, r3
  // json({
  MakeMap      r12, 2, r8
  JSON         r12
  Return       r0

  // fun fib(n: int): int {
func fib (regs=11)
  // if n <= 1 { return n }
  Const        r1, 1
  LessEq       r2, r0, r1
  JumpIfFalse  r2, L0
  Return       r0
L0:
  // return fib(n - 1) + fib(n - 2)
  Sub          r3, r0, r1
  Call         r5, fib, r3
  Const        r7, 2
  Sub          r6, r0, r7
  Call         r9, fib, r6
  Add          r10, r5, r9
  Return       r10
  Return       r0
