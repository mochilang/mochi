func main (regs=9)
  // let n = 30
  Const        r0, 30
  // let start = now()
  Now          r1
  // let result = fib(n)
  Move         r2, r0
  Call         r3, fib, r2
  // let duration = (now() - start) / 1000
  Now          r2
  SubInt       r4, r2, r1
  Const        r1, 1000
  DivInt       r2, r4, r1
  // "duration_us": duration,
  Const        r4, "duration_us"
  // "output": result,
  Const        r1, "output"
  // "duration_us": duration,
  Move         r5, r4
  Move         r6, r2
  // "output": result,
  Move         r7, r1
  Move         r8, r3
  // json({
  MakeMap      r3, 2, r5
  JSON         r3
  Return       r0

  // fun fib(n: int): int {
func fib (regs=4)
  // if n <= 1 { return n }
  Const        r1, 1
L0:
  LessEq       r2, r0, r1
  JumpIfFalse  r2, L0
  Return       r0
  // return fib(n - 1) + fib(n - 2)
  Const        r1, 1
  Sub          r2, r0, r1
  Call         r1, fib, r2
  Const        r2, 2
  Sub          r3, r0, r2
  Call         r2, fib, r3
  Add          r3, r1, r2
  Return       r3
