func main (regs=23)
  // let n = 10
  Const        r0, 10
  // let repeat = 1000
  Const        r1, 1000
  // var last = 0
  Const        r3, 0
  // let start = now()
  Now          r4
  // for i in 0..repeat {
  Const        r6, 0
L1:
  Less         r7, r6, r1
  JumpIfFalse  r7, L0
  // last = fib(n)
  Move         r8, r0
  Call         r3, fib, r8
  // for i in 0..repeat {
  Const        r10, 1
  Add          r6, r6, r10
  Jump         L1
L0:
  // let duration = (now() - start) / 1000
  Now          r12
  SubInt       r13, r12, r4
  Const        r14, 1000
  DivInt       r15, r13, r14
  // "duration_us": duration,
  Const        r16, "duration_us"
  // "output": last,
  Const        r17, "output"
  // "duration_us": duration,
  Move         r18, r16
  Move         r19, r15
  // "output": last,
  Move         r20, r17
  Move         r21, r3
  // json({
  MakeMap      r22, 2, r18
  JSON         r22
  Return       r0

  // fun fib(n: int): int {
func fib (regs=11)
  // var a = 0
  Const        r2, 0
  // var b = 1
  Const        r4, 1
  // for i in 0..n {
  Const        r6, 0
L1:
  Less         r7, r6, r0
  JumpIfFalse  r7, L0
  // let tmp = a + b
  AddInt       r8, r2, r4
  // a = b
  Move         r2, r4
  // b = tmp
  Move         r4, r8
  // for i in 0..n {
  Const        r9, 1
  Add          r6, r6, r9
  Jump         L1
L0:
  // return a
  Return       r2
