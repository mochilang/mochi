// Generated by Mochi TypeScript compiler

function is_prime(n: number): boolean {
  if ((n < 2)) {
    return false;
  }
  for (let i: number = 2; i < (n - 1); i++) {
    if (((n % i) == 0)) {
      return false;
    }
  }
  return true;
}

let duration: number;
let end: number;
var last: number;
let n: number;
let repeat: number;
let start: number;

function main(): void {
  n = 20;
  repeat = 100;
  last = 0;
  start = performance.now() * 1000000;
  for (let r: number = 0; r < repeat; r++) {
    var count = 0;
    for (let i: number = 2; i < n; i++) {
      if (is_prime(i)) {
        count = count + 1;
      }
    }
    last = count;
  }
  end = performance.now() * 1000000;
  duration = Math.trunc((end - start) / 1000);
  console.log(_json({
    "duration_us": duration,
    "output": last,
  }));
}
function _json(v: any): string {
  function _sort(x: any): any {
    if (Array.isArray(x)) return x.map(_sort);
    if (x && typeof x === "object") {
      const keys = Object.keys(x).sort();
      const o: any = {};
      for (const k of keys) o[k] = _sort(x[k]);
      return o;
    }
    return x;
  }
  return JSON.stringify(_sort(v));
}

main();
