//go:build slow

package cs

import (
	"fmt"
	"os"
	"path/filepath"
	"runtime"
	"strings"
	"time"

	"mochi/ast"
)

var version string

func init() {
	_, file, _, _ := runtime.Caller(0)
	root := filepath.Join(filepath.Dir(file), "../../../..")
	if b, err := os.ReadFile(filepath.Join(root, "VERSION")); err == nil {
		version = strings.TrimSpace(string(b))
	} else {
		version = "unknown"
	}
}

func timestamp() string {
	loc := time.FixedZone("GMT+7", 7*3600)
	return time.Now().In(loc).Format("2006-01-02 15:04:05 MST")
}

// Print returns Mochi source code for the provided AST node.
func Print(n *ast.Node) (string, error) {
	if n == nil {
		return "", fmt.Errorf("nil node")
	}
	var out strings.Builder
	fmt.Fprintf(&out, "# Generated by a2mochi cs v%s on %s\n", version, timestamp())
	if err := ast.Fprint(&out, n); err != nil {
		return "", err
	}
	src := out.String()
	if !strings.HasSuffix(src, "\n") {
		src += "\n"
	}
	return src, nil
}
