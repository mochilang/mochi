//go:build slow

package fs

import (
	"fmt"
	"os"
	"path/filepath"
	"strings"
	"time"

	"mochi/ast"
)

// Print returns Mochi source code for the given AST node.
func Print(n *ast.Node) (string, error) {
	if n == nil {
		return "", fmt.Errorf("nil node")
	}
	var b strings.Builder
	fmt.Fprintf(&b, "// Generated by a2mochi %s on %s\n", version(), now())
	if err := ast.Fprint(&b, n); err != nil {
		return "", err
	}
	return b.String(), nil
}

func repoRoot() string {
	dir, _ := os.Getwd()
	for i := 0; i < 10; i++ {
		if _, err := os.Stat(filepath.Join(dir, "go.mod")); err == nil {
			return dir
		}
		parent := filepath.Dir(dir)
		if parent == dir {
			break
		}
		dir = parent
	}
	return ""
}

func version() string {
	root := repoRoot()
	if root == "" {
		return "dev"
	}
	b, err := os.ReadFile(filepath.Join(root, "VERSION"))
	if err != nil {
		return "dev"
	}
	return strings.TrimSpace(string(b))
}

func now() string {
	loc := time.FixedZone("GMT+7", 7*3600)
	return time.Now().In(loc).Format("2006-01-02 15:04 -0700")
}
