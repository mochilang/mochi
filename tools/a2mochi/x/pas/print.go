//go:build slow

package pas

import (
	"fmt"
	"os"
	"path/filepath"
	"runtime"
	"strings"
	"time"

	"mochi/ast"
)

var version string

func init() {
	_, file, _, _ := runtime.Caller(0)
	root := filepath.Join(filepath.Dir(file), "../../../..")
	if b, err := os.ReadFile(filepath.Join(root, "VERSION")); err == nil {
		version = strings.TrimSpace(string(b))
	} else {
		version = "unknown"
	}
}

// Print formats the AST node as Mochi source code with a header.
func Print(node *ast.Node) (string, error) {
	if node == nil {
		return "", fmt.Errorf("nil node")
	}
	var code strings.Builder
	if err := ast.Fprint(&code, node); err != nil {
		return "", err
	}
	now := time.Now().In(time.FixedZone("GMT+7", 7*3600)).Format("2006-01-02 15:04:05 MST")
	var out strings.Builder
	fmt.Fprintf(&out, "// Generated by a2mochi Pascal v%s on %s\n", strings.TrimSpace(version), now)
	out.WriteString(code.String())
	return out.String(), nil
}
